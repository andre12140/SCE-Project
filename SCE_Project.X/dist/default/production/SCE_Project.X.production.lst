

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Nov 09 20:36:15 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text47,local,class=CODE,merge=1,delta=2,group=3
    70                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    93                           	dabs	1,0x7E,2
    94  0000                     
    95                           ; Version 2.30
    96                           ; Generated 15/09/2020 GMT
    97                           ; 
    98                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC16F18875 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001C                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  008C                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0095                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  0110                     	;# 
   190  0110                     	;# 
   191  0111                     	;# 
   192  0112                     	;# 
   193  0112                     	;# 
   194  0113                     	;# 
   195  0114                     	;# 
   196  0114                     	;# 
   197  0115                     	;# 
   198  0116                     	;# 
   199  0116                     	;# 
   200  0117                     	;# 
   201  0119                     	;# 
   202  0119                     	;# 
   203  0119                     	;# 
   204  011A                     	;# 
   205  011A                     	;# 
   206  011A                     	;# 
   207  011B                     	;# 
   208  011B                     	;# 
   209  011B                     	;# 
   210  011B                     	;# 
   211  011B                     	;# 
   212  011C                     	;# 
   213  011C                     	;# 
   214  011C                     	;# 
   215  011D                     	;# 
   216  011D                     	;# 
   217  011D                     	;# 
   218  011E                     	;# 
   219  011E                     	;# 
   220  011E                     	;# 
   221  011F                     	;# 
   222  011F                     	;# 
   223  011F                     	;# 
   224  011F                     	;# 
   225  011F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  018E                     	;# 
   229  018F                     	;# 
   230  0190                     	;# 
   231  0191                     	;# 
   232  0192                     	;# 
   233  0196                     	;# 
   234  0197                     	;# 
   235  0198                     	;# 
   236  0199                     	;# 
   237  019A                     	;# 
   238  019B                     	;# 
   239  019C                     	;# 
   240  020C                     	;# 
   241  020C                     	;# 
   242  020D                     	;# 
   243  020E                     	;# 
   244  020F                     	;# 
   245  020F                     	;# 
   246  0210                     	;# 
   247  0210                     	;# 
   248  0211                     	;# 
   249  0211                     	;# 
   250  0212                     	;# 
   251  0212                     	;# 
   252  0213                     	;# 
   253  0214                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0216                     	;# 
   257  0216                     	;# 
   258  0217                     	;# 
   259  0217                     	;# 
   260  0218                     	;# 
   261  0218                     	;# 
   262  0219                     	;# 
   263  021A                     	;# 
   264  021B                     	;# 
   265  021B                     	;# 
   266  021C                     	;# 
   267  021C                     	;# 
   268  021D                     	;# 
   269  021D                     	;# 
   270  021E                     	;# 
   271  021F                     	;# 
   272  028C                     	;# 
   273  028C                     	;# 
   274  028D                     	;# 
   275  028D                     	;# 
   276  028E                     	;# 
   277  028F                     	;# 
   278  0290                     	;# 
   279  0290                     	;# 
   280  0291                     	;# 
   281  0292                     	;# 
   282  0292                     	;# 
   283  0293                     	;# 
   284  0293                     	;# 
   285  0294                     	;# 
   286  0295                     	;# 
   287  0296                     	;# 
   288  0296                     	;# 
   289  0297                     	;# 
   290  0298                     	;# 
   291  0298                     	;# 
   292  0299                     	;# 
   293  0299                     	;# 
   294  029A                     	;# 
   295  029B                     	;# 
   296  029C                     	;# 
   297  029C                     	;# 
   298  029D                     	;# 
   299  030C                     	;# 
   300  030C                     	;# 
   301  030D                     	;# 
   302  030E                     	;# 
   303  030F                     	;# 
   304  0310                     	;# 
   305  0310                     	;# 
   306  0311                     	;# 
   307  0312                     	;# 
   308  0313                     	;# 
   309  0314                     	;# 
   310  0314                     	;# 
   311  0315                     	;# 
   312  0316                     	;# 
   313  0317                     	;# 
   314  0318                     	;# 
   315  0318                     	;# 
   316  0319                     	;# 
   317  031A                     	;# 
   318  031B                     	;# 
   319  031C                     	;# 
   320  031C                     	;# 
   321  031D                     	;# 
   322  031E                     	;# 
   323  031F                     	;# 
   324  038C                     	;# 
   325  038C                     	;# 
   326  038D                     	;# 
   327  038E                     	;# 
   328  0390                     	;# 
   329  0390                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  040C                     	;# 
   333  040D                     	;# 
   334  040E                     	;# 
   335  040F                     	;# 
   336  0410                     	;# 
   337  0411                     	;# 
   338  0416                     	;# 
   339  0416                     	;# 
   340  0417                     	;# 
   341  0418                     	;# 
   342  0418                     	;# 
   343  0419                     	;# 
   344  041A                     	;# 
   345  041A                     	;# 
   346  041B                     	;# 
   347  041C                     	;# 
   348  041C                     	;# 
   349  041D                     	;# 
   350  041E                     	;# 
   351  041F                     	;# 
   352  048C                     	;# 
   353  048C                     	;# 
   354  048D                     	;# 
   355  048E                     	;# 
   356  048F                     	;# 
   357  048F                     	;# 
   358  0490                     	;# 
   359  0491                     	;# 
   360  0492                     	;# 
   361  0492                     	;# 
   362  0493                     	;# 
   363  0494                     	;# 
   364  0495                     	;# 
   365  0495                     	;# 
   366  0496                     	;# 
   367  0497                     	;# 
   368  0498                     	;# 
   369  0499                     	;# 
   370  049A                     	;# 
   371  049B                     	;# 
   372  049C                     	;# 
   373  049D                     	;# 
   374  050C                     	;# 
   375  050C                     	;# 
   376  050D                     	;# 
   377  050E                     	;# 
   378  050F                     	;# 
   379  050F                     	;# 
   380  0510                     	;# 
   381  0511                     	;# 
   382  0512                     	;# 
   383  0512                     	;# 
   384  0513                     	;# 
   385  0514                     	;# 
   386  0515                     	;# 
   387  0515                     	;# 
   388  0516                     	;# 
   389  0517                     	;# 
   390  0518                     	;# 
   391  0519                     	;# 
   392  051A                     	;# 
   393  051B                     	;# 
   394  051C                     	;# 
   395  051D                     	;# 
   396  058C                     	;# 
   397  058C                     	;# 
   398  058D                     	;# 
   399  058E                     	;# 
   400  058F                     	;# 
   401  058F                     	;# 
   402  0590                     	;# 
   403  0591                     	;# 
   404  0592                     	;# 
   405  0593                     	;# 
   406  060C                     	;# 
   407  060D                     	;# 
   408  060E                     	;# 
   409  060F                     	;# 
   410  0610                     	;# 
   411  0611                     	;# 
   412  0612                     	;# 
   413  0613                     	;# 
   414  0614                     	;# 
   415  0616                     	;# 
   416  0617                     	;# 
   417  0618                     	;# 
   418  0619                     	;# 
   419  061A                     	;# 
   420  061B                     	;# 
   421  061C                     	;# 
   422  061D                     	;# 
   423  061E                     	;# 
   424  068C                     	;# 
   425  068D                     	;# 
   426  068E                     	;# 
   427  068F                     	;# 
   428  0690                     	;# 
   429  0691                     	;# 
   430  0692                     	;# 
   431  0693                     	;# 
   432  0694                     	;# 
   433  070C                     	;# 
   434  070D                     	;# 
   435  070E                     	;# 
   436  070F                     	;# 
   437  0710                     	;# 
   438  0711                     	;# 
   439  0712                     	;# 
   440  0713                     	;# 
   441  0714                     	;# 
   442  0716                     	;# 
   443  0717                     	;# 
   444  0718                     	;# 
   445  0719                     	;# 
   446  071A                     	;# 
   447  071B                     	;# 
   448  071C                     	;# 
   449  071D                     	;# 
   450  071E                     	;# 
   451  0796                     	;# 
   452  0797                     	;# 
   453  0798                     	;# 
   454  0799                     	;# 
   455  079A                     	;# 
   456  079B                     	;# 
   457  080C                     	;# 
   458  080D                     	;# 
   459  080E                     	;# 
   460  080F                     	;# 
   461  0810                     	;# 
   462  0811                     	;# 
   463  0812                     	;# 
   464  0813                     	;# 
   465  0814                     	;# 
   466  081A                     	;# 
   467  081B                     	;# 
   468  081C                     	;# 
   469  081D                     	;# 
   470  081E                     	;# 
   471  081F                     	;# 
   472  088C                     	;# 
   473  088D                     	;# 
   474  088E                     	;# 
   475  088F                     	;# 
   476  0890                     	;# 
   477  0891                     	;# 
   478  0892                     	;# 
   479  0893                     	;# 
   480  0895                     	;# 
   481  0896                     	;# 
   482  0897                     	;# 
   483  0898                     	;# 
   484  0899                     	;# 
   485  089A                     	;# 
   486  089B                     	;# 
   487  090C                     	;# 
   488  090E                     	;# 
   489  090F                     	;# 
   490  091F                     	;# 
   491  091F                     	;# 
   492  098F                     	;# 
   493  098F                     	;# 
   494  0990                     	;# 
   495  0991                     	;# 
   496  0992                     	;# 
   497  0993                     	;# 
   498  0994                     	;# 
   499  0995                     	;# 
   500  0996                     	;# 
   501  0997                     	;# 
   502  0E0F                     	;# 
   503  0E10                     	;# 
   504  0E11                     	;# 
   505  0E12                     	;# 
   506  0E13                     	;# 
   507  0E14                     	;# 
   508  0E15                     	;# 
   509  0E16                     	;# 
   510  0E17                     	;# 
   511  0E18                     	;# 
   512  0E19                     	;# 
   513  0E1A                     	;# 
   514  0E1B                     	;# 
   515  0E1C                     	;# 
   516  0E1D                     	;# 
   517  0E1E                     	;# 
   518  0E1F                     	;# 
   519  0E20                     	;# 
   520  0E21                     	;# 
   521  0E22                     	;# 
   522  0E23                     	;# 
   523  0E24                     	;# 
   524  0E25                     	;# 
   525  0E26                     	;# 
   526  0E27                     	;# 
   527  0E28                     	;# 
   528  0E29                     	;# 
   529  0E2A                     	;# 
   530  0E2B                     	;# 
   531  0E2C                     	;# 
   532  0E2D                     	;# 
   533  0E2E                     	;# 
   534  0E2F                     	;# 
   535  0E30                     	;# 
   536  0E31                     	;# 
   537  0E32                     	;# 
   538  0E33                     	;# 
   539  0E34                     	;# 
   540  0E35                     	;# 
   541  0E36                     	;# 
   542  0E37                     	;# 
   543  0E8F                     	;# 
   544  0E90                     	;# 
   545  0E91                     	;# 
   546  0E92                     	;# 
   547  0E93                     	;# 
   548  0E94                     	;# 
   549  0E95                     	;# 
   550  0E96                     	;# 
   551  0E97                     	;# 
   552  0E9C                     	;# 
   553  0E9D                     	;# 
   554  0E9E                     	;# 
   555  0EA1                     	;# 
   556  0EA2                     	;# 
   557  0EA3                     	;# 
   558  0EA4                     	;# 
   559  0EA5                     	;# 
   560  0EA9                     	;# 
   561  0EAA                     	;# 
   562  0EAB                     	;# 
   563  0EAC                     	;# 
   564  0EB1                     	;# 
   565  0EB2                     	;# 
   566  0EB3                     	;# 
   567  0EB8                     	;# 
   568  0EB9                     	;# 
   569  0EBA                     	;# 
   570  0EBB                     	;# 
   571  0EBC                     	;# 
   572  0EBD                     	;# 
   573  0EBE                     	;# 
   574  0EC3                     	;# 
   575  0EC5                     	;# 
   576  0EC6                     	;# 
   577  0EC7                     	;# 
   578  0EC8                     	;# 
   579  0EC9                     	;# 
   580  0ECA                     	;# 
   581  0ECB                     	;# 
   582  0ECC                     	;# 
   583  0F10                     	;# 
   584  0F11                     	;# 
   585  0F12                     	;# 
   586  0F13                     	;# 
   587  0F14                     	;# 
   588  0F15                     	;# 
   589  0F16                     	;# 
   590  0F17                     	;# 
   591  0F18                     	;# 
   592  0F19                     	;# 
   593  0F1A                     	;# 
   594  0F1B                     	;# 
   595  0F1C                     	;# 
   596  0F1D                     	;# 
   597  0F1E                     	;# 
   598  0F1F                     	;# 
   599  0F20                     	;# 
   600  0F21                     	;# 
   601  0F22                     	;# 
   602  0F23                     	;# 
   603  0F24                     	;# 
   604  0F25                     	;# 
   605  0F26                     	;# 
   606  0F27                     	;# 
   607  0F28                     	;# 
   608  0F29                     	;# 
   609  0F2A                     	;# 
   610  0F2B                     	;# 
   611  0F2C                     	;# 
   612  0F2D                     	;# 
   613  0F2E                     	;# 
   614  0F2F                     	;# 
   615  0F30                     	;# 
   616  0F31                     	;# 
   617  0F32                     	;# 
   618  0F38                     	;# 
   619  0F39                     	;# 
   620  0F3A                     	;# 
   621  0F3B                     	;# 
   622  0F3C                     	;# 
   623  0F3D                     	;# 
   624  0F3E                     	;# 
   625  0F3F                     	;# 
   626  0F40                     	;# 
   627  0F41                     	;# 
   628  0F43                     	;# 
   629  0F44                     	;# 
   630  0F45                     	;# 
   631  0F46                     	;# 
   632  0F47                     	;# 
   633  0F48                     	;# 
   634  0F49                     	;# 
   635  0F4A                     	;# 
   636  0F4B                     	;# 
   637  0F4C                     	;# 
   638  0F4E                     	;# 
   639  0F4F                     	;# 
   640  0F50                     	;# 
   641  0F51                     	;# 
   642  0F52                     	;# 
   643  0F53                     	;# 
   644  0F54                     	;# 
   645  0F55                     	;# 
   646  0F56                     	;# 
   647  0F57                     	;# 
   648  0F59                     	;# 
   649  0F5A                     	;# 
   650  0F5B                     	;# 
   651  0F5C                     	;# 
   652  0F5D                     	;# 
   653  0F61                     	;# 
   654  0F62                     	;# 
   655  0F64                     	;# 
   656  0F65                     	;# 
   657  0F66                     	;# 
   658  0F67                     	;# 
   659  0F68                     	;# 
   660  0F69                     	;# 
   661  0F6A                     	;# 
   662  0F6B                     	;# 
   663  0F6C                     	;# 
   664  0F6D                     	;# 
   665  0FE4                     	;# 
   666  0FE5                     	;# 
   667  0FE6                     	;# 
   668  0FE7                     	;# 
   669  0FE8                     	;# 
   670  0FE9                     	;# 
   671  0FEA                     	;# 
   672  0FEB                     	;# 
   673  0FED                     	;# 
   674  0FEE                     	;# 
   675  0FEF                     	;# 
   676  0000                     	;# 
   677  0001                     	;# 
   678  0002                     	;# 
   679  0003                     	;# 
   680  0004                     	;# 
   681  0005                     	;# 
   682  0006                     	;# 
   683  0007                     	;# 
   684  0008                     	;# 
   685  0009                     	;# 
   686  000A                     	;# 
   687  000B                     	;# 
   688  000C                     	;# 
   689  000D                     	;# 
   690  000E                     	;# 
   691  000F                     	;# 
   692  0010                     	;# 
   693  0011                     	;# 
   694  0012                     	;# 
   695  0013                     	;# 
   696  0014                     	;# 
   697  0015                     	;# 
   698  0016                     	;# 
   699  0017                     	;# 
   700  0018                     	;# 
   701  0019                     	;# 
   702  001A                     	;# 
   703  001C                     	;# 
   704  001C                     	;# 
   705  001D                     	;# 
   706  001D                     	;# 
   707  001E                     	;# 
   708  001F                     	;# 
   709  008C                     	;# 
   710  008C                     	;# 
   711  008D                     	;# 
   712  008E                     	;# 
   713  008E                     	;# 
   714  008F                     	;# 
   715  0090                     	;# 
   716  0090                     	;# 
   717  0091                     	;# 
   718  0093                     	;# 
   719  0094                     	;# 
   720  0095                     	;# 
   721  0096                     	;# 
   722  0097                     	;# 
   723  0098                     	;# 
   724  0099                     	;# 
   725  009A                     	;# 
   726  009B                     	;# 
   727  009C                     	;# 
   728  009D                     	;# 
   729  009E                     	;# 
   730  010C                     	;# 
   731  010D                     	;# 
   732  010E                     	;# 
   733  010E                     	;# 
   734  010F                     	;# 
   735  0110                     	;# 
   736  0110                     	;# 
   737  0111                     	;# 
   738  0112                     	;# 
   739  0112                     	;# 
   740  0113                     	;# 
   741  0114                     	;# 
   742  0114                     	;# 
   743  0115                     	;# 
   744  0116                     	;# 
   745  0116                     	;# 
   746  0117                     	;# 
   747  0119                     	;# 
   748  0119                     	;# 
   749  0119                     	;# 
   750  011A                     	;# 
   751  011A                     	;# 
   752  011A                     	;# 
   753  011B                     	;# 
   754  011B                     	;# 
   755  011B                     	;# 
   756  011B                     	;# 
   757  011B                     	;# 
   758  011C                     	;# 
   759  011C                     	;# 
   760  011C                     	;# 
   761  011D                     	;# 
   762  011D                     	;# 
   763  011D                     	;# 
   764  011E                     	;# 
   765  011E                     	;# 
   766  011E                     	;# 
   767  011F                     	;# 
   768  011F                     	;# 
   769  011F                     	;# 
   770  011F                     	;# 
   771  011F                     	;# 
   772  018C                     	;# 
   773  018D                     	;# 
   774  018E                     	;# 
   775  018F                     	;# 
   776  0190                     	;# 
   777  0191                     	;# 
   778  0192                     	;# 
   779  0196                     	;# 
   780  0197                     	;# 
   781  0198                     	;# 
   782  0199                     	;# 
   783  019A                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  020C                     	;# 
   787  020C                     	;# 
   788  020D                     	;# 
   789  020E                     	;# 
   790  020F                     	;# 
   791  020F                     	;# 
   792  0210                     	;# 
   793  0210                     	;# 
   794  0211                     	;# 
   795  0211                     	;# 
   796  0212                     	;# 
   797  0212                     	;# 
   798  0213                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0216                     	;# 
   803  0216                     	;# 
   804  0217                     	;# 
   805  0217                     	;# 
   806  0218                     	;# 
   807  0218                     	;# 
   808  0219                     	;# 
   809  021A                     	;# 
   810  021B                     	;# 
   811  021B                     	;# 
   812  021C                     	;# 
   813  021C                     	;# 
   814  021D                     	;# 
   815  021D                     	;# 
   816  021E                     	;# 
   817  021F                     	;# 
   818  028C                     	;# 
   819  028C                     	;# 
   820  028D                     	;# 
   821  028D                     	;# 
   822  028E                     	;# 
   823  028F                     	;# 
   824  0290                     	;# 
   825  0290                     	;# 
   826  0291                     	;# 
   827  0292                     	;# 
   828  0292                     	;# 
   829  0293                     	;# 
   830  0293                     	;# 
   831  0294                     	;# 
   832  0295                     	;# 
   833  0296                     	;# 
   834  0296                     	;# 
   835  0297                     	;# 
   836  0298                     	;# 
   837  0298                     	;# 
   838  0299                     	;# 
   839  0299                     	;# 
   840  029A                     	;# 
   841  029B                     	;# 
   842  029C                     	;# 
   843  029C                     	;# 
   844  029D                     	;# 
   845  030C                     	;# 
   846  030C                     	;# 
   847  030D                     	;# 
   848  030E                     	;# 
   849  030F                     	;# 
   850  0310                     	;# 
   851  0310                     	;# 
   852  0311                     	;# 
   853  0312                     	;# 
   854  0313                     	;# 
   855  0314                     	;# 
   856  0314                     	;# 
   857  0315                     	;# 
   858  0316                     	;# 
   859  0317                     	;# 
   860  0318                     	;# 
   861  0318                     	;# 
   862  0319                     	;# 
   863  031A                     	;# 
   864  031B                     	;# 
   865  031C                     	;# 
   866  031C                     	;# 
   867  031D                     	;# 
   868  031E                     	;# 
   869  031F                     	;# 
   870  038C                     	;# 
   871  038C                     	;# 
   872  038D                     	;# 
   873  038E                     	;# 
   874  0390                     	;# 
   875  0390                     	;# 
   876  0391                     	;# 
   877  0392                     	;# 
   878  040C                     	;# 
   879  040D                     	;# 
   880  040E                     	;# 
   881  040F                     	;# 
   882  0410                     	;# 
   883  0411                     	;# 
   884  0416                     	;# 
   885  0416                     	;# 
   886  0417                     	;# 
   887  0418                     	;# 
   888  0418                     	;# 
   889  0419                     	;# 
   890  041A                     	;# 
   891  041A                     	;# 
   892  041B                     	;# 
   893  041C                     	;# 
   894  041C                     	;# 
   895  041D                     	;# 
   896  041E                     	;# 
   897  041F                     	;# 
   898  048C                     	;# 
   899  048C                     	;# 
   900  048D                     	;# 
   901  048E                     	;# 
   902  048F                     	;# 
   903  048F                     	;# 
   904  0490                     	;# 
   905  0491                     	;# 
   906  0492                     	;# 
   907  0492                     	;# 
   908  0493                     	;# 
   909  0494                     	;# 
   910  0495                     	;# 
   911  0495                     	;# 
   912  0496                     	;# 
   913  0497                     	;# 
   914  0498                     	;# 
   915  0499                     	;# 
   916  049A                     	;# 
   917  049B                     	;# 
   918  049C                     	;# 
   919  049D                     	;# 
   920  050C                     	;# 
   921  050C                     	;# 
   922  050D                     	;# 
   923  050E                     	;# 
   924  050F                     	;# 
   925  050F                     	;# 
   926  0510                     	;# 
   927  0511                     	;# 
   928  0512                     	;# 
   929  0512                     	;# 
   930  0513                     	;# 
   931  0514                     	;# 
   932  0515                     	;# 
   933  0515                     	;# 
   934  0516                     	;# 
   935  0517                     	;# 
   936  0518                     	;# 
   937  0519                     	;# 
   938  051A                     	;# 
   939  051B                     	;# 
   940  051C                     	;# 
   941  051D                     	;# 
   942  058C                     	;# 
   943  058C                     	;# 
   944  058D                     	;# 
   945  058E                     	;# 
   946  058F                     	;# 
   947  058F                     	;# 
   948  0590                     	;# 
   949  0591                     	;# 
   950  0592                     	;# 
   951  0593                     	;# 
   952  060C                     	;# 
   953  060D                     	;# 
   954  060E                     	;# 
   955  060F                     	;# 
   956  0610                     	;# 
   957  0611                     	;# 
   958  0612                     	;# 
   959  0613                     	;# 
   960  0614                     	;# 
   961  0616                     	;# 
   962  0617                     	;# 
   963  0618                     	;# 
   964  0619                     	;# 
   965  061A                     	;# 
   966  061B                     	;# 
   967  061C                     	;# 
   968  061D                     	;# 
   969  061E                     	;# 
   970  068C                     	;# 
   971  068D                     	;# 
   972  068E                     	;# 
   973  068F                     	;# 
   974  0690                     	;# 
   975  0691                     	;# 
   976  0692                     	;# 
   977  0693                     	;# 
   978  0694                     	;# 
   979  070C                     	;# 
   980  070D                     	;# 
   981  070E                     	;# 
   982  070F                     	;# 
   983  0710                     	;# 
   984  0711                     	;# 
   985  0712                     	;# 
   986  0713                     	;# 
   987  0714                     	;# 
   988  0716                     	;# 
   989  0717                     	;# 
   990  0718                     	;# 
   991  0719                     	;# 
   992  071A                     	;# 
   993  071B                     	;# 
   994  071C                     	;# 
   995  071D                     	;# 
   996  071E                     	;# 
   997  0796                     	;# 
   998  0797                     	;# 
   999  0798                     	;# 
  1000  0799                     	;# 
  1001  079A                     	;# 
  1002  079B                     	;# 
  1003  080C                     	;# 
  1004  080D                     	;# 
  1005  080E                     	;# 
  1006  080F                     	;# 
  1007  0810                     	;# 
  1008  0811                     	;# 
  1009  0812                     	;# 
  1010  0813                     	;# 
  1011  0814                     	;# 
  1012  081A                     	;# 
  1013  081B                     	;# 
  1014  081C                     	;# 
  1015  081D                     	;# 
  1016  081E                     	;# 
  1017  081F                     	;# 
  1018  088C                     	;# 
  1019  088D                     	;# 
  1020  088E                     	;# 
  1021  088F                     	;# 
  1022  0890                     	;# 
  1023  0891                     	;# 
  1024  0892                     	;# 
  1025  0893                     	;# 
  1026  0895                     	;# 
  1027  0896                     	;# 
  1028  0897                     	;# 
  1029  0898                     	;# 
  1030  0899                     	;# 
  1031  089A                     	;# 
  1032  089B                     	;# 
  1033  090C                     	;# 
  1034  090E                     	;# 
  1035  090F                     	;# 
  1036  091F                     	;# 
  1037  091F                     	;# 
  1038  098F                     	;# 
  1039  098F                     	;# 
  1040  0990                     	;# 
  1041  0991                     	;# 
  1042  0992                     	;# 
  1043  0993                     	;# 
  1044  0994                     	;# 
  1045  0995                     	;# 
  1046  0996                     	;# 
  1047  0997                     	;# 
  1048  0E0F                     	;# 
  1049  0E10                     	;# 
  1050  0E11                     	;# 
  1051  0E12                     	;# 
  1052  0E13                     	;# 
  1053  0E14                     	;# 
  1054  0E15                     	;# 
  1055  0E16                     	;# 
  1056  0E17                     	;# 
  1057  0E18                     	;# 
  1058  0E19                     	;# 
  1059  0E1A                     	;# 
  1060  0E1B                     	;# 
  1061  0E1C                     	;# 
  1062  0E1D                     	;# 
  1063  0E1E                     	;# 
  1064  0E1F                     	;# 
  1065  0E20                     	;# 
  1066  0E21                     	;# 
  1067  0E22                     	;# 
  1068  0E23                     	;# 
  1069  0E24                     	;# 
  1070  0E25                     	;# 
  1071  0E26                     	;# 
  1072  0E27                     	;# 
  1073  0E28                     	;# 
  1074  0E29                     	;# 
  1075  0E2A                     	;# 
  1076  0E2B                     	;# 
  1077  0E2C                     	;# 
  1078  0E2D                     	;# 
  1079  0E2E                     	;# 
  1080  0E2F                     	;# 
  1081  0E30                     	;# 
  1082  0E31                     	;# 
  1083  0E32                     	;# 
  1084  0E33                     	;# 
  1085  0E34                     	;# 
  1086  0E35                     	;# 
  1087  0E36                     	;# 
  1088  0E37                     	;# 
  1089  0E8F                     	;# 
  1090  0E90                     	;# 
  1091  0E91                     	;# 
  1092  0E92                     	;# 
  1093  0E93                     	;# 
  1094  0E94                     	;# 
  1095  0E95                     	;# 
  1096  0E96                     	;# 
  1097  0E97                     	;# 
  1098  0E9C                     	;# 
  1099  0E9D                     	;# 
  1100  0E9E                     	;# 
  1101  0EA1                     	;# 
  1102  0EA2                     	;# 
  1103  0EA3                     	;# 
  1104  0EA4                     	;# 
  1105  0EA5                     	;# 
  1106  0EA9                     	;# 
  1107  0EAA                     	;# 
  1108  0EAB                     	;# 
  1109  0EAC                     	;# 
  1110  0EB1                     	;# 
  1111  0EB2                     	;# 
  1112  0EB3                     	;# 
  1113  0EB8                     	;# 
  1114  0EB9                     	;# 
  1115  0EBA                     	;# 
  1116  0EBB                     	;# 
  1117  0EBC                     	;# 
  1118  0EBD                     	;# 
  1119  0EBE                     	;# 
  1120  0EC3                     	;# 
  1121  0EC5                     	;# 
  1122  0EC6                     	;# 
  1123  0EC7                     	;# 
  1124  0EC8                     	;# 
  1125  0EC9                     	;# 
  1126  0ECA                     	;# 
  1127  0ECB                     	;# 
  1128  0ECC                     	;# 
  1129  0F10                     	;# 
  1130  0F11                     	;# 
  1131  0F12                     	;# 
  1132  0F13                     	;# 
  1133  0F14                     	;# 
  1134  0F15                     	;# 
  1135  0F16                     	;# 
  1136  0F17                     	;# 
  1137  0F18                     	;# 
  1138  0F19                     	;# 
  1139  0F1A                     	;# 
  1140  0F1B                     	;# 
  1141  0F1C                     	;# 
  1142  0F1D                     	;# 
  1143  0F1E                     	;# 
  1144  0F1F                     	;# 
  1145  0F20                     	;# 
  1146  0F21                     	;# 
  1147  0F22                     	;# 
  1148  0F23                     	;# 
  1149  0F24                     	;# 
  1150  0F25                     	;# 
  1151  0F26                     	;# 
  1152  0F27                     	;# 
  1153  0F28                     	;# 
  1154  0F29                     	;# 
  1155  0F2A                     	;# 
  1156  0F2B                     	;# 
  1157  0F2C                     	;# 
  1158  0F2D                     	;# 
  1159  0F2E                     	;# 
  1160  0F2F                     	;# 
  1161  0F30                     	;# 
  1162  0F31                     	;# 
  1163  0F32                     	;# 
  1164  0F38                     	;# 
  1165  0F39                     	;# 
  1166  0F3A                     	;# 
  1167  0F3B                     	;# 
  1168  0F3C                     	;# 
  1169  0F3D                     	;# 
  1170  0F3E                     	;# 
  1171  0F3F                     	;# 
  1172  0F40                     	;# 
  1173  0F41                     	;# 
  1174  0F43                     	;# 
  1175  0F44                     	;# 
  1176  0F45                     	;# 
  1177  0F46                     	;# 
  1178  0F47                     	;# 
  1179  0F48                     	;# 
  1180  0F49                     	;# 
  1181  0F4A                     	;# 
  1182  0F4B                     	;# 
  1183  0F4C                     	;# 
  1184  0F4E                     	;# 
  1185  0F4F                     	;# 
  1186  0F50                     	;# 
  1187  0F51                     	;# 
  1188  0F52                     	;# 
  1189  0F53                     	;# 
  1190  0F54                     	;# 
  1191  0F55                     	;# 
  1192  0F56                     	;# 
  1193  0F57                     	;# 
  1194  0F59                     	;# 
  1195  0F5A                     	;# 
  1196  0F5B                     	;# 
  1197  0F5C                     	;# 
  1198  0F5D                     	;# 
  1199  0F61                     	;# 
  1200  0F62                     	;# 
  1201  0F64                     	;# 
  1202  0F65                     	;# 
  1203  0F66                     	;# 
  1204  0F67                     	;# 
  1205  0F68                     	;# 
  1206  0F69                     	;# 
  1207  0F6A                     	;# 
  1208  0F6B                     	;# 
  1209  0F6C                     	;# 
  1210  0F6D                     	;# 
  1211  0FE4                     	;# 
  1212  0FE5                     	;# 
  1213  0FE6                     	;# 
  1214  0FE7                     	;# 
  1215  0FE8                     	;# 
  1216  0FE9                     	;# 
  1217  0FEA                     	;# 
  1218  0FEB                     	;# 
  1219  0FED                     	;# 
  1220  0FEE                     	;# 
  1221  0FEF                     	;# 
  1222  0000                     	;# 
  1223  0001                     	;# 
  1224  0002                     	;# 
  1225  0003                     	;# 
  1226  0004                     	;# 
  1227  0005                     	;# 
  1228  0006                     	;# 
  1229  0007                     	;# 
  1230  0008                     	;# 
  1231  0009                     	;# 
  1232  000A                     	;# 
  1233  000B                     	;# 
  1234  000C                     	;# 
  1235  000D                     	;# 
  1236  000E                     	;# 
  1237  000F                     	;# 
  1238  0010                     	;# 
  1239  0011                     	;# 
  1240  0012                     	;# 
  1241  0013                     	;# 
  1242  0014                     	;# 
  1243  0015                     	;# 
  1244  0016                     	;# 
  1245  0017                     	;# 
  1246  0018                     	;# 
  1247  0019                     	;# 
  1248  001A                     	;# 
  1249  001C                     	;# 
  1250  001C                     	;# 
  1251  001D                     	;# 
  1252  001D                     	;# 
  1253  001E                     	;# 
  1254  001F                     	;# 
  1255  008C                     	;# 
  1256  008C                     	;# 
  1257  008D                     	;# 
  1258  008E                     	;# 
  1259  008E                     	;# 
  1260  008F                     	;# 
  1261  0090                     	;# 
  1262  0090                     	;# 
  1263  0091                     	;# 
  1264  0093                     	;# 
  1265  0094                     	;# 
  1266  0095                     	;# 
  1267  0096                     	;# 
  1268  0097                     	;# 
  1269  0098                     	;# 
  1270  0099                     	;# 
  1271  009A                     	;# 
  1272  009B                     	;# 
  1273  009C                     	;# 
  1274  009D                     	;# 
  1275  009E                     	;# 
  1276  010C                     	;# 
  1277  010D                     	;# 
  1278  010E                     	;# 
  1279  010E                     	;# 
  1280  010F                     	;# 
  1281  0110                     	;# 
  1282  0110                     	;# 
  1283  0111                     	;# 
  1284  0112                     	;# 
  1285  0112                     	;# 
  1286  0113                     	;# 
  1287  0114                     	;# 
  1288  0114                     	;# 
  1289  0115                     	;# 
  1290  0116                     	;# 
  1291  0116                     	;# 
  1292  0117                     	;# 
  1293  0119                     	;# 
  1294  0119                     	;# 
  1295  0119                     	;# 
  1296  011A                     	;# 
  1297  011A                     	;# 
  1298  011A                     	;# 
  1299  011B                     	;# 
  1300  011B                     	;# 
  1301  011B                     	;# 
  1302  011B                     	;# 
  1303  011B                     	;# 
  1304  011C                     	;# 
  1305  011C                     	;# 
  1306  011C                     	;# 
  1307  011D                     	;# 
  1308  011D                     	;# 
  1309  011D                     	;# 
  1310  011E                     	;# 
  1311  011E                     	;# 
  1312  011E                     	;# 
  1313  011F                     	;# 
  1314  011F                     	;# 
  1315  011F                     	;# 
  1316  011F                     	;# 
  1317  011F                     	;# 
  1318  018C                     	;# 
  1319  018D                     	;# 
  1320  018E                     	;# 
  1321  018F                     	;# 
  1322  0190                     	;# 
  1323  0191                     	;# 
  1324  0192                     	;# 
  1325  0196                     	;# 
  1326  0197                     	;# 
  1327  0198                     	;# 
  1328  0199                     	;# 
  1329  019A                     	;# 
  1330  019B                     	;# 
  1331  019C                     	;# 
  1332  020C                     	;# 
  1333  020C                     	;# 
  1334  020D                     	;# 
  1335  020E                     	;# 
  1336  020F                     	;# 
  1337  020F                     	;# 
  1338  0210                     	;# 
  1339  0210                     	;# 
  1340  0211                     	;# 
  1341  0211                     	;# 
  1342  0212                     	;# 
  1343  0212                     	;# 
  1344  0213                     	;# 
  1345  0214                     	;# 
  1346  0215                     	;# 
  1347  0215                     	;# 
  1348  0216                     	;# 
  1349  0216                     	;# 
  1350  0217                     	;# 
  1351  0217                     	;# 
  1352  0218                     	;# 
  1353  0218                     	;# 
  1354  0219                     	;# 
  1355  021A                     	;# 
  1356  021B                     	;# 
  1357  021B                     	;# 
  1358  021C                     	;# 
  1359  021C                     	;# 
  1360  021D                     	;# 
  1361  021D                     	;# 
  1362  021E                     	;# 
  1363  021F                     	;# 
  1364  028C                     	;# 
  1365  028C                     	;# 
  1366  028D                     	;# 
  1367  028D                     	;# 
  1368  028E                     	;# 
  1369  028F                     	;# 
  1370  0290                     	;# 
  1371  0290                     	;# 
  1372  0291                     	;# 
  1373  0292                     	;# 
  1374  0292                     	;# 
  1375  0293                     	;# 
  1376  0293                     	;# 
  1377  0294                     	;# 
  1378  0295                     	;# 
  1379  0296                     	;# 
  1380  0296                     	;# 
  1381  0297                     	;# 
  1382  0298                     	;# 
  1383  0298                     	;# 
  1384  0299                     	;# 
  1385  0299                     	;# 
  1386  029A                     	;# 
  1387  029B                     	;# 
  1388  029C                     	;# 
  1389  029C                     	;# 
  1390  029D                     	;# 
  1391  030C                     	;# 
  1392  030C                     	;# 
  1393  030D                     	;# 
  1394  030E                     	;# 
  1395  030F                     	;# 
  1396  0310                     	;# 
  1397  0310                     	;# 
  1398  0311                     	;# 
  1399  0312                     	;# 
  1400  0313                     	;# 
  1401  0314                     	;# 
  1402  0314                     	;# 
  1403  0315                     	;# 
  1404  0316                     	;# 
  1405  0317                     	;# 
  1406  0318                     	;# 
  1407  0318                     	;# 
  1408  0319                     	;# 
  1409  031A                     	;# 
  1410  031B                     	;# 
  1411  031C                     	;# 
  1412  031C                     	;# 
  1413  031D                     	;# 
  1414  031E                     	;# 
  1415  031F                     	;# 
  1416  038C                     	;# 
  1417  038C                     	;# 
  1418  038D                     	;# 
  1419  038E                     	;# 
  1420  0390                     	;# 
  1421  0390                     	;# 
  1422  0391                     	;# 
  1423  0392                     	;# 
  1424  040C                     	;# 
  1425  040D                     	;# 
  1426  040E                     	;# 
  1427  040F                     	;# 
  1428  0410                     	;# 
  1429  0411                     	;# 
  1430  0416                     	;# 
  1431  0416                     	;# 
  1432  0417                     	;# 
  1433  0418                     	;# 
  1434  0418                     	;# 
  1435  0419                     	;# 
  1436  041A                     	;# 
  1437  041A                     	;# 
  1438  041B                     	;# 
  1439  041C                     	;# 
  1440  041C                     	;# 
  1441  041D                     	;# 
  1442  041E                     	;# 
  1443  041F                     	;# 
  1444  048C                     	;# 
  1445  048C                     	;# 
  1446  048D                     	;# 
  1447  048E                     	;# 
  1448  048F                     	;# 
  1449  048F                     	;# 
  1450  0490                     	;# 
  1451  0491                     	;# 
  1452  0492                     	;# 
  1453  0492                     	;# 
  1454  0493                     	;# 
  1455  0494                     	;# 
  1456  0495                     	;# 
  1457  0495                     	;# 
  1458  0496                     	;# 
  1459  0497                     	;# 
  1460  0498                     	;# 
  1461  0499                     	;# 
  1462  049A                     	;# 
  1463  049B                     	;# 
  1464  049C                     	;# 
  1465  049D                     	;# 
  1466  050C                     	;# 
  1467  050C                     	;# 
  1468  050D                     	;# 
  1469  050E                     	;# 
  1470  050F                     	;# 
  1471  050F                     	;# 
  1472  0510                     	;# 
  1473  0511                     	;# 
  1474  0512                     	;# 
  1475  0512                     	;# 
  1476  0513                     	;# 
  1477  0514                     	;# 
  1478  0515                     	;# 
  1479  0515                     	;# 
  1480  0516                     	;# 
  1481  0517                     	;# 
  1482  0518                     	;# 
  1483  0519                     	;# 
  1484  051A                     	;# 
  1485  051B                     	;# 
  1486  051C                     	;# 
  1487  051D                     	;# 
  1488  058C                     	;# 
  1489  058C                     	;# 
  1490  058D                     	;# 
  1491  058E                     	;# 
  1492  058F                     	;# 
  1493  058F                     	;# 
  1494  0590                     	;# 
  1495  0591                     	;# 
  1496  0592                     	;# 
  1497  0593                     	;# 
  1498  060C                     	;# 
  1499  060D                     	;# 
  1500  060E                     	;# 
  1501  060F                     	;# 
  1502  0610                     	;# 
  1503  0611                     	;# 
  1504  0612                     	;# 
  1505  0613                     	;# 
  1506  0614                     	;# 
  1507  0616                     	;# 
  1508  0617                     	;# 
  1509  0618                     	;# 
  1510  0619                     	;# 
  1511  061A                     	;# 
  1512  061B                     	;# 
  1513  061C                     	;# 
  1514  061D                     	;# 
  1515  061E                     	;# 
  1516  068C                     	;# 
  1517  068D                     	;# 
  1518  068E                     	;# 
  1519  068F                     	;# 
  1520  0690                     	;# 
  1521  0691                     	;# 
  1522  0692                     	;# 
  1523  0693                     	;# 
  1524  0694                     	;# 
  1525  070C                     	;# 
  1526  070D                     	;# 
  1527  070E                     	;# 
  1528  070F                     	;# 
  1529  0710                     	;# 
  1530  0711                     	;# 
  1531  0712                     	;# 
  1532  0713                     	;# 
  1533  0714                     	;# 
  1534  0716                     	;# 
  1535  0717                     	;# 
  1536  0718                     	;# 
  1537  0719                     	;# 
  1538  071A                     	;# 
  1539  071B                     	;# 
  1540  071C                     	;# 
  1541  071D                     	;# 
  1542  071E                     	;# 
  1543  0796                     	;# 
  1544  0797                     	;# 
  1545  0798                     	;# 
  1546  0799                     	;# 
  1547  079A                     	;# 
  1548  079B                     	;# 
  1549  080C                     	;# 
  1550  080D                     	;# 
  1551  080E                     	;# 
  1552  080F                     	;# 
  1553  0810                     	;# 
  1554  0811                     	;# 
  1555  0812                     	;# 
  1556  0813                     	;# 
  1557  0814                     	;# 
  1558  081A                     	;# 
  1559  081B                     	;# 
  1560  081C                     	;# 
  1561  081D                     	;# 
  1562  081E                     	;# 
  1563  081F                     	;# 
  1564  088C                     	;# 
  1565  088D                     	;# 
  1566  088E                     	;# 
  1567  088F                     	;# 
  1568  0890                     	;# 
  1569  0891                     	;# 
  1570  0892                     	;# 
  1571  0893                     	;# 
  1572  0895                     	;# 
  1573  0896                     	;# 
  1574  0897                     	;# 
  1575  0898                     	;# 
  1576  0899                     	;# 
  1577  089A                     	;# 
  1578  089B                     	;# 
  1579  090C                     	;# 
  1580  090E                     	;# 
  1581  090F                     	;# 
  1582  091F                     	;# 
  1583  091F                     	;# 
  1584  098F                     	;# 
  1585  098F                     	;# 
  1586  0990                     	;# 
  1587  0991                     	;# 
  1588  0992                     	;# 
  1589  0993                     	;# 
  1590  0994                     	;# 
  1591  0995                     	;# 
  1592  0996                     	;# 
  1593  0997                     	;# 
  1594  0E0F                     	;# 
  1595  0E10                     	;# 
  1596  0E11                     	;# 
  1597  0E12                     	;# 
  1598  0E13                     	;# 
  1599  0E14                     	;# 
  1600  0E15                     	;# 
  1601  0E16                     	;# 
  1602  0E17                     	;# 
  1603  0E18                     	;# 
  1604  0E19                     	;# 
  1605  0E1A                     	;# 
  1606  0E1B                     	;# 
  1607  0E1C                     	;# 
  1608  0E1D                     	;# 
  1609  0E1E                     	;# 
  1610  0E1F                     	;# 
  1611  0E20                     	;# 
  1612  0E21                     	;# 
  1613  0E22                     	;# 
  1614  0E23                     	;# 
  1615  0E24                     	;# 
  1616  0E25                     	;# 
  1617  0E26                     	;# 
  1618  0E27                     	;# 
  1619  0E28                     	;# 
  1620  0E29                     	;# 
  1621  0E2A                     	;# 
  1622  0E2B                     	;# 
  1623  0E2C                     	;# 
  1624  0E2D                     	;# 
  1625  0E2E                     	;# 
  1626  0E2F                     	;# 
  1627  0E30                     	;# 
  1628  0E31                     	;# 
  1629  0E32                     	;# 
  1630  0E33                     	;# 
  1631  0E34                     	;# 
  1632  0E35                     	;# 
  1633  0E36                     	;# 
  1634  0E37                     	;# 
  1635  0E8F                     	;# 
  1636  0E90                     	;# 
  1637  0E91                     	;# 
  1638  0E92                     	;# 
  1639  0E93                     	;# 
  1640  0E94                     	;# 
  1641  0E95                     	;# 
  1642  0E96                     	;# 
  1643  0E97                     	;# 
  1644  0E9C                     	;# 
  1645  0E9D                     	;# 
  1646  0E9E                     	;# 
  1647  0EA1                     	;# 
  1648  0EA2                     	;# 
  1649  0EA3                     	;# 
  1650  0EA4                     	;# 
  1651  0EA5                     	;# 
  1652  0EA9                     	;# 
  1653  0EAA                     	;# 
  1654  0EAB                     	;# 
  1655  0EAC                     	;# 
  1656  0EB1                     	;# 
  1657  0EB2                     	;# 
  1658  0EB3                     	;# 
  1659  0EB8                     	;# 
  1660  0EB9                     	;# 
  1661  0EBA                     	;# 
  1662  0EBB                     	;# 
  1663  0EBC                     	;# 
  1664  0EBD                     	;# 
  1665  0EBE                     	;# 
  1666  0EC3                     	;# 
  1667  0EC5                     	;# 
  1668  0EC6                     	;# 
  1669  0EC7                     	;# 
  1670  0EC8                     	;# 
  1671  0EC9                     	;# 
  1672  0ECA                     	;# 
  1673  0ECB                     	;# 
  1674  0ECC                     	;# 
  1675  0F10                     	;# 
  1676  0F11                     	;# 
  1677  0F12                     	;# 
  1678  0F13                     	;# 
  1679  0F14                     	;# 
  1680  0F15                     	;# 
  1681  0F16                     	;# 
  1682  0F17                     	;# 
  1683  0F18                     	;# 
  1684  0F19                     	;# 
  1685  0F1A                     	;# 
  1686  0F1B                     	;# 
  1687  0F1C                     	;# 
  1688  0F1D                     	;# 
  1689  0F1E                     	;# 
  1690  0F1F                     	;# 
  1691  0F20                     	;# 
  1692  0F21                     	;# 
  1693  0F22                     	;# 
  1694  0F23                     	;# 
  1695  0F24                     	;# 
  1696  0F25                     	;# 
  1697  0F26                     	;# 
  1698  0F27                     	;# 
  1699  0F28                     	;# 
  1700  0F29                     	;# 
  1701  0F2A                     	;# 
  1702  0F2B                     	;# 
  1703  0F2C                     	;# 
  1704  0F2D                     	;# 
  1705  0F2E                     	;# 
  1706  0F2F                     	;# 
  1707  0F30                     	;# 
  1708  0F31                     	;# 
  1709  0F32                     	;# 
  1710  0F38                     	;# 
  1711  0F39                     	;# 
  1712  0F3A                     	;# 
  1713  0F3B                     	;# 
  1714  0F3C                     	;# 
  1715  0F3D                     	;# 
  1716  0F3E                     	;# 
  1717  0F3F                     	;# 
  1718  0F40                     	;# 
  1719  0F41                     	;# 
  1720  0F43                     	;# 
  1721  0F44                     	;# 
  1722  0F45                     	;# 
  1723  0F46                     	;# 
  1724  0F47                     	;# 
  1725  0F48                     	;# 
  1726  0F49                     	;# 
  1727  0F4A                     	;# 
  1728  0F4B                     	;# 
  1729  0F4C                     	;# 
  1730  0F4E                     	;# 
  1731  0F4F                     	;# 
  1732  0F50                     	;# 
  1733  0F51                     	;# 
  1734  0F52                     	;# 
  1735  0F53                     	;# 
  1736  0F54                     	;# 
  1737  0F55                     	;# 
  1738  0F56                     	;# 
  1739  0F57                     	;# 
  1740  0F59                     	;# 
  1741  0F5A                     	;# 
  1742  0F5B                     	;# 
  1743  0F5C                     	;# 
  1744  0F5D                     	;# 
  1745  0F61                     	;# 
  1746  0F62                     	;# 
  1747  0F64                     	;# 
  1748  0F65                     	;# 
  1749  0F66                     	;# 
  1750  0F67                     	;# 
  1751  0F68                     	;# 
  1752  0F69                     	;# 
  1753  0F6A                     	;# 
  1754  0F6B                     	;# 
  1755  0F6C                     	;# 
  1756  0F6D                     	;# 
  1757  0FE4                     	;# 
  1758  0FE5                     	;# 
  1759  0FE6                     	;# 
  1760  0FE7                     	;# 
  1761  0FE8                     	;# 
  1762  0FE9                     	;# 
  1763  0FEA                     	;# 
  1764  0FEB                     	;# 
  1765  0FED                     	;# 
  1766  0FEE                     	;# 
  1767  0FEF                     	;# 
  1768  0000                     	;# 
  1769  0001                     	;# 
  1770  0002                     	;# 
  1771  0003                     	;# 
  1772  0004                     	;# 
  1773  0005                     	;# 
  1774  0006                     	;# 
  1775  0007                     	;# 
  1776  0008                     	;# 
  1777  0009                     	;# 
  1778  000A                     	;# 
  1779  000B                     	;# 
  1780  000C                     	;# 
  1781  000D                     	;# 
  1782  000E                     	;# 
  1783  000F                     	;# 
  1784  0010                     	;# 
  1785  0011                     	;# 
  1786  0012                     	;# 
  1787  0013                     	;# 
  1788  0014                     	;# 
  1789  0015                     	;# 
  1790  0016                     	;# 
  1791  0017                     	;# 
  1792  0018                     	;# 
  1793  0019                     	;# 
  1794  001A                     	;# 
  1795  001C                     	;# 
  1796  001C                     	;# 
  1797  001D                     	;# 
  1798  001D                     	;# 
  1799  001E                     	;# 
  1800  001F                     	;# 
  1801  008C                     	;# 
  1802  008C                     	;# 
  1803  008D                     	;# 
  1804  008E                     	;# 
  1805  008E                     	;# 
  1806  008F                     	;# 
  1807  0090                     	;# 
  1808  0090                     	;# 
  1809  0091                     	;# 
  1810  0093                     	;# 
  1811  0094                     	;# 
  1812  0095                     	;# 
  1813  0096                     	;# 
  1814  0097                     	;# 
  1815  0098                     	;# 
  1816  0099                     	;# 
  1817  009A                     	;# 
  1818  009B                     	;# 
  1819  009C                     	;# 
  1820  009D                     	;# 
  1821  009E                     	;# 
  1822  010C                     	;# 
  1823  010D                     	;# 
  1824  010E                     	;# 
  1825  010E                     	;# 
  1826  010F                     	;# 
  1827  0110                     	;# 
  1828  0110                     	;# 
  1829  0111                     	;# 
  1830  0112                     	;# 
  1831  0112                     	;# 
  1832  0113                     	;# 
  1833  0114                     	;# 
  1834  0114                     	;# 
  1835  0115                     	;# 
  1836  0116                     	;# 
  1837  0116                     	;# 
  1838  0117                     	;# 
  1839  0119                     	;# 
  1840  0119                     	;# 
  1841  0119                     	;# 
  1842  011A                     	;# 
  1843  011A                     	;# 
  1844  011A                     	;# 
  1845  011B                     	;# 
  1846  011B                     	;# 
  1847  011B                     	;# 
  1848  011B                     	;# 
  1849  011B                     	;# 
  1850  011C                     	;# 
  1851  011C                     	;# 
  1852  011C                     	;# 
  1853  011D                     	;# 
  1854  011D                     	;# 
  1855  011D                     	;# 
  1856  011E                     	;# 
  1857  011E                     	;# 
  1858  011E                     	;# 
  1859  011F                     	;# 
  1860  011F                     	;# 
  1861  011F                     	;# 
  1862  011F                     	;# 
  1863  011F                     	;# 
  1864  018C                     	;# 
  1865  018D                     	;# 
  1866  018E                     	;# 
  1867  018F                     	;# 
  1868  0190                     	;# 
  1869  0191                     	;# 
  1870  0192                     	;# 
  1871  0196                     	;# 
  1872  0197                     	;# 
  1873  0198                     	;# 
  1874  0199                     	;# 
  1875  019A                     	;# 
  1876  019B                     	;# 
  1877  019C                     	;# 
  1878  020C                     	;# 
  1879  020C                     	;# 
  1880  020D                     	;# 
  1881  020E                     	;# 
  1882  020F                     	;# 
  1883  020F                     	;# 
  1884  0210                     	;# 
  1885  0210                     	;# 
  1886  0211                     	;# 
  1887  0211                     	;# 
  1888  0212                     	;# 
  1889  0212                     	;# 
  1890  0213                     	;# 
  1891  0214                     	;# 
  1892  0215                     	;# 
  1893  0215                     	;# 
  1894  0216                     	;# 
  1895  0216                     	;# 
  1896  0217                     	;# 
  1897  0217                     	;# 
  1898  0218                     	;# 
  1899  0218                     	;# 
  1900  0219                     	;# 
  1901  021A                     	;# 
  1902  021B                     	;# 
  1903  021B                     	;# 
  1904  021C                     	;# 
  1905  021C                     	;# 
  1906  021D                     	;# 
  1907  021D                     	;# 
  1908  021E                     	;# 
  1909  021F                     	;# 
  1910  028C                     	;# 
  1911  028C                     	;# 
  1912  028D                     	;# 
  1913  028D                     	;# 
  1914  028E                     	;# 
  1915  028F                     	;# 
  1916  0290                     	;# 
  1917  0290                     	;# 
  1918  0291                     	;# 
  1919  0292                     	;# 
  1920  0292                     	;# 
  1921  0293                     	;# 
  1922  0293                     	;# 
  1923  0294                     	;# 
  1924  0295                     	;# 
  1925  0296                     	;# 
  1926  0296                     	;# 
  1927  0297                     	;# 
  1928  0298                     	;# 
  1929  0298                     	;# 
  1930  0299                     	;# 
  1931  0299                     	;# 
  1932  029A                     	;# 
  1933  029B                     	;# 
  1934  029C                     	;# 
  1935  029C                     	;# 
  1936  029D                     	;# 
  1937  030C                     	;# 
  1938  030C                     	;# 
  1939  030D                     	;# 
  1940  030E                     	;# 
  1941  030F                     	;# 
  1942  0310                     	;# 
  1943  0310                     	;# 
  1944  0311                     	;# 
  1945  0312                     	;# 
  1946  0313                     	;# 
  1947  0314                     	;# 
  1948  0314                     	;# 
  1949  0315                     	;# 
  1950  0316                     	;# 
  1951  0317                     	;# 
  1952  0318                     	;# 
  1953  0318                     	;# 
  1954  0319                     	;# 
  1955  031A                     	;# 
  1956  031B                     	;# 
  1957  031C                     	;# 
  1958  031C                     	;# 
  1959  031D                     	;# 
  1960  031E                     	;# 
  1961  031F                     	;# 
  1962  038C                     	;# 
  1963  038C                     	;# 
  1964  038D                     	;# 
  1965  038E                     	;# 
  1966  0390                     	;# 
  1967  0390                     	;# 
  1968  0391                     	;# 
  1969  0392                     	;# 
  1970  040C                     	;# 
  1971  040D                     	;# 
  1972  040E                     	;# 
  1973  040F                     	;# 
  1974  0410                     	;# 
  1975  0411                     	;# 
  1976  0416                     	;# 
  1977  0416                     	;# 
  1978  0417                     	;# 
  1979  0418                     	;# 
  1980  0418                     	;# 
  1981  0419                     	;# 
  1982  041A                     	;# 
  1983  041A                     	;# 
  1984  041B                     	;# 
  1985  041C                     	;# 
  1986  041C                     	;# 
  1987  041D                     	;# 
  1988  041E                     	;# 
  1989  041F                     	;# 
  1990  048C                     	;# 
  1991  048C                     	;# 
  1992  048D                     	;# 
  1993  048E                     	;# 
  1994  048F                     	;# 
  1995  048F                     	;# 
  1996  0490                     	;# 
  1997  0491                     	;# 
  1998  0492                     	;# 
  1999  0492                     	;# 
  2000  0493                     	;# 
  2001  0494                     	;# 
  2002  0495                     	;# 
  2003  0495                     	;# 
  2004  0496                     	;# 
  2005  0497                     	;# 
  2006  0498                     	;# 
  2007  0499                     	;# 
  2008  049A                     	;# 
  2009  049B                     	;# 
  2010  049C                     	;# 
  2011  049D                     	;# 
  2012  050C                     	;# 
  2013  050C                     	;# 
  2014  050D                     	;# 
  2015  050E                     	;# 
  2016  050F                     	;# 
  2017  050F                     	;# 
  2018  0510                     	;# 
  2019  0511                     	;# 
  2020  0512                     	;# 
  2021  0512                     	;# 
  2022  0513                     	;# 
  2023  0514                     	;# 
  2024  0515                     	;# 
  2025  0515                     	;# 
  2026  0516                     	;# 
  2027  0517                     	;# 
  2028  0518                     	;# 
  2029  0519                     	;# 
  2030  051A                     	;# 
  2031  051B                     	;# 
  2032  051C                     	;# 
  2033  051D                     	;# 
  2034  058C                     	;# 
  2035  058C                     	;# 
  2036  058D                     	;# 
  2037  058E                     	;# 
  2038  058F                     	;# 
  2039  058F                     	;# 
  2040  0590                     	;# 
  2041  0591                     	;# 
  2042  0592                     	;# 
  2043  0593                     	;# 
  2044  060C                     	;# 
  2045  060D                     	;# 
  2046  060E                     	;# 
  2047  060F                     	;# 
  2048  0610                     	;# 
  2049  0611                     	;# 
  2050  0612                     	;# 
  2051  0613                     	;# 
  2052  0614                     	;# 
  2053  0616                     	;# 
  2054  0617                     	;# 
  2055  0618                     	;# 
  2056  0619                     	;# 
  2057  061A                     	;# 
  2058  061B                     	;# 
  2059  061C                     	;# 
  2060  061D                     	;# 
  2061  061E                     	;# 
  2062  068C                     	;# 
  2063  068D                     	;# 
  2064  068E                     	;# 
  2065  068F                     	;# 
  2066  0690                     	;# 
  2067  0691                     	;# 
  2068  0692                     	;# 
  2069  0693                     	;# 
  2070  0694                     	;# 
  2071  070C                     	;# 
  2072  070D                     	;# 
  2073  070E                     	;# 
  2074  070F                     	;# 
  2075  0710                     	;# 
  2076  0711                     	;# 
  2077  0712                     	;# 
  2078  0713                     	;# 
  2079  0714                     	;# 
  2080  0716                     	;# 
  2081  0717                     	;# 
  2082  0718                     	;# 
  2083  0719                     	;# 
  2084  071A                     	;# 
  2085  071B                     	;# 
  2086  071C                     	;# 
  2087  071D                     	;# 
  2088  071E                     	;# 
  2089  0796                     	;# 
  2090  0797                     	;# 
  2091  0798                     	;# 
  2092  0799                     	;# 
  2093  079A                     	;# 
  2094  079B                     	;# 
  2095  080C                     	;# 
  2096  080D                     	;# 
  2097  080E                     	;# 
  2098  080F                     	;# 
  2099  0810                     	;# 
  2100  0811                     	;# 
  2101  0812                     	;# 
  2102  0813                     	;# 
  2103  0814                     	;# 
  2104  081A                     	;# 
  2105  081B                     	;# 
  2106  081C                     	;# 
  2107  081D                     	;# 
  2108  081E                     	;# 
  2109  081F                     	;# 
  2110  088C                     	;# 
  2111  088D                     	;# 
  2112  088E                     	;# 
  2113  088F                     	;# 
  2114  0890                     	;# 
  2115  0891                     	;# 
  2116  0892                     	;# 
  2117  0893                     	;# 
  2118  0895                     	;# 
  2119  0896                     	;# 
  2120  0897                     	;# 
  2121  0898                     	;# 
  2122  0899                     	;# 
  2123  089A                     	;# 
  2124  089B                     	;# 
  2125  090C                     	;# 
  2126  090E                     	;# 
  2127  090F                     	;# 
  2128  091F                     	;# 
  2129  091F                     	;# 
  2130  098F                     	;# 
  2131  098F                     	;# 
  2132  0990                     	;# 
  2133  0991                     	;# 
  2134  0992                     	;# 
  2135  0993                     	;# 
  2136  0994                     	;# 
  2137  0995                     	;# 
  2138  0996                     	;# 
  2139  0997                     	;# 
  2140  0E0F                     	;# 
  2141  0E10                     	;# 
  2142  0E11                     	;# 
  2143  0E12                     	;# 
  2144  0E13                     	;# 
  2145  0E14                     	;# 
  2146  0E15                     	;# 
  2147  0E16                     	;# 
  2148  0E17                     	;# 
  2149  0E18                     	;# 
  2150  0E19                     	;# 
  2151  0E1A                     	;# 
  2152  0E1B                     	;# 
  2153  0E1C                     	;# 
  2154  0E1D                     	;# 
  2155  0E1E                     	;# 
  2156  0E1F                     	;# 
  2157  0E20                     	;# 
  2158  0E21                     	;# 
  2159  0E22                     	;# 
  2160  0E23                     	;# 
  2161  0E24                     	;# 
  2162  0E25                     	;# 
  2163  0E26                     	;# 
  2164  0E27                     	;# 
  2165  0E28                     	;# 
  2166  0E29                     	;# 
  2167  0E2A                     	;# 
  2168  0E2B                     	;# 
  2169  0E2C                     	;# 
  2170  0E2D                     	;# 
  2171  0E2E                     	;# 
  2172  0E2F                     	;# 
  2173  0E30                     	;# 
  2174  0E31                     	;# 
  2175  0E32                     	;# 
  2176  0E33                     	;# 
  2177  0E34                     	;# 
  2178  0E35                     	;# 
  2179  0E36                     	;# 
  2180  0E37                     	;# 
  2181  0E8F                     	;# 
  2182  0E90                     	;# 
  2183  0E91                     	;# 
  2184  0E92                     	;# 
  2185  0E93                     	;# 
  2186  0E94                     	;# 
  2187  0E95                     	;# 
  2188  0E96                     	;# 
  2189  0E97                     	;# 
  2190  0E9C                     	;# 
  2191  0E9D                     	;# 
  2192  0E9E                     	;# 
  2193  0EA1                     	;# 
  2194  0EA2                     	;# 
  2195  0EA3                     	;# 
  2196  0EA4                     	;# 
  2197  0EA5                     	;# 
  2198  0EA9                     	;# 
  2199  0EAA                     	;# 
  2200  0EAB                     	;# 
  2201  0EAC                     	;# 
  2202  0EB1                     	;# 
  2203  0EB2                     	;# 
  2204  0EB3                     	;# 
  2205  0EB8                     	;# 
  2206  0EB9                     	;# 
  2207  0EBA                     	;# 
  2208  0EBB                     	;# 
  2209  0EBC                     	;# 
  2210  0EBD                     	;# 
  2211  0EBE                     	;# 
  2212  0EC3                     	;# 
  2213  0EC5                     	;# 
  2214  0EC6                     	;# 
  2215  0EC7                     	;# 
  2216  0EC8                     	;# 
  2217  0EC9                     	;# 
  2218  0ECA                     	;# 
  2219  0ECB                     	;# 
  2220  0ECC                     	;# 
  2221  0F10                     	;# 
  2222  0F11                     	;# 
  2223  0F12                     	;# 
  2224  0F13                     	;# 
  2225  0F14                     	;# 
  2226  0F15                     	;# 
  2227  0F16                     	;# 
  2228  0F17                     	;# 
  2229  0F18                     	;# 
  2230  0F19                     	;# 
  2231  0F1A                     	;# 
  2232  0F1B                     	;# 
  2233  0F1C                     	;# 
  2234  0F1D                     	;# 
  2235  0F1E                     	;# 
  2236  0F1F                     	;# 
  2237  0F20                     	;# 
  2238  0F21                     	;# 
  2239  0F22                     	;# 
  2240  0F23                     	;# 
  2241  0F24                     	;# 
  2242  0F25                     	;# 
  2243  0F26                     	;# 
  2244  0F27                     	;# 
  2245  0F28                     	;# 
  2246  0F29                     	;# 
  2247  0F2A                     	;# 
  2248  0F2B                     	;# 
  2249  0F2C                     	;# 
  2250  0F2D                     	;# 
  2251  0F2E                     	;# 
  2252  0F2F                     	;# 
  2253  0F30                     	;# 
  2254  0F31                     	;# 
  2255  0F32                     	;# 
  2256  0F38                     	;# 
  2257  0F39                     	;# 
  2258  0F3A                     	;# 
  2259  0F3B                     	;# 
  2260  0F3C                     	;# 
  2261  0F3D                     	;# 
  2262  0F3E                     	;# 
  2263  0F3F                     	;# 
  2264  0F40                     	;# 
  2265  0F41                     	;# 
  2266  0F43                     	;# 
  2267  0F44                     	;# 
  2268  0F45                     	;# 
  2269  0F46                     	;# 
  2270  0F47                     	;# 
  2271  0F48                     	;# 
  2272  0F49                     	;# 
  2273  0F4A                     	;# 
  2274  0F4B                     	;# 
  2275  0F4C                     	;# 
  2276  0F4E                     	;# 
  2277  0F4F                     	;# 
  2278  0F50                     	;# 
  2279  0F51                     	;# 
  2280  0F52                     	;# 
  2281  0F53                     	;# 
  2282  0F54                     	;# 
  2283  0F55                     	;# 
  2284  0F56                     	;# 
  2285  0F57                     	;# 
  2286  0F59                     	;# 
  2287  0F5A                     	;# 
  2288  0F5B                     	;# 
  2289  0F5C                     	;# 
  2290  0F5D                     	;# 
  2291  0F61                     	;# 
  2292  0F62                     	;# 
  2293  0F64                     	;# 
  2294  0F65                     	;# 
  2295  0F66                     	;# 
  2296  0F67                     	;# 
  2297  0F68                     	;# 
  2298  0F69                     	;# 
  2299  0F6A                     	;# 
  2300  0F6B                     	;# 
  2301  0F6C                     	;# 
  2302  0F6D                     	;# 
  2303  0FE4                     	;# 
  2304  0FE5                     	;# 
  2305  0FE6                     	;# 
  2306  0FE7                     	;# 
  2307  0FE8                     	;# 
  2308  0FE9                     	;# 
  2309  0FEA                     	;# 
  2310  0FEB                     	;# 
  2311  0FED                     	;# 
  2312  0FEE                     	;# 
  2313  0FEF                     	;# 
  2314  0000                     	;# 
  2315  0001                     	;# 
  2316  0002                     	;# 
  2317  0003                     	;# 
  2318  0004                     	;# 
  2319  0005                     	;# 
  2320  0006                     	;# 
  2321  0007                     	;# 
  2322  0008                     	;# 
  2323  0009                     	;# 
  2324  000A                     	;# 
  2325  000B                     	;# 
  2326  000C                     	;# 
  2327  000D                     	;# 
  2328  000E                     	;# 
  2329  000F                     	;# 
  2330  0010                     	;# 
  2331  0011                     	;# 
  2332  0012                     	;# 
  2333  0013                     	;# 
  2334  0014                     	;# 
  2335  0015                     	;# 
  2336  0016                     	;# 
  2337  0017                     	;# 
  2338  0018                     	;# 
  2339  0019                     	;# 
  2340  001A                     	;# 
  2341  001C                     	;# 
  2342  001C                     	;# 
  2343  001D                     	;# 
  2344  001D                     	;# 
  2345  001E                     	;# 
  2346  001F                     	;# 
  2347  008C                     	;# 
  2348  008C                     	;# 
  2349  008D                     	;# 
  2350  008E                     	;# 
  2351  008E                     	;# 
  2352  008F                     	;# 
  2353  0090                     	;# 
  2354  0090                     	;# 
  2355  0091                     	;# 
  2356  0093                     	;# 
  2357  0094                     	;# 
  2358  0095                     	;# 
  2359  0096                     	;# 
  2360  0097                     	;# 
  2361  0098                     	;# 
  2362  0099                     	;# 
  2363  009A                     	;# 
  2364  009B                     	;# 
  2365  009C                     	;# 
  2366  009D                     	;# 
  2367  009E                     	;# 
  2368  010C                     	;# 
  2369  010D                     	;# 
  2370  010E                     	;# 
  2371  010E                     	;# 
  2372  010F                     	;# 
  2373  0110                     	;# 
  2374  0110                     	;# 
  2375  0111                     	;# 
  2376  0112                     	;# 
  2377  0112                     	;# 
  2378  0113                     	;# 
  2379  0114                     	;# 
  2380  0114                     	;# 
  2381  0115                     	;# 
  2382  0116                     	;# 
  2383  0116                     	;# 
  2384  0117                     	;# 
  2385  0119                     	;# 
  2386  0119                     	;# 
  2387  0119                     	;# 
  2388  011A                     	;# 
  2389  011A                     	;# 
  2390  011A                     	;# 
  2391  011B                     	;# 
  2392  011B                     	;# 
  2393  011B                     	;# 
  2394  011B                     	;# 
  2395  011B                     	;# 
  2396  011C                     	;# 
  2397  011C                     	;# 
  2398  011C                     	;# 
  2399  011D                     	;# 
  2400  011D                     	;# 
  2401  011D                     	;# 
  2402  011E                     	;# 
  2403  011E                     	;# 
  2404  011E                     	;# 
  2405  011F                     	;# 
  2406  011F                     	;# 
  2407  011F                     	;# 
  2408  011F                     	;# 
  2409  011F                     	;# 
  2410  018C                     	;# 
  2411  018D                     	;# 
  2412  018E                     	;# 
  2413  018F                     	;# 
  2414  0190                     	;# 
  2415  0191                     	;# 
  2416  0192                     	;# 
  2417  0196                     	;# 
  2418  0197                     	;# 
  2419  0198                     	;# 
  2420  0199                     	;# 
  2421  019A                     	;# 
  2422  019B                     	;# 
  2423  019C                     	;# 
  2424  020C                     	;# 
  2425  020C                     	;# 
  2426  020D                     	;# 
  2427  020E                     	;# 
  2428  020F                     	;# 
  2429  020F                     	;# 
  2430  0210                     	;# 
  2431  0210                     	;# 
  2432  0211                     	;# 
  2433  0211                     	;# 
  2434  0212                     	;# 
  2435  0212                     	;# 
  2436  0213                     	;# 
  2437  0214                     	;# 
  2438  0215                     	;# 
  2439  0215                     	;# 
  2440  0216                     	;# 
  2441  0216                     	;# 
  2442  0217                     	;# 
  2443  0217                     	;# 
  2444  0218                     	;# 
  2445  0218                     	;# 
  2446  0219                     	;# 
  2447  021A                     	;# 
  2448  021B                     	;# 
  2449  021B                     	;# 
  2450  021C                     	;# 
  2451  021C                     	;# 
  2452  021D                     	;# 
  2453  021D                     	;# 
  2454  021E                     	;# 
  2455  021F                     	;# 
  2456  028C                     	;# 
  2457  028C                     	;# 
  2458  028D                     	;# 
  2459  028D                     	;# 
  2460  028E                     	;# 
  2461  028F                     	;# 
  2462  0290                     	;# 
  2463  0290                     	;# 
  2464  0291                     	;# 
  2465  0292                     	;# 
  2466  0292                     	;# 
  2467  0293                     	;# 
  2468  0293                     	;# 
  2469  0294                     	;# 
  2470  0295                     	;# 
  2471  0296                     	;# 
  2472  0296                     	;# 
  2473  0297                     	;# 
  2474  0298                     	;# 
  2475  0298                     	;# 
  2476  0299                     	;# 
  2477  0299                     	;# 
  2478  029A                     	;# 
  2479  029B                     	;# 
  2480  029C                     	;# 
  2481  029C                     	;# 
  2482  029D                     	;# 
  2483  030C                     	;# 
  2484  030C                     	;# 
  2485  030D                     	;# 
  2486  030E                     	;# 
  2487  030F                     	;# 
  2488  0310                     	;# 
  2489  0310                     	;# 
  2490  0311                     	;# 
  2491  0312                     	;# 
  2492  0313                     	;# 
  2493  0314                     	;# 
  2494  0314                     	;# 
  2495  0315                     	;# 
  2496  0316                     	;# 
  2497  0317                     	;# 
  2498  0318                     	;# 
  2499  0318                     	;# 
  2500  0319                     	;# 
  2501  031A                     	;# 
  2502  031B                     	;# 
  2503  031C                     	;# 
  2504  031C                     	;# 
  2505  031D                     	;# 
  2506  031E                     	;# 
  2507  031F                     	;# 
  2508  038C                     	;# 
  2509  038C                     	;# 
  2510  038D                     	;# 
  2511  038E                     	;# 
  2512  0390                     	;# 
  2513  0390                     	;# 
  2514  0391                     	;# 
  2515  0392                     	;# 
  2516  040C                     	;# 
  2517  040D                     	;# 
  2518  040E                     	;# 
  2519  040F                     	;# 
  2520  0410                     	;# 
  2521  0411                     	;# 
  2522  0416                     	;# 
  2523  0416                     	;# 
  2524  0417                     	;# 
  2525  0418                     	;# 
  2526  0418                     	;# 
  2527  0419                     	;# 
  2528  041A                     	;# 
  2529  041A                     	;# 
  2530  041B                     	;# 
  2531  041C                     	;# 
  2532  041C                     	;# 
  2533  041D                     	;# 
  2534  041E                     	;# 
  2535  041F                     	;# 
  2536  048C                     	;# 
  2537  048C                     	;# 
  2538  048D                     	;# 
  2539  048E                     	;# 
  2540  048F                     	;# 
  2541  048F                     	;# 
  2542  0490                     	;# 
  2543  0491                     	;# 
  2544  0492                     	;# 
  2545  0492                     	;# 
  2546  0493                     	;# 
  2547  0494                     	;# 
  2548  0495                     	;# 
  2549  0495                     	;# 
  2550  0496                     	;# 
  2551  0497                     	;# 
  2552  0498                     	;# 
  2553  0499                     	;# 
  2554  049A                     	;# 
  2555  049B                     	;# 
  2556  049C                     	;# 
  2557  049D                     	;# 
  2558  050C                     	;# 
  2559  050C                     	;# 
  2560  050D                     	;# 
  2561  050E                     	;# 
  2562  050F                     	;# 
  2563  050F                     	;# 
  2564  0510                     	;# 
  2565  0511                     	;# 
  2566  0512                     	;# 
  2567  0512                     	;# 
  2568  0513                     	;# 
  2569  0514                     	;# 
  2570  0515                     	;# 
  2571  0515                     	;# 
  2572  0516                     	;# 
  2573  0517                     	;# 
  2574  0518                     	;# 
  2575  0519                     	;# 
  2576  051A                     	;# 
  2577  051B                     	;# 
  2578  051C                     	;# 
  2579  051D                     	;# 
  2580  058C                     	;# 
  2581  058C                     	;# 
  2582  058D                     	;# 
  2583  058E                     	;# 
  2584  058F                     	;# 
  2585  058F                     	;# 
  2586  0590                     	;# 
  2587  0591                     	;# 
  2588  0592                     	;# 
  2589  0593                     	;# 
  2590  060C                     	;# 
  2591  060D                     	;# 
  2592  060E                     	;# 
  2593  060F                     	;# 
  2594  0610                     	;# 
  2595  0611                     	;# 
  2596  0612                     	;# 
  2597  0613                     	;# 
  2598  0614                     	;# 
  2599  0616                     	;# 
  2600  0617                     	;# 
  2601  0618                     	;# 
  2602  0619                     	;# 
  2603  061A                     	;# 
  2604  061B                     	;# 
  2605  061C                     	;# 
  2606  061D                     	;# 
  2607  061E                     	;# 
  2608  068C                     	;# 
  2609  068D                     	;# 
  2610  068E                     	;# 
  2611  068F                     	;# 
  2612  0690                     	;# 
  2613  0691                     	;# 
  2614  0692                     	;# 
  2615  0693                     	;# 
  2616  0694                     	;# 
  2617  070C                     	;# 
  2618  070D                     	;# 
  2619  070E                     	;# 
  2620  070F                     	;# 
  2621  0710                     	;# 
  2622  0711                     	;# 
  2623  0712                     	;# 
  2624  0713                     	;# 
  2625  0714                     	;# 
  2626  0716                     	;# 
  2627  0717                     	;# 
  2628  0718                     	;# 
  2629  0719                     	;# 
  2630  071A                     	;# 
  2631  071B                     	;# 
  2632  071C                     	;# 
  2633  071D                     	;# 
  2634  071E                     	;# 
  2635  0796                     	;# 
  2636  0797                     	;# 
  2637  0798                     	;# 
  2638  0799                     	;# 
  2639  079A                     	;# 
  2640  079B                     	;# 
  2641  080C                     	;# 
  2642  080D                     	;# 
  2643  080E                     	;# 
  2644  080F                     	;# 
  2645  0810                     	;# 
  2646  0811                     	;# 
  2647  0812                     	;# 
  2648  0813                     	;# 
  2649  0814                     	;# 
  2650  081A                     	;# 
  2651  081B                     	;# 
  2652  081C                     	;# 
  2653  081D                     	;# 
  2654  081E                     	;# 
  2655  081F                     	;# 
  2656  088C                     	;# 
  2657  088D                     	;# 
  2658  088E                     	;# 
  2659  088F                     	;# 
  2660  0890                     	;# 
  2661  0891                     	;# 
  2662  0892                     	;# 
  2663  0893                     	;# 
  2664  0895                     	;# 
  2665  0896                     	;# 
  2666  0897                     	;# 
  2667  0898                     	;# 
  2668  0899                     	;# 
  2669  089A                     	;# 
  2670  089B                     	;# 
  2671  090C                     	;# 
  2672  090E                     	;# 
  2673  090F                     	;# 
  2674  091F                     	;# 
  2675  091F                     	;# 
  2676  098F                     	;# 
  2677  098F                     	;# 
  2678  0990                     	;# 
  2679  0991                     	;# 
  2680  0992                     	;# 
  2681  0993                     	;# 
  2682  0994                     	;# 
  2683  0995                     	;# 
  2684  0996                     	;# 
  2685  0997                     	;# 
  2686  0E0F                     	;# 
  2687  0E10                     	;# 
  2688  0E11                     	;# 
  2689  0E12                     	;# 
  2690  0E13                     	;# 
  2691  0E14                     	;# 
  2692  0E15                     	;# 
  2693  0E16                     	;# 
  2694  0E17                     	;# 
  2695  0E18                     	;# 
  2696  0E19                     	;# 
  2697  0E1A                     	;# 
  2698  0E1B                     	;# 
  2699  0E1C                     	;# 
  2700  0E1D                     	;# 
  2701  0E1E                     	;# 
  2702  0E1F                     	;# 
  2703  0E20                     	;# 
  2704  0E21                     	;# 
  2705  0E22                     	;# 
  2706  0E23                     	;# 
  2707  0E24                     	;# 
  2708  0E25                     	;# 
  2709  0E26                     	;# 
  2710  0E27                     	;# 
  2711  0E28                     	;# 
  2712  0E29                     	;# 
  2713  0E2A                     	;# 
  2714  0E2B                     	;# 
  2715  0E2C                     	;# 
  2716  0E2D                     	;# 
  2717  0E2E                     	;# 
  2718  0E2F                     	;# 
  2719  0E30                     	;# 
  2720  0E31                     	;# 
  2721  0E32                     	;# 
  2722  0E33                     	;# 
  2723  0E34                     	;# 
  2724  0E35                     	;# 
  2725  0E36                     	;# 
  2726  0E37                     	;# 
  2727  0E8F                     	;# 
  2728  0E90                     	;# 
  2729  0E91                     	;# 
  2730  0E92                     	;# 
  2731  0E93                     	;# 
  2732  0E94                     	;# 
  2733  0E95                     	;# 
  2734  0E96                     	;# 
  2735  0E97                     	;# 
  2736  0E9C                     	;# 
  2737  0E9D                     	;# 
  2738  0E9E                     	;# 
  2739  0EA1                     	;# 
  2740  0EA2                     	;# 
  2741  0EA3                     	;# 
  2742  0EA4                     	;# 
  2743  0EA5                     	;# 
  2744  0EA9                     	;# 
  2745  0EAA                     	;# 
  2746  0EAB                     	;# 
  2747  0EAC                     	;# 
  2748  0EB1                     	;# 
  2749  0EB2                     	;# 
  2750  0EB3                     	;# 
  2751  0EB8                     	;# 
  2752  0EB9                     	;# 
  2753  0EBA                     	;# 
  2754  0EBB                     	;# 
  2755  0EBC                     	;# 
  2756  0EBD                     	;# 
  2757  0EBE                     	;# 
  2758  0EC3                     	;# 
  2759  0EC5                     	;# 
  2760  0EC6                     	;# 
  2761  0EC7                     	;# 
  2762  0EC8                     	;# 
  2763  0EC9                     	;# 
  2764  0ECA                     	;# 
  2765  0ECB                     	;# 
  2766  0ECC                     	;# 
  2767  0F10                     	;# 
  2768  0F11                     	;# 
  2769  0F12                     	;# 
  2770  0F13                     	;# 
  2771  0F14                     	;# 
  2772  0F15                     	;# 
  2773  0F16                     	;# 
  2774  0F17                     	;# 
  2775  0F18                     	;# 
  2776  0F19                     	;# 
  2777  0F1A                     	;# 
  2778  0F1B                     	;# 
  2779  0F1C                     	;# 
  2780  0F1D                     	;# 
  2781  0F1E                     	;# 
  2782  0F1F                     	;# 
  2783  0F20                     	;# 
  2784  0F21                     	;# 
  2785  0F22                     	;# 
  2786  0F23                     	;# 
  2787  0F24                     	;# 
  2788  0F25                     	;# 
  2789  0F26                     	;# 
  2790  0F27                     	;# 
  2791  0F28                     	;# 
  2792  0F29                     	;# 
  2793  0F2A                     	;# 
  2794  0F2B                     	;# 
  2795  0F2C                     	;# 
  2796  0F2D                     	;# 
  2797  0F2E                     	;# 
  2798  0F2F                     	;# 
  2799  0F30                     	;# 
  2800  0F31                     	;# 
  2801  0F32                     	;# 
  2802  0F38                     	;# 
  2803  0F39                     	;# 
  2804  0F3A                     	;# 
  2805  0F3B                     	;# 
  2806  0F3C                     	;# 
  2807  0F3D                     	;# 
  2808  0F3E                     	;# 
  2809  0F3F                     	;# 
  2810  0F40                     	;# 
  2811  0F41                     	;# 
  2812  0F43                     	;# 
  2813  0F44                     	;# 
  2814  0F45                     	;# 
  2815  0F46                     	;# 
  2816  0F47                     	;# 
  2817  0F48                     	;# 
  2818  0F49                     	;# 
  2819  0F4A                     	;# 
  2820  0F4B                     	;# 
  2821  0F4C                     	;# 
  2822  0F4E                     	;# 
  2823  0F4F                     	;# 
  2824  0F50                     	;# 
  2825  0F51                     	;# 
  2826  0F52                     	;# 
  2827  0F53                     	;# 
  2828  0F54                     	;# 
  2829  0F55                     	;# 
  2830  0F56                     	;# 
  2831  0F57                     	;# 
  2832  0F59                     	;# 
  2833  0F5A                     	;# 
  2834  0F5B                     	;# 
  2835  0F5C                     	;# 
  2836  0F5D                     	;# 
  2837  0F61                     	;# 
  2838  0F62                     	;# 
  2839  0F64                     	;# 
  2840  0F65                     	;# 
  2841  0F66                     	;# 
  2842  0F67                     	;# 
  2843  0F68                     	;# 
  2844  0F69                     	;# 
  2845  0F6A                     	;# 
  2846  0F6B                     	;# 
  2847  0F6C                     	;# 
  2848  0F6D                     	;# 
  2849  0FE4                     	;# 
  2850  0FE5                     	;# 
  2851  0FE6                     	;# 
  2852  0FE7                     	;# 
  2853  0FE8                     	;# 
  2854  0FE9                     	;# 
  2855  0FEA                     	;# 
  2856  0FEB                     	;# 
  2857  0FED                     	;# 
  2858  0FEE                     	;# 
  2859  0FEF                     	;# 
  2860  0000                     	;# 
  2861  0001                     	;# 
  2862  0002                     	;# 
  2863  0003                     	;# 
  2864  0004                     	;# 
  2865  0005                     	;# 
  2866  0006                     	;# 
  2867  0007                     	;# 
  2868  0008                     	;# 
  2869  0009                     	;# 
  2870  000A                     	;# 
  2871  000B                     	;# 
  2872  000C                     	;# 
  2873  000D                     	;# 
  2874  000E                     	;# 
  2875  000F                     	;# 
  2876  0010                     	;# 
  2877  0011                     	;# 
  2878  0012                     	;# 
  2879  0013                     	;# 
  2880  0014                     	;# 
  2881  0015                     	;# 
  2882  0016                     	;# 
  2883  0017                     	;# 
  2884  0018                     	;# 
  2885  0019                     	;# 
  2886  001A                     	;# 
  2887  001C                     	;# 
  2888  001C                     	;# 
  2889  001D                     	;# 
  2890  001D                     	;# 
  2891  001E                     	;# 
  2892  001F                     	;# 
  2893  008C                     	;# 
  2894  008C                     	;# 
  2895  008D                     	;# 
  2896  008E                     	;# 
  2897  008E                     	;# 
  2898  008F                     	;# 
  2899  0090                     	;# 
  2900  0090                     	;# 
  2901  0091                     	;# 
  2902  0093                     	;# 
  2903  0094                     	;# 
  2904  0095                     	;# 
  2905  0096                     	;# 
  2906  0097                     	;# 
  2907  0098                     	;# 
  2908  0099                     	;# 
  2909  009A                     	;# 
  2910  009B                     	;# 
  2911  009C                     	;# 
  2912  009D                     	;# 
  2913  009E                     	;# 
  2914  010C                     	;# 
  2915  010D                     	;# 
  2916  010E                     	;# 
  2917  010E                     	;# 
  2918  010F                     	;# 
  2919  0110                     	;# 
  2920  0110                     	;# 
  2921  0111                     	;# 
  2922  0112                     	;# 
  2923  0112                     	;# 
  2924  0113                     	;# 
  2925  0114                     	;# 
  2926  0114                     	;# 
  2927  0115                     	;# 
  2928  0116                     	;# 
  2929  0116                     	;# 
  2930  0117                     	;# 
  2931  0119                     	;# 
  2932  0119                     	;# 
  2933  0119                     	;# 
  2934  011A                     	;# 
  2935  011A                     	;# 
  2936  011A                     	;# 
  2937  011B                     	;# 
  2938  011B                     	;# 
  2939  011B                     	;# 
  2940  011B                     	;# 
  2941  011B                     	;# 
  2942  011C                     	;# 
  2943  011C                     	;# 
  2944  011C                     	;# 
  2945  011D                     	;# 
  2946  011D                     	;# 
  2947  011D                     	;# 
  2948  011E                     	;# 
  2949  011E                     	;# 
  2950  011E                     	;# 
  2951  011F                     	;# 
  2952  011F                     	;# 
  2953  011F                     	;# 
  2954  011F                     	;# 
  2955  011F                     	;# 
  2956  018C                     	;# 
  2957  018D                     	;# 
  2958  018E                     	;# 
  2959  018F                     	;# 
  2960  0190                     	;# 
  2961  0191                     	;# 
  2962  0192                     	;# 
  2963  0196                     	;# 
  2964  0197                     	;# 
  2965  0198                     	;# 
  2966  0199                     	;# 
  2967  019A                     	;# 
  2968  019B                     	;# 
  2969  019C                     	;# 
  2970  020C                     	;# 
  2971  020C                     	;# 
  2972  020D                     	;# 
  2973  020E                     	;# 
  2974  020F                     	;# 
  2975  020F                     	;# 
  2976  0210                     	;# 
  2977  0210                     	;# 
  2978  0211                     	;# 
  2979  0211                     	;# 
  2980  0212                     	;# 
  2981  0212                     	;# 
  2982  0213                     	;# 
  2983  0214                     	;# 
  2984  0215                     	;# 
  2985  0215                     	;# 
  2986  0216                     	;# 
  2987  0216                     	;# 
  2988  0217                     	;# 
  2989  0217                     	;# 
  2990  0218                     	;# 
  2991  0218                     	;# 
  2992  0219                     	;# 
  2993  021A                     	;# 
  2994  021B                     	;# 
  2995  021B                     	;# 
  2996  021C                     	;# 
  2997  021C                     	;# 
  2998  021D                     	;# 
  2999  021D                     	;# 
  3000  021E                     	;# 
  3001  021F                     	;# 
  3002  028C                     	;# 
  3003  028C                     	;# 
  3004  028D                     	;# 
  3005  028D                     	;# 
  3006  028E                     	;# 
  3007  028F                     	;# 
  3008  0290                     	;# 
  3009  0290                     	;# 
  3010  0291                     	;# 
  3011  0292                     	;# 
  3012  0292                     	;# 
  3013  0293                     	;# 
  3014  0293                     	;# 
  3015  0294                     	;# 
  3016  0295                     	;# 
  3017  0296                     	;# 
  3018  0296                     	;# 
  3019  0297                     	;# 
  3020  0298                     	;# 
  3021  0298                     	;# 
  3022  0299                     	;# 
  3023  0299                     	;# 
  3024  029A                     	;# 
  3025  029B                     	;# 
  3026  029C                     	;# 
  3027  029C                     	;# 
  3028  029D                     	;# 
  3029  030C                     	;# 
  3030  030C                     	;# 
  3031  030D                     	;# 
  3032  030E                     	;# 
  3033  030F                     	;# 
  3034  0310                     	;# 
  3035  0310                     	;# 
  3036  0311                     	;# 
  3037  0312                     	;# 
  3038  0313                     	;# 
  3039  0314                     	;# 
  3040  0314                     	;# 
  3041  0315                     	;# 
  3042  0316                     	;# 
  3043  0317                     	;# 
  3044  0318                     	;# 
  3045  0318                     	;# 
  3046  0319                     	;# 
  3047  031A                     	;# 
  3048  031B                     	;# 
  3049  031C                     	;# 
  3050  031C                     	;# 
  3051  031D                     	;# 
  3052  031E                     	;# 
  3053  031F                     	;# 
  3054  038C                     	;# 
  3055  038C                     	;# 
  3056  038D                     	;# 
  3057  038E                     	;# 
  3058  0390                     	;# 
  3059  0390                     	;# 
  3060  0391                     	;# 
  3061  0392                     	;# 
  3062  040C                     	;# 
  3063  040D                     	;# 
  3064  040E                     	;# 
  3065  040F                     	;# 
  3066  0410                     	;# 
  3067  0411                     	;# 
  3068  0416                     	;# 
  3069  0416                     	;# 
  3070  0417                     	;# 
  3071  0418                     	;# 
  3072  0418                     	;# 
  3073  0419                     	;# 
  3074  041A                     	;# 
  3075  041A                     	;# 
  3076  041B                     	;# 
  3077  041C                     	;# 
  3078  041C                     	;# 
  3079  041D                     	;# 
  3080  041E                     	;# 
  3081  041F                     	;# 
  3082  048C                     	;# 
  3083  048C                     	;# 
  3084  048D                     	;# 
  3085  048E                     	;# 
  3086  048F                     	;# 
  3087  048F                     	;# 
  3088  0490                     	;# 
  3089  0491                     	;# 
  3090  0492                     	;# 
  3091  0492                     	;# 
  3092  0493                     	;# 
  3093  0494                     	;# 
  3094  0495                     	;# 
  3095  0495                     	;# 
  3096  0496                     	;# 
  3097  0497                     	;# 
  3098  0498                     	;# 
  3099  0499                     	;# 
  3100  049A                     	;# 
  3101  049B                     	;# 
  3102  049C                     	;# 
  3103  049D                     	;# 
  3104  050C                     	;# 
  3105  050C                     	;# 
  3106  050D                     	;# 
  3107  050E                     	;# 
  3108  050F                     	;# 
  3109  050F                     	;# 
  3110  0510                     	;# 
  3111  0511                     	;# 
  3112  0512                     	;# 
  3113  0512                     	;# 
  3114  0513                     	;# 
  3115  0514                     	;# 
  3116  0515                     	;# 
  3117  0515                     	;# 
  3118  0516                     	;# 
  3119  0517                     	;# 
  3120  0518                     	;# 
  3121  0519                     	;# 
  3122  051A                     	;# 
  3123  051B                     	;# 
  3124  051C                     	;# 
  3125  051D                     	;# 
  3126  058C                     	;# 
  3127  058C                     	;# 
  3128  058D                     	;# 
  3129  058E                     	;# 
  3130  058F                     	;# 
  3131  058F                     	;# 
  3132  0590                     	;# 
  3133  0591                     	;# 
  3134  0592                     	;# 
  3135  0593                     	;# 
  3136  060C                     	;# 
  3137  060D                     	;# 
  3138  060E                     	;# 
  3139  060F                     	;# 
  3140  0610                     	;# 
  3141  0611                     	;# 
  3142  0612                     	;# 
  3143  0613                     	;# 
  3144  0614                     	;# 
  3145  0616                     	;# 
  3146  0617                     	;# 
  3147  0618                     	;# 
  3148  0619                     	;# 
  3149  061A                     	;# 
  3150  061B                     	;# 
  3151  061C                     	;# 
  3152  061D                     	;# 
  3153  061E                     	;# 
  3154  068C                     	;# 
  3155  068D                     	;# 
  3156  068E                     	;# 
  3157  068F                     	;# 
  3158  0690                     	;# 
  3159  0691                     	;# 
  3160  0692                     	;# 
  3161  0693                     	;# 
  3162  0694                     	;# 
  3163  070C                     	;# 
  3164  070D                     	;# 
  3165  070E                     	;# 
  3166  070F                     	;# 
  3167  0710                     	;# 
  3168  0711                     	;# 
  3169  0712                     	;# 
  3170  0713                     	;# 
  3171  0714                     	;# 
  3172  0716                     	;# 
  3173  0717                     	;# 
  3174  0718                     	;# 
  3175  0719                     	;# 
  3176  071A                     	;# 
  3177  071B                     	;# 
  3178  071C                     	;# 
  3179  071D                     	;# 
  3180  071E                     	;# 
  3181  0796                     	;# 
  3182  0797                     	;# 
  3183  0798                     	;# 
  3184  0799                     	;# 
  3185  079A                     	;# 
  3186  079B                     	;# 
  3187  080C                     	;# 
  3188  080D                     	;# 
  3189  080E                     	;# 
  3190  080F                     	;# 
  3191  0810                     	;# 
  3192  0811                     	;# 
  3193  0812                     	;# 
  3194  0813                     	;# 
  3195  0814                     	;# 
  3196  081A                     	;# 
  3197  081B                     	;# 
  3198  081C                     	;# 
  3199  081D                     	;# 
  3200  081E                     	;# 
  3201  081F                     	;# 
  3202  088C                     	;# 
  3203  088D                     	;# 
  3204  088E                     	;# 
  3205  088F                     	;# 
  3206  0890                     	;# 
  3207  0891                     	;# 
  3208  0892                     	;# 
  3209  0893                     	;# 
  3210  0895                     	;# 
  3211  0896                     	;# 
  3212  0897                     	;# 
  3213  0898                     	;# 
  3214  0899                     	;# 
  3215  089A                     	;# 
  3216  089B                     	;# 
  3217  090C                     	;# 
  3218  090E                     	;# 
  3219  090F                     	;# 
  3220  091F                     	;# 
  3221  091F                     	;# 
  3222  098F                     	;# 
  3223  098F                     	;# 
  3224  0990                     	;# 
  3225  0991                     	;# 
  3226  0992                     	;# 
  3227  0993                     	;# 
  3228  0994                     	;# 
  3229  0995                     	;# 
  3230  0996                     	;# 
  3231  0997                     	;# 
  3232  0E0F                     	;# 
  3233  0E10                     	;# 
  3234  0E11                     	;# 
  3235  0E12                     	;# 
  3236  0E13                     	;# 
  3237  0E14                     	;# 
  3238  0E15                     	;# 
  3239  0E16                     	;# 
  3240  0E17                     	;# 
  3241  0E18                     	;# 
  3242  0E19                     	;# 
  3243  0E1A                     	;# 
  3244  0E1B                     	;# 
  3245  0E1C                     	;# 
  3246  0E1D                     	;# 
  3247  0E1E                     	;# 
  3248  0E1F                     	;# 
  3249  0E20                     	;# 
  3250  0E21                     	;# 
  3251  0E22                     	;# 
  3252  0E23                     	;# 
  3253  0E24                     	;# 
  3254  0E25                     	;# 
  3255  0E26                     	;# 
  3256  0E27                     	;# 
  3257  0E28                     	;# 
  3258  0E29                     	;# 
  3259  0E2A                     	;# 
  3260  0E2B                     	;# 
  3261  0E2C                     	;# 
  3262  0E2D                     	;# 
  3263  0E2E                     	;# 
  3264  0E2F                     	;# 
  3265  0E30                     	;# 
  3266  0E31                     	;# 
  3267  0E32                     	;# 
  3268  0E33                     	;# 
  3269  0E34                     	;# 
  3270  0E35                     	;# 
  3271  0E36                     	;# 
  3272  0E37                     	;# 
  3273  0E8F                     	;# 
  3274  0E90                     	;# 
  3275  0E91                     	;# 
  3276  0E92                     	;# 
  3277  0E93                     	;# 
  3278  0E94                     	;# 
  3279  0E95                     	;# 
  3280  0E96                     	;# 
  3281  0E97                     	;# 
  3282  0E9C                     	;# 
  3283  0E9D                     	;# 
  3284  0E9E                     	;# 
  3285  0EA1                     	;# 
  3286  0EA2                     	;# 
  3287  0EA3                     	;# 
  3288  0EA4                     	;# 
  3289  0EA5                     	;# 
  3290  0EA9                     	;# 
  3291  0EAA                     	;# 
  3292  0EAB                     	;# 
  3293  0EAC                     	;# 
  3294  0EB1                     	;# 
  3295  0EB2                     	;# 
  3296  0EB3                     	;# 
  3297  0EB8                     	;# 
  3298  0EB9                     	;# 
  3299  0EBA                     	;# 
  3300  0EBB                     	;# 
  3301  0EBC                     	;# 
  3302  0EBD                     	;# 
  3303  0EBE                     	;# 
  3304  0EC3                     	;# 
  3305  0EC5                     	;# 
  3306  0EC6                     	;# 
  3307  0EC7                     	;# 
  3308  0EC8                     	;# 
  3309  0EC9                     	;# 
  3310  0ECA                     	;# 
  3311  0ECB                     	;# 
  3312  0ECC                     	;# 
  3313  0F10                     	;# 
  3314  0F11                     	;# 
  3315  0F12                     	;# 
  3316  0F13                     	;# 
  3317  0F14                     	;# 
  3318  0F15                     	;# 
  3319  0F16                     	;# 
  3320  0F17                     	;# 
  3321  0F18                     	;# 
  3322  0F19                     	;# 
  3323  0F1A                     	;# 
  3324  0F1B                     	;# 
  3325  0F1C                     	;# 
  3326  0F1D                     	;# 
  3327  0F1E                     	;# 
  3328  0F1F                     	;# 
  3329  0F20                     	;# 
  3330  0F21                     	;# 
  3331  0F22                     	;# 
  3332  0F23                     	;# 
  3333  0F24                     	;# 
  3334  0F25                     	;# 
  3335  0F26                     	;# 
  3336  0F27                     	;# 
  3337  0F28                     	;# 
  3338  0F29                     	;# 
  3339  0F2A                     	;# 
  3340  0F2B                     	;# 
  3341  0F2C                     	;# 
  3342  0F2D                     	;# 
  3343  0F2E                     	;# 
  3344  0F2F                     	;# 
  3345  0F30                     	;# 
  3346  0F31                     	;# 
  3347  0F32                     	;# 
  3348  0F38                     	;# 
  3349  0F39                     	;# 
  3350  0F3A                     	;# 
  3351  0F3B                     	;# 
  3352  0F3C                     	;# 
  3353  0F3D                     	;# 
  3354  0F3E                     	;# 
  3355  0F3F                     	;# 
  3356  0F40                     	;# 
  3357  0F41                     	;# 
  3358  0F43                     	;# 
  3359  0F44                     	;# 
  3360  0F45                     	;# 
  3361  0F46                     	;# 
  3362  0F47                     	;# 
  3363  0F48                     	;# 
  3364  0F49                     	;# 
  3365  0F4A                     	;# 
  3366  0F4B                     	;# 
  3367  0F4C                     	;# 
  3368  0F4E                     	;# 
  3369  0F4F                     	;# 
  3370  0F50                     	;# 
  3371  0F51                     	;# 
  3372  0F52                     	;# 
  3373  0F53                     	;# 
  3374  0F54                     	;# 
  3375  0F55                     	;# 
  3376  0F56                     	;# 
  3377  0F57                     	;# 
  3378  0F59                     	;# 
  3379  0F5A                     	;# 
  3380  0F5B                     	;# 
  3381  0F5C                     	;# 
  3382  0F5D                     	;# 
  3383  0F61                     	;# 
  3384  0F62                     	;# 
  3385  0F64                     	;# 
  3386  0F65                     	;# 
  3387  0F66                     	;# 
  3388  0F67                     	;# 
  3389  0F68                     	;# 
  3390  0F69                     	;# 
  3391  0F6A                     	;# 
  3392  0F6B                     	;# 
  3393  0F6C                     	;# 
  3394  0F6D                     	;# 
  3395  0FE4                     	;# 
  3396  0FE5                     	;# 
  3397  0FE6                     	;# 
  3398  0FE7                     	;# 
  3399  0FE8                     	;# 
  3400  0FE9                     	;# 
  3401  0FEA                     	;# 
  3402  0FEB                     	;# 
  3403  0FED                     	;# 
  3404  0FEE                     	;# 
  3405  0FEF                     	;# 
  3406  0000                     	;# 
  3407  0001                     	;# 
  3408  0002                     	;# 
  3409  0003                     	;# 
  3410  0004                     	;# 
  3411  0005                     	;# 
  3412  0006                     	;# 
  3413  0007                     	;# 
  3414  0008                     	;# 
  3415  0009                     	;# 
  3416  000A                     	;# 
  3417  000B                     	;# 
  3418  000C                     	;# 
  3419  000D                     	;# 
  3420  000E                     	;# 
  3421  000F                     	;# 
  3422  0010                     	;# 
  3423  0011                     	;# 
  3424  0012                     	;# 
  3425  0013                     	;# 
  3426  0014                     	;# 
  3427  0015                     	;# 
  3428  0016                     	;# 
  3429  0017                     	;# 
  3430  0018                     	;# 
  3431  0019                     	;# 
  3432  001A                     	;# 
  3433  001C                     	;# 
  3434  001C                     	;# 
  3435  001D                     	;# 
  3436  001D                     	;# 
  3437  001E                     	;# 
  3438  001F                     	;# 
  3439  008C                     	;# 
  3440  008C                     	;# 
  3441  008D                     	;# 
  3442  008E                     	;# 
  3443  008E                     	;# 
  3444  008F                     	;# 
  3445  0090                     	;# 
  3446  0090                     	;# 
  3447  0091                     	;# 
  3448  0093                     	;# 
  3449  0094                     	;# 
  3450  0095                     	;# 
  3451  0096                     	;# 
  3452  0097                     	;# 
  3453  0098                     	;# 
  3454  0099                     	;# 
  3455  009A                     	;# 
  3456  009B                     	;# 
  3457  009C                     	;# 
  3458  009D                     	;# 
  3459  009E                     	;# 
  3460  010C                     	;# 
  3461  010D                     	;# 
  3462  010E                     	;# 
  3463  010E                     	;# 
  3464  010F                     	;# 
  3465  0110                     	;# 
  3466  0110                     	;# 
  3467  0111                     	;# 
  3468  0112                     	;# 
  3469  0112                     	;# 
  3470  0113                     	;# 
  3471  0114                     	;# 
  3472  0114                     	;# 
  3473  0115                     	;# 
  3474  0116                     	;# 
  3475  0116                     	;# 
  3476  0117                     	;# 
  3477  0119                     	;# 
  3478  0119                     	;# 
  3479  0119                     	;# 
  3480  011A                     	;# 
  3481  011A                     	;# 
  3482  011A                     	;# 
  3483  011B                     	;# 
  3484  011B                     	;# 
  3485  011B                     	;# 
  3486  011B                     	;# 
  3487  011B                     	;# 
  3488  011C                     	;# 
  3489  011C                     	;# 
  3490  011C                     	;# 
  3491  011D                     	;# 
  3492  011D                     	;# 
  3493  011D                     	;# 
  3494  011E                     	;# 
  3495  011E                     	;# 
  3496  011E                     	;# 
  3497  011F                     	;# 
  3498  011F                     	;# 
  3499  011F                     	;# 
  3500  011F                     	;# 
  3501  011F                     	;# 
  3502  018C                     	;# 
  3503  018D                     	;# 
  3504  018E                     	;# 
  3505  018F                     	;# 
  3506  0190                     	;# 
  3507  0191                     	;# 
  3508  0192                     	;# 
  3509  0196                     	;# 
  3510  0197                     	;# 
  3511  0198                     	;# 
  3512  0199                     	;# 
  3513  019A                     	;# 
  3514  019B                     	;# 
  3515  019C                     	;# 
  3516  020C                     	;# 
  3517  020C                     	;# 
  3518  020D                     	;# 
  3519  020E                     	;# 
  3520  020F                     	;# 
  3521  020F                     	;# 
  3522  0210                     	;# 
  3523  0210                     	;# 
  3524  0211                     	;# 
  3525  0211                     	;# 
  3526  0212                     	;# 
  3527  0212                     	;# 
  3528  0213                     	;# 
  3529  0214                     	;# 
  3530  0215                     	;# 
  3531  0215                     	;# 
  3532  0216                     	;# 
  3533  0216                     	;# 
  3534  0217                     	;# 
  3535  0217                     	;# 
  3536  0218                     	;# 
  3537  0218                     	;# 
  3538  0219                     	;# 
  3539  021A                     	;# 
  3540  021B                     	;# 
  3541  021B                     	;# 
  3542  021C                     	;# 
  3543  021C                     	;# 
  3544  021D                     	;# 
  3545  021D                     	;# 
  3546  021E                     	;# 
  3547  021F                     	;# 
  3548  028C                     	;# 
  3549  028C                     	;# 
  3550  028D                     	;# 
  3551  028D                     	;# 
  3552  028E                     	;# 
  3553  028F                     	;# 
  3554  0290                     	;# 
  3555  0290                     	;# 
  3556  0291                     	;# 
  3557  0292                     	;# 
  3558  0292                     	;# 
  3559  0293                     	;# 
  3560  0293                     	;# 
  3561  0294                     	;# 
  3562  0295                     	;# 
  3563  0296                     	;# 
  3564  0296                     	;# 
  3565  0297                     	;# 
  3566  0298                     	;# 
  3567  0298                     	;# 
  3568  0299                     	;# 
  3569  0299                     	;# 
  3570  029A                     	;# 
  3571  029B                     	;# 
  3572  029C                     	;# 
  3573  029C                     	;# 
  3574  029D                     	;# 
  3575  030C                     	;# 
  3576  030C                     	;# 
  3577  030D                     	;# 
  3578  030E                     	;# 
  3579  030F                     	;# 
  3580  0310                     	;# 
  3581  0310                     	;# 
  3582  0311                     	;# 
  3583  0312                     	;# 
  3584  0313                     	;# 
  3585  0314                     	;# 
  3586  0314                     	;# 
  3587  0315                     	;# 
  3588  0316                     	;# 
  3589  0317                     	;# 
  3590  0318                     	;# 
  3591  0318                     	;# 
  3592  0319                     	;# 
  3593  031A                     	;# 
  3594  031B                     	;# 
  3595  031C                     	;# 
  3596  031C                     	;# 
  3597  031D                     	;# 
  3598  031E                     	;# 
  3599  031F                     	;# 
  3600  038C                     	;# 
  3601  038C                     	;# 
  3602  038D                     	;# 
  3603  038E                     	;# 
  3604  0390                     	;# 
  3605  0390                     	;# 
  3606  0391                     	;# 
  3607  0392                     	;# 
  3608  040C                     	;# 
  3609  040D                     	;# 
  3610  040E                     	;# 
  3611  040F                     	;# 
  3612  0410                     	;# 
  3613  0411                     	;# 
  3614  0416                     	;# 
  3615  0416                     	;# 
  3616  0417                     	;# 
  3617  0418                     	;# 
  3618  0418                     	;# 
  3619  0419                     	;# 
  3620  041A                     	;# 
  3621  041A                     	;# 
  3622  041B                     	;# 
  3623  041C                     	;# 
  3624  041C                     	;# 
  3625  041D                     	;# 
  3626  041E                     	;# 
  3627  041F                     	;# 
  3628  048C                     	;# 
  3629  048C                     	;# 
  3630  048D                     	;# 
  3631  048E                     	;# 
  3632  048F                     	;# 
  3633  048F                     	;# 
  3634  0490                     	;# 
  3635  0491                     	;# 
  3636  0492                     	;# 
  3637  0492                     	;# 
  3638  0493                     	;# 
  3639  0494                     	;# 
  3640  0495                     	;# 
  3641  0495                     	;# 
  3642  0496                     	;# 
  3643  0497                     	;# 
  3644  0498                     	;# 
  3645  0499                     	;# 
  3646  049A                     	;# 
  3647  049B                     	;# 
  3648  049C                     	;# 
  3649  049D                     	;# 
  3650  050C                     	;# 
  3651  050C                     	;# 
  3652  050D                     	;# 
  3653  050E                     	;# 
  3654  050F                     	;# 
  3655  050F                     	;# 
  3656  0510                     	;# 
  3657  0511                     	;# 
  3658  0512                     	;# 
  3659  0512                     	;# 
  3660  0513                     	;# 
  3661  0514                     	;# 
  3662  0515                     	;# 
  3663  0515                     	;# 
  3664  0516                     	;# 
  3665  0517                     	;# 
  3666  0518                     	;# 
  3667  0519                     	;# 
  3668  051A                     	;# 
  3669  051B                     	;# 
  3670  051C                     	;# 
  3671  051D                     	;# 
  3672  058C                     	;# 
  3673  058C                     	;# 
  3674  058D                     	;# 
  3675  058E                     	;# 
  3676  058F                     	;# 
  3677  058F                     	;# 
  3678  0590                     	;# 
  3679  0591                     	;# 
  3680  0592                     	;# 
  3681  0593                     	;# 
  3682  060C                     	;# 
  3683  060D                     	;# 
  3684  060E                     	;# 
  3685  060F                     	;# 
  3686  0610                     	;# 
  3687  0611                     	;# 
  3688  0612                     	;# 
  3689  0613                     	;# 
  3690  0614                     	;# 
  3691  0616                     	;# 
  3692  0617                     	;# 
  3693  0618                     	;# 
  3694  0619                     	;# 
  3695  061A                     	;# 
  3696  061B                     	;# 
  3697  061C                     	;# 
  3698  061D                     	;# 
  3699  061E                     	;# 
  3700  068C                     	;# 
  3701  068D                     	;# 
  3702  068E                     	;# 
  3703  068F                     	;# 
  3704  0690                     	;# 
  3705  0691                     	;# 
  3706  0692                     	;# 
  3707  0693                     	;# 
  3708  0694                     	;# 
  3709  070C                     	;# 
  3710  070D                     	;# 
  3711  070E                     	;# 
  3712  070F                     	;# 
  3713  0710                     	;# 
  3714  0711                     	;# 
  3715  0712                     	;# 
  3716  0713                     	;# 
  3717  0714                     	;# 
  3718  0716                     	;# 
  3719  0717                     	;# 
  3720  0718                     	;# 
  3721  0719                     	;# 
  3722  071A                     	;# 
  3723  071B                     	;# 
  3724  071C                     	;# 
  3725  071D                     	;# 
  3726  071E                     	;# 
  3727  0796                     	;# 
  3728  0797                     	;# 
  3729  0798                     	;# 
  3730  0799                     	;# 
  3731  079A                     	;# 
  3732  079B                     	;# 
  3733  080C                     	;# 
  3734  080D                     	;# 
  3735  080E                     	;# 
  3736  080F                     	;# 
  3737  0810                     	;# 
  3738  0811                     	;# 
  3739  0812                     	;# 
  3740  0813                     	;# 
  3741  0814                     	;# 
  3742  081A                     	;# 
  3743  081B                     	;# 
  3744  081C                     	;# 
  3745  081D                     	;# 
  3746  081E                     	;# 
  3747  081F                     	;# 
  3748  088C                     	;# 
  3749  088D                     	;# 
  3750  088E                     	;# 
  3751  088F                     	;# 
  3752  0890                     	;# 
  3753  0891                     	;# 
  3754  0892                     	;# 
  3755  0893                     	;# 
  3756  0895                     	;# 
  3757  0896                     	;# 
  3758  0897                     	;# 
  3759  0898                     	;# 
  3760  0899                     	;# 
  3761  089A                     	;# 
  3762  089B                     	;# 
  3763  090C                     	;# 
  3764  090E                     	;# 
  3765  090F                     	;# 
  3766  091F                     	;# 
  3767  091F                     	;# 
  3768  098F                     	;# 
  3769  098F                     	;# 
  3770  0990                     	;# 
  3771  0991                     	;# 
  3772  0992                     	;# 
  3773  0993                     	;# 
  3774  0994                     	;# 
  3775  0995                     	;# 
  3776  0996                     	;# 
  3777  0997                     	;# 
  3778  0E0F                     	;# 
  3779  0E10                     	;# 
  3780  0E11                     	;# 
  3781  0E12                     	;# 
  3782  0E13                     	;# 
  3783  0E14                     	;# 
  3784  0E15                     	;# 
  3785  0E16                     	;# 
  3786  0E17                     	;# 
  3787  0E18                     	;# 
  3788  0E19                     	;# 
  3789  0E1A                     	;# 
  3790  0E1B                     	;# 
  3791  0E1C                     	;# 
  3792  0E1D                     	;# 
  3793  0E1E                     	;# 
  3794  0E1F                     	;# 
  3795  0E20                     	;# 
  3796  0E21                     	;# 
  3797  0E22                     	;# 
  3798  0E23                     	;# 
  3799  0E24                     	;# 
  3800  0E25                     	;# 
  3801  0E26                     	;# 
  3802  0E27                     	;# 
  3803  0E28                     	;# 
  3804  0E29                     	;# 
  3805  0E2A                     	;# 
  3806  0E2B                     	;# 
  3807  0E2C                     	;# 
  3808  0E2D                     	;# 
  3809  0E2E                     	;# 
  3810  0E2F                     	;# 
  3811  0E30                     	;# 
  3812  0E31                     	;# 
  3813  0E32                     	;# 
  3814  0E33                     	;# 
  3815  0E34                     	;# 
  3816  0E35                     	;# 
  3817  0E36                     	;# 
  3818  0E37                     	;# 
  3819  0E8F                     	;# 
  3820  0E90                     	;# 
  3821  0E91                     	;# 
  3822  0E92                     	;# 
  3823  0E93                     	;# 
  3824  0E94                     	;# 
  3825  0E95                     	;# 
  3826  0E96                     	;# 
  3827  0E97                     	;# 
  3828  0E9C                     	;# 
  3829  0E9D                     	;# 
  3830  0E9E                     	;# 
  3831  0EA1                     	;# 
  3832  0EA2                     	;# 
  3833  0EA3                     	;# 
  3834  0EA4                     	;# 
  3835  0EA5                     	;# 
  3836  0EA9                     	;# 
  3837  0EAA                     	;# 
  3838  0EAB                     	;# 
  3839  0EAC                     	;# 
  3840  0EB1                     	;# 
  3841  0EB2                     	;# 
  3842  0EB3                     	;# 
  3843  0EB8                     	;# 
  3844  0EB9                     	;# 
  3845  0EBA                     	;# 
  3846  0EBB                     	;# 
  3847  0EBC                     	;# 
  3848  0EBD                     	;# 
  3849  0EBE                     	;# 
  3850  0EC3                     	;# 
  3851  0EC5                     	;# 
  3852  0EC6                     	;# 
  3853  0EC7                     	;# 
  3854  0EC8                     	;# 
  3855  0EC9                     	;# 
  3856  0ECA                     	;# 
  3857  0ECB                     	;# 
  3858  0ECC                     	;# 
  3859  0F10                     	;# 
  3860  0F11                     	;# 
  3861  0F12                     	;# 
  3862  0F13                     	;# 
  3863  0F14                     	;# 
  3864  0F15                     	;# 
  3865  0F16                     	;# 
  3866  0F17                     	;# 
  3867  0F18                     	;# 
  3868  0F19                     	;# 
  3869  0F1A                     	;# 
  3870  0F1B                     	;# 
  3871  0F1C                     	;# 
  3872  0F1D                     	;# 
  3873  0F1E                     	;# 
  3874  0F1F                     	;# 
  3875  0F20                     	;# 
  3876  0F21                     	;# 
  3877  0F22                     	;# 
  3878  0F23                     	;# 
  3879  0F24                     	;# 
  3880  0F25                     	;# 
  3881  0F26                     	;# 
  3882  0F27                     	;# 
  3883  0F28                     	;# 
  3884  0F29                     	;# 
  3885  0F2A                     	;# 
  3886  0F2B                     	;# 
  3887  0F2C                     	;# 
  3888  0F2D                     	;# 
  3889  0F2E                     	;# 
  3890  0F2F                     	;# 
  3891  0F30                     	;# 
  3892  0F31                     	;# 
  3893  0F32                     	;# 
  3894  0F38                     	;# 
  3895  0F39                     	;# 
  3896  0F3A                     	;# 
  3897  0F3B                     	;# 
  3898  0F3C                     	;# 
  3899  0F3D                     	;# 
  3900  0F3E                     	;# 
  3901  0F3F                     	;# 
  3902  0F40                     	;# 
  3903  0F41                     	;# 
  3904  0F43                     	;# 
  3905  0F44                     	;# 
  3906  0F45                     	;# 
  3907  0F46                     	;# 
  3908  0F47                     	;# 
  3909  0F48                     	;# 
  3910  0F49                     	;# 
  3911  0F4A                     	;# 
  3912  0F4B                     	;# 
  3913  0F4C                     	;# 
  3914  0F4E                     	;# 
  3915  0F4F                     	;# 
  3916  0F50                     	;# 
  3917  0F51                     	;# 
  3918  0F52                     	;# 
  3919  0F53                     	;# 
  3920  0F54                     	;# 
  3921  0F55                     	;# 
  3922  0F56                     	;# 
  3923  0F57                     	;# 
  3924  0F59                     	;# 
  3925  0F5A                     	;# 
  3926  0F5B                     	;# 
  3927  0F5C                     	;# 
  3928  0F5D                     	;# 
  3929  0F61                     	;# 
  3930  0F62                     	;# 
  3931  0F64                     	;# 
  3932  0F65                     	;# 
  3933  0F66                     	;# 
  3934  0F67                     	;# 
  3935  0F68                     	;# 
  3936  0F69                     	;# 
  3937  0F6A                     	;# 
  3938  0F6B                     	;# 
  3939  0F6C                     	;# 
  3940  0F6D                     	;# 
  3941  0FE4                     	;# 
  3942  0FE5                     	;# 
  3943  0FE6                     	;# 
  3944  0FE7                     	;# 
  3945  0FE8                     	;# 
  3946  0FE9                     	;# 
  3947  0FEA                     	;# 
  3948  0FEB                     	;# 
  3949  0FED                     	;# 
  3950  0FEE                     	;# 
  3951  0FEF                     	;# 
  3952  0000                     	;# 
  3953  0001                     	;# 
  3954  0002                     	;# 
  3955  0003                     	;# 
  3956  0004                     	;# 
  3957  0005                     	;# 
  3958  0006                     	;# 
  3959  0007                     	;# 
  3960  0008                     	;# 
  3961  0009                     	;# 
  3962  000A                     	;# 
  3963  000B                     	;# 
  3964  000C                     	;# 
  3965  000D                     	;# 
  3966  000E                     	;# 
  3967  000F                     	;# 
  3968  0010                     	;# 
  3969  0011                     	;# 
  3970  0012                     	;# 
  3971  0013                     	;# 
  3972  0014                     	;# 
  3973  0015                     	;# 
  3974  0016                     	;# 
  3975  0017                     	;# 
  3976  0018                     	;# 
  3977  0019                     	;# 
  3978  001A                     	;# 
  3979  001C                     	;# 
  3980  001C                     	;# 
  3981  001D                     	;# 
  3982  001D                     	;# 
  3983  001E                     	;# 
  3984  001F                     	;# 
  3985  008C                     	;# 
  3986  008C                     	;# 
  3987  008D                     	;# 
  3988  008E                     	;# 
  3989  008E                     	;# 
  3990  008F                     	;# 
  3991  0090                     	;# 
  3992  0090                     	;# 
  3993  0091                     	;# 
  3994  0093                     	;# 
  3995  0094                     	;# 
  3996  0095                     	;# 
  3997  0096                     	;# 
  3998  0097                     	;# 
  3999  0098                     	;# 
  4000  0099                     	;# 
  4001  009A                     	;# 
  4002  009B                     	;# 
  4003  009C                     	;# 
  4004  009D                     	;# 
  4005  009E                     	;# 
  4006  010C                     	;# 
  4007  010D                     	;# 
  4008  010E                     	;# 
  4009  010E                     	;# 
  4010  010F                     	;# 
  4011  0110                     	;# 
  4012  0110                     	;# 
  4013  0111                     	;# 
  4014  0112                     	;# 
  4015  0112                     	;# 
  4016  0113                     	;# 
  4017  0114                     	;# 
  4018  0114                     	;# 
  4019  0115                     	;# 
  4020  0116                     	;# 
  4021  0116                     	;# 
  4022  0117                     	;# 
  4023  0119                     	;# 
  4024  0119                     	;# 
  4025  0119                     	;# 
  4026  011A                     	;# 
  4027  011A                     	;# 
  4028  011A                     	;# 
  4029  011B                     	;# 
  4030  011B                     	;# 
  4031  011B                     	;# 
  4032  011B                     	;# 
  4033  011B                     	;# 
  4034  011C                     	;# 
  4035  011C                     	;# 
  4036  011C                     	;# 
  4037  011D                     	;# 
  4038  011D                     	;# 
  4039  011D                     	;# 
  4040  011E                     	;# 
  4041  011E                     	;# 
  4042  011E                     	;# 
  4043  011F                     	;# 
  4044  011F                     	;# 
  4045  011F                     	;# 
  4046  011F                     	;# 
  4047  011F                     	;# 
  4048  018C                     	;# 
  4049  018D                     	;# 
  4050  018E                     	;# 
  4051  018F                     	;# 
  4052  0190                     	;# 
  4053  0191                     	;# 
  4054  0192                     	;# 
  4055  0196                     	;# 
  4056  0197                     	;# 
  4057  0198                     	;# 
  4058  0199                     	;# 
  4059  019A                     	;# 
  4060  019B                     	;# 
  4061  019C                     	;# 
  4062  020C                     	;# 
  4063  020C                     	;# 
  4064  020D                     	;# 
  4065  020E                     	;# 
  4066  020F                     	;# 
  4067  020F                     	;# 
  4068  0210                     	;# 
  4069  0210                     	;# 
  4070  0211                     	;# 
  4071  0211                     	;# 
  4072  0212                     	;# 
  4073  0212                     	;# 
  4074  0213                     	;# 
  4075  0214                     	;# 
  4076  0215                     	;# 
  4077  0215                     	;# 
  4078  0216                     	;# 
  4079  0216                     	;# 
  4080  0217                     	;# 
  4081  0217                     	;# 
  4082  0218                     	;# 
  4083  0218                     	;# 
  4084  0219                     	;# 
  4085  021A                     	;# 
  4086  021B                     	;# 
  4087  021B                     	;# 
  4088  021C                     	;# 
  4089  021C                     	;# 
  4090  021D                     	;# 
  4091  021D                     	;# 
  4092  021E                     	;# 
  4093  021F                     	;# 
  4094  028C                     	;# 
  4095  028C                     	;# 
  4096  028D                     	;# 
  4097  028D                     	;# 
  4098  028E                     	;# 
  4099  028F                     	;# 
  4100  0290                     	;# 
  4101  0290                     	;# 
  4102  0291                     	;# 
  4103  0292                     	;# 
  4104  0292                     	;# 
  4105  0293                     	;# 
  4106  0293                     	;# 
  4107  0294                     	;# 
  4108  0295                     	;# 
  4109  0296                     	;# 
  4110  0296                     	;# 
  4111  0297                     	;# 
  4112  0298                     	;# 
  4113  0298                     	;# 
  4114  0299                     	;# 
  4115  0299                     	;# 
  4116  029A                     	;# 
  4117  029B                     	;# 
  4118  029C                     	;# 
  4119  029C                     	;# 
  4120  029D                     	;# 
  4121  030C                     	;# 
  4122  030C                     	;# 
  4123  030D                     	;# 
  4124  030E                     	;# 
  4125  030F                     	;# 
  4126  0310                     	;# 
  4127  0310                     	;# 
  4128  0311                     	;# 
  4129  0312                     	;# 
  4130  0313                     	;# 
  4131  0314                     	;# 
  4132  0314                     	;# 
  4133  0315                     	;# 
  4134  0316                     	;# 
  4135  0317                     	;# 
  4136  0318                     	;# 
  4137  0318                     	;# 
  4138  0319                     	;# 
  4139  031A                     	;# 
  4140  031B                     	;# 
  4141  031C                     	;# 
  4142  031C                     	;# 
  4143  031D                     	;# 
  4144  031E                     	;# 
  4145  031F                     	;# 
  4146  038C                     	;# 
  4147  038C                     	;# 
  4148  038D                     	;# 
  4149  038E                     	;# 
  4150  0390                     	;# 
  4151  0390                     	;# 
  4152  0391                     	;# 
  4153  0392                     	;# 
  4154  040C                     	;# 
  4155  040D                     	;# 
  4156  040E                     	;# 
  4157  040F                     	;# 
  4158  0410                     	;# 
  4159  0411                     	;# 
  4160  0416                     	;# 
  4161  0416                     	;# 
  4162  0417                     	;# 
  4163  0418                     	;# 
  4164  0418                     	;# 
  4165  0419                     	;# 
  4166  041A                     	;# 
  4167  041A                     	;# 
  4168  041B                     	;# 
  4169  041C                     	;# 
  4170  041C                     	;# 
  4171  041D                     	;# 
  4172  041E                     	;# 
  4173  041F                     	;# 
  4174  048C                     	;# 
  4175  048C                     	;# 
  4176  048D                     	;# 
  4177  048E                     	;# 
  4178  048F                     	;# 
  4179  048F                     	;# 
  4180  0490                     	;# 
  4181  0491                     	;# 
  4182  0492                     	;# 
  4183  0492                     	;# 
  4184  0493                     	;# 
  4185  0494                     	;# 
  4186  0495                     	;# 
  4187  0495                     	;# 
  4188  0496                     	;# 
  4189  0497                     	;# 
  4190  0498                     	;# 
  4191  0499                     	;# 
  4192  049A                     	;# 
  4193  049B                     	;# 
  4194  049C                     	;# 
  4195  049D                     	;# 
  4196  050C                     	;# 
  4197  050C                     	;# 
  4198  050D                     	;# 
  4199  050E                     	;# 
  4200  050F                     	;# 
  4201  050F                     	;# 
  4202  0510                     	;# 
  4203  0511                     	;# 
  4204  0512                     	;# 
  4205  0512                     	;# 
  4206  0513                     	;# 
  4207  0514                     	;# 
  4208  0515                     	;# 
  4209  0515                     	;# 
  4210  0516                     	;# 
  4211  0517                     	;# 
  4212  0518                     	;# 
  4213  0519                     	;# 
  4214  051A                     	;# 
  4215  051B                     	;# 
  4216  051C                     	;# 
  4217  051D                     	;# 
  4218  058C                     	;# 
  4219  058C                     	;# 
  4220  058D                     	;# 
  4221  058E                     	;# 
  4222  058F                     	;# 
  4223  058F                     	;# 
  4224  0590                     	;# 
  4225  0591                     	;# 
  4226  0592                     	;# 
  4227  0593                     	;# 
  4228  060C                     	;# 
  4229  060D                     	;# 
  4230  060E                     	;# 
  4231  060F                     	;# 
  4232  0610                     	;# 
  4233  0611                     	;# 
  4234  0612                     	;# 
  4235  0613                     	;# 
  4236  0614                     	;# 
  4237  0616                     	;# 
  4238  0617                     	;# 
  4239  0618                     	;# 
  4240  0619                     	;# 
  4241  061A                     	;# 
  4242  061B                     	;# 
  4243  061C                     	;# 
  4244  061D                     	;# 
  4245  061E                     	;# 
  4246  068C                     	;# 
  4247  068D                     	;# 
  4248  068E                     	;# 
  4249  068F                     	;# 
  4250  0690                     	;# 
  4251  0691                     	;# 
  4252  0692                     	;# 
  4253  0693                     	;# 
  4254  0694                     	;# 
  4255  070C                     	;# 
  4256  070D                     	;# 
  4257  070E                     	;# 
  4258  070F                     	;# 
  4259  0710                     	;# 
  4260  0711                     	;# 
  4261  0712                     	;# 
  4262  0713                     	;# 
  4263  0714                     	;# 
  4264  0716                     	;# 
  4265  0717                     	;# 
  4266  0718                     	;# 
  4267  0719                     	;# 
  4268  071A                     	;# 
  4269  071B                     	;# 
  4270  071C                     	;# 
  4271  071D                     	;# 
  4272  071E                     	;# 
  4273  0796                     	;# 
  4274  0797                     	;# 
  4275  0798                     	;# 
  4276  0799                     	;# 
  4277  079A                     	;# 
  4278  079B                     	;# 
  4279  080C                     	;# 
  4280  080D                     	;# 
  4281  080E                     	;# 
  4282  080F                     	;# 
  4283  0810                     	;# 
  4284  0811                     	;# 
  4285  0812                     	;# 
  4286  0813                     	;# 
  4287  0814                     	;# 
  4288  081A                     	;# 
  4289  081B                     	;# 
  4290  081C                     	;# 
  4291  081D                     	;# 
  4292  081E                     	;# 
  4293  081F                     	;# 
  4294  088C                     	;# 
  4295  088D                     	;# 
  4296  088E                     	;# 
  4297  088F                     	;# 
  4298  0890                     	;# 
  4299  0891                     	;# 
  4300  0892                     	;# 
  4301  0893                     	;# 
  4302  0895                     	;# 
  4303  0896                     	;# 
  4304  0897                     	;# 
  4305  0898                     	;# 
  4306  0899                     	;# 
  4307  089A                     	;# 
  4308  089B                     	;# 
  4309  090C                     	;# 
  4310  090E                     	;# 
  4311  090F                     	;# 
  4312  091F                     	;# 
  4313  091F                     	;# 
  4314  098F                     	;# 
  4315  098F                     	;# 
  4316  0990                     	;# 
  4317  0991                     	;# 
  4318  0992                     	;# 
  4319  0993                     	;# 
  4320  0994                     	;# 
  4321  0995                     	;# 
  4322  0996                     	;# 
  4323  0997                     	;# 
  4324  0E0F                     	;# 
  4325  0E10                     	;# 
  4326  0E11                     	;# 
  4327  0E12                     	;# 
  4328  0E13                     	;# 
  4329  0E14                     	;# 
  4330  0E15                     	;# 
  4331  0E16                     	;# 
  4332  0E17                     	;# 
  4333  0E18                     	;# 
  4334  0E19                     	;# 
  4335  0E1A                     	;# 
  4336  0E1B                     	;# 
  4337  0E1C                     	;# 
  4338  0E1D                     	;# 
  4339  0E1E                     	;# 
  4340  0E1F                     	;# 
  4341  0E20                     	;# 
  4342  0E21                     	;# 
  4343  0E22                     	;# 
  4344  0E23                     	;# 
  4345  0E24                     	;# 
  4346  0E25                     	;# 
  4347  0E26                     	;# 
  4348  0E27                     	;# 
  4349  0E28                     	;# 
  4350  0E29                     	;# 
  4351  0E2A                     	;# 
  4352  0E2B                     	;# 
  4353  0E2C                     	;# 
  4354  0E2D                     	;# 
  4355  0E2E                     	;# 
  4356  0E2F                     	;# 
  4357  0E30                     	;# 
  4358  0E31                     	;# 
  4359  0E32                     	;# 
  4360  0E33                     	;# 
  4361  0E34                     	;# 
  4362  0E35                     	;# 
  4363  0E36                     	;# 
  4364  0E37                     	;# 
  4365  0E8F                     	;# 
  4366  0E90                     	;# 
  4367  0E91                     	;# 
  4368  0E92                     	;# 
  4369  0E93                     	;# 
  4370  0E94                     	;# 
  4371  0E95                     	;# 
  4372  0E96                     	;# 
  4373  0E97                     	;# 
  4374  0E9C                     	;# 
  4375  0E9D                     	;# 
  4376  0E9E                     	;# 
  4377  0EA1                     	;# 
  4378  0EA2                     	;# 
  4379  0EA3                     	;# 
  4380  0EA4                     	;# 
  4381  0EA5                     	;# 
  4382  0EA9                     	;# 
  4383  0EAA                     	;# 
  4384  0EAB                     	;# 
  4385  0EAC                     	;# 
  4386  0EB1                     	;# 
  4387  0EB2                     	;# 
  4388  0EB3                     	;# 
  4389  0EB8                     	;# 
  4390  0EB9                     	;# 
  4391  0EBA                     	;# 
  4392  0EBB                     	;# 
  4393  0EBC                     	;# 
  4394  0EBD                     	;# 
  4395  0EBE                     	;# 
  4396  0EC3                     	;# 
  4397  0EC5                     	;# 
  4398  0EC6                     	;# 
  4399  0EC7                     	;# 
  4400  0EC8                     	;# 
  4401  0EC9                     	;# 
  4402  0ECA                     	;# 
  4403  0ECB                     	;# 
  4404  0ECC                     	;# 
  4405  0F10                     	;# 
  4406  0F11                     	;# 
  4407  0F12                     	;# 
  4408  0F13                     	;# 
  4409  0F14                     	;# 
  4410  0F15                     	;# 
  4411  0F16                     	;# 
  4412  0F17                     	;# 
  4413  0F18                     	;# 
  4414  0F19                     	;# 
  4415  0F1A                     	;# 
  4416  0F1B                     	;# 
  4417  0F1C                     	;# 
  4418  0F1D                     	;# 
  4419  0F1E                     	;# 
  4420  0F1F                     	;# 
  4421  0F20                     	;# 
  4422  0F21                     	;# 
  4423  0F22                     	;# 
  4424  0F23                     	;# 
  4425  0F24                     	;# 
  4426  0F25                     	;# 
  4427  0F26                     	;# 
  4428  0F27                     	;# 
  4429  0F28                     	;# 
  4430  0F29                     	;# 
  4431  0F2A                     	;# 
  4432  0F2B                     	;# 
  4433  0F2C                     	;# 
  4434  0F2D                     	;# 
  4435  0F2E                     	;# 
  4436  0F2F                     	;# 
  4437  0F30                     	;# 
  4438  0F31                     	;# 
  4439  0F32                     	;# 
  4440  0F38                     	;# 
  4441  0F39                     	;# 
  4442  0F3A                     	;# 
  4443  0F3B                     	;# 
  4444  0F3C                     	;# 
  4445  0F3D                     	;# 
  4446  0F3E                     	;# 
  4447  0F3F                     	;# 
  4448  0F40                     	;# 
  4449  0F41                     	;# 
  4450  0F43                     	;# 
  4451  0F44                     	;# 
  4452  0F45                     	;# 
  4453  0F46                     	;# 
  4454  0F47                     	;# 
  4455  0F48                     	;# 
  4456  0F49                     	;# 
  4457  0F4A                     	;# 
  4458  0F4B                     	;# 
  4459  0F4C                     	;# 
  4460  0F4E                     	;# 
  4461  0F4F                     	;# 
  4462  0F50                     	;# 
  4463  0F51                     	;# 
  4464  0F52                     	;# 
  4465  0F53                     	;# 
  4466  0F54                     	;# 
  4467  0F55                     	;# 
  4468  0F56                     	;# 
  4469  0F57                     	;# 
  4470  0F59                     	;# 
  4471  0F5A                     	;# 
  4472  0F5B                     	;# 
  4473  0F5C                     	;# 
  4474  0F5D                     	;# 
  4475  0F61                     	;# 
  4476  0F62                     	;# 
  4477  0F64                     	;# 
  4478  0F65                     	;# 
  4479  0F66                     	;# 
  4480  0F67                     	;# 
  4481  0F68                     	;# 
  4482  0F69                     	;# 
  4483  0F6A                     	;# 
  4484  0F6B                     	;# 
  4485  0F6C                     	;# 
  4486  0F6D                     	;# 
  4487  0FE4                     	;# 
  4488  0FE5                     	;# 
  4489  0FE6                     	;# 
  4490  0FE7                     	;# 
  4491  0FE8                     	;# 
  4492  0FE9                     	;# 
  4493  0FEA                     	;# 
  4494  0FEB                     	;# 
  4495  0FED                     	;# 
  4496  0FEE                     	;# 
  4497  0FEF                     	;# 
  4498  0000                     	;# 
  4499  0001                     	;# 
  4500  0002                     	;# 
  4501  0003                     	;# 
  4502  0004                     	;# 
  4503  0005                     	;# 
  4504  0006                     	;# 
  4505  0007                     	;# 
  4506  0008                     	;# 
  4507  0009                     	;# 
  4508  000A                     	;# 
  4509  000B                     	;# 
  4510  000C                     	;# 
  4511  000D                     	;# 
  4512  000E                     	;# 
  4513  000F                     	;# 
  4514  0010                     	;# 
  4515  0011                     	;# 
  4516  0012                     	;# 
  4517  0013                     	;# 
  4518  0014                     	;# 
  4519  0015                     	;# 
  4520  0016                     	;# 
  4521  0017                     	;# 
  4522  0018                     	;# 
  4523  0019                     	;# 
  4524  001A                     	;# 
  4525  001C                     	;# 
  4526  001C                     	;# 
  4527  001D                     	;# 
  4528  001D                     	;# 
  4529  001E                     	;# 
  4530  001F                     	;# 
  4531  008C                     	;# 
  4532  008C                     	;# 
  4533  008D                     	;# 
  4534  008E                     	;# 
  4535  008E                     	;# 
  4536  008F                     	;# 
  4537  0090                     	;# 
  4538  0090                     	;# 
  4539  0091                     	;# 
  4540  0093                     	;# 
  4541  0094                     	;# 
  4542  0095                     	;# 
  4543  0096                     	;# 
  4544  0097                     	;# 
  4545  0098                     	;# 
  4546  0099                     	;# 
  4547  009A                     	;# 
  4548  009B                     	;# 
  4549  009C                     	;# 
  4550  009D                     	;# 
  4551  009E                     	;# 
  4552  010C                     	;# 
  4553  010D                     	;# 
  4554  010E                     	;# 
  4555  010E                     	;# 
  4556  010F                     	;# 
  4557  0110                     	;# 
  4558  0110                     	;# 
  4559  0111                     	;# 
  4560  0112                     	;# 
  4561  0112                     	;# 
  4562  0113                     	;# 
  4563  0114                     	;# 
  4564  0114                     	;# 
  4565  0115                     	;# 
  4566  0116                     	;# 
  4567  0116                     	;# 
  4568  0117                     	;# 
  4569  0119                     	;# 
  4570  0119                     	;# 
  4571  0119                     	;# 
  4572  011A                     	;# 
  4573  011A                     	;# 
  4574  011A                     	;# 
  4575  011B                     	;# 
  4576  011B                     	;# 
  4577  011B                     	;# 
  4578  011B                     	;# 
  4579  011B                     	;# 
  4580  011C                     	;# 
  4581  011C                     	;# 
  4582  011C                     	;# 
  4583  011D                     	;# 
  4584  011D                     	;# 
  4585  011D                     	;# 
  4586  011E                     	;# 
  4587  011E                     	;# 
  4588  011E                     	;# 
  4589  011F                     	;# 
  4590  011F                     	;# 
  4591  011F                     	;# 
  4592  011F                     	;# 
  4593  011F                     	;# 
  4594  018C                     	;# 
  4595  018D                     	;# 
  4596  018E                     	;# 
  4597  018F                     	;# 
  4598  0190                     	;# 
  4599  0191                     	;# 
  4600  0192                     	;# 
  4601  0196                     	;# 
  4602  0197                     	;# 
  4603  0198                     	;# 
  4604  0199                     	;# 
  4605  019A                     	;# 
  4606  019B                     	;# 
  4607  019C                     	;# 
  4608  020C                     	;# 
  4609  020C                     	;# 
  4610  020D                     	;# 
  4611  020E                     	;# 
  4612  020F                     	;# 
  4613  020F                     	;# 
  4614  0210                     	;# 
  4615  0210                     	;# 
  4616  0211                     	;# 
  4617  0211                     	;# 
  4618  0212                     	;# 
  4619  0212                     	;# 
  4620  0213                     	;# 
  4621  0214                     	;# 
  4622  0215                     	;# 
  4623  0215                     	;# 
  4624  0216                     	;# 
  4625  0216                     	;# 
  4626  0217                     	;# 
  4627  0217                     	;# 
  4628  0218                     	;# 
  4629  0218                     	;# 
  4630  0219                     	;# 
  4631  021A                     	;# 
  4632  021B                     	;# 
  4633  021B                     	;# 
  4634  021C                     	;# 
  4635  021C                     	;# 
  4636  021D                     	;# 
  4637  021D                     	;# 
  4638  021E                     	;# 
  4639  021F                     	;# 
  4640  028C                     	;# 
  4641  028C                     	;# 
  4642  028D                     	;# 
  4643  028D                     	;# 
  4644  028E                     	;# 
  4645  028F                     	;# 
  4646  0290                     	;# 
  4647  0290                     	;# 
  4648  0291                     	;# 
  4649  0292                     	;# 
  4650  0292                     	;# 
  4651  0293                     	;# 
  4652  0293                     	;# 
  4653  0294                     	;# 
  4654  0295                     	;# 
  4655  0296                     	;# 
  4656  0296                     	;# 
  4657  0297                     	;# 
  4658  0298                     	;# 
  4659  0298                     	;# 
  4660  0299                     	;# 
  4661  0299                     	;# 
  4662  029A                     	;# 
  4663  029B                     	;# 
  4664  029C                     	;# 
  4665  029C                     	;# 
  4666  029D                     	;# 
  4667  030C                     	;# 
  4668  030C                     	;# 
  4669  030D                     	;# 
  4670  030E                     	;# 
  4671  030F                     	;# 
  4672  0310                     	;# 
  4673  0310                     	;# 
  4674  0311                     	;# 
  4675  0312                     	;# 
  4676  0313                     	;# 
  4677  0314                     	;# 
  4678  0314                     	;# 
  4679  0315                     	;# 
  4680  0316                     	;# 
  4681  0317                     	;# 
  4682  0318                     	;# 
  4683  0318                     	;# 
  4684  0319                     	;# 
  4685  031A                     	;# 
  4686  031B                     	;# 
  4687  031C                     	;# 
  4688  031C                     	;# 
  4689  031D                     	;# 
  4690  031E                     	;# 
  4691  031F                     	;# 
  4692  038C                     	;# 
  4693  038C                     	;# 
  4694  038D                     	;# 
  4695  038E                     	;# 
  4696  0390                     	;# 
  4697  0390                     	;# 
  4698  0391                     	;# 
  4699  0392                     	;# 
  4700  040C                     	;# 
  4701  040D                     	;# 
  4702  040E                     	;# 
  4703  040F                     	;# 
  4704  0410                     	;# 
  4705  0411                     	;# 
  4706  0416                     	;# 
  4707  0416                     	;# 
  4708  0417                     	;# 
  4709  0418                     	;# 
  4710  0418                     	;# 
  4711  0419                     	;# 
  4712  041A                     	;# 
  4713  041A                     	;# 
  4714  041B                     	;# 
  4715  041C                     	;# 
  4716  041C                     	;# 
  4717  041D                     	;# 
  4718  041E                     	;# 
  4719  041F                     	;# 
  4720  048C                     	;# 
  4721  048C                     	;# 
  4722  048D                     	;# 
  4723  048E                     	;# 
  4724  048F                     	;# 
  4725  048F                     	;# 
  4726  0490                     	;# 
  4727  0491                     	;# 
  4728  0492                     	;# 
  4729  0492                     	;# 
  4730  0493                     	;# 
  4731  0494                     	;# 
  4732  0495                     	;# 
  4733  0495                     	;# 
  4734  0496                     	;# 
  4735  0497                     	;# 
  4736  0498                     	;# 
  4737  0499                     	;# 
  4738  049A                     	;# 
  4739  049B                     	;# 
  4740  049C                     	;# 
  4741  049D                     	;# 
  4742  050C                     	;# 
  4743  050C                     	;# 
  4744  050D                     	;# 
  4745  050E                     	;# 
  4746  050F                     	;# 
  4747  050F                     	;# 
  4748  0510                     	;# 
  4749  0511                     	;# 
  4750  0512                     	;# 
  4751  0512                     	;# 
  4752  0513                     	;# 
  4753  0514                     	;# 
  4754  0515                     	;# 
  4755  0515                     	;# 
  4756  0516                     	;# 
  4757  0517                     	;# 
  4758  0518                     	;# 
  4759  0519                     	;# 
  4760  051A                     	;# 
  4761  051B                     	;# 
  4762  051C                     	;# 
  4763  051D                     	;# 
  4764  058C                     	;# 
  4765  058C                     	;# 
  4766  058D                     	;# 
  4767  058E                     	;# 
  4768  058F                     	;# 
  4769  058F                     	;# 
  4770  0590                     	;# 
  4771  0591                     	;# 
  4772  0592                     	;# 
  4773  0593                     	;# 
  4774  060C                     	;# 
  4775  060D                     	;# 
  4776  060E                     	;# 
  4777  060F                     	;# 
  4778  0610                     	;# 
  4779  0611                     	;# 
  4780  0612                     	;# 
  4781  0613                     	;# 
  4782  0614                     	;# 
  4783  0616                     	;# 
  4784  0617                     	;# 
  4785  0618                     	;# 
  4786  0619                     	;# 
  4787  061A                     	;# 
  4788  061B                     	;# 
  4789  061C                     	;# 
  4790  061D                     	;# 
  4791  061E                     	;# 
  4792  068C                     	;# 
  4793  068D                     	;# 
  4794  068E                     	;# 
  4795  068F                     	;# 
  4796  0690                     	;# 
  4797  0691                     	;# 
  4798  0692                     	;# 
  4799  0693                     	;# 
  4800  0694                     	;# 
  4801  070C                     	;# 
  4802  070D                     	;# 
  4803  070E                     	;# 
  4804  070F                     	;# 
  4805  0710                     	;# 
  4806  0711                     	;# 
  4807  0712                     	;# 
  4808  0713                     	;# 
  4809  0714                     	;# 
  4810  0716                     	;# 
  4811  0717                     	;# 
  4812  0718                     	;# 
  4813  0719                     	;# 
  4814  071A                     	;# 
  4815  071B                     	;# 
  4816  071C                     	;# 
  4817  071D                     	;# 
  4818  071E                     	;# 
  4819  0796                     	;# 
  4820  0797                     	;# 
  4821  0798                     	;# 
  4822  0799                     	;# 
  4823  079A                     	;# 
  4824  079B                     	;# 
  4825  080C                     	;# 
  4826  080D                     	;# 
  4827  080E                     	;# 
  4828  080F                     	;# 
  4829  0810                     	;# 
  4830  0811                     	;# 
  4831  0812                     	;# 
  4832  0813                     	;# 
  4833  0814                     	;# 
  4834  081A                     	;# 
  4835  081B                     	;# 
  4836  081C                     	;# 
  4837  081D                     	;# 
  4838  081E                     	;# 
  4839  081F                     	;# 
  4840  088C                     	;# 
  4841  088D                     	;# 
  4842  088E                     	;# 
  4843  088F                     	;# 
  4844  0890                     	;# 
  4845  0891                     	;# 
  4846  0892                     	;# 
  4847  0893                     	;# 
  4848  0895                     	;# 
  4849  0896                     	;# 
  4850  0897                     	;# 
  4851  0898                     	;# 
  4852  0899                     	;# 
  4853  089A                     	;# 
  4854  089B                     	;# 
  4855  090C                     	;# 
  4856  090E                     	;# 
  4857  090F                     	;# 
  4858  091F                     	;# 
  4859  091F                     	;# 
  4860  098F                     	;# 
  4861  098F                     	;# 
  4862  0990                     	;# 
  4863  0991                     	;# 
  4864  0992                     	;# 
  4865  0993                     	;# 
  4866  0994                     	;# 
  4867  0995                     	;# 
  4868  0996                     	;# 
  4869  0997                     	;# 
  4870  0E0F                     	;# 
  4871  0E10                     	;# 
  4872  0E11                     	;# 
  4873  0E12                     	;# 
  4874  0E13                     	;# 
  4875  0E14                     	;# 
  4876  0E15                     	;# 
  4877  0E16                     	;# 
  4878  0E17                     	;# 
  4879  0E18                     	;# 
  4880  0E19                     	;# 
  4881  0E1A                     	;# 
  4882  0E1B                     	;# 
  4883  0E1C                     	;# 
  4884  0E1D                     	;# 
  4885  0E1E                     	;# 
  4886  0E1F                     	;# 
  4887  0E20                     	;# 
  4888  0E21                     	;# 
  4889  0E22                     	;# 
  4890  0E23                     	;# 
  4891  0E24                     	;# 
  4892  0E25                     	;# 
  4893  0E26                     	;# 
  4894  0E27                     	;# 
  4895  0E28                     	;# 
  4896  0E29                     	;# 
  4897  0E2A                     	;# 
  4898  0E2B                     	;# 
  4899  0E2C                     	;# 
  4900  0E2D                     	;# 
  4901  0E2E                     	;# 
  4902  0E2F                     	;# 
  4903  0E30                     	;# 
  4904  0E31                     	;# 
  4905  0E32                     	;# 
  4906  0E33                     	;# 
  4907  0E34                     	;# 
  4908  0E35                     	;# 
  4909  0E36                     	;# 
  4910  0E37                     	;# 
  4911  0E8F                     	;# 
  4912  0E90                     	;# 
  4913  0E91                     	;# 
  4914  0E92                     	;# 
  4915  0E93                     	;# 
  4916  0E94                     	;# 
  4917  0E95                     	;# 
  4918  0E96                     	;# 
  4919  0E97                     	;# 
  4920  0E9C                     	;# 
  4921  0E9D                     	;# 
  4922  0E9E                     	;# 
  4923  0EA1                     	;# 
  4924  0EA2                     	;# 
  4925  0EA3                     	;# 
  4926  0EA4                     	;# 
  4927  0EA5                     	;# 
  4928  0EA9                     	;# 
  4929  0EAA                     	;# 
  4930  0EAB                     	;# 
  4931  0EAC                     	;# 
  4932  0EB1                     	;# 
  4933  0EB2                     	;# 
  4934  0EB3                     	;# 
  4935  0EB8                     	;# 
  4936  0EB9                     	;# 
  4937  0EBA                     	;# 
  4938  0EBB                     	;# 
  4939  0EBC                     	;# 
  4940  0EBD                     	;# 
  4941  0EBE                     	;# 
  4942  0EC3                     	;# 
  4943  0EC5                     	;# 
  4944  0EC6                     	;# 
  4945  0EC7                     	;# 
  4946  0EC8                     	;# 
  4947  0EC9                     	;# 
  4948  0ECA                     	;# 
  4949  0ECB                     	;# 
  4950  0ECC                     	;# 
  4951  0F10                     	;# 
  4952  0F11                     	;# 
  4953  0F12                     	;# 
  4954  0F13                     	;# 
  4955  0F14                     	;# 
  4956  0F15                     	;# 
  4957  0F16                     	;# 
  4958  0F17                     	;# 
  4959  0F18                     	;# 
  4960  0F19                     	;# 
  4961  0F1A                     	;# 
  4962  0F1B                     	;# 
  4963  0F1C                     	;# 
  4964  0F1D                     	;# 
  4965  0F1E                     	;# 
  4966  0F1F                     	;# 
  4967  0F20                     	;# 
  4968  0F21                     	;# 
  4969  0F22                     	;# 
  4970  0F23                     	;# 
  4971  0F24                     	;# 
  4972  0F25                     	;# 
  4973  0F26                     	;# 
  4974  0F27                     	;# 
  4975  0F28                     	;# 
  4976  0F29                     	;# 
  4977  0F2A                     	;# 
  4978  0F2B                     	;# 
  4979  0F2C                     	;# 
  4980  0F2D                     	;# 
  4981  0F2E                     	;# 
  4982  0F2F                     	;# 
  4983  0F30                     	;# 
  4984  0F31                     	;# 
  4985  0F32                     	;# 
  4986  0F38                     	;# 
  4987  0F39                     	;# 
  4988  0F3A                     	;# 
  4989  0F3B                     	;# 
  4990  0F3C                     	;# 
  4991  0F3D                     	;# 
  4992  0F3E                     	;# 
  4993  0F3F                     	;# 
  4994  0F40                     	;# 
  4995  0F41                     	;# 
  4996  0F43                     	;# 
  4997  0F44                     	;# 
  4998  0F45                     	;# 
  4999  0F46                     	;# 
  5000  0F47                     	;# 
  5001  0F48                     	;# 
  5002  0F49                     	;# 
  5003  0F4A                     	;# 
  5004  0F4B                     	;# 
  5005  0F4C                     	;# 
  5006  0F4E                     	;# 
  5007  0F4F                     	;# 
  5008  0F50                     	;# 
  5009  0F51                     	;# 
  5010  0F52                     	;# 
  5011  0F53                     	;# 
  5012  0F54                     	;# 
  5013  0F55                     	;# 
  5014  0F56                     	;# 
  5015  0F57                     	;# 
  5016  0F59                     	;# 
  5017  0F5A                     	;# 
  5018  0F5B                     	;# 
  5019  0F5C                     	;# 
  5020  0F5D                     	;# 
  5021  0F61                     	;# 
  5022  0F62                     	;# 
  5023  0F64                     	;# 
  5024  0F65                     	;# 
  5025  0F66                     	;# 
  5026  0F67                     	;# 
  5027  0F68                     	;# 
  5028  0F69                     	;# 
  5029  0F6A                     	;# 
  5030  0F6B                     	;# 
  5031  0F6C                     	;# 
  5032  0F6D                     	;# 
  5033  0FE4                     	;# 
  5034  0FE5                     	;# 
  5035  0FE6                     	;# 
  5036  0FE7                     	;# 
  5037  0FE8                     	;# 
  5038  0FE9                     	;# 
  5039  0FEA                     	;# 
  5040  0FEB                     	;# 
  5041  0FED                     	;# 
  5042  0FEE                     	;# 
  5043  0FEF                     	;# 
  5044  0000                     	;# 
  5045  0001                     	;# 
  5046  0002                     	;# 
  5047  0003                     	;# 
  5048  0004                     	;# 
  5049  0005                     	;# 
  5050  0006                     	;# 
  5051  0007                     	;# 
  5052  0008                     	;# 
  5053  0009                     	;# 
  5054  000A                     	;# 
  5055  000B                     	;# 
  5056  000C                     	;# 
  5057  000D                     	;# 
  5058  000E                     	;# 
  5059  000F                     	;# 
  5060  0010                     	;# 
  5061  0011                     	;# 
  5062  0012                     	;# 
  5063  0013                     	;# 
  5064  0014                     	;# 
  5065  0015                     	;# 
  5066  0016                     	;# 
  5067  0017                     	;# 
  5068  0018                     	;# 
  5069  0019                     	;# 
  5070  001A                     	;# 
  5071  001C                     	;# 
  5072  001C                     	;# 
  5073  001D                     	;# 
  5074  001D                     	;# 
  5075  001E                     	;# 
  5076  001F                     	;# 
  5077  008C                     	;# 
  5078  008C                     	;# 
  5079  008D                     	;# 
  5080  008E                     	;# 
  5081  008E                     	;# 
  5082  008F                     	;# 
  5083  0090                     	;# 
  5084  0090                     	;# 
  5085  0091                     	;# 
  5086  0093                     	;# 
  5087  0094                     	;# 
  5088  0095                     	;# 
  5089  0096                     	;# 
  5090  0097                     	;# 
  5091  0098                     	;# 
  5092  0099                     	;# 
  5093  009A                     	;# 
  5094  009B                     	;# 
  5095  009C                     	;# 
  5096  009D                     	;# 
  5097  009E                     	;# 
  5098  010C                     	;# 
  5099  010D                     	;# 
  5100  010E                     	;# 
  5101  010E                     	;# 
  5102  010F                     	;# 
  5103  0110                     	;# 
  5104  0110                     	;# 
  5105  0111                     	;# 
  5106  0112                     	;# 
  5107  0112                     	;# 
  5108  0113                     	;# 
  5109  0114                     	;# 
  5110  0114                     	;# 
  5111  0115                     	;# 
  5112  0116                     	;# 
  5113  0116                     	;# 
  5114  0117                     	;# 
  5115  0119                     	;# 
  5116  0119                     	;# 
  5117  0119                     	;# 
  5118  011A                     	;# 
  5119  011A                     	;# 
  5120  011A                     	;# 
  5121  011B                     	;# 
  5122  011B                     	;# 
  5123  011B                     	;# 
  5124  011B                     	;# 
  5125  011B                     	;# 
  5126  011C                     	;# 
  5127  011C                     	;# 
  5128  011C                     	;# 
  5129  011D                     	;# 
  5130  011D                     	;# 
  5131  011D                     	;# 
  5132  011E                     	;# 
  5133  011E                     	;# 
  5134  011E                     	;# 
  5135  011F                     	;# 
  5136  011F                     	;# 
  5137  011F                     	;# 
  5138  011F                     	;# 
  5139  011F                     	;# 
  5140  018C                     	;# 
  5141  018D                     	;# 
  5142  018E                     	;# 
  5143  018F                     	;# 
  5144  0190                     	;# 
  5145  0191                     	;# 
  5146  0192                     	;# 
  5147  0196                     	;# 
  5148  0197                     	;# 
  5149  0198                     	;# 
  5150  0199                     	;# 
  5151  019A                     	;# 
  5152  019B                     	;# 
  5153  019C                     	;# 
  5154  020C                     	;# 
  5155  020C                     	;# 
  5156  020D                     	;# 
  5157  020E                     	;# 
  5158  020F                     	;# 
  5159  020F                     	;# 
  5160  0210                     	;# 
  5161  0210                     	;# 
  5162  0211                     	;# 
  5163  0211                     	;# 
  5164  0212                     	;# 
  5165  0212                     	;# 
  5166  0213                     	;# 
  5167  0214                     	;# 
  5168  0215                     	;# 
  5169  0215                     	;# 
  5170  0216                     	;# 
  5171  0216                     	;# 
  5172  0217                     	;# 
  5173  0217                     	;# 
  5174  0218                     	;# 
  5175  0218                     	;# 
  5176  0219                     	;# 
  5177  021A                     	;# 
  5178  021B                     	;# 
  5179  021B                     	;# 
  5180  021C                     	;# 
  5181  021C                     	;# 
  5182  021D                     	;# 
  5183  021D                     	;# 
  5184  021E                     	;# 
  5185  021F                     	;# 
  5186  028C                     	;# 
  5187  028C                     	;# 
  5188  028D                     	;# 
  5189  028D                     	;# 
  5190  028E                     	;# 
  5191  028F                     	;# 
  5192  0290                     	;# 
  5193  0290                     	;# 
  5194  0291                     	;# 
  5195  0292                     	;# 
  5196  0292                     	;# 
  5197  0293                     	;# 
  5198  0293                     	;# 
  5199  0294                     	;# 
  5200  0295                     	;# 
  5201  0296                     	;# 
  5202  0296                     	;# 
  5203  0297                     	;# 
  5204  0298                     	;# 
  5205  0298                     	;# 
  5206  0299                     	;# 
  5207  0299                     	;# 
  5208  029A                     	;# 
  5209  029B                     	;# 
  5210  029C                     	;# 
  5211  029C                     	;# 
  5212  029D                     	;# 
  5213  030C                     	;# 
  5214  030C                     	;# 
  5215  030D                     	;# 
  5216  030E                     	;# 
  5217  030F                     	;# 
  5218  0310                     	;# 
  5219  0310                     	;# 
  5220  0311                     	;# 
  5221  0312                     	;# 
  5222  0313                     	;# 
  5223  0314                     	;# 
  5224  0314                     	;# 
  5225  0315                     	;# 
  5226  0316                     	;# 
  5227  0317                     	;# 
  5228  0318                     	;# 
  5229  0318                     	;# 
  5230  0319                     	;# 
  5231  031A                     	;# 
  5232  031B                     	;# 
  5233  031C                     	;# 
  5234  031C                     	;# 
  5235  031D                     	;# 
  5236  031E                     	;# 
  5237  031F                     	;# 
  5238  038C                     	;# 
  5239  038C                     	;# 
  5240  038D                     	;# 
  5241  038E                     	;# 
  5242  0390                     	;# 
  5243  0390                     	;# 
  5244  0391                     	;# 
  5245  0392                     	;# 
  5246  040C                     	;# 
  5247  040D                     	;# 
  5248  040E                     	;# 
  5249  040F                     	;# 
  5250  0410                     	;# 
  5251  0411                     	;# 
  5252  0416                     	;# 
  5253  0416                     	;# 
  5254  0417                     	;# 
  5255  0418                     	;# 
  5256  0418                     	;# 
  5257  0419                     	;# 
  5258  041A                     	;# 
  5259  041A                     	;# 
  5260  041B                     	;# 
  5261  041C                     	;# 
  5262  041C                     	;# 
  5263  041D                     	;# 
  5264  041E                     	;# 
  5265  041F                     	;# 
  5266  048C                     	;# 
  5267  048C                     	;# 
  5268  048D                     	;# 
  5269  048E                     	;# 
  5270  048F                     	;# 
  5271  048F                     	;# 
  5272  0490                     	;# 
  5273  0491                     	;# 
  5274  0492                     	;# 
  5275  0492                     	;# 
  5276  0493                     	;# 
  5277  0494                     	;# 
  5278  0495                     	;# 
  5279  0495                     	;# 
  5280  0496                     	;# 
  5281  0497                     	;# 
  5282  0498                     	;# 
  5283  0499                     	;# 
  5284  049A                     	;# 
  5285  049B                     	;# 
  5286  049C                     	;# 
  5287  049D                     	;# 
  5288  050C                     	;# 
  5289  050C                     	;# 
  5290  050D                     	;# 
  5291  050E                     	;# 
  5292  050F                     	;# 
  5293  050F                     	;# 
  5294  0510                     	;# 
  5295  0511                     	;# 
  5296  0512                     	;# 
  5297  0512                     	;# 
  5298  0513                     	;# 
  5299  0514                     	;# 
  5300  0515                     	;# 
  5301  0515                     	;# 
  5302  0516                     	;# 
  5303  0517                     	;# 
  5304  0518                     	;# 
  5305  0519                     	;# 
  5306  051A                     	;# 
  5307  051B                     	;# 
  5308  051C                     	;# 
  5309  051D                     	;# 
  5310  058C                     	;# 
  5311  058C                     	;# 
  5312  058D                     	;# 
  5313  058E                     	;# 
  5314  058F                     	;# 
  5315  058F                     	;# 
  5316  0590                     	;# 
  5317  0591                     	;# 
  5318  0592                     	;# 
  5319  0593                     	;# 
  5320  060C                     	;# 
  5321  060D                     	;# 
  5322  060E                     	;# 
  5323  060F                     	;# 
  5324  0610                     	;# 
  5325  0611                     	;# 
  5326  0612                     	;# 
  5327  0613                     	;# 
  5328  0614                     	;# 
  5329  0616                     	;# 
  5330  0617                     	;# 
  5331  0618                     	;# 
  5332  0619                     	;# 
  5333  061A                     	;# 
  5334  061B                     	;# 
  5335  061C                     	;# 
  5336  061D                     	;# 
  5337  061E                     	;# 
  5338  068C                     	;# 
  5339  068D                     	;# 
  5340  068E                     	;# 
  5341  068F                     	;# 
  5342  0690                     	;# 
  5343  0691                     	;# 
  5344  0692                     	;# 
  5345  0693                     	;# 
  5346  0694                     	;# 
  5347  070C                     	;# 
  5348  070D                     	;# 
  5349  070E                     	;# 
  5350  070F                     	;# 
  5351  0710                     	;# 
  5352  0711                     	;# 
  5353  0712                     	;# 
  5354  0713                     	;# 
  5355  0714                     	;# 
  5356  0716                     	;# 
  5357  0717                     	;# 
  5358  0718                     	;# 
  5359  0719                     	;# 
  5360  071A                     	;# 
  5361  071B                     	;# 
  5362  071C                     	;# 
  5363  071D                     	;# 
  5364  071E                     	;# 
  5365  0796                     	;# 
  5366  0797                     	;# 
  5367  0798                     	;# 
  5368  0799                     	;# 
  5369  079A                     	;# 
  5370  079B                     	;# 
  5371  080C                     	;# 
  5372  080D                     	;# 
  5373  080E                     	;# 
  5374  080F                     	;# 
  5375  0810                     	;# 
  5376  0811                     	;# 
  5377  0812                     	;# 
  5378  0813                     	;# 
  5379  0814                     	;# 
  5380  081A                     	;# 
  5381  081B                     	;# 
  5382  081C                     	;# 
  5383  081D                     	;# 
  5384  081E                     	;# 
  5385  081F                     	;# 
  5386  088C                     	;# 
  5387  088D                     	;# 
  5388  088E                     	;# 
  5389  088F                     	;# 
  5390  0890                     	;# 
  5391  0891                     	;# 
  5392  0892                     	;# 
  5393  0893                     	;# 
  5394  0895                     	;# 
  5395  0896                     	;# 
  5396  0897                     	;# 
  5397  0898                     	;# 
  5398  0899                     	;# 
  5399  089A                     	;# 
  5400  089B                     	;# 
  5401  090C                     	;# 
  5402  090E                     	;# 
  5403  090F                     	;# 
  5404  091F                     	;# 
  5405  091F                     	;# 
  5406  098F                     	;# 
  5407  098F                     	;# 
  5408  0990                     	;# 
  5409  0991                     	;# 
  5410  0992                     	;# 
  5411  0993                     	;# 
  5412  0994                     	;# 
  5413  0995                     	;# 
  5414  0996                     	;# 
  5415  0997                     	;# 
  5416  0E0F                     	;# 
  5417  0E10                     	;# 
  5418  0E11                     	;# 
  5419  0E12                     	;# 
  5420  0E13                     	;# 
  5421  0E14                     	;# 
  5422  0E15                     	;# 
  5423  0E16                     	;# 
  5424  0E17                     	;# 
  5425  0E18                     	;# 
  5426  0E19                     	;# 
  5427  0E1A                     	;# 
  5428  0E1B                     	;# 
  5429  0E1C                     	;# 
  5430  0E1D                     	;# 
  5431  0E1E                     	;# 
  5432  0E1F                     	;# 
  5433  0E20                     	;# 
  5434  0E21                     	;# 
  5435  0E22                     	;# 
  5436  0E23                     	;# 
  5437  0E24                     	;# 
  5438  0E25                     	;# 
  5439  0E26                     	;# 
  5440  0E27                     	;# 
  5441  0E28                     	;# 
  5442  0E29                     	;# 
  5443  0E2A                     	;# 
  5444  0E2B                     	;# 
  5445  0E2C                     	;# 
  5446  0E2D                     	;# 
  5447  0E2E                     	;# 
  5448  0E2F                     	;# 
  5449  0E30                     	;# 
  5450  0E31                     	;# 
  5451  0E32                     	;# 
  5452  0E33                     	;# 
  5453  0E34                     	;# 
  5454  0E35                     	;# 
  5455  0E36                     	;# 
  5456  0E37                     	;# 
  5457  0E8F                     	;# 
  5458  0E90                     	;# 
  5459  0E91                     	;# 
  5460  0E92                     	;# 
  5461  0E93                     	;# 
  5462  0E94                     	;# 
  5463  0E95                     	;# 
  5464  0E96                     	;# 
  5465  0E97                     	;# 
  5466  0E9C                     	;# 
  5467  0E9D                     	;# 
  5468  0E9E                     	;# 
  5469  0EA1                     	;# 
  5470  0EA2                     	;# 
  5471  0EA3                     	;# 
  5472  0EA4                     	;# 
  5473  0EA5                     	;# 
  5474  0EA9                     	;# 
  5475  0EAA                     	;# 
  5476  0EAB                     	;# 
  5477  0EAC                     	;# 
  5478  0EB1                     	;# 
  5479  0EB2                     	;# 
  5480  0EB3                     	;# 
  5481  0EB8                     	;# 
  5482  0EB9                     	;# 
  5483  0EBA                     	;# 
  5484  0EBB                     	;# 
  5485  0EBC                     	;# 
  5486  0EBD                     	;# 
  5487  0EBE                     	;# 
  5488  0EC3                     	;# 
  5489  0EC5                     	;# 
  5490  0EC6                     	;# 
  5491  0EC7                     	;# 
  5492  0EC8                     	;# 
  5493  0EC9                     	;# 
  5494  0ECA                     	;# 
  5495  0ECB                     	;# 
  5496  0ECC                     	;# 
  5497  0F10                     	;# 
  5498  0F11                     	;# 
  5499  0F12                     	;# 
  5500  0F13                     	;# 
  5501  0F14                     	;# 
  5502  0F15                     	;# 
  5503  0F16                     	;# 
  5504  0F17                     	;# 
  5505  0F18                     	;# 
  5506  0F19                     	;# 
  5507  0F1A                     	;# 
  5508  0F1B                     	;# 
  5509  0F1C                     	;# 
  5510  0F1D                     	;# 
  5511  0F1E                     	;# 
  5512  0F1F                     	;# 
  5513  0F20                     	;# 
  5514  0F21                     	;# 
  5515  0F22                     	;# 
  5516  0F23                     	;# 
  5517  0F24                     	;# 
  5518  0F25                     	;# 
  5519  0F26                     	;# 
  5520  0F27                     	;# 
  5521  0F28                     	;# 
  5522  0F29                     	;# 
  5523  0F2A                     	;# 
  5524  0F2B                     	;# 
  5525  0F2C                     	;# 
  5526  0F2D                     	;# 
  5527  0F2E                     	;# 
  5528  0F2F                     	;# 
  5529  0F30                     	;# 
  5530  0F31                     	;# 
  5531  0F32                     	;# 
  5532  0F38                     	;# 
  5533  0F39                     	;# 
  5534  0F3A                     	;# 
  5535  0F3B                     	;# 
  5536  0F3C                     	;# 
  5537  0F3D                     	;# 
  5538  0F3E                     	;# 
  5539  0F3F                     	;# 
  5540  0F40                     	;# 
  5541  0F41                     	;# 
  5542  0F43                     	;# 
  5543  0F44                     	;# 
  5544  0F45                     	;# 
  5545  0F46                     	;# 
  5546  0F47                     	;# 
  5547  0F48                     	;# 
  5548  0F49                     	;# 
  5549  0F4A                     	;# 
  5550  0F4B                     	;# 
  5551  0F4C                     	;# 
  5552  0F4E                     	;# 
  5553  0F4F                     	;# 
  5554  0F50                     	;# 
  5555  0F51                     	;# 
  5556  0F52                     	;# 
  5557  0F53                     	;# 
  5558  0F54                     	;# 
  5559  0F55                     	;# 
  5560  0F56                     	;# 
  5561  0F57                     	;# 
  5562  0F59                     	;# 
  5563  0F5A                     	;# 
  5564  0F5B                     	;# 
  5565  0F5C                     	;# 
  5566  0F5D                     	;# 
  5567  0F61                     	;# 
  5568  0F62                     	;# 
  5569  0F64                     	;# 
  5570  0F65                     	;# 
  5571  0F66                     	;# 
  5572  0F67                     	;# 
  5573  0F68                     	;# 
  5574  0F69                     	;# 
  5575  0F6A                     	;# 
  5576  0F6B                     	;# 
  5577  0F6C                     	;# 
  5578  0F6D                     	;# 
  5579  0FE4                     	;# 
  5580  0FE5                     	;# 
  5581  0FE6                     	;# 
  5582  0FE7                     	;# 
  5583  0FE8                     	;# 
  5584  0FE9                     	;# 
  5585  0FEA                     	;# 
  5586  0FEB                     	;# 
  5587  0FED                     	;# 
  5588  0FEE                     	;# 
  5589  0FEF                     	;# 
  5590  0000                     	;# 
  5591  0001                     	;# 
  5592  0002                     	;# 
  5593  0003                     	;# 
  5594  0004                     	;# 
  5595  0005                     	;# 
  5596  0006                     	;# 
  5597  0007                     	;# 
  5598  0008                     	;# 
  5599  0009                     	;# 
  5600  000A                     	;# 
  5601  000B                     	;# 
  5602  000C                     	;# 
  5603  000D                     	;# 
  5604  000E                     	;# 
  5605  000F                     	;# 
  5606  0010                     	;# 
  5607  0011                     	;# 
  5608  0012                     	;# 
  5609  0013                     	;# 
  5610  0014                     	;# 
  5611  0015                     	;# 
  5612  0016                     	;# 
  5613  0017                     	;# 
  5614  0018                     	;# 
  5615  0019                     	;# 
  5616  001A                     	;# 
  5617  001C                     	;# 
  5618  001C                     	;# 
  5619  001D                     	;# 
  5620  001D                     	;# 
  5621  001E                     	;# 
  5622  001F                     	;# 
  5623  008C                     	;# 
  5624  008C                     	;# 
  5625  008D                     	;# 
  5626  008E                     	;# 
  5627  008E                     	;# 
  5628  008F                     	;# 
  5629  0090                     	;# 
  5630  0090                     	;# 
  5631  0091                     	;# 
  5632  0093                     	;# 
  5633  0094                     	;# 
  5634  0095                     	;# 
  5635  0096                     	;# 
  5636  0097                     	;# 
  5637  0098                     	;# 
  5638  0099                     	;# 
  5639  009A                     	;# 
  5640  009B                     	;# 
  5641  009C                     	;# 
  5642  009D                     	;# 
  5643  009E                     	;# 
  5644  010C                     	;# 
  5645  010D                     	;# 
  5646  010E                     	;# 
  5647  010E                     	;# 
  5648  010F                     	;# 
  5649  0110                     	;# 
  5650  0110                     	;# 
  5651  0111                     	;# 
  5652  0112                     	;# 
  5653  0112                     	;# 
  5654  0113                     	;# 
  5655  0114                     	;# 
  5656  0114                     	;# 
  5657  0115                     	;# 
  5658  0116                     	;# 
  5659  0116                     	;# 
  5660  0117                     	;# 
  5661  0119                     	;# 
  5662  0119                     	;# 
  5663  0119                     	;# 
  5664  011A                     	;# 
  5665  011A                     	;# 
  5666  011A                     	;# 
  5667  011B                     	;# 
  5668  011B                     	;# 
  5669  011B                     	;# 
  5670  011B                     	;# 
  5671  011B                     	;# 
  5672  011C                     	;# 
  5673  011C                     	;# 
  5674  011C                     	;# 
  5675  011D                     	;# 
  5676  011D                     	;# 
  5677  011D                     	;# 
  5678  011E                     	;# 
  5679  011E                     	;# 
  5680  011E                     	;# 
  5681  011F                     	;# 
  5682  011F                     	;# 
  5683  011F                     	;# 
  5684  011F                     	;# 
  5685  011F                     	;# 
  5686  018C                     	;# 
  5687  018D                     	;# 
  5688  018E                     	;# 
  5689  018F                     	;# 
  5690  0190                     	;# 
  5691  0191                     	;# 
  5692  0192                     	;# 
  5693  0196                     	;# 
  5694  0197                     	;# 
  5695  0198                     	;# 
  5696  0199                     	;# 
  5697  019A                     	;# 
  5698  019B                     	;# 
  5699  019C                     	;# 
  5700  020C                     	;# 
  5701  020C                     	;# 
  5702  020D                     	;# 
  5703  020E                     	;# 
  5704  020F                     	;# 
  5705  020F                     	;# 
  5706  0210                     	;# 
  5707  0210                     	;# 
  5708  0211                     	;# 
  5709  0211                     	;# 
  5710  0212                     	;# 
  5711  0212                     	;# 
  5712  0213                     	;# 
  5713  0214                     	;# 
  5714  0215                     	;# 
  5715  0215                     	;# 
  5716  0216                     	;# 
  5717  0216                     	;# 
  5718  0217                     	;# 
  5719  0217                     	;# 
  5720  0218                     	;# 
  5721  0218                     	;# 
  5722  0219                     	;# 
  5723  021A                     	;# 
  5724  021B                     	;# 
  5725  021B                     	;# 
  5726  021C                     	;# 
  5727  021C                     	;# 
  5728  021D                     	;# 
  5729  021D                     	;# 
  5730  021E                     	;# 
  5731  021F                     	;# 
  5732  028C                     	;# 
  5733  028C                     	;# 
  5734  028D                     	;# 
  5735  028D                     	;# 
  5736  028E                     	;# 
  5737  028F                     	;# 
  5738  0290                     	;# 
  5739  0290                     	;# 
  5740  0291                     	;# 
  5741  0292                     	;# 
  5742  0292                     	;# 
  5743  0293                     	;# 
  5744  0293                     	;# 
  5745  0294                     	;# 
  5746  0295                     	;# 
  5747  0296                     	;# 
  5748  0296                     	;# 
  5749  0297                     	;# 
  5750  0298                     	;# 
  5751  0298                     	;# 
  5752  0299                     	;# 
  5753  0299                     	;# 
  5754  029A                     	;# 
  5755  029B                     	;# 
  5756  029C                     	;# 
  5757  029C                     	;# 
  5758  029D                     	;# 
  5759  030C                     	;# 
  5760  030C                     	;# 
  5761  030D                     	;# 
  5762  030E                     	;# 
  5763  030F                     	;# 
  5764  0310                     	;# 
  5765  0310                     	;# 
  5766  0311                     	;# 
  5767  0312                     	;# 
  5768  0313                     	;# 
  5769  0314                     	;# 
  5770  0314                     	;# 
  5771  0315                     	;# 
  5772  0316                     	;# 
  5773  0317                     	;# 
  5774  0318                     	;# 
  5775  0318                     	;# 
  5776  0319                     	;# 
  5777  031A                     	;# 
  5778  031B                     	;# 
  5779  031C                     	;# 
  5780  031C                     	;# 
  5781  031D                     	;# 
  5782  031E                     	;# 
  5783  031F                     	;# 
  5784  038C                     	;# 
  5785  038C                     	;# 
  5786  038D                     	;# 
  5787  038E                     	;# 
  5788  0390                     	;# 
  5789  0390                     	;# 
  5790  0391                     	;# 
  5791  0392                     	;# 
  5792  040C                     	;# 
  5793  040D                     	;# 
  5794  040E                     	;# 
  5795  040F                     	;# 
  5796  0410                     	;# 
  5797  0411                     	;# 
  5798  0416                     	;# 
  5799  0416                     	;# 
  5800  0417                     	;# 
  5801  0418                     	;# 
  5802  0418                     	;# 
  5803  0419                     	;# 
  5804  041A                     	;# 
  5805  041A                     	;# 
  5806  041B                     	;# 
  5807  041C                     	;# 
  5808  041C                     	;# 
  5809  041D                     	;# 
  5810  041E                     	;# 
  5811  041F                     	;# 
  5812  048C                     	;# 
  5813  048C                     	;# 
  5814  048D                     	;# 
  5815  048E                     	;# 
  5816  048F                     	;# 
  5817  048F                     	;# 
  5818  0490                     	;# 
  5819  0491                     	;# 
  5820  0492                     	;# 
  5821  0492                     	;# 
  5822  0493                     	;# 
  5823  0494                     	;# 
  5824  0495                     	;# 
  5825  0495                     	;# 
  5826  0496                     	;# 
  5827  0497                     	;# 
  5828  0498                     	;# 
  5829  0499                     	;# 
  5830  049A                     	;# 
  5831  049B                     	;# 
  5832  049C                     	;# 
  5833  049D                     	;# 
  5834  050C                     	;# 
  5835  050C                     	;# 
  5836  050D                     	;# 
  5837  050E                     	;# 
  5838  050F                     	;# 
  5839  050F                     	;# 
  5840  0510                     	;# 
  5841  0511                     	;# 
  5842  0512                     	;# 
  5843  0512                     	;# 
  5844  0513                     	;# 
  5845  0514                     	;# 
  5846  0515                     	;# 
  5847  0515                     	;# 
  5848  0516                     	;# 
  5849  0517                     	;# 
  5850  0518                     	;# 
  5851  0519                     	;# 
  5852  051A                     	;# 
  5853  051B                     	;# 
  5854  051C                     	;# 
  5855  051D                     	;# 
  5856  058C                     	;# 
  5857  058C                     	;# 
  5858  058D                     	;# 
  5859  058E                     	;# 
  5860  058F                     	;# 
  5861  058F                     	;# 
  5862  0590                     	;# 
  5863  0591                     	;# 
  5864  0592                     	;# 
  5865  0593                     	;# 
  5866  060C                     	;# 
  5867  060D                     	;# 
  5868  060E                     	;# 
  5869  060F                     	;# 
  5870  0610                     	;# 
  5871  0611                     	;# 
  5872  0612                     	;# 
  5873  0613                     	;# 
  5874  0614                     	;# 
  5875  0616                     	;# 
  5876  0617                     	;# 
  5877  0618                     	;# 
  5878  0619                     	;# 
  5879  061A                     	;# 
  5880  061B                     	;# 
  5881  061C                     	;# 
  5882  061D                     	;# 
  5883  061E                     	;# 
  5884  068C                     	;# 
  5885  068D                     	;# 
  5886  068E                     	;# 
  5887  068F                     	;# 
  5888  0690                     	;# 
  5889  0691                     	;# 
  5890  0692                     	;# 
  5891  0693                     	;# 
  5892  0694                     	;# 
  5893  070C                     	;# 
  5894  070D                     	;# 
  5895  070E                     	;# 
  5896  070F                     	;# 
  5897  0710                     	;# 
  5898  0711                     	;# 
  5899  0712                     	;# 
  5900  0713                     	;# 
  5901  0714                     	;# 
  5902  0716                     	;# 
  5903  0717                     	;# 
  5904  0718                     	;# 
  5905  0719                     	;# 
  5906  071A                     	;# 
  5907  071B                     	;# 
  5908  071C                     	;# 
  5909  071D                     	;# 
  5910  071E                     	;# 
  5911  0796                     	;# 
  5912  0797                     	;# 
  5913  0798                     	;# 
  5914  0799                     	;# 
  5915  079A                     	;# 
  5916  079B                     	;# 
  5917  080C                     	;# 
  5918  080D                     	;# 
  5919  080E                     	;# 
  5920  080F                     	;# 
  5921  0810                     	;# 
  5922  0811                     	;# 
  5923  0812                     	;# 
  5924  0813                     	;# 
  5925  0814                     	;# 
  5926  081A                     	;# 
  5927  081B                     	;# 
  5928  081C                     	;# 
  5929  081D                     	;# 
  5930  081E                     	;# 
  5931  081F                     	;# 
  5932  088C                     	;# 
  5933  088D                     	;# 
  5934  088E                     	;# 
  5935  088F                     	;# 
  5936  0890                     	;# 
  5937  0891                     	;# 
  5938  0892                     	;# 
  5939  0893                     	;# 
  5940  0895                     	;# 
  5941  0896                     	;# 
  5942  0897                     	;# 
  5943  0898                     	;# 
  5944  0899                     	;# 
  5945  089A                     	;# 
  5946  089B                     	;# 
  5947  090C                     	;# 
  5948  090E                     	;# 
  5949  090F                     	;# 
  5950  091F                     	;# 
  5951  091F                     	;# 
  5952  098F                     	;# 
  5953  098F                     	;# 
  5954  0990                     	;# 
  5955  0991                     	;# 
  5956  0992                     	;# 
  5957  0993                     	;# 
  5958  0994                     	;# 
  5959  0995                     	;# 
  5960  0996                     	;# 
  5961  0997                     	;# 
  5962  0E0F                     	;# 
  5963  0E10                     	;# 
  5964  0E11                     	;# 
  5965  0E12                     	;# 
  5966  0E13                     	;# 
  5967  0E14                     	;# 
  5968  0E15                     	;# 
  5969  0E16                     	;# 
  5970  0E17                     	;# 
  5971  0E18                     	;# 
  5972  0E19                     	;# 
  5973  0E1A                     	;# 
  5974  0E1B                     	;# 
  5975  0E1C                     	;# 
  5976  0E1D                     	;# 
  5977  0E1E                     	;# 
  5978  0E1F                     	;# 
  5979  0E20                     	;# 
  5980  0E21                     	;# 
  5981  0E22                     	;# 
  5982  0E23                     	;# 
  5983  0E24                     	;# 
  5984  0E25                     	;# 
  5985  0E26                     	;# 
  5986  0E27                     	;# 
  5987  0E28                     	;# 
  5988  0E29                     	;# 
  5989  0E2A                     	;# 
  5990  0E2B                     	;# 
  5991  0E2C                     	;# 
  5992  0E2D                     	;# 
  5993  0E2E                     	;# 
  5994  0E2F                     	;# 
  5995  0E30                     	;# 
  5996  0E31                     	;# 
  5997  0E32                     	;# 
  5998  0E33                     	;# 
  5999  0E34                     	;# 
  6000  0E35                     	;# 
  6001  0E36                     	;# 
  6002  0E37                     	;# 
  6003  0E8F                     	;# 
  6004  0E90                     	;# 
  6005  0E91                     	;# 
  6006  0E92                     	;# 
  6007  0E93                     	;# 
  6008  0E94                     	;# 
  6009  0E95                     	;# 
  6010  0E96                     	;# 
  6011  0E97                     	;# 
  6012  0E9C                     	;# 
  6013  0E9D                     	;# 
  6014  0E9E                     	;# 
  6015  0EA1                     	;# 
  6016  0EA2                     	;# 
  6017  0EA3                     	;# 
  6018  0EA4                     	;# 
  6019  0EA5                     	;# 
  6020  0EA9                     	;# 
  6021  0EAA                     	;# 
  6022  0EAB                     	;# 
  6023  0EAC                     	;# 
  6024  0EB1                     	;# 
  6025  0EB2                     	;# 
  6026  0EB3                     	;# 
  6027  0EB8                     	;# 
  6028  0EB9                     	;# 
  6029  0EBA                     	;# 
  6030  0EBB                     	;# 
  6031  0EBC                     	;# 
  6032  0EBD                     	;# 
  6033  0EBE                     	;# 
  6034  0EC3                     	;# 
  6035  0EC5                     	;# 
  6036  0EC6                     	;# 
  6037  0EC7                     	;# 
  6038  0EC8                     	;# 
  6039  0EC9                     	;# 
  6040  0ECA                     	;# 
  6041  0ECB                     	;# 
  6042  0ECC                     	;# 
  6043  0F10                     	;# 
  6044  0F11                     	;# 
  6045  0F12                     	;# 
  6046  0F13                     	;# 
  6047  0F14                     	;# 
  6048  0F15                     	;# 
  6049  0F16                     	;# 
  6050  0F17                     	;# 
  6051  0F18                     	;# 
  6052  0F19                     	;# 
  6053  0F1A                     	;# 
  6054  0F1B                     	;# 
  6055  0F1C                     	;# 
  6056  0F1D                     	;# 
  6057  0F1E                     	;# 
  6058  0F1F                     	;# 
  6059  0F20                     	;# 
  6060  0F21                     	;# 
  6061  0F22                     	;# 
  6062  0F23                     	;# 
  6063  0F24                     	;# 
  6064  0F25                     	;# 
  6065  0F26                     	;# 
  6066  0F27                     	;# 
  6067  0F28                     	;# 
  6068  0F29                     	;# 
  6069  0F2A                     	;# 
  6070  0F2B                     	;# 
  6071  0F2C                     	;# 
  6072  0F2D                     	;# 
  6073  0F2E                     	;# 
  6074  0F2F                     	;# 
  6075  0F30                     	;# 
  6076  0F31                     	;# 
  6077  0F32                     	;# 
  6078  0F38                     	;# 
  6079  0F39                     	;# 
  6080  0F3A                     	;# 
  6081  0F3B                     	;# 
  6082  0F3C                     	;# 
  6083  0F3D                     	;# 
  6084  0F3E                     	;# 
  6085  0F3F                     	;# 
  6086  0F40                     	;# 
  6087  0F41                     	;# 
  6088  0F43                     	;# 
  6089  0F44                     	;# 
  6090  0F45                     	;# 
  6091  0F46                     	;# 
  6092  0F47                     	;# 
  6093  0F48                     	;# 
  6094  0F49                     	;# 
  6095  0F4A                     	;# 
  6096  0F4B                     	;# 
  6097  0F4C                     	;# 
  6098  0F4E                     	;# 
  6099  0F4F                     	;# 
  6100  0F50                     	;# 
  6101  0F51                     	;# 
  6102  0F52                     	;# 
  6103  0F53                     	;# 
  6104  0F54                     	;# 
  6105  0F55                     	;# 
  6106  0F56                     	;# 
  6107  0F57                     	;# 
  6108  0F59                     	;# 
  6109  0F5A                     	;# 
  6110  0F5B                     	;# 
  6111  0F5C                     	;# 
  6112  0F5D                     	;# 
  6113  0F61                     	;# 
  6114  0F62                     	;# 
  6115  0F64                     	;# 
  6116  0F65                     	;# 
  6117  0F66                     	;# 
  6118  0F67                     	;# 
  6119  0F68                     	;# 
  6120  0F69                     	;# 
  6121  0F6A                     	;# 
  6122  0F6B                     	;# 
  6123  0F6C                     	;# 
  6124  0F6D                     	;# 
  6125  0FE4                     	;# 
  6126  0FE5                     	;# 
  6127  0FE6                     	;# 
  6128  0FE7                     	;# 
  6129  0FE8                     	;# 
  6130  0FE9                     	;# 
  6131  0FEA                     	;# 
  6132  0FEB                     	;# 
  6133  0FED                     	;# 
  6134  0FEE                     	;# 
  6135  0FEF                     	;# 
  6136  0000                     	;# 
  6137  0001                     	;# 
  6138  0002                     	;# 
  6139  0003                     	;# 
  6140  0004                     	;# 
  6141  0005                     	;# 
  6142  0006                     	;# 
  6143  0007                     	;# 
  6144  0008                     	;# 
  6145  0009                     	;# 
  6146  000A                     	;# 
  6147  000B                     	;# 
  6148  000C                     	;# 
  6149  000D                     	;# 
  6150  000E                     	;# 
  6151  000F                     	;# 
  6152  0010                     	;# 
  6153  0011                     	;# 
  6154  0012                     	;# 
  6155  0013                     	;# 
  6156  0014                     	;# 
  6157  0015                     	;# 
  6158  0016                     	;# 
  6159  0017                     	;# 
  6160  0018                     	;# 
  6161  0019                     	;# 
  6162  001A                     	;# 
  6163  001C                     	;# 
  6164  001C                     	;# 
  6165  001D                     	;# 
  6166  001D                     	;# 
  6167  001E                     	;# 
  6168  001F                     	;# 
  6169  008C                     	;# 
  6170  008C                     	;# 
  6171  008D                     	;# 
  6172  008E                     	;# 
  6173  008E                     	;# 
  6174  008F                     	;# 
  6175  0090                     	;# 
  6176  0090                     	;# 
  6177  0091                     	;# 
  6178  0093                     	;# 
  6179  0094                     	;# 
  6180  0095                     	;# 
  6181  0096                     	;# 
  6182  0097                     	;# 
  6183  0098                     	;# 
  6184  0099                     	;# 
  6185  009A                     	;# 
  6186  009B                     	;# 
  6187  009C                     	;# 
  6188  009D                     	;# 
  6189  009E                     	;# 
  6190  010C                     	;# 
  6191  010D                     	;# 
  6192  010E                     	;# 
  6193  010E                     	;# 
  6194  010F                     	;# 
  6195  0110                     	;# 
  6196  0110                     	;# 
  6197  0111                     	;# 
  6198  0112                     	;# 
  6199  0112                     	;# 
  6200  0113                     	;# 
  6201  0114                     	;# 
  6202  0114                     	;# 
  6203  0115                     	;# 
  6204  0116                     	;# 
  6205  0116                     	;# 
  6206  0117                     	;# 
  6207  0119                     	;# 
  6208  0119                     	;# 
  6209  0119                     	;# 
  6210  011A                     	;# 
  6211  011A                     	;# 
  6212  011A                     	;# 
  6213  011B                     	;# 
  6214  011B                     	;# 
  6215  011B                     	;# 
  6216  011B                     	;# 
  6217  011B                     	;# 
  6218  011C                     	;# 
  6219  011C                     	;# 
  6220  011C                     	;# 
  6221  011D                     	;# 
  6222  011D                     	;# 
  6223  011D                     	;# 
  6224  011E                     	;# 
  6225  011E                     	;# 
  6226  011E                     	;# 
  6227  011F                     	;# 
  6228  011F                     	;# 
  6229  011F                     	;# 
  6230  011F                     	;# 
  6231  011F                     	;# 
  6232  018C                     	;# 
  6233  018D                     	;# 
  6234  018E                     	;# 
  6235  018F                     	;# 
  6236  0190                     	;# 
  6237  0191                     	;# 
  6238  0192                     	;# 
  6239  0196                     	;# 
  6240  0197                     	;# 
  6241  0198                     	;# 
  6242  0199                     	;# 
  6243  019A                     	;# 
  6244  019B                     	;# 
  6245  019C                     	;# 
  6246  020C                     	;# 
  6247  020C                     	;# 
  6248  020D                     	;# 
  6249  020E                     	;# 
  6250  020F                     	;# 
  6251  020F                     	;# 
  6252  0210                     	;# 
  6253  0210                     	;# 
  6254  0211                     	;# 
  6255  0211                     	;# 
  6256  0212                     	;# 
  6257  0212                     	;# 
  6258  0213                     	;# 
  6259  0214                     	;# 
  6260  0215                     	;# 
  6261  0215                     	;# 
  6262  0216                     	;# 
  6263  0216                     	;# 
  6264  0217                     	;# 
  6265  0217                     	;# 
  6266  0218                     	;# 
  6267  0218                     	;# 
  6268  0219                     	;# 
  6269  021A                     	;# 
  6270  021B                     	;# 
  6271  021B                     	;# 
  6272  021C                     	;# 
  6273  021C                     	;# 
  6274  021D                     	;# 
  6275  021D                     	;# 
  6276  021E                     	;# 
  6277  021F                     	;# 
  6278  028C                     	;# 
  6279  028C                     	;# 
  6280  028D                     	;# 
  6281  028D                     	;# 
  6282  028E                     	;# 
  6283  028F                     	;# 
  6284  0290                     	;# 
  6285  0290                     	;# 
  6286  0291                     	;# 
  6287  0292                     	;# 
  6288  0292                     	;# 
  6289  0293                     	;# 
  6290  0293                     	;# 
  6291  0294                     	;# 
  6292  0295                     	;# 
  6293  0296                     	;# 
  6294  0296                     	;# 
  6295  0297                     	;# 
  6296  0298                     	;# 
  6297  0298                     	;# 
  6298  0299                     	;# 
  6299  0299                     	;# 
  6300  029A                     	;# 
  6301  029B                     	;# 
  6302  029C                     	;# 
  6303  029C                     	;# 
  6304  029D                     	;# 
  6305  030C                     	;# 
  6306  030C                     	;# 
  6307  030D                     	;# 
  6308  030E                     	;# 
  6309  030F                     	;# 
  6310  0310                     	;# 
  6311  0310                     	;# 
  6312  0311                     	;# 
  6313  0312                     	;# 
  6314  0313                     	;# 
  6315  0314                     	;# 
  6316  0314                     	;# 
  6317  0315                     	;# 
  6318  0316                     	;# 
  6319  0317                     	;# 
  6320  0318                     	;# 
  6321  0318                     	;# 
  6322  0319                     	;# 
  6323  031A                     	;# 
  6324  031B                     	;# 
  6325  031C                     	;# 
  6326  031C                     	;# 
  6327  031D                     	;# 
  6328  031E                     	;# 
  6329  031F                     	;# 
  6330  038C                     	;# 
  6331  038C                     	;# 
  6332  038D                     	;# 
  6333  038E                     	;# 
  6334  0390                     	;# 
  6335  0390                     	;# 
  6336  0391                     	;# 
  6337  0392                     	;# 
  6338  040C                     	;# 
  6339  040D                     	;# 
  6340  040E                     	;# 
  6341  040F                     	;# 
  6342  0410                     	;# 
  6343  0411                     	;# 
  6344  0416                     	;# 
  6345  0416                     	;# 
  6346  0417                     	;# 
  6347  0418                     	;# 
  6348  0418                     	;# 
  6349  0419                     	;# 
  6350  041A                     	;# 
  6351  041A                     	;# 
  6352  041B                     	;# 
  6353  041C                     	;# 
  6354  041C                     	;# 
  6355  041D                     	;# 
  6356  041E                     	;# 
  6357  041F                     	;# 
  6358  048C                     	;# 
  6359  048C                     	;# 
  6360  048D                     	;# 
  6361  048E                     	;# 
  6362  048F                     	;# 
  6363  048F                     	;# 
  6364  0490                     	;# 
  6365  0491                     	;# 
  6366  0492                     	;# 
  6367  0492                     	;# 
  6368  0493                     	;# 
  6369  0494                     	;# 
  6370  0495                     	;# 
  6371  0495                     	;# 
  6372  0496                     	;# 
  6373  0497                     	;# 
  6374  0498                     	;# 
  6375  0499                     	;# 
  6376  049A                     	;# 
  6377  049B                     	;# 
  6378  049C                     	;# 
  6379  049D                     	;# 
  6380  050C                     	;# 
  6381  050C                     	;# 
  6382  050D                     	;# 
  6383  050E                     	;# 
  6384  050F                     	;# 
  6385  050F                     	;# 
  6386  0510                     	;# 
  6387  0511                     	;# 
  6388  0512                     	;# 
  6389  0512                     	;# 
  6390  0513                     	;# 
  6391  0514                     	;# 
  6392  0515                     	;# 
  6393  0515                     	;# 
  6394  0516                     	;# 
  6395  0517                     	;# 
  6396  0518                     	;# 
  6397  0519                     	;# 
  6398  051A                     	;# 
  6399  051B                     	;# 
  6400  051C                     	;# 
  6401  051D                     	;# 
  6402  058C                     	;# 
  6403  058C                     	;# 
  6404  058D                     	;# 
  6405  058E                     	;# 
  6406  058F                     	;# 
  6407  058F                     	;# 
  6408  0590                     	;# 
  6409  0591                     	;# 
  6410  0592                     	;# 
  6411  0593                     	;# 
  6412  060C                     	;# 
  6413  060D                     	;# 
  6414  060E                     	;# 
  6415  060F                     	;# 
  6416  0610                     	;# 
  6417  0611                     	;# 
  6418  0612                     	;# 
  6419  0613                     	;# 
  6420  0614                     	;# 
  6421  0616                     	;# 
  6422  0617                     	;# 
  6423  0618                     	;# 
  6424  0619                     	;# 
  6425  061A                     	;# 
  6426  061B                     	;# 
  6427  061C                     	;# 
  6428  061D                     	;# 
  6429  061E                     	;# 
  6430  068C                     	;# 
  6431  068D                     	;# 
  6432  068E                     	;# 
  6433  068F                     	;# 
  6434  0690                     	;# 
  6435  0691                     	;# 
  6436  0692                     	;# 
  6437  0693                     	;# 
  6438  0694                     	;# 
  6439  070C                     	;# 
  6440  070D                     	;# 
  6441  070E                     	;# 
  6442  070F                     	;# 
  6443  0710                     	;# 
  6444  0711                     	;# 
  6445  0712                     	;# 
  6446  0713                     	;# 
  6447  0714                     	;# 
  6448  0716                     	;# 
  6449  0717                     	;# 
  6450  0718                     	;# 
  6451  0719                     	;# 
  6452  071A                     	;# 
  6453  071B                     	;# 
  6454  071C                     	;# 
  6455  071D                     	;# 
  6456  071E                     	;# 
  6457  0796                     	;# 
  6458  0797                     	;# 
  6459  0798                     	;# 
  6460  0799                     	;# 
  6461  079A                     	;# 
  6462  079B                     	;# 
  6463  080C                     	;# 
  6464  080D                     	;# 
  6465  080E                     	;# 
  6466  080F                     	;# 
  6467  0810                     	;# 
  6468  0811                     	;# 
  6469  0812                     	;# 
  6470  0813                     	;# 
  6471  0814                     	;# 
  6472  081A                     	;# 
  6473  081B                     	;# 
  6474  081C                     	;# 
  6475  081D                     	;# 
  6476  081E                     	;# 
  6477  081F                     	;# 
  6478  088C                     	;# 
  6479  088D                     	;# 
  6480  088E                     	;# 
  6481  088F                     	;# 
  6482  0890                     	;# 
  6483  0891                     	;# 
  6484  0892                     	;# 
  6485  0893                     	;# 
  6486  0895                     	;# 
  6487  0896                     	;# 
  6488  0897                     	;# 
  6489  0898                     	;# 
  6490  0899                     	;# 
  6491  089A                     	;# 
  6492  089B                     	;# 
  6493  090C                     	;# 
  6494  090E                     	;# 
  6495  090F                     	;# 
  6496  091F                     	;# 
  6497  091F                     	;# 
  6498  098F                     	;# 
  6499  098F                     	;# 
  6500  0990                     	;# 
  6501  0991                     	;# 
  6502  0992                     	;# 
  6503  0993                     	;# 
  6504  0994                     	;# 
  6505  0995                     	;# 
  6506  0996                     	;# 
  6507  0997                     	;# 
  6508  0E0F                     	;# 
  6509  0E10                     	;# 
  6510  0E11                     	;# 
  6511  0E12                     	;# 
  6512  0E13                     	;# 
  6513  0E14                     	;# 
  6514  0E15                     	;# 
  6515  0E16                     	;# 
  6516  0E17                     	;# 
  6517  0E18                     	;# 
  6518  0E19                     	;# 
  6519  0E1A                     	;# 
  6520  0E1B                     	;# 
  6521  0E1C                     	;# 
  6522  0E1D                     	;# 
  6523  0E1E                     	;# 
  6524  0E1F                     	;# 
  6525  0E20                     	;# 
  6526  0E21                     	;# 
  6527  0E22                     	;# 
  6528  0E23                     	;# 
  6529  0E24                     	;# 
  6530  0E25                     	;# 
  6531  0E26                     	;# 
  6532  0E27                     	;# 
  6533  0E28                     	;# 
  6534  0E29                     	;# 
  6535  0E2A                     	;# 
  6536  0E2B                     	;# 
  6537  0E2C                     	;# 
  6538  0E2D                     	;# 
  6539  0E2E                     	;# 
  6540  0E2F                     	;# 
  6541  0E30                     	;# 
  6542  0E31                     	;# 
  6543  0E32                     	;# 
  6544  0E33                     	;# 
  6545  0E34                     	;# 
  6546  0E35                     	;# 
  6547  0E36                     	;# 
  6548  0E37                     	;# 
  6549  0E8F                     	;# 
  6550  0E90                     	;# 
  6551  0E91                     	;# 
  6552  0E92                     	;# 
  6553  0E93                     	;# 
  6554  0E94                     	;# 
  6555  0E95                     	;# 
  6556  0E96                     	;# 
  6557  0E97                     	;# 
  6558  0E9C                     	;# 
  6559  0E9D                     	;# 
  6560  0E9E                     	;# 
  6561  0EA1                     	;# 
  6562  0EA2                     	;# 
  6563  0EA3                     	;# 
  6564  0EA4                     	;# 
  6565  0EA5                     	;# 
  6566  0EA9                     	;# 
  6567  0EAA                     	;# 
  6568  0EAB                     	;# 
  6569  0EAC                     	;# 
  6570  0EB1                     	;# 
  6571  0EB2                     	;# 
  6572  0EB3                     	;# 
  6573  0EB8                     	;# 
  6574  0EB9                     	;# 
  6575  0EBA                     	;# 
  6576  0EBB                     	;# 
  6577  0EBC                     	;# 
  6578  0EBD                     	;# 
  6579  0EBE                     	;# 
  6580  0EC3                     	;# 
  6581  0EC5                     	;# 
  6582  0EC6                     	;# 
  6583  0EC7                     	;# 
  6584  0EC8                     	;# 
  6585  0EC9                     	;# 
  6586  0ECA                     	;# 
  6587  0ECB                     	;# 
  6588  0ECC                     	;# 
  6589  0F10                     	;# 
  6590  0F11                     	;# 
  6591  0F12                     	;# 
  6592  0F13                     	;# 
  6593  0F14                     	;# 
  6594  0F15                     	;# 
  6595  0F16                     	;# 
  6596  0F17                     	;# 
  6597  0F18                     	;# 
  6598  0F19                     	;# 
  6599  0F1A                     	;# 
  6600  0F1B                     	;# 
  6601  0F1C                     	;# 
  6602  0F1D                     	;# 
  6603  0F1E                     	;# 
  6604  0F1F                     	;# 
  6605  0F20                     	;# 
  6606  0F21                     	;# 
  6607  0F22                     	;# 
  6608  0F23                     	;# 
  6609  0F24                     	;# 
  6610  0F25                     	;# 
  6611  0F26                     	;# 
  6612  0F27                     	;# 
  6613  0F28                     	;# 
  6614  0F29                     	;# 
  6615  0F2A                     	;# 
  6616  0F2B                     	;# 
  6617  0F2C                     	;# 
  6618  0F2D                     	;# 
  6619  0F2E                     	;# 
  6620  0F2F                     	;# 
  6621  0F30                     	;# 
  6622  0F31                     	;# 
  6623  0F32                     	;# 
  6624  0F38                     	;# 
  6625  0F39                     	;# 
  6626  0F3A                     	;# 
  6627  0F3B                     	;# 
  6628  0F3C                     	;# 
  6629  0F3D                     	;# 
  6630  0F3E                     	;# 
  6631  0F3F                     	;# 
  6632  0F40                     	;# 
  6633  0F41                     	;# 
  6634  0F43                     	;# 
  6635  0F44                     	;# 
  6636  0F45                     	;# 
  6637  0F46                     	;# 
  6638  0F47                     	;# 
  6639  0F48                     	;# 
  6640  0F49                     	;# 
  6641  0F4A                     	;# 
  6642  0F4B                     	;# 
  6643  0F4C                     	;# 
  6644  0F4E                     	;# 
  6645  0F4F                     	;# 
  6646  0F50                     	;# 
  6647  0F51                     	;# 
  6648  0F52                     	;# 
  6649  0F53                     	;# 
  6650  0F54                     	;# 
  6651  0F55                     	;# 
  6652  0F56                     	;# 
  6653  0F57                     	;# 
  6654  0F59                     	;# 
  6655  0F5A                     	;# 
  6656  0F5B                     	;# 
  6657  0F5C                     	;# 
  6658  0F5D                     	;# 
  6659  0F61                     	;# 
  6660  0F62                     	;# 
  6661  0F64                     	;# 
  6662  0F65                     	;# 
  6663  0F66                     	;# 
  6664  0F67                     	;# 
  6665  0F68                     	;# 
  6666  0F69                     	;# 
  6667  0F6A                     	;# 
  6668  0F6B                     	;# 
  6669  0F6C                     	;# 
  6670  0F6D                     	;# 
  6671  0FE4                     	;# 
  6672  0FE5                     	;# 
  6673  0FE6                     	;# 
  6674  0FE7                     	;# 
  6675  0FE8                     	;# 
  6676  0FE9                     	;# 
  6677  0FEA                     	;# 
  6678  0FEB                     	;# 
  6679  0FED                     	;# 
  6680  0FEE                     	;# 
  6681  0FEF                     	;# 
  6682  0000                     	;# 
  6683  0001                     	;# 
  6684  0002                     	;# 
  6685  0003                     	;# 
  6686  0004                     	;# 
  6687  0005                     	;# 
  6688  0006                     	;# 
  6689  0007                     	;# 
  6690  0008                     	;# 
  6691  0009                     	;# 
  6692  000A                     	;# 
  6693  000B                     	;# 
  6694  000C                     	;# 
  6695  000D                     	;# 
  6696  000E                     	;# 
  6697  000F                     	;# 
  6698  0010                     	;# 
  6699  0011                     	;# 
  6700  0012                     	;# 
  6701  0013                     	;# 
  6702  0014                     	;# 
  6703  0015                     	;# 
  6704  0016                     	;# 
  6705  0017                     	;# 
  6706  0018                     	;# 
  6707  0019                     	;# 
  6708  001A                     	;# 
  6709  001C                     	;# 
  6710  001C                     	;# 
  6711  001D                     	;# 
  6712  001D                     	;# 
  6713  001E                     	;# 
  6714  001F                     	;# 
  6715  008C                     	;# 
  6716  008C                     	;# 
  6717  008D                     	;# 
  6718  008E                     	;# 
  6719  008E                     	;# 
  6720  008F                     	;# 
  6721  0090                     	;# 
  6722  0090                     	;# 
  6723  0091                     	;# 
  6724  0093                     	;# 
  6725  0094                     	;# 
  6726  0095                     	;# 
  6727  0096                     	;# 
  6728  0097                     	;# 
  6729  0098                     	;# 
  6730  0099                     	;# 
  6731  009A                     	;# 
  6732  009B                     	;# 
  6733  009C                     	;# 
  6734  009D                     	;# 
  6735  009E                     	;# 
  6736  010C                     	;# 
  6737  010D                     	;# 
  6738  010E                     	;# 
  6739  010E                     	;# 
  6740  010F                     	;# 
  6741  0110                     	;# 
  6742  0110                     	;# 
  6743  0111                     	;# 
  6744  0112                     	;# 
  6745  0112                     	;# 
  6746  0113                     	;# 
  6747  0114                     	;# 
  6748  0114                     	;# 
  6749  0115                     	;# 
  6750  0116                     	;# 
  6751  0116                     	;# 
  6752  0117                     	;# 
  6753  0119                     	;# 
  6754  0119                     	;# 
  6755  0119                     	;# 
  6756  011A                     	;# 
  6757  011A                     	;# 
  6758  011A                     	;# 
  6759  011B                     	;# 
  6760  011B                     	;# 
  6761  011B                     	;# 
  6762  011B                     	;# 
  6763  011B                     	;# 
  6764  011C                     	;# 
  6765  011C                     	;# 
  6766  011C                     	;# 
  6767  011D                     	;# 
  6768  011D                     	;# 
  6769  011D                     	;# 
  6770  011E                     	;# 
  6771  011E                     	;# 
  6772  011E                     	;# 
  6773  011F                     	;# 
  6774  011F                     	;# 
  6775  011F                     	;# 
  6776  011F                     	;# 
  6777  011F                     	;# 
  6778  018C                     	;# 
  6779  018D                     	;# 
  6780  018E                     	;# 
  6781  018F                     	;# 
  6782  0190                     	;# 
  6783  0191                     	;# 
  6784  0192                     	;# 
  6785  0196                     	;# 
  6786  0197                     	;# 
  6787  0198                     	;# 
  6788  0199                     	;# 
  6789  019A                     	;# 
  6790  019B                     	;# 
  6791  019C                     	;# 
  6792  020C                     	;# 
  6793  020C                     	;# 
  6794  020D                     	;# 
  6795  020E                     	;# 
  6796  020F                     	;# 
  6797  020F                     	;# 
  6798  0210                     	;# 
  6799  0210                     	;# 
  6800  0211                     	;# 
  6801  0211                     	;# 
  6802  0212                     	;# 
  6803  0212                     	;# 
  6804  0213                     	;# 
  6805  0214                     	;# 
  6806  0215                     	;# 
  6807  0215                     	;# 
  6808  0216                     	;# 
  6809  0216                     	;# 
  6810  0217                     	;# 
  6811  0217                     	;# 
  6812  0218                     	;# 
  6813  0218                     	;# 
  6814  0219                     	;# 
  6815  021A                     	;# 
  6816  021B                     	;# 
  6817  021B                     	;# 
  6818  021C                     	;# 
  6819  021C                     	;# 
  6820  021D                     	;# 
  6821  021D                     	;# 
  6822  021E                     	;# 
  6823  021F                     	;# 
  6824  028C                     	;# 
  6825  028C                     	;# 
  6826  028D                     	;# 
  6827  028D                     	;# 
  6828  028E                     	;# 
  6829  028F                     	;# 
  6830  0290                     	;# 
  6831  0290                     	;# 
  6832  0291                     	;# 
  6833  0292                     	;# 
  6834  0292                     	;# 
  6835  0293                     	;# 
  6836  0293                     	;# 
  6837  0294                     	;# 
  6838  0295                     	;# 
  6839  0296                     	;# 
  6840  0296                     	;# 
  6841  0297                     	;# 
  6842  0298                     	;# 
  6843  0298                     	;# 
  6844  0299                     	;# 
  6845  0299                     	;# 
  6846  029A                     	;# 
  6847  029B                     	;# 
  6848  029C                     	;# 
  6849  029C                     	;# 
  6850  029D                     	;# 
  6851  030C                     	;# 
  6852  030C                     	;# 
  6853  030D                     	;# 
  6854  030E                     	;# 
  6855  030F                     	;# 
  6856  0310                     	;# 
  6857  0310                     	;# 
  6858  0311                     	;# 
  6859  0312                     	;# 
  6860  0313                     	;# 
  6861  0314                     	;# 
  6862  0314                     	;# 
  6863  0315                     	;# 
  6864  0316                     	;# 
  6865  0317                     	;# 
  6866  0318                     	;# 
  6867  0318                     	;# 
  6868  0319                     	;# 
  6869  031A                     	;# 
  6870  031B                     	;# 
  6871  031C                     	;# 
  6872  031C                     	;# 
  6873  031D                     	;# 
  6874  031E                     	;# 
  6875  031F                     	;# 
  6876  038C                     	;# 
  6877  038C                     	;# 
  6878  038D                     	;# 
  6879  038E                     	;# 
  6880  0390                     	;# 
  6881  0390                     	;# 
  6882  0391                     	;# 
  6883  0392                     	;# 
  6884  040C                     	;# 
  6885  040D                     	;# 
  6886  040E                     	;# 
  6887  040F                     	;# 
  6888  0410                     	;# 
  6889  0411                     	;# 
  6890  0416                     	;# 
  6891  0416                     	;# 
  6892  0417                     	;# 
  6893  0418                     	;# 
  6894  0418                     	;# 
  6895  0419                     	;# 
  6896  041A                     	;# 
  6897  041A                     	;# 
  6898  041B                     	;# 
  6899  041C                     	;# 
  6900  041C                     	;# 
  6901  041D                     	;# 
  6902  041E                     	;# 
  6903  041F                     	;# 
  6904  048C                     	;# 
  6905  048C                     	;# 
  6906  048D                     	;# 
  6907  048E                     	;# 
  6908  048F                     	;# 
  6909  048F                     	;# 
  6910  0490                     	;# 
  6911  0491                     	;# 
  6912  0492                     	;# 
  6913  0492                     	;# 
  6914  0493                     	;# 
  6915  0494                     	;# 
  6916  0495                     	;# 
  6917  0495                     	;# 
  6918  0496                     	;# 
  6919  0497                     	;# 
  6920  0498                     	;# 
  6921  0499                     	;# 
  6922  049A                     	;# 
  6923  049B                     	;# 
  6924  049C                     	;# 
  6925  049D                     	;# 
  6926  050C                     	;# 
  6927  050C                     	;# 
  6928  050D                     	;# 
  6929  050E                     	;# 
  6930  050F                     	;# 
  6931  050F                     	;# 
  6932  0510                     	;# 
  6933  0511                     	;# 
  6934  0512                     	;# 
  6935  0512                     	;# 
  6936  0513                     	;# 
  6937  0514                     	;# 
  6938  0515                     	;# 
  6939  0515                     	;# 
  6940  0516                     	;# 
  6941  0517                     	;# 
  6942  0518                     	;# 
  6943  0519                     	;# 
  6944  051A                     	;# 
  6945  051B                     	;# 
  6946  051C                     	;# 
  6947  051D                     	;# 
  6948  058C                     	;# 
  6949  058C                     	;# 
  6950  058D                     	;# 
  6951  058E                     	;# 
  6952  058F                     	;# 
  6953  058F                     	;# 
  6954  0590                     	;# 
  6955  0591                     	;# 
  6956  0592                     	;# 
  6957  0593                     	;# 
  6958  060C                     	;# 
  6959  060D                     	;# 
  6960  060E                     	;# 
  6961  060F                     	;# 
  6962  0610                     	;# 
  6963  0611                     	;# 
  6964  0612                     	;# 
  6965  0613                     	;# 
  6966  0614                     	;# 
  6967  0616                     	;# 
  6968  0617                     	;# 
  6969  0618                     	;# 
  6970  0619                     	;# 
  6971  061A                     	;# 
  6972  061B                     	;# 
  6973  061C                     	;# 
  6974  061D                     	;# 
  6975  061E                     	;# 
  6976  068C                     	;# 
  6977  068D                     	;# 
  6978  068E                     	;# 
  6979  068F                     	;# 
  6980  0690                     	;# 
  6981  0691                     	;# 
  6982  0692                     	;# 
  6983  0693                     	;# 
  6984  0694                     	;# 
  6985  070C                     	;# 
  6986  070D                     	;# 
  6987  070E                     	;# 
  6988  070F                     	;# 
  6989  0710                     	;# 
  6990  0711                     	;# 
  6991  0712                     	;# 
  6992  0713                     	;# 
  6993  0714                     	;# 
  6994  0716                     	;# 
  6995  0717                     	;# 
  6996  0718                     	;# 
  6997  0719                     	;# 
  6998  071A                     	;# 
  6999  071B                     	;# 
  7000  071C                     	;# 
  7001  071D                     	;# 
  7002  071E                     	;# 
  7003  0796                     	;# 
  7004  0797                     	;# 
  7005  0798                     	;# 
  7006  0799                     	;# 
  7007  079A                     	;# 
  7008  079B                     	;# 
  7009  080C                     	;# 
  7010  080D                     	;# 
  7011  080E                     	;# 
  7012  080F                     	;# 
  7013  0810                     	;# 
  7014  0811                     	;# 
  7015  0812                     	;# 
  7016  0813                     	;# 
  7017  0814                     	;# 
  7018  081A                     	;# 
  7019  081B                     	;# 
  7020  081C                     	;# 
  7021  081D                     	;# 
  7022  081E                     	;# 
  7023  081F                     	;# 
  7024  088C                     	;# 
  7025  088D                     	;# 
  7026  088E                     	;# 
  7027  088F                     	;# 
  7028  0890                     	;# 
  7029  0891                     	;# 
  7030  0892                     	;# 
  7031  0893                     	;# 
  7032  0895                     	;# 
  7033  0896                     	;# 
  7034  0897                     	;# 
  7035  0898                     	;# 
  7036  0899                     	;# 
  7037  089A                     	;# 
  7038  089B                     	;# 
  7039  090C                     	;# 
  7040  090E                     	;# 
  7041  090F                     	;# 
  7042  091F                     	;# 
  7043  091F                     	;# 
  7044  098F                     	;# 
  7045  098F                     	;# 
  7046  0990                     	;# 
  7047  0991                     	;# 
  7048  0992                     	;# 
  7049  0993                     	;# 
  7050  0994                     	;# 
  7051  0995                     	;# 
  7052  0996                     	;# 
  7053  0997                     	;# 
  7054  0E0F                     	;# 
  7055  0E10                     	;# 
  7056  0E11                     	;# 
  7057  0E12                     	;# 
  7058  0E13                     	;# 
  7059  0E14                     	;# 
  7060  0E15                     	;# 
  7061  0E16                     	;# 
  7062  0E17                     	;# 
  7063  0E18                     	;# 
  7064  0E19                     	;# 
  7065  0E1A                     	;# 
  7066  0E1B                     	;# 
  7067  0E1C                     	;# 
  7068  0E1D                     	;# 
  7069  0E1E                     	;# 
  7070  0E1F                     	;# 
  7071  0E20                     	;# 
  7072  0E21                     	;# 
  7073  0E22                     	;# 
  7074  0E23                     	;# 
  7075  0E24                     	;# 
  7076  0E25                     	;# 
  7077  0E26                     	;# 
  7078  0E27                     	;# 
  7079  0E28                     	;# 
  7080  0E29                     	;# 
  7081  0E2A                     	;# 
  7082  0E2B                     	;# 
  7083  0E2C                     	;# 
  7084  0E2D                     	;# 
  7085  0E2E                     	;# 
  7086  0E2F                     	;# 
  7087  0E30                     	;# 
  7088  0E31                     	;# 
  7089  0E32                     	;# 
  7090  0E33                     	;# 
  7091  0E34                     	;# 
  7092  0E35                     	;# 
  7093  0E36                     	;# 
  7094  0E37                     	;# 
  7095  0E8F                     	;# 
  7096  0E90                     	;# 
  7097  0E91                     	;# 
  7098  0E92                     	;# 
  7099  0E93                     	;# 
  7100  0E94                     	;# 
  7101  0E95                     	;# 
  7102  0E96                     	;# 
  7103  0E97                     	;# 
  7104  0E9C                     	;# 
  7105  0E9D                     	;# 
  7106  0E9E                     	;# 
  7107  0EA1                     	;# 
  7108  0EA2                     	;# 
  7109  0EA3                     	;# 
  7110  0EA4                     	;# 
  7111  0EA5                     	;# 
  7112  0EA9                     	;# 
  7113  0EAA                     	;# 
  7114  0EAB                     	;# 
  7115  0EAC                     	;# 
  7116  0EB1                     	;# 
  7117  0EB2                     	;# 
  7118  0EB3                     	;# 
  7119  0EB8                     	;# 
  7120  0EB9                     	;# 
  7121  0EBA                     	;# 
  7122  0EBB                     	;# 
  7123  0EBC                     	;# 
  7124  0EBD                     	;# 
  7125  0EBE                     	;# 
  7126  0EC3                     	;# 
  7127  0EC5                     	;# 
  7128  0EC6                     	;# 
  7129  0EC7                     	;# 
  7130  0EC8                     	;# 
  7131  0EC9                     	;# 
  7132  0ECA                     	;# 
  7133  0ECB                     	;# 
  7134  0ECC                     	;# 
  7135  0F10                     	;# 
  7136  0F11                     	;# 
  7137  0F12                     	;# 
  7138  0F13                     	;# 
  7139  0F14                     	;# 
  7140  0F15                     	;# 
  7141  0F16                     	;# 
  7142  0F17                     	;# 
  7143  0F18                     	;# 
  7144  0F19                     	;# 
  7145  0F1A                     	;# 
  7146  0F1B                     	;# 
  7147  0F1C                     	;# 
  7148  0F1D                     	;# 
  7149  0F1E                     	;# 
  7150  0F1F                     	;# 
  7151  0F20                     	;# 
  7152  0F21                     	;# 
  7153  0F22                     	;# 
  7154  0F23                     	;# 
  7155  0F24                     	;# 
  7156  0F25                     	;# 
  7157  0F26                     	;# 
  7158  0F27                     	;# 
  7159  0F28                     	;# 
  7160  0F29                     	;# 
  7161  0F2A                     	;# 
  7162  0F2B                     	;# 
  7163  0F2C                     	;# 
  7164  0F2D                     	;# 
  7165  0F2E                     	;# 
  7166  0F2F                     	;# 
  7167  0F30                     	;# 
  7168  0F31                     	;# 
  7169  0F32                     	;# 
  7170  0F38                     	;# 
  7171  0F39                     	;# 
  7172  0F3A                     	;# 
  7173  0F3B                     	;# 
  7174  0F3C                     	;# 
  7175  0F3D                     	;# 
  7176  0F3E                     	;# 
  7177  0F3F                     	;# 
  7178  0F40                     	;# 
  7179  0F41                     	;# 
  7180  0F43                     	;# 
  7181  0F44                     	;# 
  7182  0F45                     	;# 
  7183  0F46                     	;# 
  7184  0F47                     	;# 
  7185  0F48                     	;# 
  7186  0F49                     	;# 
  7187  0F4A                     	;# 
  7188  0F4B                     	;# 
  7189  0F4C                     	;# 
  7190  0F4E                     	;# 
  7191  0F4F                     	;# 
  7192  0F50                     	;# 
  7193  0F51                     	;# 
  7194  0F52                     	;# 
  7195  0F53                     	;# 
  7196  0F54                     	;# 
  7197  0F55                     	;# 
  7198  0F56                     	;# 
  7199  0F57                     	;# 
  7200  0F59                     	;# 
  7201  0F5A                     	;# 
  7202  0F5B                     	;# 
  7203  0F5C                     	;# 
  7204  0F5D                     	;# 
  7205  0F61                     	;# 
  7206  0F62                     	;# 
  7207  0F64                     	;# 
  7208  0F65                     	;# 
  7209  0F66                     	;# 
  7210  0F67                     	;# 
  7211  0F68                     	;# 
  7212  0F69                     	;# 
  7213  0F6A                     	;# 
  7214  0F6B                     	;# 
  7215  0F6C                     	;# 
  7216  0F6D                     	;# 
  7217  0FE4                     	;# 
  7218  0FE5                     	;# 
  7219  0FE6                     	;# 
  7220  0FE7                     	;# 
  7221  0FE8                     	;# 
  7222  0FE9                     	;# 
  7223  0FEA                     	;# 
  7224  0FEB                     	;# 
  7225  0FED                     	;# 
  7226  0FEE                     	;# 
  7227  0FEF                     	;# 
  7228  0000                     	;# 
  7229  0001                     	;# 
  7230  0002                     	;# 
  7231  0003                     	;# 
  7232  0004                     	;# 
  7233  0005                     	;# 
  7234  0006                     	;# 
  7235  0007                     	;# 
  7236  0008                     	;# 
  7237  0009                     	;# 
  7238  000A                     	;# 
  7239  000B                     	;# 
  7240  000C                     	;# 
  7241  000D                     	;# 
  7242  000E                     	;# 
  7243  000F                     	;# 
  7244  0010                     	;# 
  7245  0011                     	;# 
  7246  0012                     	;# 
  7247  0013                     	;# 
  7248  0014                     	;# 
  7249  0015                     	;# 
  7250  0016                     	;# 
  7251  0017                     	;# 
  7252  0018                     	;# 
  7253  0019                     	;# 
  7254  001A                     	;# 
  7255  001C                     	;# 
  7256  001C                     	;# 
  7257  001D                     	;# 
  7258  001D                     	;# 
  7259  001E                     	;# 
  7260  001F                     	;# 
  7261  008C                     	;# 
  7262  008C                     	;# 
  7263  008D                     	;# 
  7264  008E                     	;# 
  7265  008E                     	;# 
  7266  008F                     	;# 
  7267  0090                     	;# 
  7268  0090                     	;# 
  7269  0091                     	;# 
  7270  0093                     	;# 
  7271  0094                     	;# 
  7272  0095                     	;# 
  7273  0096                     	;# 
  7274  0097                     	;# 
  7275  0098                     	;# 
  7276  0099                     	;# 
  7277  009A                     	;# 
  7278  009B                     	;# 
  7279  009C                     	;# 
  7280  009D                     	;# 
  7281  009E                     	;# 
  7282  010C                     	;# 
  7283  010D                     	;# 
  7284  010E                     	;# 
  7285  010E                     	;# 
  7286  010F                     	;# 
  7287  0110                     	;# 
  7288  0110                     	;# 
  7289  0111                     	;# 
  7290  0112                     	;# 
  7291  0112                     	;# 
  7292  0113                     	;# 
  7293  0114                     	;# 
  7294  0114                     	;# 
  7295  0115                     	;# 
  7296  0116                     	;# 
  7297  0116                     	;# 
  7298  0117                     	;# 
  7299  0119                     	;# 
  7300  0119                     	;# 
  7301  0119                     	;# 
  7302  011A                     	;# 
  7303  011A                     	;# 
  7304  011A                     	;# 
  7305  011B                     	;# 
  7306  011B                     	;# 
  7307  011B                     	;# 
  7308  011B                     	;# 
  7309  011B                     	;# 
  7310  011C                     	;# 
  7311  011C                     	;# 
  7312  011C                     	;# 
  7313  011D                     	;# 
  7314  011D                     	;# 
  7315  011D                     	;# 
  7316  011E                     	;# 
  7317  011E                     	;# 
  7318  011E                     	;# 
  7319  011F                     	;# 
  7320  011F                     	;# 
  7321  011F                     	;# 
  7322  011F                     	;# 
  7323  011F                     	;# 
  7324  018C                     	;# 
  7325  018D                     	;# 
  7326  018E                     	;# 
  7327  018F                     	;# 
  7328  0190                     	;# 
  7329  0191                     	;# 
  7330  0192                     	;# 
  7331  0196                     	;# 
  7332  0197                     	;# 
  7333  0198                     	;# 
  7334  0199                     	;# 
  7335  019A                     	;# 
  7336  019B                     	;# 
  7337  019C                     	;# 
  7338  020C                     	;# 
  7339  020C                     	;# 
  7340  020D                     	;# 
  7341  020E                     	;# 
  7342  020F                     	;# 
  7343  020F                     	;# 
  7344  0210                     	;# 
  7345  0210                     	;# 
  7346  0211                     	;# 
  7347  0211                     	;# 
  7348  0212                     	;# 
  7349  0212                     	;# 
  7350  0213                     	;# 
  7351  0214                     	;# 
  7352  0215                     	;# 
  7353  0215                     	;# 
  7354  0216                     	;# 
  7355  0216                     	;# 
  7356  0217                     	;# 
  7357  0217                     	;# 
  7358  0218                     	;# 
  7359  0218                     	;# 
  7360  0219                     	;# 
  7361  021A                     	;# 
  7362  021B                     	;# 
  7363  021B                     	;# 
  7364  021C                     	;# 
  7365  021C                     	;# 
  7366  021D                     	;# 
  7367  021D                     	;# 
  7368  021E                     	;# 
  7369  021F                     	;# 
  7370  028C                     	;# 
  7371  028C                     	;# 
  7372  028D                     	;# 
  7373  028D                     	;# 
  7374  028E                     	;# 
  7375  028F                     	;# 
  7376  0290                     	;# 
  7377  0290                     	;# 
  7378  0291                     	;# 
  7379  0292                     	;# 
  7380  0292                     	;# 
  7381  0293                     	;# 
  7382  0293                     	;# 
  7383  0294                     	;# 
  7384  0295                     	;# 
  7385  0296                     	;# 
  7386  0296                     	;# 
  7387  0297                     	;# 
  7388  0298                     	;# 
  7389  0298                     	;# 
  7390  0299                     	;# 
  7391  0299                     	;# 
  7392  029A                     	;# 
  7393  029B                     	;# 
  7394  029C                     	;# 
  7395  029C                     	;# 
  7396  029D                     	;# 
  7397  030C                     	;# 
  7398  030C                     	;# 
  7399  030D                     	;# 
  7400  030E                     	;# 
  7401  030F                     	;# 
  7402  0310                     	;# 
  7403  0310                     	;# 
  7404  0311                     	;# 
  7405  0312                     	;# 
  7406  0313                     	;# 
  7407  0314                     	;# 
  7408  0314                     	;# 
  7409  0315                     	;# 
  7410  0316                     	;# 
  7411  0317                     	;# 
  7412  0318                     	;# 
  7413  0318                     	;# 
  7414  0319                     	;# 
  7415  031A                     	;# 
  7416  031B                     	;# 
  7417  031C                     	;# 
  7418  031C                     	;# 
  7419  031D                     	;# 
  7420  031E                     	;# 
  7421  031F                     	;# 
  7422  038C                     	;# 
  7423  038C                     	;# 
  7424  038D                     	;# 
  7425  038E                     	;# 
  7426  0390                     	;# 
  7427  0390                     	;# 
  7428  0391                     	;# 
  7429  0392                     	;# 
  7430  040C                     	;# 
  7431  040D                     	;# 
  7432  040E                     	;# 
  7433  040F                     	;# 
  7434  0410                     	;# 
  7435  0411                     	;# 
  7436  0416                     	;# 
  7437  0416                     	;# 
  7438  0417                     	;# 
  7439  0418                     	;# 
  7440  0418                     	;# 
  7441  0419                     	;# 
  7442  041A                     	;# 
  7443  041A                     	;# 
  7444  041B                     	;# 
  7445  041C                     	;# 
  7446  041C                     	;# 
  7447  041D                     	;# 
  7448  041E                     	;# 
  7449  041F                     	;# 
  7450  048C                     	;# 
  7451  048C                     	;# 
  7452  048D                     	;# 
  7453  048E                     	;# 
  7454  048F                     	;# 
  7455  048F                     	;# 
  7456  0490                     	;# 
  7457  0491                     	;# 
  7458  0492                     	;# 
  7459  0492                     	;# 
  7460  0493                     	;# 
  7461  0494                     	;# 
  7462  0495                     	;# 
  7463  0495                     	;# 
  7464  0496                     	;# 
  7465  0497                     	;# 
  7466  0498                     	;# 
  7467  0499                     	;# 
  7468  049A                     	;# 
  7469  049B                     	;# 
  7470  049C                     	;# 
  7471  049D                     	;# 
  7472  050C                     	;# 
  7473  050C                     	;# 
  7474  050D                     	;# 
  7475  050E                     	;# 
  7476  050F                     	;# 
  7477  050F                     	;# 
  7478  0510                     	;# 
  7479  0511                     	;# 
  7480  0512                     	;# 
  7481  0512                     	;# 
  7482  0513                     	;# 
  7483  0514                     	;# 
  7484  0515                     	;# 
  7485  0515                     	;# 
  7486  0516                     	;# 
  7487  0517                     	;# 
  7488  0518                     	;# 
  7489  0519                     	;# 
  7490  051A                     	;# 
  7491  051B                     	;# 
  7492  051C                     	;# 
  7493  051D                     	;# 
  7494  058C                     	;# 
  7495  058C                     	;# 
  7496  058D                     	;# 
  7497  058E                     	;# 
  7498  058F                     	;# 
  7499  058F                     	;# 
  7500  0590                     	;# 
  7501  0591                     	;# 
  7502  0592                     	;# 
  7503  0593                     	;# 
  7504  060C                     	;# 
  7505  060D                     	;# 
  7506  060E                     	;# 
  7507  060F                     	;# 
  7508  0610                     	;# 
  7509  0611                     	;# 
  7510  0612                     	;# 
  7511  0613                     	;# 
  7512  0614                     	;# 
  7513  0616                     	;# 
  7514  0617                     	;# 
  7515  0618                     	;# 
  7516  0619                     	;# 
  7517  061A                     	;# 
  7518  061B                     	;# 
  7519  061C                     	;# 
  7520  061D                     	;# 
  7521  061E                     	;# 
  7522  068C                     	;# 
  7523  068D                     	;# 
  7524  068E                     	;# 
  7525  068F                     	;# 
  7526  0690                     	;# 
  7527  0691                     	;# 
  7528  0692                     	;# 
  7529  0693                     	;# 
  7530  0694                     	;# 
  7531  070C                     	;# 
  7532  070D                     	;# 
  7533  070E                     	;# 
  7534  070F                     	;# 
  7535  0710                     	;# 
  7536  0711                     	;# 
  7537  0712                     	;# 
  7538  0713                     	;# 
  7539  0714                     	;# 
  7540  0716                     	;# 
  7541  0717                     	;# 
  7542  0718                     	;# 
  7543  0719                     	;# 
  7544  071A                     	;# 
  7545  071B                     	;# 
  7546  071C                     	;# 
  7547  071D                     	;# 
  7548  071E                     	;# 
  7549  0796                     	;# 
  7550  0797                     	;# 
  7551  0798                     	;# 
  7552  0799                     	;# 
  7553  079A                     	;# 
  7554  079B                     	;# 
  7555  080C                     	;# 
  7556  080D                     	;# 
  7557  080E                     	;# 
  7558  080F                     	;# 
  7559  0810                     	;# 
  7560  0811                     	;# 
  7561  0812                     	;# 
  7562  0813                     	;# 
  7563  0814                     	;# 
  7564  081A                     	;# 
  7565  081B                     	;# 
  7566  081C                     	;# 
  7567  081D                     	;# 
  7568  081E                     	;# 
  7569  081F                     	;# 
  7570  088C                     	;# 
  7571  088D                     	;# 
  7572  088E                     	;# 
  7573  088F                     	;# 
  7574  0890                     	;# 
  7575  0891                     	;# 
  7576  0892                     	;# 
  7577  0893                     	;# 
  7578  0895                     	;# 
  7579  0896                     	;# 
  7580  0897                     	;# 
  7581  0898                     	;# 
  7582  0899                     	;# 
  7583  089A                     	;# 
  7584  089B                     	;# 
  7585  090C                     	;# 
  7586  090E                     	;# 
  7587  090F                     	;# 
  7588  091F                     	;# 
  7589  091F                     	;# 
  7590  098F                     	;# 
  7591  098F                     	;# 
  7592  0990                     	;# 
  7593  0991                     	;# 
  7594  0992                     	;# 
  7595  0993                     	;# 
  7596  0994                     	;# 
  7597  0995                     	;# 
  7598  0996                     	;# 
  7599  0997                     	;# 
  7600  0E0F                     	;# 
  7601  0E10                     	;# 
  7602  0E11                     	;# 
  7603  0E12                     	;# 
  7604  0E13                     	;# 
  7605  0E14                     	;# 
  7606  0E15                     	;# 
  7607  0E16                     	;# 
  7608  0E17                     	;# 
  7609  0E18                     	;# 
  7610  0E19                     	;# 
  7611  0E1A                     	;# 
  7612  0E1B                     	;# 
  7613  0E1C                     	;# 
  7614  0E1D                     	;# 
  7615  0E1E                     	;# 
  7616  0E1F                     	;# 
  7617  0E20                     	;# 
  7618  0E21                     	;# 
  7619  0E22                     	;# 
  7620  0E23                     	;# 
  7621  0E24                     	;# 
  7622  0E25                     	;# 
  7623  0E26                     	;# 
  7624  0E27                     	;# 
  7625  0E28                     	;# 
  7626  0E29                     	;# 
  7627  0E2A                     	;# 
  7628  0E2B                     	;# 
  7629  0E2C                     	;# 
  7630  0E2D                     	;# 
  7631  0E2E                     	;# 
  7632  0E2F                     	;# 
  7633  0E30                     	;# 
  7634  0E31                     	;# 
  7635  0E32                     	;# 
  7636  0E33                     	;# 
  7637  0E34                     	;# 
  7638  0E35                     	;# 
  7639  0E36                     	;# 
  7640  0E37                     	;# 
  7641  0E8F                     	;# 
  7642  0E90                     	;# 
  7643  0E91                     	;# 
  7644  0E92                     	;# 
  7645  0E93                     	;# 
  7646  0E94                     	;# 
  7647  0E95                     	;# 
  7648  0E96                     	;# 
  7649  0E97                     	;# 
  7650  0E9C                     	;# 
  7651  0E9D                     	;# 
  7652  0E9E                     	;# 
  7653  0EA1                     	;# 
  7654  0EA2                     	;# 
  7655  0EA3                     	;# 
  7656  0EA4                     	;# 
  7657  0EA5                     	;# 
  7658  0EA9                     	;# 
  7659  0EAA                     	;# 
  7660  0EAB                     	;# 
  7661  0EAC                     	;# 
  7662  0EB1                     	;# 
  7663  0EB2                     	;# 
  7664  0EB3                     	;# 
  7665  0EB8                     	;# 
  7666  0EB9                     	;# 
  7667  0EBA                     	;# 
  7668  0EBB                     	;# 
  7669  0EBC                     	;# 
  7670  0EBD                     	;# 
  7671  0EBE                     	;# 
  7672  0EC3                     	;# 
  7673  0EC5                     	;# 
  7674  0EC6                     	;# 
  7675  0EC7                     	;# 
  7676  0EC8                     	;# 
  7677  0EC9                     	;# 
  7678  0ECA                     	;# 
  7679  0ECB                     	;# 
  7680  0ECC                     	;# 
  7681  0F10                     	;# 
  7682  0F11                     	;# 
  7683  0F12                     	;# 
  7684  0F13                     	;# 
  7685  0F14                     	;# 
  7686  0F15                     	;# 
  7687  0F16                     	;# 
  7688  0F17                     	;# 
  7689  0F18                     	;# 
  7690  0F19                     	;# 
  7691  0F1A                     	;# 
  7692  0F1B                     	;# 
  7693  0F1C                     	;# 
  7694  0F1D                     	;# 
  7695  0F1E                     	;# 
  7696  0F1F                     	;# 
  7697  0F20                     	;# 
  7698  0F21                     	;# 
  7699  0F22                     	;# 
  7700  0F23                     	;# 
  7701  0F24                     	;# 
  7702  0F25                     	;# 
  7703  0F26                     	;# 
  7704  0F27                     	;# 
  7705  0F28                     	;# 
  7706  0F29                     	;# 
  7707  0F2A                     	;# 
  7708  0F2B                     	;# 
  7709  0F2C                     	;# 
  7710  0F2D                     	;# 
  7711  0F2E                     	;# 
  7712  0F2F                     	;# 
  7713  0F30                     	;# 
  7714  0F31                     	;# 
  7715  0F32                     	;# 
  7716  0F38                     	;# 
  7717  0F39                     	;# 
  7718  0F3A                     	;# 
  7719  0F3B                     	;# 
  7720  0F3C                     	;# 
  7721  0F3D                     	;# 
  7722  0F3E                     	;# 
  7723  0F3F                     	;# 
  7724  0F40                     	;# 
  7725  0F41                     	;# 
  7726  0F43                     	;# 
  7727  0F44                     	;# 
  7728  0F45                     	;# 
  7729  0F46                     	;# 
  7730  0F47                     	;# 
  7731  0F48                     	;# 
  7732  0F49                     	;# 
  7733  0F4A                     	;# 
  7734  0F4B                     	;# 
  7735  0F4C                     	;# 
  7736  0F4E                     	;# 
  7737  0F4F                     	;# 
  7738  0F50                     	;# 
  7739  0F51                     	;# 
  7740  0F52                     	;# 
  7741  0F53                     	;# 
  7742  0F54                     	;# 
  7743  0F55                     	;# 
  7744  0F56                     	;# 
  7745  0F57                     	;# 
  7746  0F59                     	;# 
  7747  0F5A                     	;# 
  7748  0F5B                     	;# 
  7749  0F5C                     	;# 
  7750  0F5D                     	;# 
  7751  0F61                     	;# 
  7752  0F62                     	;# 
  7753  0F64                     	;# 
  7754  0F65                     	;# 
  7755  0F66                     	;# 
  7756  0F67                     	;# 
  7757  0F68                     	;# 
  7758  0F69                     	;# 
  7759  0F6A                     	;# 
  7760  0F6B                     	;# 
  7761  0F6C                     	;# 
  7762  0F6D                     	;# 
  7763  0FE4                     	;# 
  7764  0FE5                     	;# 
  7765  0FE6                     	;# 
  7766  0FE7                     	;# 
  7767  0FE8                     	;# 
  7768  0FE9                     	;# 
  7769  0FEA                     	;# 
  7770  0FEB                     	;# 
  7771  0FED                     	;# 
  7772  0FEE                     	;# 
  7773  0FEF                     	;# 
  7774  0000                     	;# 
  7775  0001                     	;# 
  7776  0002                     	;# 
  7777  0003                     	;# 
  7778  0004                     	;# 
  7779  0005                     	;# 
  7780  0006                     	;# 
  7781  0007                     	;# 
  7782  0008                     	;# 
  7783  0009                     	;# 
  7784  000A                     	;# 
  7785  000B                     	;# 
  7786  000C                     	;# 
  7787  000D                     	;# 
  7788  000E                     	;# 
  7789  000F                     	;# 
  7790  0010                     	;# 
  7791  0011                     	;# 
  7792  0012                     	;# 
  7793  0013                     	;# 
  7794  0014                     	;# 
  7795  0015                     	;# 
  7796  0016                     	;# 
  7797  0017                     	;# 
  7798  0018                     	;# 
  7799  0019                     	;# 
  7800  001A                     	;# 
  7801  001C                     	;# 
  7802  001C                     	;# 
  7803  001D                     	;# 
  7804  001D                     	;# 
  7805  001E                     	;# 
  7806  001F                     	;# 
  7807  008C                     	;# 
  7808  008C                     	;# 
  7809  008D                     	;# 
  7810  008E                     	;# 
  7811  008E                     	;# 
  7812  008F                     	;# 
  7813  0090                     	;# 
  7814  0090                     	;# 
  7815  0091                     	;# 
  7816  0093                     	;# 
  7817  0094                     	;# 
  7818  0095                     	;# 
  7819  0096                     	;# 
  7820  0097                     	;# 
  7821  0098                     	;# 
  7822  0099                     	;# 
  7823  009A                     	;# 
  7824  009B                     	;# 
  7825  009C                     	;# 
  7826  009D                     	;# 
  7827  009E                     	;# 
  7828  010C                     	;# 
  7829  010D                     	;# 
  7830  010E                     	;# 
  7831  010E                     	;# 
  7832  010F                     	;# 
  7833  0110                     	;# 
  7834  0110                     	;# 
  7835  0111                     	;# 
  7836  0112                     	;# 
  7837  0112                     	;# 
  7838  0113                     	;# 
  7839  0114                     	;# 
  7840  0114                     	;# 
  7841  0115                     	;# 
  7842  0116                     	;# 
  7843  0116                     	;# 
  7844  0117                     	;# 
  7845  0119                     	;# 
  7846  0119                     	;# 
  7847  0119                     	;# 
  7848  011A                     	;# 
  7849  011A                     	;# 
  7850  011A                     	;# 
  7851  011B                     	;# 
  7852  011B                     	;# 
  7853  011B                     	;# 
  7854  011B                     	;# 
  7855  011B                     	;# 
  7856  011C                     	;# 
  7857  011C                     	;# 
  7858  011C                     	;# 
  7859  011D                     	;# 
  7860  011D                     	;# 
  7861  011D                     	;# 
  7862  011E                     	;# 
  7863  011E                     	;# 
  7864  011E                     	;# 
  7865  011F                     	;# 
  7866  011F                     	;# 
  7867  011F                     	;# 
  7868  011F                     	;# 
  7869  011F                     	;# 
  7870  018C                     	;# 
  7871  018D                     	;# 
  7872  018E                     	;# 
  7873  018F                     	;# 
  7874  0190                     	;# 
  7875  0191                     	;# 
  7876  0192                     	;# 
  7877  0196                     	;# 
  7878  0197                     	;# 
  7879  0198                     	;# 
  7880  0199                     	;# 
  7881  019A                     	;# 
  7882  019B                     	;# 
  7883  019C                     	;# 
  7884  020C                     	;# 
  7885  020C                     	;# 
  7886  020D                     	;# 
  7887  020E                     	;# 
  7888  020F                     	;# 
  7889  020F                     	;# 
  7890  0210                     	;# 
  7891  0210                     	;# 
  7892  0211                     	;# 
  7893  0211                     	;# 
  7894  0212                     	;# 
  7895  0212                     	;# 
  7896  0213                     	;# 
  7897  0214                     	;# 
  7898  0215                     	;# 
  7899  0215                     	;# 
  7900  0216                     	;# 
  7901  0216                     	;# 
  7902  0217                     	;# 
  7903  0217                     	;# 
  7904  0218                     	;# 
  7905  0218                     	;# 
  7906  0219                     	;# 
  7907  021A                     	;# 
  7908  021B                     	;# 
  7909  021B                     	;# 
  7910  021C                     	;# 
  7911  021C                     	;# 
  7912  021D                     	;# 
  7913  021D                     	;# 
  7914  021E                     	;# 
  7915  021F                     	;# 
  7916  028C                     	;# 
  7917  028C                     	;# 
  7918  028D                     	;# 
  7919  028D                     	;# 
  7920  028E                     	;# 
  7921  028F                     	;# 
  7922  0290                     	;# 
  7923  0290                     	;# 
  7924  0291                     	;# 
  7925  0292                     	;# 
  7926  0292                     	;# 
  7927  0293                     	;# 
  7928  0293                     	;# 
  7929  0294                     	;# 
  7930  0295                     	;# 
  7931  0296                     	;# 
  7932  0296                     	;# 
  7933  0297                     	;# 
  7934  0298                     	;# 
  7935  0298                     	;# 
  7936  0299                     	;# 
  7937  0299                     	;# 
  7938  029A                     	;# 
  7939  029B                     	;# 
  7940  029C                     	;# 
  7941  029C                     	;# 
  7942  029D                     	;# 
  7943  030C                     	;# 
  7944  030C                     	;# 
  7945  030D                     	;# 
  7946  030E                     	;# 
  7947  030F                     	;# 
  7948  0310                     	;# 
  7949  0310                     	;# 
  7950  0311                     	;# 
  7951  0312                     	;# 
  7952  0313                     	;# 
  7953  0314                     	;# 
  7954  0314                     	;# 
  7955  0315                     	;# 
  7956  0316                     	;# 
  7957  0317                     	;# 
  7958  0318                     	;# 
  7959  0318                     	;# 
  7960  0319                     	;# 
  7961  031A                     	;# 
  7962  031B                     	;# 
  7963  031C                     	;# 
  7964  031C                     	;# 
  7965  031D                     	;# 
  7966  031E                     	;# 
  7967  031F                     	;# 
  7968  038C                     	;# 
  7969  038C                     	;# 
  7970  038D                     	;# 
  7971  038E                     	;# 
  7972  0390                     	;# 
  7973  0390                     	;# 
  7974  0391                     	;# 
  7975  0392                     	;# 
  7976  040C                     	;# 
  7977  040D                     	;# 
  7978  040E                     	;# 
  7979  040F                     	;# 
  7980  0410                     	;# 
  7981  0411                     	;# 
  7982  0416                     	;# 
  7983  0416                     	;# 
  7984  0417                     	;# 
  7985  0418                     	;# 
  7986  0418                     	;# 
  7987  0419                     	;# 
  7988  041A                     	;# 
  7989  041A                     	;# 
  7990  041B                     	;# 
  7991  041C                     	;# 
  7992  041C                     	;# 
  7993  041D                     	;# 
  7994  041E                     	;# 
  7995  041F                     	;# 
  7996  048C                     	;# 
  7997  048C                     	;# 
  7998  048D                     	;# 
  7999  048E                     	;# 
  8000  048F                     	;# 
  8001  048F                     	;# 
  8002  0490                     	;# 
  8003  0491                     	;# 
  8004  0492                     	;# 
  8005  0492                     	;# 
  8006  0493                     	;# 
  8007  0494                     	;# 
  8008  0495                     	;# 
  8009  0495                     	;# 
  8010  0496                     	;# 
  8011  0497                     	;# 
  8012  0498                     	;# 
  8013  0499                     	;# 
  8014  049A                     	;# 
  8015  049B                     	;# 
  8016  049C                     	;# 
  8017  049D                     	;# 
  8018  050C                     	;# 
  8019  050C                     	;# 
  8020  050D                     	;# 
  8021  050E                     	;# 
  8022  050F                     	;# 
  8023  050F                     	;# 
  8024  0510                     	;# 
  8025  0511                     	;# 
  8026  0512                     	;# 
  8027  0512                     	;# 
  8028  0513                     	;# 
  8029  0514                     	;# 
  8030  0515                     	;# 
  8031  0515                     	;# 
  8032  0516                     	;# 
  8033  0517                     	;# 
  8034  0518                     	;# 
  8035  0519                     	;# 
  8036  051A                     	;# 
  8037  051B                     	;# 
  8038  051C                     	;# 
  8039  051D                     	;# 
  8040  058C                     	;# 
  8041  058C                     	;# 
  8042  058D                     	;# 
  8043  058E                     	;# 
  8044  058F                     	;# 
  8045  058F                     	;# 
  8046  0590                     	;# 
  8047  0591                     	;# 
  8048  0592                     	;# 
  8049  0593                     	;# 
  8050  060C                     	;# 
  8051  060D                     	;# 
  8052  060E                     	;# 
  8053  060F                     	;# 
  8054  0610                     	;# 
  8055  0611                     	;# 
  8056  0612                     	;# 
  8057  0613                     	;# 
  8058  0614                     	;# 
  8059  0616                     	;# 
  8060  0617                     	;# 
  8061  0618                     	;# 
  8062  0619                     	;# 
  8063  061A                     	;# 
  8064  061B                     	;# 
  8065  061C                     	;# 
  8066  061D                     	;# 
  8067  061E                     	;# 
  8068  068C                     	;# 
  8069  068D                     	;# 
  8070  068E                     	;# 
  8071  068F                     	;# 
  8072  0690                     	;# 
  8073  0691                     	;# 
  8074  0692                     	;# 
  8075  0693                     	;# 
  8076  0694                     	;# 
  8077  070C                     	;# 
  8078  070D                     	;# 
  8079  070E                     	;# 
  8080  070F                     	;# 
  8081  0710                     	;# 
  8082  0711                     	;# 
  8083  0712                     	;# 
  8084  0713                     	;# 
  8085  0714                     	;# 
  8086  0716                     	;# 
  8087  0717                     	;# 
  8088  0718                     	;# 
  8089  0719                     	;# 
  8090  071A                     	;# 
  8091  071B                     	;# 
  8092  071C                     	;# 
  8093  071D                     	;# 
  8094  071E                     	;# 
  8095  0796                     	;# 
  8096  0797                     	;# 
  8097  0798                     	;# 
  8098  0799                     	;# 
  8099  079A                     	;# 
  8100  079B                     	;# 
  8101  080C                     	;# 
  8102  080D                     	;# 
  8103  080E                     	;# 
  8104  080F                     	;# 
  8105  0810                     	;# 
  8106  0811                     	;# 
  8107  0812                     	;# 
  8108  0813                     	;# 
  8109  0814                     	;# 
  8110  081A                     	;# 
  8111  081B                     	;# 
  8112  081C                     	;# 
  8113  081D                     	;# 
  8114  081E                     	;# 
  8115  081F                     	;# 
  8116  088C                     	;# 
  8117  088D                     	;# 
  8118  088E                     	;# 
  8119  088F                     	;# 
  8120  0890                     	;# 
  8121  0891                     	;# 
  8122  0892                     	;# 
  8123  0893                     	;# 
  8124  0895                     	;# 
  8125  0896                     	;# 
  8126  0897                     	;# 
  8127  0898                     	;# 
  8128  0899                     	;# 
  8129  089A                     	;# 
  8130  089B                     	;# 
  8131  090C                     	;# 
  8132  090E                     	;# 
  8133  090F                     	;# 
  8134  091F                     	;# 
  8135  091F                     	;# 
  8136  098F                     	;# 
  8137  098F                     	;# 
  8138  0990                     	;# 
  8139  0991                     	;# 
  8140  0992                     	;# 
  8141  0993                     	;# 
  8142  0994                     	;# 
  8143  0995                     	;# 
  8144  0996                     	;# 
  8145  0997                     	;# 
  8146  0E0F                     	;# 
  8147  0E10                     	;# 
  8148  0E11                     	;# 
  8149  0E12                     	;# 
  8150  0E13                     	;# 
  8151  0E14                     	;# 
  8152  0E15                     	;# 
  8153  0E16                     	;# 
  8154  0E17                     	;# 
  8155  0E18                     	;# 
  8156  0E19                     	;# 
  8157  0E1A                     	;# 
  8158  0E1B                     	;# 
  8159  0E1C                     	;# 
  8160  0E1D                     	;# 
  8161  0E1E                     	;# 
  8162  0E1F                     	;# 
  8163  0E20                     	;# 
  8164  0E21                     	;# 
  8165  0E22                     	;# 
  8166  0E23                     	;# 
  8167  0E24                     	;# 
  8168  0E25                     	;# 
  8169  0E26                     	;# 
  8170  0E27                     	;# 
  8171  0E28                     	;# 
  8172  0E29                     	;# 
  8173  0E2A                     	;# 
  8174  0E2B                     	;# 
  8175  0E2C                     	;# 
  8176  0E2D                     	;# 
  8177  0E2E                     	;# 
  8178  0E2F                     	;# 
  8179  0E30                     	;# 
  8180  0E31                     	;# 
  8181  0E32                     	;# 
  8182  0E33                     	;# 
  8183  0E34                     	;# 
  8184  0E35                     	;# 
  8185  0E36                     	;# 
  8186  0E37                     	;# 
  8187  0E8F                     	;# 
  8188  0E90                     	;# 
  8189  0E91                     	;# 
  8190  0E92                     	;# 
  8191  0E93                     	;# 
  8192  0E94                     	;# 
  8193  0E95                     	;# 
  8194  0E96                     	;# 
  8195  0E97                     	;# 
  8196  0E9C                     	;# 
  8197  0E9D                     	;# 
  8198  0E9E                     	;# 
  8199  0EA1                     	;# 
  8200  0EA2                     	;# 
  8201  0EA3                     	;# 
  8202  0EA4                     	;# 
  8203  0EA5                     	;# 
  8204  0EA9                     	;# 
  8205  0EAA                     	;# 
  8206  0EAB                     	;# 
  8207  0EAC                     	;# 
  8208  0EB1                     	;# 
  8209  0EB2                     	;# 
  8210  0EB3                     	;# 
  8211  0EB8                     	;# 
  8212  0EB9                     	;# 
  8213  0EBA                     	;# 
  8214  0EBB                     	;# 
  8215  0EBC                     	;# 
  8216  0EBD                     	;# 
  8217  0EBE                     	;# 
  8218  0EC3                     	;# 
  8219  0EC5                     	;# 
  8220  0EC6                     	;# 
  8221  0EC7                     	;# 
  8222  0EC8                     	;# 
  8223  0EC9                     	;# 
  8224  0ECA                     	;# 
  8225  0ECB                     	;# 
  8226  0ECC                     	;# 
  8227  0F10                     	;# 
  8228  0F11                     	;# 
  8229  0F12                     	;# 
  8230  0F13                     	;# 
  8231  0F14                     	;# 
  8232  0F15                     	;# 
  8233  0F16                     	;# 
  8234  0F17                     	;# 
  8235  0F18                     	;# 
  8236  0F19                     	;# 
  8237  0F1A                     	;# 
  8238  0F1B                     	;# 
  8239  0F1C                     	;# 
  8240  0F1D                     	;# 
  8241  0F1E                     	;# 
  8242  0F1F                     	;# 
  8243  0F20                     	;# 
  8244  0F21                     	;# 
  8245  0F22                     	;# 
  8246  0F23                     	;# 
  8247  0F24                     	;# 
  8248  0F25                     	;# 
  8249  0F26                     	;# 
  8250  0F27                     	;# 
  8251  0F28                     	;# 
  8252  0F29                     	;# 
  8253  0F2A                     	;# 
  8254  0F2B                     	;# 
  8255  0F2C                     	;# 
  8256  0F2D                     	;# 
  8257  0F2E                     	;# 
  8258  0F2F                     	;# 
  8259  0F30                     	;# 
  8260  0F31                     	;# 
  8261  0F32                     	;# 
  8262  0F38                     	;# 
  8263  0F39                     	;# 
  8264  0F3A                     	;# 
  8265  0F3B                     	;# 
  8266  0F3C                     	;# 
  8267  0F3D                     	;# 
  8268  0F3E                     	;# 
  8269  0F3F                     	;# 
  8270  0F40                     	;# 
  8271  0F41                     	;# 
  8272  0F43                     	;# 
  8273  0F44                     	;# 
  8274  0F45                     	;# 
  8275  0F46                     	;# 
  8276  0F47                     	;# 
  8277  0F48                     	;# 
  8278  0F49                     	;# 
  8279  0F4A                     	;# 
  8280  0F4B                     	;# 
  8281  0F4C                     	;# 
  8282  0F4E                     	;# 
  8283  0F4F                     	;# 
  8284  0F50                     	;# 
  8285  0F51                     	;# 
  8286  0F52                     	;# 
  8287  0F53                     	;# 
  8288  0F54                     	;# 
  8289  0F55                     	;# 
  8290  0F56                     	;# 
  8291  0F57                     	;# 
  8292  0F59                     	;# 
  8293  0F5A                     	;# 
  8294  0F5B                     	;# 
  8295  0F5C                     	;# 
  8296  0F5D                     	;# 
  8297  0F61                     	;# 
  8298  0F62                     	;# 
  8299  0F64                     	;# 
  8300  0F65                     	;# 
  8301  0F66                     	;# 
  8302  0F67                     	;# 
  8303  0F68                     	;# 
  8304  0F69                     	;# 
  8305  0F6A                     	;# 
  8306  0F6B                     	;# 
  8307  0F6C                     	;# 
  8308  0F6D                     	;# 
  8309  0FE4                     	;# 
  8310  0FE5                     	;# 
  8311  0FE6                     	;# 
  8312  0FE7                     	;# 
  8313  0FE8                     	;# 
  8314  0FE9                     	;# 
  8315  0FEA                     	;# 
  8316  0FEB                     	;# 
  8317  0FED                     	;# 
  8318  0FEE                     	;# 
  8319  0FEF                     	;# 
  8320                           
  8321                           	psect	idataBANK0
  8322  1719                     __pidataBANK0:
  8323                           
  8324                           ;initializer for _alarmPWMStart
  8325  1719  34FF               	retlw	255
  8326  171A  34FF               	retlw	255
  8327  171B  34FF               	retlw	255
  8328                           
  8329                           ;initializer for _prevLumLevel
  8330  171C  34FF               	retlw	255
  8331  171D  34FF               	retlw	255
  8332                           
  8333                           ;initializer for _prevTemp
  8334  171E  34FF               	retlw	255
  8335  171F  34FF               	retlw	255
  8336                           
  8337                           	psect	stringtext1
  8338  180F                     __pstringtext1:
  8339  180F                     _dpowers:
  8340  180F  3401               	retlw	1
  8341  1810  3400               	retlw	0
  8342  1811  340A               	retlw	10
  8343  1812  3400               	retlw	0
  8344  1813  3464               	retlw	100
  8345  1814  3400               	retlw	0
  8346  1815  34E8               	retlw	232
  8347  1816  3403               	retlw	3
  8348  1817  3410               	retlw	16
  8349  1818  3427               	retlw	39
  8350  1819                     __end_of_dpowers:
  8351                           
  8352                           	psect	nvBANK0
  8353  006E                     __pnvBANK0:
  8354  006E                     _timer3ReloadVal:
  8355  006E                     	ds	2
  8356                           
  8357                           	psect	nvBANK1
  8358  00B1                     __pnvBANK1:
  8359  00B1                     _INT_InterruptHandler:
  8360  00B1                     	ds	2
  8361  00B3                     _TMR5_InterruptHandler:
  8362  00B3                     	ds	2
  8363  00B5                     _timer5ReloadVal:
  8364  00B5                     	ds	2
  8365  00B7                     _TMR3_InterruptHandler:
  8366  00B7                     	ds	2
  8367  00B9                     _TMR1_InterruptHandler:
  8368  00B9                     	ds	2
  8369  00BB                     _timer1ReloadVal:
  8370  00BB                     	ds	2
  8371  0013                     _TRISCbits	set	19
  8372  000E                     _PORTCbits	set	14
  8373  0016                     _LATAbits	set	22
  8374  000B                     _INTCONbits	set	11
  8375  0014                     _TRISD	set	20
  8376  0013                     _TRISC	set	19
  8377  0012                     _TRISB	set	18
  8378  0011                     _TRISA	set	17
  8379  0015                     _TRISE	set	21
  8380  0018                     _LATC	set	24
  8381  0017                     _LATB	set	23
  8382  0016                     _LATA	set	22
  8383  0019                     _LATD	set	25
  8384  001A                     _LATE	set	26
  8385  0094                     _ADCON1bits	set	148
  8386  008E                     _ADPREVL	set	142
  8387  008F                     _ADPREVH	set	143
  8388  0097                     _ADSTATbits	set	151
  8389  0090                     _ADACCL	set	144
  8390  0091                     _ADACCH	set	145
  8391  0095                     _ADCON2bits	set	149
  8392  009C                     _ADPRE	set	156
  8393  0096                     _ADCON3bits	set	150
  8394  008C                     _ADRESL	set	140
  8395  008D                     _ADRESH	set	141
  8396  0093                     _ADCON0bits	set	147
  8397  009D                     _ADACQ	set	157
  8398  0093                     _ADCON0	set	147
  8399  0098                     _ADCLK	set	152
  8400  0099                     _ADACT	set	153
  8401  009A                     _ADREF	set	154
  8402  0097                     _ADSTAT	set	151
  8403  0096                     _ADCON3	set	150
  8404  0095                     _ADCON2	set	149
  8405  0094                     _ADCON1	set	148
  8406  009B                     _ADCAP	set	155
  8407  009E                     _ADPCH	set	158
  8408  0116                     _ADERRL	set	278
  8409  0117                     _ADERRH	set	279
  8410  0114                     _ADFLTRL	set	276
  8411  0115                     _ADFLTRH	set	277
  8412  010C                     _ADCNT	set	268
  8413  010D                     _ADRPT	set	269
  8414  0113                     _ADSTPTH	set	275
  8415  0112                     _ADSTPTL	set	274
  8416  0111                     _ADUTHH	set	273
  8417  0110                     _ADUTHL	set	272
  8418  010F                     _ADLTHH	set	271
  8419  010E                     _ADLTHL	set	270
  8420  018E                     _SSP1MSK	set	398
  8421  018D                     _SSP1ADD	set	397
  8422  018F                     _SSP1STAT	set	399
  8423  0191                     _SSP1CON2	set	401
  8424  0190                     _SSP1CON1bits	set	400
  8425  018C                     _SSP1BUF	set	396
  8426  018F                     _SSP1STATbits	set	399
  8427  0191                     _SSP1CON2bits	set	401
  8428  0190                     _SSP1CON1	set	400
  8429  021F                     _CCPTMRS1bits	set	543
  8430  021B                     _T5GCONbits	set	539
  8431  021A                     _T5CONbits	set	538
  8432  021A                     _T5CON	set	538
  8433  0218                     _TMR5L	set	536
  8434  0219                     _TMR5H	set	537
  8435  021D                     _T5CLK	set	541
  8436  021C                     _T5GATE	set	540
  8437  021B                     _T5GCON	set	539
  8438  0215                     _T3GCONbits	set	533
  8439  0214                     _T3CONbits	set	532
  8440  0214                     _T3CON	set	532
  8441  0212                     _TMR3L	set	530
  8442  0213                     _TMR3H	set	531
  8443  0217                     _T3CLK	set	535
  8444  0216                     _T3GATE	set	534
  8445  0215                     _T3GCON	set	533
  8446  020F                     _T1GCONbits	set	527
  8447  020E                     _T1CONbits	set	526
  8448  020E                     _T1CON	set	526
  8449  020C                     _TMR1L	set	524
  8450  020D                     _TMR1H	set	525
  8451  0211                     _T1CLK	set	529
  8452  0210                     _T1GATE	set	528
  8453  020F                     _T1GCON	set	527
  8454  028D                     _PR2	set	653
  8455  028C                     _TMR2	set	652
  8456  028E                     _T2CONbits	set	654
  8457  0291                     _T2RSTbits	set	657
  8458  028F                     _T2HLTbits	set	655
  8459  028E                     _T2CON	set	654
  8460  028C                     _T2TMR	set	652
  8461  028D                     _T2PR	set	653
  8462  0291                     _T2RST	set	657
  8463  028F                     _T2HLT	set	655
  8464  0290                     _T2CLKCON	set	656
  8465  038C                     _PWM6DCL	set	908
  8466  038D                     _PWM6DCH	set	909
  8467  038E                     _PWM6CON	set	910
  8468  1C77                     _PWM6EN	set	7287
  8469  0710                     _PIR4bits	set	1808
  8470  071A                     _PIE4bits	set	1818
  8471  070C                     _PIR0bits	set	1804
  8472  0716                     _PIE0bits	set	1814
  8473  0719                     _PIE3bits	set	1817
  8474  070F                     _PIR3bits	set	1807
  8475  079B                     _PMD5	set	1947
  8476  079A                     _PMD4	set	1946
  8477  0799                     _PMD3	set	1945
  8478  0798                     _PMD2	set	1944
  8479  0797                     _PMD1	set	1943
  8480  0796                     _PMD0	set	1942
  8481  081F                     _NVMCON2	set	2079
  8482  081C                     _NVMDATL	set	2076
  8483  081D                     _NVMDATH	set	2077
  8484  081E                     _NVMCON1bits	set	2078
  8485  081B                     _NVMADRH	set	2075
  8486  081A                     _NVMADRL	set	2074
  8487  0892                     _OSCTUNE	set	2194
  8488  0893                     _OSCFRQ	set	2195
  8489  0891                     _OSCEN	set	2193
  8490  088F                     _OSCCON3	set	2191
  8491  088D                     _OSCCON1	set	2189
  8492  0EC6                     _SSP1DATPPS	set	3782
  8493  0EC5                     _SSP1CLKPPS	set	3781
  8494  0E90                     _INTPPS	set	3728
  8495  0F16                     _RA6PPS	set	3862
  8496  0F24                     _RC4PPS	set	3876
  8497  0F23                     _RC3PPS	set	3875
  8498  0F67                     _SLRCONE	set	3943
  8499  0F5C                     _SLRCOND	set	3932
  8500  0F51                     _SLRCONC	set	3921
  8501  0F46                     _SLRCONB	set	3910
  8502  0F3B                     _SLRCONA	set	3899
  8503  0F5B                     _ODCOND	set	3931
  8504  0F50                     _ODCONC	set	3920
  8505  0F45                     _ODCONB	set	3909
  8506  0F3A                     _ODCONA	set	3898
  8507  0F66                     _ODCONE	set	3942
  8508  0F4F                     _WPUC	set	3919
  8509  0F39                     _WPUA	set	3897
  8510  0F44                     _WPUB	set	3908
  8511  0F65                     _WPUE	set	3941
  8512  0F5A                     _WPUD	set	3930
  8513  0F38                     _ANSELA	set	3896
  8514  0F64                     _ANSELE	set	3940
  8515  0F43                     _ANSELB	set	3907
  8516  0F4E                     _ANSELC	set	3918
  8517  0F59                     _ANSELD	set	3929
  8518  7A7C                     _WPUC4	set	31356
  8519  7A7B                     _WPUC3	set	31355
  8520                           
  8521                           	psect	stringtext2
  8522  1800                     __pstringtext2:
  8523  1800                     STR_1:
  8524  1800  3425               	retlw	37	;'%'
  8525  1801  3430               	retlw	48	;'0'
  8526  1802  3432               	retlw	50	;'2'
  8527  1803  3464               	retlw	100	;'d'
  8528  1804  343A               	retlw	58	;':'
  8529  1805  3425               	retlw	37	;'%'
  8530  1806  3430               	retlw	48	;'0'
  8531  1807  3432               	retlw	50	;'2'
  8532  1808  3464               	retlw	100	;'d'
  8533  1809  343A               	retlw	58	;':'
  8534  180A  3425               	retlw	37	;'%'
  8535  180B  3430               	retlw	48	;'0'
  8536  180C  3432               	retlw	50	;'2'
  8537  180D  3464               	retlw	100	;'d'
  8538  180E  3400               	retlw	0
  8539                           
  8540                           	psect	stringtext3
  8541  1819                     __pstringtext3:
  8542  1819                     STR_3:
  8543  1819  3425               	retlw	37	;'%'
  8544  181A  3430               	retlw	48	;'0'
  8545  181B  3432               	retlw	50	;'2'
  8546  181C  3464               	retlw	100	;'d'
  8547  181D  3420               	retlw	32	;' '
  8548  181E  3443               	retlw	67	;'C'
  8549  181F  3400               	retlw	0
  8550                           
  8551                           	psect	stringtext4
  8552  1820                     __pstringtext4:
  8553  1820                     STR_5:
  8554  1820  344C               	retlw	76	;'L'
  8555  1821  3420               	retlw	32	;' '
  8556  1822  3425               	retlw	37	;'%'
  8557  1823  3464               	retlw	100	;'d'
  8558  1824  3400               	retlw	0
  8559                           
  8560                           	psect	stringtext5
  8561  1825                     __pstringtext5:
  8562  1825                     STR_7:
  8563  1825  3443               	retlw	67	;'C'
  8564  1826  3454               	retlw	84	;'T'
  8565  1827  344C               	retlw	76	;'L'
  8566  1828  3400               	retlw	0
  8567                           
  8568                           	psect	stringtext6
  8569  0000                     __pstringtext6:
  8570  1819                     
  8571                           	psect	cinit
  8572  004E                     start_initialization:	
  8573                           ; #config settings
  8574                           
  8575  004E                     __initialization:
  8576                           
  8577                           ; Initialize objects allocated to BANK0
  8578  004E  3019               	movlw	low __pidataBANK0
  8579  004F  0084               	movwf	4
  8580  0050  3097               	movlw	(high __pidataBANK0)| (0+128)
  8581  0051  0085               	movwf	5
  8582  0052  3067               	movlw	low __pdataBANK0
  8583  0053  0086               	movwf	6
  8584  0054  3000               	movlw	high __pdataBANK0
  8585  0055  0087               	movwf	7
  8586  0056  3007               	movlw	7
  8587  0057  3197  270C  3180   	fcall	init_ram
  8588                           
  8589                           ; Clear objects allocated to BANK0
  8590  005A  304D               	movlw	low __pbssBANK0
  8591  005B  0084               	movwf	4
  8592  005C  3000               	movlw	high __pbssBANK0
  8593  005D  0085               	movwf	5
  8594  005E  301A               	movlw	26
  8595  005F  3197  2706  3180   	fcall	clear_ram0
  8596                           
  8597                           ; Clear objects allocated to BANK1
  8598  0062  30BD               	movlw	low __pbssBANK1
  8599  0063  0084               	movwf	4
  8600  0064  3000               	movlw	high __pbssBANK1
  8601  0065  0085               	movwf	5
  8602  0066  300B               	movlw	11
  8603  0067  3197  2706  3180   	fcall	clear_ram0
  8604  006A                     end_of_initialization:	
  8605                           ;End of C runtime variable initialization code
  8606                           
  8607  006A                     __end_of__initialization:
  8608  006A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8609  006B  0020               	movlb	0
  8610  006C  3182  2A99         	ljmp	_main	;jump to C main() function
  8611                           
  8612                           	psect	bssBANK0
  8613  004D                     __pbssBANK0:
  8614  004D                     _clkAlarm:
  8615  004D                     	ds	4
  8616  0051                     _lumAlarm:
  8617  0051                     	ds	3
  8618  0054                     _tempAlarm:
  8619  0054                     	ds	3
  8620  0057                     _t:
  8621  0057                     	ds	3
  8622  005A                     _mode:
  8623  005A                     	ds	2
  8624  005C                     _editingClockAlarm:
  8625  005C                     	ds	2
  8626  005E                     _dimingLed:
  8627  005E                     	ds	2
  8628  0060                     _editingLumAlarm:
  8629  0060                     	ds	1
  8630  0061                     _editingTempAlarm:
  8631  0061                     	ds	1
  8632  0062                     _lumLevel:
  8633  0062                     	ds	1
  8634  0063                     _temp:
  8635  0063                     	ds	1
  8636  0064                     _S1_Value:
  8637  0064                     	ds	1
  8638  0065                     _ALAF:
  8639  0065                     	ds	1
  8640  0066                     _TALA:
  8641  0066                     	ds	1
  8642                           
  8643                           	psect	dataBANK0
  8644  0067                     __pdataBANK0:
  8645  0067                     _alarmPWMStart:
  8646  0067                     	ds	3
  8647  006A                     _prevLumLevel:
  8648  006A                     	ds	2
  8649  006C                     _prevTemp:
  8650  006C                     	ds	2
  8651                           
  8652                           	psect	bssBANK1
  8653  00BD                     __pbssBANK1:
  8654  00BD                     menuLCD_ISR@F12829:
  8655  00BD                     	ds	3
  8656  00C0                     _i2c1_driver_i2cISR:
  8657  00C0                     	ds	2
  8658  00C2                     _i2c1_driver_busCollisionISR:
  8659  00C2                     	ds	2
  8660  00C4                     _PWM_on:
  8661  00C4                     	ds	1
  8662  00C5                     _idx_RingBuffer:
  8663  00C5                     	ds	1
  8664  00C6                     _PMON:
  8665  00C6                     	ds	1
  8666  00C7                     _NREG:
  8667  00C7                     	ds	1
  8668                           
  8669                           	psect	inittext
  8670  170C                     init_ram:
  8671  170C  00FE               	movwf	btemp
  8672  170D                     initloop:
  8673  170D  0012               	moviw fsr0++
  8674  170E  001E               	movwi fsr1++
  8675  170F  0BFE               	decfsz	btemp,f
  8676  1710  2F0D               	goto	initloop
  8677  1711  3400               	retlw	0
  8678                           
  8679                           	psect	clrtext
  8680  1706                     clear_ram0:	
  8681                           ;	Called with FSR0 containing the base address, and
  8682                           ;	WREG with the size to clear
  8683                           
  8684  1706  0064               	clrwdt	;clear the watchdog before getting into this loop
  8685  1707                     clrloop0:
  8686  1707  0180               	clrf	0	;clear RAM location pointed to by FSR
  8687  1708  3101               	addfsr 0,1
  8688  1709  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8689  170A  2F07               	goto	clrloop0	;have we reached the end yet?
  8690  170B  3400               	retlw	0	;all done for this memory range, return
  8691                           
  8692                           	psect	cstackBANK1
  8693  00A0                     __pcstackBANK1:
  8694  00A0                     ??_PMD_Initialize:
  8695  00A0                     ??_OSCILLATOR_Initialize:	
  8696                           ; 1 bytes @ 0x0
  8697                           
  8698  00A0                     ??_PWM6_Initialize:	
  8699                           ; 1 bytes @ 0x0
  8700                           
  8701  00A0                     ??_ADCC_Initialize:	
  8702                           ; 1 bytes @ 0x0
  8703                           
  8704  00A0                     ??_TMR2_Initialize:	
  8705                           ; 1 bytes @ 0x0
  8706                           
  8707  00A0                     ?_TMR1_SetInterruptHandler:	
  8708                           ; 1 bytes @ 0x0
  8709                           
  8710  00A0                     ?_TMR3_SetInterruptHandler:	
  8711                           ; 1 bytes @ 0x0
  8712                           
  8713  00A0                     ?_TMR5_SetInterruptHandler:	
  8714                           ; 1 bytes @ 0x0
  8715                           
  8716  00A0                     ??_WriteI2C:	
  8717                           ; 1 bytes @ 0x0
  8718                           
  8719  00A0                     ??_PIN_MANAGER_Initialize:	
  8720                           ; 1 bytes @ 0x0
  8721                           
  8722  00A0                     ??_i2c1_driver_open:	
  8723                           ; 1 bytes @ 0x0
  8724                           
  8725  00A0                     ?_PWM6_LoadDutyValue:	
  8726                           ; 1 bytes @ 0x0
  8727                           
  8728  00A0                     ??_TMR2_Stop:	
  8729                           ; 1 bytes @ 0x0
  8730                           
  8731  00A0                     ??_TMR2_StopTimer:	
  8732                           ; 1 bytes @ 0x0
  8733                           
  8734  00A0                     ?_DATAEE_WriteByte:	
  8735                           ; 1 bytes @ 0x0
  8736                           
  8737  00A0                     ?_DATAEE_ReadByte:	
  8738                           ; 1 bytes @ 0x0
  8739                           
  8740  00A0                     ?_INT_SetInterruptHandler:	
  8741                           ; 1 bytes @ 0x0
  8742                           
  8743  00A0                     ??_PWM_Output_D4_Disable:	
  8744                           ; 1 bytes @ 0x0
  8745                           
  8746  00A0                     ??_editClock:	
  8747                           ; 1 bytes @ 0x0
  8748                           
  8749  00A0                     ??_editTemp:	
  8750                           ; 1 bytes @ 0x0
  8751                           
  8752  00A0                     ??_editLum:	
  8753                           ; 1 bytes @ 0x0
  8754                           
  8755  00A0                     ??_toggleAlarms:	
  8756                           ; 1 bytes @ 0x0
  8757                           
  8758  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  8759                           ; 1 bytes @ 0x0
  8760                           
  8761  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  8762                           ; 2 bytes @ 0x0
  8763                           
  8764  00A0                     TMR5_SetInterruptHandler@InterruptHandler:	
  8765                           ; 2 bytes @ 0x0
  8766                           
  8767  00A0                     PWM6_LoadDutyValue@dutyValue:	
  8768                           ; 2 bytes @ 0x0
  8769                           
  8770  00A0                     DATAEE_WriteByte@bAdd:	
  8771                           ; 2 bytes @ 0x0
  8772                           
  8773  00A0                     DATAEE_ReadByte@bAdd:	
  8774                           ; 2 bytes @ 0x0
  8775                           
  8776  00A0                     INT_SetInterruptHandler@InterruptHandler:	
  8777                           ; 2 bytes @ 0x0
  8778                           
  8779                           
  8780                           ; 2 bytes @ 0x0
  8781  00A0                     	ds	1
  8782  00A1                     WriteI2C@data_out:
  8783                           
  8784                           ; 1 bytes @ 0x1
  8785  00A1                     	ds	1
  8786  00A2                     ??_TMR3_Initialize:
  8787  00A2                     ??_TMR5_Initialize:	
  8788                           ; 1 bytes @ 0x2
  8789                           
  8790  00A2                     ??_EXT_INT_Initialize:	
  8791                           ; 1 bytes @ 0x2
  8792                           
  8793  00A2                     ??_TMR1_Initialize:	
  8794                           ; 1 bytes @ 0x2
  8795                           
  8796  00A2                     ??_TMR1_SetInterruptHandler:	
  8797                           ; 1 bytes @ 0x2
  8798                           
  8799  00A2                     ??_TMR3_SetInterruptHandler:	
  8800                           ; 1 bytes @ 0x2
  8801                           
  8802  00A2                     ??_TMR5_SetInterruptHandler:	
  8803                           ; 1 bytes @ 0x2
  8804                           
  8805  00A2                     ??_SYSTEM_Initialize:	
  8806                           ; 1 bytes @ 0x2
  8807                           
  8808  00A2                     ??_PWM6_LoadDutyValue:	
  8809                           ; 1 bytes @ 0x2
  8810                           
  8811  00A2                     ??_DATAEE_ReadByte:	
  8812                           ; 1 bytes @ 0x2
  8813                           
  8814  00A2                     ??_INT_SetInterruptHandler:	
  8815                           ; 1 bytes @ 0x2
  8816                           
  8817  00A2                     ??_LCDsend:	
  8818                           ; 1 bytes @ 0x2
  8819                           
  8820  00A2                     ?_LCDsend2x4:	
  8821                           ; 1 bytes @ 0x2
  8822                           
  8823  00A2                     DATAEE_WriteByte@bData:	
  8824                           ; 1 bytes @ 0x2
  8825                           
  8826  00A2                     LCDsend2x4@mode:	
  8827                           ; 1 bytes @ 0x2
  8828                           
  8829                           
  8830                           ; 1 bytes @ 0x2
  8831  00A2                     	ds	1
  8832  00A3                     ??_DATAEE_WriteByte:
  8833  00A3                     ??_LCDsend2x4:	
  8834                           ; 1 bytes @ 0x3
  8835                           
  8836  00A3                     DATAEE_WriteByte@GIEBitValue:	
  8837                           ; 1 bytes @ 0x3
  8838                           
  8839  00A3                     LCDsend@c:	
  8840                           ; 1 bytes @ 0x3
  8841                           
  8842                           
  8843                           ; 1 bytes @ 0x3
  8844  00A3                     	ds	2
  8845  00A5                     LCDsend2x4@c:
  8846                           
  8847                           ; 1 bytes @ 0x5
  8848  00A5                     	ds	1
  8849  00A6                     LCDsend2x4@hc:
  8850                           
  8851                           ; 1 bytes @ 0x6
  8852  00A6                     	ds	1
  8853  00A7                     LCDsend2x4@lc:
  8854                           
  8855                           ; 1 bytes @ 0x7
  8856  00A7                     	ds	1
  8857  00A8                     ??_LCDinit:
  8858                           
  8859                           ; 1 bytes @ 0x8
  8860  00A8                     	ds	1
  8861  00A9                     ??_main:
  8862                           
  8863                           ; 1 bytes @ 0x9
  8864  00A9                     	ds	3
  8865  00AC                     main@checkSumAux:
  8866                           
  8867                           ; 1 bytes @ 0xC
  8868  00AC                     	ds	1
  8869  00AD                     main@notInit:
  8870                           
  8871                           ; 1 bytes @ 0xD
  8872  00AD                     	ds	1
  8873  00AE                     main@corrupted:
  8874                           
  8875                           ; 1 bytes @ 0xE
  8876  00AE                     	ds	1
  8877  00AF                     main@i:
  8878                           
  8879                           ; 2 bytes @ 0xF
  8880  00AF                     	ds	2
  8881                           
  8882                           	psect	cstackCOMMON
  8883  0070                     __pcstackCOMMON:
  8884  0070                     ?_isdigit:
  8885  0070                     ?_i2c1_driver_open:	
  8886                           ; 1 bit 
  8887                           
  8888  0070                     ?_PMD_Initialize:	
  8889                           ; 1 bit 
  8890                           
  8891  0070                     ?_OSCILLATOR_Initialize:	
  8892                           ; 1 bytes @ 0x0
  8893                           
  8894  0070                     ?_PWM6_Initialize:	
  8895                           ; 1 bytes @ 0x0
  8896                           
  8897  0070                     ?_ADCC_Initialize:	
  8898                           ; 1 bytes @ 0x0
  8899                           
  8900  0070                     ?_TMR3_Initialize:	
  8901                           ; 1 bytes @ 0x0
  8902                           
  8903  0070                     ?_TMR2_Initialize:	
  8904                           ; 1 bytes @ 0x0
  8905                           
  8906  0070                     ?_TMR5_Initialize:	
  8907                           ; 1 bytes @ 0x0
  8908                           
  8909  0070                     ?_EXT_INT_Initialize:	
  8910                           ; 1 bytes @ 0x0
  8911                           
  8912  0070                     ?_TMR1_Initialize:	
  8913                           ; 1 bytes @ 0x0
  8914                           
  8915  0070                     ?_INT_ISR:	
  8916                           ; 1 bytes @ 0x0
  8917                           
  8918  0070                     ?_TMR5_ISR:	
  8919                           ; 1 bytes @ 0x0
  8920                           
  8921  0070                     ?_TMR3_ISR:	
  8922                           ; 1 bytes @ 0x0
  8923                           
  8924  0070                     ?_TMR1_ISR:	
  8925                           ; 1 bytes @ 0x0
  8926                           
  8927  0070                     ?_TMR1_DefaultInterruptHandler:	
  8928                           ; 1 bytes @ 0x0
  8929                           
  8930  0070                     ??_TMR1_DefaultInterruptHandler:	
  8931                           ; 1 bytes @ 0x0
  8932                           
  8933  0070                     ?_TMR3_DefaultInterruptHandler:	
  8934                           ; 1 bytes @ 0x0
  8935                           
  8936  0070                     ??_TMR3_DefaultInterruptHandler:	
  8937                           ; 1 bytes @ 0x0
  8938                           
  8939  0070                     ?_TMR5_DefaultInterruptHandler:	
  8940                           ; 1 bytes @ 0x0
  8941                           
  8942  0070                     ??_TMR5_DefaultInterruptHandler:	
  8943                           ; 1 bytes @ 0x0
  8944                           
  8945  0070                     ?_INT_CallBack:	
  8946                           ; 1 bytes @ 0x0
  8947                           
  8948  0070                     ??_isdigit:	
  8949                           ; 1 bytes @ 0x0
  8950                           
  8951  0070                     ?_ReadI2C:	
  8952                           ; 1 bytes @ 0x0
  8953                           
  8954  0070                     ??_ReadI2C:	
  8955                           ; 1 bytes @ 0x0
  8956                           
  8957  0070                     ?_WriteI2C:	
  8958                           ; 1 bytes @ 0x0
  8959                           
  8960  0070                     ?_PIN_MANAGER_Initialize:	
  8961                           ; 1 bytes @ 0x0
  8962                           
  8963  0070                     ?_SYSTEM_Initialize:	
  8964                           ; 1 bytes @ 0x0
  8965                           
  8966  0070                     ?_INTERRUPT_InterruptManager:	
  8967                           ; 1 bytes @ 0x0
  8968                           
  8969  0070                     ?_TMR1_WriteTimer:	
  8970                           ; 1 bytes @ 0x0
  8971                           
  8972  0070                     ?_TMR3_WriteTimer:	
  8973                           ; 1 bytes @ 0x0
  8974                           
  8975  0070                     ?_TMR5_WriteTimer:	
  8976                           ; 1 bytes @ 0x0
  8977                           
  8978  0070                     ?_TMR2_Start:	
  8979                           ; 1 bytes @ 0x0
  8980                           
  8981  0070                     ??_TMR2_Start:	
  8982                           ; 1 bytes @ 0x0
  8983                           
  8984  0070                     ?_TMR2_StartTimer:	
  8985                           ; 1 bytes @ 0x0
  8986                           
  8987  0070                     ??_TMR2_StartTimer:	
  8988                           ; 1 bytes @ 0x0
  8989                           
  8990  0070                     ?_TMR2_Stop:	
  8991                           ; 1 bytes @ 0x0
  8992                           
  8993  0070                     ?_TMR2_StopTimer:	
  8994                           ; 1 bytes @ 0x0
  8995                           
  8996  0070                     ?_INT_DefaultInterruptHandler:	
  8997                           ; 1 bytes @ 0x0
  8998                           
  8999  0070                     ??_INT_DefaultInterruptHandler:	
  9000                           ; 1 bytes @ 0x0
  9001                           
  9002  0070                     ?_tsttc:	
  9003                           ; 1 bytes @ 0x0
  9004                           
  9005  0070                     ?_LCDsend:	
  9006                           ; 1 bytes @ 0x0
  9007                           
  9008  0070                     ?_LCDinit:	
  9009                           ; 1 bytes @ 0x0
  9010                           
  9011  0070                     ?_LCDcmd:	
  9012                           ; 1 bytes @ 0x0
  9013                           
  9014  0070                     ?_LCDchar:	
  9015                           ; 1 bytes @ 0x0
  9016                           
  9017  0070                     ?_differenceBetweenTimePeriod:	
  9018                           ; 1 bytes @ 0x0
  9019                           
  9020  0070                     ?_PWM_Output_D4_Enable:	
  9021                           ; 1 bytes @ 0x0
  9022                           
  9023  0070                     ??_PWM_Output_D4_Enable:	
  9024                           ; 1 bytes @ 0x0
  9025                           
  9026  0070                     ?_PWM_Output_D4_Disable:	
  9027                           ; 1 bytes @ 0x0
  9028                           
  9029  0070                     ?_Clock_ISR:	
  9030                           ; 1 bytes @ 0x0
  9031                           
  9032  0070                     ?_menuLCD_ISR:	
  9033                           ; 1 bytes @ 0x0
  9034                           
  9035  0070                     ?_monitoring_ISR:	
  9036                           ; 1 bytes @ 0x0
  9037                           
  9038  0070                     ?_editClock:	
  9039                           ; 1 bytes @ 0x0
  9040                           
  9041  0070                     ?_editTemp:	
  9042                           ; 1 bytes @ 0x0
  9043                           
  9044  0070                     ?_editLum:	
  9045                           ; 1 bytes @ 0x0
  9046                           
  9047  0070                     ?_toggleAlarms:	
  9048                           ; 1 bytes @ 0x0
  9049                           
  9050  0070                     ?_S1_ISR:	
  9051                           ; 1 bytes @ 0x0
  9052                           
  9053  0070                     ??_S1_ISR:	
  9054                           ; 1 bytes @ 0x0
  9055                           
  9056  0070                     ?_main:	
  9057                           ; 1 bytes @ 0x0
  9058                           
  9059  0070                     ?i1_WriteI2C:	
  9060                           ; 1 bytes @ 0x0
  9061                           
  9062  0070                     ??i1_WriteI2C:	
  9063                           ; 1 bytes @ 0x0
  9064                           
  9065  0070                     ?i1_PWM6_LoadDutyValue:	
  9066                           ; 1 bytes @ 0x0
  9067                           
  9068  0070                     ?i1_TMR2_Stop:	
  9069                           ; 1 bytes @ 0x0
  9070                           
  9071  0070                     ??i1_TMR2_Stop:	
  9072                           ; 1 bytes @ 0x0
  9073                           
  9074  0070                     ?i1_TMR2_StopTimer:	
  9075                           ; 1 bytes @ 0x0
  9076                           
  9077  0070                     ??i1_TMR2_StopTimer:	
  9078                           ; 1 bytes @ 0x0
  9079                           
  9080  0070                     ?i1_PWM_Output_D4_Disable:	
  9081                           ; 1 bytes @ 0x0
  9082                           
  9083  0070                     ??i1_PWM_Output_D4_Disable:	
  9084                           ; 1 bytes @ 0x0
  9085                           
  9086  0070                     ?_ADCC_GetSingleConversion:	
  9087                           ; 1 bytes @ 0x0
  9088                           
  9089  0070                     ?___wmul:	
  9090                           ; 2 bytes @ 0x0
  9091                           
  9092  0070                     ?___lwdiv:	
  9093                           ; 2 bytes @ 0x0
  9094                           
  9095  0070                     _isdigit$2972:	
  9096                           ; 2 bytes @ 0x0
  9097                           
  9098  0070                     TMR1_WriteTimer@timerVal:	
  9099                           ; 1 bytes @ 0x0
  9100                           
  9101  0070                     TMR3_WriteTimer@timerVal:	
  9102                           ; 2 bytes @ 0x0
  9103                           
  9104  0070                     TMR5_WriteTimer@timerVal:	
  9105                           ; 2 bytes @ 0x0
  9106                           
  9107  0070                     ___wmul@multiplier:	
  9108                           ; 2 bytes @ 0x0
  9109                           
  9110  0070                     ___lwdiv@divisor:	
  9111                           ; 2 bytes @ 0x0
  9112                           
  9113  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9114                           ; 2 bytes @ 0x0
  9115                           
  9116  0070                     differenceBetweenTimePeriod@start:	
  9117                           ; 2 bytes @ 0x0
  9118                           
  9119                           
  9120                           ; 3 bytes @ 0x0
  9121  0070                     	ds	1
  9122  0071                     ??_INT_ISR:
  9123  0071                     ??_INT_CallBack:	
  9124                           ; 1 bytes @ 0x1
  9125                           
  9126  0071                     isdigit@c:	
  9127                           ; 1 bytes @ 0x1
  9128                           
  9129  0071                     i1WriteI2C@data_out:	
  9130                           ; 1 bytes @ 0x1
  9131                           
  9132                           
  9133                           ; 1 bytes @ 0x1
  9134  0071                     	ds	1
  9135  0072                     ??_TMR1_WriteTimer:
  9136  0072                     ??_TMR3_WriteTimer:	
  9137                           ; 1 bytes @ 0x2
  9138                           
  9139  0072                     ??_TMR5_WriteTimer:	
  9140                           ; 1 bytes @ 0x2
  9141                           
  9142  0072                     ??_tsttc:	
  9143                           ; 1 bytes @ 0x2
  9144                           
  9145  0072                     ??i1_PWM6_LoadDutyValue:	
  9146                           ; 1 bytes @ 0x2
  9147                           
  9148  0072                     ?i1_LCDsend2x4:	
  9149                           ; 1 bytes @ 0x2
  9150                           
  9151  0072                     i1LCDsend2x4@mode:	
  9152                           ; 1 bytes @ 0x2
  9153                           
  9154  0072                     ___wmul@multiplicand:	
  9155                           ; 1 bytes @ 0x2
  9156                           
  9157  0072                     ___lwdiv@dividend:	
  9158                           ; 2 bytes @ 0x2
  9159                           
  9160                           
  9161                           ; 2 bytes @ 0x2
  9162  0072                     	ds	1
  9163  0073                     ??_ADCC_GetSingleConversion:
  9164  0073                     ??i1_LCDsend2x4:	
  9165                           ; 1 bytes @ 0x3
  9166                           
  9167  0073                     ADCC_GetSingleConversion@channel:	
  9168                           ; 1 bytes @ 0x3
  9169                           
  9170  0073                     tsttc@value:	
  9171                           ; 1 bytes @ 0x3
  9172                           
  9173  0073                     differenceBetweenTimePeriod@stop:	
  9174                           ; 1 bytes @ 0x3
  9175                           
  9176                           
  9177                           ; 3 bytes @ 0x3
  9178  0073                     	ds	1
  9179  0074                     ??___wmul:
  9180  0074                     ??___lwdiv:	
  9181                           ; 1 bytes @ 0x4
  9182                           
  9183  0074                     ___wmul@product:	
  9184                           ; 1 bytes @ 0x4
  9185                           
  9186                           
  9187                           ; 2 bytes @ 0x4
  9188  0074                     	ds	1
  9189  0075                     i1LCDsend2x4@c:
  9190  0075                     ___lwdiv@quotient:	
  9191                           ; 1 bytes @ 0x5
  9192                           
  9193                           
  9194                           ; 2 bytes @ 0x5
  9195  0075                     	ds	1
  9196  0076                     ?i1_DATAEE_WriteByte:
  9197  0076                     differenceBetweenTimePeriod@diff:	
  9198                           ; 1 bytes @ 0x6
  9199                           
  9200  0076                     i1LCDsend2x4@hc:	
  9201                           ; 1 bytes @ 0x6
  9202                           
  9203  0076                     i1DATAEE_WriteByte@bAdd:	
  9204                           ; 1 bytes @ 0x6
  9205                           
  9206                           
  9207                           ; 2 bytes @ 0x6
  9208  0076                     	ds	1
  9209  0077                     ??_differenceBetweenTimePeriod:
  9210  0077                     ___lwdiv@counter:	
  9211                           ; 1 bytes @ 0x7
  9212                           
  9213  0077                     i1LCDsend2x4@lc:	
  9214                           ; 1 bytes @ 0x7
  9215                           
  9216                           
  9217                           ; 1 bytes @ 0x7
  9218  0077                     	ds	1
  9219  0078                     ??_LCDcmd:
  9220  0078                     ??_LCDchar:	
  9221                           ; 1 bytes @ 0x8
  9222                           
  9223  0078                     ?___lwmod:	
  9224                           ; 1 bytes @ 0x8
  9225                           
  9226  0078                     LCDcmd@c:	
  9227                           ; 2 bytes @ 0x8
  9228                           
  9229  0078                     LCDchar@c:	
  9230                           ; 1 bytes @ 0x8
  9231                           
  9232  0078                     i1DATAEE_WriteByte@bData:	
  9233                           ; 1 bytes @ 0x8
  9234                           
  9235  0078                     ___lwmod@divisor:	
  9236                           ; 1 bytes @ 0x8
  9237                           
  9238                           
  9239                           ; 2 bytes @ 0x8
  9240  0078                     	ds	1
  9241  0079                     ?_LCDstr:
  9242  0079                     ??i1_DATAEE_WriteByte:	
  9243                           ; 1 bytes @ 0x9
  9244                           
  9245  0079                     i1DATAEE_WriteByte@GIEBitValue:	
  9246                           ; 1 bytes @ 0x9
  9247                           
  9248  0079                     LCDstr@p:	
  9249                           ; 1 bytes @ 0x9
  9250                           
  9251                           
  9252                           ; 2 bytes @ 0x9
  9253  0079                     	ds	1
  9254  007A                     ??_Clock_ISR:
  9255  007A                     ??_monitoring_ISR:	
  9256                           ; 1 bytes @ 0xA
  9257                           
  9258  007A                     ___lwmod@dividend:	
  9259                           ; 1 bytes @ 0xA
  9260                           
  9261                           
  9262                           ; 2 bytes @ 0xA
  9263  007A                     	ds	1
  9264  007B                     ??_TMR1_ISR:
  9265  007B                     ??_LCDstr:	
  9266                           ; 1 bytes @ 0xB
  9267                           
  9268                           
  9269                           ; 1 bytes @ 0xB
  9270  007B                     	ds	1
  9271  007C                     ??___lwmod:
  9272                           
  9273                           ; 1 bytes @ 0xC
  9274  007C                     	ds	1
  9275  007D                     ??_TMR5_ISR:
  9276  007D                     ___lwmod@counter:	
  9277                           ; 1 bytes @ 0xD
  9278                           
  9279                           
  9280                           ; 1 bytes @ 0xD
  9281  007D                     	ds	1
  9282  007E                     ??_TMR3_ISR:
  9283  007E                     ??_INTERRUPT_InterruptManager:	
  9284                           ; 1 bytes @ 0xE
  9285                           
  9286                           
  9287                           	psect	cstackBANK0
  9288  0020                     __pcstackBANK0:	
  9289                           ; 1 bytes @ 0xE
  9290                           
  9291  0020                     ?_sprintf:
  9292  0020                     LCDstr@c:	
  9293                           ; 2 bytes @ 0x0
  9294                           
  9295  0020                     sprintf@f:	
  9296                           ; 1 bytes @ 0x0
  9297                           
  9298                           
  9299                           ; 2 bytes @ 0x0
  9300  0020                     	ds	8
  9301  0028                     ??_sprintf:
  9302                           
  9303                           ; 1 bytes @ 0x8
  9304  0028                     	ds	4
  9305  002C                     sprintf@ap:
  9306                           
  9307                           ; 1 bytes @ 0xC
  9308  002C                     	ds	1
  9309  002D                     sprintf@prec:
  9310                           
  9311                           ; 1 bytes @ 0xD
  9312  002D                     	ds	1
  9313  002E                     sprintf@val:
  9314                           
  9315                           ; 2 bytes @ 0xE
  9316  002E                     	ds	2
  9317  0030                     sprintf@flag:
  9318                           
  9319                           ; 1 bytes @ 0x10
  9320  0030                     	ds	1
  9321  0031                     sprintf@width:
  9322                           
  9323                           ; 2 bytes @ 0x11
  9324  0031                     	ds	2
  9325  0033                     sprintf@c:
  9326                           
  9327                           ; 1 bytes @ 0x13
  9328  0033                     	ds	1
  9329  0034                     sprintf@sp:
  9330                           
  9331                           ; 1 bytes @ 0x14
  9332  0034                     	ds	1
  9333  0035                     ??_menuLCD_ISR:
  9334                           
  9335                           ; 1 bytes @ 0x15
  9336  0035                     	ds	6
  9337  003B                     menuLCD_ISR@str:
  9338                           
  9339                           ; 8 bytes @ 0x1B
  9340  003B                     	ds	8
  9341  0043                     menuLCD_ISR@tt:
  9342                           
  9343                           ; 4 bytes @ 0x23
  9344  0043                     	ds	4
  9345  0047                     menuLCD_ISR@l:
  9346                           
  9347                           ; 3 bytes @ 0x27
  9348  0047                     	ds	3
  9349  004A                     menuLCD_ISR@diff:
  9350                           
  9351                           ; 3 bytes @ 0x2A
  9352  004A                     	ds	3
  9353                           
  9354                           	psect	maintext
  9355  0299                     __pmaintext:	
  9356 ;;
  9357 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  9358 ;;
  9359 ;; *************** function _main *****************
  9360 ;; Defined at:
  9361 ;;		line 654 in file "main.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;		None
  9364 ;; Auto vars:     Size  Location     Type
  9365 ;;  i               2   15[BANK1 ] int 
  9366 ;;  corrupted       1   14[BANK1 ] unsigned char 
  9367 ;;  notInit         1   13[BANK1 ] unsigned char 
  9368 ;;  checkSumAux     1   12[BANK1 ] unsigned char 
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      void 
  9371 ;; Registers used:
  9372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9373 ;; Tracked objects:
  9374 ;;		On entry : B1F/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9379 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9381 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9382 ;;Total ram usage:        8 bytes
  9383 ;; Hardware stack levels required when called:   10
  9384 ;; This function calls:
  9385 ;;		_DATAEE_ReadByte
  9386 ;;		_DATAEE_WriteByte
  9387 ;;		_INT_SetInterruptHandler
  9388 ;;		_LCDinit
  9389 ;;		_PWM6_LoadDutyValue
  9390 ;;		_PWM_Output_D4_Disable
  9391 ;;		_SYSTEM_Initialize
  9392 ;;		_TMR1_SetInterruptHandler
  9393 ;;		_TMR2_StopTimer
  9394 ;;		_TMR3_SetInterruptHandler
  9395 ;;		_TMR5_SetInterruptHandler
  9396 ;;		_editClock
  9397 ;;		_editLum
  9398 ;;		_editTemp
  9399 ;;		_i2c1_driver_open
  9400 ;;		_toggleAlarms
  9401 ;; This function is called by:
  9402 ;;		Startup code after reset
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           
  9407                           ;psect for function _main
  9408  0299                     _main:
  9409  0299                     l5186:	
  9410                           ;incstack = 0
  9411                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9412                           
  9413                           
  9414                           ;main.c: 657: SYSTEM_Initialize();
  9415  0299  3189  213B  3182   	fcall	_SYSTEM_Initialize
  9416                           
  9417                           ;main.c: 659: PWM6_LoadDutyValue(0);
  9418  029C  3000               	movlw	0
  9419  029D  0021               	movlb	1	; select bank1
  9420  029E  00A0               	movwf	PWM6_LoadDutyValue@dutyValue^(0+128)
  9421  029F  00A1               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128)
  9422  02A0  3188  2053  3182   	fcall	_PWM6_LoadDutyValue
  9423  02A3                     l5188:
  9424                           
  9425                           ;main.c: 660: TMR2_StopTimer();
  9426  02A3  3187  27FB  3182   	fcall	_TMR2_StopTimer
  9427  02A6                     l5190:
  9428                           
  9429                           ;main.c: 661: PWM_Output_D4_Disable();
  9430  02A6  3196  26DA  3182   	fcall	_PWM_Output_D4_Disable
  9431                           
  9432                           ;main.c: 663: TMR1_SetInterruptHandler(Clock_ISR);
  9433  02A9  30F2               	movlw	low _Clock_ISR
  9434  02AA  0021               	movlb	1	; select bank1
  9435  02AB  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  9436  02AC  300D               	movlw	high _Clock_ISR
  9437  02AD  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9438  02AE  3196  26F4  3182   	fcall	_TMR1_SetInterruptHandler
  9439                           
  9440                           ;main.c: 665: TMR3_SetInterruptHandler(menuLCD_ISR);
  9441  02B1  306E               	movlw	low _menuLCD_ISR
  9442  02B2  0021               	movlb	1	; select bank1
  9443  02B3  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9444  02B4  3000               	movlw	high _menuLCD_ISR
  9445  02B5  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9446  02B6  3196  26FA  3182   	fcall	_TMR3_SetInterruptHandler
  9447                           
  9448                           ;main.c: 667: TMR5_SetInterruptHandler(monitoring_ISR);
  9449  02B9  3033               	movlw	low _monitoring_ISR
  9450  02BA  0021               	movlb	1	; select bank1
  9451  02BB  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  9452  02BC  3006               	movlw	high _monitoring_ISR
  9453  02BD  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9454  02BE  3197  2700  3182   	fcall	_TMR5_SetInterruptHandler
  9455                           
  9456                           ;main.c: 669: INT_SetInterruptHandler(S1_ISR);
  9457  02C1  30AB               	movlw	low _S1_ISR
  9458  02C2  0021               	movlb	1	; select bank1
  9459  02C3  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
  9460  02C4  300B               	movlw	high _S1_ISR
  9461  02C5  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9462  02C6  3196  26EE  3182   	fcall	_INT_SetInterruptHandler
  9463  02C9                     l5192:
  9464                           
  9465                           ;main.c: 671: uint8_t checkSumAux = 0;
  9466  02C9  0021               	movlb	1	; select bank1
  9467  02CA  01AC               	clrf	main@checkSumAux^(0+128)
  9468  02CB                     l5194:
  9469                           
  9470                           ;main.c: 672: bool notInit = 1;
  9471  02CB  01AD               	clrf	main@notInit^(0+128)
  9472  02CC  0AAD               	incf	main@notInit^(0+128),f
  9473  02CD                     l5196:
  9474                           
  9475                           ;main.c: 673: bool corrupted = 0;
  9476  02CD  01AE               	clrf	main@corrupted^(0+128)
  9477  02CE                     l5198:
  9478                           
  9479                           ;main.c: 674: if(DATAEE_ReadByte(0x7000) == 'S'){
  9480  02CE  3000               	movlw	0
  9481  02CF  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9482  02D0  3070               	movlw	112
  9483  02D1  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9484  02D2  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9485  02D5  3A53               	xorlw	83
  9486  02D6  1D03               	skipz
  9487  02D7  2AD9               	goto	u5091
  9488  02D8  2ADA               	goto	u5090
  9489  02D9                     u5091:
  9490  02D9  2B19               	goto	l5218
  9491  02DA                     u5090:
  9492  02DA                     l5200:
  9493                           
  9494                           ;main.c: 675: notInit = 0;
  9495  02DA  0021               	movlb	1	; select bank1
  9496  02DB  01AD               	clrf	main@notInit^(0+128)
  9497  02DC                     l5202:
  9498                           
  9499                           ;main.c: 676: for(int i = 1; i < 13; i++){
  9500  02DC  3001               	movlw	1
  9501  02DD  00AF               	movwf	main@i^(0+128)
  9502  02DE  3000               	movlw	0
  9503  02DF  00B0               	movwf	(main@i^(0+128)+1)
  9504  02E0                     l5208:
  9505                           
  9506                           ;main.c: 677: checkSumAux += DATAEE_ReadByte(0x7000 + (i*8));
  9507  02E0  0021               	movlb	1	; select bank1
  9508  02E1  0830               	movf	(main@i+1)^(0+128),w
  9509  02E2  00AA               	movwf	(??_main^(0+128)+1)
  9510  02E3  082F               	movf	main@i^(0+128),w
  9511  02E4  00A9               	movwf	??_main^(0+128)
  9512  02E5  35A9               	lslf	??_main^(0+128),f
  9513  02E6  0DAA               	rlf	(??_main^(0+128)+1),f
  9514  02E7  35A9               	lslf	??_main^(0+128),f
  9515  02E8  0DAA               	rlf	(??_main^(0+128)+1),f
  9516  02E9  35A9               	lslf	??_main^(0+128),f
  9517  02EA  0DAA               	rlf	(??_main^(0+128)+1),f
  9518  02EB  0829               	movf	??_main^(0+128),w
  9519  02EC  3E00               	addlw	0
  9520  02ED  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9521  02EE  3070               	movlw	112
  9522  02EF  3D2A               	addwfc	(??_main+1)^(0+128),w
  9523  02F0  00A1               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+128)
  9524  02F1  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9525  02F4  0021               	movlb	1	; select bank1
  9526  02F5  00AB               	movwf	(??_main+2)^(0+128)
  9527  02F6  082B               	movf	(??_main+2)^(0+128),w
  9528  02F7  07AC               	addwf	main@checkSumAux^(0+128),f
  9529  02F8                     l5210:
  9530  02F8  3001               	movlw	1
  9531  02F9  07AF               	addwf	main@i^(0+128),f
  9532  02FA  3000               	movlw	0
  9533  02FB  3DB0               	addwfc	(main@i+1)^(0+128),f
  9534  02FC                     l5212:
  9535  02FC  0830               	movf	(main@i+1)^(0+128),w
  9536  02FD  3A80               	xorlw	128
  9537  02FE  00A9               	movwf	??_main^(0+128)
  9538  02FF  3080               	movlw	128
  9539  0300  0229               	subwf	??_main^(0+128),w
  9540  0301  1D03               	skipz
  9541  0302  2B05               	goto	u5105
  9542  0303  300D               	movlw	13
  9543  0304  022F               	subwf	main@i^(0+128),w
  9544  0305                     u5105:
  9545  0305  1C03               	skipc
  9546  0306  2B08               	goto	u5101
  9547  0307  2B09               	goto	u5100
  9548  0308                     u5101:
  9549  0308  2AE0               	goto	l5208
  9550  0309                     u5100:
  9551  0309                     l5214:
  9552                           
  9553                           ;main.c: 678: };main.c: 679: if(checkSumAux != DATAEE_ReadByte(0x7000 + (13*8))){
  9554  0309  3068               	movlw	104
  9555  030A  0021               	movlb	1	; select bank1
  9556  030B  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9557  030C  3070               	movlw	112
  9558  030D  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9559  030E  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9560  0311  0021               	movlb	1	; select bank1
  9561  0312  062C               	xorwf	main@checkSumAux^(0+128),w
  9562  0313  1903               	skipnz
  9563  0314  2B16               	goto	u5111
  9564  0315  2B17               	goto	u5110
  9565  0316                     u5111:
  9566  0316  2B19               	goto	l5218
  9567  0317                     u5110:
  9568  0317                     l5216:
  9569                           
  9570                           ;main.c: 680: corrupted = 1;
  9571  0317  01AE               	clrf	main@corrupted^(0+128)
  9572  0318  0AAE               	incf	main@corrupted^(0+128),f
  9573  0319                     l5218:
  9574                           
  9575                           ;main.c: 681: };main.c: 682: };main.c: 684: if(notInit || corrupted){
  9576  0319  0021               	movlb	1	; select bank1
  9577  031A  082D               	movf	main@notInit^(0+128),w
  9578  031B  1D03               	btfss	3,2
  9579  031C  2B1E               	goto	u5121
  9580  031D  2B1F               	goto	u5120
  9581  031E                     u5121:
  9582  031E  2B24               	goto	l5222
  9583  031F                     u5120:
  9584  031F                     l5220:
  9585  031F  082E               	movf	main@corrupted^(0+128),w
  9586  0320  1903               	btfsc	3,2
  9587  0321  2B23               	goto	u5131
  9588  0322  2B24               	goto	u5130
  9589  0323                     u5131:
  9590  0323  2BBC               	goto	l5224
  9591  0324                     u5130:
  9592  0324                     l5222:
  9593                           
  9594                           ;main.c: 685: DATAEE_WriteByte( 0x7000 + (0 * 8), 'S');
  9595  0324  3000               	movlw	0
  9596  0325  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9597  0326  3070               	movlw	112
  9598  0327  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9599  0328  3053               	movlw	83
  9600  0329  00A9               	movwf	??_main^(0+128)
  9601  032A  0829               	movf	??_main^(0+128),w
  9602  032B  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9603  032C  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9604                           
  9605                           ;main.c: 686: DATAEE_WriteByte( 0x7000 + (1 * 8), 25);
  9606  032F  3008               	movlw	8
  9607  0330  0021               	movlb	1	; select bank1
  9608  0331  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9609  0332  3070               	movlw	112
  9610  0333  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9611  0334  3019               	movlw	25
  9612  0335  00A9               	movwf	??_main^(0+128)
  9613  0336  0829               	movf	??_main^(0+128),w
  9614  0337  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9615  0338  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9616                           
  9617                           ;main.c: 687: DATAEE_WriteByte( 0x7000 + (2 * 8), 3);
  9618  033B  3010               	movlw	16
  9619  033C  0021               	movlb	1	; select bank1
  9620  033D  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9621  033E  3070               	movlw	112
  9622  033F  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9623  0340  3003               	movlw	3
  9624  0341  00A9               	movwf	??_main^(0+128)
  9625  0342  0829               	movf	??_main^(0+128),w
  9626  0343  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9627  0344  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9628                           
  9629                           ;main.c: 688: DATAEE_WriteByte( 0x7000 + (3 * 8), 5);
  9630  0347  3018               	movlw	24
  9631  0348  0021               	movlb	1	; select bank1
  9632  0349  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9633  034A  3070               	movlw	112
  9634  034B  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9635  034C  3005               	movlw	5
  9636  034D  00A9               	movwf	??_main^(0+128)
  9637  034E  0829               	movf	??_main^(0+128),w
  9638  034F  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9639  0350  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9640                           
  9641                           ;main.c: 689: DATAEE_WriteByte( 0x7000 + (4 * 8), 12);
  9642  0353  3020               	movlw	32
  9643  0354  0021               	movlb	1	; select bank1
  9644  0355  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9645  0356  3070               	movlw	112
  9646  0357  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9647  0358  300C               	movlw	12
  9648  0359  00A9               	movwf	??_main^(0+128)
  9649  035A  0829               	movf	??_main^(0+128),w
  9650  035B  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9651  035C  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9652                           
  9653                           ;main.c: 690: DATAEE_WriteByte( 0x7000 + (5 * 8), 0);
  9654  035F  3028               	movlw	40
  9655  0360  0021               	movlb	1	; select bank1
  9656  0361  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9657  0362  3070               	movlw	112
  9658  0363  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9659  0364  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9660  0365  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9661                           
  9662                           ;main.c: 691: DATAEE_WriteByte( 0x7000 + (6 * 8), 0);
  9663  0368  3030               	movlw	48
  9664  0369  0021               	movlb	1	; select bank1
  9665  036A  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9666  036B  3070               	movlw	112
  9667  036C  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9668  036D  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9669  036E  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9670                           
  9671                           ;main.c: 692: DATAEE_WriteByte( 0x7000 + (7 * 8), 28);
  9672  0371  3038               	movlw	56
  9673  0372  0021               	movlb	1	; select bank1
  9674  0373  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9675  0374  3070               	movlw	112
  9676  0375  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9677  0376  301C               	movlw	28
  9678  0377  00A9               	movwf	??_main^(0+128)
  9679  0378  0829               	movf	??_main^(0+128),w
  9680  0379  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9681  037A  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9682                           
  9683                           ;main.c: 693: DATAEE_WriteByte( 0x7000 + (8 * 8), 4);
  9684  037D  3040               	movlw	64
  9685  037E  0021               	movlb	1	; select bank1
  9686  037F  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9687  0380  3070               	movlw	112
  9688  0381  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9689  0382  3004               	movlw	4
  9690  0383  00A9               	movwf	??_main^(0+128)
  9691  0384  0829               	movf	??_main^(0+128),w
  9692  0385  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9693  0386  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9694                           
  9695                           ;main.c: 694: DATAEE_WriteByte( 0x7000 + (9 * 8), 'a');
  9696  0389  3048               	movlw	72
  9697  038A  0021               	movlb	1	; select bank1
  9698  038B  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9699  038C  3070               	movlw	112
  9700  038D  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9701  038E  3061               	movlw	97
  9702  038F  00A9               	movwf	??_main^(0+128)
  9703  0390  0829               	movf	??_main^(0+128),w
  9704  0391  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9705  0392  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9706                           
  9707                           ;main.c: 695: DATAEE_WriteByte( 0x7000 + (10 * 8), 0);
  9708  0395  3050               	movlw	80
  9709  0396  0021               	movlb	1	; select bank1
  9710  0397  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9711  0398  3070               	movlw	112
  9712  0399  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9713  039A  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9714  039B  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9715                           
  9716                           ;main.c: 696: DATAEE_WriteByte( 0x7000 + (11 * 8), 0);
  9717  039E  3058               	movlw	88
  9718  039F  0021               	movlb	1	; select bank1
  9719  03A0  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9720  03A1  3070               	movlw	112
  9721  03A2  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9722  03A3  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9723  03A4  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9724                           
  9725                           ;main.c: 697: DATAEE_WriteByte( 0x7000 + (12 * 8), 0);
  9726  03A7  3060               	movlw	96
  9727  03A8  0021               	movlb	1	; select bank1
  9728  03A9  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9729  03AA  3070               	movlw	112
  9730  03AB  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9731  03AC  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9732  03AD  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9733                           
  9734                           ;main.c: 698: DATAEE_WriteByte( 0x7000 + (13 * 8), 174);
  9735  03B0  3068               	movlw	104
  9736  03B1  0021               	movlb	1	; select bank1
  9737  03B2  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9738  03B3  3070               	movlw	112
  9739  03B4  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9740  03B5  30AE               	movlw	174
  9741  03B6  00A9               	movwf	??_main^(0+128)
  9742  03B7  0829               	movf	??_main^(0+128),w
  9743  03B8  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9744  03B9  3189  215A  3182   	fcall	_DATAEE_WriteByte
  9745  03BC                     l5224:
  9746                           
  9747                           ;main.c: 699: };main.c: 701: NREG = DATAEE_ReadByte(0x7000 + (1*8));
  9748  03BC  3008               	movlw	8
  9749  03BD  0021               	movlb	1	; select bank1
  9750  03BE  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9751  03BF  3070               	movlw	112
  9752  03C0  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9753  03C1  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9754  03C4  0021               	movlb	1	; select bank1
  9755  03C5  00A9               	movwf	??_main^(0+128)
  9756  03C6  0829               	movf	??_main^(0+128),w
  9757  03C7  00C7               	movwf	_NREG^(0+128)
  9758  03C8                     l5226:
  9759                           
  9760                           ;main.c: 702: PMON = DATAEE_ReadByte(0x7000 + (2*8));
  9761  03C8  3010               	movlw	16
  9762  03C9  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9763  03CA  3070               	movlw	112
  9764  03CB  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9765  03CC  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9766  03CF  0021               	movlb	1	; select bank1
  9767  03D0  00A9               	movwf	??_main^(0+128)
  9768  03D1  0829               	movf	??_main^(0+128),w
  9769  03D2  00C6               	movwf	_PMON^(0+128)
  9770  03D3                     l5228:
  9771                           
  9772                           ;main.c: 703: TALA = DATAEE_ReadByte(0x7000 + (3*8));
  9773  03D3  3018               	movlw	24
  9774  03D4  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9775  03D5  3070               	movlw	112
  9776  03D6  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9777  03D7  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9778  03DA  0021               	movlb	1	; select bank1
  9779  03DB  00A9               	movwf	??_main^(0+128)
  9780  03DC  0829               	movf	??_main^(0+128),w
  9781  03DD  0020               	movlb	0	; select bank0
  9782  03DE  00E6               	movwf	_TALA
  9783  03DF                     l5230:
  9784                           
  9785                           ;main.c: 704: clkAlarm.alarmVal.h = DATAEE_ReadByte(0x7000 + (4*8));
  9786  03DF  3020               	movlw	32
  9787  03E0  0021               	movlb	1	; select bank1
  9788  03E1  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9789  03E2  3070               	movlw	112
  9790  03E3  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9791  03E4  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9792  03E7  0021               	movlb	1	; select bank1
  9793  03E8  00A9               	movwf	??_main^(0+128)
  9794  03E9  0829               	movf	??_main^(0+128),w
  9795  03EA  0020               	movlb	0	; select bank0
  9796  03EB  00CD               	movwf	_clkAlarm
  9797  03EC                     l5232:
  9798                           
  9799                           ;main.c: 705: clkAlarm.alarmVal.m = DATAEE_ReadByte(0x7000 + (5*8));
  9800  03EC  3028               	movlw	40
  9801  03ED  0021               	movlb	1	; select bank1
  9802  03EE  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9803  03EF  3070               	movlw	112
  9804  03F0  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9805  03F1  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9806  03F4  0021               	movlb	1	; select bank1
  9807  03F5  00A9               	movwf	??_main^(0+128)
  9808  03F6  0829               	movf	??_main^(0+128),w
  9809  03F7  0020               	movlb	0	; select bank0
  9810  03F8  00CE               	movwf	_clkAlarm+1
  9811  03F9                     l5234:
  9812                           
  9813                           ;main.c: 706: clkAlarm.alarmVal.s = DATAEE_ReadByte(0x7000 + (6*8));
  9814  03F9  3030               	movlw	48
  9815  03FA  0021               	movlb	1	; select bank1
  9816  03FB  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9817  03FC  3070               	movlw	112
  9818  03FD  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9819  03FE  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9820  0401  0021               	movlb	1	; select bank1
  9821  0402  00A9               	movwf	??_main^(0+128)
  9822  0403  0829               	movf	??_main^(0+128),w
  9823  0404  0020               	movlb	0	; select bank0
  9824  0405  00CF               	movwf	_clkAlarm+2
  9825  0406                     l5236:
  9826                           
  9827                           ;main.c: 707: tempAlarm.alarmTemp = DATAEE_ReadByte(0x7000 + (7*8));
  9828  0406  3038               	movlw	56
  9829  0407  0021               	movlb	1	; select bank1
  9830  0408  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9831  0409  3070               	movlw	112
  9832  040A  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9833  040B  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9834  040E  0021               	movlb	1	; select bank1
  9835  040F  00A9               	movwf	??_main^(0+128)
  9836  0410  0829               	movf	??_main^(0+128),w
  9837  0411  0020               	movlb	0	; select bank0
  9838  0412  00D4               	movwf	_tempAlarm
  9839  0413                     l5238:
  9840                           
  9841                           ;main.c: 708: lumAlarm.alarmLum = DATAEE_ReadByte(0x7000 + (8*8));
  9842  0413  3040               	movlw	64
  9843  0414  0021               	movlb	1	; select bank1
  9844  0415  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9845  0416  3070               	movlw	112
  9846  0417  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9847  0418  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9848  041B  0021               	movlb	1	; select bank1
  9849  041C  00A9               	movwf	??_main^(0+128)
  9850  041D  0829               	movf	??_main^(0+128),w
  9851  041E  0020               	movlb	0	; select bank0
  9852  041F  00D1               	movwf	_lumAlarm
  9853  0420                     l5240:
  9854                           
  9855                           ;main.c: 709: ALAF = DATAEE_ReadByte(0x7000 + (9*8));
  9856  0420  3048               	movlw	72
  9857  0421  0021               	movlb	1	; select bank1
  9858  0422  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9859  0423  3070               	movlw	112
  9860  0424  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9861  0425  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9862  0428  0021               	movlb	1	; select bank1
  9863  0429  00A9               	movwf	??_main^(0+128)
  9864  042A  0829               	movf	??_main^(0+128),w
  9865  042B  0020               	movlb	0	; select bank0
  9866  042C  00E5               	movwf	_ALAF
  9867  042D                     l5242:
  9868                           
  9869                           ;main.c: 710: t.h = DATAEE_ReadByte(0x7000 + (10*8));
  9870  042D  3050               	movlw	80
  9871  042E  0021               	movlb	1	; select bank1
  9872  042F  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9873  0430  3070               	movlw	112
  9874  0431  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9875  0432  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9876  0435  0021               	movlb	1	; select bank1
  9877  0436  00A9               	movwf	??_main^(0+128)
  9878  0437  0829               	movf	??_main^(0+128),w
  9879  0438  0020               	movlb	0	; select bank0
  9880  0439  00D7               	movwf	_t
  9881  043A                     l5244:
  9882                           
  9883                           ;main.c: 711: t.m = DATAEE_ReadByte(0x7000 + (11*8));
  9884  043A  3058               	movlw	88
  9885  043B  0021               	movlb	1	; select bank1
  9886  043C  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9887  043D  3070               	movlw	112
  9888  043E  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9889  043F  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9890  0442  0021               	movlb	1	; select bank1
  9891  0443  00A9               	movwf	??_main^(0+128)
  9892  0444  0829               	movf	??_main^(0+128),w
  9893  0445  0020               	movlb	0	; select bank0
  9894  0446  00D8               	movwf	_t+1
  9895  0447                     l5246:
  9896                           
  9897                           ;main.c: 712: idx_RingBuffer = DATAEE_ReadByte(0x7000 + (12*8));
  9898  0447  3060               	movlw	96
  9899  0448  0021               	movlb	1	; select bank1
  9900  0449  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9901  044A  3070               	movlw	112
  9902  044B  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9903  044C  3197  276D  3182   	fcall	_DATAEE_ReadByte
  9904  044F  0021               	movlb	1	; select bank1
  9905  0450  00A9               	movwf	??_main^(0+128)
  9906  0451  0829               	movf	??_main^(0+128),w
  9907  0452  00C5               	movwf	_idx_RingBuffer^(0+128)
  9908  0453                     l5248:
  9909                           
  9910                           ;main.c: 716: tempAlarm.trigger = 0;
  9911  0453  0020               	movlb	0	; select bank0
  9912  0454  01D5               	clrf	_tempAlarm+1
  9913  0455                     l5250:
  9914                           
  9915                           ;main.c: 717: tempAlarm.triggered = 0;
  9916  0455  01D6               	clrf	_tempAlarm+2
  9917  0456                     l5252:
  9918                           
  9919                           ;main.c: 719: lumAlarm.trigger = 0;
  9920  0456  01D2               	clrf	_lumAlarm+1
  9921  0457                     l5254:
  9922                           
  9923                           ;main.c: 720: lumAlarm.triggered = 0;
  9924  0457  01D3               	clrf	_lumAlarm+2
  9925  0458                     l5256:
  9926                           
  9927                           ;main.c: 722: clkAlarm.trigger = 0;
  9928  0458  01D0               	clrf	_clkAlarm+3
  9929  0459                     l5258:
  9930                           
  9931                           ;main.c: 725: i2c1_driver_open();
  9932  0459  3197  2739  3182   	fcall	_i2c1_driver_open
  9933  045C                     l5260:
  9934                           
  9935                           ;main.c: 726: TRISCbits.TRISC3 = 1;
  9936  045C  0020               	movlb	0	; select bank0
  9937  045D  1593               	bsf	19,3	;volatile
  9938  045E                     l5262:
  9939                           
  9940                           ;main.c: 727: TRISCbits.TRISC4 = 1;
  9941  045E  1613               	bsf	19,4	;volatile
  9942  045F                     l5264:
  9943                           
  9944                           ;main.c: 728: WPUC3 = 1;
  9945  045F  003E               	movlb	30	; select bank30
  9946  0460  15CF               	bsf	79,3	;volatile
  9947  0461                     l5266:
  9948                           
  9949                           ;main.c: 729: WPUC4 = 1;
  9950  0461  164F               	bsf	79,4	;volatile
  9951  0462                     l5268:
  9952                           
  9953                           ;main.c: 730: LCDinit();
  9954  0462  3187  2751  3182   	fcall	_LCDinit
  9955  0465                     l5270:
  9956                           
  9957                           ;main.c: 733: (INTCONbits.GIE = 1);
  9958  0465  178B               	bsf	11,7	;volatile
  9959  0466                     l5272:
  9960                           
  9961                           ;main.c: 736: (INTCONbits.PEIE = 1);
  9962  0466  170B               	bsf	11,6	;volatile
  9963  0467  0063               	sleep	;# 
  9964  0468  2C7D               	goto	l5282
  9965  0469                     l5274:
  9966  0469  0021               	movlb	1	; select bank1
  9967  046A  0844               	movf	_PWM_on^(0+128),w
  9968  046B  1903               	btfsc	3,2
  9969  046C  2C6E               	goto	u5141
  9970  046D  2C6F               	goto	u5140
  9971  046E                     u5141:
  9972  046E  2C70               	goto	l1391
  9973  046F                     u5140:
  9974  046F  2C7D               	goto	l5282
  9975  0470                     l1391:
  9976  0470  0063               	sleep	;# 
  9977  0471                     l5280:
  9978                           
  9979                           ;main.c: 745: editClock();
  9980  0471  318C  2407  3182   	fcall	_editClock
  9981  0474                     l1395:	
  9982                           ;main.c: 746: case 2:
  9983                           
  9984                           
  9985                           ;main.c: 747: editTemp();
  9986  0474  3189  21D7  3182   	fcall	_editTemp
  9987  0477                     l1396:	
  9988                           ;main.c: 748: case 3:
  9989                           
  9990                           
  9991                           ;main.c: 749: editLum();
  9992  0477  3189  21AA  3182   	fcall	_editLum
  9993  047A                     l1397:	
  9994                           ;main.c: 750: case 4:
  9995                           
  9996                           
  9997                           ;main.c: 751: toggleAlarms();
  9998  047A  3189  217E  3182   	fcall	_toggleAlarms
  9999  047D                     l5282:	
 10000                           ;main.c: 752: }
 10001                           
 10002                           
 10003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10004                           ; Switch size 1, requested type "simple"
 10005                           ; Number of cases is 1, Range of values is 0 to 0
 10006                           ; switch strategies available:
 10007                           ; Name         Instructions Cycles
 10008                           ; simple_byte            4     3 (average)
 10009                           ; direct_byte            8     6 (fixed)
 10010                           ; jumptable            260     6 (fixed)
 10011                           ;	Chosen strategy is simple_byte
 10012  047D  0020               	movlb	0	; select bank0
 10013  047E  085B               	movf	_mode+1,w
 10014  047F  3A00               	xorlw	0	; case 0
 10015  0480  1903               	skipnz
 10016  0481  2C83               	goto	l5308
 10017  0482  2C7D               	goto	l5282
 10018  0483                     l5308:
 10019                           
 10020                           ; Switch size 1, requested type "simple"
 10021                           ; Number of cases is 5, Range of values is 0 to 4
 10022                           ; switch strategies available:
 10023                           ; Name         Instructions Cycles
 10024                           ; direct_byte           16     6 (fixed)
 10025                           ; simple_byte           16     9 (average)
 10026                           ; jumptable            260     6 (fixed)
 10027                           ;	Chosen strategy is simple_byte
 10028  0483  085A               	movf	_mode,w
 10029  0484  3A00               	xorlw	0	; case 0
 10030  0485  1903               	skipnz
 10031  0486  2C69               	goto	l5274
 10032  0487  3A01               	xorlw	1	; case 1
 10033  0488  1903               	skipnz
 10034  0489  2C71               	goto	l5280
 10035  048A  3A03               	xorlw	3	; case 2
 10036  048B  1903               	skipnz
 10037  048C  2C74               	goto	l1395
 10038  048D  3A01               	xorlw	1	; case 3
 10039  048E  1903               	skipnz
 10040  048F  2C77               	goto	l1396
 10041  0490  3A07               	xorlw	7	; case 4
 10042  0491  1903               	skipnz
 10043  0492  2C7A               	goto	l1397
 10044  0493  2C7D               	goto	l5282
 10045  0494  3180  284C         	ljmp	start
 10046  0496                     __end_of_main:
 10047                           
 10048                           	psect	text1
 10049  097E                     __ptext1:	
 10050 ;; *************** function _toggleAlarms *****************
 10051 ;; Defined at:
 10052 ;;		line 610 in file "main.c"
 10053 ;; Parameters:    Size  Location     Type
 10054 ;;		None
 10055 ;; Auto vars:     Size  Location     Type
 10056 ;;		None
 10057 ;; Return value:  Size  Location     Type
 10058 ;;                  1    wreg      void 
 10059 ;; Registers used:
 10060 ;;		wreg, status,2, status,0
 10061 ;; Tracked objects:
 10062 ;;		On entry : 0/0
 10063 ;;		On exit  : 0/0
 10064 ;;		Unchanged: 0/0
 10065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10068 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10069 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10070 ;;Total ram usage:        1 bytes
 10071 ;; Hardware stack levels used:    1
 10072 ;; Hardware stack levels required when called:    7
 10073 ;; This function calls:
 10074 ;;		Nothing
 10075 ;; This function is called by:
 10076 ;;		_main
 10077 ;; This function uses a non-reentrant model
 10078 ;;
 10079                           
 10080                           
 10081                           ;psect for function _toggleAlarms
 10082  097E                     _toggleAlarms:
 10083  097E                     l1358:	
 10084                           ;incstack = 0
 10085                           ; Regs used in _toggleAlarms: [wreg+status,2+status,0]
 10086                           ;main.c: 612: while(1){
 10087                           
 10088                           
 10089                           ;main.c: 614: if(PORTCbits.RC5 == 0){
 10090  097E  0020               	movlb	0	; select bank0
 10091  097F  1A8E               	btfsc	14,5	;volatile
 10092  0980  2982               	goto	u4941
 10093  0981  2983               	goto	u4940
 10094  0982                     u4941:
 10095  0982  299F               	goto	l5136
 10096  0983                     u4940:
 10097  0983                     l5130:
 10098                           
 10099                           ;main.c: 615: if(ALAF == 'A'){
 10100  0983  3041               	movlw	65
 10101  0984  0665               	xorwf	_ALAF,w
 10102  0985  1D03               	btfss	3,2
 10103  0986  2988               	goto	u4951
 10104  0987  2989               	goto	u4950
 10105  0988                     u4951:
 10106  0988  2990               	goto	l5134
 10107  0989                     u4950:
 10108  0989                     l5132:
 10109                           
 10110                           ;main.c: 616: ALAF = 'a';
 10111  0989  3061               	movlw	97
 10112  098A  0021               	movlb	1	; select bank1
 10113  098B  00A0               	movwf	??_toggleAlarms^(0+128)
 10114  098C  0820               	movf	??_toggleAlarms^(0+128),w
 10115  098D  0020               	movlb	0	; select bank0
 10116  098E  00E5               	movwf	_ALAF
 10117                           
 10118                           ;main.c: 617: } else {
 10119  098F  2996               	goto	l1361
 10120  0990                     l5134:
 10121                           
 10122                           ;main.c: 618: ALAF = 'A';
 10123  0990  3041               	movlw	65
 10124  0991  0021               	movlb	1	; select bank1
 10125  0992  00A0               	movwf	??_toggleAlarms^(0+128)
 10126  0993  0820               	movf	??_toggleAlarms^(0+128),w
 10127  0994  0020               	movlb	0	; select bank0
 10128  0995  00E5               	movwf	_ALAF
 10129  0996                     l1361:
 10130                           
 10131                           ;main.c: 619: };main.c: 620: _delay((unsigned long)((100)*(1000000/4000.0)));
 10132  0996  3021               	movlw	33
 10133  0997  0021               	movlb	1	; select bank1
 10134  0998  00A0               	movwf	??_toggleAlarms^(0+128)
 10135  0999  3076               	movlw	118
 10136  099A                     u5157:
 10137  099A  0B89               	decfsz	9,f
 10138  099B  299A               	goto	u5157
 10139  099C  0BA0               	decfsz	??_toggleAlarms^(0+128),f
 10140  099D  299A               	goto	u5157
 10141  099E  0000               	nop
 10142  099F                     l5136:
 10143                           
 10144                           ;main.c: 621: };main.c: 622: if(mode != 4){
 10145  099F  3004               	movlw	4
 10146  09A0  0020               	movlb	0	; select bank0
 10147  09A1  065A               	xorwf	_mode,w
 10148  09A2  045B               	iorwf	_mode+1,w
 10149  09A3  1903               	btfsc	3,2
 10150  09A4  29A6               	goto	u4961
 10151  09A5  29A7               	goto	u4960
 10152  09A6                     u4961:
 10153  09A6  297E               	goto	l1358
 10154  09A7                     u4960:
 10155  09A7                     l5138:
 10156                           
 10157                           ;main.c: 623: mode = 0;
 10158  09A7  01DA               	clrf	_mode
 10159  09A8  01DB               	clrf	_mode+1
 10160  09A9                     l1365:	
 10161                           ;main.c: 624: break;
 10162                           
 10163  09A9  0008               	return
 10164  09AA                     __end_of_toggleAlarms:
 10165                           
 10166                           	psect	text2
 10167  1739                     __ptext2:	
 10168 ;; *************** function _i2c1_driver_open *****************
 10169 ;; Defined at:
 10170 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;		None
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;		None
 10175 ;; Return value:  Size  Location     Type
 10176 ;;		None               void
 10177 ;; Registers used:
 10178 ;;		wreg, status,2
 10179 ;; Tracked objects:
 10180 ;;		On entry : 0/0
 10181 ;;		On exit  : 0/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10188 ;;Total ram usage:        0 bytes
 10189 ;; Hardware stack levels used:    1
 10190 ;; Hardware stack levels required when called:    7
 10191 ;; This function calls:
 10192 ;;		Nothing
 10193 ;; This function is called by:
 10194 ;;		_main
 10195 ;; This function uses a non-reentrant model
 10196 ;;
 10197                           
 10198                           
 10199                           ;psect for function _i2c1_driver_open
 10200  1739                     _i2c1_driver_open:
 10201  1739                     l4882:	
 10202                           ;incstack = 0
 10203                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 10204                           
 10205                           
 10206                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 10207  1739  0023               	movlb	3	; select bank3
 10208  173A  1A90               	btfsc	16,5	;volatile
 10209  173B  2F3D               	goto	u4441
 10210  173C  2F3E               	goto	u4440
 10211  173D                     u4441:
 10212  173D  2F44               	goto	l243
 10213  173E                     u4440:
 10214  173E                     l4884:
 10215                           
 10216                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
 10217  173E  018F               	clrf	15	;volatile
 10218  173F                     l4886:
 10219                           
 10220                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 10221  173F  3028               	movlw	40
 10222  1740  0090               	movwf	16	;volatile
 10223  1741                     l4888:
 10224                           
 10225                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 10226  1741  0191               	clrf	17	;volatile
 10227                           
 10228                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 10229  1742  3003               	movlw	3
 10230  1743  008D               	movwf	13	;volatile
 10231  1744                     l243:
 10232  1744  0008               	return
 10233  1745                     __end_of_i2c1_driver_open:
 10234                           
 10235                           	psect	text3
 10236  09D7                     __ptext3:	
 10237 ;; *************** function _editTemp *****************
 10238 ;; Defined at:
 10239 ;;		line 564 in file "main.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;		None
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;		None
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg, status,2, status,0
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10255 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10256 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;Total ram usage:        1 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    7
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_main
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           
 10268                           ;psect for function _editTemp
 10269  09D7                     _editTemp:
 10270  09D7                     l1336:	
 10271                           ;incstack = 0
 10272                           ; Regs used in _editTemp: [wreg+status,2+status,0]
 10273                           ;main.c: 567: while(1){
 10274                           
 10275                           
 10276                           ;main.c: 569: if(PORTCbits.RC5 == 0){
 10277  09D7  0020               	movlb	0	; select bank0
 10278  09D8  1A8E               	btfsc	14,5	;volatile
 10279  09D9  29DB               	goto	u4861
 10280  09DA  29DC               	goto	u4860
 10281  09DB                     u4861:
 10282  09DB  29FA               	goto	l5110
 10283  09DC                     u4860:
 10284  09DC                     l5098:
 10285                           
 10286                           ;main.c: 570: if(editingTempAlarm == 0){
 10287  09DC  0861               	movf	_editingTempAlarm,w
 10288  09DD  1D03               	btfss	3,2
 10289  09DE  29E0               	goto	u4871
 10290  09DF  29E1               	goto	u4870
 10291  09E0                     u4871:
 10292  09E0  29E4               	goto	l5102
 10293  09E1                     u4870:
 10294  09E1                     l5100:
 10295                           
 10296                           ;main.c: 571: editingTempAlarm = 1;
 10297  09E1  01E1               	clrf	_editingTempAlarm
 10298  09E2  0AE1               	incf	_editingTempAlarm,f
 10299                           
 10300                           ;main.c: 572: } else {
 10301  09E3  29F1               	goto	l5108
 10302  09E4                     l5102:
 10303                           
 10304                           ;main.c: 573: tempAlarm.alarmTemp++;
 10305  09E4  3001               	movlw	1
 10306  09E5  0021               	movlb	1	; select bank1
 10307  09E6  00A0               	movwf	??_editTemp^(0+128)
 10308  09E7  0820               	movf	??_editTemp^(0+128),w
 10309  09E8  0020               	movlb	0	; select bank0
 10310  09E9  07D4               	addwf	_tempAlarm,f
 10311  09EA                     l5104:
 10312                           
 10313                           ;main.c: 574: if(tempAlarm.alarmTemp > 50){
 10314  09EA  3033               	movlw	51
 10315  09EB  0254               	subwf	_tempAlarm,w
 10316  09EC  1C03               	skipc
 10317  09ED  29EF               	goto	u4881
 10318  09EE  29F0               	goto	u4880
 10319  09EF                     u4881:
 10320  09EF  29F1               	goto	l5108
 10321  09F0                     u4880:
 10322  09F0                     l5106:
 10323                           
 10324                           ;main.c: 575: tempAlarm.alarmTemp = 0;
 10325  09F0  01D4               	clrf	_tempAlarm
 10326  09F1                     l5108:
 10327                           
 10328                           ;main.c: 576: };main.c: 577: };main.c: 578: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
 10329  09F1  3021               	movlw	33
 10330  09F2  0021               	movlb	1	; select bank1
 10331  09F3  00A0               	movwf	??_editTemp^(0+128)
 10332  09F4  3076               	movlw	118
 10333  09F5                     u5167:
 10334  09F5  0B89               	decfsz	9,f
 10335  09F6  29F5               	goto	u5167
 10336  09F7  0BA0               	decfsz	??_editTemp^(0+128),f
 10337  09F8  29F5               	goto	u5167
 10338  09F9  0000               	nop
 10339  09FA                     l5110:
 10340                           
 10341                           ;main.c: 579: };main.c: 580: if(mode != 2){
 10342  09FA  3002               	movlw	2
 10343  09FB  0020               	movlb	0	; select bank0
 10344  09FC  065A               	xorwf	_mode,w
 10345  09FD  045B               	iorwf	_mode+1,w
 10346  09FE  1903               	btfsc	3,2
 10347  09FF  2A01               	goto	u4891
 10348  0A00  2A02               	goto	u4890
 10349  0A01                     u4891:
 10350  0A01  29D7               	goto	l1336
 10351  0A02                     u4890:
 10352  0A02                     l5112:
 10353                           
 10354                           ;main.c: 581: editingTempAlarm = 0;
 10355  0A02  01E1               	clrf	_editingTempAlarm
 10356  0A03                     l1344:	
 10357                           ;main.c: 582: break;
 10358                           
 10359  0A03  0008               	return
 10360  0A04                     __end_of_editTemp:
 10361                           
 10362                           	psect	text4
 10363  09AA                     __ptext4:	
 10364 ;; *************** function _editLum *****************
 10365 ;; Defined at:
 10366 ;;		line 587 in file "main.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;		None
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;		None
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  1    wreg      void 
 10373 ;; Registers used:
 10374 ;;		wreg, status,2, status,0
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10382 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10383 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10384 ;;Total ram usage:        1 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; Hardware stack levels required when called:    7
 10387 ;; This function calls:
 10388 ;;		Nothing
 10389 ;; This function is called by:
 10390 ;;		_main
 10391 ;; This function uses a non-reentrant model
 10392 ;;
 10393                           
 10394                           
 10395                           ;psect for function _editLum
 10396  09AA                     _editLum:
 10397  09AA                     l1347:	
 10398                           ;incstack = 0
 10399                           ; Regs used in _editLum: [wreg+status,2+status,0]
 10400                           ;main.c: 590: while(1){
 10401                           
 10402                           
 10403                           ;main.c: 592: if(PORTCbits.RC5 == 0){
 10404  09AA  0020               	movlb	0	; select bank0
 10405  09AB  1A8E               	btfsc	14,5	;volatile
 10406  09AC  29AE               	goto	u4901
 10407  09AD  29AF               	goto	u4900
 10408  09AE                     u4901:
 10409  09AE  29CD               	goto	l5126
 10410  09AF                     u4900:
 10411  09AF                     l5114:
 10412                           
 10413                           ;main.c: 593: if(editingLumAlarm == 0){
 10414  09AF  0860               	movf	_editingLumAlarm,w
 10415  09B0  1D03               	btfss	3,2
 10416  09B1  29B3               	goto	u4911
 10417  09B2  29B4               	goto	u4910
 10418  09B3                     u4911:
 10419  09B3  29B7               	goto	l5118
 10420  09B4                     u4910:
 10421  09B4                     l5116:
 10422                           
 10423                           ;main.c: 594: editingLumAlarm = 1;
 10424  09B4  01E0               	clrf	_editingLumAlarm
 10425  09B5  0AE0               	incf	_editingLumAlarm,f
 10426                           
 10427                           ;main.c: 595: } else {
 10428  09B6  29C4               	goto	l5124
 10429  09B7                     l5118:
 10430                           
 10431                           ;main.c: 596: lumAlarm.alarmLum++;
 10432  09B7  3001               	movlw	1
 10433  09B8  0021               	movlb	1	; select bank1
 10434  09B9  00A0               	movwf	??_editLum^(0+128)
 10435  09BA  0820               	movf	??_editLum^(0+128),w
 10436  09BB  0020               	movlb	0	; select bank0
 10437  09BC  07D1               	addwf	_lumAlarm,f
 10438  09BD                     l5120:
 10439                           
 10440                           ;main.c: 597: if(lumAlarm.alarmLum > 7){
 10441  09BD  3008               	movlw	8
 10442  09BE  0251               	subwf	_lumAlarm,w
 10443  09BF  1C03               	skipc
 10444  09C0  29C2               	goto	u4921
 10445  09C1  29C3               	goto	u4920
 10446  09C2                     u4921:
 10447  09C2  29C4               	goto	l5124
 10448  09C3                     u4920:
 10449  09C3                     l5122:
 10450                           
 10451                           ;main.c: 598: lumAlarm.alarmLum = 0;
 10452  09C3  01D1               	clrf	_lumAlarm
 10453  09C4                     l5124:
 10454                           
 10455                           ;main.c: 599: };main.c: 600: };main.c: 601: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
 10456  09C4  3021               	movlw	33
 10457  09C5  0021               	movlb	1	; select bank1
 10458  09C6  00A0               	movwf	??_editLum^(0+128)
 10459  09C7  3076               	movlw	118
 10460  09C8                     u5177:
 10461  09C8  0B89               	decfsz	9,f
 10462  09C9  29C8               	goto	u5177
 10463  09CA  0BA0               	decfsz	??_editLum^(0+128),f
 10464  09CB  29C8               	goto	u5177
 10465  09CC  0000               	nop
 10466  09CD                     l5126:
 10467                           
 10468                           ;main.c: 602: };main.c: 603: if(mode != 3){
 10469  09CD  3003               	movlw	3
 10470  09CE  0020               	movlb	0	; select bank0
 10471  09CF  065A               	xorwf	_mode,w
 10472  09D0  045B               	iorwf	_mode+1,w
 10473  09D1  1903               	btfsc	3,2
 10474  09D2  29D4               	goto	u4931
 10475  09D3  29D5               	goto	u4930
 10476  09D4                     u4931:
 10477  09D4  29AA               	goto	l1347
 10478  09D5                     u4930:
 10479  09D5                     l5128:
 10480                           
 10481                           ;main.c: 604: editingLumAlarm = 0;
 10482  09D5  01E0               	clrf	_editingLumAlarm
 10483  09D6                     l1355:	
 10484                           ;main.c: 605: break;
 10485                           
 10486  09D6  0008               	return
 10487  09D7                     __end_of_editLum:
 10488                           
 10489                           	psect	text5
 10490  0C07                     __ptext5:	
 10491 ;; *************** function _editClock *****************
 10492 ;; Defined at:
 10493 ;;		line 528 in file "main.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;		None
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;		None
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      void 
 10500 ;; Registers used:
 10501 ;;		wreg, status,2, status,0
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10509 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10511 ;;Total ram usage:        1 bytes
 10512 ;; Hardware stack levels used:    1
 10513 ;; Hardware stack levels required when called:    7
 10514 ;; This function calls:
 10515 ;;		Nothing
 10516 ;; This function is called by:
 10517 ;;		_main
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           
 10522                           ;psect for function _editClock
 10523  0C07                     _editClock:
 10524  0C07                     l1315:	
 10525                           ;incstack = 0
 10526                           ; Regs used in _editClock: [wreg+status,2+status,0]
 10527                           ;main.c: 530: while(1){
 10528                           
 10529                           
 10530                           ;main.c: 532: if(PORTCbits.RC5 == 0){
 10531  0C07  0020               	movlb	0	; select bank0
 10532  0C08  1A8E               	btfsc	14,5	;volatile
 10533  0C09  2C0B               	goto	u4771
 10534  0C0A  2C0C               	goto	u4770
 10535  0C0B                     u4771:
 10536  0C0B  2C61               	goto	l5094
 10537  0C0C                     u4770:
 10538  0C0C                     l5064:
 10539                           
 10540                           ;main.c: 533: if(editingClockAlarm == 0){
 10541  0C0C  085C               	movf	_editingClockAlarm,w
 10542  0C0D  045D               	iorwf	_editingClockAlarm+1,w
 10543  0C0E  1D03               	btfss	3,2
 10544  0C0F  2C11               	goto	u4781
 10545  0C10  2C12               	goto	u4780
 10546  0C11                     u4781:
 10547  0C11  2C17               	goto	l5068
 10548  0C12                     u4780:
 10549  0C12                     l5066:
 10550                           
 10551                           ;main.c: 534: editingClockAlarm = 1;
 10552  0C12  3001               	movlw	1
 10553  0C13  00DC               	movwf	_editingClockAlarm
 10554  0C14  3000               	movlw	0
 10555  0C15  00DD               	movwf	_editingClockAlarm+1
 10556                           
 10557                           ;main.c: 536: } else if(editingClockAlarm == 1){
 10558  0C16  2C58               	goto	l5092
 10559  0C17                     l5068:
 10560  0C17  035C               	decf	_editingClockAlarm,w
 10561  0C18  045D               	iorwf	_editingClockAlarm+1,w
 10562  0C19  1D03               	btfss	3,2
 10563  0C1A  2C1C               	goto	u4791
 10564  0C1B  2C1D               	goto	u4790
 10565  0C1C                     u4791:
 10566  0C1C  2C2C               	goto	l5076
 10567  0C1D                     u4790:
 10568  0C1D                     l5070:
 10569                           
 10570                           ;main.c: 537: if(clkAlarm.alarmVal.h >= 23){
 10571  0C1D  3017               	movlw	23
 10572  0C1E  024D               	subwf	_clkAlarm,w
 10573  0C1F  1C03               	skipc
 10574  0C20  2C22               	goto	u4801
 10575  0C21  2C23               	goto	u4800
 10576  0C22                     u4801:
 10577  0C22  2C25               	goto	l5074
 10578  0C23                     u4800:
 10579  0C23                     l5072:
 10580                           
 10581                           ;main.c: 538: clkAlarm.alarmVal.h = 0;
 10582  0C23  01CD               	clrf	_clkAlarm
 10583                           
 10584                           ;main.c: 539: } else{
 10585  0C24  2C58               	goto	l5092
 10586  0C25                     l5074:
 10587                           
 10588                           ;main.c: 540: clkAlarm.alarmVal.h++;
 10589  0C25  3001               	movlw	1
 10590  0C26  0021               	movlb	1	; select bank1
 10591  0C27  00A0               	movwf	??_editClock^(0+128)
 10592  0C28  0820               	movf	??_editClock^(0+128),w
 10593  0C29  0020               	movlb	0	; select bank0
 10594  0C2A  07CD               	addwf	_clkAlarm,f
 10595  0C2B  2C58               	goto	l5092
 10596  0C2C                     l5076:
 10597  0C2C  3002               	movlw	2
 10598  0C2D  065C               	xorwf	_editingClockAlarm,w
 10599  0C2E  045D               	iorwf	_editingClockAlarm+1,w
 10600  0C2F  1D03               	btfss	3,2
 10601  0C30  2C32               	goto	u4811
 10602  0C31  2C33               	goto	u4810
 10603  0C32                     u4811:
 10604  0C32  2C42               	goto	l5084
 10605  0C33                     u4810:
 10606  0C33                     l5078:
 10607                           
 10608                           ;main.c: 543: if(clkAlarm.alarmVal.m == 59){
 10609  0C33  303B               	movlw	59
 10610  0C34  064E               	xorwf	_clkAlarm+1,w
 10611  0C35  1D03               	btfss	3,2
 10612  0C36  2C38               	goto	u4821
 10613  0C37  2C39               	goto	u4820
 10614  0C38                     u4821:
 10615  0C38  2C3B               	goto	l5082
 10616  0C39                     u4820:
 10617  0C39                     l5080:
 10618                           
 10619                           ;main.c: 544: clkAlarm.alarmVal.m = 0;
 10620  0C39  01CE               	clrf	_clkAlarm+1
 10621                           
 10622                           ;main.c: 545: } else{
 10623  0C3A  2C58               	goto	l5092
 10624  0C3B                     l5082:
 10625                           
 10626                           ;main.c: 546: clkAlarm.alarmVal.m++;
 10627  0C3B  3001               	movlw	1
 10628  0C3C  0021               	movlb	1	; select bank1
 10629  0C3D  00A0               	movwf	??_editClock^(0+128)
 10630  0C3E  0820               	movf	??_editClock^(0+128),w
 10631  0C3F  0020               	movlb	0	; select bank0
 10632  0C40  07CE               	addwf	_clkAlarm+1,f
 10633  0C41  2C58               	goto	l5092
 10634  0C42                     l5084:
 10635  0C42  3003               	movlw	3
 10636  0C43  065C               	xorwf	_editingClockAlarm,w
 10637  0C44  045D               	iorwf	_editingClockAlarm+1,w
 10638  0C45  1D03               	btfss	3,2
 10639  0C46  2C48               	goto	u4831
 10640  0C47  2C49               	goto	u4830
 10641  0C48                     u4831:
 10642  0C48  2C58               	goto	l1322
 10643  0C49                     u4830:
 10644  0C49                     l5086:
 10645                           
 10646                           ;main.c: 549: if(clkAlarm.alarmVal.s == 59){
 10647  0C49  303B               	movlw	59
 10648  0C4A  064F               	xorwf	_clkAlarm+2,w
 10649  0C4B  1D03               	btfss	3,2
 10650  0C4C  2C4E               	goto	u4841
 10651  0C4D  2C4F               	goto	u4840
 10652  0C4E                     u4841:
 10653  0C4E  2C51               	goto	l5090
 10654  0C4F                     u4840:
 10655  0C4F                     l5088:
 10656                           
 10657                           ;main.c: 550: clkAlarm.alarmVal.s = 0;
 10658  0C4F  01CF               	clrf	_clkAlarm+2
 10659                           
 10660                           ;main.c: 551: } else{
 10661  0C50  2C58               	goto	l5092
 10662  0C51                     l5090:
 10663                           
 10664                           ;main.c: 552: clkAlarm.alarmVal.s++;
 10665  0C51  3001               	movlw	1
 10666  0C52  0021               	movlb	1	; select bank1
 10667  0C53  00A0               	movwf	??_editClock^(0+128)
 10668  0C54  0820               	movf	??_editClock^(0+128),w
 10669  0C55  0020               	movlb	0	; select bank0
 10670  0C56  07CF               	addwf	_clkAlarm+2,f
 10671  0C57  2C58               	goto	l5092
 10672  0C58                     l1322:
 10673  0C58                     l5092:
 10674                           
 10675                           ;main.c: 553: };main.c: 554: };main.c: 555: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
 10676  0C58  3021               	movlw	33
 10677  0C59  0021               	movlb	1	; select bank1
 10678  0C5A  00A0               	movwf	??_editClock^(0+128)
 10679  0C5B  3076               	movlw	118
 10680  0C5C                     u5187:
 10681  0C5C  0B89               	decfsz	9,f
 10682  0C5D  2C5C               	goto	u5187
 10683  0C5E  0BA0               	decfsz	??_editClock^(0+128),f
 10684  0C5F  2C5C               	goto	u5187
 10685  0C60  0000               	nop
 10686  0C61                     l5094:
 10687                           
 10688                           ;main.c: 556: };main.c: 557: if(mode != 1){
 10689  0C61  0020               	movlb	0	; select bank0
 10690  0C62  035A               	decf	_mode,w
 10691  0C63  045B               	iorwf	_mode+1,w
 10692  0C64  1903               	btfsc	3,2
 10693  0C65  2C67               	goto	u4851
 10694  0C66  2C68               	goto	u4850
 10695  0C67                     u4851:
 10696  0C67  2C07               	goto	l1315
 10697  0C68                     u4850:
 10698  0C68                     l5096:
 10699                           
 10700                           ;main.c: 558: editingClockAlarm = 0;
 10701  0C68  01DC               	clrf	_editingClockAlarm
 10702  0C69  01DD               	clrf	_editingClockAlarm+1
 10703  0C6A                     l1333:	
 10704                           ;main.c: 559: break;
 10705                           
 10706  0C6A  0008               	return
 10707  0C6B                     __end_of_editClock:
 10708                           
 10709                           	psect	text6
 10710  07FB                     __ptext6:	
 10711 ;; *************** function _TMR2_StopTimer *****************
 10712 ;; Defined at:
 10713 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 10714 ;; Parameters:    Size  Location     Type
 10715 ;;		None
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;		None
 10718 ;; Return value:  Size  Location     Type
 10719 ;;                  1    wreg      void 
 10720 ;; Registers used:
 10721 ;;		status,2, status,0, pclath, cstack
 10722 ;; Tracked objects:
 10723 ;;		On entry : 0/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;Total ram usage:        0 bytes
 10732 ;; Hardware stack levels used:    1
 10733 ;; Hardware stack levels required when called:    8
 10734 ;; This function calls:
 10735 ;;		_TMR2_Stop
 10736 ;; This function is called by:
 10737 ;;		_main
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           
 10742                           ;psect for function _TMR2_StopTimer
 10743  07FB                     _TMR2_StopTimer:
 10744  07FB                     l4924:	
 10745                           ;incstack = 0
 10746                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 10747                           
 10748                           
 10749                           ;tmr2.c: 119: TMR2_Stop();
 10750  07FB  3196  26DD  3187   	fcall	_TMR2_Stop
 10751  07FE                     l779:
 10752  07FE  0008               	return
 10753  07FF                     __end_of_TMR2_StopTimer:
 10754                           
 10755                           	psect	text7
 10756  16DD                     __ptext7:	
 10757 ;; *************** function _TMR2_Stop *****************
 10758 ;; Defined at:
 10759 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 10760 ;; Parameters:    Size  Location     Type
 10761 ;;		None
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;		None
 10764 ;; Return value:  Size  Location     Type
 10765 ;;                  1    wreg      void 
 10766 ;; Registers used:
 10767 ;;		None
 10768 ;; Tracked objects:
 10769 ;;		On entry : 0/0
 10770 ;;		On exit  : 0/0
 10771 ;;		Unchanged: 0/0
 10772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10777 ;;Total ram usage:        0 bytes
 10778 ;; Hardware stack levels used:    1
 10779 ;; Hardware stack levels required when called:    7
 10780 ;; This function calls:
 10781 ;;		Nothing
 10782 ;; This function is called by:
 10783 ;;		_TMR2_StopTimer
 10784 ;; This function uses a non-reentrant model
 10785 ;;
 10786                           
 10787                           
 10788                           ;psect for function _TMR2_Stop
 10789  16DD                     _TMR2_Stop:
 10790  16DD                     l4546:	
 10791                           ;incstack = 0
 10792                           ; Regs used in _TMR2_Stop: []
 10793                           
 10794                           
 10795                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 10796  16DD  0025               	movlb	5	; select bank5
 10797  16DE  138E               	bcf	14,7	;volatile
 10798  16DF                     l776:
 10799  16DF  0008               	return
 10800  16E0                     __end_of_TMR2_Stop:
 10801                           
 10802                           	psect	text8
 10803  093B                     __ptext8:	
 10804 ;; *************** function _SYSTEM_Initialize *****************
 10805 ;; Defined at:
 10806 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;		None
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;		None
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      void 
 10813 ;; Registers used:
 10814 ;;		wreg, status,2, status,0, pclath, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10824 ;;Total ram usage:        0 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:    9
 10827 ;; This function calls:
 10828 ;;		_ADCC_Initialize
 10829 ;;		_EXT_INT_Initialize
 10830 ;;		_OSCILLATOR_Initialize
 10831 ;;		_PIN_MANAGER_Initialize
 10832 ;;		_PMD_Initialize
 10833 ;;		_PWM6_Initialize
 10834 ;;		_TMR1_Initialize
 10835 ;;		_TMR2_Initialize
 10836 ;;		_TMR3_Initialize
 10837 ;;		_TMR5_Initialize
 10838 ;; This function is called by:
 10839 ;;		_main
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           
 10844                           ;psect for function _SYSTEM_Initialize
 10845  093B                     _SYSTEM_Initialize:
 10846  093B                     l4862:	
 10847                           ;incstack = 0
 10848                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10849                           
 10850                           
 10851                           ;mcc.c: 52: PMD_Initialize();
 10852  093B  3197  2728  3189   	fcall	_PMD_Initialize
 10853  093E                     l4864:
 10854                           
 10855                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 10856  093E  318A  2274  3189   	fcall	_PIN_MANAGER_Initialize
 10857  0941                     l4866:
 10858                           
 10859                           ;mcc.c: 54: OSCILLATOR_Initialize();
 10860  0941  3197  2730  3189   	fcall	_OSCILLATOR_Initialize
 10861  0944                     l4868:
 10862                           
 10863                           ;mcc.c: 55: PWM6_Initialize();
 10864  0944  3197  2752  3189   	fcall	_PWM6_Initialize
 10865  0947                     l4870:
 10866                           
 10867                           ;mcc.c: 56: ADCC_Initialize();
 10868  0947  3188  203C  3189   	fcall	_ADCC_Initialize
 10869  094A                     l4872:
 10870                           
 10871                           ;mcc.c: 57: TMR3_Initialize();
 10872  094A  3188  20FD  3189   	fcall	_TMR3_Initialize
 10873  094D                     l4874:
 10874                           
 10875                           ;mcc.c: 58: TMR2_Initialize();
 10876  094D  3188  2000  3189   	fcall	_TMR2_Initialize
 10877  0950                     l4876:
 10878                           
 10879                           ;mcc.c: 59: TMR5_Initialize();
 10880  0950  3189  211C  3189   	fcall	_TMR5_Initialize
 10881  0953                     l4878:
 10882                           
 10883                           ;mcc.c: 60: EXT_INT_Initialize();
 10884  0953  3197  275F  3189   	fcall	_EXT_INT_Initialize
 10885  0956                     l4880:
 10886                           
 10887                           ;mcc.c: 61: TMR1_Initialize();
 10888  0956  3188  20DE  3189   	fcall	_TMR1_Initialize
 10889  0959                     l176:
 10890  0959  0008               	return
 10891  095A                     __end_of_SYSTEM_Initialize:
 10892                           
 10893                           	psect	text9
 10894  091C                     __ptext9:	
 10895 ;; *************** function _TMR5_Initialize *****************
 10896 ;; Defined at:
 10897 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 10898 ;; Parameters:    Size  Location     Type
 10899 ;;		None
 10900 ;; Auto vars:     Size  Location     Type
 10901 ;;		None
 10902 ;; Return value:  Size  Location     Type
 10903 ;;                  1    wreg      void 
 10904 ;; Registers used:
 10905 ;;		wreg, status,2, status,0, pclath, cstack
 10906 ;; Tracked objects:
 10907 ;;		On entry : 0/0
 10908 ;;		On exit  : 0/0
 10909 ;;		Unchanged: 0/0
 10910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10915 ;;Total ram usage:        0 bytes
 10916 ;; Hardware stack levels used:    1
 10917 ;; Hardware stack levels required when called:    8
 10918 ;; This function calls:
 10919 ;;		_TMR5_SetInterruptHandler
 10920 ;; This function is called by:
 10921 ;;		_SYSTEM_Initialize
 10922 ;; This function uses a non-reentrant model
 10923 ;;
 10924                           
 10925                           
 10926                           ;psect for function _TMR5_Initialize
 10927  091C                     _TMR5_Initialize:
 10928  091C                     l4462:	
 10929                           ;incstack = 0
 10930                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10931                           
 10932                           
 10933                           ;tmr5.c: 69: T5GCON = 0x00;
 10934  091C  0024               	movlb	4	; select bank4
 10935  091D  019B               	clrf	27	;volatile
 10936                           
 10937                           ;tmr5.c: 72: T5GATE = 0x00;
 10938  091E  019C               	clrf	28	;volatile
 10939  091F                     l4464:
 10940                           
 10941                           ;tmr5.c: 75: T5CLK = 0x04;
 10942  091F  3004               	movlw	4
 10943  0920  009D               	movwf	29	;volatile
 10944  0921                     l4466:
 10945                           
 10946                           ;tmr5.c: 78: TMR5H = 0x4A;
 10947  0921  304A               	movlw	74
 10948  0922  0099               	movwf	25	;volatile
 10949  0923                     l4468:
 10950                           
 10951                           ;tmr5.c: 81: TMR5L = 0x5C;
 10952  0923  305C               	movlw	92
 10953  0924  0098               	movwf	24	;volatile
 10954  0925                     l4470:
 10955                           
 10956                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 10957  0925  0819               	movf	25,w	;volatile
 10958  0926  0021               	movlb	1	; select bank1
 10959  0927  00B6               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 10960  0928  0024               	movlb	4	; select bank4
 10961  0929  0818               	movf	24,w	;volatile
 10962  092A  0021               	movlb	1	; select bank1
 10963  092B  00B5               	movwf	_timer5ReloadVal^(0+128)	;volatile
 10964  092C                     l4472:
 10965                           
 10966                           ;tmr5.c: 87: PIR4bits.TMR5IF = 0;
 10967  092C  002E               	movlb	14	; select bank14
 10968  092D  1210               	bcf	16,4	;volatile
 10969  092E                     l4474:
 10970                           
 10971                           ;tmr5.c: 90: PIE4bits.TMR5IE = 1;
 10972  092E  161A               	bsf	26,4	;volatile
 10973  092F                     l4476:
 10974                           
 10975                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 10976  092F  30FF               	movlw	low _TMR5_DefaultInterruptHandler
 10977  0930  0021               	movlb	1	; select bank1
 10978  0931  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
 10979  0932  3007               	movlw	high _TMR5_DefaultInterruptHandler
 10980  0933  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10981  0934  3197  2700  3189   	fcall	_TMR5_SetInterruptHandler
 10982  0937                     l4478:
 10983                           
 10984                           ;tmr5.c: 96: T5CON = 0x15;
 10985  0937  3015               	movlw	21
 10986  0938  0024               	movlb	4	; select bank4
 10987  0939  009A               	movwf	26	;volatile
 10988  093A                     l687:
 10989  093A  0008               	return
 10990  093B                     __end_of_TMR5_Initialize:
 10991                           
 10992                           	psect	text10
 10993  1700                     __ptext10:	
 10994 ;; *************** function _TMR5_SetInterruptHandler *****************
 10995 ;; Defined at:
 10996 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10999 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  1    wreg      void 
 11004 ;; Registers used:
 11005 ;;		wreg
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11011 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;Total ram usage:        2 bytes
 11016 ;; Hardware stack levels used:    1
 11017 ;; Hardware stack levels required when called:    7
 11018 ;; This function calls:
 11019 ;;		Nothing
 11020 ;; This function is called by:
 11021 ;;		_TMR5_Initialize
 11022 ;;		_main
 11023 ;; This function uses a non-reentrant model
 11024 ;;
 11025                           
 11026                           
 11027                           ;psect for function _TMR5_SetInterruptHandler
 11028  1700                     _TMR5_SetInterruptHandler:
 11029  1700                     l4120:	
 11030                           ;incstack = 0
 11031                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
 11032                           
 11033                           
 11034                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 11035  1700  0021               	movlb	1	; select bank1
 11036  1701  0821               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11037  1702  00B4               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
 11038  1703  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
 11039  1704  00B3               	movwf	_TMR5_InterruptHandler^(0+128)
 11040  1705                     l717:
 11041  1705  0008               	return
 11042  1706                     __end_of_TMR5_SetInterruptHandler:
 11043                           
 11044                           	psect	text11
 11045  08FD                     __ptext11:	
 11046 ;; *************** function _TMR3_Initialize *****************
 11047 ;; Defined at:
 11048 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 11049 ;; Parameters:    Size  Location     Type
 11050 ;;		None
 11051 ;; Auto vars:     Size  Location     Type
 11052 ;;		None
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  1    wreg      void 
 11055 ;; Registers used:
 11056 ;;		wreg, status,2, status,0, pclath, cstack
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11066 ;;Total ram usage:        0 bytes
 11067 ;; Hardware stack levels used:    1
 11068 ;; Hardware stack levels required when called:    8
 11069 ;; This function calls:
 11070 ;;		_TMR3_SetInterruptHandler
 11071 ;; This function is called by:
 11072 ;;		_SYSTEM_Initialize
 11073 ;; This function uses a non-reentrant model
 11074 ;;
 11075                           
 11076                           
 11077                           ;psect for function _TMR3_Initialize
 11078  08FD                     _TMR3_Initialize:
 11079  08FD                     l4432:	
 11080                           ;incstack = 0
 11081                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11082                           
 11083                           
 11084                           ;tmr3.c: 69: T3GCON = 0x00;
 11085  08FD  0024               	movlb	4	; select bank4
 11086  08FE  0195               	clrf	21	;volatile
 11087                           
 11088                           ;tmr3.c: 72: T3GATE = 0x00;
 11089  08FF  0196               	clrf	22	;volatile
 11090  0900                     l4434:
 11091                           
 11092                           ;tmr3.c: 75: T3CLK = 0x04;
 11093  0900  3004               	movlw	4
 11094  0901  0097               	movwf	23	;volatile
 11095  0902                     l4436:
 11096                           
 11097                           ;tmr3.c: 78: TMR3H = 0xE7;
 11098  0902  30E7               	movlw	231
 11099  0903  0093               	movwf	19	;volatile
 11100  0904                     l4438:
 11101                           
 11102                           ;tmr3.c: 81: TMR3L = 0xC8;
 11103  0904  30C8               	movlw	200
 11104  0905  0092               	movwf	18	;volatile
 11105  0906                     l4440:
 11106                           
 11107                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 11108  0906  0813               	movf	19,w	;volatile
 11109  0907  0020               	movlb	0	; select bank0
 11110  0908  00EF               	movwf	_timer3ReloadVal+1	;volatile
 11111  0909  0024               	movlb	4	; select bank4
 11112  090A  0812               	movf	18,w	;volatile
 11113  090B  0020               	movlb	0	; select bank0
 11114  090C  00EE               	movwf	_timer3ReloadVal	;volatile
 11115  090D                     l4442:
 11116                           
 11117                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 11118  090D  002E               	movlb	14	; select bank14
 11119  090E  1110               	bcf	16,2	;volatile
 11120  090F                     l4444:
 11121                           
 11122                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 11123  090F  151A               	bsf	26,2	;volatile
 11124  0910                     l4446:
 11125                           
 11126                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 11127  0910  3003               	movlw	low _TMR3_DefaultInterruptHandler
 11128  0911  0021               	movlb	1	; select bank1
 11129  0912  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 11130  0913  3000               	movlw	high _TMR3_DefaultInterruptHandler
 11131  0914  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11132  0915  3196  26FA  3188   	fcall	_TMR3_SetInterruptHandler
 11133  0918                     l4448:
 11134                           
 11135                           ;tmr3.c: 96: T3CON = 0x05;
 11136  0918  3005               	movlw	5
 11137  0919  0024               	movlb	4	; select bank4
 11138  091A  0094               	movwf	20	;volatile
 11139  091B                     l463:
 11140  091B  0008               	return
 11141  091C                     __end_of_TMR3_Initialize:
 11142                           
 11143                           	psect	text12
 11144  16FA                     __ptext12:	
 11145 ;; *************** function _TMR3_SetInterruptHandler *****************
 11146 ;; Defined at:
 11147 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11150 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;		None
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  1    wreg      void 
 11155 ;; Registers used:
 11156 ;;		wreg
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11162 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11165 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11166 ;;Total ram usage:        2 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:    7
 11169 ;; This function calls:
 11170 ;;		Nothing
 11171 ;; This function is called by:
 11172 ;;		_TMR3_Initialize
 11173 ;;		_main
 11174 ;; This function uses a non-reentrant model
 11175 ;;
 11176                           
 11177                           
 11178                           ;psect for function _TMR3_SetInterruptHandler
 11179  16FA                     _TMR3_SetInterruptHandler:
 11180  16FA                     l4104:	
 11181                           ;incstack = 0
 11182                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 11183                           
 11184                           
 11185                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 11186  16FA  0021               	movlb	1	; select bank1
 11187  16FB  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11188  16FC  00B8               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 11189  16FD  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 11190  16FE  00B7               	movwf	_TMR3_InterruptHandler^(0+128)
 11191  16FF                     l493:
 11192  16FF  0008               	return
 11193  1700                     __end_of_TMR3_SetInterruptHandler:
 11194                           
 11195                           	psect	text13
 11196  0800                     __ptext13:	
 11197 ;; *************** function _TMR2_Initialize *****************
 11198 ;; Defined at:
 11199 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11200 ;; Parameters:    Size  Location     Type
 11201 ;;		None
 11202 ;; Auto vars:     Size  Location     Type
 11203 ;;		None
 11204 ;; Return value:  Size  Location     Type
 11205 ;;                  1    wreg      void 
 11206 ;; Registers used:
 11207 ;;		wreg, status,2
 11208 ;; Tracked objects:
 11209 ;;		On entry : 0/0
 11210 ;;		On exit  : 0/0
 11211 ;;		Unchanged: 0/0
 11212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11217 ;;Total ram usage:        0 bytes
 11218 ;; Hardware stack levels used:    1
 11219 ;; Hardware stack levels required when called:    7
 11220 ;; This function calls:
 11221 ;;		Nothing
 11222 ;; This function is called by:
 11223 ;;		_SYSTEM_Initialize
 11224 ;; This function uses a non-reentrant model
 11225 ;;
 11226                           
 11227                           
 11228                           ;psect for function _TMR2_Initialize
 11229  0800                     _TMR2_Initialize:
 11230  0800                     l4450:	
 11231                           ;incstack = 0
 11232                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11233                           
 11234                           
 11235                           ;tmr2.c: 67: T2CLKCON = 0x01;
 11236  0800  3001               	movlw	1
 11237  0801  0025               	movlb	5	; select bank5
 11238  0802  0090               	movwf	16	;volatile
 11239  0803                     l4452:
 11240                           
 11241                           ;tmr2.c: 70: T2HLT = 0x00;
 11242  0803  018F               	clrf	15	;volatile
 11243  0804                     l4454:
 11244                           
 11245                           ;tmr2.c: 73: T2RST = 0x00;
 11246  0804  0191               	clrf	17	;volatile
 11247                           
 11248                           ;tmr2.c: 76: T2PR = 0xFF;
 11249  0805  30FF               	movlw	255
 11250  0806  008D               	movwf	13	;volatile
 11251  0807                     l4456:
 11252                           
 11253                           ;tmr2.c: 79: T2TMR = 0x00;
 11254  0807  018C               	clrf	12	;volatile
 11255  0808                     l4458:
 11256                           
 11257                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 11258  0808  002E               	movlb	14	; select bank14
 11259  0809  1090               	bcf	16,1	;volatile
 11260  080A                     l4460:
 11261                           
 11262                           ;tmr2.c: 85: T2CON = 0x80;
 11263  080A  3080               	movlw	128
 11264  080B  0025               	movlb	5	; select bank5
 11265  080C  008E               	movwf	14	;volatile
 11266  080D                     l761:
 11267  080D  0008               	return
 11268  080E                     __end_of_TMR2_Initialize:
 11269                           
 11270                           	psect	text14
 11271  08DE                     __ptext14:	
 11272 ;; *************** function _TMR1_Initialize *****************
 11273 ;; Defined at:
 11274 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;		None
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;		None
 11279 ;; Return value:  Size  Location     Type
 11280 ;;                  1    wreg      void 
 11281 ;; Registers used:
 11282 ;;		wreg, status,2, status,0, pclath, cstack
 11283 ;; Tracked objects:
 11284 ;;		On entry : 0/0
 11285 ;;		On exit  : 0/0
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11292 ;;Total ram usage:        0 bytes
 11293 ;; Hardware stack levels used:    1
 11294 ;; Hardware stack levels required when called:    8
 11295 ;; This function calls:
 11296 ;;		_TMR1_SetInterruptHandler
 11297 ;; This function is called by:
 11298 ;;		_SYSTEM_Initialize
 11299 ;; This function uses a non-reentrant model
 11300 ;;
 11301                           
 11302                           
 11303                           ;psect for function _TMR1_Initialize
 11304  08DE                     _TMR1_Initialize:
 11305  08DE                     l4486:	
 11306                           ;incstack = 0
 11307                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11308                           
 11309                           
 11310                           ;tmr1.c: 69: T1GCON = 0x00;
 11311  08DE  0024               	movlb	4	; select bank4
 11312  08DF  018F               	clrf	15	;volatile
 11313                           
 11314                           ;tmr1.c: 72: T1GATE = 0x00;
 11315  08E0  0190               	clrf	16	;volatile
 11316  08E1                     l4488:
 11317                           
 11318                           ;tmr1.c: 75: T1CLK = 0x04;
 11319  08E1  3004               	movlw	4
 11320  08E2  0091               	movwf	17	;volatile
 11321  08E3                     l4490:
 11322                           
 11323                           ;tmr1.c: 78: TMR1H = 0x86;
 11324  08E3  3086               	movlw	134
 11325  08E4  008D               	movwf	13	;volatile
 11326  08E5                     l4492:
 11327                           
 11328                           ;tmr1.c: 81: TMR1L = 0xE8;
 11329  08E5  30E8               	movlw	232
 11330  08E6  008C               	movwf	12	;volatile
 11331  08E7                     l4494:
 11332                           
 11333                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 11334  08E7  080D               	movf	13,w	;volatile
 11335  08E8  0021               	movlb	1	; select bank1
 11336  08E9  00BC               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 11337  08EA  0024               	movlb	4	; select bank4
 11338  08EB  080C               	movf	12,w	;volatile
 11339  08EC  0021               	movlb	1	; select bank1
 11340  08ED  00BB               	movwf	_timer1ReloadVal^(0+128)	;volatile
 11341  08EE                     l4496:
 11342                           
 11343                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 11344  08EE  002E               	movlb	14	; select bank14
 11345  08EF  1010               	bcf	16,0	;volatile
 11346  08F0                     l4498:
 11347                           
 11348                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 11349  08F0  141A               	bsf	26,0	;volatile
 11350  08F1                     l4500:
 11351                           
 11352                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 11353  08F1  3002               	movlw	low _TMR1_DefaultInterruptHandler
 11354  08F2  0021               	movlb	1	; select bank1
 11355  08F3  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 11356  08F4  3000               	movlw	high _TMR1_DefaultInterruptHandler
 11357  08F5  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11358  08F6  3196  26F4  3188   	fcall	_TMR1_SetInterruptHandler
 11359  08F9                     l4502:
 11360                           
 11361                           ;tmr1.c: 96: T1CON = 0x05;
 11362  08F9  3005               	movlw	5
 11363  08FA  0024               	movlb	4	; select bank4
 11364  08FB  008E               	movwf	14	;volatile
 11365  08FC                     l399:
 11366  08FC  0008               	return
 11367  08FD                     __end_of_TMR1_Initialize:
 11368                           
 11369                           	psect	text15
 11370  16F4                     __ptext15:	
 11371 ;; *************** function _TMR1_SetInterruptHandler *****************
 11372 ;; Defined at:
 11373 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11376 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;		None
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      void 
 11381 ;; Registers used:
 11382 ;;		wreg
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/0
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11388 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;Total ram usage:        2 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; Hardware stack levels required when called:    7
 11395 ;; This function calls:
 11396 ;;		Nothing
 11397 ;; This function is called by:
 11398 ;;		_TMR1_Initialize
 11399 ;;		_main
 11400 ;; This function uses a non-reentrant model
 11401 ;;
 11402                           
 11403                           
 11404                           ;psect for function _TMR1_SetInterruptHandler
 11405  16F4                     _TMR1_SetInterruptHandler:
 11406  16F4                     l4102:	
 11407                           ;incstack = 0
 11408                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 11409                           
 11410                           
 11411                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 11412  16F4  0021               	movlb	1	; select bank1
 11413  16F5  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11414  16F6  00BA               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 11415  16F7  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
 11416  16F8  00B9               	movwf	_TMR1_InterruptHandler^(0+128)
 11417  16F9                     l429:
 11418  16F9  0008               	return
 11419  16FA                     __end_of_TMR1_SetInterruptHandler:
 11420                           
 11421                           	psect	text16
 11422  1752                     __ptext16:	
 11423 ;; *************** function _PWM6_Initialize *****************
 11424 ;; Defined at:
 11425 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 11426 ;; Parameters:    Size  Location     Type
 11427 ;;		None
 11428 ;; Auto vars:     Size  Location     Type
 11429 ;;		None
 11430 ;; Return value:  Size  Location     Type
 11431 ;;                  1    wreg      void 
 11432 ;; Registers used:
 11433 ;;		wreg, status,2, status,0
 11434 ;; Tracked objects:
 11435 ;;		On entry : 0/0
 11436 ;;		On exit  : 0/0
 11437 ;;		Unchanged: 0/0
 11438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;Total ram usage:        0 bytes
 11444 ;; Hardware stack levels used:    1
 11445 ;; Hardware stack levels required when called:    7
 11446 ;; This function calls:
 11447 ;;		Nothing
 11448 ;; This function is called by:
 11449 ;;		_SYSTEM_Initialize
 11450 ;; This function uses a non-reentrant model
 11451 ;;
 11452                           
 11453                           
 11454                           ;psect for function _PWM6_Initialize
 11455  1752                     _PWM6_Initialize:
 11456  1752                     l4422:	
 11457                           ;incstack = 0
 11458                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 11459                           
 11460                           
 11461                           ;pwm6.c: 62: PWM6CON = 0x80;
 11462  1752  3080               	movlw	128
 11463  1753  0027               	movlb	7	; select bank7
 11464  1754  008E               	movwf	14	;volatile
 11465                           
 11466                           ;pwm6.c: 65: PWM6DCH = 0xFF;
 11467  1755  30FF               	movlw	255
 11468  1756  008D               	movwf	13	;volatile
 11469                           
 11470                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 11471  1757  30C0               	movlw	192
 11472  1758  008C               	movwf	12	;volatile
 11473  1759                     l4424:
 11474                           
 11475                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 11476  1759  0024               	movlb	4	; select bank4
 11477  175A  081F               	movf	31,w	;volatile
 11478  175B  39F3               	andlw	-13
 11479  175C  3804               	iorlw	4
 11480  175D  009F               	movwf	31	;volatile
 11481  175E                     l731:
 11482  175E  0008               	return
 11483  175F                     __end_of_PWM6_Initialize:
 11484                           
 11485                           	psect	text17
 11486  1728                     __ptext17:	
 11487 ;; *************** function _PMD_Initialize *****************
 11488 ;; Defined at:
 11489 ;;		line 78 in file "mcc_generated_files/mcc.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;		None
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;		None
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  1    wreg      void 
 11496 ;; Registers used:
 11497 ;;		status,2
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11507 ;;Total ram usage:        0 bytes
 11508 ;; Hardware stack levels used:    1
 11509 ;; Hardware stack levels required when called:    7
 11510 ;; This function calls:
 11511 ;;		Nothing
 11512 ;; This function is called by:
 11513 ;;		_SYSTEM_Initialize
 11514 ;; This function uses a non-reentrant model
 11515 ;;
 11516                           
 11517                           
 11518                           ;psect for function _PMD_Initialize
 11519  1728                     _PMD_Initialize:
 11520  1728                     l4412:	
 11521                           ;incstack = 0
 11522                           ; Regs used in _PMD_Initialize: [status,2]
 11523                           
 11524                           
 11525                           ;mcc.c: 81: PMD0 = 0x00;
 11526  1728  002F               	movlb	15	; select bank15
 11527  1729  0196               	clrf	22	;volatile
 11528                           
 11529                           ;mcc.c: 83: PMD1 = 0x00;
 11530  172A  0197               	clrf	23	;volatile
 11531                           
 11532                           ;mcc.c: 85: PMD2 = 0x00;
 11533  172B  0198               	clrf	24	;volatile
 11534                           
 11535                           ;mcc.c: 87: PMD3 = 0x00;
 11536  172C  0199               	clrf	25	;volatile
 11537                           
 11538                           ;mcc.c: 89: PMD4 = 0x00;
 11539  172D  019A               	clrf	26	;volatile
 11540                           
 11541                           ;mcc.c: 91: PMD5 = 0x00;
 11542  172E  019B               	clrf	27	;volatile
 11543  172F                     l182:
 11544  172F  0008               	return
 11545  1730                     __end_of_PMD_Initialize:
 11546                           
 11547                           	psect	text18
 11548  0A74                     __ptext18:	
 11549 ;; *************** function _PIN_MANAGER_Initialize *****************
 11550 ;; Defined at:
 11551 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11552 ;; Parameters:    Size  Location     Type
 11553 ;;		None
 11554 ;; Auto vars:     Size  Location     Type
 11555 ;;		None
 11556 ;; Return value:  Size  Location     Type
 11557 ;;                  1    wreg      void 
 11558 ;; Registers used:
 11559 ;;		wreg, status,2
 11560 ;; Tracked objects:
 11561 ;;		On entry : 0/0
 11562 ;;		On exit  : 0/0
 11563 ;;		Unchanged: 0/0
 11564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11569 ;;Total ram usage:        0 bytes
 11570 ;; Hardware stack levels used:    1
 11571 ;; Hardware stack levels required when called:    7
 11572 ;; This function calls:
 11573 ;;		Nothing
 11574 ;; This function is called by:
 11575 ;;		_SYSTEM_Initialize
 11576 ;; This function uses a non-reentrant model
 11577 ;;
 11578                           
 11579                           
 11580                           ;psect for function _PIN_MANAGER_Initialize
 11581  0A74                     _PIN_MANAGER_Initialize:
 11582  0A74                     l4368:	
 11583                           ;incstack = 0
 11584                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11585                           
 11586                           
 11587                           ;pin_manager.c: 62: LATE = 0x00;
 11588  0A74  0020               	movlb	0	; select bank0
 11589  0A75  019A               	clrf	26	;volatile
 11590                           
 11591                           ;pin_manager.c: 63: LATD = 0x00;
 11592  0A76  0199               	clrf	25	;volatile
 11593                           
 11594                           ;pin_manager.c: 64: LATA = 0x00;
 11595  0A77  0196               	clrf	22	;volatile
 11596                           
 11597                           ;pin_manager.c: 65: LATB = 0x00;
 11598  0A78  0197               	clrf	23	;volatile
 11599                           
 11600                           ;pin_manager.c: 66: LATC = 0x00;
 11601  0A79  0198               	clrf	24	;volatile
 11602  0A7A                     l4370:
 11603                           
 11604                           ;pin_manager.c: 71: TRISE = 0x07;
 11605  0A7A  3007               	movlw	7
 11606  0A7B  0095               	movwf	21	;volatile
 11607  0A7C                     l4372:
 11608                           
 11609                           ;pin_manager.c: 72: TRISA = 0x0F;
 11610  0A7C  300F               	movlw	15
 11611  0A7D  0091               	movwf	17	;volatile
 11612  0A7E                     l4374:
 11613                           
 11614                           ;pin_manager.c: 73: TRISB = 0xFF;
 11615  0A7E  30FF               	movlw	255
 11616  0A7F  0092               	movwf	18	;volatile
 11617  0A80                     l4376:
 11618                           
 11619                           ;pin_manager.c: 74: TRISC = 0xFF;
 11620  0A80  30FF               	movlw	255
 11621  0A81  0093               	movwf	19	;volatile
 11622  0A82                     l4378:
 11623                           
 11624                           ;pin_manager.c: 75: TRISD = 0xFF;
 11625  0A82  30FF               	movlw	255
 11626  0A83  0094               	movwf	20	;volatile
 11627  0A84                     l4380:
 11628                           
 11629                           ;pin_manager.c: 80: ANSELD = 0xFF;
 11630  0A84  30FF               	movlw	255
 11631  0A85  003E               	movlb	30	; select bank30
 11632  0A86  00D9               	movwf	89	;volatile
 11633  0A87                     l4382:
 11634                           
 11635                           ;pin_manager.c: 81: ANSELC = 0xC7;
 11636  0A87  30C7               	movlw	199
 11637  0A88  00CE               	movwf	78	;volatile
 11638  0A89                     l4384:
 11639                           
 11640                           ;pin_manager.c: 82: ANSELB = 0xEF;
 11641  0A89  30EF               	movlw	239
 11642  0A8A  00C3               	movwf	67	;volatile
 11643  0A8B                     l4386:
 11644                           
 11645                           ;pin_manager.c: 83: ANSELE = 0x07;
 11646  0A8B  3007               	movlw	7
 11647  0A8C  00E4               	movwf	100	;volatile
 11648  0A8D                     l4388:
 11649                           
 11650                           ;pin_manager.c: 84: ANSELA = 0x4F;
 11651  0A8D  304F               	movlw	79
 11652  0A8E  00B8               	movwf	56	;volatile
 11653                           
 11654                           ;pin_manager.c: 89: WPUD = 0x00;
 11655  0A8F  01DA               	clrf	90	;volatile
 11656                           
 11657                           ;pin_manager.c: 90: WPUE = 0x00;
 11658  0A90  01E5               	clrf	101	;volatile
 11659                           
 11660                           ;pin_manager.c: 91: WPUB = 0x00;
 11661  0A91  01C4               	clrf	68	;volatile
 11662                           
 11663                           ;pin_manager.c: 92: WPUA = 0x00;
 11664  0A92  01B9               	clrf	57	;volatile
 11665                           
 11666                           ;pin_manager.c: 93: WPUC = 0x00;
 11667  0A93  01CF               	clrf	79	;volatile
 11668                           
 11669                           ;pin_manager.c: 98: ODCONE = 0x00;
 11670  0A94  01E6               	clrf	102	;volatile
 11671                           
 11672                           ;pin_manager.c: 99: ODCONA = 0x00;
 11673  0A95  01BA               	clrf	58	;volatile
 11674                           
 11675                           ;pin_manager.c: 100: ODCONB = 0x00;
 11676  0A96  01C5               	clrf	69	;volatile
 11677                           
 11678                           ;pin_manager.c: 101: ODCONC = 0x00;
 11679  0A97  01D0               	clrf	80	;volatile
 11680                           
 11681                           ;pin_manager.c: 102: ODCOND = 0x00;
 11682  0A98  01DB               	clrf	91	;volatile
 11683  0A99                     l4390:
 11684                           
 11685                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 11686  0A99  30FF               	movlw	255
 11687  0A9A  00BB               	movwf	59	;volatile
 11688  0A9B                     l4392:
 11689                           
 11690                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 11691  0A9B  30FF               	movlw	255
 11692  0A9C  00C6               	movwf	70	;volatile
 11693  0A9D                     l4394:
 11694                           
 11695                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 11696  0A9D  30FF               	movlw	255
 11697  0A9E  00D1               	movwf	81	;volatile
 11698  0A9F                     l4396:
 11699                           
 11700                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 11701  0A9F  30FF               	movlw	255
 11702  0AA0  00DC               	movwf	92	;volatile
 11703  0AA1                     l4398:
 11704                           
 11705                           ;pin_manager.c: 111: SLRCONE = 0x07;
 11706  0AA1  3007               	movlw	7
 11707  0AA2  00E7               	movwf	103	;volatile
 11708  0AA3                     l4400:
 11709                           
 11710                           ;pin_manager.c: 120: INTPPS = 0x0C;
 11711  0AA3  300C               	movlw	12
 11712  0AA4  003D               	movlb	29	; select bank29
 11713  0AA5  0090               	movwf	16	;volatile
 11714  0AA6                     l4402:
 11715                           
 11716                           ;pin_manager.c: 121: SSP1CLKPPS = 0x13;
 11717  0AA6  3013               	movlw	19
 11718  0AA7  00C5               	movwf	69	;volatile
 11719  0AA8                     l4404:
 11720                           
 11721                           ;pin_manager.c: 122: RC3PPS = 0x14;
 11722  0AA8  3014               	movlw	20
 11723  0AA9  003E               	movlb	30	; select bank30
 11724  0AAA  00A3               	movwf	35	;volatile
 11725  0AAB                     l4406:
 11726                           
 11727                           ;pin_manager.c: 123: RC4PPS = 0x15;
 11728  0AAB  3015               	movlw	21
 11729  0AAC  00A4               	movwf	36	;volatile
 11730  0AAD                     l4408:
 11731                           
 11732                           ;pin_manager.c: 124: RA6PPS = 0x0E;
 11733  0AAD  300E               	movlw	14
 11734  0AAE  0096               	movwf	22	;volatile
 11735  0AAF                     l4410:
 11736                           
 11737                           ;pin_manager.c: 125: SSP1DATPPS = 0x14;
 11738  0AAF  3014               	movlw	20
 11739  0AB0  003D               	movlb	29	; select bank29
 11740  0AB1  00C6               	movwf	70	;volatile
 11741  0AB2                     l124:
 11742  0AB2  0008               	return
 11743  0AB3                     __end_of_PIN_MANAGER_Initialize:
 11744                           
 11745                           	psect	text19
 11746  1730                     __ptext19:	
 11747 ;; *************** function _OSCILLATOR_Initialize *****************
 11748 ;; Defined at:
 11749 ;;		line 64 in file "mcc_generated_files/mcc.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;		None
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;		None
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1    wreg      void 
 11756 ;; Registers used:
 11757 ;;		wreg, status,2
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;Total ram usage:        0 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; Hardware stack levels required when called:    7
 11770 ;; This function calls:
 11771 ;;		Nothing
 11772 ;; This function is called by:
 11773 ;;		_SYSTEM_Initialize
 11774 ;; This function uses a non-reentrant model
 11775 ;;
 11776                           
 11777                           
 11778                           ;psect for function _OSCILLATOR_Initialize
 11779  1730                     _OSCILLATOR_Initialize:
 11780  1730                     l4414:	
 11781                           ;incstack = 0
 11782                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11783                           
 11784                           
 11785                           ;mcc.c: 67: OSCCON1 = 0x62;
 11786  1730  3062               	movlw	98
 11787  1731  0031               	movlb	17	; select bank17
 11788  1732  008D               	movwf	13	;volatile
 11789  1733                     l4416:
 11790                           
 11791                           ;mcc.c: 69: OSCCON3 = 0x00;
 11792  1733  018F               	clrf	15	;volatile
 11793  1734                     l4418:
 11794                           
 11795                           ;mcc.c: 71: OSCEN = 0x00;
 11796  1734  0191               	clrf	17	;volatile
 11797                           
 11798                           ;mcc.c: 73: OSCFRQ = 0x02;
 11799  1735  3002               	movlw	2
 11800  1736  0093               	movwf	19	;volatile
 11801  1737                     l4420:
 11802                           
 11803                           ;mcc.c: 75: OSCTUNE = 0x00;
 11804  1737  0192               	clrf	18	;volatile
 11805  1738                     l179:
 11806  1738  0008               	return
 11807  1739                     __end_of_OSCILLATOR_Initialize:
 11808                           
 11809                           	psect	text20
 11810  175F                     __ptext20:	
 11811 ;; *************** function _EXT_INT_Initialize *****************
 11812 ;; Defined at:
 11813 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 11814 ;; Parameters:    Size  Location     Type
 11815 ;;		None
 11816 ;; Auto vars:     Size  Location     Type
 11817 ;;		None
 11818 ;; Return value:  Size  Location     Type
 11819 ;;                  1    wreg      void 
 11820 ;; Registers used:
 11821 ;;		wreg, status,2, status,0, pclath, cstack
 11822 ;; Tracked objects:
 11823 ;;		On entry : 0/0
 11824 ;;		On exit  : 0/0
 11825 ;;		Unchanged: 0/0
 11826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11831 ;;Total ram usage:        0 bytes
 11832 ;; Hardware stack levels used:    1
 11833 ;; Hardware stack levels required when called:    8
 11834 ;; This function calls:
 11835 ;;		_INT_SetInterruptHandler
 11836 ;; This function is called by:
 11837 ;;		_SYSTEM_Initialize
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841                           
 11842                           ;psect for function _EXT_INT_Initialize
 11843  175F                     _EXT_INT_Initialize:
 11844  175F                     l4480:	
 11845                           ;incstack = 0
 11846                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11847                           
 11848                           
 11849                           ;ext_int.c: 64: (PIR0bits.INTF = 0);
 11850  175F  002E               	movlb	14	; select bank14
 11851  1760  100C               	bcf	12,0	;volatile
 11852                           
 11853                           ;ext_int.c: 66: (INTCONbits.INTEDG = 1);
 11854  1761  140B               	bsf	11,0	;volatile
 11855  1762                     l4482:
 11856                           
 11857                           ;ext_int.c: 68: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
 11858  1762  30CD               	movlw	low _INT_DefaultInterruptHandler
 11859  1763  0021               	movlb	1	; select bank1
 11860  1764  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 11861  1765  3016               	movlw	high _INT_DefaultInterruptHandler
 11862  1766  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11863  1767  3196  26EE  3197   	fcall	_INT_SetInterruptHandler
 11864  176A                     l4484:
 11865                           
 11866                           ;ext_int.c: 69: (PIE0bits.INTE = 1);
 11867  176A  002E               	movlb	14	; select bank14
 11868  176B  1416               	bsf	22,0	;volatile
 11869  176C                     l874:
 11870  176C  0008               	return
 11871  176D                     __end_of_EXT_INT_Initialize:
 11872                           
 11873                           	psect	text21
 11874  16EE                     __ptext21:	
 11875 ;; *************** function _INT_SetInterruptHandler *****************
 11876 ;; Defined at:
 11877 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11880 ;;		 -> S1_ISR(1), INT_DefaultInterruptHandler(1), 
 11881 ;; Auto vars:     Size  Location     Type
 11882 ;;		None
 11883 ;; Return value:  Size  Location     Type
 11884 ;;                  1    wreg      void 
 11885 ;; Registers used:
 11886 ;;		wreg
 11887 ;; Tracked objects:
 11888 ;;		On entry : 0/0
 11889 ;;		On exit  : 0/0
 11890 ;;		Unchanged: 0/0
 11891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11892 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11895 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;Total ram usage:        2 bytes
 11897 ;; Hardware stack levels used:    1
 11898 ;; Hardware stack levels required when called:    7
 11899 ;; This function calls:
 11900 ;;		Nothing
 11901 ;; This function is called by:
 11902 ;;		_EXT_INT_Initialize
 11903 ;;		_main
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           
 11908                           ;psect for function _INT_SetInterruptHandler
 11909  16EE                     _INT_SetInterruptHandler:
 11910  16EE                     l4124:	
 11911                           ;incstack = 0
 11912                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 11913                           
 11914                           
 11915                           ;ext_int.c: 51: INT_InterruptHandler = InterruptHandler;
 11916  16EE  0021               	movlb	1	; select bank1
 11917  16EF  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11918  16F0  00B2               	movwf	(_INT_InterruptHandler+1)^(0+128)
 11919  16F1  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 11920  16F2  00B1               	movwf	_INT_InterruptHandler^(0+128)
 11921  16F3                     l868:
 11922  16F3  0008               	return
 11923  16F4                     __end_of_INT_SetInterruptHandler:
 11924                           
 11925                           	psect	text22
 11926  083C                     __ptext22:	
 11927 ;; *************** function _ADCC_Initialize *****************
 11928 ;; Defined at:
 11929 ;;		line 63 in file "mcc_generated_files/adcc.c"
 11930 ;; Parameters:    Size  Location     Type
 11931 ;;		None
 11932 ;; Auto vars:     Size  Location     Type
 11933 ;;		None
 11934 ;; Return value:  Size  Location     Type
 11935 ;;                  1    wreg      void 
 11936 ;; Registers used:
 11937 ;;		wreg, status,2
 11938 ;; Tracked objects:
 11939 ;;		On entry : 0/0
 11940 ;;		On exit  : 0/0
 11941 ;;		Unchanged: 0/0
 11942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;Total ram usage:        0 bytes
 11948 ;; Hardware stack levels used:    1
 11949 ;; Hardware stack levels required when called:    7
 11950 ;; This function calls:
 11951 ;;		Nothing
 11952 ;; This function is called by:
 11953 ;;		_SYSTEM_Initialize
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           
 11957                           
 11958                           ;psect for function _ADCC_Initialize
 11959  083C                     _ADCC_Initialize:
 11960  083C                     l4426:	
 11961                           ;incstack = 0
 11962                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 11963                           
 11964                           
 11965                           ;adcc.c: 67: ADLTHL = 0x00;
 11966  083C  0022               	movlb	2	; select bank2
 11967  083D  018E               	clrf	14	;volatile
 11968                           
 11969                           ;adcc.c: 69: ADLTHH = 0x00;
 11970  083E  018F               	clrf	15	;volatile
 11971                           
 11972                           ;adcc.c: 71: ADUTHL = 0x00;
 11973  083F  0190               	clrf	16	;volatile
 11974                           
 11975                           ;adcc.c: 73: ADUTHH = 0x00;
 11976  0840  0191               	clrf	17	;volatile
 11977                           
 11978                           ;adcc.c: 75: ADSTPTL = 0x00;
 11979  0841  0192               	clrf	18	;volatile
 11980                           
 11981                           ;adcc.c: 77: ADSTPTH = 0x00;
 11982  0842  0193               	clrf	19	;volatile
 11983                           
 11984                           ;adcc.c: 79: ADRPT = 0x00;
 11985  0843  018D               	clrf	13	;volatile
 11986                           
 11987                           ;adcc.c: 81: ADPCH = 0x00;
 11988  0844  0021               	movlb	1	; select bank1
 11989  0845  019E               	clrf	30	;volatile
 11990                           
 11991                           ;adcc.c: 83: ADCAP = 0x00;
 11992  0846  019B               	clrf	27	;volatile
 11993                           
 11994                           ;adcc.c: 85: ADCON1 = 0x00;
 11995  0847  0194               	clrf	20	;volatile
 11996                           
 11997                           ;adcc.c: 87: ADCON2 = 0x00;
 11998  0848  0195               	clrf	21	;volatile
 11999                           
 12000                           ;adcc.c: 89: ADCON3 = 0x00;
 12001  0849  0196               	clrf	22	;volatile
 12002                           
 12003                           ;adcc.c: 91: ADSTAT = 0x00;
 12004  084A  0197               	clrf	23	;volatile
 12005                           
 12006                           ;adcc.c: 93: ADREF = 0x00;
 12007  084B  019A               	clrf	26	;volatile
 12008                           
 12009                           ;adcc.c: 95: ADACT = 0x00;
 12010  084C  0199               	clrf	25	;volatile
 12011                           
 12012                           ;adcc.c: 97: ADCLK = 0x00;
 12013  084D  0198               	clrf	24	;volatile
 12014  084E                     l4428:
 12015                           
 12016                           ;adcc.c: 99: ADCON0 = 0x80;
 12017  084E  3080               	movlw	128
 12018  084F  0093               	movwf	19	;volatile
 12019  0850                     l4430:
 12020                           
 12021                           ;adcc.c: 101: ADACQ = 0xFF;
 12022  0850  30FF               	movlw	255
 12023  0851  009D               	movwf	29	;volatile
 12024  0852                     l575:
 12025  0852  0008               	return
 12026  0853                     __end_of_ADCC_Initialize:
 12027                           
 12028                           	psect	text23
 12029  16DA                     __ptext23:	
 12030 ;; *************** function _PWM_Output_D4_Disable *****************
 12031 ;; Defined at:
 12032 ;;		line 246 in file "main.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;		None
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;		None
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  1    wreg      void 
 12039 ;; Registers used:
 12040 ;;		None
 12041 ;; Tracked objects:
 12042 ;;		On entry : 0/0
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;Total ram usage:        0 bytes
 12051 ;; Hardware stack levels used:    1
 12052 ;; Hardware stack levels required when called:    7
 12053 ;; This function calls:
 12054 ;;		Nothing
 12055 ;; This function is called by:
 12056 ;;		_main
 12057 ;; This function uses a non-reentrant model
 12058 ;;
 12059                           
 12060                           
 12061                           ;psect for function _PWM_Output_D4_Disable
 12062  16DA                     _PWM_Output_D4_Disable:
 12063  16DA                     l5062:	
 12064                           ;incstack = 0
 12065                           ; Regs used in _PWM_Output_D4_Disable: []
 12066                           
 12067                           
 12068                           ;main.c: 247: PWM6EN = 0;
 12069  16DA  0027               	movlb	7	; select bank7
 12070  16DB  138E               	bcf	14,7	;volatile
 12071  16DC                     l1195:
 12072  16DC  0008               	return
 12073  16DD                     __end_of_PWM_Output_D4_Disable:
 12074                           
 12075                           	psect	text24
 12076  0853                     __ptext24:	
 12077 ;; *************** function _PWM6_LoadDutyValue *****************
 12078 ;; Defined at:
 12079 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 12080 ;; Parameters:    Size  Location     Type
 12081 ;;  dutyValue       2    0[BANK1 ] unsigned int 
 12082 ;; Auto vars:     Size  Location     Type
 12083 ;;		None
 12084 ;; Return value:  Size  Location     Type
 12085 ;;                  1    wreg      void 
 12086 ;; Registers used:
 12087 ;;		wreg, status,2, status,0
 12088 ;; Tracked objects:
 12089 ;;		On entry : 0/0
 12090 ;;		On exit  : 0/0
 12091 ;;		Unchanged: 0/0
 12092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12093 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12095 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12096 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12097 ;;Total ram usage:        4 bytes
 12098 ;; Hardware stack levels used:    1
 12099 ;; Hardware stack levels required when called:    7
 12100 ;; This function calls:
 12101 ;;		Nothing
 12102 ;; This function is called by:
 12103 ;;		_main
 12104 ;; This function uses a non-reentrant model
 12105 ;;
 12106                           
 12107                           
 12108                           ;psect for function _PWM6_LoadDutyValue
 12109  0853                     _PWM6_LoadDutyValue:
 12110  0853                     l4922:	
 12111                           ;incstack = 0
 12112                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12113                           
 12114                           
 12115                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 12116  0853  0021               	movlb	1	; select bank1
 12117  0854  0821               	movf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128),w
 12118  0855  00A3               	movwf	(??_PWM6_LoadDutyValue^(0+128)+1)
 12119  0856  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 12120  0857  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 12121  0858  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 12122  0859  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 12123  085A  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 12124  085B  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 12125  085C  0822               	movf	??_PWM6_LoadDutyValue^(0+128),w
 12126  085D  0027               	movlb	7	; select bank7
 12127  085E  008D               	movwf	13	;volatile
 12128                           
 12129                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 12130  085F  0021               	movlb	1	; select bank1
 12131  0860  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 12132  0861  3903               	andlw	3
 12133  0862  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 12134  0863  3005               	movlw	5
 12135  0864                     u4485:
 12136  0864  35A2               	lslf	??_PWM6_LoadDutyValue^(0+128),f
 12137  0865  3EFF               	addlw	-1
 12138  0866  1D03               	skipz
 12139  0867  2864               	goto	u4485
 12140  0868  3522               	lslf	??_PWM6_LoadDutyValue^(0+128),w
 12141  0869  0027               	movlb	7	; select bank7
 12142  086A  008C               	movwf	12	;volatile
 12143  086B                     l734:
 12144  086B  0008               	return
 12145  086C                     __end_of_PWM6_LoadDutyValue:
 12146                           
 12147                           	psect	text25
 12148  0751                     __ptext25:	
 12149 ;; *************** function _LCDinit *****************
 12150 ;; Defined at:
 12151 ;;		line 173 in file "main.c"
 12152 ;; Parameters:    Size  Location     Type
 12153 ;;		None
 12154 ;; Auto vars:     Size  Location     Type
 12155 ;;		None
 12156 ;; Return value:  Size  Location     Type
 12157 ;;                  1    wreg      void 
 12158 ;; Registers used:
 12159 ;;		wreg, status,2, status,0, pclath, cstack
 12160 ;; Tracked objects:
 12161 ;;		On entry : 0/0
 12162 ;;		On exit  : 0/0
 12163 ;;		Unchanged: 0/0
 12164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12167 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12168 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12169 ;;Total ram usage:        1 bytes
 12170 ;; Hardware stack levels used:    1
 12171 ;; Hardware stack levels required when called:    9
 12172 ;; This function calls:
 12173 ;;		_LCDsend
 12174 ;;		_LCDsend2x4
 12175 ;; This function is called by:
 12176 ;;		_main
 12177 ;; This function uses a non-reentrant model
 12178 ;;
 12179                           
 12180                           
 12181                           ;psect for function _LCDinit
 12182  0751                     _LCDinit:
 12183  0751                     l5028:	
 12184                           ;incstack = 0
 12185                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 12186                           
 12187                           
 12188                           ;main.c: 175: _delay((unsigned long)((50)*(1000000/4000.0)));
 12189  0751  3011               	movlw	17
 12190  0752  0021               	movlb	1	; select bank1
 12191  0753  00A8               	movwf	??_LCDinit^(0+128)
 12192  0754  303A               	movlw	58
 12193  0755                     u5197:
 12194  0755  0B89               	decfsz	9,f
 12195  0756  2F55               	goto	u5197
 12196  0757  0BA8               	decfsz	??_LCDinit^(0+128),f
 12197  0758  2F55               	goto	u5197
 12198  0759  0000               	nop
 12199  075A                     l5030:
 12200                           
 12201                           ;main.c: 176: LCDsend(0x30);
 12202  075A  3030               	movlw	48
 12203  075B  318A  22FE  3187   	fcall	_LCDsend
 12204  075E                     l5032:
 12205                           
 12206                           ;main.c: 177: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 12207  075E  3034               	movlw	52
 12208  075F  318A  22FE  3187   	fcall	_LCDsend
 12209  0762  3029               	movlw	41
 12210  0763                     u5207:
 12211  0763  0B89               	decfsz	9,f
 12212  0764  2F63               	goto	u5207
 12213  0765  3200               	nop2
 12214  0766                     l5034:
 12215  0766  3030               	movlw	48
 12216  0767  318A  22FE  3187   	fcall	_LCDsend
 12217  076A                     l5036:
 12218                           
 12219                           ;main.c: 178: _delay((unsigned long)((5)*(1000000/4000.0)));
 12220  076A  30FA               	movlw	250
 12221  076B                     u5217:
 12222  076B  3200               	nop2
 12223  076C  0B89               	decfsz	9,f
 12224  076D  2F6B               	goto	u5217
 12225                           
 12226                           ;main.c: 179: LCDsend(0x30);
 12227  076E  3030               	movlw	48
 12228  076F  318A  22FE  3187   	fcall	_LCDsend
 12229                           
 12230                           ;main.c: 180: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 12231  0772  3034               	movlw	52
 12232  0773  318A  22FE  3187   	fcall	_LCDsend
 12233  0776                     l5038:
 12234  0776  3029               	movlw	41
 12235  0777                     u5227:
 12236  0777  0B89               	decfsz	9,f
 12237  0778  2F77               	goto	u5227
 12238  0779  3200               	nop2
 12239  077A                     l5040:
 12240  077A  3030               	movlw	48
 12241  077B  318A  22FE  3187   	fcall	_LCDsend
 12242                           
 12243                           ;main.c: 181: _delay((unsigned long)((100)*(1000000/4000000.0)));
 12244  077E  3008               	movlw	8
 12245  077F                     u5237:
 12246  077F  0B89               	decfsz	9,f
 12247  0780  2F7F               	goto	u5237
 12248  0781  0000               	nop
 12249  0782                     l5042:
 12250                           
 12251                           ;main.c: 182: LCDsend(0x30);
 12252  0782  3030               	movlw	48
 12253  0783  318A  22FE  3187   	fcall	_LCDsend
 12254  0786                     l5044:
 12255                           
 12256                           ;main.c: 183: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 12257  0786  3034               	movlw	52
 12258  0787  318A  22FE  3187   	fcall	_LCDsend
 12259  078A  3029               	movlw	41
 12260  078B                     u5247:
 12261  078B  0B89               	decfsz	9,f
 12262  078C  2F8B               	goto	u5247
 12263  078D  3200               	nop2
 12264  078E                     l5046:
 12265  078E  3030               	movlw	48
 12266  078F  318A  22FE  3187   	fcall	_LCDsend
 12267  0792                     l5048:
 12268                           
 12269                           ;main.c: 184: _delay((unsigned long)((100)*(1000000/4000000.0)));
 12270  0792  3008               	movlw	8
 12271  0793                     u5257:
 12272  0793  0B89               	decfsz	9,f
 12273  0794  2F93               	goto	u5257
 12274  0795  0000               	nop
 12275                           
 12276                           ;main.c: 185: LCDsend(0x20);
 12277  0796  3020               	movlw	32
 12278  0797  318A  22FE  3187   	fcall	_LCDsend
 12279                           
 12280                           ;main.c: 186: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 12281  079A  3024               	movlw	36
 12282  079B  318A  22FE  3187   	fcall	_LCDsend
 12283  079E                     l5050:
 12284  079E  3029               	movlw	41
 12285  079F                     u5267:
 12286  079F  0B89               	decfsz	9,f
 12287  07A0  2F9F               	goto	u5267
 12288  07A1  3200               	nop2
 12289  07A2                     l5052:
 12290  07A2  3020               	movlw	32
 12291  07A3  318A  22FE  3187   	fcall	_LCDsend
 12292                           
 12293                           ;main.c: 187: _delay((unsigned long)((5)*(1000000/4000.0)));
 12294  07A6  30FA               	movlw	250
 12295  07A7                     u5277:
 12296  07A7  3200               	nop2
 12297  07A8  0B89               	decfsz	9,f
 12298  07A9  2FA7               	goto	u5277
 12299  07AA                     l5054:
 12300                           
 12301                           ;main.c: 189: LCDsend2x4(0x28, 0);
 12302  07AA  0021               	movlb	1	; select bank1
 12303  07AB  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12304  07AC  3028               	movlw	40
 12305  07AD  318D  251E  3187   	fcall	_LCDsend2x4
 12306  07B0                     l5056:
 12307                           
 12308                           ;main.c: 190: LCDsend2x4(0x06, 0);
 12309  07B0  0021               	movlb	1	; select bank1
 12310  07B1  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12311  07B2  3006               	movlw	6
 12312  07B3  318D  251E  3187   	fcall	_LCDsend2x4
 12313  07B6                     l5058:
 12314                           
 12315                           ;main.c: 191: LCDsend2x4(0x0f, 0);
 12316  07B6  0021               	movlb	1	; select bank1
 12317  07B7  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12318  07B8  300F               	movlw	15
 12319  07B9  318D  251E  3187   	fcall	_LCDsend2x4
 12320  07BC                     l5060:
 12321                           
 12322                           ;main.c: 192: LCDsend2x4(0x01, 0);
 12323  07BC  0021               	movlb	1	; select bank1
 12324  07BD  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12325  07BE  3001               	movlw	1
 12326  07BF  318D  251E  3187   	fcall	_LCDsend2x4
 12327                           
 12328                           ;main.c: 193: _delay((unsigned long)((2)*(1000000/4000.0)));
 12329  07C2  30A6               	movlw	166
 12330  07C3                     u5287:
 12331  07C3  0B89               	decfsz	9,f
 12332  07C4  2FC3               	goto	u5287
 12333  07C5  3200               	nop2
 12334  07C6                     l1164:
 12335  07C6  0008               	return
 12336  07C7                     __end_of_LCDinit:
 12337                           
 12338                           	psect	text26
 12339  0D1E                     __ptext26:	
 12340 ;; *************** function _LCDsend2x4 *****************
 12341 ;; Defined at:
 12342 ;;		line 150 in file "main.c"
 12343 ;; Parameters:    Size  Location     Type
 12344 ;;  c               1    wreg     unsigned char 
 12345 ;;  mode            1    2[BANK1 ] unsigned char 
 12346 ;; Auto vars:     Size  Location     Type
 12347 ;;  c               1    5[BANK1 ] unsigned char 
 12348 ;;  lc              1    7[BANK1 ] unsigned char 
 12349 ;;  hc              1    6[BANK1 ] unsigned char 
 12350 ;; Return value:  Size  Location     Type
 12351 ;;                  1    wreg      void 
 12352 ;; Registers used:
 12353 ;;		wreg, status,2, status,0, pclath, cstack
 12354 ;; Tracked objects:
 12355 ;;		On entry : 0/0
 12356 ;;		On exit  : 0/0
 12357 ;;		Unchanged: 0/0
 12358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12359 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12360 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;Total ram usage:        6 bytes
 12364 ;; Hardware stack levels used:    1
 12365 ;; Hardware stack levels required when called:    8
 12366 ;; This function calls:
 12367 ;;		_WriteI2C
 12368 ;; This function is called by:
 12369 ;;		_LCDinit
 12370 ;; This function uses a non-reentrant model
 12371 ;;
 12372                           
 12373                           
 12374                           ;psect for function _LCDsend2x4
 12375  0D1E                     _LCDsend2x4:
 12376                           
 12377                           ;incstack = 0
 12378                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 12379                           ;LCDsend2x4@c stored from wreg
 12380  0D1E  0021               	movlb	1	; select bank1
 12381  0D1F  00A5               	movwf	LCDsend2x4@c^(0+128)
 12382  0D20                     l4566:
 12383                           
 12384                           ;main.c: 152: unsigned char hc;;main.c: 153: unsigned char lc;;main.c: 155: hc = c & 0xf
      +                          0;
 12385  0D20  0825               	movf	LCDsend2x4@c^(0+128),w
 12386  0D21  39F0               	andlw	240
 12387  0D22  00A3               	movwf	??_LCDsend2x4^(0+128)
 12388  0D23  0823               	movf	??_LCDsend2x4^(0+128),w
 12389  0D24  00A6               	movwf	LCDsend2x4@hc^(0+128)
 12390  0D25                     l4568:
 12391                           
 12392                           ;main.c: 156: lc = (c << 4) & 0xf0;
 12393  0D25  0825               	movf	LCDsend2x4@c^(0+128),w
 12394  0D26  00A3               	movwf	??_LCDsend2x4^(0+128)
 12395  0D27  3003               	movlw	3
 12396  0D28                     u3815:
 12397  0D28  35A3               	lslf	??_LCDsend2x4^(0+128),f
 12398  0D29  3EFF               	addlw	-1
 12399  0D2A  1D03               	skipz
 12400  0D2B  2D28               	goto	u3815
 12401  0D2C  3523               	lslf	??_LCDsend2x4^(0+128),w
 12402  0D2D  39F0               	andlw	240
 12403  0D2E  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
 12404  0D2F  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
 12405  0D30  00A7               	movwf	LCDsend2x4@lc^(0+128)
 12406  0D31                     l4570:	
 12407                           ;main.c: 158: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12408                           
 12409  0D31  0023               	movlb	3	; select bank3
 12410  0D32  0C0F               	rrf	15,w	;volatile
 12411  0D33  0C89               	rrf	9,f
 12412  0D34  3901               	andlw	1
 12413  0D35  0021               	movlb	1	; select bank1
 12414  0D36  00A3               	movwf	??_LCDsend2x4^(0+128)
 12415  0D37  0023               	movlb	3	; select bank3
 12416  0D38  0811               	movf	17,w	;volatile
 12417  0D39  391F               	andlw	31
 12418  0D3A  0021               	movlb	1	; select bank1
 12419  0D3B  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12420  0D3C  1D03               	btfss	3,2
 12421  0D3D  2D3F               	goto	u3821
 12422  0D3E  2D40               	goto	u3820
 12423  0D3F                     u3821:
 12424  0D3F  2D31               	goto	l4570
 12425  0D40                     u3820:
 12426  0D40                     l1130:
 12427                           
 12428                           ;main.c: 159: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 12429  0D40  0023               	movlb	3	; select bank3
 12430  0D41  1411               	bsf	17,0	;volatile
 12431  0D42                     l1131:
 12432  0D42  1811               	btfsc	17,0	;volatile
 12433  0D43  2D45               	goto	u3831
 12434  0D44  2D46               	goto	u3830
 12435  0D45                     u3831:
 12436  0D45  2D42               	goto	l1131
 12437  0D46                     u3830:
 12438  0D46                     l4572:
 12439  0D46  0023               	movlb	3	; select bank3
 12440  0D47  0C0F               	rrf	15,w	;volatile
 12441  0D48  0C89               	rrf	9,f
 12442  0D49  3901               	andlw	1
 12443  0D4A  0021               	movlb	1	; select bank1
 12444  0D4B  00A3               	movwf	??_LCDsend2x4^(0+128)
 12445  0D4C  0023               	movlb	3	; select bank3
 12446  0D4D  0811               	movf	17,w	;volatile
 12447  0D4E  391F               	andlw	31
 12448  0D4F  0021               	movlb	1	; select bank1
 12449  0D50  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12450  0D51  1D03               	btfss	3,2
 12451  0D52  2D54               	goto	u3841
 12452  0D53  2D55               	goto	u3840
 12453  0D54                     u3841:
 12454  0D54  2D46               	goto	l4572
 12455  0D55                     u3840:
 12456  0D55                     l4574:
 12457                           
 12458                           ;main.c: 160: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12459  0D55  304E               	movlw	78
 12460  0D56  318B  2351  318D   	fcall	_WriteI2C
 12461  0D59                     l4576:
 12462  0D59  0023               	movlb	3	; select bank3
 12463  0D5A  0C0F               	rrf	15,w	;volatile
 12464  0D5B  0C89               	rrf	9,f
 12465  0D5C  3901               	andlw	1
 12466  0D5D  0021               	movlb	1	; select bank1
 12467  0D5E  00A3               	movwf	??_LCDsend2x4^(0+128)
 12468  0D5F  0023               	movlb	3	; select bank3
 12469  0D60  0811               	movf	17,w	;volatile
 12470  0D61  391F               	andlw	31
 12471  0D62  0021               	movlb	1	; select bank1
 12472  0D63  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12473  0D64  1D03               	btfss	3,2
 12474  0D65  2D67               	goto	u3851
 12475  0D66  2D68               	goto	u3850
 12476  0D67                     u3851:
 12477  0D67  2D59               	goto	l4576
 12478  0D68                     u3850:
 12479  0D68                     l4578:
 12480                           
 12481                           ;main.c: 161: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12482  0D68  0826               	movf	LCDsend2x4@hc^(0+128),w
 12483  0D69  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12484  0D6A  3808               	iorlw	8
 12485  0D6B  318B  2351  318D   	fcall	_WriteI2C
 12486  0D6E                     l4580:
 12487  0D6E  0023               	movlb	3	; select bank3
 12488  0D6F  0C0F               	rrf	15,w	;volatile
 12489  0D70  0C89               	rrf	9,f
 12490  0D71  3901               	andlw	1
 12491  0D72  0021               	movlb	1	; select bank1
 12492  0D73  00A3               	movwf	??_LCDsend2x4^(0+128)
 12493  0D74  0023               	movlb	3	; select bank3
 12494  0D75  0811               	movf	17,w	;volatile
 12495  0D76  391F               	andlw	31
 12496  0D77  0021               	movlb	1	; select bank1
 12497  0D78  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12498  0D79  1D03               	btfss	3,2
 12499  0D7A  2D7C               	goto	u3861
 12500  0D7B  2D7D               	goto	u3860
 12501  0D7C                     u3861:
 12502  0D7C  2D6E               	goto	l4580
 12503  0D7D                     u3860:
 12504  0D7D                     l4582:
 12505                           
 12506                           ;main.c: 162: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 12507  0D7D  0826               	movf	LCDsend2x4@hc^(0+128),w
 12508  0D7E  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12509  0D7F  380C               	iorlw	12
 12510  0D80  318B  2351  318D   	fcall	_WriteI2C
 12511  0D83                     l4584:
 12512  0D83  0023               	movlb	3	; select bank3
 12513  0D84  0C0F               	rrf	15,w	;volatile
 12514  0D85  0C89               	rrf	9,f
 12515  0D86  3901               	andlw	1
 12516  0D87  0021               	movlb	1	; select bank1
 12517  0D88  00A3               	movwf	??_LCDsend2x4^(0+128)
 12518  0D89  0023               	movlb	3	; select bank3
 12519  0D8A  0811               	movf	17,w	;volatile
 12520  0D8B  391F               	andlw	31
 12521  0D8C  0021               	movlb	1	; select bank1
 12522  0D8D  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12523  0D8E  1D03               	btfss	3,2
 12524  0D8F  2D91               	goto	u3871
 12525  0D90  2D92               	goto	u3870
 12526  0D91                     u3871:
 12527  0D91  2D83               	goto	l4584
 12528  0D92                     u3870:
 12529  0D92                     l1145:
 12530  0D92                     l4586:	
 12531                           ;main.c: 163: _delay((unsigned long)((1)*(1000000/4000000.0)));
 12532                           
 12533                           
 12534                           ;main.c: 164: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12535  0D92  0021               	movlb	1	; select bank1
 12536  0D93  0826               	movf	LCDsend2x4@hc^(0+128),w
 12537  0D94  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12538  0D95  3808               	iorlw	8
 12539  0D96  318B  2351  318D   	fcall	_WriteI2C
 12540  0D99                     l4588:
 12541  0D99  0023               	movlb	3	; select bank3
 12542  0D9A  0C0F               	rrf	15,w	;volatile
 12543  0D9B  0C89               	rrf	9,f
 12544  0D9C  3901               	andlw	1
 12545  0D9D  0021               	movlb	1	; select bank1
 12546  0D9E  00A3               	movwf	??_LCDsend2x4^(0+128)
 12547  0D9F  0023               	movlb	3	; select bank3
 12548  0DA0  0811               	movf	17,w	;volatile
 12549  0DA1  391F               	andlw	31
 12550  0DA2  0021               	movlb	1	; select bank1
 12551  0DA3  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12552  0DA4  1D03               	btfss	3,2
 12553  0DA5  2DA7               	goto	u3881
 12554  0DA6  2DA8               	goto	u3880
 12555  0DA7                     u3881:
 12556  0DA7  2D99               	goto	l4588
 12557  0DA8                     u3880:
 12558  0DA8                     l4590:
 12559                           
 12560                           ;main.c: 165: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12561  0DA8  0827               	movf	LCDsend2x4@lc^(0+128),w
 12562  0DA9  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12563  0DAA  3808               	iorlw	8
 12564  0DAB  318B  2351  318D   	fcall	_WriteI2C
 12565  0DAE                     l4592:
 12566  0DAE  0023               	movlb	3	; select bank3
 12567  0DAF  0C0F               	rrf	15,w	;volatile
 12568  0DB0  0C89               	rrf	9,f
 12569  0DB1  3901               	andlw	1
 12570  0DB2  0021               	movlb	1	; select bank1
 12571  0DB3  00A3               	movwf	??_LCDsend2x4^(0+128)
 12572  0DB4  0023               	movlb	3	; select bank3
 12573  0DB5  0811               	movf	17,w	;volatile
 12574  0DB6  391F               	andlw	31
 12575  0DB7  0021               	movlb	1	; select bank1
 12576  0DB8  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12577  0DB9  1D03               	btfss	3,2
 12578  0DBA  2DBC               	goto	u3891
 12579  0DBB  2DBD               	goto	u3890
 12580  0DBC                     u3891:
 12581  0DBC  2DAE               	goto	l4592
 12582  0DBD                     u3890:
 12583  0DBD                     l4594:
 12584                           
 12585                           ;main.c: 166: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 12586  0DBD  0827               	movf	LCDsend2x4@lc^(0+128),w
 12587  0DBE  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12588  0DBF  380C               	iorlw	12
 12589  0DC0  318B  2351  318D   	fcall	_WriteI2C
 12590  0DC3                     l4596:
 12591  0DC3  0023               	movlb	3	; select bank3
 12592  0DC4  0C0F               	rrf	15,w	;volatile
 12593  0DC5  0C89               	rrf	9,f
 12594  0DC6  3901               	andlw	1
 12595  0DC7  0021               	movlb	1	; select bank1
 12596  0DC8  00A3               	movwf	??_LCDsend2x4^(0+128)
 12597  0DC9  0023               	movlb	3	; select bank3
 12598  0DCA  0811               	movf	17,w	;volatile
 12599  0DCB  391F               	andlw	31
 12600  0DCC  0021               	movlb	1	; select bank1
 12601  0DCD  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12602  0DCE  1D03               	btfss	3,2
 12603  0DCF  2DD1               	goto	u3901
 12604  0DD0  2DD2               	goto	u3900
 12605  0DD1                     u3901:
 12606  0DD1  2DC3               	goto	l4596
 12607  0DD2                     u3900:
 12608  0DD2                     l1154:
 12609  0DD2                     l4598:	
 12610                           ;main.c: 167: _delay((unsigned long)((1)*(1000000/4000000.0)));
 12611                           
 12612                           
 12613                           ;main.c: 168: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12614  0DD2  0021               	movlb	1	; select bank1
 12615  0DD3  0827               	movf	LCDsend2x4@lc^(0+128),w
 12616  0DD4  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12617  0DD5  3808               	iorlw	8
 12618  0DD6  318B  2351  318D   	fcall	_WriteI2C
 12619  0DD9                     l4600:
 12620  0DD9  0023               	movlb	3	; select bank3
 12621  0DDA  0C0F               	rrf	15,w	;volatile
 12622  0DDB  0C89               	rrf	9,f
 12623  0DDC  3901               	andlw	1
 12624  0DDD  0021               	movlb	1	; select bank1
 12625  0DDE  00A3               	movwf	??_LCDsend2x4^(0+128)
 12626  0DDF  0023               	movlb	3	; select bank3
 12627  0DE0  0811               	movf	17,w	;volatile
 12628  0DE1  391F               	andlw	31
 12629  0DE2  0021               	movlb	1	; select bank1
 12630  0DE3  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12631  0DE4  1D03               	btfss	3,2
 12632  0DE5  2DE7               	goto	u3911
 12633  0DE6  2DE8               	goto	u3910
 12634  0DE7                     u3911:
 12635  0DE7  2DD9               	goto	l4600
 12636  0DE8                     u3910:
 12637  0DE8                     l1157:
 12638                           
 12639                           ;main.c: 169: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12640  0DE8  0023               	movlb	3	; select bank3
 12641  0DE9  1511               	bsf	17,2	;volatile
 12642  0DEA                     l1158:
 12643  0DEA  1911               	btfsc	17,2	;volatile
 12644  0DEB  2DED               	goto	u3921
 12645  0DEC  2DEE               	goto	u3920
 12646  0DED                     u3921:
 12647  0DED  2DEA               	goto	l1158
 12648  0DEE                     u3920:
 12649  0DEE                     l4602:
 12650                           
 12651                           ;main.c: 170: _delay((unsigned long)((50)*(1000000/4000000.0)));
 12652  0DEE  3004               	movlw	4
 12653  0DEF                     u5297:
 12654  0DEF  0B89               	decfsz	9,f
 12655  0DF0  2DEF               	goto	u5297
 12656  0DF1                     l1161:
 12657  0DF1  0008               	return
 12658  0DF2                     __end_of_LCDsend2x4:
 12659                           
 12660                           	psect	text27
 12661  0AFE                     __ptext27:	
 12662 ;; *************** function _LCDsend *****************
 12663 ;; Defined at:
 12664 ;;		line 111 in file "main.c"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;  c               1    wreg     unsigned char 
 12667 ;; Auto vars:     Size  Location     Type
 12668 ;;  c               1    3[BANK1 ] unsigned char 
 12669 ;; Return value:  Size  Location     Type
 12670 ;;                  1    wreg      void 
 12671 ;; Registers used:
 12672 ;;		wreg, status,2, status,0, pclath, cstack
 12673 ;; Tracked objects:
 12674 ;;		On entry : 0/0
 12675 ;;		On exit  : 0/0
 12676 ;;		Unchanged: 0/0
 12677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12679 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12680 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12681 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12682 ;;Total ram usage:        2 bytes
 12683 ;; Hardware stack levels used:    1
 12684 ;; Hardware stack levels required when called:    8
 12685 ;; This function calls:
 12686 ;;		_WriteI2C
 12687 ;; This function is called by:
 12688 ;;		_LCDinit
 12689 ;; This function uses a non-reentrant model
 12690 ;;
 12691                           
 12692                           
 12693                           ;psect for function _LCDsend
 12694  0AFE                     _LCDsend:
 12695                           
 12696                           ;incstack = 0
 12697                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 12698                           ;LCDsend@c stored from wreg
 12699  0AFE  0021               	movlb	1	; select bank1
 12700  0AFF  00A3               	movwf	LCDsend@c^(0+128)
 12701  0B00                     l4552:
 12702  0B00                     l4554:	
 12703                           ;main.c: 113: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12704                           
 12705  0B00  0023               	movlb	3	; select bank3
 12706  0B01  0C0F               	rrf	15,w	;volatile
 12707  0B02  0C89               	rrf	9,f
 12708  0B03  3901               	andlw	1
 12709  0B04  0021               	movlb	1	; select bank1
 12710  0B05  00A2               	movwf	??_LCDsend^(0+128)
 12711  0B06  0023               	movlb	3	; select bank3
 12712  0B07  0811               	movf	17,w	;volatile
 12713  0B08  391F               	andlw	31
 12714  0B09  0021               	movlb	1	; select bank1
 12715  0B0A  0422               	iorwf	??_LCDsend^(0+128),w
 12716  0B0B  1D03               	btfss	3,2
 12717  0B0C  2B0E               	goto	u3751
 12718  0B0D  2B0F               	goto	u3750
 12719  0B0E                     u3751:
 12720  0B0E  2B00               	goto	l4554
 12721  0B0F                     u3750:
 12722  0B0F                     l1028:
 12723                           
 12724                           ;main.c: 114: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 12725  0B0F  0023               	movlb	3	; select bank3
 12726  0B10  1411               	bsf	17,0	;volatile
 12727  0B11                     l1029:
 12728  0B11  1811               	btfsc	17,0	;volatile
 12729  0B12  2B14               	goto	u3761
 12730  0B13  2B15               	goto	u3760
 12731  0B14                     u3761:
 12732  0B14  2B11               	goto	l1029
 12733  0B15                     u3760:
 12734  0B15                     l4556:
 12735  0B15  0023               	movlb	3	; select bank3
 12736  0B16  0C0F               	rrf	15,w	;volatile
 12737  0B17  0C89               	rrf	9,f
 12738  0B18  3901               	andlw	1
 12739  0B19  0021               	movlb	1	; select bank1
 12740  0B1A  00A2               	movwf	??_LCDsend^(0+128)
 12741  0B1B  0023               	movlb	3	; select bank3
 12742  0B1C  0811               	movf	17,w	;volatile
 12743  0B1D  391F               	andlw	31
 12744  0B1E  0021               	movlb	1	; select bank1
 12745  0B1F  0422               	iorwf	??_LCDsend^(0+128),w
 12746  0B20  1D03               	btfss	3,2
 12747  0B21  2B23               	goto	u3771
 12748  0B22  2B24               	goto	u3770
 12749  0B23                     u3771:
 12750  0B23  2B15               	goto	l4556
 12751  0B24                     u3770:
 12752  0B24                     l4558:
 12753                           
 12754                           ;main.c: 115: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12755  0B24  304E               	movlw	78
 12756  0B25  318B  2351  318A   	fcall	_WriteI2C
 12757  0B28                     l4560:
 12758  0B28  0023               	movlb	3	; select bank3
 12759  0B29  0C0F               	rrf	15,w	;volatile
 12760  0B2A  0C89               	rrf	9,f
 12761  0B2B  3901               	andlw	1
 12762  0B2C  0021               	movlb	1	; select bank1
 12763  0B2D  00A2               	movwf	??_LCDsend^(0+128)
 12764  0B2E  0023               	movlb	3	; select bank3
 12765  0B2F  0811               	movf	17,w	;volatile
 12766  0B30  391F               	andlw	31
 12767  0B31  0021               	movlb	1	; select bank1
 12768  0B32  0422               	iorwf	??_LCDsend^(0+128),w
 12769  0B33  1D03               	btfss	3,2
 12770  0B34  2B36               	goto	u3781
 12771  0B35  2B37               	goto	u3780
 12772  0B36                     u3781:
 12773  0B36  2B28               	goto	l4560
 12774  0B37                     u3780:
 12775  0B37                     l4562:
 12776                           
 12777                           ;main.c: 116: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12778  0B37  0823               	movf	LCDsend@c^(0+128),w
 12779  0B38  318B  2351  318A   	fcall	_WriteI2C
 12780  0B3B                     l4564:
 12781  0B3B  0023               	movlb	3	; select bank3
 12782  0B3C  0C0F               	rrf	15,w	;volatile
 12783  0B3D  0C89               	rrf	9,f
 12784  0B3E  3901               	andlw	1
 12785  0B3F  0021               	movlb	1	; select bank1
 12786  0B40  00A2               	movwf	??_LCDsend^(0+128)
 12787  0B41  0023               	movlb	3	; select bank3
 12788  0B42  0811               	movf	17,w	;volatile
 12789  0B43  391F               	andlw	31
 12790  0B44  0021               	movlb	1	; select bank1
 12791  0B45  0422               	iorwf	??_LCDsend^(0+128),w
 12792  0B46  1D03               	btfss	3,2
 12793  0B47  2B49               	goto	u3791
 12794  0B48  2B4A               	goto	u3790
 12795  0B49                     u3791:
 12796  0B49  2B3B               	goto	l4564
 12797  0B4A                     u3790:
 12798  0B4A                     l1040:
 12799                           
 12800                           ;main.c: 117: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12801  0B4A  0023               	movlb	3	; select bank3
 12802  0B4B  1511               	bsf	17,2	;volatile
 12803  0B4C                     l1041:
 12804  0B4C  1911               	btfsc	17,2	;volatile
 12805  0B4D  2B4F               	goto	u3801
 12806  0B4E  2B50               	goto	u3800
 12807  0B4F                     u3801:
 12808  0B4F  2B4C               	goto	l1041
 12809  0B50                     u3800:
 12810  0B50                     l1044:
 12811  0B50  0008               	return
 12812  0B51                     __end_of_LCDsend:
 12813                           
 12814                           	psect	text28
 12815  0B51                     __ptext28:	
 12816 ;; *************** function _WriteI2C *****************
 12817 ;; Defined at:
 12818 ;;		line 47 in file "I2C/i2c.c"
 12819 ;; Parameters:    Size  Location     Type
 12820 ;;  data_out        1    wreg     unsigned char 
 12821 ;; Auto vars:     Size  Location     Type
 12822 ;;  data_out        1    1[BANK1 ] unsigned char 
 12823 ;; Return value:  Size  Location     Type
 12824 ;;                  1    wreg      char 
 12825 ;; Registers used:
 12826 ;;		wreg, status,2, status,0
 12827 ;; Tracked objects:
 12828 ;;		On entry : 0/0
 12829 ;;		On exit  : 0/0
 12830 ;;		Unchanged: 0/0
 12831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12833 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12834 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12835 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12836 ;;Total ram usage:        2 bytes
 12837 ;; Hardware stack levels used:    1
 12838 ;; Hardware stack levels required when called:    7
 12839 ;; This function calls:
 12840 ;;		Nothing
 12841 ;; This function is called by:
 12842 ;;		_LCDsend
 12843 ;;		_LCDsend2x4
 12844 ;;		_LCDrecv
 12845 ;; This function uses a non-reentrant model
 12846 ;;
 12847                           
 12848                           
 12849                           ;psect for function _WriteI2C
 12850  0B51                     _WriteI2C:
 12851                           
 12852                           ;incstack = 0
 12853                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 12854                           ;WriteI2C@data_out stored from wreg
 12855  0B51  0021               	movlb	1	; select bank1
 12856  0B52  00A1               	movwf	WriteI2C@data_out^(0+128)
 12857  0B53                     l4072:
 12858                           
 12859                           ;i2c.c: 49: SSP1BUF = data_out;
 12860  0B53  0821               	movf	WriteI2C@data_out^(0+128),w
 12861  0B54  0023               	movlb	3	; select bank3
 12862  0B55  008C               	movwf	12	;volatile
 12863  0B56                     l4074:
 12864                           
 12865                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 12866  0B56  1F90               	btfss	16,7	;volatile
 12867  0B57  2B59               	goto	u3051
 12868  0B58  2B5A               	goto	u3050
 12869  0B59                     u3051:
 12870  0B59  2B5B               	goto	l4080
 12871  0B5A                     u3050:
 12872  0B5A  2BAA               	goto	l30
 12873  0B5B                     l4080:
 12874                           
 12875                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 12876  0B5B  300F               	movlw	15
 12877  0B5C  0510               	andwf	16,w	;volatile
 12878  0B5D  0021               	movlb	1	; select bank1
 12879  0B5E  00A0               	movwf	??_WriteI2C^(0+128)
 12880  0B5F  3008               	movlw	8
 12881  0B60  0620               	xorwf	??_WriteI2C^(0+128),w
 12882  0B61  1903               	btfsc	3,2
 12883  0B62  2B64               	goto	u3061
 12884  0B63  2B65               	goto	u3060
 12885  0B64                     u3061:
 12886  0B64  2B7E               	goto	l4092
 12887  0B65                     u3060:
 12888  0B65                     l4082:
 12889  0B65  300F               	movlw	15
 12890  0B66  0023               	movlb	3	; select bank3
 12891  0B67  0510               	andwf	16,w	;volatile
 12892  0B68  0021               	movlb	1	; select bank1
 12893  0B69  00A0               	movwf	??_WriteI2C^(0+128)
 12894  0B6A  300B               	movlw	11
 12895  0B6B  0620               	xorwf	??_WriteI2C^(0+128),w
 12896  0B6C  1903               	btfsc	3,2
 12897  0B6D  2B6F               	goto	u3071
 12898  0B6E  2B70               	goto	u3070
 12899  0B6F                     u3071:
 12900  0B6F  2B7E               	goto	l4092
 12901  0B70                     u3070:
 12902  0B70                     l4084:
 12903                           
 12904                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 12905  0B70  0023               	movlb	3	; select bank3
 12906  0B71  1610               	bsf	16,4	;volatile
 12907  0B72                     l33:	
 12908                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 12909                           
 12910  0B72  002E               	movlb	14	; select bank14
 12911  0B73  1C0F               	btfss	15,0	;volatile
 12912  0B74  2B76               	goto	u3081
 12913  0B75  2B77               	goto	u3080
 12914  0B76                     u3081:
 12915  0B76  2B72               	goto	l33
 12916  0B77                     u3080:
 12917  0B77                     l35:
 12918                           
 12919                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 12920  0B77  0023               	movlb	3	; select bank3
 12921  0B78  190F               	btfsc	15,2	;volatile
 12922  0B79  2B7B               	goto	u3091
 12923  0B7A  2B7C               	goto	u3090
 12924  0B7B                     u3091:
 12925  0B7B  2BAA               	goto	l30
 12926  0B7C                     u3090:
 12927  0B7C                     l4086:
 12928  0B7C  080F               	movf	15,w	;volatile
 12929  0B7D  2BAA               	goto	l30
 12930  0B7E                     l4092:
 12931                           
 12932                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 12933  0B7E  300F               	movlw	15
 12934  0B7F  0023               	movlb	3	; select bank3
 12935  0B80  0510               	andwf	16,w	;volatile
 12936  0B81  0021               	movlb	1	; select bank1
 12937  0B82  00A0               	movwf	??_WriteI2C^(0+128)
 12938  0B83  3008               	movlw	8
 12939  0B84  0620               	xorwf	??_WriteI2C^(0+128),w
 12940  0B85  1903               	btfsc	3,2
 12941  0B86  2B88               	goto	u3101
 12942  0B87  2B89               	goto	u3100
 12943  0B88                     u3101:
 12944  0B88  2B94               	goto	l42
 12945  0B89                     u3100:
 12946  0B89                     l4094:
 12947  0B89  300F               	movlw	15
 12948  0B8A  0023               	movlb	3	; select bank3
 12949  0B8B  0510               	andwf	16,w	;volatile
 12950  0B8C  0021               	movlb	1	; select bank1
 12951  0B8D  00A0               	movwf	??_WriteI2C^(0+128)
 12952  0B8E  300B               	movlw	11
 12953  0B8F  0620               	xorwf	??_WriteI2C^(0+128),w
 12954  0B90  1D03               	btfss	3,2
 12955  0B91  2B93               	goto	u3111
 12956  0B92  2B94               	goto	u3110
 12957  0B93                     u3111:
 12958  0B93  2BAA               	goto	l30
 12959  0B94                     u3110:
 12960  0B94                     l42:
 12961  0B94  0023               	movlb	3	; select bank3
 12962  0B95  180F               	btfsc	15,0	;volatile
 12963  0B96  2B98               	goto	u3121
 12964  0B97  2B99               	goto	u3120
 12965  0B98                     u3121:
 12966  0B98  2B94               	goto	l42
 12967  0B99                     u3120:
 12968  0B99                     l4096:
 12969  0B99  0023               	movlb	3	; select bank3
 12970  0B9A  0C0F               	rrf	15,w	;volatile
 12971  0B9B  0C89               	rrf	9,f
 12972  0B9C  3901               	andlw	1
 12973  0B9D  0021               	movlb	1	; select bank1
 12974  0B9E  00A0               	movwf	??_WriteI2C^(0+128)
 12975  0B9F  0023               	movlb	3	; select bank3
 12976  0BA0  0811               	movf	17,w	;volatile
 12977  0BA1  391F               	andlw	31
 12978  0BA2  0021               	movlb	1	; select bank1
 12979  0BA3  0420               	iorwf	??_WriteI2C^(0+128),w
 12980  0BA4  1D03               	btfss	3,2
 12981  0BA5  2BA7               	goto	u3131
 12982  0BA6  2BA8               	goto	u3130
 12983  0BA7                     u3131:
 12984  0BA7  2B99               	goto	l4096
 12985  0BA8                     u3130:
 12986  0BA8                     l47:
 12987                           
 12988                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 12989  0BA8  0023               	movlb	3	; select bank3
 12990  0BA9  0811               	movf	17,w	;volatile
 12991  0BAA                     l30:
 12992  0BAA  0008               	return
 12993  0BAB                     __end_of_WriteI2C:
 12994                           
 12995                           	psect	text29
 12996  095A                     __ptext29:	
 12997 ;; *************** function _DATAEE_WriteByte *****************
 12998 ;; Defined at:
 12999 ;;		line 180 in file "mcc_generated_files/memory.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;  bAdd            2    0[BANK1 ] unsigned int 
 13002 ;;  bData           1    2[BANK1 ] unsigned char 
 13003 ;; Auto vars:     Size  Location     Type
 13004 ;;  GIEBitValue     1    3[BANK1 ] unsigned char 
 13005 ;; Return value:  Size  Location     Type
 13006 ;;                  1    wreg      void 
 13007 ;; Registers used:
 13008 ;;		wreg, status,2, status,0
 13009 ;; Tracked objects:
 13010 ;;		On entry : 0/0
 13011 ;;		On exit  : 0/0
 13012 ;;		Unchanged: 0/0
 13013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13014 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13017 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13018 ;;Total ram usage:        4 bytes
 13019 ;; Hardware stack levels used:    1
 13020 ;; Hardware stack levels required when called:    7
 13021 ;; This function calls:
 13022 ;;		Nothing
 13023 ;; This function is called by:
 13024 ;;		_main
 13025 ;; This function uses a non-reentrant model
 13026 ;;
 13027                           
 13028                           
 13029                           ;psect for function _DATAEE_WriteByte
 13030  095A                     _DATAEE_WriteByte:
 13031  095A                     l4926:	
 13032                           ;incstack = 0
 13033                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 13034                           
 13035                           
 13036                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 13037  095A  3000               	movlw	0
 13038  095B  1B8B               	btfsc	11,7	;volatile
 13039  095C  3001               	movlw	1
 13040  095D  0021               	movlb	1	; select bank1
 13041  095E  00A3               	movwf	DATAEE_WriteByte@GIEBitValue^(0+128)
 13042                           
 13043                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 13044  095F  0821               	movf	(DATAEE_WriteByte@bAdd+1)^(0+128),w
 13045  0960  0030               	movlb	16	; select bank16
 13046  0961  009B               	movwf	27	;volatile
 13047  0962                     l4928:
 13048                           
 13049                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 13050  0962  0021               	movlb	1	; select bank1
 13051  0963  0820               	movf	DATAEE_WriteByte@bAdd^(0+128),w
 13052  0964  0030               	movlb	16	; select bank16
 13053  0965  009A               	movwf	26	;volatile
 13054  0966                     l4930:
 13055                           
 13056                           ;memory.c: 186: NVMDATL = bData;
 13057  0966  0021               	movlb	1	; select bank1
 13058  0967  0822               	movf	DATAEE_WriteByte@bData^(0+128),w
 13059  0968  0030               	movlb	16	; select bank16
 13060  0969  009C               	movwf	28	;volatile
 13061  096A                     l4932:
 13062                           
 13063                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 13064  096A  171E               	bsf	30,6	;volsfr
 13065  096B                     l4934:
 13066                           
 13067                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 13068  096B  151E               	bsf	30,2	;volsfr
 13069  096C                     l4936:
 13070                           
 13071                           ;memory.c: 189: INTCONbits.GIE = 0;
 13072  096C  138B               	bcf	11,7	;volatile
 13073  096D                     l4938:
 13074                           
 13075                           ;memory.c: 190: NVMCON2 = 0x55;
 13076  096D  3055               	movlw	85
 13077  096E  009F               	movwf	31	;volsfr
 13078  096F                     l4940:
 13079                           
 13080                           ;memory.c: 191: NVMCON2 = 0xAA;
 13081  096F  30AA               	movlw	170
 13082  0970  009F               	movwf	31	;volsfr
 13083  0971                     l4942:
 13084                           
 13085                           ;memory.c: 192: NVMCON1bits.WR = 1;
 13086  0971  149E               	bsf	30,1	;volsfr
 13087  0972                     l842:	
 13088                           ;memory.c: 195: {
 13089                           
 13090  0972  189E               	btfsc	30,1	;volsfr
 13091  0973  2975               	goto	u4491
 13092  0974  2976               	goto	u4490
 13093  0975                     u4491:
 13094  0975  2972               	goto	l842
 13095  0976                     u4490:
 13096  0976                     l844:
 13097                           
 13098                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 13099  0976  111E               	bcf	30,2	;volsfr
 13100  0977                     l4944:
 13101                           
 13102                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 13103  0977  0021               	movlb	1	; select bank1
 13104  0978  0C23               	rrf	DATAEE_WriteByte@GIEBitValue^(0+128),w
 13105  0979  1C03               	skipc
 13106  097A  138B               	bcf	11,7	;volatile
 13107  097B  1803               	skipnc
 13108  097C  178B               	bsf	11,7	;volatile
 13109  097D                     l845:
 13110  097D  0008               	return
 13111  097E                     __end_of_DATAEE_WriteByte:
 13112                           
 13113                           	psect	text30
 13114  176D                     __ptext30:	
 13115 ;; *************** function _DATAEE_ReadByte *****************
 13116 ;; Defined at:
 13117 ;;		line 202 in file "mcc_generated_files/memory.c"
 13118 ;; Parameters:    Size  Location     Type
 13119 ;;  bAdd            2    0[BANK1 ] unsigned int 
 13120 ;; Auto vars:     Size  Location     Type
 13121 ;;		None
 13122 ;; Return value:  Size  Location     Type
 13123 ;;                  1    wreg      unsigned char 
 13124 ;; Registers used:
 13125 ;;		wreg, status,2
 13126 ;; Tracked objects:
 13127 ;;		On entry : 0/0
 13128 ;;		On exit  : 0/0
 13129 ;;		Unchanged: 0/0
 13130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13131 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13134 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13135 ;;Total ram usage:        2 bytes
 13136 ;; Hardware stack levels used:    1
 13137 ;; Hardware stack levels required when called:    7
 13138 ;; This function calls:
 13139 ;;		Nothing
 13140 ;; This function is called by:
 13141 ;;		_main
 13142 ;; This function uses a non-reentrant model
 13143 ;;
 13144                           
 13145                           
 13146                           ;psect for function _DATAEE_ReadByte
 13147  176D                     _DATAEE_ReadByte:
 13148  176D                     l4946:	
 13149                           ;incstack = 0
 13150                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 13151                           
 13152                           
 13153                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 13154  176D  0021               	movlb	1	; select bank1
 13155  176E  0821               	movf	(DATAEE_ReadByte@bAdd+1)^(0+128),w
 13156  176F  0030               	movlb	16	; select bank16
 13157  1770  009B               	movwf	27	;volatile
 13158  1771                     l4948:
 13159                           
 13160                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 13161  1771  0021               	movlb	1	; select bank1
 13162  1772  0820               	movf	DATAEE_ReadByte@bAdd^(0+128),w
 13163  1773  0030               	movlb	16	; select bank16
 13164  1774  009A               	movwf	26	;volatile
 13165  1775                     l4950:
 13166                           
 13167                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 13168  1775  171E               	bsf	30,6	;volsfr
 13169  1776                     l4952:
 13170                           
 13171                           ;memory.c: 207: NVMCON1bits.RD = 1;
 13172  1776  141E               	bsf	30,0	;volsfr
 13173  1777                     l4954:
 13174                           
 13175                           ;memory.c: 208: __nop();
 13176  1777  0000               	nop
 13177  1778                     l4956:
 13178                           
 13179                           ;memory.c: 209: __nop();
 13180  1778  0000               	nop
 13181  1779                     l4958:
 13182                           
 13183                           ;memory.c: 211: return (NVMDATL);
 13184  1779  0030               	movlb	16	; select bank16
 13185  177A  081C               	movf	28,w	;volatile
 13186  177B                     l848:
 13187  177B  0008               	return
 13188  177C                     __end_of_DATAEE_ReadByte:
 13189                           
 13190                           	psect	intentry
 13191  0004                     __pintentry:	
 13192 ;; *************** function _INTERRUPT_InterruptManager *****************
 13193 ;; Defined at:
 13194 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13195 ;; Parameters:    Size  Location     Type
 13196 ;;		None
 13197 ;; Auto vars:     Size  Location     Type
 13198 ;;		None
 13199 ;; Return value:  Size  Location     Type
 13200 ;;                  1    wreg      void 
 13201 ;; Registers used:
 13202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13203 ;; Tracked objects:
 13204 ;;		On entry : 0/0
 13205 ;;		On exit  : 0/0
 13206 ;;		Unchanged: 0/0
 13207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13212 ;;Total ram usage:        0 bytes
 13213 ;; Hardware stack levels used:    1
 13214 ;; Hardware stack levels required when called:    6
 13215 ;; This function calls:
 13216 ;;		_INT_ISR
 13217 ;;		_TMR1_ISR
 13218 ;;		_TMR3_ISR
 13219 ;;		_TMR5_ISR
 13220 ;; This function is called by:
 13221 ;;		Interrupt level 1
 13222 ;; This function uses a non-reentrant model
 13223 ;;
 13224                           
 13225  0004                     _INTERRUPT_InterruptManager:
 13226                           
 13227                           ;incstack = 0
 13228  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13229                           
 13230                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13231  0005  3180               	pagesel	$
 13232  0006                     i1l5144:
 13233                           
 13234                           ;interrupt_manager.c: 55: if(PIE0bits.INTE == 1 && PIR0bits.INTF == 1)
 13235  0006  002E               	movlb	14	; select bank14
 13236  0007  1C16               	btfss	22,0	;volatile
 13237  0008  280A               	goto	u497_21
 13238  0009  280B               	goto	u497_20
 13239  000A                     u497_21:
 13240  000A  2813               	goto	i1l354
 13241  000B                     u497_20:
 13242  000B                     i1l5146:
 13243  000B  1C0C               	btfss	12,0	;volatile
 13244  000C  280E               	goto	u498_21
 13245  000D  280F               	goto	u498_20
 13246  000E                     u498_21:
 13247  000E  2813               	goto	i1l354
 13248  000F                     u498_20:
 13249  000F                     i1l5148:
 13250                           
 13251                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: INT_ISR();
 13252  000F  3196  26E8  3180   	fcall	_INT_ISR
 13253                           
 13254                           ;interrupt_manager.c: 58: }
 13255  0012  284A               	goto	i1l368
 13256  0013                     i1l354:
 13257                           
 13258                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
 13259  0013  1F0B               	btfss	11,6	;volatile
 13260  0014  2816               	goto	u499_21
 13261  0015  2817               	goto	u499_20
 13262  0016                     u499_21:
 13263  0016  284A               	goto	i1l368
 13264  0017                     u499_20:
 13265  0017                     i1l5150:
 13266                           
 13267                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 13268  0017  1E1A               	btfss	26,4	;volatile
 13269  0018  281A               	goto	u500_21
 13270  0019  281B               	goto	u500_20
 13271  001A                     u500_21:
 13272  001A  2823               	goto	i1l357
 13273  001B                     u500_20:
 13274  001B                     i1l5152:
 13275  001B  1E10               	btfss	16,4	;volatile
 13276  001C  281E               	goto	u501_21
 13277  001D  281F               	goto	u501_20
 13278  001E                     u501_21:
 13279  001E  2823               	goto	i1l357
 13280  001F                     u501_20:
 13281  001F                     i1l5154:
 13282                           
 13283                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR5_ISR();
 13284  001F  3188  2025  3180   	fcall	_TMR5_ISR
 13285                           
 13286                           ;interrupt_manager.c: 64: }
 13287  0022  284A               	goto	i1l368
 13288  0023                     i1l357:
 13289                           
 13290                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 13291  0023  1D1A               	btfss	26,2	;volatile
 13292  0024  2826               	goto	u502_21
 13293  0025  2827               	goto	u502_20
 13294  0026                     u502_21:
 13295  0026  282F               	goto	i1l359
 13296  0027                     u502_20:
 13297  0027                     i1l5156:
 13298  0027  1D10               	btfss	16,2	;volatile
 13299  0028  282A               	goto	u503_21
 13300  0029  282B               	goto	u503_20
 13301  002A                     u503_21:
 13302  002A  282F               	goto	i1l359
 13303  002B                     u503_20:
 13304  002B                     i1l5158:
 13305                           
 13306                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR3_ISR();
 13307  002B  3188  200E  3180   	fcall	_TMR3_ISR
 13308                           
 13309                           ;interrupt_manager.c: 68: }
 13310  002E  284A               	goto	i1l368
 13311  002F                     i1l359:
 13312                           
 13313                           ;interrupt_manager.c: 69: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 13314  002F  1C1A               	btfss	26,0	;volatile
 13315  0030  2832               	goto	u504_21
 13316  0031  2833               	goto	u504_20
 13317  0032                     u504_21:
 13318  0032  283B               	goto	i1l361
 13319  0033                     u504_20:
 13320  0033                     i1l5160:
 13321  0033  1C10               	btfss	16,0	;volatile
 13322  0034  2836               	goto	u505_21
 13323  0035  2837               	goto	u505_20
 13324  0036                     u505_21:
 13325  0036  283B               	goto	i1l361
 13326  0037                     u505_20:
 13327  0037                     i1l5162:
 13328                           
 13329                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR1_ISR();
 13330  0037  3197  27E9  3180   	fcall	_TMR1_ISR
 13331                           
 13332                           ;interrupt_manager.c: 72: }
 13333  003A  284A               	goto	i1l368
 13334  003B                     i1l361:
 13335                           
 13336                           ;interrupt_manager.c: 73: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 13337  003B  1C99               	btfss	25,1	;volatile
 13338  003C  283E               	goto	u506_21
 13339  003D  283F               	goto	u506_20
 13340  003E                     u506_21:
 13341  003E  2844               	goto	i1l363
 13342  003F                     u506_20:
 13343  003F                     i1l5164:
 13344                           
 13345                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_busCollisionISR();
 13346  003F  1C8F               	btfss	15,1	;volatile
 13347  0040  2842               	goto	u507_21
 13348  0041  2843               	goto	u507_20
 13349  0042                     u507_21:
 13350  0042  2844               	goto	i1l363
 13351  0043                     u507_20:
 13352  0043  284A               	goto	i1l368
 13353  0044                     i1l363:
 13354                           
 13355                           ;interrupt_manager.c: 77: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 13356  0044  1C19               	btfss	25,0	;volatile
 13357  0045  2847               	goto	u508_21
 13358  0046  2848               	goto	u508_20
 13359  0047                     u508_21:
 13360  0047  284A               	goto	i1l362
 13361  0048                     u508_20:
 13362  0048                     i1l5168:
 13363                           
 13364                           ;interrupt_manager.c: 78: {;interrupt_manager.c: 79: i2c1_driver_i2cISR();
 13365  0048  080F               	movf	15,w	;volatile
 13366  0049  284A               	goto	i1l368
 13367  004A                     i1l362:
 13368  004A                     i1l368:
 13369  004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13370  004B  0009               	retfie
 13371  004C                     __end_of_INTERRUPT_InterruptManager:
 13372                           
 13373                           	psect	text32
 13374  0825                     __ptext32:	
 13375 ;; *************** function _TMR5_ISR *****************
 13376 ;; Defined at:
 13377 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 13378 ;; Parameters:    Size  Location     Type
 13379 ;;		None
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;		None
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  1    wreg      void 
 13384 ;; Registers used:
 13385 ;;		wreg, status,2, status,0, pclath, cstack
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 0/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;Total ram usage:        0 bytes
 13396 ;; Hardware stack levels used:    1
 13397 ;; Hardware stack levels required when called:    3
 13398 ;; This function calls:
 13399 ;;		Absolute function
 13400 ;;		_TMR5_DefaultInterruptHandler
 13401 ;;		_TMR5_WriteTimer
 13402 ;;		_monitoring_ISR
 13403 ;; This function is called by:
 13404 ;;		_INTERRUPT_InterruptManager
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           
 13409                           ;psect for function _TMR5_ISR
 13410  0825                     _TMR5_ISR:
 13411  0825                     i1l4898:	
 13412                           ;incstack = 0
 13413                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 13414                           
 13415                           
 13416                           ;tmr5.c: 168: PIR4bits.TMR5IF = 0;
 13417  0825  002E               	movlb	14	; select bank14
 13418  0826  1210               	bcf	16,4	;volatile
 13419  0827                     i1l4900:
 13420                           
 13421                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 13422  0827  0021               	movlb	1	; select bank1
 13423  0828  0836               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 13424  0829  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 13425  082A  0835               	movf	_timer5ReloadVal^(0+128),w	;volatile
 13426  082B  00F0               	movwf	TMR5_WriteTimer@timerVal
 13427  082C  3197  279E  3188   	fcall	_TMR5_WriteTimer
 13428  082F                     i1l4902:
 13429                           
 13430                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 13431  082F  0021               	movlb	1	; select bank1
 13432  0830  0833               	movf	_TMR5_InterruptHandler^(0+128),w
 13433  0831  0434               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 13434  0832  1903               	btfsc	3,2
 13435  0833  2835               	goto	u445_21
 13436  0834  2836               	goto	u445_20
 13437  0835                     u445_21:
 13438  0835  283B               	goto	i1l714
 13439  0836                     u445_20:
 13440  0836                     i1l4904:
 13441                           
 13442                           ;tmr5.c: 172: {;tmr5.c: 173: TMR5_InterruptHandler();
 13443  0836  0834               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 13444  0837  008A               	movwf	10
 13445  0838  0833               	movf	_TMR5_InterruptHandler^(0+128),w
 13446  0839  000A               	callw
 13447  083A  3188               	pagesel	$
 13448  083B                     i1l714:
 13449  083B  0008               	return
 13450  083C                     __end_of_TMR5_ISR:
 13451                           
 13452                           	psect	text33
 13453  07FF                     __ptext33:	
 13454 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 13455 ;; Defined at:
 13456 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 13457 ;; Parameters:    Size  Location     Type
 13458 ;;		None
 13459 ;; Auto vars:     Size  Location     Type
 13460 ;;		None
 13461 ;; Return value:  Size  Location     Type
 13462 ;;                  1    wreg      void 
 13463 ;; Registers used:
 13464 ;;		None
 13465 ;; Tracked objects:
 13466 ;;		On entry : 0/0
 13467 ;;		On exit  : 0/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13474 ;;Total ram usage:        0 bytes
 13475 ;; Hardware stack levels used:    1
 13476 ;; This function calls:
 13477 ;;		Nothing
 13478 ;; This function is called by:
 13479 ;;		_TMR5_Initialize
 13480 ;;		_TMR5_ISR
 13481 ;; This function uses a non-reentrant model
 13482 ;;
 13483                           
 13484                           
 13485                           ;psect for function _TMR5_DefaultInterruptHandler
 13486  07FF                     _TMR5_DefaultInterruptHandler:
 13487  07FF                     i1l720:	
 13488                           ;incstack = 0
 13489                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 13490                           
 13491  07FF  0008               	return
 13492  0800                     __end_of_TMR5_DefaultInterruptHandler:
 13493                           
 13494                           	psect	text34
 13495  0633                     __ptext34:	
 13496 ;; *************** function _monitoring_ISR *****************
 13497 ;; Defined at:
 13498 ;;		line 473 in file "main.c"
 13499 ;; Parameters:    Size  Location     Type
 13500 ;;		None
 13501 ;; Auto vars:     Size  Location     Type
 13502 ;;		None
 13503 ;; Return value:  Size  Location     Type
 13504 ;;                  1    wreg      void 
 13505 ;; Registers used:
 13506 ;;		wreg, status,2, status,0, pclath, cstack
 13507 ;; Tracked objects:
 13508 ;;		On entry : 0/0
 13509 ;;		On exit  : 0/0
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13514 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13515 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13516 ;;Total ram usage:        3 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; Hardware stack levels required when called:    2
 13519 ;; This function calls:
 13520 ;;		_ADCC_GetSingleConversion
 13521 ;;		___wmul
 13522 ;;		_tsttc
 13523 ;;		i1_DATAEE_WriteByte
 13524 ;; This function is called by:
 13525 ;;		_main
 13526 ;;		_TMR5_ISR
 13527 ;; This function uses a non-reentrant model
 13528 ;;
 13529                           
 13530                           
 13531                           ;psect for function _monitoring_ISR
 13532  0633                     _monitoring_ISR:
 13533  0633                     i1l4806:	
 13534                           ;incstack = 0
 13535                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 13536                           
 13537                           
 13538                           ;main.c: 474: temp = (uint8_t)tsttc();
 13539  0633  318E  26F3  3186   	fcall	_tsttc
 13540  0636  00FA               	movwf	??_monitoring_ISR
 13541  0637  087A               	movf	??_monitoring_ISR,w
 13542  0638  0020               	movlb	0	; select bank0
 13543  0639  00E3               	movwf	_temp
 13544                           
 13545                           ;main.c: 476: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 13546  063A  3000               	movlw	0
 13547  063B  3197  27C1  3186   	fcall	_ADCC_GetSingleConversion
 13548  063E  0870               	movf	?_ADCC_GetSingleConversion,w
 13549  063F  00FA               	movwf	??_monitoring_ISR
 13550  0640  0871               	movf	?_ADCC_GetSingleConversion+1,w
 13551  0641  00FB               	movwf	??_monitoring_ISR+1
 13552  0642  300D               	movlw	13
 13553  0643                     u433_25:
 13554  0643  36FB               	lsrf	??_monitoring_ISR+1,f
 13555  0644  0CFA               	rrf	??_monitoring_ISR,f
 13556  0645  0B89               	decfsz	9,f
 13557  0646  2E43               	goto	u433_25
 13558  0647  087A               	movf	??_monitoring_ISR,w
 13559  0648  00FC               	movwf	??_monitoring_ISR+2
 13560  0649  087C               	movf	??_monitoring_ISR+2,w
 13561  064A  0020               	movlb	0	; select bank0
 13562  064B  00E2               	movwf	_lumLevel
 13563  064C                     i1l4808:
 13564                           
 13565                           ;main.c: 478: if(prevTemp != temp || prevLumLevel != lumLevel){
 13566  064C  0863               	movf	_temp,w
 13567  064D  00FA               	movwf	??_monitoring_ISR
 13568  064E  01FB               	clrf	??_monitoring_ISR+1
 13569  064F  086D               	movf	_prevTemp+1,w
 13570  0650  067B               	xorwf	??_monitoring_ISR+1,w
 13571  0651  1D03               	skipz
 13572  0652  2E55               	goto	u434_25
 13573  0653  086C               	movf	_prevTemp,w
 13574  0654  067A               	xorwf	??_monitoring_ISR,w
 13575  0655                     u434_25:
 13576  0655  1D03               	skipz
 13577  0656  2E58               	goto	u434_21
 13578  0657  2E59               	goto	u434_20
 13579  0658                     u434_21:
 13580  0658  2E66               	goto	i1l4812
 13581  0659                     u434_20:
 13582  0659                     i1l4810:
 13583  0659  0862               	movf	_lumLevel,w
 13584  065A  00FA               	movwf	??_monitoring_ISR
 13585  065B  01FB               	clrf	??_monitoring_ISR+1
 13586  065C  086B               	movf	_prevLumLevel+1,w
 13587  065D  067B               	xorwf	??_monitoring_ISR+1,w
 13588  065E  1D03               	skipz
 13589  065F  2E62               	goto	u435_25
 13590  0660  086A               	movf	_prevLumLevel,w
 13591  0661  067A               	xorwf	??_monitoring_ISR,w
 13592  0662                     u435_25:
 13593  0662  1903               	skipnz
 13594  0663  2E65               	goto	u435_21
 13595  0664  2E66               	goto	u435_20
 13596  0665                     u435_21:
 13597  0665  2F12               	goto	i1l4824
 13598  0666                     u435_20:
 13599  0666                     i1l4812:
 13600                           
 13601                           ;main.c: 480: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*0) , t.h);
 13602  0666  0021               	movlb	1	; select bank1
 13603  0667  0845               	movf	_idx_RingBuffer^(0+128),w
 13604  0668  00FA               	movwf	??_monitoring_ISR
 13605  0669  01FB               	clrf	??_monitoring_ISR+1
 13606  066A  087A               	movf	??_monitoring_ISR,w
 13607  066B  00F0               	movwf	___wmul@multiplier
 13608  066C  087B               	movf	??_monitoring_ISR+1,w
 13609  066D  00F1               	movwf	___wmul@multiplier+1
 13610  066E  3005               	movlw	5
 13611  066F  00F2               	movwf	___wmul@multiplicand
 13612  0670  3000               	movlw	0
 13613  0671  00F3               	movwf	___wmul@multiplicand+1
 13614  0672  3188  20BF  3186   	fcall	___wmul
 13615  0675  0870               	movf	?___wmul,w
 13616  0676  3E14               	addlw	20
 13617  0677  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13618  0678  3070               	movlw	112
 13619  0679  3D71               	addwfc	?___wmul+1,w
 13620  067A  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13621  067B  0020               	movlb	0	; select bank0
 13622  067C  0857               	movf	_t,w
 13623  067D  00FC               	movwf	??_monitoring_ISR+2
 13624  067E  087C               	movf	??_monitoring_ISR+2,w
 13625  067F  00F8               	movwf	i1DATAEE_WriteByte@bData
 13626  0680  3188  20A1  3186   	fcall	i1_DATAEE_WriteByte
 13627                           
 13628                           ;main.c: 481: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*1) , t.m);
 13629  0683  0021               	movlb	1	; select bank1
 13630  0684  0845               	movf	_idx_RingBuffer^(0+128),w
 13631  0685  00FA               	movwf	??_monitoring_ISR
 13632  0686  01FB               	clrf	??_monitoring_ISR+1
 13633  0687  087A               	movf	??_monitoring_ISR,w
 13634  0688  00F0               	movwf	___wmul@multiplier
 13635  0689  087B               	movf	??_monitoring_ISR+1,w
 13636  068A  00F1               	movwf	___wmul@multiplier+1
 13637  068B  3005               	movlw	5
 13638  068C  00F2               	movwf	___wmul@multiplicand
 13639  068D  3000               	movlw	0
 13640  068E  00F3               	movwf	___wmul@multiplicand+1
 13641  068F  3188  20BF  3186   	fcall	___wmul
 13642  0692  0870               	movf	?___wmul,w
 13643  0693  3E1C               	addlw	28
 13644  0694  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13645  0695  3070               	movlw	112
 13646  0696  3D71               	addwfc	?___wmul+1,w
 13647  0697  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13648  0698  0020               	movlb	0	; select bank0
 13649  0699  0858               	movf	_t+1,w
 13650  069A  00FC               	movwf	??_monitoring_ISR+2
 13651  069B  087C               	movf	??_monitoring_ISR+2,w
 13652  069C  00F8               	movwf	i1DATAEE_WriteByte@bData
 13653  069D  3188  20A1  3186   	fcall	i1_DATAEE_WriteByte
 13654                           
 13655                           ;main.c: 482: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*2) , t.s);
 13656  06A0  0021               	movlb	1	; select bank1
 13657  06A1  0845               	movf	_idx_RingBuffer^(0+128),w
 13658  06A2  00FA               	movwf	??_monitoring_ISR
 13659  06A3  01FB               	clrf	??_monitoring_ISR+1
 13660  06A4  087A               	movf	??_monitoring_ISR,w
 13661  06A5  00F0               	movwf	___wmul@multiplier
 13662  06A6  087B               	movf	??_monitoring_ISR+1,w
 13663  06A7  00F1               	movwf	___wmul@multiplier+1
 13664  06A8  3005               	movlw	5
 13665  06A9  00F2               	movwf	___wmul@multiplicand
 13666  06AA  3000               	movlw	0
 13667  06AB  00F3               	movwf	___wmul@multiplicand+1
 13668  06AC  3188  20BF  3186   	fcall	___wmul
 13669  06AF  0870               	movf	?___wmul,w
 13670  06B0  3E24               	addlw	36
 13671  06B1  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13672  06B2  3070               	movlw	112
 13673  06B3  3D71               	addwfc	?___wmul+1,w
 13674  06B4  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13675  06B5  0020               	movlb	0	; select bank0
 13676  06B6  0859               	movf	_t+2,w
 13677  06B7  00FC               	movwf	??_monitoring_ISR+2
 13678  06B8  087C               	movf	??_monitoring_ISR+2,w
 13679  06B9  00F8               	movwf	i1DATAEE_WriteByte@bData
 13680  06BA  3188  20A1  3186   	fcall	i1_DATAEE_WriteByte
 13681                           
 13682                           ;main.c: 483: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*3) , temp);
 13683  06BD  0021               	movlb	1	; select bank1
 13684  06BE  0845               	movf	_idx_RingBuffer^(0+128),w
 13685  06BF  00FA               	movwf	??_monitoring_ISR
 13686  06C0  01FB               	clrf	??_monitoring_ISR+1
 13687  06C1  087A               	movf	??_monitoring_ISR,w
 13688  06C2  00F0               	movwf	___wmul@multiplier
 13689  06C3  087B               	movf	??_monitoring_ISR+1,w
 13690  06C4  00F1               	movwf	___wmul@multiplier+1
 13691  06C5  3005               	movlw	5
 13692  06C6  00F2               	movwf	___wmul@multiplicand
 13693  06C7  3000               	movlw	0
 13694  06C8  00F3               	movwf	___wmul@multiplicand+1
 13695  06C9  3188  20BF  3186   	fcall	___wmul
 13696  06CC  0870               	movf	?___wmul,w
 13697  06CD  3E2C               	addlw	44
 13698  06CE  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13699  06CF  3070               	movlw	112
 13700  06D0  3D71               	addwfc	?___wmul+1,w
 13701  06D1  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13702  06D2  0020               	movlb	0	; select bank0
 13703  06D3  0863               	movf	_temp,w
 13704  06D4  00FC               	movwf	??_monitoring_ISR+2
 13705  06D5  087C               	movf	??_monitoring_ISR+2,w
 13706  06D6  00F8               	movwf	i1DATAEE_WriteByte@bData
 13707  06D7  3188  20A1  3186   	fcall	i1_DATAEE_WriteByte
 13708                           
 13709                           ;main.c: 484: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*4) , lumLevel);
 13710  06DA  0021               	movlb	1	; select bank1
 13711  06DB  0845               	movf	_idx_RingBuffer^(0+128),w
 13712  06DC  00FA               	movwf	??_monitoring_ISR
 13713  06DD  01FB               	clrf	??_monitoring_ISR+1
 13714  06DE  087A               	movf	??_monitoring_ISR,w
 13715  06DF  00F0               	movwf	___wmul@multiplier
 13716  06E0  087B               	movf	??_monitoring_ISR+1,w
 13717  06E1  00F1               	movwf	___wmul@multiplier+1
 13718  06E2  3005               	movlw	5
 13719  06E3  00F2               	movwf	___wmul@multiplicand
 13720  06E4  3000               	movlw	0
 13721  06E5  00F3               	movwf	___wmul@multiplicand+1
 13722  06E6  3188  20BF  3186   	fcall	___wmul
 13723  06E9  0870               	movf	?___wmul,w
 13724  06EA  3E34               	addlw	52
 13725  06EB  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13726  06EC  3070               	movlw	112
 13727  06ED  3D71               	addwfc	?___wmul+1,w
 13728  06EE  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13729  06EF  0020               	movlb	0	; select bank0
 13730  06F0  0862               	movf	_lumLevel,w
 13731  06F1  00FC               	movwf	??_monitoring_ISR+2
 13732  06F2  087C               	movf	??_monitoring_ISR+2,w
 13733  06F3  00F8               	movwf	i1DATAEE_WriteByte@bData
 13734  06F4  3188  20A1  3186   	fcall	i1_DATAEE_WriteByte
 13735  06F7                     i1l4814:
 13736                           
 13737                           ;main.c: 486: idx_RingBuffer++;
 13738  06F7  3001               	movlw	1
 13739  06F8  00FA               	movwf	??_monitoring_ISR
 13740  06F9  087A               	movf	??_monitoring_ISR,w
 13741  06FA  0021               	movlb	1	; select bank1
 13742  06FB  07C5               	addwf	_idx_RingBuffer^(0+128),f
 13743  06FC                     i1l4816:
 13744                           
 13745                           ;main.c: 487: if(idx_RingBuffer > NREG){
 13746  06FC  0845               	movf	_idx_RingBuffer^(0+128),w
 13747  06FD  0247               	subwf	_NREG^(0+128),w
 13748  06FE  1803               	skipnc
 13749  06FF  2F01               	goto	u436_21
 13750  0700  2F02               	goto	u436_20
 13751  0701                     u436_21:
 13752  0701  2F03               	goto	i1l4820
 13753  0702                     u436_20:
 13754  0702                     i1l4818:
 13755                           
 13756                           ;main.c: 488: idx_RingBuffer = 0;
 13757  0702  01C5               	clrf	_idx_RingBuffer^(0+128)
 13758  0703                     i1l4820:
 13759                           
 13760                           ;main.c: 489: };main.c: 490: prevTemp = temp;
 13761  0703  0020               	movlb	0	; select bank0
 13762  0704  0863               	movf	_temp,w
 13763  0705  00FA               	movwf	??_monitoring_ISR
 13764  0706  01FB               	clrf	??_monitoring_ISR+1
 13765  0707  087A               	movf	??_monitoring_ISR,w
 13766  0708  00EC               	movwf	_prevTemp
 13767  0709  087B               	movf	??_monitoring_ISR+1,w
 13768  070A  00ED               	movwf	_prevTemp+1
 13769  070B                     i1l4822:
 13770                           
 13771                           ;main.c: 491: prevLumLevel = lumLevel;
 13772  070B  0862               	movf	_lumLevel,w
 13773  070C  00FA               	movwf	??_monitoring_ISR
 13774  070D  01FB               	clrf	??_monitoring_ISR+1
 13775  070E  087A               	movf	??_monitoring_ISR,w
 13776  070F  00EA               	movwf	_prevLumLevel
 13777  0710  087B               	movf	??_monitoring_ISR+1,w
 13778  0711  00EB               	movwf	_prevLumLevel+1
 13779  0712                     i1l4824:
 13780                           
 13781                           ;main.c: 492: };main.c: 495: if(ALAF == 'A'){
 13782  0712  3041               	movlw	65
 13783  0713  0665               	xorwf	_ALAF,w
 13784  0714  1D03               	btfss	3,2
 13785  0715  2F17               	goto	u437_21
 13786  0716  2F18               	goto	u437_20
 13787  0717                     u437_21:
 13788  0717  2F50               	goto	i1l1312
 13789  0718                     u437_20:
 13790  0718                     i1l4826:
 13791                           
 13792                           ;main.c: 497: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 13793  0718  0851               	movf	_lumAlarm,w
 13794  0719  0262               	subwf	_lumLevel,w
 13795  071A  1803               	skipnc
 13796  071B  2F1D               	goto	u438_21
 13797  071C  2F1E               	goto	u438_20
 13798  071D                     u438_21:
 13799  071D  2F32               	goto	i1l4840
 13800  071E                     u438_20:
 13801  071E                     i1l4828:
 13802  071E  0860               	movf	_editingLumAlarm,w
 13803  071F  1D03               	btfss	3,2
 13804  0720  2F22               	goto	u439_21
 13805  0721  2F23               	goto	u439_20
 13806  0722                     u439_21:
 13807  0722  2F32               	goto	i1l4840
 13808  0723                     u439_20:
 13809  0723                     i1l4830:
 13810                           
 13811                           ;main.c: 498: if(!lumAlarm.triggered){
 13812  0723  0853               	movf	_lumAlarm+2,w
 13813  0724  1D03               	btfss	3,2
 13814  0725  2F27               	goto	u440_21
 13815  0726  2F28               	goto	u440_20
 13816  0727                     u440_21:
 13817  0727  2F2C               	goto	i1l4834
 13818  0728                     u440_20:
 13819  0728                     i1l4832:
 13820                           
 13821                           ;main.c: 499: alarmPWMStart.h = 0xff;
 13822  0728  30FF               	movlw	255
 13823  0729  00FA               	movwf	??_monitoring_ISR
 13824  072A  087A               	movf	??_monitoring_ISR,w
 13825  072B  00E7               	movwf	_alarmPWMStart
 13826  072C                     i1l4834:
 13827                           
 13828                           ;main.c: 500: };main.c: 501: lumAlarm.triggered = 1;
 13829  072C  01D3               	clrf	_lumAlarm+2
 13830  072D  0AD3               	incf	_lumAlarm+2,f
 13831  072E                     i1l4836:
 13832                           
 13833                           ;main.c: 503: lumAlarm.trigger = 1;
 13834  072E  01D2               	clrf	_lumAlarm+1
 13835  072F  0AD2               	incf	_lumAlarm+1,f
 13836  0730                     i1l4838:
 13837  0730  1616               	bsf	22,4	;volatile
 13838  0731  2F34               	goto	i1l4844
 13839  0732                     i1l4840:
 13840                           
 13841                           ;main.c: 506: lumAlarm.triggered = 0;
 13842  0732  01D3               	clrf	_lumAlarm+2
 13843  0733                     i1l4842:
 13844  0733  1216               	bcf	22,4	;volatile
 13845  0734                     i1l4844:
 13846                           
 13847                           ;main.c: 508: };main.c: 511: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 13848  0734  0863               	movf	_temp,w
 13849  0735  0254               	subwf	_tempAlarm,w
 13850  0736  1803               	skipnc
 13851  0737  2F39               	goto	u441_21
 13852  0738  2F3A               	goto	u441_20
 13853  0739                     u441_21:
 13854  0739  2F4E               	goto	i1l4858
 13855  073A                     u441_20:
 13856  073A                     i1l4846:
 13857  073A  0861               	movf	_editingTempAlarm,w
 13858  073B  1D03               	btfss	3,2
 13859  073C  2F3E               	goto	u442_21
 13860  073D  2F3F               	goto	u442_20
 13861  073E                     u442_21:
 13862  073E  2F4E               	goto	i1l4858
 13863  073F                     u442_20:
 13864  073F                     i1l4848:
 13865                           
 13866                           ;main.c: 512: if(!tempAlarm.triggered){
 13867  073F  0856               	movf	_tempAlarm+2,w
 13868  0740  1D03               	btfss	3,2
 13869  0741  2F43               	goto	u443_21
 13870  0742  2F44               	goto	u443_20
 13871  0743                     u443_21:
 13872  0743  2F48               	goto	i1l4852
 13873  0744                     u443_20:
 13874  0744                     i1l4850:
 13875                           
 13876                           ;main.c: 513: alarmPWMStart.h = 0xff;
 13877  0744  30FF               	movlw	255
 13878  0745  00FA               	movwf	??_monitoring_ISR
 13879  0746  087A               	movf	??_monitoring_ISR,w
 13880  0747  00E7               	movwf	_alarmPWMStart
 13881  0748                     i1l4852:
 13882                           
 13883                           ;main.c: 514: };main.c: 516: tempAlarm.triggered = 1;
 13884  0748  01D6               	clrf	_tempAlarm+2
 13885  0749  0AD6               	incf	_tempAlarm+2,f
 13886  074A                     i1l4854:
 13887                           
 13888                           ;main.c: 518: tempAlarm.trigger = 1;
 13889  074A  01D5               	clrf	_tempAlarm+1
 13890  074B  0AD5               	incf	_tempAlarm+1,f
 13891  074C                     i1l4856:
 13892  074C  1696               	bsf	22,5	;volatile
 13893  074D  2F50               	goto	i1l1312
 13894  074E                     i1l4858:
 13895                           
 13896                           ;main.c: 522: tempAlarm.triggered = 0;
 13897  074E  01D6               	clrf	_tempAlarm+2
 13898  074F                     i1l4860:
 13899  074F  1296               	bcf	22,5	;volatile
 13900  0750                     i1l1312:
 13901  0750  0008               	return
 13902  0751                     __end_of_monitoring_ISR:
 13903                           
 13904                           	psect	text35
 13905  0EF3                     __ptext35:	
 13906 ;; *************** function _tsttc *****************
 13907 ;; Defined at:
 13908 ;;		line 76 in file "main.c"
 13909 ;; Parameters:    Size  Location     Type
 13910 ;;		None
 13911 ;; Auto vars:     Size  Location     Type
 13912 ;;  value           1    3[COMMON] unsigned char 
 13913 ;; Return value:  Size  Location     Type
 13914 ;;                  1    wreg      unsigned char 
 13915 ;; Registers used:
 13916 ;;		wreg, status,2, status,0, pclath, cstack
 13917 ;; Tracked objects:
 13918 ;;		On entry : 0/0
 13919 ;;		On exit  : 0/0
 13920 ;;		Unchanged: 0/0
 13921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13926 ;;Total ram usage:        2 bytes
 13927 ;; Hardware stack levels used:    1
 13928 ;; Hardware stack levels required when called:    1
 13929 ;; This function calls:
 13930 ;;		_ReadI2C
 13931 ;;		i1_WriteI2C
 13932 ;; This function is called by:
 13933 ;;		_monitoring_ISR
 13934 ;; This function uses a non-reentrant model
 13935 ;;
 13936                           
 13937                           
 13938                           ;psect for function _tsttc
 13939  0EF3                     _tsttc:
 13940  0EF3                     i1l949:	
 13941                           ;incstack = 0
 13942                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 13943                           ;main.c: 78: unsigned char value;;main.c: 79: do{
 13944                           
 13945  0EF3                     i1l4126:	
 13946                           ;main.c: 80: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13947                           
 13948  0EF3  0023               	movlb	3	; select bank3
 13949  0EF4  0C0F               	rrf	15,w	;volatile
 13950  0EF5  0C89               	rrf	9,f
 13951  0EF6  3901               	andlw	1
 13952  0EF7  00F2               	movwf	??_tsttc
 13953  0EF8  0811               	movf	17,w	;volatile
 13954  0EF9  391F               	andlw	31
 13955  0EFA  0472               	iorwf	??_tsttc,w
 13956  0EFB  1D03               	btfss	3,2
 13957  0EFC  2EFE               	goto	u315_21
 13958  0EFD  2EFF               	goto	u315_20
 13959  0EFE                     u315_21:
 13960  0EFE  2EF3               	goto	i1l4126
 13961  0EFF                     u315_20:
 13962  0EFF                     i1l952:
 13963                           
 13964                           ;main.c: 81: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 13965  0EFF  1411               	bsf	17,0	;volatile
 13966  0F00                     i1l953:
 13967  0F00  1811               	btfsc	17,0	;volatile
 13968  0F01  2F03               	goto	u316_21
 13969  0F02  2F04               	goto	u316_20
 13970  0F03                     u316_21:
 13971  0F03  2F00               	goto	i1l953
 13972  0F04                     u316_20:
 13973  0F04                     i1l4128:
 13974  0F04  0C0F               	rrf	15,w	;volatile
 13975  0F05  0C89               	rrf	9,f
 13976  0F06  3901               	andlw	1
 13977  0F07  00F2               	movwf	??_tsttc
 13978  0F08  0811               	movf	17,w	;volatile
 13979  0F09  391F               	andlw	31
 13980  0F0A  0472               	iorwf	??_tsttc,w
 13981  0F0B  1D03               	btfss	3,2
 13982  0F0C  2F0E               	goto	u317_21
 13983  0F0D  2F0F               	goto	u317_20
 13984  0F0E                     u317_21:
 13985  0F0E  2F04               	goto	i1l4128
 13986  0F0F                     u317_20:
 13987  0F0F                     i1l4130:
 13988                           
 13989                           ;main.c: 83: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13990  0F0F  309A               	movlw	154
 13991  0F10  318A  22B3  318E   	fcall	i1_WriteI2C
 13992  0F13                     i1l4132:
 13993  0F13  0023               	movlb	3	; select bank3
 13994  0F14  0C0F               	rrf	15,w	;volatile
 13995  0F15  0C89               	rrf	9,f
 13996  0F16  3901               	andlw	1
 13997  0F17  00F2               	movwf	??_tsttc
 13998  0F18  0811               	movf	17,w	;volatile
 13999  0F19  391F               	andlw	31
 14000  0F1A  0472               	iorwf	??_tsttc,w
 14001  0F1B  1D03               	btfss	3,2
 14002  0F1C  2F1E               	goto	u318_21
 14003  0F1D  2F1F               	goto	u318_20
 14004  0F1E                     u318_21:
 14005  0F1E  2F13               	goto	i1l4132
 14006  0F1F                     u318_20:
 14007  0F1F                     i1l4134:
 14008                           
 14009                           ;main.c: 84: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14010  0F1F  3001               	movlw	1
 14011  0F20  318A  22B3  318E   	fcall	i1_WriteI2C
 14012  0F23                     i1l4136:
 14013  0F23  0023               	movlb	3	; select bank3
 14014  0F24  0C0F               	rrf	15,w	;volatile
 14015  0F25  0C89               	rrf	9,f
 14016  0F26  3901               	andlw	1
 14017  0F27  00F2               	movwf	??_tsttc
 14018  0F28  0811               	movf	17,w	;volatile
 14019  0F29  391F               	andlw	31
 14020  0F2A  0472               	iorwf	??_tsttc,w
 14021  0F2B  1D03               	btfss	3,2
 14022  0F2C  2F2E               	goto	u319_21
 14023  0F2D  2F2F               	goto	u319_20
 14024  0F2E                     u319_21:
 14025  0F2E  2F23               	goto	i1l4136
 14026  0F2F                     u319_20:
 14027  0F2F                     i1l964:
 14028                           
 14029                           ;main.c: 85: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 14030  0F2F  1491               	bsf	17,1	;volatile
 14031  0F30                     i1l965:
 14032  0F30  1891               	btfsc	17,1	;volatile
 14033  0F31  2F33               	goto	u320_21
 14034  0F32  2F34               	goto	u320_20
 14035  0F33                     u320_21:
 14036  0F33  2F30               	goto	i1l965
 14037  0F34                     u320_20:
 14038  0F34                     i1l4138:
 14039  0F34  0C0F               	rrf	15,w	;volatile
 14040  0F35  0C89               	rrf	9,f
 14041  0F36  3901               	andlw	1
 14042  0F37  00F2               	movwf	??_tsttc
 14043  0F38  0811               	movf	17,w	;volatile
 14044  0F39  391F               	andlw	31
 14045  0F3A  0472               	iorwf	??_tsttc,w
 14046  0F3B  1D03               	btfss	3,2
 14047  0F3C  2F3E               	goto	u321_21
 14048  0F3D  2F3F               	goto	u321_20
 14049  0F3E                     u321_21:
 14050  0F3E  2F34               	goto	i1l4138
 14051  0F3F                     u321_20:
 14052  0F3F                     i1l4140:
 14053                           
 14054                           ;main.c: 86: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14055  0F3F  309B               	movlw	155
 14056  0F40  318A  22B3  318E   	fcall	i1_WriteI2C
 14057  0F43                     i1l4142:
 14058  0F43  0023               	movlb	3	; select bank3
 14059  0F44  0C0F               	rrf	15,w	;volatile
 14060  0F45  0C89               	rrf	9,f
 14061  0F46  3901               	andlw	1
 14062  0F47  00F2               	movwf	??_tsttc
 14063  0F48  0811               	movf	17,w	;volatile
 14064  0F49  391F               	andlw	31
 14065  0F4A  0472               	iorwf	??_tsttc,w
 14066  0F4B  1D03               	btfss	3,2
 14067  0F4C  2F4E               	goto	u322_21
 14068  0F4D  2F4F               	goto	u322_20
 14069  0F4E                     u322_21:
 14070  0F4E  2F43               	goto	i1l4142
 14071  0F4F                     u322_20:
 14072  0F4F                     i1l4144:
 14073                           
 14074                           ;main.c: 87: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14075  0F4F  3188  206C  318E   	fcall	_ReadI2C
 14076  0F52  00F2               	movwf	??_tsttc
 14077  0F53  0872               	movf	??_tsttc,w
 14078  0F54  00F3               	movwf	tsttc@value
 14079  0F55                     i1l4146:
 14080  0F55  0023               	movlb	3	; select bank3
 14081  0F56  0C0F               	rrf	15,w	;volatile
 14082  0F57  0C89               	rrf	9,f
 14083  0F58  3901               	andlw	1
 14084  0F59  00F2               	movwf	??_tsttc
 14085  0F5A  0811               	movf	17,w	;volatile
 14086  0F5B  391F               	andlw	31
 14087  0F5C  0472               	iorwf	??_tsttc,w
 14088  0F5D  1D03               	btfss	3,2
 14089  0F5E  2F60               	goto	u323_21
 14090  0F5F  2F61               	goto	u323_20
 14091  0F60                     u323_21:
 14092  0F60  2F55               	goto	i1l4146
 14093  0F61                     u323_20:
 14094  0F61                     i1l976:
 14095                           
 14096                           ;main.c: 88: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14097  0F61  1691               	bsf	17,5	;volatile
 14098  0F62  1611               	bsf	17,4	;volatile
 14099  0F63                     i1l977:
 14100  0F63  1A11               	btfsc	17,4	;volatile
 14101  0F64  2F66               	goto	u324_21
 14102  0F65  2F67               	goto	u324_20
 14103  0F66                     u324_21:
 14104  0F66  2F63               	goto	i1l977
 14105  0F67                     u324_20:
 14106  0F67                     i1l4148:
 14107  0F67  0C0F               	rrf	15,w	;volatile
 14108  0F68  0C89               	rrf	9,f
 14109  0F69  3901               	andlw	1
 14110  0F6A  00F2               	movwf	??_tsttc
 14111  0F6B  0811               	movf	17,w	;volatile
 14112  0F6C  391F               	andlw	31
 14113  0F6D  0472               	iorwf	??_tsttc,w
 14114  0F6E  1D03               	btfss	3,2
 14115  0F6F  2F71               	goto	u325_21
 14116  0F70  2F72               	goto	u325_20
 14117  0F71                     u325_21:
 14118  0F71  2F67               	goto	i1l4148
 14119  0F72                     u325_20:
 14120  0F72                     i1l982:
 14121                           
 14122                           ;main.c: 89: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14123  0F72  1511               	bsf	17,2	;volatile
 14124  0F73                     i1l983:
 14125  0F73  1911               	btfsc	17,2	;volatile
 14126  0F74  2F76               	goto	u326_21
 14127  0F75  2F77               	goto	u326_20
 14128  0F76                     u326_21:
 14129  0F76  2F73               	goto	i1l983
 14130  0F77                     u326_20:
 14131  0F77                     i1l985:
 14132                           
 14133                           ;main.c: 90: } while (!(value & 0x40));
 14134  0F77  1F73               	btfss	tsttc@value,6
 14135  0F78  2F7A               	goto	u327_21
 14136  0F79  2F7B               	goto	u327_20
 14137  0F7A                     u327_21:
 14138  0F7A  2EF3               	goto	i1l949
 14139  0F7B                     u327_20:
 14140  0F7B                     i1l4150:
 14141  0F7B  0C0F               	rrf	15,w	;volatile
 14142  0F7C  0C89               	rrf	9,f
 14143  0F7D  3901               	andlw	1
 14144  0F7E  00F2               	movwf	??_tsttc
 14145  0F7F  0811               	movf	17,w	;volatile
 14146  0F80  391F               	andlw	31
 14147  0F81  0472               	iorwf	??_tsttc,w
 14148  0F82  1D03               	btfss	3,2
 14149  0F83  2F85               	goto	u328_21
 14150  0F84  2F86               	goto	u328_20
 14151  0F85                     u328_21:
 14152  0F85  2F7B               	goto	i1l4150
 14153  0F86                     u328_20:
 14154  0F86                     i1l989:
 14155                           
 14156                           ;main.c: 93: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 14157  0F86  1411               	bsf	17,0	;volatile
 14158  0F87                     i1l990:
 14159  0F87  1811               	btfsc	17,0	;volatile
 14160  0F88  2F8A               	goto	u329_21
 14161  0F89  2F8B               	goto	u329_20
 14162  0F8A                     u329_21:
 14163  0F8A  2F87               	goto	i1l990
 14164  0F8B                     u329_20:
 14165  0F8B                     i1l4152:
 14166  0F8B  0C0F               	rrf	15,w	;volatile
 14167  0F8C  0C89               	rrf	9,f
 14168  0F8D  3901               	andlw	1
 14169  0F8E  00F2               	movwf	??_tsttc
 14170  0F8F  0811               	movf	17,w	;volatile
 14171  0F90  391F               	andlw	31
 14172  0F91  0472               	iorwf	??_tsttc,w
 14173  0F92  1D03               	btfss	3,2
 14174  0F93  2F95               	goto	u330_21
 14175  0F94  2F96               	goto	u330_20
 14176  0F95                     u330_21:
 14177  0F95  2F8B               	goto	i1l4152
 14178  0F96                     u330_20:
 14179  0F96                     i1l4154:
 14180                           
 14181                           ;main.c: 94: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14182  0F96  309A               	movlw	154
 14183  0F97  318A  22B3  318E   	fcall	i1_WriteI2C
 14184  0F9A                     i1l4156:
 14185  0F9A  0023               	movlb	3	; select bank3
 14186  0F9B  0C0F               	rrf	15,w	;volatile
 14187  0F9C  0C89               	rrf	9,f
 14188  0F9D  3901               	andlw	1
 14189  0F9E  00F2               	movwf	??_tsttc
 14190  0F9F  0811               	movf	17,w	;volatile
 14191  0FA0  391F               	andlw	31
 14192  0FA1  0472               	iorwf	??_tsttc,w
 14193  0FA2  1D03               	btfss	3,2
 14194  0FA3  2FA5               	goto	u331_21
 14195  0FA4  2FA6               	goto	u331_20
 14196  0FA5                     u331_21:
 14197  0FA5  2F9A               	goto	i1l4156
 14198  0FA6                     u331_20:
 14199  0FA6                     i1l4158:
 14200                           
 14201                           ;main.c: 95: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14202  0FA6  3000               	movlw	0
 14203  0FA7  318A  22B3  318E   	fcall	i1_WriteI2C
 14204  0FAA                     i1l4160:
 14205  0FAA  0023               	movlb	3	; select bank3
 14206  0FAB  0C0F               	rrf	15,w	;volatile
 14207  0FAC  0C89               	rrf	9,f
 14208  0FAD  3901               	andlw	1
 14209  0FAE  00F2               	movwf	??_tsttc
 14210  0FAF  0811               	movf	17,w	;volatile
 14211  0FB0  391F               	andlw	31
 14212  0FB1  0472               	iorwf	??_tsttc,w
 14213  0FB2  1D03               	btfss	3,2
 14214  0FB3  2FB5               	goto	u332_21
 14215  0FB4  2FB6               	goto	u332_20
 14216  0FB5                     u332_21:
 14217  0FB5  2FAA               	goto	i1l4160
 14218  0FB6                     u332_20:
 14219  0FB6                     i1l1001:
 14220                           
 14221                           ;main.c: 96: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 14222  0FB6  1491               	bsf	17,1	;volatile
 14223  0FB7                     i1l1002:
 14224  0FB7  1891               	btfsc	17,1	;volatile
 14225  0FB8  2FBA               	goto	u333_21
 14226  0FB9  2FBB               	goto	u333_20
 14227  0FBA                     u333_21:
 14228  0FBA  2FB7               	goto	i1l1002
 14229  0FBB                     u333_20:
 14230  0FBB                     i1l4162:
 14231  0FBB  0C0F               	rrf	15,w	;volatile
 14232  0FBC  0C89               	rrf	9,f
 14233  0FBD  3901               	andlw	1
 14234  0FBE  00F2               	movwf	??_tsttc
 14235  0FBF  0811               	movf	17,w	;volatile
 14236  0FC0  391F               	andlw	31
 14237  0FC1  0472               	iorwf	??_tsttc,w
 14238  0FC2  1D03               	btfss	3,2
 14239  0FC3  2FC5               	goto	u334_21
 14240  0FC4  2FC6               	goto	u334_20
 14241  0FC5                     u334_21:
 14242  0FC5  2FBB               	goto	i1l4162
 14243  0FC6                     u334_20:
 14244  0FC6                     i1l4164:
 14245                           
 14246                           ;main.c: 97: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14247  0FC6  309B               	movlw	155
 14248  0FC7  318A  22B3  318E   	fcall	i1_WriteI2C
 14249  0FCA                     i1l4166:
 14250  0FCA  0023               	movlb	3	; select bank3
 14251  0FCB  0C0F               	rrf	15,w	;volatile
 14252  0FCC  0C89               	rrf	9,f
 14253  0FCD  3901               	andlw	1
 14254  0FCE  00F2               	movwf	??_tsttc
 14255  0FCF  0811               	movf	17,w	;volatile
 14256  0FD0  391F               	andlw	31
 14257  0FD1  0472               	iorwf	??_tsttc,w
 14258  0FD2  1D03               	btfss	3,2
 14259  0FD3  2FD5               	goto	u335_21
 14260  0FD4  2FD6               	goto	u335_20
 14261  0FD5                     u335_21:
 14262  0FD5  2FCA               	goto	i1l4166
 14263  0FD6                     u335_20:
 14264  0FD6                     i1l4168:
 14265                           
 14266                           ;main.c: 98: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14267  0FD6  3188  206C  318E   	fcall	_ReadI2C
 14268  0FD9  00F2               	movwf	??_tsttc
 14269  0FDA  0872               	movf	??_tsttc,w
 14270  0FDB  00F3               	movwf	tsttc@value
 14271  0FDC                     i1l4170:
 14272  0FDC  0023               	movlb	3	; select bank3
 14273  0FDD  0C0F               	rrf	15,w	;volatile
 14274  0FDE  0C89               	rrf	9,f
 14275  0FDF  3901               	andlw	1
 14276  0FE0  00F2               	movwf	??_tsttc
 14277  0FE1  0811               	movf	17,w	;volatile
 14278  0FE2  391F               	andlw	31
 14279  0FE3  0472               	iorwf	??_tsttc,w
 14280  0FE4  1D03               	btfss	3,2
 14281  0FE5  2FE7               	goto	u336_21
 14282  0FE6  2FE8               	goto	u336_20
 14283  0FE7                     u336_21:
 14284  0FE7  2FDC               	goto	i1l4170
 14285  0FE8                     u336_20:
 14286  0FE8                     i1l1013:
 14287                           
 14288                           ;main.c: 99: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14289  0FE8  1691               	bsf	17,5	;volatile
 14290  0FE9  1611               	bsf	17,4	;volatile
 14291  0FEA                     i1l1014:
 14292  0FEA  1A11               	btfsc	17,4	;volatile
 14293  0FEB  2FED               	goto	u337_21
 14294  0FEC  2FEE               	goto	u337_20
 14295  0FED                     u337_21:
 14296  0FED  2FEA               	goto	i1l1014
 14297  0FEE                     u337_20:
 14298  0FEE                     i1l4172:
 14299  0FEE  0C0F               	rrf	15,w	;volatile
 14300  0FEF  0C89               	rrf	9,f
 14301  0FF0  3901               	andlw	1
 14302  0FF1  00F2               	movwf	??_tsttc
 14303  0FF2  0811               	movf	17,w	;volatile
 14304  0FF3  391F               	andlw	31
 14305  0FF4  0472               	iorwf	??_tsttc,w
 14306  0FF5  1D03               	btfss	3,2
 14307  0FF6  2FF8               	goto	u338_21
 14308  0FF7  2FF9               	goto	u338_20
 14309  0FF8                     u338_21:
 14310  0FF8  2FEE               	goto	i1l4172
 14311  0FF9                     u338_20:
 14312  0FF9                     i1l1019:
 14313                           
 14314                           ;main.c: 100: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14315  0FF9  1511               	bsf	17,2	;volatile
 14316  0FFA                     i1l1020:
 14317  0FFA  1911               	btfsc	17,2	;volatile
 14318  0FFB  2FFD               	goto	u339_21
 14319  0FFC  2FFE               	goto	u339_20
 14320  0FFD                     u339_21:
 14321  0FFD  2FFA               	goto	i1l1020
 14322  0FFE                     u339_20:
 14323  0FFE                     i1l4174:
 14324                           
 14325                           ;main.c: 102: return value;
 14326  0FFE  0873               	movf	tsttc@value,w
 14327  0FFF                     i1l1023:
 14328  0FFF  0008               	return
 14329  1000                     __end_of_tsttc:
 14330                           
 14331                           	psect	text36
 14332  086C                     __ptext36:	
 14333 ;; *************** function _ReadI2C *****************
 14334 ;; Defined at:
 14335 ;;		line 32 in file "I2C/i2c.c"
 14336 ;; Parameters:    Size  Location     Type
 14337 ;;		None
 14338 ;; Auto vars:     Size  Location     Type
 14339 ;;		None
 14340 ;; Return value:  Size  Location     Type
 14341 ;;                  1    wreg      unsigned char 
 14342 ;; Registers used:
 14343 ;;		wreg, status,2, status,0
 14344 ;; Tracked objects:
 14345 ;;		On entry : 0/0
 14346 ;;		On exit  : 0/0
 14347 ;;		Unchanged: 0/0
 14348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14353 ;;Total ram usage:        1 bytes
 14354 ;; Hardware stack levels used:    1
 14355 ;; This function calls:
 14356 ;;		Nothing
 14357 ;; This function is called by:
 14358 ;;		_tsttc
 14359 ;;		_LCDrecv
 14360 ;; This function uses a non-reentrant model
 14361 ;;
 14362                           
 14363                           
 14364                           ;psect for function _ReadI2C
 14365  086C                     _ReadI2C:
 14366  086C                     i1l3984:	
 14367                           ;incstack = 0
 14368                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 14369                           
 14370                           
 14371                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 14372  086C  300F               	movlw	15
 14373  086D  0023               	movlb	3	; select bank3
 14374  086E  0510               	andwf	16,w	;volatile
 14375  086F  00F0               	movwf	??_ReadI2C
 14376  0870  3008               	movlw	8
 14377  0871  0670               	xorwf	??_ReadI2C,w
 14378  0872  1903               	btfsc	3,2
 14379  0873  2875               	goto	u283_21
 14380  0874  2876               	goto	u283_20
 14381  0875                     u283_21:
 14382  0875  287F               	goto	i1l22
 14383  0876                     u283_20:
 14384  0876                     i1l3986:
 14385  0876  300F               	movlw	15
 14386  0877  0510               	andwf	16,w	;volatile
 14387  0878  00F0               	movwf	??_ReadI2C
 14388  0879  300B               	movlw	11
 14389  087A  0670               	xorwf	??_ReadI2C,w
 14390  087B  1D03               	btfss	3,2
 14391  087C  287E               	goto	u284_21
 14392  087D  287F               	goto	u284_20
 14393  087E                     u284_21:
 14394  087E  2880               	goto	i1l23
 14395  087F                     u284_20:
 14396  087F                     i1l22:
 14397                           
 14398                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 14399  087F  1591               	bsf	17,3	;volatile
 14400  0880                     i1l23:
 14401  0880  1C0F               	btfss	15,0	;volatile
 14402  0881  2883               	goto	u285_21
 14403  0882  2884               	goto	u285_20
 14404  0883                     u285_21:
 14405  0883  2880               	goto	i1l23
 14406  0884                     u285_20:
 14407  0884                     i1l3988:
 14408                           
 14409                           ;i2c.c: 37: return ( SSP1BUF );
 14410  0884  080C               	movf	12,w	;volatile
 14411  0885                     i1l26:
 14412  0885  0008               	return
 14413  0886                     __end_of_ReadI2C:
 14414                           
 14415                           	psect	text37
 14416  17C1                     __ptext37:	
 14417 ;; *************** function _ADCC_GetSingleConversion *****************
 14418 ;; Defined at:
 14419 ;;		line 130 in file "mcc_generated_files/adcc.c"
 14420 ;; Parameters:    Size  Location     Type
 14421 ;;  channel         1    wreg     enum E12086
 14422 ;; Auto vars:     Size  Location     Type
 14423 ;;  channel         1    3[COMMON] enum E12086
 14424 ;; Return value:  Size  Location     Type
 14425 ;;                  2    0[COMMON] unsigned int 
 14426 ;; Registers used:
 14427 ;;		wreg
 14428 ;; Tracked objects:
 14429 ;;		On entry : 0/0
 14430 ;;		On exit  : 0/0
 14431 ;;		Unchanged: 0/0
 14432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14433 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14436 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14437 ;;Total ram usage:        4 bytes
 14438 ;; Hardware stack levels used:    1
 14439 ;; This function calls:
 14440 ;;		Nothing
 14441 ;; This function is called by:
 14442 ;;		_monitoring_ISR
 14443 ;; This function uses a non-reentrant model
 14444 ;;
 14445                           
 14446                           
 14447                           ;psect for function _ADCC_GetSingleConversion
 14448  17C1                     _ADCC_GetSingleConversion:
 14449                           
 14450                           ;incstack = 0
 14451                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 14452                           ;ADCC_GetSingleConversion@channel stored from wreg
 14453  17C1  00F3               	movwf	ADCC_GetSingleConversion@channel
 14454  17C2                     i1l4106:
 14455                           
 14456                           ;adcc.c: 133: ADPCH = channel;
 14457  17C2  0873               	movf	ADCC_GetSingleConversion@channel,w
 14458  17C3  0021               	movlb	1	; select bank1
 14459  17C4  009E               	movwf	30	;volatile
 14460  17C5                     i1l4108:
 14461                           
 14462                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 14463  17C5  1793               	bsf	19,7	;volatile
 14464  17C6                     i1l4110:
 14465                           
 14466                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 14467  17C6  1313               	bcf	19,6	;volatile
 14468  17C7                     i1l4112:
 14469                           
 14470                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 14471  17C7  1413               	bsf	19,0	;volatile
 14472  17C8                     i1l4114:
 14473                           
 14474                           ;adcc.c: 145: __nop();
 14475  17C8  0000               	nop
 14476  17C9                     i1l587:	
 14477                           ;adcc.c: 149: {
 14478                           
 14479  17C9  0021               	movlb	1	; select bank1
 14480  17CA  1813               	btfsc	19,0	;volatile
 14481  17CB  2FCD               	goto	u314_21
 14482  17CC  2FCE               	goto	u314_20
 14483  17CD                     u314_21:
 14484  17CD  2FC9               	goto	i1l587
 14485  17CE                     u314_20:
 14486  17CE                     i1l4116:
 14487                           
 14488                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14489  17CE  080D               	movf	13,w	;volatile
 14490  17CF  00F1               	movwf	?_ADCC_GetSingleConversion+1
 14491  17D0  080C               	movf	12,w	;volatile
 14492  17D1  00F0               	movwf	?_ADCC_GetSingleConversion
 14493  17D2                     i1l590:
 14494  17D2  0008               	return
 14495  17D3                     __end_of_ADCC_GetSingleConversion:
 14496                           
 14497                           	psect	text38
 14498  179E                     __ptext38:	
 14499 ;; *************** function _TMR5_WriteTimer *****************
 14500 ;; Defined at:
 14501 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 14502 ;; Parameters:    Size  Location     Type
 14503 ;;  timerVal        2    0[COMMON] unsigned int 
 14504 ;; Auto vars:     Size  Location     Type
 14505 ;;		None
 14506 ;; Return value:  Size  Location     Type
 14507 ;;                  1    wreg      void 
 14508 ;; Registers used:
 14509 ;;		wreg, status,2
 14510 ;; Tracked objects:
 14511 ;;		On entry : 0/0
 14512 ;;		On exit  : 0/0
 14513 ;;		Unchanged: 0/0
 14514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14518 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14519 ;;Total ram usage:        2 bytes
 14520 ;; Hardware stack levels used:    1
 14521 ;; This function calls:
 14522 ;;		Nothing
 14523 ;; This function is called by:
 14524 ;;		_TMR5_ISR
 14525 ;;		_TMR5_Reload
 14526 ;; This function uses a non-reentrant model
 14527 ;;
 14528                           
 14529                           
 14530                           ;psect for function _TMR5_WriteTimer
 14531  179E                     _TMR5_WriteTimer:
 14532  179E                     i1l4532:	
 14533                           ;incstack = 0
 14534                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 14535                           
 14536                           
 14537                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 14538  179E  0024               	movlb	4	; select bank4
 14539  179F  1D1A               	btfss	26,2	;volatile
 14540  17A0  2FA2               	goto	u373_21
 14541  17A1  2FA3               	goto	u373_20
 14542  17A2                     u373_21:
 14543  17A2  2FAA               	goto	i1l4542
 14544  17A3                     u373_20:
 14545  17A3                     i1l4534:
 14546                           
 14547                           ;tmr5.c: 130: {;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 14548  17A3  101A               	bcf	26,0	;volatile
 14549  17A4                     i1l4536:
 14550                           
 14551                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 14552  17A4  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 14553  17A5  0099               	movwf	25	;volatile
 14554  17A6                     i1l4538:
 14555                           
 14556                           ;tmr5.c: 136: TMR5L = timerVal;
 14557  17A6  0870               	movf	TMR5_WriteTimer@timerVal,w
 14558  17A7  0098               	movwf	24	;volatile
 14559  17A8                     i1l4540:
 14560                           
 14561                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 14562  17A8  141A               	bsf	26,0	;volatile
 14563                           
 14564                           ;tmr5.c: 140: }
 14565  17A9  2FAE               	goto	i1l701
 14566  17AA                     i1l4542:
 14567                           
 14568                           ;tmr5.c: 141: else;tmr5.c: 142: {;tmr5.c: 144: TMR5H = (timerVal >> 8);
 14569  17AA  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 14570  17AB  0099               	movwf	25	;volatile
 14571  17AC                     i1l4544:
 14572                           
 14573                           ;tmr5.c: 145: TMR5L = timerVal;
 14574  17AC  0870               	movf	TMR5_WriteTimer@timerVal,w
 14575  17AD  0098               	movwf	24	;volatile
 14576  17AE                     i1l701:
 14577  17AE  0008               	return
 14578  17AF                     __end_of_TMR5_WriteTimer:
 14579                           
 14580                           	psect	text39
 14581  080E                     __ptext39:	
 14582 ;; *************** function _TMR3_ISR *****************
 14583 ;; Defined at:
 14584 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;		None
 14587 ;; Auto vars:     Size  Location     Type
 14588 ;;		None
 14589 ;; Return value:  Size  Location     Type
 14590 ;;                  1    wreg      void 
 14591 ;; Registers used:
 14592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14593 ;; Tracked objects:
 14594 ;;		On entry : 0/0
 14595 ;;		On exit  : 0/0
 14596 ;;		Unchanged: 0/0
 14597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14602 ;;Total ram usage:        0 bytes
 14603 ;; Hardware stack levels used:    1
 14604 ;; Hardware stack levels required when called:    5
 14605 ;; This function calls:
 14606 ;;		Absolute function
 14607 ;;		_TMR3_DefaultInterruptHandler
 14608 ;;		_TMR3_WriteTimer
 14609 ;;		_menuLCD_ISR
 14610 ;; This function is called by:
 14611 ;;		_INTERRUPT_InterruptManager
 14612 ;; This function uses a non-reentrant model
 14613 ;;
 14614                           
 14615                           
 14616                           ;psect for function _TMR3_ISR
 14617  080E                     _TMR3_ISR:
 14618  080E                     i1l4906:	
 14619                           ;incstack = 0
 14620                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14621                           
 14622                           
 14623                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 14624  080E  002E               	movlb	14	; select bank14
 14625  080F  1110               	bcf	16,2	;volatile
 14626  0810                     i1l4908:
 14627                           
 14628                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 14629  0810  0020               	movlb	0	; select bank0
 14630  0811  086F               	movf	_timer3ReloadVal+1,w	;volatile
 14631  0812  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 14632  0813  086E               	movf	_timer3ReloadVal,w	;volatile
 14633  0814  00F0               	movwf	TMR3_WriteTimer@timerVal
 14634  0815  3197  278D  3188   	fcall	_TMR3_WriteTimer
 14635  0818                     i1l4910:
 14636                           
 14637                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 14638  0818  0021               	movlb	1	; select bank1
 14639  0819  0837               	movf	_TMR3_InterruptHandler^(0+128),w
 14640  081A  0438               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 14641  081B  1903               	btfsc	3,2
 14642  081C  281E               	goto	u446_21
 14643  081D  281F               	goto	u446_20
 14644  081E                     u446_21:
 14645  081E  2824               	goto	i1l490
 14646  081F                     u446_20:
 14647  081F                     i1l4912:
 14648                           
 14649                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 14650  081F  0838               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 14651  0820  008A               	movwf	10
 14652  0821  0837               	movf	_TMR3_InterruptHandler^(0+128),w
 14653  0822  000A               	callw
 14654  0823  3188               	pagesel	$
 14655  0824                     i1l490:
 14656  0824  0008               	return
 14657  0825                     __end_of_TMR3_ISR:
 14658                           
 14659                           	psect	text40
 14660  0003                     __ptext40:	
 14661 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 14662 ;; Defined at:
 14663 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 14664 ;; Parameters:    Size  Location     Type
 14665 ;;		None
 14666 ;; Auto vars:     Size  Location     Type
 14667 ;;		None
 14668 ;; Return value:  Size  Location     Type
 14669 ;;                  1    wreg      void 
 14670 ;; Registers used:
 14671 ;;		None
 14672 ;; Tracked objects:
 14673 ;;		On entry : 0/0
 14674 ;;		On exit  : 0/0
 14675 ;;		Unchanged: 0/0
 14676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14681 ;;Total ram usage:        0 bytes
 14682 ;; Hardware stack levels used:    1
 14683 ;; This function calls:
 14684 ;;		Nothing
 14685 ;; This function is called by:
 14686 ;;		_TMR3_Initialize
 14687 ;;		_TMR3_ISR
 14688 ;; This function uses a non-reentrant model
 14689 ;;
 14690                           
 14691                           
 14692                           ;psect for function _TMR3_DefaultInterruptHandler
 14693  0003                     _TMR3_DefaultInterruptHandler:
 14694  0003                     i1l496:	
 14695                           ;incstack = 0
 14696                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 14697                           
 14698  0003  0008               	return
 14699  0004                     __end_of_TMR3_DefaultInterruptHandler:
 14700                           
 14701                           	psect	text41
 14702  006E                     __ptext41:	
 14703 ;; *************** function _menuLCD_ISR *****************
 14704 ;; Defined at:
 14705 ;;		line 332 in file "main.c"
 14706 ;; Parameters:    Size  Location     Type
 14707 ;;		None
 14708 ;; Auto vars:     Size  Location     Type
 14709 ;;  diff            3   42[BANK0 ] struct Time
 14710 ;;  str             8   27[BANK0 ] unsigned char [8]
 14711 ;;  tt              4   35[BANK0 ] unsigned char [4]
 14712 ;;  l               3   39[BANK0 ] unsigned char [3]
 14713 ;; Return value:  Size  Location     Type
 14714 ;;                  1    wreg      void 
 14715 ;; Registers used:
 14716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14717 ;; Tracked objects:
 14718 ;;		On entry : 0/0
 14719 ;;		On exit  : 0/0
 14720 ;;		Unchanged: 0/0
 14721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14723 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14724 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14725 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14726 ;;Total ram usage:       24 bytes
 14727 ;; Hardware stack levels used:    1
 14728 ;; Hardware stack levels required when called:    4
 14729 ;; This function calls:
 14730 ;;		_LCDchar
 14731 ;;		_LCDcmd
 14732 ;;		_LCDstr
 14733 ;;		_PWM_Output_D4_Enable
 14734 ;;		_TMR2_StartTimer
 14735 ;;		_differenceBetweenTimePeriod
 14736 ;;		_sprintf
 14737 ;;		i1_PWM6_LoadDutyValue
 14738 ;;		i1_PWM_Output_D4_Disable
 14739 ;;		i1_TMR2_StopTimer
 14740 ;; This function is called by:
 14741 ;;		_main
 14742 ;;		_TMR3_ISR
 14743 ;; This function uses a non-reentrant model
 14744 ;;
 14745                           
 14746                           
 14747                           ;psect for function _menuLCD_ISR
 14748  006E                     _menuLCD_ISR:
 14749  006E                     i1l4662:	
 14750                           ;incstack = 0
 14751                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14752                           
 14753                           
 14754                           ;main.c: 333: char str[8];;main.c: 334: if(editingClockAlarm){
 14755  006E  0020               	movlb	0	; select bank0
 14756  006F  085C               	movf	_editingClockAlarm,w
 14757  0070  045D               	iorwf	_editingClockAlarm+1,w
 14758  0071  1903               	btfsc	3,2
 14759  0072  2874               	goto	u403_21
 14760  0073  2875               	goto	u403_20
 14761  0074                     u403_21:
 14762  0074  2893               	goto	i1l4666
 14763  0075                     u403_20:
 14764  0075                     i1l4664:
 14765                           
 14766                           ;main.c: 335: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 14767  0075  3000               	movlw	low (STR_1| (0+32768))
 14768  0076  00A0               	movwf	sprintf@f
 14769  0077  3098               	movlw	high (STR_1| (0+32768))
 14770  0078  00A1               	movwf	sprintf@f+1
 14771  0079  084D               	movf	_clkAlarm,w
 14772  007A  00B5               	movwf	??_menuLCD_ISR
 14773  007B  01B6               	clrf	??_menuLCD_ISR+1
 14774  007C  0835               	movf	??_menuLCD_ISR,w
 14775  007D  00A2               	movwf	?_sprintf+2
 14776  007E  0836               	movf	??_menuLCD_ISR+1,w
 14777  007F  00A3               	movwf	?_sprintf+3
 14778  0080  084E               	movf	_clkAlarm+1,w
 14779  0081  00B7               	movwf	??_menuLCD_ISR+2
 14780  0082  01B8               	clrf	??_menuLCD_ISR+3
 14781  0083  0837               	movf	??_menuLCD_ISR+2,w
 14782  0084  00A4               	movwf	?_sprintf+4
 14783  0085  0838               	movf	??_menuLCD_ISR+3,w
 14784  0086  00A5               	movwf	?_sprintf+5
 14785  0087  084F               	movf	_clkAlarm+2,w
 14786  0088  00B9               	movwf	??_menuLCD_ISR+4
 14787  0089  01BA               	clrf	??_menuLCD_ISR+5
 14788  008A  0839               	movf	??_menuLCD_ISR+4,w
 14789  008B  00A6               	movwf	?_sprintf+6
 14790  008C  083A               	movf	??_menuLCD_ISR+5,w
 14791  008D  00A7               	movwf	?_sprintf+7
 14792  008E  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14793  008F  3184  2496  3180   	fcall	_sprintf
 14794                           
 14795                           ;main.c: 336: } else {
 14796  0092  28B0               	goto	i1l4668
 14797  0093                     i1l4666:
 14798                           
 14799                           ;main.c: 337: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 14800  0093  3000               	movlw	low (STR_1| (0+32768))
 14801  0094  00A0               	movwf	sprintf@f
 14802  0095  3098               	movlw	high (STR_1| (0+32768))
 14803  0096  00A1               	movwf	sprintf@f+1
 14804  0097  0857               	movf	_t,w
 14805  0098  00B5               	movwf	??_menuLCD_ISR
 14806  0099  01B6               	clrf	??_menuLCD_ISR+1
 14807  009A  0835               	movf	??_menuLCD_ISR,w
 14808  009B  00A2               	movwf	?_sprintf+2
 14809  009C  0836               	movf	??_menuLCD_ISR+1,w
 14810  009D  00A3               	movwf	?_sprintf+3
 14811  009E  0858               	movf	_t+1,w
 14812  009F  00B7               	movwf	??_menuLCD_ISR+2
 14813  00A0  01B8               	clrf	??_menuLCD_ISR+3
 14814  00A1  0837               	movf	??_menuLCD_ISR+2,w
 14815  00A2  00A4               	movwf	?_sprintf+4
 14816  00A3  0838               	movf	??_menuLCD_ISR+3,w
 14817  00A4  00A5               	movwf	?_sprintf+5
 14818  00A5  0859               	movf	_t+2,w
 14819  00A6  00B9               	movwf	??_menuLCD_ISR+4
 14820  00A7  01BA               	clrf	??_menuLCD_ISR+5
 14821  00A8  0839               	movf	??_menuLCD_ISR+4,w
 14822  00A9  00A6               	movwf	?_sprintf+6
 14823  00AA  083A               	movf	??_menuLCD_ISR+5,w
 14824  00AB  00A7               	movwf	?_sprintf+7
 14825  00AC  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14826  00AD  3184  2496  3180   	fcall	_sprintf
 14827  00B0                     i1l4668:
 14828                           
 14829                           ;main.c: 338: };main.c: 339: LCDcmd(0x80);
 14830  00B0  3080               	movlw	128
 14831  00B1  3197  2712  3180   	fcall	_LCDcmd
 14832  00B4                     i1l4670:
 14833                           
 14834                           ;main.c: 340: LCDstr(str);
 14835  00B4  303B               	movlw	low menuLCD_ISR@str
 14836  00B5  00F9               	movwf	LCDstr@p
 14837  00B6  3000               	movlw	high menuLCD_ISR@str
 14838  00B7  00FA               	movwf	LCDstr@p+1
 14839  00B8  3188  2086  3180   	fcall	_LCDstr
 14840  00BB                     i1l4672:
 14841                           
 14842                           ;main.c: 343: if(ALAF == 'A'){
 14843  00BB  3041               	movlw	65
 14844  00BC  0020               	movlb	0	; select bank0
 14845  00BD  0665               	xorwf	_ALAF,w
 14846  00BE  1D03               	btfss	3,2
 14847  00BF  28C1               	goto	u404_21
 14848  00C0  28C2               	goto	u404_20
 14849  00C1                     u404_21:
 14850  00C1  29B0               	goto	i1l4742
 14851  00C2                     u404_20:
 14852  00C2                     i1l4674:
 14853                           
 14854                           ;main.c: 344: LCDcmd(0x8F);
 14855  00C2  308F               	movlw	143
 14856  00C3  3197  2712  3180   	fcall	_LCDcmd
 14857                           
 14858                           ;main.c: 345: LCDchar(ALAF);
 14859  00C6  0020               	movlb	0	; select bank0
 14860  00C7  0865               	movf	_ALAF,w
 14861  00C8  3197  2720  3180   	fcall	_LCDchar
 14862  00CB                     i1l4676:
 14863                           
 14864                           ;main.c: 348: if(clkAlarm.trigger == 1){
 14865  00CB  0020               	movlb	0	; select bank0
 14866  00CC  0350               	decf	_clkAlarm+3,w
 14867  00CD  1D03               	btfss	3,2
 14868  00CE  28D0               	goto	u405_21
 14869  00CF  28D1               	goto	u405_20
 14870  00D0                     u405_21:
 14871  00D0  28DA               	goto	i1l4680
 14872  00D1                     u405_20:
 14873  00D1                     i1l4678:
 14874                           
 14875                           ;main.c: 349: LCDcmd(0x8B);
 14876  00D1  308B               	movlw	139
 14877  00D2  3197  2712  3180   	fcall	_LCDcmd
 14878                           
 14879                           ;main.c: 350: LCDchar('C');
 14880  00D5  3043               	movlw	67
 14881  00D6  3197  2720  3180   	fcall	_LCDchar
 14882                           
 14883                           ;main.c: 351: } else if(mode == 0){
 14884  00D9  28E8               	goto	i1l4684
 14885  00DA                     i1l4680:
 14886  00DA  085A               	movf	_mode,w
 14887  00DB  045B               	iorwf	_mode+1,w
 14888  00DC  1D03               	btfss	3,2
 14889  00DD  28DF               	goto	u406_21
 14890  00DE  28E0               	goto	u406_20
 14891  00DF                     u406_21:
 14892  00DF  28E8               	goto	i1l4684
 14893  00E0                     u406_20:
 14894  00E0                     i1l4682:
 14895                           
 14896                           ;main.c: 352: LCDcmd(0x8B);
 14897  00E0  308B               	movlw	139
 14898  00E1  3197  2712  3180   	fcall	_LCDcmd
 14899                           
 14900                           ;main.c: 353: LCDchar(' ');
 14901  00E4  3020               	movlw	32
 14902  00E5  3197  2720  3180   	fcall	_LCDchar
 14903  00E8                     i1l4684:
 14904                           
 14905                           ;main.c: 354: };main.c: 357: if(tempAlarm.trigger == 1){
 14906  00E8  0020               	movlb	0	; select bank0
 14907  00E9  0355               	decf	_tempAlarm+1,w
 14908  00EA  1D03               	btfss	3,2
 14909  00EB  28ED               	goto	u407_21
 14910  00EC  28EE               	goto	u407_20
 14911  00ED                     u407_21:
 14912  00ED  28F7               	goto	i1l4688
 14913  00EE                     u407_20:
 14914  00EE                     i1l4686:
 14915                           
 14916                           ;main.c: 358: LCDcmd(0x8C);
 14917  00EE  308C               	movlw	140
 14918  00EF  3197  2712  3180   	fcall	_LCDcmd
 14919                           
 14920                           ;main.c: 359: LCDchar('T');
 14921  00F2  3054               	movlw	84
 14922  00F3  3197  2720  3180   	fcall	_LCDchar
 14923                           
 14924                           ;main.c: 360: } else if(mode == 0){
 14925  00F6  2905               	goto	i1l4692
 14926  00F7                     i1l4688:
 14927  00F7  085A               	movf	_mode,w
 14928  00F8  045B               	iorwf	_mode+1,w
 14929  00F9  1D03               	btfss	3,2
 14930  00FA  28FC               	goto	u408_21
 14931  00FB  28FD               	goto	u408_20
 14932  00FC                     u408_21:
 14933  00FC  2905               	goto	i1l4692
 14934  00FD                     u408_20:
 14935  00FD                     i1l4690:
 14936                           
 14937                           ;main.c: 361: LCDcmd(0x8C);
 14938  00FD  308C               	movlw	140
 14939  00FE  3197  2712  3180   	fcall	_LCDcmd
 14940                           
 14941                           ;main.c: 362: LCDchar(' ');
 14942  0101  3020               	movlw	32
 14943  0102  3197  2720  3180   	fcall	_LCDchar
 14944  0105                     i1l4692:
 14945                           
 14946                           ;main.c: 363: };main.c: 366: if(lumAlarm.trigger == 1){
 14947  0105  0020               	movlb	0	; select bank0
 14948  0106  0352               	decf	_lumAlarm+1,w
 14949  0107  1D03               	btfss	3,2
 14950  0108  290A               	goto	u409_21
 14951  0109  290B               	goto	u409_20
 14952  010A                     u409_21:
 14953  010A  2914               	goto	i1l4696
 14954  010B                     u409_20:
 14955  010B                     i1l4694:
 14956                           
 14957                           ;main.c: 367: LCDcmd(0x8D);
 14958  010B  308D               	movlw	141
 14959  010C  3197  2712  3180   	fcall	_LCDcmd
 14960                           
 14961                           ;main.c: 368: LCDchar('L');
 14962  010F  304C               	movlw	76
 14963  0110  3197  2720  3180   	fcall	_LCDchar
 14964                           
 14965                           ;main.c: 369: } else if(mode == 0){
 14966  0113  2922               	goto	i1l4700
 14967  0114                     i1l4696:
 14968  0114  085A               	movf	_mode,w
 14969  0115  045B               	iorwf	_mode+1,w
 14970  0116  1D03               	btfss	3,2
 14971  0117  2919               	goto	u410_21
 14972  0118  291A               	goto	u410_20
 14973  0119                     u410_21:
 14974  0119  2922               	goto	i1l4700
 14975  011A                     u410_20:
 14976  011A                     i1l4698:
 14977                           
 14978                           ;main.c: 370: LCDcmd(0x8D);
 14979  011A  308D               	movlw	141
 14980  011B  3197  2712  3180   	fcall	_LCDcmd
 14981                           
 14982                           ;main.c: 371: LCDchar(' ');
 14983  011E  3020               	movlw	32
 14984  011F  3197  2720  3180   	fcall	_LCDchar
 14985  0122                     i1l4700:
 14986                           
 14987                           ;main.c: 372: };main.c: 373: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 14988  0122  0020               	movlb	0	; select bank0
 14989  0123  0850               	movf	_clkAlarm+3,w
 14990  0124  1D03               	btfss	3,2
 14991  0125  2927               	goto	u411_21
 14992  0126  2928               	goto	u411_20
 14993  0127                     u411_21:
 14994  0127  2932               	goto	i1l4706
 14995  0128                     u411_20:
 14996  0128                     i1l4702:
 14997  0128  0855               	movf	_tempAlarm+1,w
 14998  0129  1D03               	btfss	3,2
 14999  012A  292C               	goto	u412_21
 15000  012B  292D               	goto	u412_20
 15001  012C                     u412_21:
 15002  012C  2932               	goto	i1l4706
 15003  012D                     u412_20:
 15004  012D                     i1l4704:
 15005  012D  0852               	movf	_lumAlarm+1,w
 15006  012E  1903               	btfsc	3,2
 15007  012F  2931               	goto	u413_21
 15008  0130  2932               	goto	u413_20
 15009  0131                     u413_21:
 15010  0131  29AA               	goto	i1l1248
 15011  0132                     u413_20:
 15012  0132                     i1l4706:
 15013                           
 15014                           ;main.c: 374: if(alarmPWMStart.h == 0xff){
 15015  0132  0A67               	incf	_alarmPWMStart,w
 15016  0133  1D03               	btfss	3,2
 15017  0134  2936               	goto	u414_21
 15018  0135  2937               	goto	u414_20
 15019  0136                     u414_21:
 15020  0136  2943               	goto	i1l1251
 15021  0137                     u414_20:
 15022  0137                     i1l4708:
 15023                           
 15024                           ;main.c: 375: alarmPWMStart.h = t.h;
 15025  0137  0857               	movf	_t,w
 15026  0138  00B5               	movwf	??_menuLCD_ISR
 15027  0139  0835               	movf	??_menuLCD_ISR,w
 15028  013A  00E7               	movwf	_alarmPWMStart
 15029                           
 15030                           ;main.c: 376: alarmPWMStart.m = t.m;
 15031  013B  0858               	movf	_t+1,w
 15032  013C  00B5               	movwf	??_menuLCD_ISR
 15033  013D  0835               	movf	??_menuLCD_ISR,w
 15034  013E  00E8               	movwf	_alarmPWMStart+1
 15035                           
 15036                           ;main.c: 377: alarmPWMStart.s = t.s;
 15037  013F  0859               	movf	_t+2,w
 15038  0140  00B5               	movwf	??_menuLCD_ISR
 15039  0141  0835               	movf	??_menuLCD_ISR,w
 15040  0142  00E9               	movwf	_alarmPWMStart+2
 15041  0143                     i1l1251:
 15042                           
 15043                           ;main.c: 378: };main.c: 379: struct Time diff = {0,0,0};
 15044  0143  0021               	movlb	1	; select bank1
 15045  0144  083D               	movf	menuLCD_ISR@F12829^(0+128),w
 15046  0145  0020               	movlb	0	; select bank0
 15047  0146  00CA               	movwf	menuLCD_ISR@diff
 15048  0147  0021               	movlb	1	; select bank1
 15049  0148  083E               	movf	(menuLCD_ISR@F12829+1)^(0+128),w
 15050  0149  0020               	movlb	0	; select bank0
 15051  014A  00CB               	movwf	menuLCD_ISR@diff+1
 15052  014B  0021               	movlb	1	; select bank1
 15053  014C  083F               	movf	(menuLCD_ISR@F12829+2)^(0+128),w
 15054  014D  0020               	movlb	0	; select bank0
 15055  014E  00CC               	movwf	menuLCD_ISR@diff+2
 15056  014F                     i1l4710:
 15057                           
 15058                           ;main.c: 380: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 15059  014F  0857               	movf	_t,w
 15060  0150  00F0               	movwf	differenceBetweenTimePeriod@start
 15061  0151  0858               	movf	_t+1,w
 15062  0152  00F1               	movwf	differenceBetweenTimePeriod@start+1
 15063  0153  0859               	movf	_t+2,w
 15064  0154  00F2               	movwf	differenceBetweenTimePeriod@start+2
 15065  0155  0867               	movf	_alarmPWMStart,w
 15066  0156  00F3               	movwf	differenceBetweenTimePeriod@stop
 15067  0157  0868               	movf	_alarmPWMStart+1,w
 15068  0158  00F4               	movwf	differenceBetweenTimePeriod@stop+1
 15069  0159  0869               	movf	_alarmPWMStart+2,w
 15070  015A  00F5               	movwf	differenceBetweenTimePeriod@stop+2
 15071  015B  304A               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 15072  015C  00B5               	movwf	??_menuLCD_ISR
 15073  015D  0835               	movf	??_menuLCD_ISR,w
 15074  015E  00F6               	movwf	differenceBetweenTimePeriod@diff
 15075  015F  318A  2204  3180   	fcall	_differenceBetweenTimePeriod
 15076  0162                     i1l4712:
 15077                           
 15078                           ;main.c: 382: if(diff.s <= TALA){
 15079  0162  0020               	movlb	0	; select bank0
 15080  0163  084C               	movf	menuLCD_ISR@diff+2,w
 15081  0164  0266               	subwf	_TALA,w
 15082  0165  1C03               	skipc
 15083  0166  2968               	goto	u415_21
 15084  0167  2969               	goto	u415_20
 15085  0168                     u415_21:
 15086  0168  2996               	goto	i1l1254
 15087  0169                     u415_20:
 15088  0169                     i1l4714:
 15089                           
 15090                           ;main.c: 383: PWM_on = 1;
 15091  0169  0021               	movlb	1	; select bank1
 15092  016A  01C4               	clrf	_PWM_on^(0+128)
 15093  016B  0AC4               	incf	_PWM_on^(0+128),f
 15094                           
 15095                           ;main.c: 384: if(PWM6EN==0){
 15096  016C  0027               	movlb	7	; select bank7
 15097  016D  1B8E               	btfsc	14,7	;volatile
 15098  016E  2970               	goto	u416_21
 15099  016F  2971               	goto	u416_20
 15100  0170                     u416_21:
 15101  0170  2977               	goto	i1l4718
 15102  0171                     u416_20:
 15103  0171                     i1l4716:
 15104                           
 15105                           ;main.c: 385: TMR2_StartTimer();
 15106  0171  3196  26E0  3180   	fcall	_TMR2_StartTimer
 15107                           
 15108                           ;main.c: 386: PWM_Output_D4_Enable();
 15109  0174  3196  26CE  3180   	fcall	_PWM_Output_D4_Enable
 15110  0177                     i1l4718:
 15111                           
 15112                           ;main.c: 387: };main.c: 388: if(dimingLed <= 330){
 15113  0177  0020               	movlb	0	; select bank0
 15114  0178  085F               	movf	_dimingLed+1,w
 15115  0179  3A80               	xorlw	128
 15116  017A  00B5               	movwf	??_menuLCD_ISR
 15117  017B  3081               	movlw	129
 15118  017C  0235               	subwf	??_menuLCD_ISR,w
 15119  017D  1D03               	skipz
 15120  017E  2981               	goto	u417_25
 15121  017F  304B               	movlw	75
 15122  0180  025E               	subwf	_dimingLed,w
 15123  0181                     u417_25:
 15124  0181  1803               	skipnc
 15125  0182  2984               	goto	u417_21
 15126  0183  2985               	goto	u417_20
 15127  0184                     u417_21:
 15128  0184  298B               	goto	i1l4722
 15129  0185                     u417_20:
 15130  0185                     i1l4720:
 15131                           
 15132                           ;main.c: 389: dimingLed += 30;
 15133  0185  301E               	movlw	30
 15134  0186  0020               	movlb	0	; select bank0
 15135  0187  07DE               	addwf	_dimingLed,f
 15136  0188  3000               	movlw	0
 15137  0189  3DDF               	addwfc	_dimingLed+1,f
 15138                           
 15139                           ;main.c: 390: } else{
 15140  018A  298E               	goto	i1l4724
 15141  018B                     i1l4722:
 15142                           
 15143                           ;main.c: 391: dimingLed = 0;
 15144  018B  0020               	movlb	0	; select bank0
 15145  018C  01DE               	clrf	_dimingLed
 15146  018D  01DF               	clrf	_dimingLed+1
 15147  018E                     i1l4724:
 15148                           
 15149                           ;main.c: 392: };main.c: 393: PWM6_LoadDutyValue(dimingLed);
 15150  018E  085F               	movf	_dimingLed+1,w
 15151  018F  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 15152  0190  085E               	movf	_dimingLed,w
 15153  0191  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 15154  0192  3197  27D3  3180   	fcall	i1_PWM6_LoadDutyValue
 15155                           
 15156                           ;main.c: 394: } else if(PWM6EN==1){
 15157  0195  29B9               	goto	i1l1262
 15158  0196                     i1l1254:
 15159  0196  0027               	movlb	7	; select bank7
 15160  0197  1F8E               	btfss	14,7	;volatile
 15161  0198  299A               	goto	u418_21
 15162  0199  299B               	goto	u418_20
 15163  019A                     u418_21:
 15164  019A  29B9               	goto	i1l1262
 15165  019B                     u418_20:
 15166  019B                     i1l4726:
 15167                           
 15168                           ;main.c: 395: PWM_on = 0;
 15169  019B  0021               	movlb	1	; select bank1
 15170  019C  01C4               	clrf	_PWM_on^(0+128)
 15171  019D                     i1l4728:
 15172                           
 15173                           ;main.c: 396: PWM6_LoadDutyValue(0);
 15174  019D  3000               	movlw	0
 15175  019E  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 15176  019F  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 15177  01A0  3197  27D3  3180   	fcall	i1_PWM6_LoadDutyValue
 15178  01A3                     i1l4730:
 15179                           
 15180                           ;main.c: 397: TMR2_StopTimer();
 15181  01A3  3196  26E4  3180   	fcall	i1_TMR2_StopTimer
 15182  01A6                     i1l4732:
 15183                           
 15184                           ;main.c: 398: PWM_Output_D4_Disable();
 15185  01A6  3196  26D4  3180   	fcall	i1_PWM_Output_D4_Disable
 15186  01A9  29B9               	goto	i1l1262
 15187  01AA                     i1l1248:
 15188                           
 15189                           ;main.c: 401: if(PWM6EN==1){
 15190  01AA  0027               	movlb	7	; select bank7
 15191  01AB  1F8E               	btfss	14,7	;volatile
 15192  01AC  29AE               	goto	u419_21
 15193  01AD  29AF               	goto	u419_20
 15194  01AE                     u419_21:
 15195  01AE  29B9               	goto	i1l1262
 15196  01AF                     u419_20:
 15197  01AF  299B               	goto	i1l4726
 15198  01B0                     i1l4742:
 15199                           
 15200                           ;main.c: 409: LCDcmd(0x8F);
 15201  01B0  308F               	movlw	143
 15202  01B1  3197  2712  3180   	fcall	_LCDcmd
 15203                           
 15204                           ;main.c: 410: LCDchar(ALAF);
 15205  01B4  0020               	movlb	0	; select bank0
 15206  01B5  0865               	movf	_ALAF,w
 15207  01B6  3197  2720  3180   	fcall	_LCDchar
 15208  01B9                     i1l1262:
 15209                           
 15210                           ;main.c: 411: };main.c: 413: LCDcmd(0xc0);
 15211  01B9  30C0               	movlw	192
 15212  01BA  3197  2712  3180   	fcall	_LCDcmd
 15213  01BD                     i1l4744:
 15214                           
 15215                           ;main.c: 414: char tt[4];;main.c: 415: if(editingTempAlarm){
 15216  01BD  0020               	movlb	0	; select bank0
 15217  01BE  0861               	movf	_editingTempAlarm,w
 15218  01BF  1903               	btfsc	3,2
 15219  01C0  29C2               	goto	u420_21
 15220  01C1  29C3               	goto	u420_20
 15221  01C2                     u420_21:
 15222  01C2  29D3               	goto	i1l4748
 15223  01C3                     u420_20:
 15224  01C3                     i1l4746:
 15225                           
 15226                           ;main.c: 416: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 15227  01C3  3019               	movlw	low (STR_3| (0+32768))
 15228  01C4  00A0               	movwf	sprintf@f
 15229  01C5  3098               	movlw	high (STR_3| (0+32768))
 15230  01C6  00A1               	movwf	sprintf@f+1
 15231  01C7  0854               	movf	_tempAlarm,w
 15232  01C8  00B5               	movwf	??_menuLCD_ISR
 15233  01C9  01B6               	clrf	??_menuLCD_ISR+1
 15234  01CA  0835               	movf	??_menuLCD_ISR,w
 15235  01CB  00A2               	movwf	?_sprintf+2
 15236  01CC  0836               	movf	??_menuLCD_ISR+1,w
 15237  01CD  00A3               	movwf	?_sprintf+3
 15238  01CE  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 15239  01CF  3184  2496  3180   	fcall	_sprintf
 15240                           
 15241                           ;main.c: 417: } else{
 15242  01D2  29E2               	goto	i1l4750
 15243  01D3                     i1l4748:
 15244                           
 15245                           ;main.c: 418: sprintf(tt, "%02d C", temp);
 15246  01D3  3019               	movlw	low (STR_3| (0+32768))
 15247  01D4  00A0               	movwf	sprintf@f
 15248  01D5  3098               	movlw	high (STR_3| (0+32768))
 15249  01D6  00A1               	movwf	sprintf@f+1
 15250  01D7  0863               	movf	_temp,w
 15251  01D8  00B5               	movwf	??_menuLCD_ISR
 15252  01D9  01B6               	clrf	??_menuLCD_ISR+1
 15253  01DA  0835               	movf	??_menuLCD_ISR,w
 15254  01DB  00A2               	movwf	?_sprintf+2
 15255  01DC  0836               	movf	??_menuLCD_ISR+1,w
 15256  01DD  00A3               	movwf	?_sprintf+3
 15257  01DE  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 15258  01DF  3184  2496  3180   	fcall	_sprintf
 15259  01E2                     i1l4750:
 15260                           
 15261                           ;main.c: 419: };main.c: 420: LCDstr(tt);
 15262  01E2  3043               	movlw	low menuLCD_ISR@tt
 15263  01E3  00F9               	movwf	LCDstr@p
 15264  01E4  3000               	movlw	high menuLCD_ISR@tt
 15265  01E5  00FA               	movwf	LCDstr@p+1
 15266  01E6  3188  2086  3180   	fcall	_LCDstr
 15267  01E9                     i1l4752:
 15268                           
 15269                           ;main.c: 422: LCDcmd(0xcd);
 15270  01E9  30CD               	movlw	205
 15271  01EA  3197  2712  3180   	fcall	_LCDcmd
 15272  01ED                     i1l4754:
 15273                           
 15274                           ;main.c: 423: char l[3];;main.c: 425: if(editingLumAlarm){
 15275  01ED  0020               	movlb	0	; select bank0
 15276  01EE  0860               	movf	_editingLumAlarm,w
 15277  01EF  1903               	btfsc	3,2
 15278  01F0  29F2               	goto	u421_21
 15279  01F1  29F3               	goto	u421_20
 15280  01F2                     u421_21:
 15281  01F2  2A03               	goto	i1l4758
 15282  01F3                     u421_20:
 15283  01F3                     i1l4756:
 15284                           
 15285                           ;main.c: 426: sprintf(l, "L %d", lumAlarm.alarmLum);
 15286  01F3  3020               	movlw	low (STR_5| (0+32768))
 15287  01F4  00A0               	movwf	sprintf@f
 15288  01F5  3098               	movlw	high (STR_5| (0+32768))
 15289  01F6  00A1               	movwf	sprintf@f+1
 15290  01F7  0851               	movf	_lumAlarm,w
 15291  01F8  00B5               	movwf	??_menuLCD_ISR
 15292  01F9  01B6               	clrf	??_menuLCD_ISR+1
 15293  01FA  0835               	movf	??_menuLCD_ISR,w
 15294  01FB  00A2               	movwf	?_sprintf+2
 15295  01FC  0836               	movf	??_menuLCD_ISR+1,w
 15296  01FD  00A3               	movwf	?_sprintf+3
 15297  01FE  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 15298  01FF  3184  2496  3180   	fcall	_sprintf
 15299                           
 15300                           ;main.c: 427: } else{
 15301  0202  2A12               	goto	i1l4760
 15302  0203                     i1l4758:
 15303                           
 15304                           ;main.c: 428: sprintf(l, "L %d", lumLevel);
 15305  0203  3020               	movlw	low (STR_5| (0+32768))
 15306  0204  00A0               	movwf	sprintf@f
 15307  0205  3098               	movlw	high (STR_5| (0+32768))
 15308  0206  00A1               	movwf	sprintf@f+1
 15309  0207  0862               	movf	_lumLevel,w
 15310  0208  00B5               	movwf	??_menuLCD_ISR
 15311  0209  01B6               	clrf	??_menuLCD_ISR+1
 15312  020A  0835               	movf	??_menuLCD_ISR,w
 15313  020B  00A2               	movwf	?_sprintf+2
 15314  020C  0836               	movf	??_menuLCD_ISR+1,w
 15315  020D  00A3               	movwf	?_sprintf+3
 15316  020E  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 15317  020F  3184  2496  3180   	fcall	_sprintf
 15318  0212                     i1l4760:
 15319                           
 15320                           ;main.c: 429: };main.c: 430: LCDstr(l);
 15321  0212  3047               	movlw	low menuLCD_ISR@l
 15322  0213  00F9               	movwf	LCDstr@p
 15323  0214  3000               	movlw	high menuLCD_ISR@l
 15324  0215  00FA               	movwf	LCDstr@p+1
 15325  0216  3188  2086  3180   	fcall	_LCDstr
 15326  0219                     i1l4762:
 15327                           
 15328                           ;main.c: 432: if(mode != 0){
 15329  0219  0020               	movlb	0	; select bank0
 15330  021A  085A               	movf	_mode,w
 15331  021B  045B               	iorwf	_mode+1,w
 15332  021C  1903               	btfsc	3,2
 15333  021D  2A1F               	goto	u422_21
 15334  021E  2A20               	goto	u422_20
 15335  021F                     u422_21:
 15336  021F  2A2B               	goto	i1l4768
 15337  0220                     u422_20:
 15338  0220                     i1l4764:
 15339                           
 15340                           ;main.c: 433: LCDcmd(0x8B);
 15341  0220  308B               	movlw	139
 15342  0221  3197  2712  3180   	fcall	_LCDcmd
 15343  0224                     i1l4766:
 15344                           
 15345                           ;main.c: 434: LCDstr("CTL");
 15346  0224  3025               	movlw	low (STR_7| (0+32768))
 15347  0225  00F9               	movwf	LCDstr@p
 15348  0226  3098               	movlw	high (STR_7| (0+32768))
 15349  0227  00FA               	movwf	LCDstr@p+1
 15350  0228  3188  2086  3180   	fcall	_LCDstr
 15351  022B                     i1l4768:
 15352                           
 15353                           ;main.c: 435: };main.c: 437: if(mode == 1){
 15354  022B  0020               	movlb	0	; select bank0
 15355  022C  035A               	decf	_mode,w
 15356  022D  045B               	iorwf	_mode+1,w
 15357  022E  1D03               	btfss	3,2
 15358  022F  2A31               	goto	u423_21
 15359  0230  2A32               	goto	u423_20
 15360  0231                     u423_21:
 15361  0231  2A61               	goto	i1l4786
 15362  0232                     u423_20:
 15363  0232                     i1l4770:
 15364                           
 15365                           ;main.c: 438: if(editingClockAlarm == 0){
 15366  0232  085C               	movf	_editingClockAlarm,w
 15367  0233  045D               	iorwf	_editingClockAlarm+1,w
 15368  0234  1D03               	btfss	3,2
 15369  0235  2A37               	goto	u424_21
 15370  0236  2A38               	goto	u424_20
 15371  0237                     u424_21:
 15372  0237  2A3D               	goto	i1l4774
 15373  0238                     u424_20:
 15374  0238                     i1l4772:
 15375                           
 15376                           ;main.c: 439: LCDcmd(0x8B);
 15377  0238  308B               	movlw	139
 15378  0239  3197  2712  3180   	fcall	_LCDcmd
 15379                           
 15380                           ;main.c: 440: } else{
 15381  023C  2A98               	goto	i1l1286
 15382  023D                     i1l4774:
 15383                           
 15384                           ;main.c: 441: if(editingClockAlarm == 1){
 15385  023D  035C               	decf	_editingClockAlarm,w
 15386  023E  045D               	iorwf	_editingClockAlarm+1,w
 15387  023F  1D03               	btfss	3,2
 15388  0240  2A42               	goto	u425_21
 15389  0241  2A43               	goto	u425_20
 15390  0242                     u425_21:
 15391  0242  2A48               	goto	i1l4778
 15392  0243                     u425_20:
 15393  0243                     i1l4776:
 15394                           
 15395                           ;main.c: 442: LCDcmd(0x81);
 15396  0243  3081               	movlw	129
 15397  0244  3197  2712  3180   	fcall	_LCDcmd
 15398                           
 15399                           ;main.c: 443: } else if(editingClockAlarm == 2){
 15400  0247  2A98               	goto	i1l1286
 15401  0248                     i1l4778:
 15402  0248  3002               	movlw	2
 15403  0249  065C               	xorwf	_editingClockAlarm,w
 15404  024A  045D               	iorwf	_editingClockAlarm+1,w
 15405  024B  1D03               	btfss	3,2
 15406  024C  2A4E               	goto	u426_21
 15407  024D  2A4F               	goto	u426_20
 15408  024E                     u426_21:
 15409  024E  2A54               	goto	i1l4782
 15410  024F                     u426_20:
 15411  024F                     i1l4780:
 15412                           
 15413                           ;main.c: 444: LCDcmd(0x84);
 15414  024F  3084               	movlw	132
 15415  0250  3197  2712  3180   	fcall	_LCDcmd
 15416                           
 15417                           ;main.c: 445: } else if(editingClockAlarm == 3){
 15418  0253  2A98               	goto	i1l1286
 15419  0254                     i1l4782:
 15420  0254  3003               	movlw	3
 15421  0255  065C               	xorwf	_editingClockAlarm,w
 15422  0256  045D               	iorwf	_editingClockAlarm+1,w
 15423  0257  1D03               	btfss	3,2
 15424  0258  2A5A               	goto	u427_21
 15425  0259  2A5B               	goto	u427_20
 15426  025A                     u427_21:
 15427  025A  2A60               	goto	i1l1270
 15428  025B                     u427_20:
 15429  025B                     i1l4784:
 15430                           
 15431                           ;main.c: 446: LCDcmd(0x87);
 15432  025B  3087               	movlw	135
 15433  025C  3197  2712  3180   	fcall	_LCDcmd
 15434  025F  2A98               	goto	i1l1286
 15435  0260                     i1l1270:
 15436                           
 15437                           ;main.c: 447: };main.c: 448: };main.c: 449: } else if(mode == 2){
 15438  0260  2A98               	goto	i1l1286
 15439  0261                     i1l4786:
 15440  0261  3002               	movlw	2
 15441  0262  065A               	xorwf	_mode,w
 15442  0263  045B               	iorwf	_mode+1,w
 15443  0264  1D03               	btfss	3,2
 15444  0265  2A67               	goto	u428_21
 15445  0266  2A68               	goto	u428_20
 15446  0267                     u428_21:
 15447  0267  2A77               	goto	i1l4794
 15448  0268                     u428_20:
 15449  0268                     i1l4788:
 15450                           
 15451                           ;main.c: 451: if(editingTempAlarm == 0){
 15452  0268  0861               	movf	_editingTempAlarm,w
 15453  0269  1D03               	btfss	3,2
 15454  026A  2A6C               	goto	u429_21
 15455  026B  2A6D               	goto	u429_20
 15456  026C                     u429_21:
 15457  026C  2A72               	goto	i1l4792
 15458  026D                     u429_20:
 15459  026D                     i1l4790:
 15460                           
 15461                           ;main.c: 452: LCDcmd(0x8c);
 15462  026D  308C               	movlw	140
 15463  026E  3197  2712  3180   	fcall	_LCDcmd
 15464                           
 15465                           ;main.c: 453: }else {
 15466  0271  2A98               	goto	i1l1286
 15467  0272                     i1l4792:
 15468                           
 15469                           ;main.c: 454: LCDcmd(0xc1);
 15470  0272  30C1               	movlw	193
 15471  0273  3197  2712  3180   	fcall	_LCDcmd
 15472  0276  2A98               	goto	i1l1286
 15473  0277                     i1l4794:
 15474  0277  3003               	movlw	3
 15475  0278  065A               	xorwf	_mode,w
 15476  0279  045B               	iorwf	_mode+1,w
 15477  027A  1D03               	btfss	3,2
 15478  027B  2A7D               	goto	u430_21
 15479  027C  2A7E               	goto	u430_20
 15480  027D                     u430_21:
 15481  027D  2A8D               	goto	i1l4802
 15482  027E                     u430_20:
 15483  027E                     i1l4796:
 15484                           
 15485                           ;main.c: 459: if(editingLumAlarm == 0){
 15486  027E  0860               	movf	_editingLumAlarm,w
 15487  027F  1D03               	btfss	3,2
 15488  0280  2A82               	goto	u431_21
 15489  0281  2A83               	goto	u431_20
 15490  0282                     u431_21:
 15491  0282  2A88               	goto	i1l4800
 15492  0283                     u431_20:
 15493  0283                     i1l4798:
 15494                           
 15495                           ;main.c: 460: LCDcmd(0x8d);
 15496  0283  308D               	movlw	141
 15497  0284  3197  2712  3180   	fcall	_LCDcmd
 15498                           
 15499                           ;main.c: 461: }else {
 15500  0287  2A98               	goto	i1l1286
 15501  0288                     i1l4800:
 15502                           
 15503                           ;main.c: 462: LCDcmd(0xcf);
 15504  0288  30CF               	movlw	207
 15505  0289  3197  2712  3180   	fcall	_LCDcmd
 15506  028C  2A98               	goto	i1l1286
 15507  028D                     i1l4802:
 15508  028D  3004               	movlw	4
 15509  028E  065A               	xorwf	_mode,w
 15510  028F  045B               	iorwf	_mode+1,w
 15511  0290  1D03               	btfss	3,2
 15512  0291  2A93               	goto	u432_21
 15513  0292  2A94               	goto	u432_20
 15514  0293                     u432_21:
 15515  0293  2A98               	goto	i1l1286
 15516  0294                     u432_20:
 15517  0294                     i1l4804:
 15518                           
 15519                           ;main.c: 466: LCDcmd(0x8f);
 15520  0294  308F               	movlw	143
 15521  0295  3197  2712  3180   	fcall	_LCDcmd
 15522  0298                     i1l1286:
 15523  0298  0008               	return
 15524  0299                     __end_of_menuLCD_ISR:
 15525                           
 15526                           	psect	text42
 15527  16E4                     __ptext42:	
 15528 ;; *************** function i1_TMR2_StopTimer *****************
 15529 ;; Defined at:
 15530 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 15531 ;; Parameters:    Size  Location     Type
 15532 ;;		None
 15533 ;; Auto vars:     Size  Location     Type
 15534 ;;		None
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1    wreg      void 
 15537 ;; Registers used:
 15538 ;;		status,2, status,0, pclath, cstack
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15548 ;;Total ram usage:        0 bytes
 15549 ;; Hardware stack levels used:    1
 15550 ;; Hardware stack levels required when called:    1
 15551 ;; This function calls:
 15552 ;;		i1_TMR2_Stop
 15553 ;; This function is called by:
 15554 ;;		_menuLCD_ISR
 15555 ;; This function uses a non-reentrant model
 15556 ;;
 15557                           
 15558                           
 15559                           ;psect for function i1_TMR2_StopTimer
 15560  16E4                     i1_TMR2_StopTimer:
 15561  16E4                     i1l4344:	
 15562                           ;incstack = 0
 15563                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 15564                           
 15565                           
 15566                           ;tmr2.c: 119: TMR2_Stop();
 15567  16E4  3196  26D7  3196   	fcall	i1_TMR2_Stop
 15568  16E7                     i1l779:
 15569  16E7  0008               	return
 15570  16E8                     __end_ofi1_TMR2_StopTimer:
 15571                           
 15572                           	psect	text43
 15573  16D7                     __ptext43:	
 15574 ;; *************** function i1_TMR2_Stop *****************
 15575 ;; Defined at:
 15576 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 15577 ;; Parameters:    Size  Location     Type
 15578 ;;		None
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;		None
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  1    wreg      void 
 15583 ;; Registers used:
 15584 ;;		None
 15585 ;; Tracked objects:
 15586 ;;		On entry : 0/0
 15587 ;;		On exit  : 0/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15594 ;;Total ram usage:        0 bytes
 15595 ;; Hardware stack levels used:    1
 15596 ;; This function calls:
 15597 ;;		Nothing
 15598 ;; This function is called by:
 15599 ;;		i1_TMR2_StopTimer
 15600 ;; This function uses a non-reentrant model
 15601 ;;
 15602                           
 15603                           
 15604                           ;psect for function i1_TMR2_Stop
 15605  16D7                     i1_TMR2_Stop:
 15606  16D7                     i1l4070:	
 15607                           ;incstack = 0
 15608                           ; Regs used in i1_TMR2_Stop: []
 15609                           
 15610                           
 15611                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 15612  16D7  0025               	movlb	5	; select bank5
 15613  16D8  138E               	bcf	14,7	;volatile
 15614  16D9                     i1l776:
 15615  16D9  0008               	return
 15616  16DA                     __end_ofi1_TMR2_Stop:
 15617                           
 15618                           	psect	text44
 15619  16D4                     __ptext44:	
 15620 ;; *************** function i1_PWM_Output_D4_Disable *****************
 15621 ;; Defined at:
 15622 ;;		line 246 in file "main.c"
 15623 ;; Parameters:    Size  Location     Type
 15624 ;;		None
 15625 ;; Auto vars:     Size  Location     Type
 15626 ;;		None
 15627 ;; Return value:  Size  Location     Type
 15628 ;;                  1    wreg      void 
 15629 ;; Registers used:
 15630 ;;		None
 15631 ;; Tracked objects:
 15632 ;;		On entry : 0/0
 15633 ;;		On exit  : 0/0
 15634 ;;		Unchanged: 0/0
 15635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15640 ;;Total ram usage:        0 bytes
 15641 ;; Hardware stack levels used:    1
 15642 ;; This function calls:
 15643 ;;		Nothing
 15644 ;; This function is called by:
 15645 ;;		_menuLCD_ISR
 15646 ;; This function uses a non-reentrant model
 15647 ;;
 15648                           
 15649                           
 15650                           ;psect for function i1_PWM_Output_D4_Disable
 15651  16D4                     i1_PWM_Output_D4_Disable:
 15652  16D4                     i1l4366:	
 15653                           ;incstack = 0
 15654                           ; Regs used in i1_PWM_Output_D4_Disable: []
 15655                           
 15656                           
 15657                           ;main.c: 247: PWM6EN = 0;
 15658  16D4  0027               	movlb	7	; select bank7
 15659  16D5  138E               	bcf	14,7	;volatile
 15660  16D6                     i1l1195:
 15661  16D6  0008               	return
 15662  16D7                     __end_ofi1_PWM_Output_D4_Disable:
 15663                           
 15664                           	psect	text45
 15665  17D3                     __ptext45:	
 15666 ;; *************** function i1_PWM6_LoadDutyValue *****************
 15667 ;; Defined at:
 15668 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 15669 ;; Parameters:    Size  Location     Type
 15670 ;;  dutyValue       2    0[COMMON] unsigned int 
 15671 ;; Auto vars:     Size  Location     Type
 15672 ;;		None
 15673 ;; Return value:  Size  Location     Type
 15674 ;;                  1    wreg      void 
 15675 ;; Registers used:
 15676 ;;		wreg, status,2, status,0
 15677 ;; Tracked objects:
 15678 ;;		On entry : 0/0
 15679 ;;		On exit  : 0/0
 15680 ;;		Unchanged: 0/0
 15681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15685 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15686 ;;Total ram usage:        4 bytes
 15687 ;; Hardware stack levels used:    1
 15688 ;; This function calls:
 15689 ;;		Nothing
 15690 ;; This function is called by:
 15691 ;;		_menuLCD_ISR
 15692 ;; This function uses a non-reentrant model
 15693 ;;
 15694                           
 15695                           
 15696                           ;psect for function i1_PWM6_LoadDutyValue
 15697  17D3                     i1_PWM6_LoadDutyValue:
 15698  17D3                     i1l4342:	
 15699                           ;incstack = 0
 15700                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 15701                           
 15702                           
 15703                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 15704  17D3  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 15705  17D4  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 15706  17D5  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 15707  17D6  00F2               	movwf	??i1_PWM6_LoadDutyValue
 15708  17D7  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 15709  17D8  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 15710  17D9  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 15711  17DA  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 15712  17DB  0872               	movf	??i1_PWM6_LoadDutyValue,w
 15713  17DC  0027               	movlb	7	; select bank7
 15714  17DD  008D               	movwf	13	;volatile
 15715                           
 15716                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 15717  17DE  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 15718  17DF  3903               	andlw	3
 15719  17E0  00F2               	movwf	??i1_PWM6_LoadDutyValue
 15720  17E1  3005               	movlw	5
 15721  17E2                     u369_25:
 15722  17E2  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 15723  17E3  3EFF               	addlw	-1
 15724  17E4  1D03               	skipz
 15725  17E5  2FE2               	goto	u369_25
 15726  17E6  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 15727  17E7  008C               	movwf	12	;volatile
 15728  17E8                     i1l734:
 15729  17E8  0008               	return
 15730  17E9                     __end_ofi1_PWM6_LoadDutyValue:
 15731                           
 15732                           	psect	text46
 15733  0496                     __ptext46:	
 15734 ;; *************** function _sprintf *****************
 15735 ;; Defined at:
 15736 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 15737 ;; Parameters:    Size  Location     Type
 15738 ;;  sp              1    wreg     PTR unsigned char 
 15739 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15740 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 15741 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 15742 ;;		 -> STR_2(15), STR_1(15), 
 15743 ;; Auto vars:     Size  Location     Type
 15744 ;;  sp              1   20[BANK0 ] PTR unsigned char 
 15745 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15746 ;;  tmpval          4    0        struct .
 15747 ;;  width           2   17[BANK0 ] int 
 15748 ;;  val             2   14[BANK0 ] unsigned int 
 15749 ;;  cp              2    0        PTR const unsigned char 
 15750 ;;  len             2    0        unsigned int 
 15751 ;;  c               1   19[BANK0 ] unsigned char 
 15752 ;;  flag            1   16[BANK0 ] unsigned char 
 15753 ;;  prec            1   13[BANK0 ] char 
 15754 ;;  ap              1   12[BANK0 ] PTR void [1]
 15755 ;;		 -> ?_sprintf(2), 
 15756 ;; Return value:  Size  Location     Type
 15757 ;;                  2    0[BANK0 ] int 
 15758 ;; Registers used:
 15759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15760 ;; Tracked objects:
 15761 ;;		On entry : 0/0
 15762 ;;		On exit  : 0/0
 15763 ;;		Unchanged: 0/0
 15764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15765 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15766 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15767 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15768 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15769 ;;Total ram usage:       21 bytes
 15770 ;; Hardware stack levels used:    1
 15771 ;; Hardware stack levels required when called:    1
 15772 ;; This function calls:
 15773 ;;		___lwdiv
 15774 ;;		___lwmod
 15775 ;;		___wmul
 15776 ;;		_isdigit
 15777 ;; This function is called by:
 15778 ;;		_menuLCD_ISR
 15779 ;; This function uses a non-reentrant model
 15780 ;;
 15781                           
 15782                           
 15783                           ;psect for function _sprintf
 15784  0496                     _sprintf:
 15785                           
 15786                           ;incstack = 0
 15787                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15788                           ;sprintf@sp stored from wreg
 15789  0496  0020               	movlb	0	; select bank0
 15790  0497  00B4               	movwf	sprintf@sp
 15791  0498                     i1l4202:
 15792                           
 15793                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 15794  0498  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 15795  0499  00A8               	movwf	??_sprintf
 15796  049A  0828               	movf	??_sprintf,w
 15797  049B  00AC               	movwf	sprintf@ap
 15798                           
 15799                           ;doprnt.c: 553: while((c = *f++)) {
 15800  049C  2E1A               	goto	i1l4306
 15801  049D                     i1l4204:
 15802                           
 15803                           ;doprnt.c: 555: if(c != '%')
 15804  049D  3025               	movlw	37
 15805  049E  0633               	xorwf	sprintf@c,w
 15806  049F  1903               	btfsc	3,2
 15807  04A0  2CA2               	goto	u343_21
 15808  04A1  2CA3               	goto	u343_20
 15809  04A2                     u343_21:
 15810  04A2  2CAF               	goto	i1l4210
 15811  04A3                     u343_20:
 15812  04A3                     i1l4206:
 15813                           
 15814                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 15815  04A3  0833               	movf	sprintf@c,w
 15816  04A4  00A8               	movwf	??_sprintf
 15817  04A5  0834               	movf	sprintf@sp,w
 15818  04A6  0086               	movwf	6
 15819  04A7  0187               	clrf	7
 15820  04A8  0828               	movf	??_sprintf,w
 15821  04A9  0081               	movwf	1
 15822  04AA                     i1l4208:
 15823  04AA  3001               	movlw	1
 15824  04AB  00A8               	movwf	??_sprintf
 15825  04AC  0828               	movf	??_sprintf,w
 15826  04AD  07B4               	addwf	sprintf@sp,f
 15827                           
 15828                           ;doprnt.c: 559: continue;
 15829  04AE  2E1A               	goto	i1l4306
 15830  04AF                     i1l4210:
 15831                           
 15832                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 15833  04AF  01B1               	clrf	sprintf@width
 15834  04B0  01B2               	clrf	sprintf@width+1
 15835                           
 15836                           ;doprnt.c: 565: flag = 0;
 15837  04B1  01B0               	clrf	sprintf@flag
 15838  04B2  2CB8               	goto	i1l4216
 15839  04B3                     i1l1564:	
 15840                           ;doprnt.c: 596: case '0':
 15841                           
 15842                           
 15843                           ;doprnt.c: 597: flag |= 0x04;
 15844  04B3  1530               	bsf	sprintf@flag,2
 15845  04B4                     i1l4212:
 15846                           
 15847                           ;doprnt.c: 598: f++;
 15848  04B4  3001               	movlw	1
 15849  04B5  07A0               	addwf	sprintf@f,f
 15850  04B6  3000               	movlw	0
 15851  04B7  3DA1               	addwfc	sprintf@f+1,f
 15852  04B8                     i1l4216:	
 15853                           ;doprnt.c: 599: continue;
 15854                           
 15855  04B8  0820               	movf	sprintf@f,w
 15856  04B9  0084               	movwf	4
 15857  04BA  0821               	movf	sprintf@f+1,w
 15858  04BB  0085               	movwf	5
 15859  04BC  0800               	movf	0,w	;code access
 15860                           
 15861                           ; Switch size 1, requested type "simple"
 15862                           ; Number of cases is 1, Range of values is 48 to 48
 15863                           ; switch strategies available:
 15864                           ; Name         Instructions Cycles
 15865                           ; simple_byte            4     3 (average)
 15866                           ; direct_byte           11     9 (fixed)
 15867                           ; jumptable            263     9 (fixed)
 15868                           ;	Chosen strategy is simple_byte
 15869  04BD  3A30               	xorlw	48	; case 48
 15870  04BE  1903               	skipnz
 15871  04BF  2CB3               	goto	i1l1564
 15872  04C0  2CC1               	goto	i1l4218
 15873  04C1                     i1l4218:
 15874                           
 15875                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 15876  04C1  0820               	movf	sprintf@f,w
 15877  04C2  0084               	movwf	4
 15878  04C3  0821               	movf	sprintf@f+1,w
 15879  04C4  0085               	movwf	5
 15880  04C5  0800               	movf	0,w	;code access
 15881  04C6  3197  27AF  3184   	fcall	_isdigit
 15882  04C9  1C03               	btfss	3,0
 15883  04CA  2CCC               	goto	u344_21
 15884  04CB  2CCD               	goto	u344_20
 15885  04CC                     u344_21:
 15886  04CC  2D00               	goto	i1l4232
 15887  04CD                     u344_20:
 15888  04CD                     i1l4220:
 15889                           
 15890                           ;doprnt.c: 615: width = 0;
 15891  04CD  0020               	movlb	0	; select bank0
 15892  04CE  01B1               	clrf	sprintf@width
 15893  04CF  01B2               	clrf	sprintf@width+1
 15894  04D0                     i1l4222:
 15895                           
 15896                           ;doprnt.c: 617: width *= 10;
 15897  04D0  300A               	movlw	10
 15898  04D1  00F0               	movwf	___wmul@multiplier
 15899  04D2  3000               	movlw	0
 15900  04D3  00F1               	movwf	___wmul@multiplier+1
 15901  04D4  0020               	movlb	0	; select bank0
 15902  04D5  0832               	movf	sprintf@width+1,w
 15903  04D6  00F3               	movwf	___wmul@multiplicand+1
 15904  04D7  0831               	movf	sprintf@width,w
 15905  04D8  00F2               	movwf	___wmul@multiplicand
 15906  04D9  3188  20BF  3184   	fcall	___wmul
 15907  04DC  0871               	movf	?___wmul+1,w
 15908  04DD  0020               	movlb	0	; select bank0
 15909  04DE  00B2               	movwf	sprintf@width+1
 15910  04DF  0870               	movf	?___wmul,w
 15911  04E0  00B1               	movwf	sprintf@width
 15912  04E1                     i1l4224:
 15913                           
 15914                           ;doprnt.c: 618: width += *f++ - '0';
 15915  04E1  0820               	movf	sprintf@f,w
 15916  04E2  0084               	movwf	4
 15917  04E3  0821               	movf	sprintf@f+1,w
 15918  04E4  0085               	movwf	5
 15919  04E5  0800               	movf	0,w	;code access
 15920  04E6  3ED0               	addlw	208
 15921  04E7  00A8               	movwf	??_sprintf
 15922  04E8  30FF               	movlw	255
 15923  04E9  1803               	skipnc
 15924  04EA  3000               	movlw	0
 15925  04EB  00A9               	movwf	??_sprintf+1
 15926  04EC  0828               	movf	??_sprintf,w
 15927  04ED  07B1               	addwf	sprintf@width,f
 15928  04EE  0829               	movf	??_sprintf+1,w
 15929  04EF  3DB2               	addwfc	sprintf@width+1,f
 15930  04F0                     i1l4226:
 15931  04F0  3001               	movlw	1
 15932  04F1  07A0               	addwf	sprintf@f,f
 15933  04F2  3000               	movlw	0
 15934  04F3  3DA1               	addwfc	sprintf@f+1,f
 15935  04F4                     i1l4228:
 15936                           
 15937                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 15938  04F4  0820               	movf	sprintf@f,w
 15939  04F5  0084               	movwf	4
 15940  04F6  0821               	movf	sprintf@f+1,w
 15941  04F7  0085               	movwf	5
 15942  04F8  0800               	movf	0,w	;code access
 15943  04F9  3197  27AF  3184   	fcall	_isdigit
 15944  04FC  1803               	btfsc	3,0
 15945  04FD  2CFF               	goto	u345_21
 15946  04FE  2D00               	goto	u345_20
 15947  04FF                     u345_21:
 15948  04FF  2CD0               	goto	i1l4222
 15949  0500                     u345_20:
 15950  0500                     i1l4232:
 15951  0500  0020               	movlb	0	; select bank0
 15952  0501  0821               	movf	sprintf@f+1,w
 15953  0502  00A9               	movwf	??_sprintf+1
 15954  0503  0820               	movf	sprintf@f,w
 15955  0504  00A8               	movwf	??_sprintf
 15956  0505  0AA0               	incf	sprintf@f,f
 15957  0506  1903               	skipnz
 15958  0507  0AA1               	incf	sprintf@f+1,f
 15959  0508  0828               	movf	??_sprintf,w
 15960  0509  0084               	movwf	4
 15961  050A  0829               	movf	??_sprintf+1,w
 15962  050B  0085               	movwf	5
 15963  050C  0800               	movf	0,w	;code access
 15964  050D  00B3               	movwf	sprintf@c
 15965                           
 15966                           ; Switch size 1, requested type "simple"
 15967                           ; Number of cases is 3, Range of values is 0 to 105
 15968                           ; switch strategies available:
 15969                           ; Name         Instructions Cycles
 15970                           ; simple_byte           10     6 (average)
 15971                           ; direct_byte          218     6 (fixed)
 15972                           ; jumptable            260     6 (fixed)
 15973                           ;	Chosen strategy is simple_byte
 15974  050E  3A00               	xorlw	0	; case 0
 15975  050F  1903               	skipnz
 15976  0510  2E2E               	goto	i1l4308
 15977  0511  3A64               	xorlw	100	; case 100
 15978  0512  1903               	skipnz
 15979  0513  2D18               	goto	i1l4234
 15980  0514  3A0D               	xorlw	13	; case 105
 15981  0515  1903               	skipnz
 15982  0516  2D18               	goto	i1l4234
 15983  0517  2E1A               	goto	i1l4306
 15984  0518                     i1l4234:
 15985                           
 15986                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 15987  0518  082C               	movf	sprintf@ap,w
 15988  0519  0086               	movwf	6
 15989  051A  0187               	clrf	7
 15990  051B  3F40               	moviw [0]fsr1
 15991  051C  00AE               	movwf	sprintf@val
 15992  051D  3F41               	moviw [1]fsr1
 15993  051E  00AF               	movwf	sprintf@val+1
 15994  051F                     i1l4236:
 15995  051F  3002               	movlw	2
 15996  0520  00A8               	movwf	??_sprintf
 15997  0521  0828               	movf	??_sprintf,w
 15998  0522  07AC               	addwf	sprintf@ap,f
 15999  0523                     i1l4238:
 16000                           
 16001                           ;doprnt.c: 1287: if((int)val < 0) {
 16002  0523  1FAF               	btfss	sprintf@val+1,7
 16003  0524  2D26               	goto	u346_21
 16004  0525  2D27               	goto	u346_20
 16005  0526                     u346_21:
 16006  0526  2D30               	goto	i1l4244
 16007  0527                     u346_20:
 16008  0527                     i1l4240:
 16009                           
 16010                           ;doprnt.c: 1288: flag |= 0x03;
 16011  0527  3003               	movlw	3
 16012  0528  00A8               	movwf	??_sprintf
 16013  0529  0828               	movf	??_sprintf,w
 16014  052A  04B0               	iorwf	sprintf@flag,f
 16015  052B                     i1l4242:
 16016                           
 16017                           ;doprnt.c: 1289: val = -val;
 16018  052B  09AE               	comf	sprintf@val,f
 16019  052C  09AF               	comf	sprintf@val+1,f
 16020  052D  0AAE               	incf	sprintf@val,f
 16021  052E  1903               	skipnz
 16022  052F  0AAF               	incf	sprintf@val+1,f
 16023  0530                     i1l4244:
 16024                           
 16025                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 16026  0530  01B3               	clrf	sprintf@c
 16027  0531  0AB3               	incf	sprintf@c,f
 16028  0532                     i1l4250:
 16029                           
 16030                           ;doprnt.c: 1332: if(val < dpowers[c])
 16031  0532  0833               	movf	sprintf@c,w
 16032  0533  00A8               	movwf	??_sprintf
 16033  0534  01A9               	clrf	??_sprintf+1
 16034  0535  35A8               	lslf	??_sprintf,f
 16035  0536  0DA9               	rlf	??_sprintf+1,f
 16036  0537  300F               	movlw	low (_dpowers| (0+32768))
 16037  0538  0728               	addwf	??_sprintf,w
 16038  0539  0084               	movwf	4
 16039  053A  3098               	movlw	high (_dpowers| (0+32768))
 16040  053B  3D29               	addwfc	??_sprintf+1,w
 16041  053C  0085               	movwf	5
 16042  053D  3F00               	moviw [0]fsr0
 16043  053E  00AA               	movwf	??_sprintf+2
 16044  053F  3F01               	moviw [1]fsr0
 16045  0540  00AB               	movwf	??_sprintf+3
 16046  0541  082B               	movf	??_sprintf+3,w
 16047  0542  022F               	subwf	sprintf@val+1,w
 16048  0543  1D03               	skipz
 16049  0544  2D47               	goto	u347_25
 16050  0545  082A               	movf	??_sprintf+2,w
 16051  0546  022E               	subwf	sprintf@val,w
 16052  0547                     u347_25:
 16053  0547  1803               	skipnc
 16054  0548  2D4A               	goto	u347_21
 16055  0549  2D4B               	goto	u347_20
 16056  054A                     u347_21:
 16057  054A  2D4C               	goto	i1l4254
 16058  054B                     u347_20:
 16059  054B  2D56               	goto	i1l4256
 16060  054C                     i1l4254:
 16061  054C  3001               	movlw	1
 16062  054D  00A8               	movwf	??_sprintf
 16063  054E  0828               	movf	??_sprintf,w
 16064  054F  07B3               	addwf	sprintf@c,f
 16065  0550  3005               	movlw	5
 16066  0551  0633               	xorwf	sprintf@c,w
 16067  0552  1D03               	btfss	3,2
 16068  0553  2D55               	goto	u348_21
 16069  0554  2D56               	goto	u348_20
 16070  0555                     u348_21:
 16071  0555  2D32               	goto	i1l4250
 16072  0556                     u348_20:
 16073  0556                     i1l4256:
 16074                           
 16075                           ;doprnt.c: 1371: if(width && flag & 0x03)
 16076  0556  0831               	movf	sprintf@width,w
 16077  0557  0432               	iorwf	sprintf@width+1,w
 16078  0558  1903               	btfsc	3,2
 16079  0559  2D5B               	goto	u349_21
 16080  055A  2D5C               	goto	u349_20
 16081  055B                     u349_21:
 16082  055B  2D66               	goto	i1l1582
 16083  055C                     u349_20:
 16084  055C                     i1l4258:
 16085  055C  0830               	movf	sprintf@flag,w
 16086  055D  3903               	andlw	3
 16087  055E  1903               	btfsc	3,2
 16088  055F  2D61               	goto	u350_21
 16089  0560  2D62               	goto	u350_20
 16090  0561                     u350_21:
 16091  0561  2D66               	goto	i1l1582
 16092  0562                     u350_20:
 16093  0562                     i1l4260:
 16094                           
 16095                           ;doprnt.c: 1372: width--;
 16096  0562  30FF               	movlw	255
 16097  0563  07B1               	addwf	sprintf@width,f
 16098  0564  30FF               	movlw	255
 16099  0565  3DB2               	addwfc	sprintf@width+1,f
 16100  0566                     i1l1582:
 16101                           
 16102                           ;doprnt.c: 1407: if(width > c)
 16103  0566  0832               	movf	sprintf@width+1,w
 16104  0567  3A80               	xorlw	128
 16105  0568  3C80               	sublw	128
 16106  0569  1D03               	skipz
 16107  056A  2D6D               	goto	u351_25
 16108  056B  0831               	movf	sprintf@width,w
 16109  056C  0233               	subwf	sprintf@c,w
 16110  056D                     u351_25:
 16111  056D  1803               	skipnc
 16112  056E  2D70               	goto	u351_21
 16113  056F  2D71               	goto	u351_20
 16114  0570                     u351_21:
 16115  0570  2D7A               	goto	i1l4264
 16116  0571                     u351_20:
 16117  0571                     i1l4262:
 16118                           
 16119                           ;doprnt.c: 1408: width -= c;
 16120  0571  0020               	movlb	0	; select bank0
 16121  0572  0833               	movf	sprintf@c,w
 16122  0573  00A8               	movwf	??_sprintf
 16123  0574  01A9               	clrf	??_sprintf+1
 16124  0575  0828               	movf	??_sprintf,w
 16125  0576  02B1               	subwf	sprintf@width,f
 16126  0577  0829               	movf	??_sprintf+1,w
 16127  0578  3BB2               	subwfb	sprintf@width+1,f
 16128  0579  2D7D               	goto	i1l4266
 16129  057A                     i1l4264:
 16130                           
 16131                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 16132  057A  0020               	movlb	0	; select bank0
 16133  057B  01B1               	clrf	sprintf@width
 16134  057C  01B2               	clrf	sprintf@width+1
 16135  057D                     i1l4266:
 16136                           
 16137                           ;doprnt.c: 1413: if(flag & 0x04) {
 16138  057D  1D30               	btfss	sprintf@flag,2
 16139  057E  2D80               	goto	u352_21
 16140  057F  2D81               	goto	u352_20
 16141  0580                     u352_21:
 16142  0580  2DAE               	goto	i1l4282
 16143  0581                     u352_20:
 16144  0581                     i1l4268:
 16145                           
 16146                           ;doprnt.c: 1418: if(flag & 0x03)
 16147  0581  0830               	movf	sprintf@flag,w
 16148  0582  3903               	andlw	3
 16149  0583  1903               	btfsc	3,2
 16150  0584  2D86               	goto	u353_21
 16151  0585  2D87               	goto	u353_20
 16152  0586                     u353_21:
 16153  0586  2D92               	goto	i1l4274
 16154  0587                     u353_20:
 16155  0587                     i1l4270:
 16156                           
 16157                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 16158  0587  302D               	movlw	45
 16159  0588  00A8               	movwf	??_sprintf
 16160  0589  0834               	movf	sprintf@sp,w
 16161  058A  0086               	movwf	6
 16162  058B  0187               	clrf	7
 16163  058C  0828               	movf	??_sprintf,w
 16164  058D  0081               	movwf	1
 16165  058E                     i1l4272:
 16166  058E  3001               	movlw	1
 16167  058F  00A8               	movwf	??_sprintf
 16168  0590  0828               	movf	??_sprintf,w
 16169  0591  07B4               	addwf	sprintf@sp,f
 16170  0592                     i1l4274:
 16171                           
 16172                           ;doprnt.c: 1441: if(width)
 16173  0592  0831               	movf	sprintf@width,w
 16174  0593  0432               	iorwf	sprintf@width+1,w
 16175  0594  1903               	btfsc	3,2
 16176  0595  2D97               	goto	u354_21
 16177  0596  2D98               	goto	u354_20
 16178  0597                     u354_21:
 16179  0597  2DDA               	goto	i1l4296
 16180  0598                     u354_20:
 16181  0598                     i1l4276:
 16182                           
 16183                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 16184  0598  3030               	movlw	48
 16185  0599  00A8               	movwf	??_sprintf
 16186  059A  0834               	movf	sprintf@sp,w
 16187  059B  0086               	movwf	6
 16188  059C  0187               	clrf	7
 16189  059D  0828               	movf	??_sprintf,w
 16190  059E  0081               	movwf	1
 16191  059F                     i1l4278:
 16192  059F  3001               	movlw	1
 16193  05A0  00A8               	movwf	??_sprintf
 16194  05A1  0828               	movf	??_sprintf,w
 16195  05A2  07B4               	addwf	sprintf@sp,f
 16196  05A3                     i1l4280:
 16197                           
 16198                           ;doprnt.c: 1444: while(--width);
 16199  05A3  30FF               	movlw	255
 16200  05A4  07B1               	addwf	sprintf@width,f
 16201  05A5  30FF               	movlw	255
 16202  05A6  3DB2               	addwfc	sprintf@width+1,f
 16203  05A7  0831               	movf	sprintf@width,w
 16204  05A8  0432               	iorwf	sprintf@width+1,w
 16205  05A9  1D03               	btfss	3,2
 16206  05AA  2DAC               	goto	u355_21
 16207  05AB  2DAD               	goto	u355_20
 16208  05AC                     u355_21:
 16209  05AC  2D98               	goto	i1l4276
 16210  05AD                     u355_20:
 16211  05AD  2DDA               	goto	i1l4296
 16212  05AE                     i1l4282:
 16213                           
 16214                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 16215  05AE  0831               	movf	sprintf@width,w
 16216  05AF  0432               	iorwf	sprintf@width+1,w
 16217  05B0  1903               	btfsc	3,2
 16218  05B1  2DB3               	goto	u356_21
 16219  05B2  2DB4               	goto	u356_20
 16220  05B3                     u356_21:
 16221  05B3  2DC9               	goto	i1l4290
 16222  05B4                     u356_20:
 16223  05B4                     i1l4284:
 16224                           
 16225                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 16226  05B4  3020               	movlw	32
 16227  05B5  00A8               	movwf	??_sprintf
 16228  05B6  0834               	movf	sprintf@sp,w
 16229  05B7  0086               	movwf	6
 16230  05B8  0187               	clrf	7
 16231  05B9  0828               	movf	??_sprintf,w
 16232  05BA  0081               	movwf	1
 16233  05BB                     i1l4286:
 16234  05BB  3001               	movlw	1
 16235  05BC  00A8               	movwf	??_sprintf
 16236  05BD  0828               	movf	??_sprintf,w
 16237  05BE  07B4               	addwf	sprintf@sp,f
 16238  05BF                     i1l4288:
 16239                           
 16240                           ;doprnt.c: 1457: while(--width);
 16241  05BF  30FF               	movlw	255
 16242  05C0  07B1               	addwf	sprintf@width,f
 16243  05C1  30FF               	movlw	255
 16244  05C2  3DB2               	addwfc	sprintf@width+1,f
 16245  05C3  0831               	movf	sprintf@width,w
 16246  05C4  0432               	iorwf	sprintf@width+1,w
 16247  05C5  1D03               	btfss	3,2
 16248  05C6  2DC8               	goto	u357_21
 16249  05C7  2DC9               	goto	u357_20
 16250  05C8                     u357_21:
 16251  05C8  2DB4               	goto	i1l4284
 16252  05C9                     u357_20:
 16253  05C9                     i1l4290:
 16254                           
 16255                           ;doprnt.c: 1464: if(flag & 0x03)
 16256  05C9  0830               	movf	sprintf@flag,w
 16257  05CA  3903               	andlw	3
 16258  05CB  1903               	btfsc	3,2
 16259  05CC  2DCE               	goto	u358_21
 16260  05CD  2DCF               	goto	u358_20
 16261  05CE                     u358_21:
 16262  05CE  2DDA               	goto	i1l4296
 16263  05CF                     u358_20:
 16264  05CF                     i1l4292:
 16265                           
 16266                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 16267  05CF  302D               	movlw	45
 16268  05D0  00A8               	movwf	??_sprintf
 16269  05D1  0834               	movf	sprintf@sp,w
 16270  05D2  0086               	movwf	6
 16271  05D3  0187               	clrf	7
 16272  05D4  0828               	movf	??_sprintf,w
 16273  05D5  0081               	movwf	1
 16274  05D6                     i1l4294:
 16275  05D6  3001               	movlw	1
 16276  05D7  00A8               	movwf	??_sprintf
 16277  05D8  0828               	movf	??_sprintf,w
 16278  05D9  07B4               	addwf	sprintf@sp,f
 16279  05DA                     i1l4296:
 16280                           
 16281                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 16282  05DA  0833               	movf	sprintf@c,w
 16283  05DB  00A8               	movwf	??_sprintf
 16284  05DC  0828               	movf	??_sprintf,w
 16285  05DD  00AD               	movwf	sprintf@prec
 16286                           
 16287                           ;doprnt.c: 1500: while(prec--) {
 16288  05DE  2E11               	goto	i1l4304
 16289  05DF                     i1l4298:
 16290                           
 16291                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 16292  05DF  300A               	movlw	10
 16293  05E0  00F8               	movwf	___lwmod@divisor
 16294  05E1  3000               	movlw	0
 16295  05E2  00F9               	movwf	___lwmod@divisor+1
 16296  05E3  082D               	movf	sprintf@prec,w
 16297  05E4  00A8               	movwf	??_sprintf
 16298  05E5  01A9               	clrf	??_sprintf+1
 16299  05E6  35A8               	lslf	??_sprintf,f
 16300  05E7  0DA9               	rlf	??_sprintf+1,f
 16301  05E8  300F               	movlw	low (_dpowers| (0+32768))
 16302  05E9  0728               	addwf	??_sprintf,w
 16303  05EA  0084               	movwf	4
 16304  05EB  3098               	movlw	high (_dpowers| (0+32768))
 16305  05EC  3D29               	addwfc	??_sprintf+1,w
 16306  05ED  0085               	movwf	5
 16307  05EE  3F00               	moviw [0]fsr0
 16308  05EF  00F0               	movwf	___lwdiv@divisor
 16309  05F0  3F01               	moviw [1]fsr0
 16310  05F1  00F1               	movwf	___lwdiv@divisor+1
 16311  05F2  082F               	movf	sprintf@val+1,w
 16312  05F3  00F3               	movwf	___lwdiv@dividend+1
 16313  05F4  082E               	movf	sprintf@val,w
 16314  05F5  00F2               	movwf	___lwdiv@dividend
 16315  05F6  318A  2238  3184   	fcall	___lwdiv
 16316  05F9  0871               	movf	?___lwdiv+1,w
 16317  05FA  00FB               	movwf	___lwmod@dividend+1
 16318  05FB  0870               	movf	?___lwdiv,w
 16319  05FC  00FA               	movwf	___lwmod@dividend
 16320  05FD  3187  27C7  3184   	fcall	___lwmod
 16321  0600  0878               	movf	?___lwmod,w
 16322  0601  3E30               	addlw	48
 16323  0602  0020               	movlb	0	; select bank0
 16324  0603  00AA               	movwf	??_sprintf+2
 16325  0604  082A               	movf	??_sprintf+2,w
 16326  0605  00B3               	movwf	sprintf@c
 16327  0606                     i1l4300:
 16328                           
 16329                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 16330  0606  0833               	movf	sprintf@c,w
 16331  0607  00A8               	movwf	??_sprintf
 16332  0608  0834               	movf	sprintf@sp,w
 16333  0609  0086               	movwf	6
 16334  060A  0187               	clrf	7
 16335  060B  0828               	movf	??_sprintf,w
 16336  060C  0081               	movwf	1
 16337  060D                     i1l4302:
 16338  060D  3001               	movlw	1
 16339  060E  00A8               	movwf	??_sprintf
 16340  060F  0828               	movf	??_sprintf,w
 16341  0610  07B4               	addwf	sprintf@sp,f
 16342  0611                     i1l4304:
 16343  0611  30FF               	movlw	255
 16344  0612  00A8               	movwf	??_sprintf
 16345  0613  0828               	movf	??_sprintf,w
 16346  0614  07AD               	addwf	sprintf@prec,f
 16347  0615  0A2D               	incf	sprintf@prec,w
 16348  0616  1D03               	btfss	3,2
 16349  0617  2E19               	goto	u359_21
 16350  0618  2E1A               	goto	u359_20
 16351  0619                     u359_21:
 16352  0619  2DDF               	goto	i1l4298
 16353  061A                     u359_20:
 16354  061A                     i1l4306:
 16355  061A  0821               	movf	sprintf@f+1,w
 16356  061B  00A9               	movwf	??_sprintf+1
 16357  061C  0820               	movf	sprintf@f,w
 16358  061D  00A8               	movwf	??_sprintf
 16359  061E  0AA0               	incf	sprintf@f,f
 16360  061F  1903               	skipnz
 16361  0620  0AA1               	incf	sprintf@f+1,f
 16362  0621  0828               	movf	??_sprintf,w
 16363  0622  0084               	movwf	4
 16364  0623  0829               	movf	??_sprintf+1,w
 16365  0624  0085               	movwf	5
 16366  0625  0800               	movf	0,w	;code access
 16367  0626  00AA               	movwf	??_sprintf+2
 16368  0627  082A               	movf	??_sprintf+2,w
 16369  0628  00B3               	movwf	sprintf@c
 16370  0629  0833               	movf	sprintf@c,w
 16371  062A  1D03               	btfss	3,2
 16372  062B  2E2D               	goto	u360_21
 16373  062C  2E2E               	goto	u360_20
 16374  062D                     u360_21:
 16375  062D  2C9D               	goto	i1l4204
 16376  062E                     u360_20:
 16377  062E                     i1l4308:
 16378                           
 16379                           ;doprnt.c: 1564: *sp = 0;
 16380  062E  0834               	movf	sprintf@sp,w
 16381  062F  0086               	movwf	6
 16382  0630  0187               	clrf	7
 16383  0631  0181               	clrf	1
 16384  0632                     i1l1599:
 16385  0632  0008               	return
 16386  0633                     __end_of_sprintf:
 16387                           
 16388                           	psect	text47
 16389  17AF                     __ptext47:	
 16390 ;; *************** function _isdigit *****************
 16391 ;; Defined at:
 16392 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 16393 ;; Parameters:    Size  Location     Type
 16394 ;;  c               1    wreg     unsigned char 
 16395 ;; Auto vars:     Size  Location     Type
 16396 ;;  c               1    1[COMMON] unsigned char 
 16397 ;; Return value:  Size  Location     Type
 16398 ;;		None               void
 16399 ;; Registers used:
 16400 ;;		wreg, status,2, status,0
 16401 ;; Tracked objects:
 16402 ;;		On entry : 0/0
 16403 ;;		On exit  : 0/0
 16404 ;;		Unchanged: 0/0
 16405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16410 ;;Total ram usage:        2 bytes
 16411 ;; Hardware stack levels used:    1
 16412 ;; This function calls:
 16413 ;;		Nothing
 16414 ;; This function is called by:
 16415 ;;		_sprintf
 16416 ;; This function uses a non-reentrant model
 16417 ;;
 16418                           
 16419                           
 16420                           ;psect for function _isdigit
 16421  17AF                     _isdigit:
 16422                           
 16423                           ;incstack = 0
 16424                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 16425                           ;isdigit@c stored from wreg
 16426  17AF  00F1               	movwf	isdigit@c
 16427  17B0                     i1l3996:
 16428  17B0  01F0               	clrf	_isdigit$2972
 16429  17B1                     i1l3998:
 16430  17B1  303A               	movlw	58
 16431  17B2  0271               	subwf	isdigit@c,w
 16432  17B3  1803               	skipnc
 16433  17B4  2FB6               	goto	u286_21
 16434  17B5  2FB7               	goto	u286_20
 16435  17B6                     u286_21:
 16436  17B6  2FBF               	goto	i1l4004
 16437  17B7                     u286_20:
 16438  17B7                     i1l4000:
 16439  17B7  3030               	movlw	48
 16440  17B8  0271               	subwf	isdigit@c,w
 16441  17B9  1C03               	skipc
 16442  17BA  2FBC               	goto	u287_21
 16443  17BB  2FBD               	goto	u287_20
 16444  17BC                     u287_21:
 16445  17BC  2FBF               	goto	i1l4004
 16446  17BD                     u287_20:
 16447  17BD                     i1l4002:
 16448  17BD  01F0               	clrf	_isdigit$2972
 16449  17BE  0AF0               	incf	_isdigit$2972,f
 16450  17BF                     i1l4004:
 16451  17BF  0C70               	rrf	_isdigit$2972,w
 16452  17C0                     i1l2056:
 16453  17C0  0008               	return
 16454  17C1                     __end_of_isdigit:
 16455                           
 16456                           	psect	text48
 16457  08BF                     __ptext48:	
 16458 ;; *************** function ___wmul *****************
 16459 ;; Defined at:
 16460 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 16461 ;; Parameters:    Size  Location     Type
 16462 ;;  multiplier      2    0[COMMON] unsigned int 
 16463 ;;  multiplicand    2    2[COMMON] unsigned int 
 16464 ;; Auto vars:     Size  Location     Type
 16465 ;;  product         2    4[COMMON] unsigned int 
 16466 ;; Return value:  Size  Location     Type
 16467 ;;                  2    0[COMMON] unsigned int 
 16468 ;; Registers used:
 16469 ;;		wreg, status,2, status,0
 16470 ;; Tracked objects:
 16471 ;;		On entry : 0/0
 16472 ;;		On exit  : 0/0
 16473 ;;		Unchanged: 0/0
 16474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16475 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16478 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16479 ;;Total ram usage:        6 bytes
 16480 ;; Hardware stack levels used:    1
 16481 ;; This function calls:
 16482 ;;		Nothing
 16483 ;; This function is called by:
 16484 ;;		_monitoring_ISR
 16485 ;;		_sprintf
 16486 ;;		_map
 16487 ;; This function uses a non-reentrant model
 16488 ;;
 16489                           
 16490                           
 16491                           ;psect for function ___wmul
 16492  08BF                     ___wmul:
 16493  08BF                     i1l4008:	
 16494                           ;incstack = 0
 16495                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16496                           
 16497  08BF  01F4               	clrf	___wmul@product
 16498  08C0  01F5               	clrf	___wmul@product+1
 16499  08C1                     i1l4010:
 16500  08C1  1C70               	btfss	___wmul@multiplier,0
 16501  08C2  28C4               	goto	u288_21
 16502  08C3  28C5               	goto	u288_20
 16503  08C4                     u288_21:
 16504  08C4  28C9               	goto	i1l1603
 16505  08C5                     u288_20:
 16506  08C5                     i1l4012:
 16507  08C5  0872               	movf	___wmul@multiplicand,w
 16508  08C6  07F4               	addwf	___wmul@product,f
 16509  08C7  0873               	movf	___wmul@multiplicand+1,w
 16510  08C8  3DF5               	addwfc	___wmul@product+1,f
 16511  08C9                     i1l1603:
 16512  08C9  3001               	movlw	1
 16513  08CA                     u289_25:
 16514  08CA  35F2               	lslf	___wmul@multiplicand,f
 16515  08CB  0DF3               	rlf	___wmul@multiplicand+1,f
 16516  08CC  0B89               	decfsz	9,f
 16517  08CD  28CA               	goto	u289_25
 16518  08CE                     i1l4014:
 16519  08CE  3001               	movlw	1
 16520  08CF                     u290_25:
 16521  08CF  36F1               	lsrf	___wmul@multiplier+1,f
 16522  08D0  0CF0               	rrf	___wmul@multiplier,f
 16523  08D1  0B89               	decfsz	9,f
 16524  08D2  28CF               	goto	u290_25
 16525  08D3                     i1l4016:
 16526  08D3  0870               	movf	___wmul@multiplier,w
 16527  08D4  0471               	iorwf	___wmul@multiplier+1,w
 16528  08D5  1D03               	btfss	3,2
 16529  08D6  28D8               	goto	u291_21
 16530  08D7  28D9               	goto	u291_20
 16531  08D8                     u291_21:
 16532  08D8  28C1               	goto	i1l4010
 16533  08D9                     u291_20:
 16534  08D9                     i1l4018:
 16535  08D9  0875               	movf	___wmul@product+1,w
 16536  08DA  00F1               	movwf	?___wmul+1
 16537  08DB  0874               	movf	___wmul@product,w
 16538  08DC  00F0               	movwf	?___wmul
 16539  08DD                     i1l1605:
 16540  08DD  0008               	return
 16541  08DE                     __end_of___wmul:
 16542                           
 16543                           	psect	text49
 16544  07C7                     __ptext49:	
 16545 ;; *************** function ___lwmod *****************
 16546 ;; Defined at:
 16547 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 16548 ;; Parameters:    Size  Location     Type
 16549 ;;  divisor         2    8[COMMON] unsigned int 
 16550 ;;  dividend        2   10[COMMON] unsigned int 
 16551 ;; Auto vars:     Size  Location     Type
 16552 ;;  counter         1   13[COMMON] unsigned char 
 16553 ;; Return value:  Size  Location     Type
 16554 ;;                  2    8[COMMON] unsigned int 
 16555 ;; Registers used:
 16556 ;;		wreg, status,2, status,0
 16557 ;; Tracked objects:
 16558 ;;		On entry : 0/0
 16559 ;;		On exit  : 0/0
 16560 ;;		Unchanged: 0/0
 16561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16565 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16566 ;;Total ram usage:        6 bytes
 16567 ;; Hardware stack levels used:    1
 16568 ;; This function calls:
 16569 ;;		Nothing
 16570 ;; This function is called by:
 16571 ;;		_sprintf
 16572 ;; This function uses a non-reentrant model
 16573 ;;
 16574                           
 16575                           
 16576                           ;psect for function ___lwmod
 16577  07C7                     ___lwmod:
 16578  07C7                     i1l4048:	
 16579                           ;incstack = 0
 16580                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 16581                           
 16582  07C7  0878               	movf	___lwmod@divisor,w
 16583  07C8  0479               	iorwf	___lwmod@divisor+1,w
 16584  07C9  1903               	btfsc	3,2
 16585  07CA  2FCC               	goto	u299_21
 16586  07CB  2FCD               	goto	u299_20
 16587  07CC                     u299_21:
 16588  07CC  2FF6               	goto	i1l4066
 16589  07CD                     u299_20:
 16590  07CD                     i1l4050:
 16591  07CD  01FD               	clrf	___lwmod@counter
 16592  07CE  0AFD               	incf	___lwmod@counter,f
 16593  07CF  2FD9               	goto	i1l4056
 16594  07D0                     i1l4052:
 16595  07D0  3001               	movlw	1
 16596  07D1                     u300_25:
 16597  07D1  35F8               	lslf	___lwmod@divisor,f
 16598  07D2  0DF9               	rlf	___lwmod@divisor+1,f
 16599  07D3  0B89               	decfsz	9,f
 16600  07D4  2FD1               	goto	u300_25
 16601  07D5                     i1l4054:
 16602  07D5  3001               	movlw	1
 16603  07D6  00FC               	movwf	??___lwmod
 16604  07D7  087C               	movf	??___lwmod,w
 16605  07D8  07FD               	addwf	___lwmod@counter,f
 16606  07D9                     i1l4056:
 16607  07D9  1FF9               	btfss	___lwmod@divisor+1,7
 16608  07DA  2FDC               	goto	u301_21
 16609  07DB  2FDD               	goto	u301_20
 16610  07DC                     u301_21:
 16611  07DC  2FD0               	goto	i1l4052
 16612  07DD                     u301_20:
 16613  07DD                     i1l4058:
 16614  07DD  0879               	movf	___lwmod@divisor+1,w
 16615  07DE  027B               	subwf	___lwmod@dividend+1,w
 16616  07DF  1D03               	skipz
 16617  07E0  2FE3               	goto	u302_25
 16618  07E1  0878               	movf	___lwmod@divisor,w
 16619  07E2  027A               	subwf	___lwmod@dividend,w
 16620  07E3                     u302_25:
 16621  07E3  1C03               	skipc
 16622  07E4  2FE6               	goto	u302_21
 16623  07E5  2FE7               	goto	u302_20
 16624  07E6                     u302_21:
 16625  07E6  2FEB               	goto	i1l4062
 16626  07E7                     u302_20:
 16627  07E7                     i1l4060:
 16628  07E7  0878               	movf	___lwmod@divisor,w
 16629  07E8  02FA               	subwf	___lwmod@dividend,f
 16630  07E9  0879               	movf	___lwmod@divisor+1,w
 16631  07EA  3BFB               	subwfb	___lwmod@dividend+1,f
 16632  07EB                     i1l4062:
 16633  07EB  3001               	movlw	1
 16634  07EC                     u303_25:
 16635  07EC  36F9               	lsrf	___lwmod@divisor+1,f
 16636  07ED  0CF8               	rrf	___lwmod@divisor,f
 16637  07EE  0B89               	decfsz	9,f
 16638  07EF  2FEC               	goto	u303_25
 16639  07F0                     i1l4064:
 16640  07F0  3001               	movlw	1
 16641  07F1  02FD               	subwf	___lwmod@counter,f
 16642  07F2  1D03               	btfss	3,2
 16643  07F3  2FF5               	goto	u304_21
 16644  07F4  2FF6               	goto	u304_20
 16645  07F5                     u304_21:
 16646  07F5  2FDD               	goto	i1l4058
 16647  07F6                     u304_20:
 16648  07F6                     i1l4066:
 16649  07F6  087B               	movf	___lwmod@dividend+1,w
 16650  07F7  00F9               	movwf	?___lwmod+1
 16651  07F8  087A               	movf	___lwmod@dividend,w
 16652  07F9  00F8               	movwf	?___lwmod
 16653  07FA                     i1l1885:
 16654  07FA  0008               	return
 16655  07FB                     __end_of___lwmod:
 16656                           
 16657                           	psect	text50
 16658  0A38                     __ptext50:	
 16659 ;; *************** function ___lwdiv *****************
 16660 ;; Defined at:
 16661 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 16662 ;; Parameters:    Size  Location     Type
 16663 ;;  divisor         2    0[COMMON] unsigned int 
 16664 ;;  dividend        2    2[COMMON] unsigned int 
 16665 ;; Auto vars:     Size  Location     Type
 16666 ;;  quotient        2    5[COMMON] unsigned int 
 16667 ;;  counter         1    7[COMMON] unsigned char 
 16668 ;; Return value:  Size  Location     Type
 16669 ;;                  2    0[COMMON] unsigned int 
 16670 ;; Registers used:
 16671 ;;		wreg, status,2, status,0
 16672 ;; Tracked objects:
 16673 ;;		On entry : 0/0
 16674 ;;		On exit  : 0/0
 16675 ;;		Unchanged: 0/0
 16676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16677 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16678 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16679 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16680 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16681 ;;Total ram usage:        8 bytes
 16682 ;; Hardware stack levels used:    1
 16683 ;; This function calls:
 16684 ;;		Nothing
 16685 ;; This function is called by:
 16686 ;;		_sprintf
 16687 ;; This function uses a non-reentrant model
 16688 ;;
 16689                           
 16690                           
 16691                           ;psect for function ___lwdiv
 16692  0A38                     ___lwdiv:
 16693  0A38                     i1l4022:	
 16694                           ;incstack = 0
 16695                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16696                           
 16697  0A38  01F5               	clrf	___lwdiv@quotient
 16698  0A39  01F6               	clrf	___lwdiv@quotient+1
 16699  0A3A                     i1l4024:
 16700  0A3A  0870               	movf	___lwdiv@divisor,w
 16701  0A3B  0471               	iorwf	___lwdiv@divisor+1,w
 16702  0A3C  1903               	btfsc	3,2
 16703  0A3D  2A3F               	goto	u292_21
 16704  0A3E  2A40               	goto	u292_20
 16705  0A3F                     u292_21:
 16706  0A3F  2A6F               	goto	i1l4044
 16707  0A40                     u292_20:
 16708  0A40                     i1l4026:
 16709  0A40  01F7               	clrf	___lwdiv@counter
 16710  0A41  0AF7               	incf	___lwdiv@counter,f
 16711  0A42  2A4C               	goto	i1l4032
 16712  0A43                     i1l4028:
 16713  0A43  3001               	movlw	1
 16714  0A44                     u293_25:
 16715  0A44  35F0               	lslf	___lwdiv@divisor,f
 16716  0A45  0DF1               	rlf	___lwdiv@divisor+1,f
 16717  0A46  0B89               	decfsz	9,f
 16718  0A47  2A44               	goto	u293_25
 16719  0A48                     i1l4030:
 16720  0A48  3001               	movlw	1
 16721  0A49  00F4               	movwf	??___lwdiv
 16722  0A4A  0874               	movf	??___lwdiv,w
 16723  0A4B  07F7               	addwf	___lwdiv@counter,f
 16724  0A4C                     i1l4032:
 16725  0A4C  1FF1               	btfss	___lwdiv@divisor+1,7
 16726  0A4D  2A4F               	goto	u294_21
 16727  0A4E  2A50               	goto	u294_20
 16728  0A4F                     u294_21:
 16729  0A4F  2A43               	goto	i1l4028
 16730  0A50                     u294_20:
 16731  0A50                     i1l4034:
 16732  0A50  3001               	movlw	1
 16733  0A51                     u295_25:
 16734  0A51  35F5               	lslf	___lwdiv@quotient,f
 16735  0A52  0DF6               	rlf	___lwdiv@quotient+1,f
 16736  0A53  0B89               	decfsz	9,f
 16737  0A54  2A51               	goto	u295_25
 16738  0A55  0871               	movf	___lwdiv@divisor+1,w
 16739  0A56  0273               	subwf	___lwdiv@dividend+1,w
 16740  0A57  1D03               	skipz
 16741  0A58  2A5B               	goto	u296_25
 16742  0A59  0870               	movf	___lwdiv@divisor,w
 16743  0A5A  0272               	subwf	___lwdiv@dividend,w
 16744  0A5B                     u296_25:
 16745  0A5B  1C03               	skipc
 16746  0A5C  2A5E               	goto	u296_21
 16747  0A5D  2A5F               	goto	u296_20
 16748  0A5E                     u296_21:
 16749  0A5E  2A64               	goto	i1l4040
 16750  0A5F                     u296_20:
 16751  0A5F                     i1l4036:
 16752  0A5F  0870               	movf	___lwdiv@divisor,w
 16753  0A60  02F2               	subwf	___lwdiv@dividend,f
 16754  0A61  0871               	movf	___lwdiv@divisor+1,w
 16755  0A62  3BF3               	subwfb	___lwdiv@dividend+1,f
 16756  0A63                     i1l4038:
 16757  0A63  1475               	bsf	___lwdiv@quotient,0
 16758  0A64                     i1l4040:
 16759  0A64  3001               	movlw	1
 16760  0A65                     u297_25:
 16761  0A65  36F1               	lsrf	___lwdiv@divisor+1,f
 16762  0A66  0CF0               	rrf	___lwdiv@divisor,f
 16763  0A67  0B89               	decfsz	9,f
 16764  0A68  2A65               	goto	u297_25
 16765  0A69                     i1l4042:
 16766  0A69  3001               	movlw	1
 16767  0A6A  02F7               	subwf	___lwdiv@counter,f
 16768  0A6B  1D03               	btfss	3,2
 16769  0A6C  2A6E               	goto	u298_21
 16770  0A6D  2A6F               	goto	u298_20
 16771  0A6E                     u298_21:
 16772  0A6E  2A50               	goto	i1l4034
 16773  0A6F                     u298_20:
 16774  0A6F                     i1l4044:
 16775  0A6F  0876               	movf	___lwdiv@quotient+1,w
 16776  0A70  00F1               	movwf	?___lwdiv+1
 16777  0A71  0875               	movf	___lwdiv@quotient,w
 16778  0A72  00F0               	movwf	?___lwdiv
 16779  0A73                     i1l1875:
 16780  0A73  0008               	return
 16781  0A74                     __end_of___lwdiv:
 16782                           
 16783                           	psect	text51
 16784  0A04                     __ptext51:	
 16785 ;; *************** function _differenceBetweenTimePeriod *****************
 16786 ;; Defined at:
 16787 ;;		line 226 in file "main.c"
 16788 ;; Parameters:    Size  Location     Type
 16789 ;;  start           3    0[COMMON] struct Time
 16790 ;;  stop            3    3[COMMON] struct Time
 16791 ;;  diff            1    6[COMMON] PTR struct Time
 16792 ;;		 -> menuLCD_ISR@diff(3), 
 16793 ;; Auto vars:     Size  Location     Type
 16794 ;;		None
 16795 ;; Return value:  Size  Location     Type
 16796 ;;                  1    wreg      void 
 16797 ;; Registers used:
 16798 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16799 ;; Tracked objects:
 16800 ;;		On entry : 0/0
 16801 ;;		On exit  : 0/0
 16802 ;;		Unchanged: 0/0
 16803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16804 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16807 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16808 ;;Total ram usage:        8 bytes
 16809 ;; Hardware stack levels used:    1
 16810 ;; This function calls:
 16811 ;;		Nothing
 16812 ;; This function is called by:
 16813 ;;		_menuLCD_ISR
 16814 ;; This function uses a non-reentrant model
 16815 ;;
 16816                           
 16817                           
 16818                           ;psect for function _differenceBetweenTimePeriod
 16819  0A04                     _differenceBetweenTimePeriod:
 16820  0A04                     i1l4186:	
 16821                           ;incstack = 0
 16822                           ; Regs used in _differenceBetweenTimePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
 16823                           
 16824                           
 16825                           ;main.c: 229: while (stop.s > start.s) {
 16826  0A04  2A0B               	goto	i1l4190
 16827  0A05                     i1l4188:
 16828                           
 16829                           ;main.c: 230: --start.m;
 16830  0A05  3001               	movlw	1
 16831  0A06  02F1               	subwf	differenceBetweenTimePeriod@start+1,f
 16832                           
 16833                           ;main.c: 231: start.s += 60;
 16834  0A07  303C               	movlw	60
 16835  0A08  00F7               	movwf	??_differenceBetweenTimePeriod
 16836  0A09  0877               	movf	??_differenceBetweenTimePeriod,w
 16837  0A0A  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 16838  0A0B                     i1l4190:
 16839  0A0B  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 16840  0A0C  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 16841  0A0D  1C03               	skipc
 16842  0A0E  2A10               	goto	u341_21
 16843  0A0F  2A11               	goto	u341_20
 16844  0A10                     u341_21:
 16845  0A10  2A05               	goto	i1l4188
 16846  0A11                     u341_20:
 16847  0A11                     i1l4192:
 16848                           
 16849                           ;main.c: 232: };main.c: 233: diff->s = start.s - stop.s;
 16850  0A11  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 16851  0A12  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 16852  0A13  00F7               	movwf	??_differenceBetweenTimePeriod
 16853  0A14  0876               	movf	differenceBetweenTimePeriod@diff,w
 16854  0A15  3E02               	addlw	2
 16855  0A16  0086               	movwf	6
 16856  0A17  0187               	clrf	7
 16857  0A18  0877               	movf	??_differenceBetweenTimePeriod,w
 16858  0A19  0081               	movwf	1
 16859                           
 16860                           ;main.c: 234: while (stop.m > start.m) {
 16861  0A1A  2A21               	goto	i1l4196
 16862  0A1B                     i1l4194:
 16863                           
 16864                           ;main.c: 235: --start.h;
 16865  0A1B  3001               	movlw	1
 16866  0A1C  02F0               	subwf	differenceBetweenTimePeriod@start,f
 16867                           
 16868                           ;main.c: 236: start.m += 60;
 16869  0A1D  303C               	movlw	60
 16870  0A1E  00F7               	movwf	??_differenceBetweenTimePeriod
 16871  0A1F  0877               	movf	??_differenceBetweenTimePeriod,w
 16872  0A20  07F1               	addwf	differenceBetweenTimePeriod@start+1,f
 16873  0A21                     i1l4196:
 16874  0A21  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 16875  0A22  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 16876  0A23  1C03               	skipc
 16877  0A24  2A26               	goto	u342_21
 16878  0A25  2A27               	goto	u342_20
 16879  0A26                     u342_21:
 16880  0A26  2A1B               	goto	i1l4194
 16881  0A27                     u342_20:
 16882  0A27                     i1l4198:
 16883                           
 16884                           ;main.c: 237: };main.c: 238: diff->m = start.m - stop.m;
 16885  0A27  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 16886  0A28  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 16887  0A29  00F7               	movwf	??_differenceBetweenTimePeriod
 16888  0A2A  0A76               	incf	differenceBetweenTimePeriod@diff,w
 16889  0A2B  0086               	movwf	6
 16890  0A2C  0187               	clrf	7
 16891  0A2D  0877               	movf	??_differenceBetweenTimePeriod,w
 16892  0A2E  0081               	movwf	1
 16893                           
 16894                           ;main.c: 239: diff->h = start.h - stop.h;
 16895  0A2F  0873               	movf	differenceBetweenTimePeriod@stop,w
 16896  0A30  0270               	subwf	differenceBetweenTimePeriod@start,w
 16897  0A31  00F7               	movwf	??_differenceBetweenTimePeriod
 16898  0A32  0876               	movf	differenceBetweenTimePeriod@diff,w
 16899  0A33  0086               	movwf	6
 16900  0A34  0187               	clrf	7
 16901  0A35  0877               	movf	??_differenceBetweenTimePeriod,w
 16902  0A36  0081               	movwf	1
 16903  0A37                     i1l1189:
 16904  0A37  0008               	return
 16905  0A38                     __end_of_differenceBetweenTimePeriod:
 16906                           
 16907                           	psect	text52
 16908  16E0                     __ptext52:	
 16909 ;; *************** function _TMR2_StartTimer *****************
 16910 ;; Defined at:
 16911 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;		None
 16914 ;; Auto vars:     Size  Location     Type
 16915 ;;		None
 16916 ;; Return value:  Size  Location     Type
 16917 ;;                  1    wreg      void 
 16918 ;; Registers used:
 16919 ;;		status,2, status,0, pclath, cstack
 16920 ;; Tracked objects:
 16921 ;;		On entry : 0/0
 16922 ;;		On exit  : 0/0
 16923 ;;		Unchanged: 0/0
 16924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16929 ;;Total ram usage:        0 bytes
 16930 ;; Hardware stack levels used:    1
 16931 ;; Hardware stack levels required when called:    1
 16932 ;; This function calls:
 16933 ;;		_TMR2_Start
 16934 ;; This function is called by:
 16935 ;;		_menuLCD_ISR
 16936 ;; This function uses a non-reentrant model
 16937 ;;
 16938                           
 16939                           
 16940                           ;psect for function _TMR2_StartTimer
 16941  16E0                     _TMR2_StartTimer:
 16942  16E0                     i1l4122:	
 16943                           ;incstack = 0
 16944                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 16945                           
 16946                           
 16947                           ;tmr2.c: 108: TMR2_Start();
 16948  16E0  3196  26D1  3196   	fcall	_TMR2_Start
 16949  16E3                     i1l773:
 16950  16E3  0008               	return
 16951  16E4                     __end_of_TMR2_StartTimer:
 16952                           
 16953                           	psect	text53
 16954  16D1                     __ptext53:	
 16955 ;; *************** function _TMR2_Start *****************
 16956 ;; Defined at:
 16957 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 16958 ;; Parameters:    Size  Location     Type
 16959 ;;		None
 16960 ;; Auto vars:     Size  Location     Type
 16961 ;;		None
 16962 ;; Return value:  Size  Location     Type
 16963 ;;                  1    wreg      void 
 16964 ;; Registers used:
 16965 ;;		None
 16966 ;; Tracked objects:
 16967 ;;		On entry : 0/0
 16968 ;;		On exit  : 0/0
 16969 ;;		Unchanged: 0/0
 16970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16975 ;;Total ram usage:        0 bytes
 16976 ;; Hardware stack levels used:    1
 16977 ;; This function calls:
 16978 ;;		Nothing
 16979 ;; This function is called by:
 16980 ;;		_TMR2_StartTimer
 16981 ;; This function uses a non-reentrant model
 16982 ;;
 16983                           
 16984                           
 16985                           ;psect for function _TMR2_Start
 16986  16D1                     _TMR2_Start:
 16987  16D1                     i1l3992:	
 16988                           ;incstack = 0
 16989                           ; Regs used in _TMR2_Start: []
 16990                           
 16991                           
 16992                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 16993  16D1  0025               	movlb	5	; select bank5
 16994  16D2  178E               	bsf	14,7	;volatile
 16995  16D3                     i1l770:
 16996  16D3  0008               	return
 16997  16D4                     __end_of_TMR2_Start:
 16998                           
 16999                           	psect	text54
 17000  16CE                     __ptext54:	
 17001 ;; *************** function _PWM_Output_D4_Enable *****************
 17002 ;; Defined at:
 17003 ;;		line 242 in file "main.c"
 17004 ;; Parameters:    Size  Location     Type
 17005 ;;		None
 17006 ;; Auto vars:     Size  Location     Type
 17007 ;;		None
 17008 ;; Return value:  Size  Location     Type
 17009 ;;                  1    wreg      void 
 17010 ;; Registers used:
 17011 ;;		None
 17012 ;; Tracked objects:
 17013 ;;		On entry : 0/0
 17014 ;;		On exit  : 0/0
 17015 ;;		Unchanged: 0/0
 17016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17021 ;;Total ram usage:        0 bytes
 17022 ;; Hardware stack levels used:    1
 17023 ;; This function calls:
 17024 ;;		Nothing
 17025 ;; This function is called by:
 17026 ;;		_menuLCD_ISR
 17027 ;; This function uses a non-reentrant model
 17028 ;;
 17029                           
 17030                           
 17031                           ;psect for function _PWM_Output_D4_Enable
 17032  16CE                     _PWM_Output_D4_Enable:
 17033  16CE                     i1l4200:	
 17034                           ;incstack = 0
 17035                           ; Regs used in _PWM_Output_D4_Enable: []
 17036                           
 17037                           
 17038                           ;main.c: 243: PWM6EN = 1;
 17039  16CE  0027               	movlb	7	; select bank7
 17040  16CF  178E               	bsf	14,7	;volatile
 17041  16D0                     i1l1192:
 17042  16D0  0008               	return
 17043  16D1                     __end_of_PWM_Output_D4_Enable:
 17044                           
 17045                           	psect	text55
 17046  0886                     __ptext55:	
 17047 ;; *************** function _LCDstr *****************
 17048 ;; Defined at:
 17049 ;;		line 206 in file "main.c"
 17050 ;; Parameters:    Size  Location     Type
 17051 ;;  p               2    9[COMMON] PTR unsigned char 
 17052 ;;		 -> STR_7(4), menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 17053 ;; Auto vars:     Size  Location     Type
 17054 ;;  c               1    0[BANK0 ] unsigned char 
 17055 ;; Return value:  Size  Location     Type
 17056 ;;                  1    wreg      void 
 17057 ;; Registers used:
 17058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17059 ;; Tracked objects:
 17060 ;;		On entry : 0/0
 17061 ;;		On exit  : 0/0
 17062 ;;		Unchanged: 0/0
 17063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17065 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17066 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17067 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17068 ;;Total ram usage:        6 bytes
 17069 ;; Hardware stack levels used:    1
 17070 ;; Hardware stack levels required when called:    3
 17071 ;; This function calls:
 17072 ;;		_LCDchar
 17073 ;; This function is called by:
 17074 ;;		_menuLCD_ISR
 17075 ;; This function uses a non-reentrant model
 17076 ;;
 17077                           
 17078                           
 17079                           ;psect for function _LCDstr
 17080  0886                     _LCDstr:
 17081  0886                     i1l4180:	
 17082                           ;incstack = 0
 17083                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17084                           
 17085                           
 17086                           ;main.c: 208: unsigned char c;;main.c: 210: while((c = *p++)) LCDchar(c);
 17087  0886  288B               	goto	i1l4184
 17088  0887                     i1l4182:
 17089  0887  0820               	movf	LCDstr@c,w
 17090  0888  3197  2720  3188   	fcall	_LCDchar
 17091  088B                     i1l4184:
 17092  088B  087A               	movf	LCDstr@p+1,w
 17093  088C  00FC               	movwf	??_LCDstr+1
 17094  088D  0879               	movf	LCDstr@p,w
 17095  088E  00FB               	movwf	??_LCDstr
 17096  088F  0AF9               	incf	LCDstr@p,f
 17097  0890  1903               	skipnz
 17098  0891  0AFA               	incf	LCDstr@p+1,f
 17099  0892  087B               	movf	??_LCDstr,w
 17100  0893  0084               	movwf	4
 17101  0894  087C               	movf	??_LCDstr+1,w
 17102  0895  0085               	movwf	5
 17103  0896  0800               	movf	0,w	;code access
 17104  0897  00FD               	movwf	??_LCDstr+2
 17105  0898  087D               	movf	??_LCDstr+2,w
 17106  0899  0020               	movlb	0	; select bank0
 17107  089A  00A0               	movwf	LCDstr@c
 17108  089B  0820               	movf	LCDstr@c,w
 17109  089C  1D03               	btfss	3,2
 17110  089D  289F               	goto	u340_21
 17111  089E  28A0               	goto	u340_20
 17112  089F                     u340_21:
 17113  089F  2887               	goto	i1l4182
 17114  08A0                     u340_20:
 17115  08A0                     i1l1176:
 17116  08A0  0008               	return
 17117  08A1                     __end_of_LCDstr:
 17118                           
 17119                           	psect	text56
 17120  1720                     __ptext56:	
 17121 ;; *************** function _LCDchar *****************
 17122 ;; Defined at:
 17123 ;;		line 201 in file "main.c"
 17124 ;; Parameters:    Size  Location     Type
 17125 ;;  c               1    wreg     unsigned char 
 17126 ;; Auto vars:     Size  Location     Type
 17127 ;;  c               1    8[COMMON] unsigned char 
 17128 ;; Return value:  Size  Location     Type
 17129 ;;                  1    wreg      void 
 17130 ;; Registers used:
 17131 ;;		wreg, status,2, status,0, pclath, cstack
 17132 ;; Tracked objects:
 17133 ;;		On entry : 0/0
 17134 ;;		On exit  : 0/0
 17135 ;;		Unchanged: 0/0
 17136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17140 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17141 ;;Total ram usage:        1 bytes
 17142 ;; Hardware stack levels used:    1
 17143 ;; Hardware stack levels required when called:    2
 17144 ;; This function calls:
 17145 ;;		i1_LCDsend2x4
 17146 ;; This function is called by:
 17147 ;;		_LCDstr
 17148 ;;		_menuLCD_ISR
 17149 ;; This function uses a non-reentrant model
 17150 ;;
 17151                           
 17152                           
 17153                           ;psect for function _LCDchar
 17154  1720                     _LCDchar:
 17155                           
 17156                           ;incstack = 0
 17157                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 17158                           ;LCDchar@c stored from wreg
 17159  1720  00F8               	movwf	LCDchar@c
 17160  1721                     i1l3994:
 17161                           
 17162                           ;main.c: 203: LCDsend2x4(c, 0x01);
 17163  1721  01F2               	clrf	i1LCDsend2x4@mode
 17164  1722  0AF2               	incf	i1LCDsend2x4@mode,f
 17165  1723  0878               	movf	LCDchar@c,w
 17166  1724  318C  246B  3197   	fcall	i1_LCDsend2x4
 17167  1727                     i1l1170:
 17168  1727  0008               	return
 17169  1728                     __end_of_LCDchar:
 17170                           
 17171                           	psect	text57
 17172  1712                     __ptext57:	
 17173 ;; *************** function _LCDcmd *****************
 17174 ;; Defined at:
 17175 ;;		line 196 in file "main.c"
 17176 ;; Parameters:    Size  Location     Type
 17177 ;;  c               1    wreg     unsigned char 
 17178 ;; Auto vars:     Size  Location     Type
 17179 ;;  c               1    8[COMMON] unsigned char 
 17180 ;; Return value:  Size  Location     Type
 17181 ;;                  1    wreg      void 
 17182 ;; Registers used:
 17183 ;;		wreg, status,2, status,0, pclath, cstack
 17184 ;; Tracked objects:
 17185 ;;		On entry : 0/0
 17186 ;;		On exit  : 0/0
 17187 ;;		Unchanged: 0/0
 17188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17192 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17193 ;;Total ram usage:        1 bytes
 17194 ;; Hardware stack levels used:    1
 17195 ;; Hardware stack levels required when called:    2
 17196 ;; This function calls:
 17197 ;;		i1_LCDsend2x4
 17198 ;; This function is called by:
 17199 ;;		_menuLCD_ISR
 17200 ;; This function uses a non-reentrant model
 17201 ;;
 17202                           
 17203                           
 17204                           ;psect for function _LCDcmd
 17205  1712                     _LCDcmd:
 17206                           
 17207                           ;incstack = 0
 17208                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 17209                           ;LCDcmd@c stored from wreg
 17210  1712  00F8               	movwf	LCDcmd@c
 17211  1713                     i1l4178:
 17212                           
 17213                           ;main.c: 198: LCDsend2x4(c, 0);
 17214  1713  01F2               	clrf	i1LCDsend2x4@mode
 17215  1714  0878               	movf	LCDcmd@c,w
 17216  1715  318C  246B  3197   	fcall	i1_LCDsend2x4
 17217  1718                     i1l1167:
 17218  1718  0008               	return
 17219  1719                     __end_of_LCDcmd:
 17220                           
 17221                           	psect	text58
 17222  0C6B                     __ptext58:	
 17223 ;; *************** function i1_LCDsend2x4 *****************
 17224 ;; Defined at:
 17225 ;;		line 150 in file "main.c"
 17226 ;; Parameters:    Size  Location     Type
 17227 ;;  c               1    wreg     unsigned char 
 17228 ;;  mode            1    2[COMMON] unsigned char 
 17229 ;; Auto vars:     Size  Location     Type
 17230 ;;  c               1    5[COMMON] unsigned char 
 17231 ;;  lc              1    7[COMMON] unsigned char 
 17232 ;;  hc              1    6[COMMON] unsigned char 
 17233 ;; Return value:  Size  Location     Type
 17234 ;;                  1    wreg      void 
 17235 ;; Registers used:
 17236 ;;		wreg, status,2, status,0, pclath, cstack
 17237 ;; Tracked objects:
 17238 ;;		On entry : 0/0
 17239 ;;		On exit  : 0/0
 17240 ;;		Unchanged: 0/0
 17241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17242 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17243 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17245 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17246 ;;Total ram usage:        6 bytes
 17247 ;; Hardware stack levels used:    1
 17248 ;; Hardware stack levels required when called:    1
 17249 ;; This function calls:
 17250 ;;		i1_WriteI2C
 17251 ;; This function is called by:
 17252 ;;		_LCDcmd
 17253 ;;		_LCDchar
 17254 ;; This function uses a non-reentrant model
 17255 ;;
 17256                           
 17257                           
 17258                           ;psect for function i1_LCDsend2x4
 17259  0C6B                     i1_LCDsend2x4:
 17260                           
 17261                           ;incstack = 0
 17262                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 17263                           ;i1LCDsend2x4@c stored from wreg
 17264  0C6B  00F5               	movwf	i1LCDsend2x4@c
 17265  0C6C                     i1l3946:
 17266                           
 17267                           ;main.c: 152: unsigned char hc;;main.c: 153: unsigned char lc;;main.c: 155: hc = c & 0xf
      +                          0;
 17268  0C6C  0875               	movf	i1LCDsend2x4@c,w
 17269  0C6D  39F0               	andlw	240
 17270  0C6E  00F3               	movwf	??i1_LCDsend2x4
 17271  0C6F  0873               	movf	??i1_LCDsend2x4,w
 17272  0C70  00F6               	movwf	i1LCDsend2x4@hc
 17273  0C71                     i1l3948:
 17274                           
 17275                           ;main.c: 156: lc = (c << 4) & 0xf0;
 17276  0C71  0875               	movf	i1LCDsend2x4@c,w
 17277  0C72  00F3               	movwf	??i1_LCDsend2x4
 17278  0C73  3003               	movlw	3
 17279  0C74                     u271_25:
 17280  0C74  35F3               	lslf	??i1_LCDsend2x4,f
 17281  0C75  3EFF               	addlw	-1
 17282  0C76  1D03               	skipz
 17283  0C77  2C74               	goto	u271_25
 17284  0C78  3573               	lslf	??i1_LCDsend2x4,w
 17285  0C79  39F0               	andlw	240
 17286  0C7A  00F4               	movwf	??i1_LCDsend2x4+1
 17287  0C7B  0874               	movf	??i1_LCDsend2x4+1,w
 17288  0C7C  00F7               	movwf	i1LCDsend2x4@lc
 17289  0C7D                     i1l3950:	
 17290                           ;main.c: 158: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17291                           
 17292  0C7D  0023               	movlb	3	; select bank3
 17293  0C7E  0C0F               	rrf	15,w	;volatile
 17294  0C7F  0C89               	rrf	9,f
 17295  0C80  3901               	andlw	1
 17296  0C81  00F3               	movwf	??i1_LCDsend2x4
 17297  0C82  0811               	movf	17,w	;volatile
 17298  0C83  391F               	andlw	31
 17299  0C84  0473               	iorwf	??i1_LCDsend2x4,w
 17300  0C85  1D03               	btfss	3,2
 17301  0C86  2C88               	goto	u272_21
 17302  0C87  2C89               	goto	u272_20
 17303  0C88                     u272_21:
 17304  0C88  2C7D               	goto	i1l3950
 17305  0C89                     u272_20:
 17306  0C89                     i1l1130:
 17307                           
 17308                           ;main.c: 159: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 17309  0C89  1411               	bsf	17,0	;volatile
 17310  0C8A                     i1l1131:
 17311  0C8A  1811               	btfsc	17,0	;volatile
 17312  0C8B  2C8D               	goto	u273_21
 17313  0C8C  2C8E               	goto	u273_20
 17314  0C8D                     u273_21:
 17315  0C8D  2C8A               	goto	i1l1131
 17316  0C8E                     u273_20:
 17317  0C8E                     i1l3952:
 17318  0C8E  0C0F               	rrf	15,w	;volatile
 17319  0C8F  0C89               	rrf	9,f
 17320  0C90  3901               	andlw	1
 17321  0C91  00F3               	movwf	??i1_LCDsend2x4
 17322  0C92  0811               	movf	17,w	;volatile
 17323  0C93  391F               	andlw	31
 17324  0C94  0473               	iorwf	??i1_LCDsend2x4,w
 17325  0C95  1D03               	btfss	3,2
 17326  0C96  2C98               	goto	u274_21
 17327  0C97  2C99               	goto	u274_20
 17328  0C98                     u274_21:
 17329  0C98  2C8E               	goto	i1l3952
 17330  0C99                     u274_20:
 17331  0C99                     i1l3954:
 17332                           
 17333                           ;main.c: 160: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17334  0C99  304E               	movlw	78
 17335  0C9A  318A  22B3  318C   	fcall	i1_WriteI2C
 17336  0C9D                     i1l3956:
 17337  0C9D  0023               	movlb	3	; select bank3
 17338  0C9E  0C0F               	rrf	15,w	;volatile
 17339  0C9F  0C89               	rrf	9,f
 17340  0CA0  3901               	andlw	1
 17341  0CA1  00F3               	movwf	??i1_LCDsend2x4
 17342  0CA2  0811               	movf	17,w	;volatile
 17343  0CA3  391F               	andlw	31
 17344  0CA4  0473               	iorwf	??i1_LCDsend2x4,w
 17345  0CA5  1D03               	btfss	3,2
 17346  0CA6  2CA8               	goto	u275_21
 17347  0CA7  2CA9               	goto	u275_20
 17348  0CA8                     u275_21:
 17349  0CA8  2C9D               	goto	i1l3956
 17350  0CA9                     u275_20:
 17351  0CA9                     i1l3958:
 17352                           
 17353                           ;main.c: 161: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17354  0CA9  0876               	movf	i1LCDsend2x4@hc,w
 17355  0CAA  0472               	iorwf	i1LCDsend2x4@mode,w
 17356  0CAB  3808               	iorlw	8
 17357  0CAC  318A  22B3  318C   	fcall	i1_WriteI2C
 17358  0CAF                     i1l3960:
 17359  0CAF  0023               	movlb	3	; select bank3
 17360  0CB0  0C0F               	rrf	15,w	;volatile
 17361  0CB1  0C89               	rrf	9,f
 17362  0CB2  3901               	andlw	1
 17363  0CB3  00F3               	movwf	??i1_LCDsend2x4
 17364  0CB4  0811               	movf	17,w	;volatile
 17365  0CB5  391F               	andlw	31
 17366  0CB6  0473               	iorwf	??i1_LCDsend2x4,w
 17367  0CB7  1D03               	btfss	3,2
 17368  0CB8  2CBA               	goto	u276_21
 17369  0CB9  2CBB               	goto	u276_20
 17370  0CBA                     u276_21:
 17371  0CBA  2CAF               	goto	i1l3960
 17372  0CBB                     u276_20:
 17373  0CBB                     i1l3962:
 17374                           
 17375                           ;main.c: 162: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 17376  0CBB  0876               	movf	i1LCDsend2x4@hc,w
 17377  0CBC  0472               	iorwf	i1LCDsend2x4@mode,w
 17378  0CBD  380C               	iorlw	12
 17379  0CBE  318A  22B3  318C   	fcall	i1_WriteI2C
 17380  0CC1                     i1l3964:
 17381  0CC1  0023               	movlb	3	; select bank3
 17382  0CC2  0C0F               	rrf	15,w	;volatile
 17383  0CC3  0C89               	rrf	9,f
 17384  0CC4  3901               	andlw	1
 17385  0CC5  00F3               	movwf	??i1_LCDsend2x4
 17386  0CC6  0811               	movf	17,w	;volatile
 17387  0CC7  391F               	andlw	31
 17388  0CC8  0473               	iorwf	??i1_LCDsend2x4,w
 17389  0CC9  1D03               	btfss	3,2
 17390  0CCA  2CCC               	goto	u277_21
 17391  0CCB  2CCD               	goto	u277_20
 17392  0CCC                     u277_21:
 17393  0CCC  2CC1               	goto	i1l3964
 17394  0CCD                     u277_20:
 17395  0CCD                     i1l1145:
 17396  0CCD                     i1l3966:	
 17397                           ;main.c: 163: _delay((unsigned long)((1)*(1000000/4000000.0)));
 17398                           
 17399                           
 17400                           ;main.c: 164: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17401  0CCD  0876               	movf	i1LCDsend2x4@hc,w
 17402  0CCE  0472               	iorwf	i1LCDsend2x4@mode,w
 17403  0CCF  3808               	iorlw	8
 17404  0CD0  318A  22B3  318C   	fcall	i1_WriteI2C
 17405  0CD3                     i1l3968:
 17406  0CD3  0023               	movlb	3	; select bank3
 17407  0CD4  0C0F               	rrf	15,w	;volatile
 17408  0CD5  0C89               	rrf	9,f
 17409  0CD6  3901               	andlw	1
 17410  0CD7  00F3               	movwf	??i1_LCDsend2x4
 17411  0CD8  0811               	movf	17,w	;volatile
 17412  0CD9  391F               	andlw	31
 17413  0CDA  0473               	iorwf	??i1_LCDsend2x4,w
 17414  0CDB  1D03               	btfss	3,2
 17415  0CDC  2CDE               	goto	u278_21
 17416  0CDD  2CDF               	goto	u278_20
 17417  0CDE                     u278_21:
 17418  0CDE  2CD3               	goto	i1l3968
 17419  0CDF                     u278_20:
 17420  0CDF                     i1l3970:
 17421                           
 17422                           ;main.c: 165: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17423  0CDF  0877               	movf	i1LCDsend2x4@lc,w
 17424  0CE0  0472               	iorwf	i1LCDsend2x4@mode,w
 17425  0CE1  3808               	iorlw	8
 17426  0CE2  318A  22B3  318C   	fcall	i1_WriteI2C
 17427  0CE5                     i1l3972:
 17428  0CE5  0023               	movlb	3	; select bank3
 17429  0CE6  0C0F               	rrf	15,w	;volatile
 17430  0CE7  0C89               	rrf	9,f
 17431  0CE8  3901               	andlw	1
 17432  0CE9  00F3               	movwf	??i1_LCDsend2x4
 17433  0CEA  0811               	movf	17,w	;volatile
 17434  0CEB  391F               	andlw	31
 17435  0CEC  0473               	iorwf	??i1_LCDsend2x4,w
 17436  0CED  1D03               	btfss	3,2
 17437  0CEE  2CF0               	goto	u279_21
 17438  0CEF  2CF1               	goto	u279_20
 17439  0CF0                     u279_21:
 17440  0CF0  2CE5               	goto	i1l3972
 17441  0CF1                     u279_20:
 17442  0CF1                     i1l3974:
 17443                           
 17444                           ;main.c: 166: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 17445  0CF1  0877               	movf	i1LCDsend2x4@lc,w
 17446  0CF2  0472               	iorwf	i1LCDsend2x4@mode,w
 17447  0CF3  380C               	iorlw	12
 17448  0CF4  318A  22B3  318C   	fcall	i1_WriteI2C
 17449  0CF7                     i1l3976:
 17450  0CF7  0023               	movlb	3	; select bank3
 17451  0CF8  0C0F               	rrf	15,w	;volatile
 17452  0CF9  0C89               	rrf	9,f
 17453  0CFA  3901               	andlw	1
 17454  0CFB  00F3               	movwf	??i1_LCDsend2x4
 17455  0CFC  0811               	movf	17,w	;volatile
 17456  0CFD  391F               	andlw	31
 17457  0CFE  0473               	iorwf	??i1_LCDsend2x4,w
 17458  0CFF  1D03               	btfss	3,2
 17459  0D00  2D02               	goto	u280_21
 17460  0D01  2D03               	goto	u280_20
 17461  0D02                     u280_21:
 17462  0D02  2CF7               	goto	i1l3976
 17463  0D03                     u280_20:
 17464  0D03                     i1l1154:
 17465  0D03                     i1l3978:	
 17466                           ;main.c: 167: _delay((unsigned long)((1)*(1000000/4000000.0)));
 17467                           
 17468                           
 17469                           ;main.c: 168: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17470  0D03  0877               	movf	i1LCDsend2x4@lc,w
 17471  0D04  0472               	iorwf	i1LCDsend2x4@mode,w
 17472  0D05  3808               	iorlw	8
 17473  0D06  318A  22B3  318C   	fcall	i1_WriteI2C
 17474  0D09                     i1l3980:
 17475  0D09  0023               	movlb	3	; select bank3
 17476  0D0A  0C0F               	rrf	15,w	;volatile
 17477  0D0B  0C89               	rrf	9,f
 17478  0D0C  3901               	andlw	1
 17479  0D0D  00F3               	movwf	??i1_LCDsend2x4
 17480  0D0E  0811               	movf	17,w	;volatile
 17481  0D0F  391F               	andlw	31
 17482  0D10  0473               	iorwf	??i1_LCDsend2x4,w
 17483  0D11  1D03               	btfss	3,2
 17484  0D12  2D14               	goto	u281_21
 17485  0D13  2D15               	goto	u281_20
 17486  0D14                     u281_21:
 17487  0D14  2D09               	goto	i1l3980
 17488  0D15                     u281_20:
 17489  0D15                     i1l1157:
 17490                           
 17491                           ;main.c: 169: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 17492  0D15  1511               	bsf	17,2	;volatile
 17493  0D16                     i1l1158:
 17494  0D16  1911               	btfsc	17,2	;volatile
 17495  0D17  2D19               	goto	u282_21
 17496  0D18  2D1A               	goto	u282_20
 17497  0D19                     u282_21:
 17498  0D19  2D16               	goto	i1l1158
 17499  0D1A                     u282_20:
 17500  0D1A                     i1l3982:
 17501                           
 17502                           ;main.c: 170: _delay((unsigned long)((50)*(1000000/4000000.0)));
 17503  0D1A  3004               	movlw	4
 17504  0D1B                     u530_27:
 17505  0D1B  0B89               	decfsz	9,f
 17506  0D1C  2D1B               	goto	u530_27
 17507  0D1D                     i1l1161:
 17508  0D1D  0008               	return
 17509  0D1E                     __end_ofi1_LCDsend2x4:
 17510                           
 17511                           	psect	text59
 17512  0AB3                     __ptext59:	
 17513 ;; *************** function i1_WriteI2C *****************
 17514 ;; Defined at:
 17515 ;;		line 47 in file "I2C/i2c.c"
 17516 ;; Parameters:    Size  Location     Type
 17517 ;;  data_out        1    wreg     unsigned char 
 17518 ;; Auto vars:     Size  Location     Type
 17519 ;;  data_out        1    1[COMMON] unsigned char 
 17520 ;; Return value:  Size  Location     Type
 17521 ;;                  1    wreg      char 
 17522 ;; Registers used:
 17523 ;;		wreg, status,2, status,0
 17524 ;; Tracked objects:
 17525 ;;		On entry : 0/0
 17526 ;;		On exit  : 0/0
 17527 ;;		Unchanged: 0/0
 17528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17533 ;;Total ram usage:        2 bytes
 17534 ;; Hardware stack levels used:    1
 17535 ;; This function calls:
 17536 ;;		Nothing
 17537 ;; This function is called by:
 17538 ;;		_tsttc
 17539 ;;		i1_LCDsend2x4
 17540 ;; This function uses a non-reentrant model
 17541 ;;
 17542                           
 17543                           
 17544                           ;psect for function i1_WriteI2C
 17545  0AB3                     i1_WriteI2C:
 17546                           
 17547                           ;incstack = 0
 17548                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 17549                           ;i1WriteI2C@data_out stored from wreg
 17550  0AB3  00F1               	movwf	i1WriteI2C@data_out
 17551  0AB4                     i1l3916:
 17552                           
 17553                           ;i2c.c: 49: SSP1BUF = data_out;
 17554  0AB4  0871               	movf	i1WriteI2C@data_out,w
 17555  0AB5  0023               	movlb	3	; select bank3
 17556  0AB6  008C               	movwf	12	;volatile
 17557  0AB7                     i1l3918:
 17558                           
 17559                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 17560  0AB7  1F90               	btfss	16,7	;volatile
 17561  0AB8  2ABA               	goto	u262_21
 17562  0AB9  2ABB               	goto	u262_20
 17563  0ABA                     u262_21:
 17564  0ABA  2ABC               	goto	i1l3924
 17565  0ABB                     u262_20:
 17566  0ABB  2AFD               	goto	i1l30
 17567  0ABC                     i1l3924:
 17568                           
 17569                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 17570  0ABC  300F               	movlw	15
 17571  0ABD  0510               	andwf	16,w	;volatile
 17572  0ABE  00F0               	movwf	??i1_WriteI2C
 17573  0ABF  3008               	movlw	8
 17574  0AC0  0670               	xorwf	??i1_WriteI2C,w
 17575  0AC1  1903               	btfsc	3,2
 17576  0AC2  2AC4               	goto	u263_21
 17577  0AC3  2AC5               	goto	u263_20
 17578  0AC4                     u263_21:
 17579  0AC4  2ADB               	goto	i1l3936
 17580  0AC5                     u263_20:
 17581  0AC5                     i1l3926:
 17582  0AC5  300F               	movlw	15
 17583  0AC6  0510               	andwf	16,w	;volatile
 17584  0AC7  00F0               	movwf	??i1_WriteI2C
 17585  0AC8  300B               	movlw	11
 17586  0AC9  0670               	xorwf	??i1_WriteI2C,w
 17587  0ACA  1903               	btfsc	3,2
 17588  0ACB  2ACD               	goto	u264_21
 17589  0ACC  2ACE               	goto	u264_20
 17590  0ACD                     u264_21:
 17591  0ACD  2ADB               	goto	i1l3936
 17592  0ACE                     u264_20:
 17593  0ACE                     i1l3928:
 17594                           
 17595                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 17596  0ACE  1610               	bsf	16,4	;volatile
 17597  0ACF                     i1l33:	
 17598                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 17599                           
 17600  0ACF  002E               	movlb	14	; select bank14
 17601  0AD0  1C0F               	btfss	15,0	;volatile
 17602  0AD1  2AD3               	goto	u265_21
 17603  0AD2  2AD4               	goto	u265_20
 17604  0AD3                     u265_21:
 17605  0AD3  2ACF               	goto	i1l33
 17606  0AD4                     u265_20:
 17607  0AD4                     i1l35:
 17608                           
 17609                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 17610  0AD4  0023               	movlb	3	; select bank3
 17611  0AD5  190F               	btfsc	15,2	;volatile
 17612  0AD6  2AD8               	goto	u266_21
 17613  0AD7  2AD9               	goto	u266_20
 17614  0AD8                     u266_21:
 17615  0AD8  2AFD               	goto	i1l30
 17616  0AD9                     u266_20:
 17617  0AD9                     i1l3930:
 17618  0AD9  080F               	movf	15,w	;volatile
 17619  0ADA  2AFD               	goto	i1l30
 17620  0ADB                     i1l3936:
 17621                           
 17622                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 17623  0ADB  300F               	movlw	15
 17624  0ADC  0510               	andwf	16,w	;volatile
 17625  0ADD  00F0               	movwf	??i1_WriteI2C
 17626  0ADE  3008               	movlw	8
 17627  0ADF  0670               	xorwf	??i1_WriteI2C,w
 17628  0AE0  1903               	btfsc	3,2
 17629  0AE1  2AE3               	goto	u267_21
 17630  0AE2  2AE4               	goto	u267_20
 17631  0AE3                     u267_21:
 17632  0AE3  2AED               	goto	i1l42
 17633  0AE4                     u267_20:
 17634  0AE4                     i1l3938:
 17635  0AE4  300F               	movlw	15
 17636  0AE5  0510               	andwf	16,w	;volatile
 17637  0AE6  00F0               	movwf	??i1_WriteI2C
 17638  0AE7  300B               	movlw	11
 17639  0AE8  0670               	xorwf	??i1_WriteI2C,w
 17640  0AE9  1D03               	btfss	3,2
 17641  0AEA  2AEC               	goto	u268_21
 17642  0AEB  2AED               	goto	u268_20
 17643  0AEC                     u268_21:
 17644  0AEC  2AFD               	goto	i1l30
 17645  0AED                     u268_20:
 17646  0AED                     i1l42:
 17647  0AED  180F               	btfsc	15,0	;volatile
 17648  0AEE  2AF0               	goto	u269_21
 17649  0AEF  2AF1               	goto	u269_20
 17650  0AF0                     u269_21:
 17651  0AF0  2AED               	goto	i1l42
 17652  0AF1                     u269_20:
 17653  0AF1                     i1l3940:
 17654  0AF1  0C0F               	rrf	15,w	;volatile
 17655  0AF2  0C89               	rrf	9,f
 17656  0AF3  3901               	andlw	1
 17657  0AF4  00F0               	movwf	??i1_WriteI2C
 17658  0AF5  0811               	movf	17,w	;volatile
 17659  0AF6  391F               	andlw	31
 17660  0AF7  0470               	iorwf	??i1_WriteI2C,w
 17661  0AF8  1D03               	btfss	3,2
 17662  0AF9  2AFB               	goto	u270_21
 17663  0AFA  2AFC               	goto	u270_20
 17664  0AFB                     u270_21:
 17665  0AFB  2AF1               	goto	i1l3940
 17666  0AFC                     u270_20:
 17667  0AFC                     i1l47:
 17668                           
 17669                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 17670  0AFC  0811               	movf	17,w	;volatile
 17671  0AFD                     i1l30:
 17672  0AFD  0008               	return
 17673  0AFE                     __end_ofi1_WriteI2C:
 17674                           
 17675                           	psect	text60
 17676  178D                     __ptext60:	
 17677 ;; *************** function _TMR3_WriteTimer *****************
 17678 ;; Defined at:
 17679 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 17680 ;; Parameters:    Size  Location     Type
 17681 ;;  timerVal        2    0[COMMON] unsigned int 
 17682 ;; Auto vars:     Size  Location     Type
 17683 ;;		None
 17684 ;; Return value:  Size  Location     Type
 17685 ;;                  1    wreg      void 
 17686 ;; Registers used:
 17687 ;;		wreg, status,2
 17688 ;; Tracked objects:
 17689 ;;		On entry : 0/0
 17690 ;;		On exit  : 0/0
 17691 ;;		Unchanged: 0/0
 17692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17697 ;;Total ram usage:        2 bytes
 17698 ;; Hardware stack levels used:    1
 17699 ;; This function calls:
 17700 ;;		Nothing
 17701 ;; This function is called by:
 17702 ;;		_TMR3_ISR
 17703 ;;		_TMR3_Reload
 17704 ;; This function uses a non-reentrant model
 17705 ;;
 17706                           
 17707                           
 17708                           ;psect for function _TMR3_WriteTimer
 17709  178D                     _TMR3_WriteTimer:
 17710  178D                     i1l4518:	
 17711                           ;incstack = 0
 17712                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 17713                           
 17714                           
 17715                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 17716  178D  0024               	movlb	4	; select bank4
 17717  178E  1D14               	btfss	20,2	;volatile
 17718  178F  2F91               	goto	u372_21
 17719  1790  2F92               	goto	u372_20
 17720  1791                     u372_21:
 17721  1791  2F99               	goto	i1l4528
 17722  1792                     u372_20:
 17723  1792                     i1l4520:
 17724                           
 17725                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 17726  1792  1014               	bcf	20,0	;volatile
 17727  1793                     i1l4522:
 17728                           
 17729                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 17730  1793  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 17731  1794  0093               	movwf	19	;volatile
 17732  1795                     i1l4524:
 17733                           
 17734                           ;tmr3.c: 136: TMR3L = timerVal;
 17735  1795  0870               	movf	TMR3_WriteTimer@timerVal,w
 17736  1796  0092               	movwf	18	;volatile
 17737  1797                     i1l4526:
 17738                           
 17739                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 17740  1797  1414               	bsf	20,0	;volatile
 17741                           
 17742                           ;tmr3.c: 140: }
 17743  1798  2F9D               	goto	i1l477
 17744  1799                     i1l4528:
 17745                           
 17746                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 17747  1799  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 17748  179A  0093               	movwf	19	;volatile
 17749  179B                     i1l4530:
 17750                           
 17751                           ;tmr3.c: 145: TMR3L = timerVal;
 17752  179B  0870               	movf	TMR3_WriteTimer@timerVal,w
 17753  179C  0092               	movwf	18	;volatile
 17754  179D                     i1l477:
 17755  179D  0008               	return
 17756  179E                     __end_of_TMR3_WriteTimer:
 17757                           
 17758                           	psect	text61
 17759  17E9                     __ptext61:	
 17760 ;; *************** function _TMR1_ISR *****************
 17761 ;; Defined at:
 17762 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 17763 ;; Parameters:    Size  Location     Type
 17764 ;;		None
 17765 ;; Auto vars:     Size  Location     Type
 17766 ;;		None
 17767 ;; Return value:  Size  Location     Type
 17768 ;;                  1    wreg      void 
 17769 ;; Registers used:
 17770 ;;		wreg, status,2, status,0, pclath, cstack
 17771 ;; Tracked objects:
 17772 ;;		On entry : 0/0
 17773 ;;		On exit  : 0/0
 17774 ;;		Unchanged: 0/0
 17775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17780 ;;Total ram usage:        0 bytes
 17781 ;; Hardware stack levels used:    1
 17782 ;; Hardware stack levels required when called:    2
 17783 ;; This function calls:
 17784 ;;		Absolute function
 17785 ;;		_Clock_ISR
 17786 ;;		_TMR1_DefaultInterruptHandler
 17787 ;;		_TMR1_WriteTimer
 17788 ;; This function is called by:
 17789 ;;		_INTERRUPT_InterruptManager
 17790 ;; This function uses a non-reentrant model
 17791 ;;
 17792                           
 17793                           
 17794                           ;psect for function _TMR1_ISR
 17795  17E9                     _TMR1_ISR:
 17796  17E9                     i1l4914:	
 17797                           ;incstack = 0
 17798                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17799                           
 17800                           
 17801                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 17802  17E9  002E               	movlb	14	; select bank14
 17803  17EA  1010               	bcf	16,0	;volatile
 17804  17EB                     i1l4916:
 17805                           
 17806                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 17807  17EB  0021               	movlb	1	; select bank1
 17808  17EC  083C               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 17809  17ED  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17810  17EE  083B               	movf	_timer1ReloadVal^(0+128),w	;volatile
 17811  17EF  00F0               	movwf	TMR1_WriteTimer@timerVal
 17812  17F0  3197  277C  3197   	fcall	_TMR1_WriteTimer
 17813  17F3                     i1l4918:
 17814                           
 17815                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 17816  17F3  0021               	movlb	1	; select bank1
 17817  17F4  0839               	movf	_TMR1_InterruptHandler^(0+128),w
 17818  17F5  043A               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 17819  17F6  1903               	btfsc	3,2
 17820  17F7  2FF9               	goto	u447_21
 17821  17F8  2FFA               	goto	u447_20
 17822  17F9                     u447_21:
 17823  17F9  2FFF               	goto	i1l426
 17824  17FA                     u447_20:
 17825  17FA                     i1l4920:
 17826                           
 17827                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 17828  17FA  083A               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 17829  17FB  008A               	movwf	10
 17830  17FC  0839               	movf	_TMR1_InterruptHandler^(0+128),w
 17831  17FD  000A               	callw
 17832  17FE  3197               	pagesel	$
 17833  17FF                     i1l426:
 17834  17FF  0008               	return
 17835  1800                     __end_of_TMR1_ISR:
 17836                           
 17837                           	psect	text62
 17838  177C                     __ptext62:	
 17839 ;; *************** function _TMR1_WriteTimer *****************
 17840 ;; Defined at:
 17841 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 17842 ;; Parameters:    Size  Location     Type
 17843 ;;  timerVal        2    0[COMMON] unsigned int 
 17844 ;; Auto vars:     Size  Location     Type
 17845 ;;		None
 17846 ;; Return value:  Size  Location     Type
 17847 ;;                  1    wreg      void 
 17848 ;; Registers used:
 17849 ;;		wreg, status,2
 17850 ;; Tracked objects:
 17851 ;;		On entry : 0/0
 17852 ;;		On exit  : 0/0
 17853 ;;		Unchanged: 0/0
 17854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17859 ;;Total ram usage:        2 bytes
 17860 ;; Hardware stack levels used:    1
 17861 ;; This function calls:
 17862 ;;		Nothing
 17863 ;; This function is called by:
 17864 ;;		_TMR1_ISR
 17865 ;;		_TMR1_Reload
 17866 ;; This function uses a non-reentrant model
 17867 ;;
 17868                           
 17869                           
 17870                           ;psect for function _TMR1_WriteTimer
 17871  177C                     _TMR1_WriteTimer:
 17872  177C                     i1l4504:	
 17873                           ;incstack = 0
 17874                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 17875                           
 17876                           
 17877                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 17878  177C  0024               	movlb	4	; select bank4
 17879  177D  1D0E               	btfss	14,2	;volatile
 17880  177E  2F80               	goto	u371_21
 17881  177F  2F81               	goto	u371_20
 17882  1780                     u371_21:
 17883  1780  2F88               	goto	i1l4514
 17884  1781                     u371_20:
 17885  1781                     i1l4506:
 17886                           
 17887                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 17888  1781  100E               	bcf	14,0	;volatile
 17889  1782                     i1l4508:
 17890                           
 17891                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 17892  1782  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17893  1783  008D               	movwf	13	;volatile
 17894  1784                     i1l4510:
 17895                           
 17896                           ;tmr1.c: 136: TMR1L = timerVal;
 17897  1784  0870               	movf	TMR1_WriteTimer@timerVal,w
 17898  1785  008C               	movwf	12	;volatile
 17899  1786                     i1l4512:
 17900                           
 17901                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 17902  1786  140E               	bsf	14,0	;volatile
 17903                           
 17904                           ;tmr1.c: 140: }
 17905  1787  2F8C               	goto	i1l413
 17906  1788                     i1l4514:
 17907                           
 17908                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 17909  1788  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17910  1789  008D               	movwf	13	;volatile
 17911  178A                     i1l4516:
 17912                           
 17913                           ;tmr1.c: 145: TMR1L = timerVal;
 17914  178A  0870               	movf	TMR1_WriteTimer@timerVal,w
 17915  178B  008C               	movwf	12	;volatile
 17916  178C                     i1l413:
 17917  178C  0008               	return
 17918  178D                     __end_of_TMR1_WriteTimer:
 17919                           
 17920                           	psect	text63
 17921  0DF2                     __ptext63:	
 17922 ;; *************** function _Clock_ISR *****************
 17923 ;; Defined at:
 17924 ;;		line 289 in file "main.c"
 17925 ;; Parameters:    Size  Location     Type
 17926 ;;		None
 17927 ;; Auto vars:     Size  Location     Type
 17928 ;;		None
 17929 ;; Return value:  Size  Location     Type
 17930 ;;                  1    wreg      void 
 17931 ;; Registers used:
 17932 ;;		wreg, status,2, status,0, pclath, cstack
 17933 ;; Tracked objects:
 17934 ;;		On entry : 0/0
 17935 ;;		On exit  : 0/0
 17936 ;;		Unchanged: 0/0
 17937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17940 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17942 ;;Total ram usage:        1 bytes
 17943 ;; Hardware stack levels used:    1
 17944 ;; Hardware stack levels required when called:    1
 17945 ;; This function calls:
 17946 ;;		i1_DATAEE_WriteByte
 17947 ;; This function is called by:
 17948 ;;		_main
 17949 ;;		_TMR1_ISR
 17950 ;; This function uses a non-reentrant model
 17951 ;;
 17952                           
 17953                           
 17954                           ;psect for function _Clock_ISR
 17955  0DF2                     _Clock_ISR:
 17956  0DF2                     i1l4604:	
 17957                           ;incstack = 0
 17958                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0+pclath+cstack]
 17959                           
 17960                           
 17961                           ;main.c: 291: t.s++;
 17962  0DF2  3001               	movlw	1
 17963  0DF3  00FA               	movwf	??_Clock_ISR
 17964  0DF4  087A               	movf	??_Clock_ISR,w
 17965  0DF5  0020               	movlb	0	; select bank0
 17966  0DF6  07D9               	addwf	_t+2,f
 17967                           
 17968                           ;main.c: 293: if(t.s==60){
 17969  0DF7  303C               	movlw	60
 17970  0DF8  0659               	xorwf	_t+2,w
 17971  0DF9  1D03               	btfss	3,2
 17972  0DFA  2DFC               	goto	u393_21
 17973  0DFB  2DFD               	goto	u393_20
 17974  0DFC                     u393_21:
 17975  0DFC  2EAC               	goto	i1l4636
 17976  0DFD                     u393_20:
 17977  0DFD                     i1l4606:
 17978                           
 17979                           ;main.c: 294: t.m++;
 17980  0DFD  3001               	movlw	1
 17981  0DFE  00FA               	movwf	??_Clock_ISR
 17982  0DFF  087A               	movf	??_Clock_ISR,w
 17983  0E00  07D8               	addwf	_t+1,f
 17984  0E01                     i1l4608:
 17985                           
 17986                           ;main.c: 295: t.s=0;
 17987  0E01  01D9               	clrf	_t+2
 17988  0E02                     i1l4610:
 17989                           
 17990                           ;main.c: 298: DATAEE_WriteByte( 0x7000 + (1 * 8), NREG);
 17991  0E02  3008               	movlw	8
 17992  0E03  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17993  0E04  3070               	movlw	112
 17994  0E05  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17995  0E06  0021               	movlb	1	; select bank1
 17996  0E07  0847               	movf	_NREG^(0+128),w
 17997  0E08  00FA               	movwf	??_Clock_ISR
 17998  0E09  087A               	movf	??_Clock_ISR,w
 17999  0E0A  00F8               	movwf	i1DATAEE_WriteByte@bData
 18000  0E0B  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18001  0E0E                     i1l4612:
 18002                           
 18003                           ;main.c: 299: DATAEE_WriteByte( 0x7000 + (2 * 8), PMON);
 18004  0E0E  3010               	movlw	16
 18005  0E0F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18006  0E10  3070               	movlw	112
 18007  0E11  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18008  0E12  0021               	movlb	1	; select bank1
 18009  0E13  0846               	movf	_PMON^(0+128),w
 18010  0E14  00FA               	movwf	??_Clock_ISR
 18011  0E15  087A               	movf	??_Clock_ISR,w
 18012  0E16  00F8               	movwf	i1DATAEE_WriteByte@bData
 18013  0E17  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18014  0E1A                     i1l4614:
 18015                           
 18016                           ;main.c: 300: DATAEE_WriteByte( 0x7000 + (3 * 8), TALA);
 18017  0E1A  3018               	movlw	24
 18018  0E1B  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18019  0E1C  3070               	movlw	112
 18020  0E1D  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18021  0E1E  0020               	movlb	0	; select bank0
 18022  0E1F  0866               	movf	_TALA,w
 18023  0E20  00FA               	movwf	??_Clock_ISR
 18024  0E21  087A               	movf	??_Clock_ISR,w
 18025  0E22  00F8               	movwf	i1DATAEE_WriteByte@bData
 18026  0E23  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18027  0E26                     i1l4616:
 18028                           
 18029                           ;main.c: 301: DATAEE_WriteByte( 0x7000 + (4 * 8), clkAlarm.alarmVal.h);
 18030  0E26  3020               	movlw	32
 18031  0E27  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18032  0E28  3070               	movlw	112
 18033  0E29  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18034  0E2A  0020               	movlb	0	; select bank0
 18035  0E2B  084D               	movf	_clkAlarm,w
 18036  0E2C  00FA               	movwf	??_Clock_ISR
 18037  0E2D  087A               	movf	??_Clock_ISR,w
 18038  0E2E  00F8               	movwf	i1DATAEE_WriteByte@bData
 18039  0E2F  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18040  0E32                     i1l4618:
 18041                           
 18042                           ;main.c: 302: DATAEE_WriteByte( 0x7000 + (5 * 8), clkAlarm.alarmVal.m);
 18043  0E32  3028               	movlw	40
 18044  0E33  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18045  0E34  3070               	movlw	112
 18046  0E35  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18047  0E36  0020               	movlb	0	; select bank0
 18048  0E37  084E               	movf	_clkAlarm+1,w
 18049  0E38  00FA               	movwf	??_Clock_ISR
 18050  0E39  087A               	movf	??_Clock_ISR,w
 18051  0E3A  00F8               	movwf	i1DATAEE_WriteByte@bData
 18052  0E3B  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18053  0E3E                     i1l4620:
 18054                           
 18055                           ;main.c: 303: DATAEE_WriteByte( 0x7000 + (6 * 8), clkAlarm.alarmVal.s);
 18056  0E3E  3030               	movlw	48
 18057  0E3F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18058  0E40  3070               	movlw	112
 18059  0E41  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18060  0E42  0020               	movlb	0	; select bank0
 18061  0E43  084F               	movf	_clkAlarm+2,w
 18062  0E44  00FA               	movwf	??_Clock_ISR
 18063  0E45  087A               	movf	??_Clock_ISR,w
 18064  0E46  00F8               	movwf	i1DATAEE_WriteByte@bData
 18065  0E47  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18066  0E4A                     i1l4622:
 18067                           
 18068                           ;main.c: 304: DATAEE_WriteByte( 0x7000 + (7 * 8), tempAlarm.alarmTemp);
 18069  0E4A  3038               	movlw	56
 18070  0E4B  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18071  0E4C  3070               	movlw	112
 18072  0E4D  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18073  0E4E  0020               	movlb	0	; select bank0
 18074  0E4F  0854               	movf	_tempAlarm,w
 18075  0E50  00FA               	movwf	??_Clock_ISR
 18076  0E51  087A               	movf	??_Clock_ISR,w
 18077  0E52  00F8               	movwf	i1DATAEE_WriteByte@bData
 18078  0E53  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18079  0E56                     i1l4624:
 18080                           
 18081                           ;main.c: 305: DATAEE_WriteByte( 0x7000 + (8 * 8), lumAlarm.alarmLum);
 18082  0E56  3040               	movlw	64
 18083  0E57  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18084  0E58  3070               	movlw	112
 18085  0E59  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18086  0E5A  0020               	movlb	0	; select bank0
 18087  0E5B  0851               	movf	_lumAlarm,w
 18088  0E5C  00FA               	movwf	??_Clock_ISR
 18089  0E5D  087A               	movf	??_Clock_ISR,w
 18090  0E5E  00F8               	movwf	i1DATAEE_WriteByte@bData
 18091  0E5F  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18092  0E62                     i1l4626:
 18093                           
 18094                           ;main.c: 306: DATAEE_WriteByte( 0x7000 + (9 * 8), ALAF);
 18095  0E62  3048               	movlw	72
 18096  0E63  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18097  0E64  3070               	movlw	112
 18098  0E65  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18099  0E66  0020               	movlb	0	; select bank0
 18100  0E67  0865               	movf	_ALAF,w
 18101  0E68  00FA               	movwf	??_Clock_ISR
 18102  0E69  087A               	movf	??_Clock_ISR,w
 18103  0E6A  00F8               	movwf	i1DATAEE_WriteByte@bData
 18104  0E6B  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18105  0E6E                     i1l4628:
 18106                           
 18107                           ;main.c: 307: DATAEE_WriteByte( 0x7000 + (10 * 8), t.h);
 18108  0E6E  3050               	movlw	80
 18109  0E6F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18110  0E70  3070               	movlw	112
 18111  0E71  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18112  0E72  0020               	movlb	0	; select bank0
 18113  0E73  0857               	movf	_t,w
 18114  0E74  00FA               	movwf	??_Clock_ISR
 18115  0E75  087A               	movf	??_Clock_ISR,w
 18116  0E76  00F8               	movwf	i1DATAEE_WriteByte@bData
 18117  0E77  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18118  0E7A                     i1l4630:
 18119                           
 18120                           ;main.c: 308: DATAEE_WriteByte( 0x7000 + (11 * 8), t.m);
 18121  0E7A  3058               	movlw	88
 18122  0E7B  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18123  0E7C  3070               	movlw	112
 18124  0E7D  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18125  0E7E  0020               	movlb	0	; select bank0
 18126  0E7F  0858               	movf	_t+1,w
 18127  0E80  00FA               	movwf	??_Clock_ISR
 18128  0E81  087A               	movf	??_Clock_ISR,w
 18129  0E82  00F8               	movwf	i1DATAEE_WriteByte@bData
 18130  0E83  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18131  0E86                     i1l4632:
 18132                           
 18133                           ;main.c: 309: DATAEE_WriteByte( 0x7000 + (12 * 8), idx_RingBuffer);
 18134  0E86  3060               	movlw	96
 18135  0E87  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18136  0E88  3070               	movlw	112
 18137  0E89  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18138  0E8A  0021               	movlb	1	; select bank1
 18139  0E8B  0845               	movf	_idx_RingBuffer^(0+128),w
 18140  0E8C  00FA               	movwf	??_Clock_ISR
 18141  0E8D  087A               	movf	??_Clock_ISR,w
 18142  0E8E  00F8               	movwf	i1DATAEE_WriteByte@bData
 18143  0E8F  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18144  0E92                     i1l4634:
 18145                           
 18146                           ;main.c: 310: DATAEE_WriteByte( 0x7000 + (13 * 8), NREG + PMON + TALA + clkAlarm.alarmVa
      +                          l.h + clkAlarm.alarmVal.m + clkAlarm.alarmVal.s + tempAlarm.alarmTemp + lumAlarm.alarmLu
      +                          m + ALAF + t.h + t.m + idx_RingBuffer);
 18147  0E92  3068               	movlw	104
 18148  0E93  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18149  0E94  3070               	movlw	112
 18150  0E95  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18151  0E96  0020               	movlb	0	; select bank0
 18152  0E97  084E               	movf	_clkAlarm+1,w
 18153  0E98  074F               	addwf	_clkAlarm+2,w
 18154  0E99  0758               	addwf	_t+1,w
 18155  0E9A  074D               	addwf	_clkAlarm,w
 18156  0E9B  0754               	addwf	_tempAlarm,w
 18157  0E9C  0751               	addwf	_lumAlarm,w
 18158  0E9D  0757               	addwf	_t,w
 18159  0E9E  0021               	movlb	1	; select bank1
 18160  0E9F  0747               	addwf	_NREG^(0+128),w
 18161  0EA0  0746               	addwf	_PMON^(0+128),w
 18162  0EA1  0020               	movlb	0	; select bank0
 18163  0EA2  0766               	addwf	_TALA,w
 18164  0EA3  0765               	addwf	_ALAF,w
 18165  0EA4  0021               	movlb	1	; select bank1
 18166  0EA5  0745               	addwf	_idx_RingBuffer^(0+128),w
 18167  0EA6  00FA               	movwf	??_Clock_ISR
 18168  0EA7  087A               	movf	??_Clock_ISR,w
 18169  0EA8  00F8               	movwf	i1DATAEE_WriteByte@bData
 18170  0EA9  3188  20A1  318D   	fcall	i1_DATAEE_WriteByte
 18171  0EAC                     i1l4636:
 18172                           
 18173                           ;main.c: 311: };main.c: 312: if(t.m==60){
 18174  0EAC  303C               	movlw	60
 18175  0EAD  0020               	movlb	0	; select bank0
 18176  0EAE  0658               	xorwf	_t+1,w
 18177  0EAF  1D03               	btfss	3,2
 18178  0EB0  2EB2               	goto	u394_21
 18179  0EB1  2EB3               	goto	u394_20
 18180  0EB2                     u394_21:
 18181  0EB2  2EB8               	goto	i1l4642
 18182  0EB3                     u394_20:
 18183  0EB3                     i1l4638:
 18184                           
 18185                           ;main.c: 313: t.h++;
 18186  0EB3  3001               	movlw	1
 18187  0EB4  00FA               	movwf	??_Clock_ISR
 18188  0EB5  087A               	movf	??_Clock_ISR,w
 18189  0EB6  07D7               	addwf	_t,f
 18190  0EB7                     i1l4640:
 18191                           
 18192                           ;main.c: 314: t.m=0;
 18193  0EB7  01D8               	clrf	_t+1
 18194  0EB8                     i1l4642:
 18195                           
 18196                           ;main.c: 315: };main.c: 316: if(t.h==24){
 18197  0EB8  3018               	movlw	24
 18198  0EB9  0657               	xorwf	_t,w
 18199  0EBA  1D03               	btfss	3,2
 18200  0EBB  2EBD               	goto	u395_21
 18201  0EBC  2EBE               	goto	u395_20
 18202  0EBD                     u395_21:
 18203  0EBD  2EBF               	goto	i1l4646
 18204  0EBE                     u395_20:
 18205  0EBE                     i1l4644:
 18206                           
 18207                           ;main.c: 317: t.h=0;
 18208  0EBE  01D7               	clrf	_t
 18209  0EBF                     i1l4646:
 18210                           
 18211                           ;main.c: 318: };main.c: 321: if((ALAF == 'A') && t.s >= clkAlarm.alarmVal.s && t.m >= cl
      +                          kAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 18212  0EBF  3041               	movlw	65
 18213  0EC0  0665               	xorwf	_ALAF,w
 18214  0EC1  1D03               	btfss	3,2
 18215  0EC2  2EC4               	goto	u396_21
 18216  0EC3  2EC5               	goto	u396_20
 18217  0EC4                     u396_21:
 18218  0EC4  2EE7               	goto	i1l4660
 18219  0EC5                     u396_20:
 18220  0EC5                     i1l4648:
 18221  0EC5  084F               	movf	_clkAlarm+2,w
 18222  0EC6  0259               	subwf	_t+2,w
 18223  0EC7  1C03               	skipc
 18224  0EC8  2ECA               	goto	u397_21
 18225  0EC9  2ECB               	goto	u397_20
 18226  0ECA                     u397_21:
 18227  0ECA  2EE7               	goto	i1l4660
 18228  0ECB                     u397_20:
 18229  0ECB                     i1l4650:
 18230  0ECB  084E               	movf	_clkAlarm+1,w
 18231  0ECC  0258               	subwf	_t+1,w
 18232  0ECD  1C03               	skipc
 18233  0ECE  2ED0               	goto	u398_21
 18234  0ECF  2ED1               	goto	u398_20
 18235  0ED0                     u398_21:
 18236  0ED0  2EE7               	goto	i1l4660
 18237  0ED1                     u398_20:
 18238  0ED1                     i1l4652:
 18239  0ED1  084D               	movf	_clkAlarm,w
 18240  0ED2  0257               	subwf	_t,w
 18241  0ED3  1C03               	skipc
 18242  0ED4  2ED6               	goto	u399_21
 18243  0ED5  2ED7               	goto	u399_20
 18244  0ED6                     u399_21:
 18245  0ED6  2EE7               	goto	i1l4660
 18246  0ED7                     u399_20:
 18247  0ED7                     i1l4654:
 18248  0ED7  085C               	movf	_editingClockAlarm,w
 18249  0ED8  045D               	iorwf	_editingClockAlarm+1,w
 18250  0ED9  1D03               	btfss	3,2
 18251  0EDA  2EDC               	goto	u400_21
 18252  0EDB  2EDD               	goto	u400_20
 18253  0EDC                     u400_21:
 18254  0EDC  2EE7               	goto	i1l4660
 18255  0EDD                     u400_20:
 18256  0EDD                     i1l4656:
 18257                           
 18258                           ;main.c: 322: alarmPWMStart.h = 0xff;
 18259  0EDD  30FF               	movlw	255
 18260  0EDE  00FA               	movwf	??_Clock_ISR
 18261  0EDF  087A               	movf	??_Clock_ISR,w
 18262  0EE0  00E7               	movwf	_alarmPWMStart
 18263  0EE1                     i1l4658:
 18264                           
 18265                           ;main.c: 323: clkAlarm.trigger = 1;
 18266  0EE1  01D0               	clrf	_clkAlarm+3
 18267  0EE2  0AD0               	incf	_clkAlarm+3,f
 18268                           
 18269                           ;main.c: 324: clkAlarm.alarmVal.h = 25;
 18270  0EE3  3019               	movlw	25
 18271  0EE4  00FA               	movwf	??_Clock_ISR
 18272  0EE5  087A               	movf	??_Clock_ISR,w
 18273  0EE6  00CD               	movwf	_clkAlarm
 18274  0EE7                     i1l4660:
 18275  0EE7  1003               	clrc
 18276  0EE8  1F96               	btfss	22,7	;volatile
 18277  0EE9  1403               	setc
 18278  0EEA  1803               	btfsc	3,0
 18279  0EEB  2EED               	goto	u401_21
 18280  0EEC  2EF0               	goto	u401_20
 18281  0EED                     u401_21:
 18282  0EED  0020               	movlb	0	; select bank0
 18283  0EEE  1796               	bsf	22,7	;volatile
 18284  0EEF  2EF2               	goto	u402_24
 18285  0EF0                     u401_20:
 18286  0EF0  0020               	movlb	0	; select bank0
 18287  0EF1  1396               	bcf	22,7	;volatile
 18288  0EF2                     u402_24:
 18289  0EF2                     i1l1231:
 18290  0EF2  0008               	return
 18291  0EF3                     __end_of_Clock_ISR:
 18292                           
 18293                           	psect	text64
 18294  0002                     __ptext64:	
 18295 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 18296 ;; Defined at:
 18297 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 18298 ;; Parameters:    Size  Location     Type
 18299 ;;		None
 18300 ;; Auto vars:     Size  Location     Type
 18301 ;;		None
 18302 ;; Return value:  Size  Location     Type
 18303 ;;                  1    wreg      void 
 18304 ;; Registers used:
 18305 ;;		None
 18306 ;; Tracked objects:
 18307 ;;		On entry : 0/0
 18308 ;;		On exit  : 0/0
 18309 ;;		Unchanged: 0/0
 18310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18315 ;;Total ram usage:        0 bytes
 18316 ;; Hardware stack levels used:    1
 18317 ;; This function calls:
 18318 ;;		Nothing
 18319 ;; This function is called by:
 18320 ;;		_TMR1_Initialize
 18321 ;;		_TMR1_ISR
 18322 ;; This function uses a non-reentrant model
 18323 ;;
 18324                           
 18325                           
 18326                           ;psect for function _TMR1_DefaultInterruptHandler
 18327  0002                     _TMR1_DefaultInterruptHandler:
 18328  0002                     i1l432:	
 18329                           ;incstack = 0
 18330                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 18331                           
 18332  0002  0008               	return
 18333  0003                     __end_of_TMR1_DefaultInterruptHandler:
 18334                           
 18335                           	psect	text65
 18336  08A1                     __ptext65:	
 18337 ;; *************** function i1_DATAEE_WriteByte *****************
 18338 ;; Defined at:
 18339 ;;		line 180 in file "mcc_generated_files/memory.c"
 18340 ;; Parameters:    Size  Location     Type
 18341 ;;  bAdd            2    6[COMMON] unsigned int 
 18342 ;;  bData           1    8[COMMON] unsigned char 
 18343 ;; Auto vars:     Size  Location     Type
 18344 ;;  GIEBitValue     1    9[COMMON] unsigned char 
 18345 ;; Return value:  Size  Location     Type
 18346 ;;                  1    wreg      void 
 18347 ;; Registers used:
 18348 ;;		wreg, status,2, status,0
 18349 ;; Tracked objects:
 18350 ;;		On entry : 0/0
 18351 ;;		On exit  : 0/0
 18352 ;;		Unchanged: 0/0
 18353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18354 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18357 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18358 ;;Total ram usage:        4 bytes
 18359 ;; Hardware stack levels used:    1
 18360 ;; This function calls:
 18361 ;;		Nothing
 18362 ;; This function is called by:
 18363 ;;		_Clock_ISR
 18364 ;;		_monitoring_ISR
 18365 ;; This function uses a non-reentrant model
 18366 ;;
 18367                           
 18368                           
 18369                           ;psect for function i1_DATAEE_WriteByte
 18370  08A1                     i1_DATAEE_WriteByte:
 18371  08A1                     i1l4346:	
 18372                           ;incstack = 0
 18373                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 18374                           
 18375                           
 18376                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 18377  08A1  3000               	movlw	0
 18378  08A2  1B8B               	btfsc	11,7	;volatile
 18379  08A3  3001               	movlw	1
 18380  08A4  00F9               	movwf	i1DATAEE_WriteByte@GIEBitValue
 18381                           
 18382                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 18383  08A5  0877               	movf	i1DATAEE_WriteByte@bAdd+1,w
 18384  08A6  0030               	movlb	16	; select bank16
 18385  08A7  009B               	movwf	27	;volatile
 18386  08A8                     i1l4348:
 18387                           
 18388                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 18389  08A8  0876               	movf	i1DATAEE_WriteByte@bAdd,w
 18390  08A9  009A               	movwf	26	;volatile
 18391  08AA                     i1l4350:
 18392                           
 18393                           ;memory.c: 186: NVMDATL = bData;
 18394  08AA  0878               	movf	i1DATAEE_WriteByte@bData,w
 18395  08AB  009C               	movwf	28	;volatile
 18396  08AC                     i1l4352:
 18397                           
 18398                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 18399  08AC  171E               	bsf	30,6	;volsfr
 18400  08AD                     i1l4354:
 18401                           
 18402                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 18403  08AD  151E               	bsf	30,2	;volsfr
 18404  08AE                     i1l4356:
 18405                           
 18406                           ;memory.c: 189: INTCONbits.GIE = 0;
 18407  08AE  138B               	bcf	11,7	;volatile
 18408  08AF                     i1l4358:
 18409                           
 18410                           ;memory.c: 190: NVMCON2 = 0x55;
 18411  08AF  3055               	movlw	85
 18412  08B0  009F               	movwf	31	;volsfr
 18413  08B1                     i1l4360:
 18414                           
 18415                           ;memory.c: 191: NVMCON2 = 0xAA;
 18416  08B1  30AA               	movlw	170
 18417  08B2  009F               	movwf	31	;volsfr
 18418  08B3                     i1l4362:
 18419                           
 18420                           ;memory.c: 192: NVMCON1bits.WR = 1;
 18421  08B3  149E               	bsf	30,1	;volsfr
 18422  08B4                     i1l842:	
 18423                           ;memory.c: 195: {
 18424                           
 18425  08B4  189E               	btfsc	30,1	;volsfr
 18426  08B5  28B7               	goto	u370_21
 18427  08B6  28B8               	goto	u370_20
 18428  08B7                     u370_21:
 18429  08B7  28B4               	goto	i1l842
 18430  08B8                     u370_20:
 18431  08B8                     i1l844:
 18432                           
 18433                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 18434  08B8  111E               	bcf	30,2	;volsfr
 18435  08B9                     i1l4364:
 18436                           
 18437                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 18438  08B9  0C79               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 18439  08BA  1C03               	skipc
 18440  08BB  138B               	bcf	11,7	;volatile
 18441  08BC  1803               	skipnc
 18442  08BD  178B               	bsf	11,7	;volatile
 18443  08BE                     i1l845:
 18444  08BE  0008               	return
 18445  08BF                     __end_ofi1_DATAEE_WriteByte:
 18446                           
 18447                           	psect	text66
 18448  16E8                     __ptext66:	
 18449 ;; *************** function _INT_ISR *****************
 18450 ;; Defined at:
 18451 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 18452 ;; Parameters:    Size  Location     Type
 18453 ;;		None
 18454 ;; Auto vars:     Size  Location     Type
 18455 ;;		None
 18456 ;; Return value:  Size  Location     Type
 18457 ;;                  1    wreg      void 
 18458 ;; Registers used:
 18459 ;;		wreg, status,2, status,0, pclath, cstack
 18460 ;; Tracked objects:
 18461 ;;		On entry : 0/0
 18462 ;;		On exit  : 0/0
 18463 ;;		Unchanged: 0/0
 18464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18469 ;;Total ram usage:        0 bytes
 18470 ;; Hardware stack levels used:    1
 18471 ;; Hardware stack levels required when called:    2
 18472 ;; This function calls:
 18473 ;;		_INT_CallBack
 18474 ;; This function is called by:
 18475 ;;		_INTERRUPT_InterruptManager
 18476 ;; This function uses a non-reentrant model
 18477 ;;
 18478                           
 18479                           
 18480                           ;psect for function _INT_ISR
 18481  16E8                     _INT_ISR:
 18482  16E8                     i1l4894:	
 18483                           ;incstack = 0
 18484                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 18485                           
 18486                           
 18487                           ;ext_int.c: 34: (PIR0bits.INTF = 0);
 18488  16E8  002E               	movlb	14	; select bank14
 18489  16E9  100C               	bcf	12,0	;volatile
 18490  16EA                     i1l4896:
 18491                           
 18492                           ;ext_int.c: 37: INT_CallBack();
 18493  16EA  3197  2745  3196   	fcall	_INT_CallBack
 18494  16ED                     i1l861:
 18495  16ED  0008               	return
 18496  16EE                     __end_of_INT_ISR:
 18497                           
 18498                           	psect	text67
 18499  1745                     __ptext67:	
 18500 ;; *************** function _INT_CallBack *****************
 18501 ;; Defined at:
 18502 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 18503 ;; Parameters:    Size  Location     Type
 18504 ;;		None
 18505 ;; Auto vars:     Size  Location     Type
 18506 ;;		None
 18507 ;; Return value:  Size  Location     Type
 18508 ;;                  1    wreg      void 
 18509 ;; Registers used:
 18510 ;;		wreg, status,2, status,0, pclath, cstack
 18511 ;; Tracked objects:
 18512 ;;		On entry : 0/0
 18513 ;;		On exit  : 0/0
 18514 ;;		Unchanged: 0/0
 18515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18520 ;;Total ram usage:        0 bytes
 18521 ;; Hardware stack levels used:    1
 18522 ;; Hardware stack levels required when called:    1
 18523 ;; This function calls:
 18524 ;;		Absolute function
 18525 ;;		_INT_DefaultInterruptHandler
 18526 ;;		_S1_ISR
 18527 ;; This function is called by:
 18528 ;;		_INT_ISR
 18529 ;; This function uses a non-reentrant model
 18530 ;;
 18531                           
 18532                           
 18533                           ;psect for function _INT_CallBack
 18534  1745                     _INT_CallBack:
 18535  1745                     i1l4548:	
 18536                           ;incstack = 0
 18537                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 18538                           
 18539                           
 18540                           ;ext_int.c: 44: if(INT_InterruptHandler)
 18541  1745  0021               	movlb	1	; select bank1
 18542  1746  0831               	movf	_INT_InterruptHandler^(0+128),w
 18543  1747  0432               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 18544  1748  1903               	btfsc	3,2
 18545  1749  2F4B               	goto	u374_21
 18546  174A  2F4C               	goto	u374_20
 18547  174B                     u374_21:
 18548  174B  2F51               	goto	i1l865
 18549  174C                     u374_20:
 18550  174C                     i1l4550:
 18551                           
 18552                           ;ext_int.c: 45: {;ext_int.c: 46: INT_InterruptHandler();
 18553  174C  0832               	movf	(_INT_InterruptHandler+1)^(0+128),w
 18554  174D  008A               	movwf	10
 18555  174E  0831               	movf	_INT_InterruptHandler^(0+128),w
 18556  174F  000A               	callw
 18557  1750  3197               	pagesel	$
 18558  1751                     i1l865:
 18559  1751  0008               	return
 18560  1752                     __end_of_INT_CallBack:
 18561                           
 18562                           	psect	text68
 18563  16CD                     __ptext68:	
 18564 ;; *************** function _INT_DefaultInterruptHandler *****************
 18565 ;; Defined at:
 18566 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 18567 ;; Parameters:    Size  Location     Type
 18568 ;;		None
 18569 ;; Auto vars:     Size  Location     Type
 18570 ;;		None
 18571 ;; Return value:  Size  Location     Type
 18572 ;;                  1    wreg      void 
 18573 ;; Registers used:
 18574 ;;		None
 18575 ;; Tracked objects:
 18576 ;;		On entry : 0/0
 18577 ;;		On exit  : 0/0
 18578 ;;		Unchanged: 0/0
 18579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18584 ;;Total ram usage:        0 bytes
 18585 ;; Hardware stack levels used:    1
 18586 ;; This function calls:
 18587 ;;		Nothing
 18588 ;; This function is called by:
 18589 ;;		_EXT_INT_Initialize
 18590 ;;		_INT_CallBack
 18591 ;; This function uses a non-reentrant model
 18592 ;;
 18593                           
 18594                           
 18595                           ;psect for function _INT_DefaultInterruptHandler
 18596  16CD                     _INT_DefaultInterruptHandler:
 18597  16CD                     i1l871:	
 18598                           ;incstack = 0
 18599                           ; Regs used in _INT_DefaultInterruptHandler: []
 18600                           
 18601  16CD  0008               	return
 18602  16CE                     __end_of_INT_DefaultInterruptHandler:
 18603                           
 18604                           	psect	text69
 18605  0BAB                     __ptext69:	
 18606 ;; *************** function _S1_ISR *****************
 18607 ;; Defined at:
 18608 ;;		line 629 in file "main.c"
 18609 ;; Parameters:    Size  Location     Type
 18610 ;;		None
 18611 ;; Auto vars:     Size  Location     Type
 18612 ;;		None
 18613 ;; Return value:  Size  Location     Type
 18614 ;;                  1    wreg      void 
 18615 ;; Registers used:
 18616 ;;		wreg, status,2, status,0
 18617 ;; Tracked objects:
 18618 ;;		On entry : 0/0
 18619 ;;		On exit  : 0/0
 18620 ;;		Unchanged: 0/0
 18621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18626 ;;Total ram usage:        1 bytes
 18627 ;; Hardware stack levels used:    1
 18628 ;; This function calls:
 18629 ;;		Nothing
 18630 ;; This function is called by:
 18631 ;;		_main
 18632 ;;		_INT_CallBack
 18633 ;; This function uses a non-reentrant model
 18634 ;;
 18635                           
 18636                           
 18637                           ;psect for function _S1_ISR
 18638  0BAB                     _S1_ISR:
 18639  0BAB                     i1l4312:	
 18640                           ;incstack = 0
 18641                           ; Regs used in _S1_ISR: [wreg+status,2+status,0]
 18642                           
 18643                           
 18644                           ;main.c: 630: PIE0bits.INTE = 0;
 18645  0BAB  002E               	movlb	14	; select bank14
 18646  0BAC  1016               	bcf	22,0	;volatile
 18647  0BAD                     i1l4314:
 18648                           
 18649                           ;main.c: 631: _delay((unsigned long)((200)*(1000000/4000.0)));
 18650  0BAD  3041               	movlw	65
 18651  0BAE  00F0               	movwf	??_S1_ISR
 18652  0BAF  30EE               	movlw	238
 18653  0BB0                     u531_27:
 18654  0BB0  0B89               	decfsz	9,f
 18655  0BB1  2BB0               	goto	u531_27
 18656  0BB2  0BF0               	decfsz	??_S1_ISR,f
 18657  0BB3  2BB0               	goto	u531_27
 18658  0BB4  3200               	nop2
 18659  0BB5                     i1l4316:
 18660                           
 18661                           ;main.c: 633: if(mode == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger
      +                          )){
 18662  0BB5  0020               	movlb	0	; select bank0
 18663  0BB6  085A               	movf	_mode,w
 18664  0BB7  045B               	iorwf	_mode+1,w
 18665  0BB8  1D03               	btfss	3,2
 18666  0BB9  2BBB               	goto	u361_21
 18667  0BBA  2BBC               	goto	u361_20
 18668  0BBB                     u361_21:
 18669  0BBB  2BCF               	goto	i1l4326
 18670  0BBC                     u361_20:
 18671  0BBC                     i1l4318:
 18672  0BBC  0850               	movf	_clkAlarm+3,w
 18673  0BBD  1D03               	btfss	3,2
 18674  0BBE  2BC0               	goto	u362_21
 18675  0BBF  2BC1               	goto	u362_20
 18676  0BC0                     u362_21:
 18677  0BC0  2BCB               	goto	i1l4324
 18678  0BC1                     u362_20:
 18679  0BC1                     i1l4320:
 18680  0BC1  0855               	movf	_tempAlarm+1,w
 18681  0BC2  1D03               	btfss	3,2
 18682  0BC3  2BC5               	goto	u363_21
 18683  0BC4  2BC6               	goto	u363_20
 18684  0BC5                     u363_21:
 18685  0BC5  2BCB               	goto	i1l4324
 18686  0BC6                     u363_20:
 18687  0BC6                     i1l4322:
 18688  0BC6  0852               	movf	_lumAlarm+1,w
 18689  0BC7  1903               	btfsc	3,2
 18690  0BC8  2BCA               	goto	u364_21
 18691  0BC9  2BCB               	goto	u364_20
 18692  0BCA                     u364_21:
 18693  0BCA  2BCF               	goto	i1l4326
 18694  0BCB                     u364_20:
 18695  0BCB                     i1l4324:
 18696                           
 18697                           ;main.c: 634: clkAlarm.trigger = 0;
 18698  0BCB  01D0               	clrf	_clkAlarm+3
 18699                           
 18700                           ;main.c: 635: tempAlarm.trigger = 0;
 18701  0BCC  01D5               	clrf	_tempAlarm+1
 18702                           
 18703                           ;main.c: 636: lumAlarm.trigger = 0;
 18704  0BCD  01D2               	clrf	_lumAlarm+1
 18705                           
 18706                           ;main.c: 637: } else{
 18707  0BCE  2C03               	goto	i1l4338
 18708  0BCF                     i1l4326:
 18709                           
 18710                           ;main.c: 638: if(mode == 1){
 18711  0BCF  035A               	decf	_mode,w
 18712  0BD0  045B               	iorwf	_mode+1,w
 18713  0BD1  1D03               	btfss	3,2
 18714  0BD2  2BD4               	goto	u365_21
 18715  0BD3  2BD5               	goto	u365_20
 18716  0BD4                     u365_21:
 18717  0BD4  2BF8               	goto	i1l4334
 18718  0BD5                     u365_20:
 18719  0BD5                     i1l4328:
 18720                           
 18721                           ;main.c: 639: if(editingClockAlarm >= 1){
 18722  0BD5  085D               	movf	_editingClockAlarm+1,w
 18723  0BD6  3A80               	xorlw	128
 18724  0BD7  00F0               	movwf	??_S1_ISR
 18725  0BD8  3080               	movlw	128
 18726  0BD9  0270               	subwf	??_S1_ISR,w
 18727  0BDA  1D03               	skipz
 18728  0BDB  2BDE               	goto	u366_25
 18729  0BDC  3001               	movlw	1
 18730  0BDD  025C               	subwf	_editingClockAlarm,w
 18731  0BDE                     u366_25:
 18732  0BDE  1C03               	skipc
 18733  0BDF  2BE1               	goto	u366_21
 18734  0BE0  2BE2               	goto	u366_20
 18735  0BE1                     u366_21:
 18736  0BE1  2BE7               	goto	i1l1373
 18737  0BE2                     u366_20:
 18738  0BE2                     i1l4330:
 18739                           
 18740                           ;main.c: 640: editingClockAlarm++;
 18741  0BE2  3001               	movlw	1
 18742  0BE3  0020               	movlb	0	; select bank0
 18743  0BE4  07DC               	addwf	_editingClockAlarm,f
 18744  0BE5  3000               	movlw	0
 18745  0BE6  3DDD               	addwfc	_editingClockAlarm+1,f
 18746  0BE7                     i1l1373:
 18747                           
 18748                           ;main.c: 641: };main.c: 642: if(editingClockAlarm > 3){
 18749  0BE7  0020               	movlb	0	; select bank0
 18750  0BE8  085D               	movf	_editingClockAlarm+1,w
 18751  0BE9  3A80               	xorlw	128
 18752  0BEA  00F0               	movwf	??_S1_ISR
 18753  0BEB  3080               	movlw	128
 18754  0BEC  0270               	subwf	??_S1_ISR,w
 18755  0BED  1D03               	skipz
 18756  0BEE  2BF1               	goto	u367_25
 18757  0BEF  3004               	movlw	4
 18758  0BF0  025C               	subwf	_editingClockAlarm,w
 18759  0BF1                     u367_25:
 18760  0BF1  1C03               	skipc
 18761  0BF2  2BF4               	goto	u367_21
 18762  0BF3  2BF5               	goto	u367_20
 18763  0BF4                     u367_21:
 18764  0BF4  2BF8               	goto	i1l4334
 18765  0BF5                     u367_20:
 18766  0BF5                     i1l4332:
 18767                           
 18768                           ;main.c: 643: editingClockAlarm = 0;
 18769  0BF5  0020               	movlb	0	; select bank0
 18770  0BF6  01DC               	clrf	_editingClockAlarm
 18771  0BF7  01DD               	clrf	_editingClockAlarm+1
 18772  0BF8                     i1l4334:
 18773                           
 18774                           ;main.c: 644: };main.c: 645: };main.c: 646: if(editingClockAlarm == 0){
 18775  0BF8  0020               	movlb	0	; select bank0
 18776  0BF9  085C               	movf	_editingClockAlarm,w
 18777  0BFA  045D               	iorwf	_editingClockAlarm+1,w
 18778  0BFB  1D03               	btfss	3,2
 18779  0BFC  2BFE               	goto	u368_21
 18780  0BFD  2BFF               	goto	u368_20
 18781  0BFE                     u368_21:
 18782  0BFE  2C03               	goto	i1l4338
 18783  0BFF                     u368_20:
 18784  0BFF                     i1l4336:
 18785                           
 18786                           ;main.c: 647: mode++;
 18787  0BFF  3001               	movlw	1
 18788  0C00  07DA               	addwf	_mode,f
 18789  0C01  3000               	movlw	0
 18790  0C02  3DDB               	addwfc	_mode+1,f
 18791  0C03                     i1l4338:
 18792                           
 18793                           ;main.c: 648: };main.c: 649: };main.c: 650: (PIR0bits.INTF = 0);
 18794  0C03  002E               	movlb	14	; select bank14
 18795  0C04  100C               	bcf	12,0	;volatile
 18796  0C05                     i1l4340:
 18797                           
 18798                           ;main.c: 651: PIE0bits.INTE = 1;
 18799  0C05  1416               	bsf	22,0	;volatile
 18800  0C06                     i1l1376:
 18801  0C06  0008               	return
 18802  0C07                     __end_of_S1_ISR:
 18803  007E                     btemp	set	126	;btemp
 18804  007E                     int$flags	set	126
 18805  007E                     wtemp0	set	126
 18806                           
 18807                           	psect	config
 18808                           
 18809                           ;Config register CONFIG1 @ 0x8007
 18810                           ;	External Oscillator mode selection bits
 18811                           ;	FEXTOSC = OFF, Oscillator not enabled
 18812                           ;	Power-up default value for COSC bits
 18813                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 18814                           ;	Clock Out Enable bit
 18815                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 18816                           ;	Clock Switch Enable bit
 18817                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18818                           ;	Fail-Safe Clock Monitor Enable bit
 18819                           ;	FCMEN = ON, FSCM timer enabled
 18820  8007                     	org	32775
 18821  8007  3FEC               	dw	16364
 18822                           
 18823                           ;Config register CONFIG2 @ 0x8008
 18824                           ;	Master Clear Enable bit
 18825                           ;	MCLRE = ON, MCLR pin is Master Clear function
 18826                           ;	Power-up Timer Enable bit
 18827                           ;	PWRTE = OFF, PWRT disabled
 18828                           ;	Low-Power BOR enable bit
 18829                           ;	LPBOREN = OFF, ULPBOR disabled
 18830                           ;	Brown-out reset enable bits
 18831                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 18832                           ;	Brown-out Reset Voltage Selection
 18833                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 18834                           ;	Zero-cross detect disable
 18835                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 18836                           ;	Peripheral Pin Select one-way control
 18837                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 18838                           ;	Stack Overflow/Underflow Reset Enable bit
 18839                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 18840                           ;	Background Debugger
 18841                           ;	DEBUG = OFF, Background Debugger disabled
 18842  8008                     	org	32776
 18843  8008  3FFF               	dw	16383
 18844                           
 18845                           ;Config register CONFIG3 @ 0x8009
 18846                           ;	WDT Period Select bits
 18847                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18848                           ;	WDT operating mode
 18849                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 18850                           ;	WDT Window Select bits
 18851                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18852                           ;	WDT input clock selector
 18853                           ;	WDTCCS = SC, Software Control
 18854  8009                     	org	32777
 18855  8009  3F9F               	dw	16287
 18856                           
 18857                           ;Config register CONFIG4 @ 0x800A
 18858                           ;	UserNVM self-write protection bits
 18859                           ;	WRT = OFF, Write protection off
 18860                           ;	Scanner Enable bit
 18861                           ;	SCANE = available, Scanner module is available for use
 18862                           ;	Low Voltage Programming Enable bit
 18863                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 18864  800A                     	org	32778
 18865  800A  3FFF               	dw	16383
 18866                           
 18867                           ;Config register CONFIG5 @ 0x800B
 18868                           ;	UserNVM Program memory code protection bit
 18869                           ;	CP = OFF, Program Memory code protection disabled
 18870                           ;	DataNVM code protection bit
 18871                           ;	CPD = OFF, Data EEPROM code protection disabled
 18872  800B                     	org	32779
 18873  800B  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    10
    Data        7
    BSS         37
    Persistent  46
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      80
    BANK1            80     17      40
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 3
		 -> menuLCD_ISR@diff(BANK0[3]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[4]), menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_ISR(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_ISR(), INT_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->i1_DATAEE_WriteByte
    _tsttc->i1_WriteI2C
    _menuLCD_ISR->_LCDstr
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_Clock_ISR
    _Clock_ISR->i1_DATAEE_WriteByte
    i1_DATAEE_WriteByte->___wmul
    _INT_CallBack->_S1_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7783
                                              9 BANK1      8     8      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                          _editClock
                            _editLum
                           _editTemp
                   _i2c1_driver_open
                       _toggleAlarms
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     696
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     270
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    4017
                                              0 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2    1184
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   10006
                            _INT_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0    2511
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       3     3      0    2271
                                             10 COMMON     3     3      0
           _ADCC_GetSingleConversion
                             ___wmul
                              _tsttc
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    6230
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         24    24      0    5990
                                             21 BANK0     24    24      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
               i1_PWM6_LoadDutyValue
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM6_LoadDutyValue                                 4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    3411
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                          8     1      7     595
                                              0 COMMON     8     1      7
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               6     4      2     755
                                              9 COMMON     5     3      2
                                              0 BANK0      1     1      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    1265
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0    1025
                                             10 COMMON     1     1      0
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) i1_DATAEE_WriteByte                                   4     1      3    1025
                                              6 COMMON     4     1      3
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
                             _S1_ISR *
 ---------------------------------------------------------------------------------
 (7) _S1_ISR                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _INT_SetInterruptHandler
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _editClock
   _editLum
   _editTemp
   _i2c1_driver_open
   _toggleAlarms

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _S1_ISR *
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
       i1_DATAEE_WriteByte
         ___wmul (ARG)
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       i1_PWM6_LoadDutyValue
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       ___wmul
       _tsttc
         _ReadI2C
         i1_WriteI2C
       i1_DATAEE_WriteByte
         ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     11      28       7       50.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      86      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      86      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Nov 09 20:36:15 2020

                                       _t 0057          __end_of_TMR5_SetInterruptHandler 1706  
                              i1_WriteI2C 0AB3                                        l30 0BAA  
                                      l33 0B72                                        l42 0B94  
                                      l35 0B77                                        l47 0BA8  
                     ___wmul@multiplicand 0072                         ??_TMR5_WriteTimer 0072  
             __size_of_PWM6_LoadDutyValue 0019                                       l124 0AB2  
                                     l243 1744                                       l182 172F  
                                     l176 0959                                       l179 1738  
                                     l429 16F9                                       l463 091B  
                                     l731 175E                                       l493 16FF  
                                     l717 1705                                       l734 086B  
                                     l575 0852                                       l399 08FC  
                                     l761 080D                                       l842 0972  
                                     l844 0976                                       l845 097D  
                                     l687 093A                                       l848 177B  
                                     l776 16DF                                       l874 176C  
                                     l779 07FE                                       l868 16F3  
                                     _PR2 028D                           _timer1ReloadVal 00BB  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 0800  
                                     wreg 0009                               ?_LCDsend2x4 00A2  
                         __end_of_LCDchar 1728                                      l1040 0B4A  
                                    l1041 0B4C                                      l1130 0D40  
                                    l1131 0D42                                      l1044 0B50  
                                    l1028 0B0F                                      l1029 0B11  
                                    l1161 0DF1                                      l1145 0D92  
                                    l1154 0DD2                                      l1322 0C58  
                                    l1315 0C07                                      l1164 07C6  
                                    l1157 0DE8                                      l1333 0C6A  
                                    l1158 0DEA                                      l1344 0A03  
                                    l1336 09D7                                      l1361 0996  
                                    l1195 16DC                                      l1355 09D6  
                                    l1347 09AA                           _timer3ReloadVal 006E  
                                    l1365 09A9                                      l4102 16F4  
                                    l1358 097E                                      l1391 0470  
                                    l4104 16FA                                      l4120 1700  
                                    l1395 0474                                      l4124 16EE  
                                    l5100 09E1                                      l1396 0477  
                                    l1397 047A                                      l5030 075A  
                                    l5102 09E4                                      l5110 09FA  
                                    l4080 0B5B                                      l4072 0B53  
                                    l5040 077A                                      l5032 075E  
                                    l4400 0AA3                                      l5120 09BD  
                                    l5112 0A02                                      l5104 09EA  
                                    l5200 02DA                                      l4082 0B65  
                                    l4074 0B56                                      l5050 079E  
                                    l5042 0782                                      l5034 0766  
                                    l4410 0AAF                                      l4402 0AA6  
                                    l5122 09C3                                      l5114 09AF  
                                    l5106 09F0                                      l5130 0983  
                                    l5210 02F8                                      l5202 02DC  
                                    l4084 0B70                                      l4092 0B7E  
                                    l5060 07BC                                      l5052 07A2  
                                    l5044 0786                                      l5036 076A  
                                    l5028 0751                                      l4420 1737  
                                    l4404 0AA8                                      l4412 1728  
                                    l4500 08F1                                      l5124 09C4  
                                    l5116 09B4                                      l5108 09F1  
                                    l5132 0989                                      l5220 031F  
                                    l5212 02FC                                      l4094 0B89  
                                    l4086 0B7C                                      l5054 07AA  
                                    l5046 078E                                      l5038 0776  
                                    l5062 16DA                                      l4430 0850  
                                    l4414 1730                                      l4406 0AAB  
                                    l4422 1752                                      l4502 08F9  
                                    l5070 0C1D                                      l5118 09B7  
                                    l5126 09CD                                      l5134 0990  
                                    l5230 03DF                                      l5222 0324  
                                    l5214 0309                                      l4096 0B99  
                                    l4600 0DD9                                      l5056 07B0  
                                    l5048 0792                                      l4416 1733  
                                    l4408 0AAD                                      l4424 1759  
                                    l4440 0906                                      l4432 08FD  
                                    l5080 0C39                                      l5072 0C23  
                                    l5064 0C0C                                      l5128 09D5  
                                    l5136 099F                                      l5240 0420  
                                    l5232 03EC                                      l5224 03BC  
                                    l5216 0317                                      l5208 02E0  
                                    l4602 0DEE                                      l5058 07B6  
                                    l4426 083C                                      l4418 1734  
                                    l4370 0A7A                                      l4450 0800  
                                    l4442 090D                                      l4434 0900  
                                    l5090 0C51                                      l5082 0C3B  
                                    l5074 0C25                                      l5066 0C12  
                                    l5138 09A7                                      l5250 0455  
                                    l5242 042D                                      l5234 03F9  
                                    l5226 03C8                                      l5218 0319  
                                    l4428 084E                                      l4380 0A84  
                                    l4372 0A7C                                      l4460 080A  
                                    l4452 0803                                      l4444 090F  
                                    l4436 0902                                      l5084 0C42  
                                    l5076 0C2C                                      l5092 0C58  
                                    l5068 0C17                                      l5308 0483  
                                    l5260 045C                                      l5252 0456  
                                    l5244 043A                                      l5236 0406  
                                    l5228 03D3                                      l4390 0A99  
                                    l4382 0A87                                      l4374 0A7E  
                                    l4454 0804                                      l4446 0910  
                                    l4438 0904                                      l4470 0925  
                                    l4462 091C                                      l5086 0C49  
                                    l5078 0C33                                      l5094 0C61  
                                    l5270 0465                                      l5262 045E  
                                    l5254 0457                                      l5246 0447  
                                    l5238 0413                                      l5190 02A6  
                                    l4560 0B28                                      l4552 0B00  
                                    l4480 175F                                      l4392 0A9B  
                                    l4384 0A89                                      l4376 0A80  
                                    l4368 0A74                                      l4456 0807  
                                    l4448 0918                                      l4472 092C  
                                    l4464 091F                                      l5096 0C68  
                                    l5088 0C4F                                      l5280 0471  
                                    l5272 0466                                      l5264 045F  
                                    l5256 0458                                      l5248 0453  
                                    l5192 02C9                           __end_of_LCDinit 07C7  
                                    l4562 0B37                                      l4554 0B00  
                                    l4570 0D31                                      l4482 1762  
                                    l4394 0A9D                                      l4386 0A8B  
                                    l4378 0A82                                      l4490 08E3  
                                    l4458 0808                                      l4474 092E  
                                    l4466 0921                                      l4546 16DD  
                                    l5098 09DC                                      l5274 0469  
                                    l5282 047D                                      l5266 0461  
                                    l5258 0459                                      l5194 02CB  
                                    l5186 0299                                      l4564 0B3B  
                                    l4556 0B15                                      l4580 0D6E  
                                    l4572 0D46                                      l4484 176A  
                                    l4396 0A9F                                      l4388 0A8D  
                                    l4492 08E5                                      l4476 092F  
                                    l4468 0923                                      l5268 0462  
                                    l5196 02CD                                      l5188 02A3  
                                    l4558 0B24                                      l4590 0DA8  
                                    l4582 0D7D                                      l4574 0D55  
                                    l4566 0D20                                      l4398 0AA1  
                                    l4494 08E7                                      l4486 08DE  
                                    l4478 0937                                      l5198 02CE  
                                    l4592 0DAE                                      l4584 0D83  
                                    l4576 0D59                                      l4568 0D25  
                                    l4496 08EE                                      l4488 08E1  
                                    l4930 0966                                      l4594 0DBD  
                                    l4586 0D92                                      l4578 0D68  
                                    l4922 0853                                      l4498 08F0  
                                    l4940 096F                                      l4932 096A  
                                    l4596 0DC3                                      l4588 0D99  
                                    l4924 07FB                                      l4950 1775  
                                    l4942 0971                                      l4934 096B  
                                    l4926 095A                                      l4598 0DD2  
                                    l4870 0947                                      l4862 093B  
                                    l4952 1776                                      l4944 0977  
                                    l4936 096C                                      l4928 0962  
                                    l4880 0956                                      l4872 094A  
                                    l4864 093E                                      l4954 1777  
                                    l4946 176D                                      l4938 096D  
                                    l4874 094D                                      l4866 0941  
                                    l4882 1739                                      l4956 1778  
                                    l4948 1771                                      l4876 0950  
                                    l4868 0944                                      l4884 173E  
                                    l4958 1779                                      l4878 0953  
                                    l4886 173F                                      l4888 1741  
                                    _ALAF 0065                           __end_of_LCDsend 0B51  
                                    STR_1 1800                                      STR_2 1800  
                                    STR_3 1819                                      STR_4 1819  
                                    STR_5 1820                                      STR_6 1820  
                                    STR_7 1825                                      u3100 0B89  
                                    u3101 0B88                                      _LATA 0016  
                                    u3110 0B94                                      _LATB 0017  
                         __end_of_INT_ISR 16EE                                      u3111 0B93  
                                    _LATC 0018                                      u3120 0B99  
                                    _LATD 0019                                      u3121 0B98  
                                    _LATE 001A                                      u3130 0BA8  
                                    u3050 0B5A                                      u3131 0BA7  
                                    u3051 0B59                                      u3060 0B65  
                                    u3061 0B64                                      u3070 0B70  
                                    u3071 0B6F                                      u3080 0B77  
                                    u3081 0B76                                      u3090 0B7C  
                                    _T2PR 028D                                      u3091 0B7B  
                                    u5100 0309                                      u5101 0308  
                                    u5110 0317                                      u5111 0316  
                                    u5120 031F                                      u5121 031E  
                                    u5105 0305                                      u5130 0324  
                                    u5131 0323                                      u5140 046F  
                                    u5141 046E                                      u5207 0763  
                                    u3800 0B50                                      u4440 173E  
                                    u3801 0B4F                                      u5217 076B  
                                    u4441 173D                                      u5090 02DA  
                                    u5227 0777                                      u5091 02D9  
                                    u3900 0DD2                                      u3820 0D40  
                                    _PMD0 0796                                      u3901 0DD1  
                                    u3821 0D3F                                      u5237 077F  
                                    u5157 099A                                      _PMD1 0797  
                                    i1l30 0AFD                                      i1l22 087F  
                                    u3750 0B0F                                      u3910 0DE8  
                                    u3830 0D46                                      _PMD2 0798  
                                    i1l23 0880                                      u3751 0B0E  
                                    u3911 0DE7                                      u3831 0D45  
                                    u3815 0D28                                      u5247 078B  
                                    u5167 09F5                                      _PMD3 0799  
                                    u3760 0B15                                      u3920 0DEE  
                                    u3840 0D55                                      u4800 0C23  
                                    _PMD4 079A                                      i1l33 0ACF  
                                    u3761 0B14                                      u3921 0DED  
                                    u3841 0D54                                      u5257 0793  
                                    u4801 0C22                                      u5177 09C8  
                                    _PMD5 079B                                      i1l42 0AED  
                                    i1l26 0885                                      u4490 0976  
                                    u3770 0B24                                      u3850 0D68  
                                    u4810 0C33                                      i1l35 0AD4  
                                    u4491 0975                                      u3771 0B23  
                                    u3851 0D67                                      u5267 079F  
                                    u5187 0C5C                                      u4811 0C32  
                                    u3780 0B37                                      u3860 0D7D  
                                    u4820 0C39                                      u4900 09AF  
                                    u3781 0B36                                      u3861 0D7C  
                                    u5277 07A7                                      u5197 0755  
                                    u4485 0864                                      u4821 0C38  
                                    u4901 09AE                                      u3790 0B4A  
                                    u3870 0D92                                      u4830 0C49  
                                    u4910 09B4                                      i1l47 0AFC  
                                    u3791 0B49                                      u3871 0D91  
                                    u5287 07C3                                      u4831 0C48  
                                    u4911 09B3                                      u3880 0DA8  
                                    u4840 0C4F                                      u4920 09C3  
                                    u5297 0DEF                                      u3881 0DA7  
                                    u4841 0C4E                                      u4921 09C2  
                                    u3890 0DBD                                      u4850 0C68  
                                    u4770 0C0C                                      u4930 09D5  
                                    u3891 0DBC                                      u4851 0C67  
                                    u4771 0C0B                                      u4931 09D4  
                                    u4780 0C12                                      u4860 09DC  
                                    u4940 0983                                      u4781 0C11  
                                    u4861 09DB                                      u4941 0982  
                                    _TALA 0066                                      u4790 0C1D  
                                    u4870 09E1                                      u4950 0989  
                                    u4791 0C1C                                      u4871 09E0  
                                    u4951 0988                                      u4880 09F0  
                                    u4960 09A7                                      u4881 09EF  
                                    u4961 09A6                                      u4890 0A02  
                                    u4891 0A01                                      _NREG 00C7  
                                    _PMON 00C6                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                               main@notInit 00AD  
                            ?_menuLCD_ISR 0070                                      _main 0299  
                                    _mode 005A                                      _temp 0063  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E       __end_of_INT_DefaultInterruptHandler 16CE  
             _INT_DefaultInterruptHandler 16CD                                      start 004C  
                         _timer5ReloadVal 00B5                           _TMR3_Initialize 08FD  
         __end_of_INT_SetInterruptHandler 16F4                ??_TMR1_SetInterruptHandler 00A2  
                         __end_of_ReadI2C 0886                 __size_of_DATAEE_WriteByte 0024  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 1739  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 1745  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                                     _ADPRE 009C  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T3CLK 0217  
                                   _T2CON 028E                                     _T3CON 0214  
                                   _T5CLK 021D                                     _T2HLT 028F  
                                   _T5CON 021A                           __end_of___lwdiv 0A74  
                                   _T2TMR 028C                                     _T2RST 0291  
                                   i1l413 178C                                     i1l432 0002  
                         __end_of___lwmod 07FB                                     i1l361 003B  
                                   i1l426 17FF                                     i1l362 004A  
                                   i1l354 0013                                     i1l363 0044  
                                   i1l701 17AE                                     i1l357 0023  
                                   i1l359 002F                                     i1l720 07FF  
                                   i1l368 004A                                     i1l490 0824  
                                   i1l714 083B                                     i1l477 179D  
                                   i1l734 17E8                                     i1l590 17D2  
                                   i1l496 0003                                     i1l842 08B4  
                                   i1l770 16D3                                     i1l587 17C9  
                                   i1l844 08B8                                     i1l861 16ED  
                                   i1l845 08BE                                     i1l773 16E3  
                                   i1l871 16CD                                     i1l776 16D9  
                                   i1l952 0EFF                                     i1l865 1751  
                                   i1l953 0F00                                     i1l779 16E7  
                                   i1l964 0F2F                                     i1l965 0F30  
                                   i1l949 0EF3                                     i1l990 0F87  
                                   i1l982 0F72                                     i1l983 0F73  
                                   i1l976 0F61                                     i1l985 0F77  
                                   i1l977 0F63                                     i1l989 0F86  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TMR3H 0213  
                                   _TMR3L 0212                                     _TMR5H 0219  
                                   _TMR5L 0218                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
                         __end_of_editLum 09D7                           _PWM6_Initialize 1752  
       __size_of_TMR3_SetInterruptHandler 0006                 ?_TMR3_SetInterruptHandler 00A0  
                __end_ofi1_TMR2_StopTimer 16E8                          __end_of_TMR1_ISR 1800  
                        __end_of_TMR3_ISR 0825                          __end_of_TMR5_ISR 083C  
                         _DATAEE_ReadByte 176D            ??_TMR3_DefaultInterruptHandler 0070  
                         __end_of_dpowers 1819                        __size_of_TMR2_Stop 0003  
                             ?_TMR2_Start 0070                           __end_of_isdigit 17C1  
                                   main@i 00AF                                     _tsttc 0EF3  
                 __end_of_TMR1_Initialize 08FD                                     pclath 000A  
                          menuLCD_ISR@str 003B                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 0633  
                  ??_PWM_Output_D4_Enable 0070                           _TMR2_StartTimer 16E0  
                         _TMR1_WriteTimer 177C                           _TMR5_Initialize 091C  
                         __initialization 004E                              ?i1_TMR2_Stop 0070  
                            __end_of_main 0496                               ?i1_WriteI2C 0070  
                     __size_of_LCDsend2x4 00D4                   __end_of_TMR2_Initialize 080E  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00A9  
                _TMR5_SetInterruptHandler 1700                        __size_of_Clock_ISR 0101  
                   _TMR3_InterruptHandler 00B7          differenceBetweenTimePeriod@start 0070  
                               ??_LCDchar 0078                                 ??_LCDinit 00A8  
                               ??_LCDsend 00A2                                 ??_INT_ISR 0071  
              __end_ofi1_DATAEE_WriteByte 08BF                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                        __end_of_WriteI2C 0BAB                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _T3GATE 0216  
                                  _T3GCON 0215                                    _T5GATE 021C  
                                  _T5GCON 021B                                    _RA6PPS 0F16  
                                  i1l1001 0FB6                                    i1l1002 0FB7  
                                  _RC3PPS 0F23                                    i1l1020 0FFA  
                                  i1l1013 0FE8                                    i1l1014 0FEA  
                                  i1l1023 0FFF                                    i1l1130 0C89  
                 TMR1_WriteTimer@timerVal 0070                                    i1l1131 0C8A  
                                  i1l1019 0FF9                                    _RC4PPS 0F24  
                                  i1l1231 0EF2                                    i1l1312 0750  
                                  i1l1161 0D1D                                    i1l1145 0CCD  
                                  i1l1154 0D03                                    i1l1170 1727  
                                  i1l1251 0143                                    i1l1157 0D15  
                                  i1l1158 0D16                                    i1l1270 0260  
                                  i1l1262 01B9                                    i1l1254 0196  
                                  i1l1167 1718                                    i1l1176 08A0  
                                  i1l1192 16D0                                    i1l2056 17C0  
                                  i1l4000 17B7                                    i1l1248 01AA  
                                  _ODCONA 0F3A                                    i1l4010 08C1  
                                  i1l4002 17BD                                    _ODCONB 0F45  
                                  i1l1603 08C9                                    i1l1195 16D6  
                                  _ODCONC 0F50                                    i1l4012 08C5  
                                  i1l4004 17BF                                    _ODCOND 0F5B  
                                  i1l1373 0BE7                                    i1l1189 0A37  
                                  i1l1605 08DD                                    _ODCONE 0F66  
                                  i1l4030 0A48                                    i1l4022 0A38  
                                  i1l4014 08CE                                    i1l1286 0298  
                                  i1l4110 17C6                                    i1l1376 0C06  
                                  i1l4200 16CE                                    i1l4040 0A64  
                                  i1l4032 0A4C                                    i1l4024 0A3A  
                                  i1l4016 08D3                                    i1l4008 08BF  
                                  i1l4112 17C7                                    i1l4122 16E0  
                                  i1l4042 0A69                                    i1l4034 0A50  
                                  i1l4026 0A40                                    i1l4050 07CD  
                                  i1l4018 08D9                                    i1l4210 04AF  
                                  i1l4202 0498                                    i1l4114 17C8  
                                  i1l4106 17C2                                    i1l4130 0F0F  
                                  i1l4036 0A5F                                    i1l4028 0A43  
                                  i1l4044 0A6F                                    i1l4060 07E7  
                                  i1l4052 07D0                                    i1l4300 0606  
                                  i1l4220 04CD                                    i1l4212 04B4  
                                  i1l1564 04B3                                    i1l4204 049D  
                                  i1l4116 17CE                                    i1l4108 17C5  
                                  i1l4140 0F3F                                    i1l4132 0F13  
                                  i1l4038 0A63                                    i1l4062 07EB  
                                  i1l4054 07D5                                    i1l4302 060D  
                                  i1l1582 0566                                    i1l4222 04D0  
                                  i1l4206 04A3                                    i1l4070 16D7  
                                  i1l4150 0F7B                                    i1l4142 0F43  
                                  i1l4134 0F1F                                    i1l4126 0EF3  
                                  i1l4320 0BC1                                    i1l4312 0BAB  
                                  i1l4064 07F0                                    i1l4056 07D9  
                                  i1l4048 07C7                                    i1l4304 0611  
                                  i1l4240 0527                                    i1l4224 04E1  
                                  i1l4232 0500                                    i1l4216 04B8  
                                  i1l4208 04AA                                    i1l4160 0FAA  
                                  i1l4152 0F8B                                    i1l4144 0F4F  
                                  i1l4136 0F23                                    i1l4128 0F04  
                                  i1l4330 0BE2                                    i1l4322 0BC6  
                                  i1l4314 0BAD                                    i1l4058 07DD  
                                  i1l4066 07F6                                    i1l4250 0532  
                                  i1l4242 052B                                    i1l4234 0518  
                                  i1l4226 04F0                                    i1l4218 04C1  
                                  i1l4306 061A                                    i1l4170 0FDC  
                                  i1l4162 0FBB                                    i1l4154 0F96  
                                  i1l4146 0F55                                    i1l4138 0F34  
                                  i1l4340 0C05                                    i1l4332 0BF5  
                                  i1l4324 0BCB                                    i1l4316 0BB5  
                                  i1l4180 0886                                    i1l4260 0562  
                                  i1l4244 0530                                    i1l4236 051F  
                                  i1l4308 062E                                    i1l4228 04F4  
                                  i1l4172 0FEE                                    i1l4164 0FC6  
                                  i1l4156 0F9A                                    i1l4148 0F67  
                 __end_of_TMR3_Initialize 091C                                    i1l4334 0BF8  
                                  i1l4318 0BBC                                    i1l4326 0BCF  
                                  i1l4350 08AA                                    i1l4510 1784  
                                  i1l4182 0887                                    i1l4190 0A0B  
                                  i1l4270 0587                                    i1l4262 0571  
                                  i1l4254 054C                                    i1l4238 0523  
                                  i1l4342 17D3                                    i1l4174 0FFE  
                                  i1l4166 0FCA                                    i1l4158 0FA6  
                                  i1l5150 0017                                    i1l1599 0632  
                                  i1l4336 0BFF                                    i1l4328 0BD5  
                                  i1l4360 08B1                                    i1l4352 08AC  
                                  i1l4512 1786                                    i1l4504 177C  
                                  i1l4520 1792                                    i1l4184 088B  
                                  i1l4192 0A11                                    i1l4280 05A3  
                                  i1l4272 058E                                    i1l4264 057A  
                                  i1l4256 0556                                    i1l4344 16E4  
                                  i1l4168 0FD6                                    i1l5160 0033  
                                  i1l5152 001B                                    i1l5144 0006  
                                  i1l4338 0C03                                    i1l4362 08B3  
                                  i1l4354 08AD                                    i1l4346 08A1  
                                  i1l4610 0E02                                    i1l4506 1781  
                                  i1l4514 1788                                    i1l4530 179B  
                                  i1l4522 1793                                    i1l4178 1713  
                                  i1l4194 0A1B                                    i1l4186 0A04  
                                  i1l4290 05C9                                    i1l4274 0592  
                                  i1l4282 05AE                                    i1l4266 057D  
                                  i1l4258 055C                                    i1l5162 0037  
                                  i1l5154 001F                                    i1l5146 000B  
                                  i1l1875 0A73                                    i1l4364 08B9  
                                  i1l4356 08AE                                    i1l4348 08A8  
                                  i1l4620 0E3E                                    i1l4612 0E0E  
                                  i1l4604 0DF2                                    i1l4516 178A  
                                  i1l4508 1782                                    i1l4524 1795  
                                  i1l4196 0A21                                    i1l4188 0A05  
                                  i1l4292 05CF                                    i1l4284 05B4  
                                  i1l4276 0598                                    i1l4268 0581  
                                  i1l4700 0122                                    i1l4540 17A8  
                                  i1l4532 179E                                    i1l5164 003F  
                                  i1l5156 0027                                    i1l5148 000F  
                                  i1l1885 07FA                                    i1l4550 174C  
                                  i1l4358 08AF                                    i1l4630 0E7A  
                                  i1l4622 0E4A                                    i1l4614 0E1A  
                                  i1l4606 0DFD                                    i1l4526 1797  
                                  i1l4518 178D                                    i1l4198 0A27  
                                  i1l4294 05D6                                    i1l4286 05BB  
                                  i1l4278 059F                                    i1l4366 16D4  
                                  i1l4710 014F                                    i1l4702 0128  
                                  i1l4534 17A3                                    i1l4542 17AA  
                                  i1l5158 002B                                    i1l4640 0EB7  
                                  i1l4632 0E86                                    i1l4624 0E56  
                                  i1l4616 0E26                                    i1l4608 0E01  
                                  i1l4528 1799                                    i1l4288 05BF  
                                  i1l4296 05DA                                    i1l4800 0288  
                                  i1l4720 0185                                    i1l4712 0162  
                                  i1l4704 012D                                    i1l4544 17AC  
                                  i1l4536 17A4                                    i1l5168 0048  
                                  i1l4650 0ECB                                    i1l4642 0EB8  
                                  i1l4634 0E92                                    i1l4626 0E62  
                                  i1l4618 0E32                                    i1l3930 0AD9  
                                  i1l4298 05DF                                    i1l4802 028D  
                                  i1l4730 01A3                                    i1l4722 018B  
                                  i1l4714 0169                                    i1l4706 0132  
                                  i1l4538 17A6                                    i1l4810 0659  
                                  i1l4548 1745                                    i1l4652 0ED1  
                                  i1l4660 0EE7                                    i1l4644 0EBE  
                                  i1l4628 0E6E                                    i1l4636 0EAC  
                                  i1l3940 0AF1                                    i1l3924 0ABC  
                                  i1l3916 0AB4                                    i1l4804 0294  
                                  i1l4732 01A6                                    i1l4724 018E  
                                  i1l4716 0171                                    i1l4708 0137  
                                  i1l4820 0703                                    i1l4812 0666  
                                  i1l4900 0827                                    u300_25 07D1  
                                  i1l4654 0ED7                                    i1l4646 0EBF  
                                  i1l4638 0EB3                                    i1l3926 0AC5  
                                  i1l3918 0AB7                                    i1l3950 0C7D  
                                  i1l4750 01E2                                    i1l4726 019B  
                                  i1l4718 0177                                    i1l4742 01B0  
                                  i1l4670 00B4                                    i1l4662 006E  
                                  i1l4910 0818                                    i1l4830 0723  
                                  i1l4822 070B                                    i1l4814 06F7  
                                  i1l4806 0633                                    i1l4902 082F  
                                  i1l4656 0EDD                                    i1l4648 0EC5  
                                  i1l4920 17FA                                    i1l3928 0ACE  
                                  i1l3936 0ADB                                    i1l3960 0CAF  
                                  i1l3952 0C8E                                    u301_20 07DD  
                                  i1l4760 0212                                    i1l4752 01E9  
                                  i1l4744 01BD                                    i1l4728 019D  
                                  i1l4680 00DA                                    i1l4672 00BB  
                                  i1l4664 0075                                    i1l4912 081F  
                                  i1l4832 0728                                    i1l4840 0732  
                                  i1l4816 06FC                                    i1l4824 0712  
                                  i1l4808 064C                                    i1l4904 0836  
                                  u301_21 07DC                                    i1l4658 0EE1  
                                  i1l4914 17E9                                    i1l3938 0AE4  
                                  i1l3970 0CDF                                    i1l3962 0CBB  
                                  i1l3954 0C99                                    i1l3946 0C6C  
                                  i1l4770 0232                                    i1l4762 0219  
                                  i1l4754 01ED                                    i1l4746 01C3  
                                  i1l4690 00FD                                    i1l4682 00E0  
                                  i1l4674 00C2                                    i1l4666 0093  
                                  i1l4906 080E                                    i1l4850 0744  
                                  i1l4842 0733                                    i1l4834 072C  
                                  i1l4826 0718                                    i1l4818 0702  
                                  i1l4916 17EB                                    i1l3980 0D09  
                                  i1l3972 0CE5                                    i1l3964 0CC1  
                                  i1l3956 0C9D                                    i1l3948 0C71  
                                  i1l4780 024F                                    i1l4772 0238  
                                  i1l4764 0220                                    i1l4756 01F3  
                                  i1l4748 01D3                                    i1l4692 0105  
                                  i1l4684 00E8                                    i1l4676 00CB  
                                  i1l4668 00B0                                    i1l4908 0810  
                                  i1l4860 074F                                    i1l4852 0748  
                                  i1l4844 0734                                    i1l4836 072E  
                                  i1l4828 071E                                    i1l4918 17F3  
                                  i1l3982 0D1A                                    i1l3974 0CF1  
                                  i1l3966 0CCD                                    i1l3958 0CA9  
                                  i1l4790 026D                                    i1l4782 0254  
                                  i1l4774 023D                                    i1l4766 0224  
                                  i1l4758 0203                                    i1l4694 010B  
                                  i1l4686 00EE                                    i1l4678 00D1  
                                  i1l4854 074A                                    i1l4846 073A  
                                  i1l4838 0730                                    i1l3976 0CF7  
                                  i1l3968 0CD3                                    i1l3992 16D1  
                                  u302_20 07E7                                    i1l4792 0272  
                                  i1l4784 025B                                    i1l4776 0243  
                                  i1l4768 022B                                    i1l4696 0114  
                                  i1l4688 00F7                                    i1l3984 086C  
                                  i1l4856 074C                                    i1l4848 073F  
                                  u302_21 07E6                                    i1l3978 0D03  
                                  i1l3994 1721                                    i1l4794 0277  
                                  i1l4778 0248                                    i1l4786 0261  
                                  i1l4698 011A                                    i1l3986 0876  
                                  i1l4858 074E                                    i1l3996 17B0  
                                  i1l4796 027E                                    i1l4788 0268  
                                  i1l3988 0884                                    _S1_ISR 0BAB  
                                  u302_25 07E3                                    i1l4894 16E8  
                                  i1l3998 17B1                                    i1l4798 0283  
                                  i1l4896 16EA                                    i1l4898 0825  
                                  u303_25 07EC                                    u400_20 0EDD  
                                  u304_20 07F6                                    u320_20 0F34  
                                  u400_21 0EDC                                    u304_21 07F5  
                                  u320_21 0F33                                    u401_20 0EF0  
                                  u321_20 0F3F                                    u401_21 0EED  
                                  u321_21 0F3E                                    _LCDcmd 1712  
                                  u410_20 011A                                    u314_20 17CE  
                                  u330_20 0F96                                    u322_20 0F4F  
                                  u410_21 0119                                    u314_21 17CD  
                                  u330_21 0F95                                    u322_21 0F4E  
                                  u402_24 0EF2                                    u411_20 0128  
                                  u403_20 0075                                    u331_20 0FA6  
                                  u323_20 0F61                                    u315_20 0EFF  
                                  u411_21 0127                                    u403_21 0074  
                                  u331_21 0FA5                                    u323_21 0F60  
                                  u315_21 0EFE                                    u340_20 08A0  
                                  u420_20 01C3                                    u412_20 012D  
                                  u404_20 00C2                                    u332_20 0FB6  
                                  u324_20 0F67                                    u316_20 0F04  
                                  u500_20 001B                                    u340_21 089F  
                                  u420_21 01C2                                    u412_21 012C  
                                  u404_21 00C1                                    u332_21 0FB5  
                                  u324_21 0F66                                    u316_21 0F03  
                                  u500_21 001A                                    u341_20 0A11  
                                  u421_20 01F3                                    u413_20 0132  
                                  u405_20 00D1                                    u333_20 0FBB  
                                  u325_20 0F72                                    u317_20 0F0F  
                                  u501_20 001F                                    u341_21 0A10  
                                  u421_21 01F2                                    u413_21 0131  
                                  u405_21 00D0                                    u333_21 0FBA  
                                  u325_21 0F71                                    u317_21 0F0E  
                                  u501_21 001E                                    u270_20 0AFC  
                                  u262_20 0ABB                                    u342_20 0A27  
                                  u350_20 0562                                    u430_20 027E  
                                  u422_20 0220                                    u414_20 0137  
                                  u406_20 00E0                                    u334_20 0FC6  
                                  u326_20 0F77                                    u318_20 0F1F  
                                  u502_20 0027                                    u270_21 0AFB  
                                  u262_21 0ABA                                    u342_21 0A26  
                                  u350_21 0561                                    u430_21 027D  
                                  u422_21 021F                                    u414_21 0136  
                                  u406_21 00DF                                    u334_21 0FC5  
                                  u326_21 0F76                                    u318_21 0F1E  
                                  u502_21 0026                                    u263_20 0AC5  
                                  u351_20 0571                                    u343_20 04A3  
                                  u431_20 0283                                    u423_20 0232  
                                  u415_20 0169                                    u407_20 00EE  
                                  u335_20 0FD6                                    u327_20 0F7B  
                                  u319_20 0F2F                                    u503_20 002B  
                                  u263_21 0AC4                                    u351_21 0570  
                                  u343_21 04A2                                    u431_21 0282  
                                  u423_21 0231                                    u415_21 0168  
                                  u407_21 00ED                                    u335_21 0FD5  
                                  u327_21 0F7A                                    u319_21 0F2E  
                                  u503_21 002A                                    u271_25 0C74  
                                  u351_25 056D                                    u264_20 0ACE  
                                  u280_20 0D03                                    u272_20 0C89  
                                  u360_20 062E                                    u352_20 0581  
                                  u344_20 04CD                                    u432_20 0294  
                                  u424_20 0238                                    u416_20 0171  
                                  u408_20 00FD                                    u336_20 0FE8  
                                  u328_20 0F86                                    u440_20 0728  
                                  u504_20 0033                                    u264_21 0ACD  
                                  u280_21 0D02                                    u272_21 0C88  
                                  u360_21 062D                                    u352_21 0580  
                                  u344_21 04CC                                    u432_21 0293  
                                  u424_21 0237                                    u416_21 0170  
                                  u408_21 00FC                                    u336_21 0FE7  
                                  u328_21 0F85                                    u440_21 0727  
                                  u504_21 0032                                    _INTPPS 0E90  
                                  u361_20 0BBC                                    u265_20 0AD4  
                                  u281_20 0D15                                    u273_20 0C8E  
                                  u353_20 0587                                    u345_20 0500  
                                  u425_20 0243                                    u417_20 0185  
                                  u409_20 010B                                    u337_20 0FEE  
                                  u329_20 0F8B                                    u441_20 073A  
                                  u505_20 0037                                    u361_21 0BBB  
                                  u265_21 0AD3                                    u281_21 0D14  
                                  u273_21 0C8D                                    u353_21 0586  
                                  u345_21 04FF                                    u425_21 0242  
                                  u417_21 0184                                    u409_21 010A  
                                  u337_21 0FED                                    u329_21 0F8A  
                                  u441_21 0739                                    u505_21 0036  
                                  u417_25 0181                                    u433_25 0643  
                                  u362_20 0BC1                                    u370_20 08B8  
                                  u266_20 0AD9                                    u282_20 0D1A  
                                  u274_20 0C99                                    u354_20 0598  
                                  u346_20 0527                                    u426_20 024F  
                                  u418_20 019B                                    u338_20 0FF9  
                                  u442_20 073F                                    u434_20 0659  
                                  u506_20 003F                                    u362_21 0BC0  
                                  u370_21 08B7                                    u266_21 0AD8  
                                  u282_21 0D19                                    u274_21 0C98  
                                  u354_21 0597                                    u346_21 0526  
                                  u426_21 024E                                    u418_21 019A  
                                  u338_21 0FF8                                    u442_21 073E  
                                  u434_21 0658                                    u506_21 003E  
                           main@corrupted 00AE                                    u290_25 08CF  
                                  u434_25 0655                                    u530_27 0D1B  
                                  u363_20 0BC6                                    u371_20 1781  
                                  u267_20 0AE4                                    u275_20 0CA9  
                                  u291_20 08D9                                    u355_20 05AD  
                                  u347_20 054B                                    u427_20 025B  
                                  u419_20 01AF                                    u283_20 0876  
                                  u339_20 0FFE                                    u443_20 0744  
                                  u435_20 0666                                    u507_20 0043  
                                  u363_21 0BC5                                    u371_21 1780  
                                  u267_21 0AE3                                    u275_21 0CA8  
                                  u291_21 08D8                                    u355_21 05AC  
                                  u347_21 054A                                    u427_21 025A  
                                  u419_21 01AE                                    u283_21 0875  
                                  u339_21 0FFD                                    u443_21 0743  
                                  u435_21 0665                                    u507_21 0042  
                                  u347_25 0547                                    u435_25 0662  
                                  u531_27 0BB0                                    u364_20 0BCB  
                                  u372_20 1792                                    u268_20 0AED  
                                  u276_20 0CBB                                    u292_20 0A40  
                                  u356_20 05B4                                    u348_20 0556  
                                  u428_20 0268                                    u284_20 087F  
                                  u436_20 0702                                    u508_20 0048  
                                  u364_21 0BCA                                    u372_21 1791  
                                  u268_21 0AEC                                    u276_21 0CBA  
                                  u292_21 0A3F                                    u356_21 05B3  
                                  u348_21 0555                                    u428_21 0267  
                                  u284_21 087E                                    u436_21 0701  
                                  u508_21 0047                                    _LCDstr 0886  
                                  u365_20 0BD5                                    u269_20 0AF1  
                                  u277_20 0CCD                                    u357_20 05C9  
                                  u349_20 055C                                    u429_20 026D  
                                  u373_20 17A3                                    u285_20 0884  
                                  u437_20 0718                                    u445_20 0836  
                                  u365_21 0BD4                                    u269_21 0AF0  
                                  u277_21 0CCC                                    u357_21 05C8  
                                  u349_21 055B                                    u429_21 026C  
                                  u373_21 17A2                                    u285_21 0883  
                                  u437_21 0717                                    u445_21 0835  
                                  u293_25 0A44                                    u366_20 0BE2  
                                  u374_20 174C                                    u278_20 0CDF  
                                  u294_20 0A50                                    u286_20 17B7  
                                  u358_20 05CF                                    u446_20 081F  
                                  u438_20 071E                                    u366_21 0BE1  
                                  u374_21 174B                                    u278_21 0CDE  
                                  u294_21 0A4F                                    u286_21 17B6  
                                  u358_21 05CE                                    u446_21 081E  
                                  u438_21 071D                                    u366_25 0BDE  
                                  u367_20 0BF5                                    u447_20 17FA  
                                  u279_20 0CF1                                    u287_20 17BD  
                                  u359_20 061A                                    u439_20 0723  
                                  u367_21 0BF4                                    u447_21 17F9  
                                  u279_21 0CF0                                    u287_21 17BC  
                                  u359_21 0619                                    u439_21 0722  
                                  u367_25 0BF1                                    u295_25 0A51  
                                  u368_20 0BFF                                    u296_20 0A5F  
                                  u288_20 08C5                                    u368_21 0BFE  
                                  u296_21 0A5E                                    u288_21 08C4  
                                  u296_25 0A5B                                    u393_20 0DFD  
                                  u393_21 0DFC                                    u297_25 0A65  
                                  u289_25 08CA                                    u369_25 17E2  
                                  u394_20 0EB3                                    u298_20 0A6F  
                                  u394_21 0EB2                                    u298_21 0A6E  
                                  u395_20 0EBE                                    u299_20 07CD  
                                  u395_21 0EBD                                    u299_21 07CC  
                                  u396_20 0EC5                                    u396_21 0EC4  
                                  _OSCFRQ 0893                                    u397_20 0ECB  
                                  u397_21 0ECA                                    u398_20 0ED1  
                                  u398_21 0ED0                                    u399_20 0ED7  
                                  u399_21 0ED6                                    u497_20 000B  
                                  u497_21 000A                                    u498_20 000F  
                                  u498_21 000E                                    u499_20 0017  
                                  u499_21 0016                                    _PWM6EN 1C77  
                               ??_ReadI2C 0070                                    _PWM_on 00C4  
                             LCDsend2x4@c 00A5                           _TMR3_WriteTimer 178D  
                        __end_of_editTemp 0A04              __end_ofi1_PWM6_LoadDutyValue 17E9  
    __end_of_TMR1_DefaultInterruptHandler 0003     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0002                              _CCPTMRS1bits 021F  
                           ?i1_LCDsend2x4 0072                                    ___wmul 08BF  
                       __end_of_TMR2_Stop 16E0                                 ??___lwdiv 0074  
                               ??___lwmod 007C                       __size_of_TMR2_Start 0003  
                 __end_of_PWM6_Initialize 175F                                 ??_editLum 00A0  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 177C  
                 __size_of_monitoring_ISR 011E                           _ADCC_Initialize 083C  
                          _PMD_Initialize 1728                                 ??_isdigit 0070  
                ?i1_PWM_Output_D4_Disable 0070                           menuLCD_ISR@diff 004A  
           i1DATAEE_WriteByte@GIEBitValue 0079         __size_of_ADCC_GetSingleConversion 0012  
        __size_of_INT_SetInterruptHandler 0006                 ?_ADCC_GetSingleConversion 0070  
                 __end_of_TMR2_StartTimer 16E4   INT_SetInterruptHandler@InterruptHandler 00A0  
TMR5_SetInterruptHandler@InterruptHandler 00A0  TMR3_SetInterruptHandler@InterruptHandler 00A0  
TMR1_SetInterruptHandler@InterruptHandler 00A0                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 178D                   ??_PWM_Output_D4_Disable 00A0  
                     __size_ofi1_WriteI2C 004B                          ?_TMR1_Initialize 0070  
                 __end_of_TMR5_Initialize 093B                         _SYSTEM_Initialize 093B  
                 __end_of__initialization 006A                        ?_SYSTEM_Initialize 0070  
                       __end_of_Clock_ISR 0EF3                           _TMR5_WriteTimer 179E  
                    __size_of_menuLCD_ISR 022B                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                              __pidataBANK0 1719  
                     ??_SYSTEM_Initialize 00A2                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                                 ?_TMR3_ISR 0070  
                               ?_TMR5_ISR 0070                          _DATAEE_WriteByte 095A  
                            menuLCD_ISR@l 0047                        __size_of_editClock 0064  
         differenceBetweenTimePeriod@diff 0076                             __end_of_tsttc 1000  
                        ?_TMR2_Initialize 0070                            ??_INT_CallBack 0071  
         differenceBetweenTimePeriod@stop 0073                    __end_of_PMD_Initialize 1730  
             __size_of_EXT_INT_Initialize 000E                              ??_LCDsend2x4 00A3  
               __end_of_SYSTEM_Initialize 095A                              sprintf@width 0031  
                 __end_of_TMR3_WriteTimer 179E                                   ??_tsttc 0072  
                              __pbssBANK0 004D                                __pbssBANK1 00BD  
                  i1DATAEE_WriteByte@bAdd 0076                                   ?_S1_ISR 0070  
                                 ?_LCDcmd 0070                          ?_TMR3_Initialize 0070  
                                 ?_LCDstr 0079                                   LCDcmd@c 0078  
                                 LCDstr@c 0020                                   LCDstr@p 0079  
                              __pmaintext 0299          __end_of_TMR3_SetInterruptHandler 1700  
                                 ?___wmul 0070                                ??_TMR1_ISR 007B  
                              ??_TMR3_ISR 007E                   __end_of_ADCC_Initialize 0853  
              __end_of_PWM6_LoadDutyValue 086C                                ??_TMR5_ISR 007D  
                              __pintentry 0004                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                      __size_ofi1_TMR2_Stop 0003  
                      __end_of_LCDsend2x4 0DF2                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                        ?_PWM6_Initialize 0070                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112           __end_ofi1_PWM_Output_D4_Disable 16D7  
                         ?_PMD_Initialize 0070                          ?_DATAEE_ReadByte 00A0  
                       ?_i2c1_driver_open 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                                 _LCDchar 1720                                   _LCDinit 0751  
                                 _LCDsend 0AFE                        ??_i2c1_driver_open 00A0  
                                 _INT_ISR 16E8                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                 ?_editTemp 0070  
                    i1_PWM6_LoadDutyValue 17D3                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                         ?i1_TMR2_StopTimer 0070  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                                 _SSP1MSK 018E                              ??_TMR2_Start 0070  
                 __size_of_TMR2_StopTimer 0004                          ?_TMR2_StartTimer 0070  
                        ?_TMR1_WriteTimer 0070                        ??i1_TMR2_StopTimer 0070  
                 __end_of_TMR5_WriteTimer 17AF                              LCDsend2x4@hc 00A6  
                            LCDsend2x4@lc 00A7                         __end_of_editClock 0C6B  
                        ?_TMR5_Initialize 0070                           __size_of_S1_ISR 005C  
                         __size_of_LCDcmd 0007                      DATAEE_WriteByte@bAdd 00A0  
                      _i2c1_driver_i2cISR 00C0                           __size_of_LCDstr 001B  
                                 _ReadI2C 086C                ??_TMR5_SetInterruptHandler 00A2  
                            ??i1_WriteI2C 0070                           __size_of___wmul 001F  
                                 ___lwdiv 0A38                                   ___lwmod 07C7  
                      __end_of_TMR2_Start 16D4                                ??_WriteI2C 00A0  
                                 _editLum 09AA                                   __ptext1 097E  
                                 __ptext2 1739                                   __ptext3 09D7  
                                 __ptext4 09AA                                   __ptext5 0C07  
                                 __ptext6 07FB                                   __ptext7 16DD  
                                 __ptext8 093B                                   __ptext9 091C  
                          _monitoring_ISR 0633            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                                   _dpowers 180F  
                   _OSCILLATOR_Initialize 1730                                 _T2CONbits 028E  
                                 _isdigit 17AF                                 _T3CONbits 0214  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                ??_PIN_MANAGER_Initialize 00A0                 ?_TMR1_SetInterruptHandler 00A0  
                               _T2HLTbits 028F                   _INT_SetInterruptHandler 16EE  
                               _T5CONbits 021A                                ??_editTemp 00A0  
                    __end_ofi1_LCDsend2x4 0D1E                __size_of_SYSTEM_Initialize 001F  
                                 _sprintf 0496                                   clrloop0 1707  
                    end_of_initialization 006A                          ?_TMR3_WriteTimer 0070  
                               _T2RSTbits 0291                        __end_ofi1_WriteI2C 0AFE  
                                 init_ram 170C                                   initloop 170D  
                    __end_of_INT_CallBack 1752                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077                        i1_DATAEE_WriteByte 08A1  
           __size_of_PWM_Output_D4_Enable 0003              ?_differenceBetweenTimePeriod 0070  
                     ?i1_DATAEE_WriteByte 0076                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 17D3                    __end_of_monitoring_ISR 0751  
                               _PORTCbits 000E                                 _TMR2_Stop 16DD  
                _TMR3_SetInterruptHandler 16FA                     _TMR5_InterruptHandler 00B3  
                               _TRISCbits 0013                             ?_toggleAlarms 0070  
                    ??i1_DATAEE_WriteByte 0079                  __end_of_DATAEE_WriteByte 097E  
                           _alarmPWMStart 0067                          ?_TMR5_WriteTimer 0070  
                 TMR5_WriteTimer@timerVal 0070            __size_of_PWM_Output_D4_Disable 0003  
           __end_of_PWM_Output_D4_Disable 16DD                            __end_of_S1_ISR 0C07  
                          __end_of_LCDcmd 1719                            __end_of_LCDstr 08A1  
        __size_ofi1_PWM_Output_D4_Disable 0003                            LCDsend2x4@mode 00A2  
                               _Clock_ISR 0DF2                            __end_of___wmul 08DE  
                         ?_monitoring_ISR 0070                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR3_ISR 0017                         __size_of_TMR5_ISR 0017  
                              ?_TMR2_Stop 0070                    ?_OSCILLATOR_Initialize 0070  
               ??_INT_SetInterruptHandler 00A2                           main@checkSumAux 00AC  
                  ??i1_PWM6_LoadDutyValue 0072                             menuLCD_ISR@tt 0043  
                     start_initialization 004E      __end_of_TMR5_DefaultInterruptHandler 0800  
   __size_of_TMR5_DefaultInterruptHandler 0001              _TMR5_DefaultInterruptHandler 07FF  
                          ??_toggleAlarms 00A0           __size_of_PIN_MANAGER_Initialize 003F  
                          _TMR2_StopTimer 07FB                          WriteI2C@data_out 00A1  
                                ??_S1_ISR 0070                                  ??_LCDcmd 0078  
                                ??_LCDstr 007B                             ??_menuLCD_ISR 0035  
                     DATAEE_ReadByte@bAdd 00A0              ?_INT_DefaultInterruptHandler 0070  
                __size_of_TMR1_Initialize 001F                          ??_PMD_Initialize 00A0  
                              ?_Clock_ISR 0070                                  ??___wmul 0074  
                             __pdataBANK0 0067                __end_of_EXT_INT_Initialize 176D  
                       _editingClockAlarm 005C                         __size_of_WriteI2C 005A  
                   __size_ofi1_LCDsend2x4 00B3                  _ADCC_GetSingleConversion 17C1  
                 i1DATAEE_WriteByte@bData 0078                    __end_of_TMR2_StopTimer 07FF  
                                ?_LCDchar 0070                                  ?_LCDinit 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                                ?_INT_ISR 0070                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                        _PWM6_LoadDutyValue 0853  
                __size_of_TMR2_Initialize 000E                              _isdigit$2972 0070  
                   __size_of_INT_CallBack 000D             ?_TMR5_DefaultInterruptHandler 0070  
    __size_of_differenceBetweenTimePeriod 0034                                  LCDchar@c 0078  
                       __size_of_editTemp 002D                                  LCDsend@c 00A3  
                     ?_PWM6_LoadDutyValue 00A0                               sprintf@flag 0030  
               __size_of_i2c1_driver_open 000C                               sprintf@prec 002D  
                                ?_ReadI2C 0070                                 __pnvBANK0 006E  
                               __pnvBANK1 00B1                                 _editClock 0C07  
                        ___lwdiv@dividend 0072                    _PIN_MANAGER_Initialize 0A74  
               __size_ofi1_TMR2_StopTimer 0004             ??_INT_DefaultInterruptHandler 0070  
                           ??i1_TMR2_Stop 0070                  __size_of_TMR3_Initialize 001F  
                     __end_of_menuLCD_ISR 0299          __end_of_TMR1_SetInterruptHandler 16FA  
         ADCC_GetSingleConversion@channel 0073                              i1_LCDsend2x4 0C6B  
                               _dimingLed 005E                                  ?___lwdiv 0070  
                                ?___lwmod 0078               _i2c1_driver_busCollisionISR 00C2  
                    ??_PWM6_LoadDutyValue 00A2                                  ?_editLum 0070  
            ??_INTERRUPT_InterruptManager 007E                               ??_TMR2_Stop 00A0  
                            _INT_CallBack 1745                                  ?_isdigit 0070  
                         ?_TMR2_StopTimer 0070                  __size_of_PWM6_Initialize 000D  
                        ___lwdiv@quotient 0075                                  ?_sprintf 0020  
                                _T2CLKCON 0290                  __size_of_DATAEE_ReadByte 000F  
                          __size_of_tsttc 010D                   i1_PWM_Output_D4_Disable 16D4  
                          ___wmul@product 0074                                  _LATAbits 0016  
                               clear_ram0 1706                                  _PIE0bits 0716  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR2_StartTimer 0004                             i1LCDsend2x4@c 0075  
                              ?_editClock 0070                                 _tempAlarm 0054  
                                _S1_Value 0064                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0048                                  _PIR0bits 070C  
                                _PIR3bits 070F                                  _PIR4bits 0710  
              ??_TMR3_SetInterruptHandler 00A2                  __size_of_TMR5_Initialize 001F  
                             ??_Clock_ISR 007A                      __end_of_toggleAlarms 09AA  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR1_ISR 17E9                                  _TMR3_ISR 080E  
                                _TMR5_ISR 0825                                  _SSP1STAT 018F  
                       ??_TMR1_Initialize 00A2                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                     __end_ofi1_TMR2_Stop 16DA                                _ADCON3bits 0096  
                       ___wmul@multiplier 0070                        i1WriteI2C@data_out 0071  
            __end_of_PWM_Output_D4_Enable 16D1      __size_of_INT_DefaultInterruptHandler 0001  
       __size_of_TMR5_SetInterruptHandler 0006                          __size_of_LCDchar 0008  
               ?_TMR5_SetInterruptHandler 00A0                     DATAEE_WriteByte@bData 00A2  
                        __size_of_LCDinit 0076                          __size_of_LCDsend 0053  
                        __size_of_INT_ISR 0006                         ?_DATAEE_WriteByte 00A0  
                       ??_TMR2_Initialize 00A0                               _menuLCD_ISR 006E  
          ??_TMR5_DefaultInterruptHandler 0070                        ??_DATAEE_WriteByte 00A3  
                        __size_of_ReadI2C 001A                                _ADSTATbits 0097  
                __size_of_TMR3_WriteTimer 0011                          ??_monitoring_ISR 007A  
                 ??_OSCILLATOR_Initialize 00A0                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0034                                  _WriteI2C 0B51  
                       ??_TMR3_Initialize 00A2                  _TMR1_SetInterruptHandler 16F4  
                        i1LCDsend2x4@mode 0072                          __size_of_editLum 002D  
                   _TMR1_InterruptHandler 00B9                                sprintf@val 002E  
                                _clkAlarm 004D                  __size_of_ADCC_Initialize 0017  
                        __size_of_isdigit 0012                                  _editTemp 09D7  
                         ___lwdiv@divisor 0070                           ___lwdiv@counter 0077  
                                __ptext10 1700                                  __ptext11 08FD  
                                __ptext20 175F                                  __ptext12 16FA  
                                __ptext21 16EE                                  __ptext13 0800  
                              _T1GCONbits 020F                                  __ptext30 176D  
                                __ptext22 083C                                  __ptext14 08DE  
                                __ptext23 16DA                                  __ptext15 16F4  
                                __ptext40 0003                                  __ptext32 0825  
                                __ptext24 0853                                  __ptext16 1752  
                                __ptext41 006E                                  __ptext33 07FF  
                                __ptext25 0751                                  __ptext17 1728  
                                __ptext50 0A38                                  __ptext42 16E4  
                                __ptext34 0633                                  __ptext26 0D1E  
                                __ptext18 0A74                                  __ptext51 0A04  
                                __ptext43 16D7                                  __ptext35 0EF3  
                                __ptext27 0AFE                                  __ptext19 1730  
                                __ptext60 178D                                  __ptext52 16E0  
                                __ptext44 16D4                                  __ptext36 086C  
                                __ptext28 0B51                                  __ptext61 17E9  
                                __ptext53 16D1                                  __ptext45 17D3  
                                __ptext37 17C1                                  __ptext29 095A  
                                __ptext62 177C                                  __ptext54 16CE  
                                __ptext46 0496                                  __ptext38 179E  
                                __ptext63 0DF2                                  __ptext55 0886  
                                __ptext47 17AF                                  __ptext39 080E  
                                __ptext64 0002                                  __ptext56 1720  
                                __ptext48 08BF                                  __ptext65 08A1  
                                __ptext57 1712                                  __ptext49 07C7  
                                __ptext66 16E8                                  __ptext58 0C6B  
                                __ptext67 1745                                  __ptext59 0AB3  
                                __ptext68 16CD                                  __ptext69 0BAB  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
               ??i1_PWM_Output_D4_Disable 0070               __size_ofi1_DATAEE_WriteByte 001E  
                        __size_of_sprintf 019D                                _T3GCONbits 0215  
             DATAEE_WriteByte@GIEBitValue 00A3                   TMR3_WriteTimer@timerVal 0070  
                        _i2c1_driver_open 1739                         ??_PWM6_Initialize 00A0  
                           __size_of_main 01FD                                _T5GCONbits 021B  
                                _lumAlarm 0051                         ??_DATAEE_ReadByte 00A2  
                                _lumLevel 0062                     _PWM_Output_D4_Disable 16DA  
                             ??_editClock 00A0                          _editingTempAlarm 0061  
                        i1_TMR2_StopTimer 16E4                  __size_of_TMR5_WriteTimer 0011  
                                _prevTemp 006C                                tsttc@value 0073  
                             i1_TMR2_Stop 16D7                ??_ADCC_GetSingleConversion 0073  
                                int$flags 007E                         ??_TMR2_StartTimer 0070  
      __end_of_INTERRUPT_InterruptManager 004C                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                       menuLCD_ISR@F12829 00BD      __end_of_TMR3_DefaultInterruptHandler 0004  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 0003  
                       ??_TMR5_Initialize 00A2                                _INTCONbits 000B  
                             _NVMCON1bits 081E                              _prevLumLevel 006A  
           __size_ofi1_PWM6_LoadDutyValue 0016                      _INT_InterruptHandler 00B1  
                                isdigit@c 0071                                _LCDsend2x4 0D1E  
                      _EXT_INT_Initialize 175F                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0034  
                        ___lwmod@dividend 007A                   ?_PIN_MANAGER_Initialize 0070  
                   __size_of_toggleAlarms 002C                       ?_EXT_INT_Initialize 0070  
                         _editingLumAlarm 0060                      _PWM_Output_D4_Enable 16CE  
     __end_of_differenceBetweenTimePeriod 0A38               _differenceBetweenTimePeriod 0A04  
                ?_INT_SetInterruptHandler 00A0                          ??_TMR2_StopTimer 00A0  
                       ??_TMR3_WriteTimer 0072                             __pstringtext1 180F  
                           __pstringtext2 1800                             __pstringtext3 1819  
                           __pstringtext4 1820                             __pstringtext5 1825  
                           __pstringtext6 0000                      ??_EXT_INT_Initialize 00A2  
           ??_differenceBetweenTimePeriod 0077                                  sprintf@c 0033  
                                sprintf@f 0020             ?_TMR3_DefaultInterruptHandler 0070  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         ___lwmod@divisor 0078                           ___lwmod@counter 007D  
                          _idx_RingBuffer 00C5               PWM6_LoadDutyValue@dutyValue 00A0  
                            _toggleAlarms 097E                                _TMR2_Start 16D1  
          __end_of_PIN_MANAGER_Initialize 0AB3                         ??_ADCC_Initialize 00A0  
                  ?_PWM_Output_D4_Disable 0070                     ?_PWM_Output_D4_Enable 0070  
                         _TMR1_Initialize 08DE  
