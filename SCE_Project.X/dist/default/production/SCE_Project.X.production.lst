

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Oct 21 23:39:30 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text35,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.30
    80                           ; Generated 15/09/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution. Publication is not required when
    96                           ;        this file is used in an embedded application.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F18875 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001C                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  008C                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  008E                     	;# 
   152  008F                     	;# 
   153  0090                     	;# 
   154  0090                     	;# 
   155  0091                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0095                     	;# 
   159  0096                     	;# 
   160  0097                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009A                     	;# 
   164  009B                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  0110                     	;# 
   174  0110                     	;# 
   175  0111                     	;# 
   176  0112                     	;# 
   177  0112                     	;# 
   178  0113                     	;# 
   179  0114                     	;# 
   180  0114                     	;# 
   181  0115                     	;# 
   182  0116                     	;# 
   183  0116                     	;# 
   184  0117                     	;# 
   185  0119                     	;# 
   186  0119                     	;# 
   187  0119                     	;# 
   188  011A                     	;# 
   189  011A                     	;# 
   190  011A                     	;# 
   191  011B                     	;# 
   192  011B                     	;# 
   193  011B                     	;# 
   194  011B                     	;# 
   195  011B                     	;# 
   196  011C                     	;# 
   197  011C                     	;# 
   198  011C                     	;# 
   199  011D                     	;# 
   200  011D                     	;# 
   201  011D                     	;# 
   202  011E                     	;# 
   203  011E                     	;# 
   204  011E                     	;# 
   205  011F                     	;# 
   206  011F                     	;# 
   207  011F                     	;# 
   208  011F                     	;# 
   209  011F                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  018E                     	;# 
   213  018F                     	;# 
   214  0190                     	;# 
   215  0191                     	;# 
   216  0192                     	;# 
   217  0196                     	;# 
   218  0197                     	;# 
   219  0198                     	;# 
   220  0199                     	;# 
   221  019A                     	;# 
   222  019B                     	;# 
   223  019C                     	;# 
   224  020C                     	;# 
   225  020C                     	;# 
   226  020D                     	;# 
   227  020E                     	;# 
   228  020F                     	;# 
   229  020F                     	;# 
   230  0210                     	;# 
   231  0210                     	;# 
   232  0211                     	;# 
   233  0211                     	;# 
   234  0212                     	;# 
   235  0212                     	;# 
   236  0213                     	;# 
   237  0214                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0216                     	;# 
   241  0216                     	;# 
   242  0217                     	;# 
   243  0217                     	;# 
   244  0218                     	;# 
   245  0218                     	;# 
   246  0219                     	;# 
   247  021A                     	;# 
   248  021B                     	;# 
   249  021B                     	;# 
   250  021C                     	;# 
   251  021C                     	;# 
   252  021D                     	;# 
   253  021D                     	;# 
   254  021E                     	;# 
   255  021F                     	;# 
   256  028C                     	;# 
   257  028C                     	;# 
   258  028D                     	;# 
   259  028D                     	;# 
   260  028E                     	;# 
   261  028F                     	;# 
   262  0290                     	;# 
   263  0290                     	;# 
   264  0291                     	;# 
   265  0292                     	;# 
   266  0292                     	;# 
   267  0293                     	;# 
   268  0293                     	;# 
   269  0294                     	;# 
   270  0295                     	;# 
   271  0296                     	;# 
   272  0296                     	;# 
   273  0297                     	;# 
   274  0298                     	;# 
   275  0298                     	;# 
   276  0299                     	;# 
   277  0299                     	;# 
   278  029A                     	;# 
   279  029B                     	;# 
   280  029C                     	;# 
   281  029C                     	;# 
   282  029D                     	;# 
   283  030C                     	;# 
   284  030C                     	;# 
   285  030D                     	;# 
   286  030E                     	;# 
   287  030F                     	;# 
   288  0310                     	;# 
   289  0310                     	;# 
   290  0311                     	;# 
   291  0312                     	;# 
   292  0313                     	;# 
   293  0314                     	;# 
   294  0314                     	;# 
   295  0315                     	;# 
   296  0316                     	;# 
   297  0317                     	;# 
   298  0318                     	;# 
   299  0318                     	;# 
   300  0319                     	;# 
   301  031A                     	;# 
   302  031B                     	;# 
   303  031C                     	;# 
   304  031C                     	;# 
   305  031D                     	;# 
   306  031E                     	;# 
   307  031F                     	;# 
   308  038C                     	;# 
   309  038C                     	;# 
   310  038D                     	;# 
   311  038E                     	;# 
   312  0390                     	;# 
   313  0390                     	;# 
   314  0391                     	;# 
   315  0392                     	;# 
   316  040C                     	;# 
   317  040D                     	;# 
   318  040E                     	;# 
   319  040F                     	;# 
   320  0410                     	;# 
   321  0411                     	;# 
   322  0416                     	;# 
   323  0416                     	;# 
   324  0417                     	;# 
   325  0418                     	;# 
   326  0418                     	;# 
   327  0419                     	;# 
   328  041A                     	;# 
   329  041A                     	;# 
   330  041B                     	;# 
   331  041C                     	;# 
   332  041C                     	;# 
   333  041D                     	;# 
   334  041E                     	;# 
   335  041F                     	;# 
   336  048C                     	;# 
   337  048C                     	;# 
   338  048D                     	;# 
   339  048E                     	;# 
   340  048F                     	;# 
   341  048F                     	;# 
   342  0490                     	;# 
   343  0491                     	;# 
   344  0492                     	;# 
   345  0492                     	;# 
   346  0493                     	;# 
   347  0494                     	;# 
   348  0495                     	;# 
   349  0495                     	;# 
   350  0496                     	;# 
   351  0497                     	;# 
   352  0498                     	;# 
   353  0499                     	;# 
   354  049A                     	;# 
   355  049B                     	;# 
   356  049C                     	;# 
   357  049D                     	;# 
   358  050C                     	;# 
   359  050C                     	;# 
   360  050D                     	;# 
   361  050E                     	;# 
   362  050F                     	;# 
   363  050F                     	;# 
   364  0510                     	;# 
   365  0511                     	;# 
   366  0512                     	;# 
   367  0512                     	;# 
   368  0513                     	;# 
   369  0514                     	;# 
   370  0515                     	;# 
   371  0515                     	;# 
   372  0516                     	;# 
   373  0517                     	;# 
   374  0518                     	;# 
   375  0519                     	;# 
   376  051A                     	;# 
   377  051B                     	;# 
   378  051C                     	;# 
   379  051D                     	;# 
   380  058C                     	;# 
   381  058C                     	;# 
   382  058D                     	;# 
   383  058E                     	;# 
   384  058F                     	;# 
   385  058F                     	;# 
   386  0590                     	;# 
   387  0591                     	;# 
   388  0592                     	;# 
   389  0593                     	;# 
   390  060C                     	;# 
   391  060D                     	;# 
   392  060E                     	;# 
   393  060F                     	;# 
   394  0610                     	;# 
   395  0611                     	;# 
   396  0612                     	;# 
   397  0613                     	;# 
   398  0614                     	;# 
   399  0616                     	;# 
   400  0617                     	;# 
   401  0618                     	;# 
   402  0619                     	;# 
   403  061A                     	;# 
   404  061B                     	;# 
   405  061C                     	;# 
   406  061D                     	;# 
   407  061E                     	;# 
   408  068C                     	;# 
   409  068D                     	;# 
   410  068E                     	;# 
   411  068F                     	;# 
   412  0690                     	;# 
   413  0691                     	;# 
   414  0692                     	;# 
   415  0693                     	;# 
   416  0694                     	;# 
   417  070C                     	;# 
   418  070D                     	;# 
   419  070E                     	;# 
   420  070F                     	;# 
   421  0710                     	;# 
   422  0711                     	;# 
   423  0712                     	;# 
   424  0713                     	;# 
   425  0714                     	;# 
   426  0716                     	;# 
   427  0717                     	;# 
   428  0718                     	;# 
   429  0719                     	;# 
   430  071A                     	;# 
   431  071B                     	;# 
   432  071C                     	;# 
   433  071D                     	;# 
   434  071E                     	;# 
   435  0796                     	;# 
   436  0797                     	;# 
   437  0798                     	;# 
   438  0799                     	;# 
   439  079A                     	;# 
   440  079B                     	;# 
   441  080C                     	;# 
   442  080D                     	;# 
   443  080E                     	;# 
   444  080F                     	;# 
   445  0810                     	;# 
   446  0811                     	;# 
   447  0812                     	;# 
   448  0813                     	;# 
   449  0814                     	;# 
   450  081A                     	;# 
   451  081B                     	;# 
   452  081C                     	;# 
   453  081D                     	;# 
   454  081E                     	;# 
   455  081F                     	;# 
   456  088C                     	;# 
   457  088D                     	;# 
   458  088E                     	;# 
   459  088F                     	;# 
   460  0890                     	;# 
   461  0891                     	;# 
   462  0892                     	;# 
   463  0893                     	;# 
   464  0895                     	;# 
   465  0896                     	;# 
   466  0897                     	;# 
   467  0898                     	;# 
   468  0899                     	;# 
   469  089A                     	;# 
   470  089B                     	;# 
   471  090C                     	;# 
   472  090E                     	;# 
   473  090F                     	;# 
   474  091F                     	;# 
   475  091F                     	;# 
   476  098F                     	;# 
   477  098F                     	;# 
   478  0990                     	;# 
   479  0991                     	;# 
   480  0992                     	;# 
   481  0993                     	;# 
   482  0994                     	;# 
   483  0995                     	;# 
   484  0996                     	;# 
   485  0997                     	;# 
   486  0E0F                     	;# 
   487  0E10                     	;# 
   488  0E11                     	;# 
   489  0E12                     	;# 
   490  0E13                     	;# 
   491  0E14                     	;# 
   492  0E15                     	;# 
   493  0E16                     	;# 
   494  0E17                     	;# 
   495  0E18                     	;# 
   496  0E19                     	;# 
   497  0E1A                     	;# 
   498  0E1B                     	;# 
   499  0E1C                     	;# 
   500  0E1D                     	;# 
   501  0E1E                     	;# 
   502  0E1F                     	;# 
   503  0E20                     	;# 
   504  0E21                     	;# 
   505  0E22                     	;# 
   506  0E23                     	;# 
   507  0E24                     	;# 
   508  0E25                     	;# 
   509  0E26                     	;# 
   510  0E27                     	;# 
   511  0E28                     	;# 
   512  0E29                     	;# 
   513  0E2A                     	;# 
   514  0E2B                     	;# 
   515  0E2C                     	;# 
   516  0E2D                     	;# 
   517  0E2E                     	;# 
   518  0E2F                     	;# 
   519  0E30                     	;# 
   520  0E31                     	;# 
   521  0E32                     	;# 
   522  0E33                     	;# 
   523  0E34                     	;# 
   524  0E35                     	;# 
   525  0E36                     	;# 
   526  0E37                     	;# 
   527  0E8F                     	;# 
   528  0E90                     	;# 
   529  0E91                     	;# 
   530  0E92                     	;# 
   531  0E93                     	;# 
   532  0E94                     	;# 
   533  0E95                     	;# 
   534  0E96                     	;# 
   535  0E97                     	;# 
   536  0E9C                     	;# 
   537  0E9D                     	;# 
   538  0E9E                     	;# 
   539  0EA1                     	;# 
   540  0EA2                     	;# 
   541  0EA3                     	;# 
   542  0EA4                     	;# 
   543  0EA5                     	;# 
   544  0EA9                     	;# 
   545  0EAA                     	;# 
   546  0EAB                     	;# 
   547  0EAC                     	;# 
   548  0EB1                     	;# 
   549  0EB2                     	;# 
   550  0EB3                     	;# 
   551  0EB8                     	;# 
   552  0EB9                     	;# 
   553  0EBA                     	;# 
   554  0EBB                     	;# 
   555  0EBC                     	;# 
   556  0EBD                     	;# 
   557  0EBE                     	;# 
   558  0EC3                     	;# 
   559  0EC5                     	;# 
   560  0EC6                     	;# 
   561  0EC7                     	;# 
   562  0EC8                     	;# 
   563  0EC9                     	;# 
   564  0ECA                     	;# 
   565  0ECB                     	;# 
   566  0ECC                     	;# 
   567  0F10                     	;# 
   568  0F11                     	;# 
   569  0F12                     	;# 
   570  0F13                     	;# 
   571  0F14                     	;# 
   572  0F15                     	;# 
   573  0F16                     	;# 
   574  0F17                     	;# 
   575  0F18                     	;# 
   576  0F19                     	;# 
   577  0F1A                     	;# 
   578  0F1B                     	;# 
   579  0F1C                     	;# 
   580  0F1D                     	;# 
   581  0F1E                     	;# 
   582  0F1F                     	;# 
   583  0F20                     	;# 
   584  0F21                     	;# 
   585  0F22                     	;# 
   586  0F23                     	;# 
   587  0F24                     	;# 
   588  0F25                     	;# 
   589  0F26                     	;# 
   590  0F27                     	;# 
   591  0F28                     	;# 
   592  0F29                     	;# 
   593  0F2A                     	;# 
   594  0F2B                     	;# 
   595  0F2C                     	;# 
   596  0F2D                     	;# 
   597  0F2E                     	;# 
   598  0F2F                     	;# 
   599  0F30                     	;# 
   600  0F31                     	;# 
   601  0F32                     	;# 
   602  0F38                     	;# 
   603  0F39                     	;# 
   604  0F3A                     	;# 
   605  0F3B                     	;# 
   606  0F3C                     	;# 
   607  0F3D                     	;# 
   608  0F3E                     	;# 
   609  0F3F                     	;# 
   610  0F40                     	;# 
   611  0F41                     	;# 
   612  0F43                     	;# 
   613  0F44                     	;# 
   614  0F45                     	;# 
   615  0F46                     	;# 
   616  0F47                     	;# 
   617  0F48                     	;# 
   618  0F49                     	;# 
   619  0F4A                     	;# 
   620  0F4B                     	;# 
   621  0F4C                     	;# 
   622  0F4E                     	;# 
   623  0F4F                     	;# 
   624  0F50                     	;# 
   625  0F51                     	;# 
   626  0F52                     	;# 
   627  0F53                     	;# 
   628  0F54                     	;# 
   629  0F55                     	;# 
   630  0F56                     	;# 
   631  0F57                     	;# 
   632  0F59                     	;# 
   633  0F5A                     	;# 
   634  0F5B                     	;# 
   635  0F5C                     	;# 
   636  0F5D                     	;# 
   637  0F61                     	;# 
   638  0F62                     	;# 
   639  0F64                     	;# 
   640  0F65                     	;# 
   641  0F66                     	;# 
   642  0F67                     	;# 
   643  0F68                     	;# 
   644  0F69                     	;# 
   645  0F6A                     	;# 
   646  0F6B                     	;# 
   647  0F6C                     	;# 
   648  0F6D                     	;# 
   649  0FE4                     	;# 
   650  0FE5                     	;# 
   651  0FE6                     	;# 
   652  0FE7                     	;# 
   653  0FE8                     	;# 
   654  0FE9                     	;# 
   655  0FEA                     	;# 
   656  0FEB                     	;# 
   657  0FED                     	;# 
   658  0FEE                     	;# 
   659  0FEF                     	;# 
   660  0000                     	;# 
   661  0001                     	;# 
   662  0002                     	;# 
   663  0003                     	;# 
   664  0004                     	;# 
   665  0005                     	;# 
   666  0006                     	;# 
   667  0007                     	;# 
   668  0008                     	;# 
   669  0009                     	;# 
   670  000A                     	;# 
   671  000B                     	;# 
   672  000C                     	;# 
   673  000D                     	;# 
   674  000E                     	;# 
   675  000F                     	;# 
   676  0010                     	;# 
   677  0011                     	;# 
   678  0012                     	;# 
   679  0013                     	;# 
   680  0014                     	;# 
   681  0015                     	;# 
   682  0016                     	;# 
   683  0017                     	;# 
   684  0018                     	;# 
   685  0019                     	;# 
   686  001A                     	;# 
   687  001C                     	;# 
   688  001C                     	;# 
   689  001D                     	;# 
   690  001D                     	;# 
   691  001E                     	;# 
   692  001F                     	;# 
   693  008C                     	;# 
   694  008C                     	;# 
   695  008D                     	;# 
   696  008E                     	;# 
   697  008E                     	;# 
   698  008F                     	;# 
   699  0090                     	;# 
   700  0090                     	;# 
   701  0091                     	;# 
   702  0093                     	;# 
   703  0094                     	;# 
   704  0095                     	;# 
   705  0096                     	;# 
   706  0097                     	;# 
   707  0098                     	;# 
   708  0099                     	;# 
   709  009A                     	;# 
   710  009B                     	;# 
   711  009C                     	;# 
   712  009D                     	;# 
   713  009E                     	;# 
   714  010C                     	;# 
   715  010D                     	;# 
   716  010E                     	;# 
   717  010E                     	;# 
   718  010F                     	;# 
   719  0110                     	;# 
   720  0110                     	;# 
   721  0111                     	;# 
   722  0112                     	;# 
   723  0112                     	;# 
   724  0113                     	;# 
   725  0114                     	;# 
   726  0114                     	;# 
   727  0115                     	;# 
   728  0116                     	;# 
   729  0116                     	;# 
   730  0117                     	;# 
   731  0119                     	;# 
   732  0119                     	;# 
   733  0119                     	;# 
   734  011A                     	;# 
   735  011A                     	;# 
   736  011A                     	;# 
   737  011B                     	;# 
   738  011B                     	;# 
   739  011B                     	;# 
   740  011B                     	;# 
   741  011B                     	;# 
   742  011C                     	;# 
   743  011C                     	;# 
   744  011C                     	;# 
   745  011D                     	;# 
   746  011D                     	;# 
   747  011D                     	;# 
   748  011E                     	;# 
   749  011E                     	;# 
   750  011E                     	;# 
   751  011F                     	;# 
   752  011F                     	;# 
   753  011F                     	;# 
   754  011F                     	;# 
   755  011F                     	;# 
   756  018C                     	;# 
   757  018D                     	;# 
   758  018E                     	;# 
   759  018F                     	;# 
   760  0190                     	;# 
   761  0191                     	;# 
   762  0192                     	;# 
   763  0196                     	;# 
   764  0197                     	;# 
   765  0198                     	;# 
   766  0199                     	;# 
   767  019A                     	;# 
   768  019B                     	;# 
   769  019C                     	;# 
   770  020C                     	;# 
   771  020C                     	;# 
   772  020D                     	;# 
   773  020E                     	;# 
   774  020F                     	;# 
   775  020F                     	;# 
   776  0210                     	;# 
   777  0210                     	;# 
   778  0211                     	;# 
   779  0211                     	;# 
   780  0212                     	;# 
   781  0212                     	;# 
   782  0213                     	;# 
   783  0214                     	;# 
   784  0215                     	;# 
   785  0215                     	;# 
   786  0216                     	;# 
   787  0216                     	;# 
   788  0217                     	;# 
   789  0217                     	;# 
   790  0218                     	;# 
   791  0218                     	;# 
   792  0219                     	;# 
   793  021A                     	;# 
   794  021B                     	;# 
   795  021B                     	;# 
   796  021C                     	;# 
   797  021C                     	;# 
   798  021D                     	;# 
   799  021D                     	;# 
   800  021E                     	;# 
   801  021F                     	;# 
   802  028C                     	;# 
   803  028C                     	;# 
   804  028D                     	;# 
   805  028D                     	;# 
   806  028E                     	;# 
   807  028F                     	;# 
   808  0290                     	;# 
   809  0290                     	;# 
   810  0291                     	;# 
   811  0292                     	;# 
   812  0292                     	;# 
   813  0293                     	;# 
   814  0293                     	;# 
   815  0294                     	;# 
   816  0295                     	;# 
   817  0296                     	;# 
   818  0296                     	;# 
   819  0297                     	;# 
   820  0298                     	;# 
   821  0298                     	;# 
   822  0299                     	;# 
   823  0299                     	;# 
   824  029A                     	;# 
   825  029B                     	;# 
   826  029C                     	;# 
   827  029C                     	;# 
   828  029D                     	;# 
   829  030C                     	;# 
   830  030C                     	;# 
   831  030D                     	;# 
   832  030E                     	;# 
   833  030F                     	;# 
   834  0310                     	;# 
   835  0310                     	;# 
   836  0311                     	;# 
   837  0312                     	;# 
   838  0313                     	;# 
   839  0314                     	;# 
   840  0314                     	;# 
   841  0315                     	;# 
   842  0316                     	;# 
   843  0317                     	;# 
   844  0318                     	;# 
   845  0318                     	;# 
   846  0319                     	;# 
   847  031A                     	;# 
   848  031B                     	;# 
   849  031C                     	;# 
   850  031C                     	;# 
   851  031D                     	;# 
   852  031E                     	;# 
   853  031F                     	;# 
   854  038C                     	;# 
   855  038C                     	;# 
   856  038D                     	;# 
   857  038E                     	;# 
   858  0390                     	;# 
   859  0390                     	;# 
   860  0391                     	;# 
   861  0392                     	;# 
   862  040C                     	;# 
   863  040D                     	;# 
   864  040E                     	;# 
   865  040F                     	;# 
   866  0410                     	;# 
   867  0411                     	;# 
   868  0416                     	;# 
   869  0416                     	;# 
   870  0417                     	;# 
   871  0418                     	;# 
   872  0418                     	;# 
   873  0419                     	;# 
   874  041A                     	;# 
   875  041A                     	;# 
   876  041B                     	;# 
   877  041C                     	;# 
   878  041C                     	;# 
   879  041D                     	;# 
   880  041E                     	;# 
   881  041F                     	;# 
   882  048C                     	;# 
   883  048C                     	;# 
   884  048D                     	;# 
   885  048E                     	;# 
   886  048F                     	;# 
   887  048F                     	;# 
   888  0490                     	;# 
   889  0491                     	;# 
   890  0492                     	;# 
   891  0492                     	;# 
   892  0493                     	;# 
   893  0494                     	;# 
   894  0495                     	;# 
   895  0495                     	;# 
   896  0496                     	;# 
   897  0497                     	;# 
   898  0498                     	;# 
   899  0499                     	;# 
   900  049A                     	;# 
   901  049B                     	;# 
   902  049C                     	;# 
   903  049D                     	;# 
   904  050C                     	;# 
   905  050C                     	;# 
   906  050D                     	;# 
   907  050E                     	;# 
   908  050F                     	;# 
   909  050F                     	;# 
   910  0510                     	;# 
   911  0511                     	;# 
   912  0512                     	;# 
   913  0512                     	;# 
   914  0513                     	;# 
   915  0514                     	;# 
   916  0515                     	;# 
   917  0515                     	;# 
   918  0516                     	;# 
   919  0517                     	;# 
   920  0518                     	;# 
   921  0519                     	;# 
   922  051A                     	;# 
   923  051B                     	;# 
   924  051C                     	;# 
   925  051D                     	;# 
   926  058C                     	;# 
   927  058C                     	;# 
   928  058D                     	;# 
   929  058E                     	;# 
   930  058F                     	;# 
   931  058F                     	;# 
   932  0590                     	;# 
   933  0591                     	;# 
   934  0592                     	;# 
   935  0593                     	;# 
   936  060C                     	;# 
   937  060D                     	;# 
   938  060E                     	;# 
   939  060F                     	;# 
   940  0610                     	;# 
   941  0611                     	;# 
   942  0612                     	;# 
   943  0613                     	;# 
   944  0614                     	;# 
   945  0616                     	;# 
   946  0617                     	;# 
   947  0618                     	;# 
   948  0619                     	;# 
   949  061A                     	;# 
   950  061B                     	;# 
   951  061C                     	;# 
   952  061D                     	;# 
   953  061E                     	;# 
   954  068C                     	;# 
   955  068D                     	;# 
   956  068E                     	;# 
   957  068F                     	;# 
   958  0690                     	;# 
   959  0691                     	;# 
   960  0692                     	;# 
   961  0693                     	;# 
   962  0694                     	;# 
   963  070C                     	;# 
   964  070D                     	;# 
   965  070E                     	;# 
   966  070F                     	;# 
   967  0710                     	;# 
   968  0711                     	;# 
   969  0712                     	;# 
   970  0713                     	;# 
   971  0714                     	;# 
   972  0716                     	;# 
   973  0717                     	;# 
   974  0718                     	;# 
   975  0719                     	;# 
   976  071A                     	;# 
   977  071B                     	;# 
   978  071C                     	;# 
   979  071D                     	;# 
   980  071E                     	;# 
   981  0796                     	;# 
   982  0797                     	;# 
   983  0798                     	;# 
   984  0799                     	;# 
   985  079A                     	;# 
   986  079B                     	;# 
   987  080C                     	;# 
   988  080D                     	;# 
   989  080E                     	;# 
   990  080F                     	;# 
   991  0810                     	;# 
   992  0811                     	;# 
   993  0812                     	;# 
   994  0813                     	;# 
   995  0814                     	;# 
   996  081A                     	;# 
   997  081B                     	;# 
   998  081C                     	;# 
   999  081D                     	;# 
  1000  081E                     	;# 
  1001  081F                     	;# 
  1002  088C                     	;# 
  1003  088D                     	;# 
  1004  088E                     	;# 
  1005  088F                     	;# 
  1006  0890                     	;# 
  1007  0891                     	;# 
  1008  0892                     	;# 
  1009  0893                     	;# 
  1010  0895                     	;# 
  1011  0896                     	;# 
  1012  0897                     	;# 
  1013  0898                     	;# 
  1014  0899                     	;# 
  1015  089A                     	;# 
  1016  089B                     	;# 
  1017  090C                     	;# 
  1018  090E                     	;# 
  1019  090F                     	;# 
  1020  091F                     	;# 
  1021  091F                     	;# 
  1022  098F                     	;# 
  1023  098F                     	;# 
  1024  0990                     	;# 
  1025  0991                     	;# 
  1026  0992                     	;# 
  1027  0993                     	;# 
  1028  0994                     	;# 
  1029  0995                     	;# 
  1030  0996                     	;# 
  1031  0997                     	;# 
  1032  0E0F                     	;# 
  1033  0E10                     	;# 
  1034  0E11                     	;# 
  1035  0E12                     	;# 
  1036  0E13                     	;# 
  1037  0E14                     	;# 
  1038  0E15                     	;# 
  1039  0E16                     	;# 
  1040  0E17                     	;# 
  1041  0E18                     	;# 
  1042  0E19                     	;# 
  1043  0E1A                     	;# 
  1044  0E1B                     	;# 
  1045  0E1C                     	;# 
  1046  0E1D                     	;# 
  1047  0E1E                     	;# 
  1048  0E1F                     	;# 
  1049  0E20                     	;# 
  1050  0E21                     	;# 
  1051  0E22                     	;# 
  1052  0E23                     	;# 
  1053  0E24                     	;# 
  1054  0E25                     	;# 
  1055  0E26                     	;# 
  1056  0E27                     	;# 
  1057  0E28                     	;# 
  1058  0E29                     	;# 
  1059  0E2A                     	;# 
  1060  0E2B                     	;# 
  1061  0E2C                     	;# 
  1062  0E2D                     	;# 
  1063  0E2E                     	;# 
  1064  0E2F                     	;# 
  1065  0E30                     	;# 
  1066  0E31                     	;# 
  1067  0E32                     	;# 
  1068  0E33                     	;# 
  1069  0E34                     	;# 
  1070  0E35                     	;# 
  1071  0E36                     	;# 
  1072  0E37                     	;# 
  1073  0E8F                     	;# 
  1074  0E90                     	;# 
  1075  0E91                     	;# 
  1076  0E92                     	;# 
  1077  0E93                     	;# 
  1078  0E94                     	;# 
  1079  0E95                     	;# 
  1080  0E96                     	;# 
  1081  0E97                     	;# 
  1082  0E9C                     	;# 
  1083  0E9D                     	;# 
  1084  0E9E                     	;# 
  1085  0EA1                     	;# 
  1086  0EA2                     	;# 
  1087  0EA3                     	;# 
  1088  0EA4                     	;# 
  1089  0EA5                     	;# 
  1090  0EA9                     	;# 
  1091  0EAA                     	;# 
  1092  0EAB                     	;# 
  1093  0EAC                     	;# 
  1094  0EB1                     	;# 
  1095  0EB2                     	;# 
  1096  0EB3                     	;# 
  1097  0EB8                     	;# 
  1098  0EB9                     	;# 
  1099  0EBA                     	;# 
  1100  0EBB                     	;# 
  1101  0EBC                     	;# 
  1102  0EBD                     	;# 
  1103  0EBE                     	;# 
  1104  0EC3                     	;# 
  1105  0EC5                     	;# 
  1106  0EC6                     	;# 
  1107  0EC7                     	;# 
  1108  0EC8                     	;# 
  1109  0EC9                     	;# 
  1110  0ECA                     	;# 
  1111  0ECB                     	;# 
  1112  0ECC                     	;# 
  1113  0F10                     	;# 
  1114  0F11                     	;# 
  1115  0F12                     	;# 
  1116  0F13                     	;# 
  1117  0F14                     	;# 
  1118  0F15                     	;# 
  1119  0F16                     	;# 
  1120  0F17                     	;# 
  1121  0F18                     	;# 
  1122  0F19                     	;# 
  1123  0F1A                     	;# 
  1124  0F1B                     	;# 
  1125  0F1C                     	;# 
  1126  0F1D                     	;# 
  1127  0F1E                     	;# 
  1128  0F1F                     	;# 
  1129  0F20                     	;# 
  1130  0F21                     	;# 
  1131  0F22                     	;# 
  1132  0F23                     	;# 
  1133  0F24                     	;# 
  1134  0F25                     	;# 
  1135  0F26                     	;# 
  1136  0F27                     	;# 
  1137  0F28                     	;# 
  1138  0F29                     	;# 
  1139  0F2A                     	;# 
  1140  0F2B                     	;# 
  1141  0F2C                     	;# 
  1142  0F2D                     	;# 
  1143  0F2E                     	;# 
  1144  0F2F                     	;# 
  1145  0F30                     	;# 
  1146  0F31                     	;# 
  1147  0F32                     	;# 
  1148  0F38                     	;# 
  1149  0F39                     	;# 
  1150  0F3A                     	;# 
  1151  0F3B                     	;# 
  1152  0F3C                     	;# 
  1153  0F3D                     	;# 
  1154  0F3E                     	;# 
  1155  0F3F                     	;# 
  1156  0F40                     	;# 
  1157  0F41                     	;# 
  1158  0F43                     	;# 
  1159  0F44                     	;# 
  1160  0F45                     	;# 
  1161  0F46                     	;# 
  1162  0F47                     	;# 
  1163  0F48                     	;# 
  1164  0F49                     	;# 
  1165  0F4A                     	;# 
  1166  0F4B                     	;# 
  1167  0F4C                     	;# 
  1168  0F4E                     	;# 
  1169  0F4F                     	;# 
  1170  0F50                     	;# 
  1171  0F51                     	;# 
  1172  0F52                     	;# 
  1173  0F53                     	;# 
  1174  0F54                     	;# 
  1175  0F55                     	;# 
  1176  0F56                     	;# 
  1177  0F57                     	;# 
  1178  0F59                     	;# 
  1179  0F5A                     	;# 
  1180  0F5B                     	;# 
  1181  0F5C                     	;# 
  1182  0F5D                     	;# 
  1183  0F61                     	;# 
  1184  0F62                     	;# 
  1185  0F64                     	;# 
  1186  0F65                     	;# 
  1187  0F66                     	;# 
  1188  0F67                     	;# 
  1189  0F68                     	;# 
  1190  0F69                     	;# 
  1191  0F6A                     	;# 
  1192  0F6B                     	;# 
  1193  0F6C                     	;# 
  1194  0F6D                     	;# 
  1195  0FE4                     	;# 
  1196  0FE5                     	;# 
  1197  0FE6                     	;# 
  1198  0FE7                     	;# 
  1199  0FE8                     	;# 
  1200  0FE9                     	;# 
  1201  0FEA                     	;# 
  1202  0FEB                     	;# 
  1203  0FED                     	;# 
  1204  0FEE                     	;# 
  1205  0FEF                     	;# 
  1206  0000                     	;# 
  1207  0001                     	;# 
  1208  0002                     	;# 
  1209  0003                     	;# 
  1210  0004                     	;# 
  1211  0005                     	;# 
  1212  0006                     	;# 
  1213  0007                     	;# 
  1214  0008                     	;# 
  1215  0009                     	;# 
  1216  000A                     	;# 
  1217  000B                     	;# 
  1218  000C                     	;# 
  1219  000D                     	;# 
  1220  000E                     	;# 
  1221  000F                     	;# 
  1222  0010                     	;# 
  1223  0011                     	;# 
  1224  0012                     	;# 
  1225  0013                     	;# 
  1226  0014                     	;# 
  1227  0015                     	;# 
  1228  0016                     	;# 
  1229  0017                     	;# 
  1230  0018                     	;# 
  1231  0019                     	;# 
  1232  001A                     	;# 
  1233  001C                     	;# 
  1234  001C                     	;# 
  1235  001D                     	;# 
  1236  001D                     	;# 
  1237  001E                     	;# 
  1238  001F                     	;# 
  1239  008C                     	;# 
  1240  008C                     	;# 
  1241  008D                     	;# 
  1242  008E                     	;# 
  1243  008E                     	;# 
  1244  008F                     	;# 
  1245  0090                     	;# 
  1246  0090                     	;# 
  1247  0091                     	;# 
  1248  0093                     	;# 
  1249  0094                     	;# 
  1250  0095                     	;# 
  1251  0096                     	;# 
  1252  0097                     	;# 
  1253  0098                     	;# 
  1254  0099                     	;# 
  1255  009A                     	;# 
  1256  009B                     	;# 
  1257  009C                     	;# 
  1258  009D                     	;# 
  1259  009E                     	;# 
  1260  010C                     	;# 
  1261  010D                     	;# 
  1262  010E                     	;# 
  1263  010E                     	;# 
  1264  010F                     	;# 
  1265  0110                     	;# 
  1266  0110                     	;# 
  1267  0111                     	;# 
  1268  0112                     	;# 
  1269  0112                     	;# 
  1270  0113                     	;# 
  1271  0114                     	;# 
  1272  0114                     	;# 
  1273  0115                     	;# 
  1274  0116                     	;# 
  1275  0116                     	;# 
  1276  0117                     	;# 
  1277  0119                     	;# 
  1278  0119                     	;# 
  1279  0119                     	;# 
  1280  011A                     	;# 
  1281  011A                     	;# 
  1282  011A                     	;# 
  1283  011B                     	;# 
  1284  011B                     	;# 
  1285  011B                     	;# 
  1286  011B                     	;# 
  1287  011B                     	;# 
  1288  011C                     	;# 
  1289  011C                     	;# 
  1290  011C                     	;# 
  1291  011D                     	;# 
  1292  011D                     	;# 
  1293  011D                     	;# 
  1294  011E                     	;# 
  1295  011E                     	;# 
  1296  011E                     	;# 
  1297  011F                     	;# 
  1298  011F                     	;# 
  1299  011F                     	;# 
  1300  011F                     	;# 
  1301  011F                     	;# 
  1302  018C                     	;# 
  1303  018D                     	;# 
  1304  018E                     	;# 
  1305  018F                     	;# 
  1306  0190                     	;# 
  1307  0191                     	;# 
  1308  0192                     	;# 
  1309  0196                     	;# 
  1310  0197                     	;# 
  1311  0198                     	;# 
  1312  0199                     	;# 
  1313  019A                     	;# 
  1314  019B                     	;# 
  1315  019C                     	;# 
  1316  020C                     	;# 
  1317  020C                     	;# 
  1318  020D                     	;# 
  1319  020E                     	;# 
  1320  020F                     	;# 
  1321  020F                     	;# 
  1322  0210                     	;# 
  1323  0210                     	;# 
  1324  0211                     	;# 
  1325  0211                     	;# 
  1326  0212                     	;# 
  1327  0212                     	;# 
  1328  0213                     	;# 
  1329  0214                     	;# 
  1330  0215                     	;# 
  1331  0215                     	;# 
  1332  0216                     	;# 
  1333  0216                     	;# 
  1334  0217                     	;# 
  1335  0217                     	;# 
  1336  0218                     	;# 
  1337  0218                     	;# 
  1338  0219                     	;# 
  1339  021A                     	;# 
  1340  021B                     	;# 
  1341  021B                     	;# 
  1342  021C                     	;# 
  1343  021C                     	;# 
  1344  021D                     	;# 
  1345  021D                     	;# 
  1346  021E                     	;# 
  1347  021F                     	;# 
  1348  028C                     	;# 
  1349  028C                     	;# 
  1350  028D                     	;# 
  1351  028D                     	;# 
  1352  028E                     	;# 
  1353  028F                     	;# 
  1354  0290                     	;# 
  1355  0290                     	;# 
  1356  0291                     	;# 
  1357  0292                     	;# 
  1358  0292                     	;# 
  1359  0293                     	;# 
  1360  0293                     	;# 
  1361  0294                     	;# 
  1362  0295                     	;# 
  1363  0296                     	;# 
  1364  0296                     	;# 
  1365  0297                     	;# 
  1366  0298                     	;# 
  1367  0298                     	;# 
  1368  0299                     	;# 
  1369  0299                     	;# 
  1370  029A                     	;# 
  1371  029B                     	;# 
  1372  029C                     	;# 
  1373  029C                     	;# 
  1374  029D                     	;# 
  1375  030C                     	;# 
  1376  030C                     	;# 
  1377  030D                     	;# 
  1378  030E                     	;# 
  1379  030F                     	;# 
  1380  0310                     	;# 
  1381  0310                     	;# 
  1382  0311                     	;# 
  1383  0312                     	;# 
  1384  0313                     	;# 
  1385  0314                     	;# 
  1386  0314                     	;# 
  1387  0315                     	;# 
  1388  0316                     	;# 
  1389  0317                     	;# 
  1390  0318                     	;# 
  1391  0318                     	;# 
  1392  0319                     	;# 
  1393  031A                     	;# 
  1394  031B                     	;# 
  1395  031C                     	;# 
  1396  031C                     	;# 
  1397  031D                     	;# 
  1398  031E                     	;# 
  1399  031F                     	;# 
  1400  038C                     	;# 
  1401  038C                     	;# 
  1402  038D                     	;# 
  1403  038E                     	;# 
  1404  0390                     	;# 
  1405  0390                     	;# 
  1406  0391                     	;# 
  1407  0392                     	;# 
  1408  040C                     	;# 
  1409  040D                     	;# 
  1410  040E                     	;# 
  1411  040F                     	;# 
  1412  0410                     	;# 
  1413  0411                     	;# 
  1414  0416                     	;# 
  1415  0416                     	;# 
  1416  0417                     	;# 
  1417  0418                     	;# 
  1418  0418                     	;# 
  1419  0419                     	;# 
  1420  041A                     	;# 
  1421  041A                     	;# 
  1422  041B                     	;# 
  1423  041C                     	;# 
  1424  041C                     	;# 
  1425  041D                     	;# 
  1426  041E                     	;# 
  1427  041F                     	;# 
  1428  048C                     	;# 
  1429  048C                     	;# 
  1430  048D                     	;# 
  1431  048E                     	;# 
  1432  048F                     	;# 
  1433  048F                     	;# 
  1434  0490                     	;# 
  1435  0491                     	;# 
  1436  0492                     	;# 
  1437  0492                     	;# 
  1438  0493                     	;# 
  1439  0494                     	;# 
  1440  0495                     	;# 
  1441  0495                     	;# 
  1442  0496                     	;# 
  1443  0497                     	;# 
  1444  0498                     	;# 
  1445  0499                     	;# 
  1446  049A                     	;# 
  1447  049B                     	;# 
  1448  049C                     	;# 
  1449  049D                     	;# 
  1450  050C                     	;# 
  1451  050C                     	;# 
  1452  050D                     	;# 
  1453  050E                     	;# 
  1454  050F                     	;# 
  1455  050F                     	;# 
  1456  0510                     	;# 
  1457  0511                     	;# 
  1458  0512                     	;# 
  1459  0512                     	;# 
  1460  0513                     	;# 
  1461  0514                     	;# 
  1462  0515                     	;# 
  1463  0515                     	;# 
  1464  0516                     	;# 
  1465  0517                     	;# 
  1466  0518                     	;# 
  1467  0519                     	;# 
  1468  051A                     	;# 
  1469  051B                     	;# 
  1470  051C                     	;# 
  1471  051D                     	;# 
  1472  058C                     	;# 
  1473  058C                     	;# 
  1474  058D                     	;# 
  1475  058E                     	;# 
  1476  058F                     	;# 
  1477  058F                     	;# 
  1478  0590                     	;# 
  1479  0591                     	;# 
  1480  0592                     	;# 
  1481  0593                     	;# 
  1482  060C                     	;# 
  1483  060D                     	;# 
  1484  060E                     	;# 
  1485  060F                     	;# 
  1486  0610                     	;# 
  1487  0611                     	;# 
  1488  0612                     	;# 
  1489  0613                     	;# 
  1490  0614                     	;# 
  1491  0616                     	;# 
  1492  0617                     	;# 
  1493  0618                     	;# 
  1494  0619                     	;# 
  1495  061A                     	;# 
  1496  061B                     	;# 
  1497  061C                     	;# 
  1498  061D                     	;# 
  1499  061E                     	;# 
  1500  068C                     	;# 
  1501  068D                     	;# 
  1502  068E                     	;# 
  1503  068F                     	;# 
  1504  0690                     	;# 
  1505  0691                     	;# 
  1506  0692                     	;# 
  1507  0693                     	;# 
  1508  0694                     	;# 
  1509  070C                     	;# 
  1510  070D                     	;# 
  1511  070E                     	;# 
  1512  070F                     	;# 
  1513  0710                     	;# 
  1514  0711                     	;# 
  1515  0712                     	;# 
  1516  0713                     	;# 
  1517  0714                     	;# 
  1518  0716                     	;# 
  1519  0717                     	;# 
  1520  0718                     	;# 
  1521  0719                     	;# 
  1522  071A                     	;# 
  1523  071B                     	;# 
  1524  071C                     	;# 
  1525  071D                     	;# 
  1526  071E                     	;# 
  1527  0796                     	;# 
  1528  0797                     	;# 
  1529  0798                     	;# 
  1530  0799                     	;# 
  1531  079A                     	;# 
  1532  079B                     	;# 
  1533  080C                     	;# 
  1534  080D                     	;# 
  1535  080E                     	;# 
  1536  080F                     	;# 
  1537  0810                     	;# 
  1538  0811                     	;# 
  1539  0812                     	;# 
  1540  0813                     	;# 
  1541  0814                     	;# 
  1542  081A                     	;# 
  1543  081B                     	;# 
  1544  081C                     	;# 
  1545  081D                     	;# 
  1546  081E                     	;# 
  1547  081F                     	;# 
  1548  088C                     	;# 
  1549  088D                     	;# 
  1550  088E                     	;# 
  1551  088F                     	;# 
  1552  0890                     	;# 
  1553  0891                     	;# 
  1554  0892                     	;# 
  1555  0893                     	;# 
  1556  0895                     	;# 
  1557  0896                     	;# 
  1558  0897                     	;# 
  1559  0898                     	;# 
  1560  0899                     	;# 
  1561  089A                     	;# 
  1562  089B                     	;# 
  1563  090C                     	;# 
  1564  090E                     	;# 
  1565  090F                     	;# 
  1566  091F                     	;# 
  1567  091F                     	;# 
  1568  098F                     	;# 
  1569  098F                     	;# 
  1570  0990                     	;# 
  1571  0991                     	;# 
  1572  0992                     	;# 
  1573  0993                     	;# 
  1574  0994                     	;# 
  1575  0995                     	;# 
  1576  0996                     	;# 
  1577  0997                     	;# 
  1578  0E0F                     	;# 
  1579  0E10                     	;# 
  1580  0E11                     	;# 
  1581  0E12                     	;# 
  1582  0E13                     	;# 
  1583  0E14                     	;# 
  1584  0E15                     	;# 
  1585  0E16                     	;# 
  1586  0E17                     	;# 
  1587  0E18                     	;# 
  1588  0E19                     	;# 
  1589  0E1A                     	;# 
  1590  0E1B                     	;# 
  1591  0E1C                     	;# 
  1592  0E1D                     	;# 
  1593  0E1E                     	;# 
  1594  0E1F                     	;# 
  1595  0E20                     	;# 
  1596  0E21                     	;# 
  1597  0E22                     	;# 
  1598  0E23                     	;# 
  1599  0E24                     	;# 
  1600  0E25                     	;# 
  1601  0E26                     	;# 
  1602  0E27                     	;# 
  1603  0E28                     	;# 
  1604  0E29                     	;# 
  1605  0E2A                     	;# 
  1606  0E2B                     	;# 
  1607  0E2C                     	;# 
  1608  0E2D                     	;# 
  1609  0E2E                     	;# 
  1610  0E2F                     	;# 
  1611  0E30                     	;# 
  1612  0E31                     	;# 
  1613  0E32                     	;# 
  1614  0E33                     	;# 
  1615  0E34                     	;# 
  1616  0E35                     	;# 
  1617  0E36                     	;# 
  1618  0E37                     	;# 
  1619  0E8F                     	;# 
  1620  0E90                     	;# 
  1621  0E91                     	;# 
  1622  0E92                     	;# 
  1623  0E93                     	;# 
  1624  0E94                     	;# 
  1625  0E95                     	;# 
  1626  0E96                     	;# 
  1627  0E97                     	;# 
  1628  0E9C                     	;# 
  1629  0E9D                     	;# 
  1630  0E9E                     	;# 
  1631  0EA1                     	;# 
  1632  0EA2                     	;# 
  1633  0EA3                     	;# 
  1634  0EA4                     	;# 
  1635  0EA5                     	;# 
  1636  0EA9                     	;# 
  1637  0EAA                     	;# 
  1638  0EAB                     	;# 
  1639  0EAC                     	;# 
  1640  0EB1                     	;# 
  1641  0EB2                     	;# 
  1642  0EB3                     	;# 
  1643  0EB8                     	;# 
  1644  0EB9                     	;# 
  1645  0EBA                     	;# 
  1646  0EBB                     	;# 
  1647  0EBC                     	;# 
  1648  0EBD                     	;# 
  1649  0EBE                     	;# 
  1650  0EC3                     	;# 
  1651  0EC5                     	;# 
  1652  0EC6                     	;# 
  1653  0EC7                     	;# 
  1654  0EC8                     	;# 
  1655  0EC9                     	;# 
  1656  0ECA                     	;# 
  1657  0ECB                     	;# 
  1658  0ECC                     	;# 
  1659  0F10                     	;# 
  1660  0F11                     	;# 
  1661  0F12                     	;# 
  1662  0F13                     	;# 
  1663  0F14                     	;# 
  1664  0F15                     	;# 
  1665  0F16                     	;# 
  1666  0F17                     	;# 
  1667  0F18                     	;# 
  1668  0F19                     	;# 
  1669  0F1A                     	;# 
  1670  0F1B                     	;# 
  1671  0F1C                     	;# 
  1672  0F1D                     	;# 
  1673  0F1E                     	;# 
  1674  0F1F                     	;# 
  1675  0F20                     	;# 
  1676  0F21                     	;# 
  1677  0F22                     	;# 
  1678  0F23                     	;# 
  1679  0F24                     	;# 
  1680  0F25                     	;# 
  1681  0F26                     	;# 
  1682  0F27                     	;# 
  1683  0F28                     	;# 
  1684  0F29                     	;# 
  1685  0F2A                     	;# 
  1686  0F2B                     	;# 
  1687  0F2C                     	;# 
  1688  0F2D                     	;# 
  1689  0F2E                     	;# 
  1690  0F2F                     	;# 
  1691  0F30                     	;# 
  1692  0F31                     	;# 
  1693  0F32                     	;# 
  1694  0F38                     	;# 
  1695  0F39                     	;# 
  1696  0F3A                     	;# 
  1697  0F3B                     	;# 
  1698  0F3C                     	;# 
  1699  0F3D                     	;# 
  1700  0F3E                     	;# 
  1701  0F3F                     	;# 
  1702  0F40                     	;# 
  1703  0F41                     	;# 
  1704  0F43                     	;# 
  1705  0F44                     	;# 
  1706  0F45                     	;# 
  1707  0F46                     	;# 
  1708  0F47                     	;# 
  1709  0F48                     	;# 
  1710  0F49                     	;# 
  1711  0F4A                     	;# 
  1712  0F4B                     	;# 
  1713  0F4C                     	;# 
  1714  0F4E                     	;# 
  1715  0F4F                     	;# 
  1716  0F50                     	;# 
  1717  0F51                     	;# 
  1718  0F52                     	;# 
  1719  0F53                     	;# 
  1720  0F54                     	;# 
  1721  0F55                     	;# 
  1722  0F56                     	;# 
  1723  0F57                     	;# 
  1724  0F59                     	;# 
  1725  0F5A                     	;# 
  1726  0F5B                     	;# 
  1727  0F5C                     	;# 
  1728  0F5D                     	;# 
  1729  0F61                     	;# 
  1730  0F62                     	;# 
  1731  0F64                     	;# 
  1732  0F65                     	;# 
  1733  0F66                     	;# 
  1734  0F67                     	;# 
  1735  0F68                     	;# 
  1736  0F69                     	;# 
  1737  0F6A                     	;# 
  1738  0F6B                     	;# 
  1739  0F6C                     	;# 
  1740  0F6D                     	;# 
  1741  0FE4                     	;# 
  1742  0FE5                     	;# 
  1743  0FE6                     	;# 
  1744  0FE7                     	;# 
  1745  0FE8                     	;# 
  1746  0FE9                     	;# 
  1747  0FEA                     	;# 
  1748  0FEB                     	;# 
  1749  0FED                     	;# 
  1750  0FEE                     	;# 
  1751  0FEF                     	;# 
  1752  0000                     	;# 
  1753  0001                     	;# 
  1754  0002                     	;# 
  1755  0003                     	;# 
  1756  0004                     	;# 
  1757  0005                     	;# 
  1758  0006                     	;# 
  1759  0007                     	;# 
  1760  0008                     	;# 
  1761  0009                     	;# 
  1762  000A                     	;# 
  1763  000B                     	;# 
  1764  000C                     	;# 
  1765  000D                     	;# 
  1766  000E                     	;# 
  1767  000F                     	;# 
  1768  0010                     	;# 
  1769  0011                     	;# 
  1770  0012                     	;# 
  1771  0013                     	;# 
  1772  0014                     	;# 
  1773  0015                     	;# 
  1774  0016                     	;# 
  1775  0017                     	;# 
  1776  0018                     	;# 
  1777  0019                     	;# 
  1778  001A                     	;# 
  1779  001C                     	;# 
  1780  001C                     	;# 
  1781  001D                     	;# 
  1782  001D                     	;# 
  1783  001E                     	;# 
  1784  001F                     	;# 
  1785  008C                     	;# 
  1786  008C                     	;# 
  1787  008D                     	;# 
  1788  008E                     	;# 
  1789  008E                     	;# 
  1790  008F                     	;# 
  1791  0090                     	;# 
  1792  0090                     	;# 
  1793  0091                     	;# 
  1794  0093                     	;# 
  1795  0094                     	;# 
  1796  0095                     	;# 
  1797  0096                     	;# 
  1798  0097                     	;# 
  1799  0098                     	;# 
  1800  0099                     	;# 
  1801  009A                     	;# 
  1802  009B                     	;# 
  1803  009C                     	;# 
  1804  009D                     	;# 
  1805  009E                     	;# 
  1806  010C                     	;# 
  1807  010D                     	;# 
  1808  010E                     	;# 
  1809  010E                     	;# 
  1810  010F                     	;# 
  1811  0110                     	;# 
  1812  0110                     	;# 
  1813  0111                     	;# 
  1814  0112                     	;# 
  1815  0112                     	;# 
  1816  0113                     	;# 
  1817  0114                     	;# 
  1818  0114                     	;# 
  1819  0115                     	;# 
  1820  0116                     	;# 
  1821  0116                     	;# 
  1822  0117                     	;# 
  1823  0119                     	;# 
  1824  0119                     	;# 
  1825  0119                     	;# 
  1826  011A                     	;# 
  1827  011A                     	;# 
  1828  011A                     	;# 
  1829  011B                     	;# 
  1830  011B                     	;# 
  1831  011B                     	;# 
  1832  011B                     	;# 
  1833  011B                     	;# 
  1834  011C                     	;# 
  1835  011C                     	;# 
  1836  011C                     	;# 
  1837  011D                     	;# 
  1838  011D                     	;# 
  1839  011D                     	;# 
  1840  011E                     	;# 
  1841  011E                     	;# 
  1842  011E                     	;# 
  1843  011F                     	;# 
  1844  011F                     	;# 
  1845  011F                     	;# 
  1846  011F                     	;# 
  1847  011F                     	;# 
  1848  018C                     	;# 
  1849  018D                     	;# 
  1850  018E                     	;# 
  1851  018F                     	;# 
  1852  0190                     	;# 
  1853  0191                     	;# 
  1854  0192                     	;# 
  1855  0196                     	;# 
  1856  0197                     	;# 
  1857  0198                     	;# 
  1858  0199                     	;# 
  1859  019A                     	;# 
  1860  019B                     	;# 
  1861  019C                     	;# 
  1862  020C                     	;# 
  1863  020C                     	;# 
  1864  020D                     	;# 
  1865  020E                     	;# 
  1866  020F                     	;# 
  1867  020F                     	;# 
  1868  0210                     	;# 
  1869  0210                     	;# 
  1870  0211                     	;# 
  1871  0211                     	;# 
  1872  0212                     	;# 
  1873  0212                     	;# 
  1874  0213                     	;# 
  1875  0214                     	;# 
  1876  0215                     	;# 
  1877  0215                     	;# 
  1878  0216                     	;# 
  1879  0216                     	;# 
  1880  0217                     	;# 
  1881  0217                     	;# 
  1882  0218                     	;# 
  1883  0218                     	;# 
  1884  0219                     	;# 
  1885  021A                     	;# 
  1886  021B                     	;# 
  1887  021B                     	;# 
  1888  021C                     	;# 
  1889  021C                     	;# 
  1890  021D                     	;# 
  1891  021D                     	;# 
  1892  021E                     	;# 
  1893  021F                     	;# 
  1894  028C                     	;# 
  1895  028C                     	;# 
  1896  028D                     	;# 
  1897  028D                     	;# 
  1898  028E                     	;# 
  1899  028F                     	;# 
  1900  0290                     	;# 
  1901  0290                     	;# 
  1902  0291                     	;# 
  1903  0292                     	;# 
  1904  0292                     	;# 
  1905  0293                     	;# 
  1906  0293                     	;# 
  1907  0294                     	;# 
  1908  0295                     	;# 
  1909  0296                     	;# 
  1910  0296                     	;# 
  1911  0297                     	;# 
  1912  0298                     	;# 
  1913  0298                     	;# 
  1914  0299                     	;# 
  1915  0299                     	;# 
  1916  029A                     	;# 
  1917  029B                     	;# 
  1918  029C                     	;# 
  1919  029C                     	;# 
  1920  029D                     	;# 
  1921  030C                     	;# 
  1922  030C                     	;# 
  1923  030D                     	;# 
  1924  030E                     	;# 
  1925  030F                     	;# 
  1926  0310                     	;# 
  1927  0310                     	;# 
  1928  0311                     	;# 
  1929  0312                     	;# 
  1930  0313                     	;# 
  1931  0314                     	;# 
  1932  0314                     	;# 
  1933  0315                     	;# 
  1934  0316                     	;# 
  1935  0317                     	;# 
  1936  0318                     	;# 
  1937  0318                     	;# 
  1938  0319                     	;# 
  1939  031A                     	;# 
  1940  031B                     	;# 
  1941  031C                     	;# 
  1942  031C                     	;# 
  1943  031D                     	;# 
  1944  031E                     	;# 
  1945  031F                     	;# 
  1946  038C                     	;# 
  1947  038C                     	;# 
  1948  038D                     	;# 
  1949  038E                     	;# 
  1950  0390                     	;# 
  1951  0390                     	;# 
  1952  0391                     	;# 
  1953  0392                     	;# 
  1954  040C                     	;# 
  1955  040D                     	;# 
  1956  040E                     	;# 
  1957  040F                     	;# 
  1958  0410                     	;# 
  1959  0411                     	;# 
  1960  0416                     	;# 
  1961  0416                     	;# 
  1962  0417                     	;# 
  1963  0418                     	;# 
  1964  0418                     	;# 
  1965  0419                     	;# 
  1966  041A                     	;# 
  1967  041A                     	;# 
  1968  041B                     	;# 
  1969  041C                     	;# 
  1970  041C                     	;# 
  1971  041D                     	;# 
  1972  041E                     	;# 
  1973  041F                     	;# 
  1974  048C                     	;# 
  1975  048C                     	;# 
  1976  048D                     	;# 
  1977  048E                     	;# 
  1978  048F                     	;# 
  1979  048F                     	;# 
  1980  0490                     	;# 
  1981  0491                     	;# 
  1982  0492                     	;# 
  1983  0492                     	;# 
  1984  0493                     	;# 
  1985  0494                     	;# 
  1986  0495                     	;# 
  1987  0495                     	;# 
  1988  0496                     	;# 
  1989  0497                     	;# 
  1990  0498                     	;# 
  1991  0499                     	;# 
  1992  049A                     	;# 
  1993  049B                     	;# 
  1994  049C                     	;# 
  1995  049D                     	;# 
  1996  050C                     	;# 
  1997  050C                     	;# 
  1998  050D                     	;# 
  1999  050E                     	;# 
  2000  050F                     	;# 
  2001  050F                     	;# 
  2002  0510                     	;# 
  2003  0511                     	;# 
  2004  0512                     	;# 
  2005  0512                     	;# 
  2006  0513                     	;# 
  2007  0514                     	;# 
  2008  0515                     	;# 
  2009  0515                     	;# 
  2010  0516                     	;# 
  2011  0517                     	;# 
  2012  0518                     	;# 
  2013  0519                     	;# 
  2014  051A                     	;# 
  2015  051B                     	;# 
  2016  051C                     	;# 
  2017  051D                     	;# 
  2018  058C                     	;# 
  2019  058C                     	;# 
  2020  058D                     	;# 
  2021  058E                     	;# 
  2022  058F                     	;# 
  2023  058F                     	;# 
  2024  0590                     	;# 
  2025  0591                     	;# 
  2026  0592                     	;# 
  2027  0593                     	;# 
  2028  060C                     	;# 
  2029  060D                     	;# 
  2030  060E                     	;# 
  2031  060F                     	;# 
  2032  0610                     	;# 
  2033  0611                     	;# 
  2034  0612                     	;# 
  2035  0613                     	;# 
  2036  0614                     	;# 
  2037  0616                     	;# 
  2038  0617                     	;# 
  2039  0618                     	;# 
  2040  0619                     	;# 
  2041  061A                     	;# 
  2042  061B                     	;# 
  2043  061C                     	;# 
  2044  061D                     	;# 
  2045  061E                     	;# 
  2046  068C                     	;# 
  2047  068D                     	;# 
  2048  068E                     	;# 
  2049  068F                     	;# 
  2050  0690                     	;# 
  2051  0691                     	;# 
  2052  0692                     	;# 
  2053  0693                     	;# 
  2054  0694                     	;# 
  2055  070C                     	;# 
  2056  070D                     	;# 
  2057  070E                     	;# 
  2058  070F                     	;# 
  2059  0710                     	;# 
  2060  0711                     	;# 
  2061  0712                     	;# 
  2062  0713                     	;# 
  2063  0714                     	;# 
  2064  0716                     	;# 
  2065  0717                     	;# 
  2066  0718                     	;# 
  2067  0719                     	;# 
  2068  071A                     	;# 
  2069  071B                     	;# 
  2070  071C                     	;# 
  2071  071D                     	;# 
  2072  071E                     	;# 
  2073  0796                     	;# 
  2074  0797                     	;# 
  2075  0798                     	;# 
  2076  0799                     	;# 
  2077  079A                     	;# 
  2078  079B                     	;# 
  2079  080C                     	;# 
  2080  080D                     	;# 
  2081  080E                     	;# 
  2082  080F                     	;# 
  2083  0810                     	;# 
  2084  0811                     	;# 
  2085  0812                     	;# 
  2086  0813                     	;# 
  2087  0814                     	;# 
  2088  081A                     	;# 
  2089  081B                     	;# 
  2090  081C                     	;# 
  2091  081D                     	;# 
  2092  081E                     	;# 
  2093  081F                     	;# 
  2094  088C                     	;# 
  2095  088D                     	;# 
  2096  088E                     	;# 
  2097  088F                     	;# 
  2098  0890                     	;# 
  2099  0891                     	;# 
  2100  0892                     	;# 
  2101  0893                     	;# 
  2102  0895                     	;# 
  2103  0896                     	;# 
  2104  0897                     	;# 
  2105  0898                     	;# 
  2106  0899                     	;# 
  2107  089A                     	;# 
  2108  089B                     	;# 
  2109  090C                     	;# 
  2110  090E                     	;# 
  2111  090F                     	;# 
  2112  091F                     	;# 
  2113  091F                     	;# 
  2114  098F                     	;# 
  2115  098F                     	;# 
  2116  0990                     	;# 
  2117  0991                     	;# 
  2118  0992                     	;# 
  2119  0993                     	;# 
  2120  0994                     	;# 
  2121  0995                     	;# 
  2122  0996                     	;# 
  2123  0997                     	;# 
  2124  0E0F                     	;# 
  2125  0E10                     	;# 
  2126  0E11                     	;# 
  2127  0E12                     	;# 
  2128  0E13                     	;# 
  2129  0E14                     	;# 
  2130  0E15                     	;# 
  2131  0E16                     	;# 
  2132  0E17                     	;# 
  2133  0E18                     	;# 
  2134  0E19                     	;# 
  2135  0E1A                     	;# 
  2136  0E1B                     	;# 
  2137  0E1C                     	;# 
  2138  0E1D                     	;# 
  2139  0E1E                     	;# 
  2140  0E1F                     	;# 
  2141  0E20                     	;# 
  2142  0E21                     	;# 
  2143  0E22                     	;# 
  2144  0E23                     	;# 
  2145  0E24                     	;# 
  2146  0E25                     	;# 
  2147  0E26                     	;# 
  2148  0E27                     	;# 
  2149  0E28                     	;# 
  2150  0E29                     	;# 
  2151  0E2A                     	;# 
  2152  0E2B                     	;# 
  2153  0E2C                     	;# 
  2154  0E2D                     	;# 
  2155  0E2E                     	;# 
  2156  0E2F                     	;# 
  2157  0E30                     	;# 
  2158  0E31                     	;# 
  2159  0E32                     	;# 
  2160  0E33                     	;# 
  2161  0E34                     	;# 
  2162  0E35                     	;# 
  2163  0E36                     	;# 
  2164  0E37                     	;# 
  2165  0E8F                     	;# 
  2166  0E90                     	;# 
  2167  0E91                     	;# 
  2168  0E92                     	;# 
  2169  0E93                     	;# 
  2170  0E94                     	;# 
  2171  0E95                     	;# 
  2172  0E96                     	;# 
  2173  0E97                     	;# 
  2174  0E9C                     	;# 
  2175  0E9D                     	;# 
  2176  0E9E                     	;# 
  2177  0EA1                     	;# 
  2178  0EA2                     	;# 
  2179  0EA3                     	;# 
  2180  0EA4                     	;# 
  2181  0EA5                     	;# 
  2182  0EA9                     	;# 
  2183  0EAA                     	;# 
  2184  0EAB                     	;# 
  2185  0EAC                     	;# 
  2186  0EB1                     	;# 
  2187  0EB2                     	;# 
  2188  0EB3                     	;# 
  2189  0EB8                     	;# 
  2190  0EB9                     	;# 
  2191  0EBA                     	;# 
  2192  0EBB                     	;# 
  2193  0EBC                     	;# 
  2194  0EBD                     	;# 
  2195  0EBE                     	;# 
  2196  0EC3                     	;# 
  2197  0EC5                     	;# 
  2198  0EC6                     	;# 
  2199  0EC7                     	;# 
  2200  0EC8                     	;# 
  2201  0EC9                     	;# 
  2202  0ECA                     	;# 
  2203  0ECB                     	;# 
  2204  0ECC                     	;# 
  2205  0F10                     	;# 
  2206  0F11                     	;# 
  2207  0F12                     	;# 
  2208  0F13                     	;# 
  2209  0F14                     	;# 
  2210  0F15                     	;# 
  2211  0F16                     	;# 
  2212  0F17                     	;# 
  2213  0F18                     	;# 
  2214  0F19                     	;# 
  2215  0F1A                     	;# 
  2216  0F1B                     	;# 
  2217  0F1C                     	;# 
  2218  0F1D                     	;# 
  2219  0F1E                     	;# 
  2220  0F1F                     	;# 
  2221  0F20                     	;# 
  2222  0F21                     	;# 
  2223  0F22                     	;# 
  2224  0F23                     	;# 
  2225  0F24                     	;# 
  2226  0F25                     	;# 
  2227  0F26                     	;# 
  2228  0F27                     	;# 
  2229  0F28                     	;# 
  2230  0F29                     	;# 
  2231  0F2A                     	;# 
  2232  0F2B                     	;# 
  2233  0F2C                     	;# 
  2234  0F2D                     	;# 
  2235  0F2E                     	;# 
  2236  0F2F                     	;# 
  2237  0F30                     	;# 
  2238  0F31                     	;# 
  2239  0F32                     	;# 
  2240  0F38                     	;# 
  2241  0F39                     	;# 
  2242  0F3A                     	;# 
  2243  0F3B                     	;# 
  2244  0F3C                     	;# 
  2245  0F3D                     	;# 
  2246  0F3E                     	;# 
  2247  0F3F                     	;# 
  2248  0F40                     	;# 
  2249  0F41                     	;# 
  2250  0F43                     	;# 
  2251  0F44                     	;# 
  2252  0F45                     	;# 
  2253  0F46                     	;# 
  2254  0F47                     	;# 
  2255  0F48                     	;# 
  2256  0F49                     	;# 
  2257  0F4A                     	;# 
  2258  0F4B                     	;# 
  2259  0F4C                     	;# 
  2260  0F4E                     	;# 
  2261  0F4F                     	;# 
  2262  0F50                     	;# 
  2263  0F51                     	;# 
  2264  0F52                     	;# 
  2265  0F53                     	;# 
  2266  0F54                     	;# 
  2267  0F55                     	;# 
  2268  0F56                     	;# 
  2269  0F57                     	;# 
  2270  0F59                     	;# 
  2271  0F5A                     	;# 
  2272  0F5B                     	;# 
  2273  0F5C                     	;# 
  2274  0F5D                     	;# 
  2275  0F61                     	;# 
  2276  0F62                     	;# 
  2277  0F64                     	;# 
  2278  0F65                     	;# 
  2279  0F66                     	;# 
  2280  0F67                     	;# 
  2281  0F68                     	;# 
  2282  0F69                     	;# 
  2283  0F6A                     	;# 
  2284  0F6B                     	;# 
  2285  0F6C                     	;# 
  2286  0F6D                     	;# 
  2287  0FE4                     	;# 
  2288  0FE5                     	;# 
  2289  0FE6                     	;# 
  2290  0FE7                     	;# 
  2291  0FE8                     	;# 
  2292  0FE9                     	;# 
  2293  0FEA                     	;# 
  2294  0FEB                     	;# 
  2295  0FED                     	;# 
  2296  0FEE                     	;# 
  2297  0FEF                     	;# 
  2298  0000                     	;# 
  2299  0001                     	;# 
  2300  0002                     	;# 
  2301  0003                     	;# 
  2302  0004                     	;# 
  2303  0005                     	;# 
  2304  0006                     	;# 
  2305  0007                     	;# 
  2306  0008                     	;# 
  2307  0009                     	;# 
  2308  000A                     	;# 
  2309  000B                     	;# 
  2310  000C                     	;# 
  2311  000D                     	;# 
  2312  000E                     	;# 
  2313  000F                     	;# 
  2314  0010                     	;# 
  2315  0011                     	;# 
  2316  0012                     	;# 
  2317  0013                     	;# 
  2318  0014                     	;# 
  2319  0015                     	;# 
  2320  0016                     	;# 
  2321  0017                     	;# 
  2322  0018                     	;# 
  2323  0019                     	;# 
  2324  001A                     	;# 
  2325  001C                     	;# 
  2326  001C                     	;# 
  2327  001D                     	;# 
  2328  001D                     	;# 
  2329  001E                     	;# 
  2330  001F                     	;# 
  2331  008C                     	;# 
  2332  008C                     	;# 
  2333  008D                     	;# 
  2334  008E                     	;# 
  2335  008E                     	;# 
  2336  008F                     	;# 
  2337  0090                     	;# 
  2338  0090                     	;# 
  2339  0091                     	;# 
  2340  0093                     	;# 
  2341  0094                     	;# 
  2342  0095                     	;# 
  2343  0096                     	;# 
  2344  0097                     	;# 
  2345  0098                     	;# 
  2346  0099                     	;# 
  2347  009A                     	;# 
  2348  009B                     	;# 
  2349  009C                     	;# 
  2350  009D                     	;# 
  2351  009E                     	;# 
  2352  010C                     	;# 
  2353  010D                     	;# 
  2354  010E                     	;# 
  2355  010E                     	;# 
  2356  010F                     	;# 
  2357  0110                     	;# 
  2358  0110                     	;# 
  2359  0111                     	;# 
  2360  0112                     	;# 
  2361  0112                     	;# 
  2362  0113                     	;# 
  2363  0114                     	;# 
  2364  0114                     	;# 
  2365  0115                     	;# 
  2366  0116                     	;# 
  2367  0116                     	;# 
  2368  0117                     	;# 
  2369  0119                     	;# 
  2370  0119                     	;# 
  2371  0119                     	;# 
  2372  011A                     	;# 
  2373  011A                     	;# 
  2374  011A                     	;# 
  2375  011B                     	;# 
  2376  011B                     	;# 
  2377  011B                     	;# 
  2378  011B                     	;# 
  2379  011B                     	;# 
  2380  011C                     	;# 
  2381  011C                     	;# 
  2382  011C                     	;# 
  2383  011D                     	;# 
  2384  011D                     	;# 
  2385  011D                     	;# 
  2386  011E                     	;# 
  2387  011E                     	;# 
  2388  011E                     	;# 
  2389  011F                     	;# 
  2390  011F                     	;# 
  2391  011F                     	;# 
  2392  011F                     	;# 
  2393  011F                     	;# 
  2394  018C                     	;# 
  2395  018D                     	;# 
  2396  018E                     	;# 
  2397  018F                     	;# 
  2398  0190                     	;# 
  2399  0191                     	;# 
  2400  0192                     	;# 
  2401  0196                     	;# 
  2402  0197                     	;# 
  2403  0198                     	;# 
  2404  0199                     	;# 
  2405  019A                     	;# 
  2406  019B                     	;# 
  2407  019C                     	;# 
  2408  020C                     	;# 
  2409  020C                     	;# 
  2410  020D                     	;# 
  2411  020E                     	;# 
  2412  020F                     	;# 
  2413  020F                     	;# 
  2414  0210                     	;# 
  2415  0210                     	;# 
  2416  0211                     	;# 
  2417  0211                     	;# 
  2418  0212                     	;# 
  2419  0212                     	;# 
  2420  0213                     	;# 
  2421  0214                     	;# 
  2422  0215                     	;# 
  2423  0215                     	;# 
  2424  0216                     	;# 
  2425  0216                     	;# 
  2426  0217                     	;# 
  2427  0217                     	;# 
  2428  0218                     	;# 
  2429  0218                     	;# 
  2430  0219                     	;# 
  2431  021A                     	;# 
  2432  021B                     	;# 
  2433  021B                     	;# 
  2434  021C                     	;# 
  2435  021C                     	;# 
  2436  021D                     	;# 
  2437  021D                     	;# 
  2438  021E                     	;# 
  2439  021F                     	;# 
  2440  028C                     	;# 
  2441  028C                     	;# 
  2442  028D                     	;# 
  2443  028D                     	;# 
  2444  028E                     	;# 
  2445  028F                     	;# 
  2446  0290                     	;# 
  2447  0290                     	;# 
  2448  0291                     	;# 
  2449  0292                     	;# 
  2450  0292                     	;# 
  2451  0293                     	;# 
  2452  0293                     	;# 
  2453  0294                     	;# 
  2454  0295                     	;# 
  2455  0296                     	;# 
  2456  0296                     	;# 
  2457  0297                     	;# 
  2458  0298                     	;# 
  2459  0298                     	;# 
  2460  0299                     	;# 
  2461  0299                     	;# 
  2462  029A                     	;# 
  2463  029B                     	;# 
  2464  029C                     	;# 
  2465  029C                     	;# 
  2466  029D                     	;# 
  2467  030C                     	;# 
  2468  030C                     	;# 
  2469  030D                     	;# 
  2470  030E                     	;# 
  2471  030F                     	;# 
  2472  0310                     	;# 
  2473  0310                     	;# 
  2474  0311                     	;# 
  2475  0312                     	;# 
  2476  0313                     	;# 
  2477  0314                     	;# 
  2478  0314                     	;# 
  2479  0315                     	;# 
  2480  0316                     	;# 
  2481  0317                     	;# 
  2482  0318                     	;# 
  2483  0318                     	;# 
  2484  0319                     	;# 
  2485  031A                     	;# 
  2486  031B                     	;# 
  2487  031C                     	;# 
  2488  031C                     	;# 
  2489  031D                     	;# 
  2490  031E                     	;# 
  2491  031F                     	;# 
  2492  038C                     	;# 
  2493  038C                     	;# 
  2494  038D                     	;# 
  2495  038E                     	;# 
  2496  0390                     	;# 
  2497  0390                     	;# 
  2498  0391                     	;# 
  2499  0392                     	;# 
  2500  040C                     	;# 
  2501  040D                     	;# 
  2502  040E                     	;# 
  2503  040F                     	;# 
  2504  0410                     	;# 
  2505  0411                     	;# 
  2506  0416                     	;# 
  2507  0416                     	;# 
  2508  0417                     	;# 
  2509  0418                     	;# 
  2510  0418                     	;# 
  2511  0419                     	;# 
  2512  041A                     	;# 
  2513  041A                     	;# 
  2514  041B                     	;# 
  2515  041C                     	;# 
  2516  041C                     	;# 
  2517  041D                     	;# 
  2518  041E                     	;# 
  2519  041F                     	;# 
  2520  048C                     	;# 
  2521  048C                     	;# 
  2522  048D                     	;# 
  2523  048E                     	;# 
  2524  048F                     	;# 
  2525  048F                     	;# 
  2526  0490                     	;# 
  2527  0491                     	;# 
  2528  0492                     	;# 
  2529  0492                     	;# 
  2530  0493                     	;# 
  2531  0494                     	;# 
  2532  0495                     	;# 
  2533  0495                     	;# 
  2534  0496                     	;# 
  2535  0497                     	;# 
  2536  0498                     	;# 
  2537  0499                     	;# 
  2538  049A                     	;# 
  2539  049B                     	;# 
  2540  049C                     	;# 
  2541  049D                     	;# 
  2542  050C                     	;# 
  2543  050C                     	;# 
  2544  050D                     	;# 
  2545  050E                     	;# 
  2546  050F                     	;# 
  2547  050F                     	;# 
  2548  0510                     	;# 
  2549  0511                     	;# 
  2550  0512                     	;# 
  2551  0512                     	;# 
  2552  0513                     	;# 
  2553  0514                     	;# 
  2554  0515                     	;# 
  2555  0515                     	;# 
  2556  0516                     	;# 
  2557  0517                     	;# 
  2558  0518                     	;# 
  2559  0519                     	;# 
  2560  051A                     	;# 
  2561  051B                     	;# 
  2562  051C                     	;# 
  2563  051D                     	;# 
  2564  058C                     	;# 
  2565  058C                     	;# 
  2566  058D                     	;# 
  2567  058E                     	;# 
  2568  058F                     	;# 
  2569  058F                     	;# 
  2570  0590                     	;# 
  2571  0591                     	;# 
  2572  0592                     	;# 
  2573  0593                     	;# 
  2574  060C                     	;# 
  2575  060D                     	;# 
  2576  060E                     	;# 
  2577  060F                     	;# 
  2578  0610                     	;# 
  2579  0611                     	;# 
  2580  0612                     	;# 
  2581  0613                     	;# 
  2582  0614                     	;# 
  2583  0616                     	;# 
  2584  0617                     	;# 
  2585  0618                     	;# 
  2586  0619                     	;# 
  2587  061A                     	;# 
  2588  061B                     	;# 
  2589  061C                     	;# 
  2590  061D                     	;# 
  2591  061E                     	;# 
  2592  068C                     	;# 
  2593  068D                     	;# 
  2594  068E                     	;# 
  2595  068F                     	;# 
  2596  0690                     	;# 
  2597  0691                     	;# 
  2598  0692                     	;# 
  2599  0693                     	;# 
  2600  0694                     	;# 
  2601  070C                     	;# 
  2602  070D                     	;# 
  2603  070E                     	;# 
  2604  070F                     	;# 
  2605  0710                     	;# 
  2606  0711                     	;# 
  2607  0712                     	;# 
  2608  0713                     	;# 
  2609  0714                     	;# 
  2610  0716                     	;# 
  2611  0717                     	;# 
  2612  0718                     	;# 
  2613  0719                     	;# 
  2614  071A                     	;# 
  2615  071B                     	;# 
  2616  071C                     	;# 
  2617  071D                     	;# 
  2618  071E                     	;# 
  2619  0796                     	;# 
  2620  0797                     	;# 
  2621  0798                     	;# 
  2622  0799                     	;# 
  2623  079A                     	;# 
  2624  079B                     	;# 
  2625  080C                     	;# 
  2626  080D                     	;# 
  2627  080E                     	;# 
  2628  080F                     	;# 
  2629  0810                     	;# 
  2630  0811                     	;# 
  2631  0812                     	;# 
  2632  0813                     	;# 
  2633  0814                     	;# 
  2634  081A                     	;# 
  2635  081B                     	;# 
  2636  081C                     	;# 
  2637  081D                     	;# 
  2638  081E                     	;# 
  2639  081F                     	;# 
  2640  088C                     	;# 
  2641  088D                     	;# 
  2642  088E                     	;# 
  2643  088F                     	;# 
  2644  0890                     	;# 
  2645  0891                     	;# 
  2646  0892                     	;# 
  2647  0893                     	;# 
  2648  0895                     	;# 
  2649  0896                     	;# 
  2650  0897                     	;# 
  2651  0898                     	;# 
  2652  0899                     	;# 
  2653  089A                     	;# 
  2654  089B                     	;# 
  2655  090C                     	;# 
  2656  090E                     	;# 
  2657  090F                     	;# 
  2658  091F                     	;# 
  2659  091F                     	;# 
  2660  098F                     	;# 
  2661  098F                     	;# 
  2662  0990                     	;# 
  2663  0991                     	;# 
  2664  0992                     	;# 
  2665  0993                     	;# 
  2666  0994                     	;# 
  2667  0995                     	;# 
  2668  0996                     	;# 
  2669  0997                     	;# 
  2670  0E0F                     	;# 
  2671  0E10                     	;# 
  2672  0E11                     	;# 
  2673  0E12                     	;# 
  2674  0E13                     	;# 
  2675  0E14                     	;# 
  2676  0E15                     	;# 
  2677  0E16                     	;# 
  2678  0E17                     	;# 
  2679  0E18                     	;# 
  2680  0E19                     	;# 
  2681  0E1A                     	;# 
  2682  0E1B                     	;# 
  2683  0E1C                     	;# 
  2684  0E1D                     	;# 
  2685  0E1E                     	;# 
  2686  0E1F                     	;# 
  2687  0E20                     	;# 
  2688  0E21                     	;# 
  2689  0E22                     	;# 
  2690  0E23                     	;# 
  2691  0E24                     	;# 
  2692  0E25                     	;# 
  2693  0E26                     	;# 
  2694  0E27                     	;# 
  2695  0E28                     	;# 
  2696  0E29                     	;# 
  2697  0E2A                     	;# 
  2698  0E2B                     	;# 
  2699  0E2C                     	;# 
  2700  0E2D                     	;# 
  2701  0E2E                     	;# 
  2702  0E2F                     	;# 
  2703  0E30                     	;# 
  2704  0E31                     	;# 
  2705  0E32                     	;# 
  2706  0E33                     	;# 
  2707  0E34                     	;# 
  2708  0E35                     	;# 
  2709  0E36                     	;# 
  2710  0E37                     	;# 
  2711  0E8F                     	;# 
  2712  0E90                     	;# 
  2713  0E91                     	;# 
  2714  0E92                     	;# 
  2715  0E93                     	;# 
  2716  0E94                     	;# 
  2717  0E95                     	;# 
  2718  0E96                     	;# 
  2719  0E97                     	;# 
  2720  0E9C                     	;# 
  2721  0E9D                     	;# 
  2722  0E9E                     	;# 
  2723  0EA1                     	;# 
  2724  0EA2                     	;# 
  2725  0EA3                     	;# 
  2726  0EA4                     	;# 
  2727  0EA5                     	;# 
  2728  0EA9                     	;# 
  2729  0EAA                     	;# 
  2730  0EAB                     	;# 
  2731  0EAC                     	;# 
  2732  0EB1                     	;# 
  2733  0EB2                     	;# 
  2734  0EB3                     	;# 
  2735  0EB8                     	;# 
  2736  0EB9                     	;# 
  2737  0EBA                     	;# 
  2738  0EBB                     	;# 
  2739  0EBC                     	;# 
  2740  0EBD                     	;# 
  2741  0EBE                     	;# 
  2742  0EC3                     	;# 
  2743  0EC5                     	;# 
  2744  0EC6                     	;# 
  2745  0EC7                     	;# 
  2746  0EC8                     	;# 
  2747  0EC9                     	;# 
  2748  0ECA                     	;# 
  2749  0ECB                     	;# 
  2750  0ECC                     	;# 
  2751  0F10                     	;# 
  2752  0F11                     	;# 
  2753  0F12                     	;# 
  2754  0F13                     	;# 
  2755  0F14                     	;# 
  2756  0F15                     	;# 
  2757  0F16                     	;# 
  2758  0F17                     	;# 
  2759  0F18                     	;# 
  2760  0F19                     	;# 
  2761  0F1A                     	;# 
  2762  0F1B                     	;# 
  2763  0F1C                     	;# 
  2764  0F1D                     	;# 
  2765  0F1E                     	;# 
  2766  0F1F                     	;# 
  2767  0F20                     	;# 
  2768  0F21                     	;# 
  2769  0F22                     	;# 
  2770  0F23                     	;# 
  2771  0F24                     	;# 
  2772  0F25                     	;# 
  2773  0F26                     	;# 
  2774  0F27                     	;# 
  2775  0F28                     	;# 
  2776  0F29                     	;# 
  2777  0F2A                     	;# 
  2778  0F2B                     	;# 
  2779  0F2C                     	;# 
  2780  0F2D                     	;# 
  2781  0F2E                     	;# 
  2782  0F2F                     	;# 
  2783  0F30                     	;# 
  2784  0F31                     	;# 
  2785  0F32                     	;# 
  2786  0F38                     	;# 
  2787  0F39                     	;# 
  2788  0F3A                     	;# 
  2789  0F3B                     	;# 
  2790  0F3C                     	;# 
  2791  0F3D                     	;# 
  2792  0F3E                     	;# 
  2793  0F3F                     	;# 
  2794  0F40                     	;# 
  2795  0F41                     	;# 
  2796  0F43                     	;# 
  2797  0F44                     	;# 
  2798  0F45                     	;# 
  2799  0F46                     	;# 
  2800  0F47                     	;# 
  2801  0F48                     	;# 
  2802  0F49                     	;# 
  2803  0F4A                     	;# 
  2804  0F4B                     	;# 
  2805  0F4C                     	;# 
  2806  0F4E                     	;# 
  2807  0F4F                     	;# 
  2808  0F50                     	;# 
  2809  0F51                     	;# 
  2810  0F52                     	;# 
  2811  0F53                     	;# 
  2812  0F54                     	;# 
  2813  0F55                     	;# 
  2814  0F56                     	;# 
  2815  0F57                     	;# 
  2816  0F59                     	;# 
  2817  0F5A                     	;# 
  2818  0F5B                     	;# 
  2819  0F5C                     	;# 
  2820  0F5D                     	;# 
  2821  0F61                     	;# 
  2822  0F62                     	;# 
  2823  0F64                     	;# 
  2824  0F65                     	;# 
  2825  0F66                     	;# 
  2826  0F67                     	;# 
  2827  0F68                     	;# 
  2828  0F69                     	;# 
  2829  0F6A                     	;# 
  2830  0F6B                     	;# 
  2831  0F6C                     	;# 
  2832  0F6D                     	;# 
  2833  0FE4                     	;# 
  2834  0FE5                     	;# 
  2835  0FE6                     	;# 
  2836  0FE7                     	;# 
  2837  0FE8                     	;# 
  2838  0FE9                     	;# 
  2839  0FEA                     	;# 
  2840  0FEB                     	;# 
  2841  0FED                     	;# 
  2842  0FEE                     	;# 
  2843  0FEF                     	;# 
  2844  0000                     	;# 
  2845  0001                     	;# 
  2846  0002                     	;# 
  2847  0003                     	;# 
  2848  0004                     	;# 
  2849  0005                     	;# 
  2850  0006                     	;# 
  2851  0007                     	;# 
  2852  0008                     	;# 
  2853  0009                     	;# 
  2854  000A                     	;# 
  2855  000B                     	;# 
  2856  000C                     	;# 
  2857  000D                     	;# 
  2858  000E                     	;# 
  2859  000F                     	;# 
  2860  0010                     	;# 
  2861  0011                     	;# 
  2862  0012                     	;# 
  2863  0013                     	;# 
  2864  0014                     	;# 
  2865  0015                     	;# 
  2866  0016                     	;# 
  2867  0017                     	;# 
  2868  0018                     	;# 
  2869  0019                     	;# 
  2870  001A                     	;# 
  2871  001C                     	;# 
  2872  001C                     	;# 
  2873  001D                     	;# 
  2874  001D                     	;# 
  2875  001E                     	;# 
  2876  001F                     	;# 
  2877  008C                     	;# 
  2878  008C                     	;# 
  2879  008D                     	;# 
  2880  008E                     	;# 
  2881  008E                     	;# 
  2882  008F                     	;# 
  2883  0090                     	;# 
  2884  0090                     	;# 
  2885  0091                     	;# 
  2886  0093                     	;# 
  2887  0094                     	;# 
  2888  0095                     	;# 
  2889  0096                     	;# 
  2890  0097                     	;# 
  2891  0098                     	;# 
  2892  0099                     	;# 
  2893  009A                     	;# 
  2894  009B                     	;# 
  2895  009C                     	;# 
  2896  009D                     	;# 
  2897  009E                     	;# 
  2898  010C                     	;# 
  2899  010D                     	;# 
  2900  010E                     	;# 
  2901  010E                     	;# 
  2902  010F                     	;# 
  2903  0110                     	;# 
  2904  0110                     	;# 
  2905  0111                     	;# 
  2906  0112                     	;# 
  2907  0112                     	;# 
  2908  0113                     	;# 
  2909  0114                     	;# 
  2910  0114                     	;# 
  2911  0115                     	;# 
  2912  0116                     	;# 
  2913  0116                     	;# 
  2914  0117                     	;# 
  2915  0119                     	;# 
  2916  0119                     	;# 
  2917  0119                     	;# 
  2918  011A                     	;# 
  2919  011A                     	;# 
  2920  011A                     	;# 
  2921  011B                     	;# 
  2922  011B                     	;# 
  2923  011B                     	;# 
  2924  011B                     	;# 
  2925  011B                     	;# 
  2926  011C                     	;# 
  2927  011C                     	;# 
  2928  011C                     	;# 
  2929  011D                     	;# 
  2930  011D                     	;# 
  2931  011D                     	;# 
  2932  011E                     	;# 
  2933  011E                     	;# 
  2934  011E                     	;# 
  2935  011F                     	;# 
  2936  011F                     	;# 
  2937  011F                     	;# 
  2938  011F                     	;# 
  2939  011F                     	;# 
  2940  018C                     	;# 
  2941  018D                     	;# 
  2942  018E                     	;# 
  2943  018F                     	;# 
  2944  0190                     	;# 
  2945  0191                     	;# 
  2946  0192                     	;# 
  2947  0196                     	;# 
  2948  0197                     	;# 
  2949  0198                     	;# 
  2950  0199                     	;# 
  2951  019A                     	;# 
  2952  019B                     	;# 
  2953  019C                     	;# 
  2954  020C                     	;# 
  2955  020C                     	;# 
  2956  020D                     	;# 
  2957  020E                     	;# 
  2958  020F                     	;# 
  2959  020F                     	;# 
  2960  0210                     	;# 
  2961  0210                     	;# 
  2962  0211                     	;# 
  2963  0211                     	;# 
  2964  0212                     	;# 
  2965  0212                     	;# 
  2966  0213                     	;# 
  2967  0214                     	;# 
  2968  0215                     	;# 
  2969  0215                     	;# 
  2970  0216                     	;# 
  2971  0216                     	;# 
  2972  0217                     	;# 
  2973  0217                     	;# 
  2974  0218                     	;# 
  2975  0218                     	;# 
  2976  0219                     	;# 
  2977  021A                     	;# 
  2978  021B                     	;# 
  2979  021B                     	;# 
  2980  021C                     	;# 
  2981  021C                     	;# 
  2982  021D                     	;# 
  2983  021D                     	;# 
  2984  021E                     	;# 
  2985  021F                     	;# 
  2986  028C                     	;# 
  2987  028C                     	;# 
  2988  028D                     	;# 
  2989  028D                     	;# 
  2990  028E                     	;# 
  2991  028F                     	;# 
  2992  0290                     	;# 
  2993  0290                     	;# 
  2994  0291                     	;# 
  2995  0292                     	;# 
  2996  0292                     	;# 
  2997  0293                     	;# 
  2998  0293                     	;# 
  2999  0294                     	;# 
  3000  0295                     	;# 
  3001  0296                     	;# 
  3002  0296                     	;# 
  3003  0297                     	;# 
  3004  0298                     	;# 
  3005  0298                     	;# 
  3006  0299                     	;# 
  3007  0299                     	;# 
  3008  029A                     	;# 
  3009  029B                     	;# 
  3010  029C                     	;# 
  3011  029C                     	;# 
  3012  029D                     	;# 
  3013  030C                     	;# 
  3014  030C                     	;# 
  3015  030D                     	;# 
  3016  030E                     	;# 
  3017  030F                     	;# 
  3018  0310                     	;# 
  3019  0310                     	;# 
  3020  0311                     	;# 
  3021  0312                     	;# 
  3022  0313                     	;# 
  3023  0314                     	;# 
  3024  0314                     	;# 
  3025  0315                     	;# 
  3026  0316                     	;# 
  3027  0317                     	;# 
  3028  0318                     	;# 
  3029  0318                     	;# 
  3030  0319                     	;# 
  3031  031A                     	;# 
  3032  031B                     	;# 
  3033  031C                     	;# 
  3034  031C                     	;# 
  3035  031D                     	;# 
  3036  031E                     	;# 
  3037  031F                     	;# 
  3038  038C                     	;# 
  3039  038C                     	;# 
  3040  038D                     	;# 
  3041  038E                     	;# 
  3042  0390                     	;# 
  3043  0390                     	;# 
  3044  0391                     	;# 
  3045  0392                     	;# 
  3046  040C                     	;# 
  3047  040D                     	;# 
  3048  040E                     	;# 
  3049  040F                     	;# 
  3050  0410                     	;# 
  3051  0411                     	;# 
  3052  0416                     	;# 
  3053  0416                     	;# 
  3054  0417                     	;# 
  3055  0418                     	;# 
  3056  0418                     	;# 
  3057  0419                     	;# 
  3058  041A                     	;# 
  3059  041A                     	;# 
  3060  041B                     	;# 
  3061  041C                     	;# 
  3062  041C                     	;# 
  3063  041D                     	;# 
  3064  041E                     	;# 
  3065  041F                     	;# 
  3066  048C                     	;# 
  3067  048C                     	;# 
  3068  048D                     	;# 
  3069  048E                     	;# 
  3070  048F                     	;# 
  3071  048F                     	;# 
  3072  0490                     	;# 
  3073  0491                     	;# 
  3074  0492                     	;# 
  3075  0492                     	;# 
  3076  0493                     	;# 
  3077  0494                     	;# 
  3078  0495                     	;# 
  3079  0495                     	;# 
  3080  0496                     	;# 
  3081  0497                     	;# 
  3082  0498                     	;# 
  3083  0499                     	;# 
  3084  049A                     	;# 
  3085  049B                     	;# 
  3086  049C                     	;# 
  3087  049D                     	;# 
  3088  050C                     	;# 
  3089  050C                     	;# 
  3090  050D                     	;# 
  3091  050E                     	;# 
  3092  050F                     	;# 
  3093  050F                     	;# 
  3094  0510                     	;# 
  3095  0511                     	;# 
  3096  0512                     	;# 
  3097  0512                     	;# 
  3098  0513                     	;# 
  3099  0514                     	;# 
  3100  0515                     	;# 
  3101  0515                     	;# 
  3102  0516                     	;# 
  3103  0517                     	;# 
  3104  0518                     	;# 
  3105  0519                     	;# 
  3106  051A                     	;# 
  3107  051B                     	;# 
  3108  051C                     	;# 
  3109  051D                     	;# 
  3110  058C                     	;# 
  3111  058C                     	;# 
  3112  058D                     	;# 
  3113  058E                     	;# 
  3114  058F                     	;# 
  3115  058F                     	;# 
  3116  0590                     	;# 
  3117  0591                     	;# 
  3118  0592                     	;# 
  3119  0593                     	;# 
  3120  060C                     	;# 
  3121  060D                     	;# 
  3122  060E                     	;# 
  3123  060F                     	;# 
  3124  0610                     	;# 
  3125  0611                     	;# 
  3126  0612                     	;# 
  3127  0613                     	;# 
  3128  0614                     	;# 
  3129  0616                     	;# 
  3130  0617                     	;# 
  3131  0618                     	;# 
  3132  0619                     	;# 
  3133  061A                     	;# 
  3134  061B                     	;# 
  3135  061C                     	;# 
  3136  061D                     	;# 
  3137  061E                     	;# 
  3138  068C                     	;# 
  3139  068D                     	;# 
  3140  068E                     	;# 
  3141  068F                     	;# 
  3142  0690                     	;# 
  3143  0691                     	;# 
  3144  0692                     	;# 
  3145  0693                     	;# 
  3146  0694                     	;# 
  3147  070C                     	;# 
  3148  070D                     	;# 
  3149  070E                     	;# 
  3150  070F                     	;# 
  3151  0710                     	;# 
  3152  0711                     	;# 
  3153  0712                     	;# 
  3154  0713                     	;# 
  3155  0714                     	;# 
  3156  0716                     	;# 
  3157  0717                     	;# 
  3158  0718                     	;# 
  3159  0719                     	;# 
  3160  071A                     	;# 
  3161  071B                     	;# 
  3162  071C                     	;# 
  3163  071D                     	;# 
  3164  071E                     	;# 
  3165  0796                     	;# 
  3166  0797                     	;# 
  3167  0798                     	;# 
  3168  0799                     	;# 
  3169  079A                     	;# 
  3170  079B                     	;# 
  3171  080C                     	;# 
  3172  080D                     	;# 
  3173  080E                     	;# 
  3174  080F                     	;# 
  3175  0810                     	;# 
  3176  0811                     	;# 
  3177  0812                     	;# 
  3178  0813                     	;# 
  3179  0814                     	;# 
  3180  081A                     	;# 
  3181  081B                     	;# 
  3182  081C                     	;# 
  3183  081D                     	;# 
  3184  081E                     	;# 
  3185  081F                     	;# 
  3186  088C                     	;# 
  3187  088D                     	;# 
  3188  088E                     	;# 
  3189  088F                     	;# 
  3190  0890                     	;# 
  3191  0891                     	;# 
  3192  0892                     	;# 
  3193  0893                     	;# 
  3194  0895                     	;# 
  3195  0896                     	;# 
  3196  0897                     	;# 
  3197  0898                     	;# 
  3198  0899                     	;# 
  3199  089A                     	;# 
  3200  089B                     	;# 
  3201  090C                     	;# 
  3202  090E                     	;# 
  3203  090F                     	;# 
  3204  091F                     	;# 
  3205  091F                     	;# 
  3206  098F                     	;# 
  3207  098F                     	;# 
  3208  0990                     	;# 
  3209  0991                     	;# 
  3210  0992                     	;# 
  3211  0993                     	;# 
  3212  0994                     	;# 
  3213  0995                     	;# 
  3214  0996                     	;# 
  3215  0997                     	;# 
  3216  0E0F                     	;# 
  3217  0E10                     	;# 
  3218  0E11                     	;# 
  3219  0E12                     	;# 
  3220  0E13                     	;# 
  3221  0E14                     	;# 
  3222  0E15                     	;# 
  3223  0E16                     	;# 
  3224  0E17                     	;# 
  3225  0E18                     	;# 
  3226  0E19                     	;# 
  3227  0E1A                     	;# 
  3228  0E1B                     	;# 
  3229  0E1C                     	;# 
  3230  0E1D                     	;# 
  3231  0E1E                     	;# 
  3232  0E1F                     	;# 
  3233  0E20                     	;# 
  3234  0E21                     	;# 
  3235  0E22                     	;# 
  3236  0E23                     	;# 
  3237  0E24                     	;# 
  3238  0E25                     	;# 
  3239  0E26                     	;# 
  3240  0E27                     	;# 
  3241  0E28                     	;# 
  3242  0E29                     	;# 
  3243  0E2A                     	;# 
  3244  0E2B                     	;# 
  3245  0E2C                     	;# 
  3246  0E2D                     	;# 
  3247  0E2E                     	;# 
  3248  0E2F                     	;# 
  3249  0E30                     	;# 
  3250  0E31                     	;# 
  3251  0E32                     	;# 
  3252  0E33                     	;# 
  3253  0E34                     	;# 
  3254  0E35                     	;# 
  3255  0E36                     	;# 
  3256  0E37                     	;# 
  3257  0E8F                     	;# 
  3258  0E90                     	;# 
  3259  0E91                     	;# 
  3260  0E92                     	;# 
  3261  0E93                     	;# 
  3262  0E94                     	;# 
  3263  0E95                     	;# 
  3264  0E96                     	;# 
  3265  0E97                     	;# 
  3266  0E9C                     	;# 
  3267  0E9D                     	;# 
  3268  0E9E                     	;# 
  3269  0EA1                     	;# 
  3270  0EA2                     	;# 
  3271  0EA3                     	;# 
  3272  0EA4                     	;# 
  3273  0EA5                     	;# 
  3274  0EA9                     	;# 
  3275  0EAA                     	;# 
  3276  0EAB                     	;# 
  3277  0EAC                     	;# 
  3278  0EB1                     	;# 
  3279  0EB2                     	;# 
  3280  0EB3                     	;# 
  3281  0EB8                     	;# 
  3282  0EB9                     	;# 
  3283  0EBA                     	;# 
  3284  0EBB                     	;# 
  3285  0EBC                     	;# 
  3286  0EBD                     	;# 
  3287  0EBE                     	;# 
  3288  0EC3                     	;# 
  3289  0EC5                     	;# 
  3290  0EC6                     	;# 
  3291  0EC7                     	;# 
  3292  0EC8                     	;# 
  3293  0EC9                     	;# 
  3294  0ECA                     	;# 
  3295  0ECB                     	;# 
  3296  0ECC                     	;# 
  3297  0F10                     	;# 
  3298  0F11                     	;# 
  3299  0F12                     	;# 
  3300  0F13                     	;# 
  3301  0F14                     	;# 
  3302  0F15                     	;# 
  3303  0F16                     	;# 
  3304  0F17                     	;# 
  3305  0F18                     	;# 
  3306  0F19                     	;# 
  3307  0F1A                     	;# 
  3308  0F1B                     	;# 
  3309  0F1C                     	;# 
  3310  0F1D                     	;# 
  3311  0F1E                     	;# 
  3312  0F1F                     	;# 
  3313  0F20                     	;# 
  3314  0F21                     	;# 
  3315  0F22                     	;# 
  3316  0F23                     	;# 
  3317  0F24                     	;# 
  3318  0F25                     	;# 
  3319  0F26                     	;# 
  3320  0F27                     	;# 
  3321  0F28                     	;# 
  3322  0F29                     	;# 
  3323  0F2A                     	;# 
  3324  0F2B                     	;# 
  3325  0F2C                     	;# 
  3326  0F2D                     	;# 
  3327  0F2E                     	;# 
  3328  0F2F                     	;# 
  3329  0F30                     	;# 
  3330  0F31                     	;# 
  3331  0F32                     	;# 
  3332  0F38                     	;# 
  3333  0F39                     	;# 
  3334  0F3A                     	;# 
  3335  0F3B                     	;# 
  3336  0F3C                     	;# 
  3337  0F3D                     	;# 
  3338  0F3E                     	;# 
  3339  0F3F                     	;# 
  3340  0F40                     	;# 
  3341  0F41                     	;# 
  3342  0F43                     	;# 
  3343  0F44                     	;# 
  3344  0F45                     	;# 
  3345  0F46                     	;# 
  3346  0F47                     	;# 
  3347  0F48                     	;# 
  3348  0F49                     	;# 
  3349  0F4A                     	;# 
  3350  0F4B                     	;# 
  3351  0F4C                     	;# 
  3352  0F4E                     	;# 
  3353  0F4F                     	;# 
  3354  0F50                     	;# 
  3355  0F51                     	;# 
  3356  0F52                     	;# 
  3357  0F53                     	;# 
  3358  0F54                     	;# 
  3359  0F55                     	;# 
  3360  0F56                     	;# 
  3361  0F57                     	;# 
  3362  0F59                     	;# 
  3363  0F5A                     	;# 
  3364  0F5B                     	;# 
  3365  0F5C                     	;# 
  3366  0F5D                     	;# 
  3367  0F61                     	;# 
  3368  0F62                     	;# 
  3369  0F64                     	;# 
  3370  0F65                     	;# 
  3371  0F66                     	;# 
  3372  0F67                     	;# 
  3373  0F68                     	;# 
  3374  0F69                     	;# 
  3375  0F6A                     	;# 
  3376  0F6B                     	;# 
  3377  0F6C                     	;# 
  3378  0F6D                     	;# 
  3379  0FE4                     	;# 
  3380  0FE5                     	;# 
  3381  0FE6                     	;# 
  3382  0FE7                     	;# 
  3383  0FE8                     	;# 
  3384  0FE9                     	;# 
  3385  0FEA                     	;# 
  3386  0FEB                     	;# 
  3387  0FED                     	;# 
  3388  0FEE                     	;# 
  3389  0FEF                     	;# 
  3390  0000                     	;# 
  3391  0001                     	;# 
  3392  0002                     	;# 
  3393  0003                     	;# 
  3394  0004                     	;# 
  3395  0005                     	;# 
  3396  0006                     	;# 
  3397  0007                     	;# 
  3398  0008                     	;# 
  3399  0009                     	;# 
  3400  000A                     	;# 
  3401  000B                     	;# 
  3402  000C                     	;# 
  3403  000D                     	;# 
  3404  000E                     	;# 
  3405  000F                     	;# 
  3406  0010                     	;# 
  3407  0011                     	;# 
  3408  0012                     	;# 
  3409  0013                     	;# 
  3410  0014                     	;# 
  3411  0015                     	;# 
  3412  0016                     	;# 
  3413  0017                     	;# 
  3414  0018                     	;# 
  3415  0019                     	;# 
  3416  001A                     	;# 
  3417  001C                     	;# 
  3418  001C                     	;# 
  3419  001D                     	;# 
  3420  001D                     	;# 
  3421  001E                     	;# 
  3422  001F                     	;# 
  3423  008C                     	;# 
  3424  008C                     	;# 
  3425  008D                     	;# 
  3426  008E                     	;# 
  3427  008E                     	;# 
  3428  008F                     	;# 
  3429  0090                     	;# 
  3430  0090                     	;# 
  3431  0091                     	;# 
  3432  0093                     	;# 
  3433  0094                     	;# 
  3434  0095                     	;# 
  3435  0096                     	;# 
  3436  0097                     	;# 
  3437  0098                     	;# 
  3438  0099                     	;# 
  3439  009A                     	;# 
  3440  009B                     	;# 
  3441  009C                     	;# 
  3442  009D                     	;# 
  3443  009E                     	;# 
  3444  010C                     	;# 
  3445  010D                     	;# 
  3446  010E                     	;# 
  3447  010E                     	;# 
  3448  010F                     	;# 
  3449  0110                     	;# 
  3450  0110                     	;# 
  3451  0111                     	;# 
  3452  0112                     	;# 
  3453  0112                     	;# 
  3454  0113                     	;# 
  3455  0114                     	;# 
  3456  0114                     	;# 
  3457  0115                     	;# 
  3458  0116                     	;# 
  3459  0116                     	;# 
  3460  0117                     	;# 
  3461  0119                     	;# 
  3462  0119                     	;# 
  3463  0119                     	;# 
  3464  011A                     	;# 
  3465  011A                     	;# 
  3466  011A                     	;# 
  3467  011B                     	;# 
  3468  011B                     	;# 
  3469  011B                     	;# 
  3470  011B                     	;# 
  3471  011B                     	;# 
  3472  011C                     	;# 
  3473  011C                     	;# 
  3474  011C                     	;# 
  3475  011D                     	;# 
  3476  011D                     	;# 
  3477  011D                     	;# 
  3478  011E                     	;# 
  3479  011E                     	;# 
  3480  011E                     	;# 
  3481  011F                     	;# 
  3482  011F                     	;# 
  3483  011F                     	;# 
  3484  011F                     	;# 
  3485  011F                     	;# 
  3486  018C                     	;# 
  3487  018D                     	;# 
  3488  018E                     	;# 
  3489  018F                     	;# 
  3490  0190                     	;# 
  3491  0191                     	;# 
  3492  0192                     	;# 
  3493  0196                     	;# 
  3494  0197                     	;# 
  3495  0198                     	;# 
  3496  0199                     	;# 
  3497  019A                     	;# 
  3498  019B                     	;# 
  3499  019C                     	;# 
  3500  020C                     	;# 
  3501  020C                     	;# 
  3502  020D                     	;# 
  3503  020E                     	;# 
  3504  020F                     	;# 
  3505  020F                     	;# 
  3506  0210                     	;# 
  3507  0210                     	;# 
  3508  0211                     	;# 
  3509  0211                     	;# 
  3510  0212                     	;# 
  3511  0212                     	;# 
  3512  0213                     	;# 
  3513  0214                     	;# 
  3514  0215                     	;# 
  3515  0215                     	;# 
  3516  0216                     	;# 
  3517  0216                     	;# 
  3518  0217                     	;# 
  3519  0217                     	;# 
  3520  0218                     	;# 
  3521  0218                     	;# 
  3522  0219                     	;# 
  3523  021A                     	;# 
  3524  021B                     	;# 
  3525  021B                     	;# 
  3526  021C                     	;# 
  3527  021C                     	;# 
  3528  021D                     	;# 
  3529  021D                     	;# 
  3530  021E                     	;# 
  3531  021F                     	;# 
  3532  028C                     	;# 
  3533  028C                     	;# 
  3534  028D                     	;# 
  3535  028D                     	;# 
  3536  028E                     	;# 
  3537  028F                     	;# 
  3538  0290                     	;# 
  3539  0290                     	;# 
  3540  0291                     	;# 
  3541  0292                     	;# 
  3542  0292                     	;# 
  3543  0293                     	;# 
  3544  0293                     	;# 
  3545  0294                     	;# 
  3546  0295                     	;# 
  3547  0296                     	;# 
  3548  0296                     	;# 
  3549  0297                     	;# 
  3550  0298                     	;# 
  3551  0298                     	;# 
  3552  0299                     	;# 
  3553  0299                     	;# 
  3554  029A                     	;# 
  3555  029B                     	;# 
  3556  029C                     	;# 
  3557  029C                     	;# 
  3558  029D                     	;# 
  3559  030C                     	;# 
  3560  030C                     	;# 
  3561  030D                     	;# 
  3562  030E                     	;# 
  3563  030F                     	;# 
  3564  0310                     	;# 
  3565  0310                     	;# 
  3566  0311                     	;# 
  3567  0312                     	;# 
  3568  0313                     	;# 
  3569  0314                     	;# 
  3570  0314                     	;# 
  3571  0315                     	;# 
  3572  0316                     	;# 
  3573  0317                     	;# 
  3574  0318                     	;# 
  3575  0318                     	;# 
  3576  0319                     	;# 
  3577  031A                     	;# 
  3578  031B                     	;# 
  3579  031C                     	;# 
  3580  031C                     	;# 
  3581  031D                     	;# 
  3582  031E                     	;# 
  3583  031F                     	;# 
  3584  038C                     	;# 
  3585  038C                     	;# 
  3586  038D                     	;# 
  3587  038E                     	;# 
  3588  0390                     	;# 
  3589  0390                     	;# 
  3590  0391                     	;# 
  3591  0392                     	;# 
  3592  040C                     	;# 
  3593  040D                     	;# 
  3594  040E                     	;# 
  3595  040F                     	;# 
  3596  0410                     	;# 
  3597  0411                     	;# 
  3598  0416                     	;# 
  3599  0416                     	;# 
  3600  0417                     	;# 
  3601  0418                     	;# 
  3602  0418                     	;# 
  3603  0419                     	;# 
  3604  041A                     	;# 
  3605  041A                     	;# 
  3606  041B                     	;# 
  3607  041C                     	;# 
  3608  041C                     	;# 
  3609  041D                     	;# 
  3610  041E                     	;# 
  3611  041F                     	;# 
  3612  048C                     	;# 
  3613  048C                     	;# 
  3614  048D                     	;# 
  3615  048E                     	;# 
  3616  048F                     	;# 
  3617  048F                     	;# 
  3618  0490                     	;# 
  3619  0491                     	;# 
  3620  0492                     	;# 
  3621  0492                     	;# 
  3622  0493                     	;# 
  3623  0494                     	;# 
  3624  0495                     	;# 
  3625  0495                     	;# 
  3626  0496                     	;# 
  3627  0497                     	;# 
  3628  0498                     	;# 
  3629  0499                     	;# 
  3630  049A                     	;# 
  3631  049B                     	;# 
  3632  049C                     	;# 
  3633  049D                     	;# 
  3634  050C                     	;# 
  3635  050C                     	;# 
  3636  050D                     	;# 
  3637  050E                     	;# 
  3638  050F                     	;# 
  3639  050F                     	;# 
  3640  0510                     	;# 
  3641  0511                     	;# 
  3642  0512                     	;# 
  3643  0512                     	;# 
  3644  0513                     	;# 
  3645  0514                     	;# 
  3646  0515                     	;# 
  3647  0515                     	;# 
  3648  0516                     	;# 
  3649  0517                     	;# 
  3650  0518                     	;# 
  3651  0519                     	;# 
  3652  051A                     	;# 
  3653  051B                     	;# 
  3654  051C                     	;# 
  3655  051D                     	;# 
  3656  058C                     	;# 
  3657  058C                     	;# 
  3658  058D                     	;# 
  3659  058E                     	;# 
  3660  058F                     	;# 
  3661  058F                     	;# 
  3662  0590                     	;# 
  3663  0591                     	;# 
  3664  0592                     	;# 
  3665  0593                     	;# 
  3666  060C                     	;# 
  3667  060D                     	;# 
  3668  060E                     	;# 
  3669  060F                     	;# 
  3670  0610                     	;# 
  3671  0611                     	;# 
  3672  0612                     	;# 
  3673  0613                     	;# 
  3674  0614                     	;# 
  3675  0616                     	;# 
  3676  0617                     	;# 
  3677  0618                     	;# 
  3678  0619                     	;# 
  3679  061A                     	;# 
  3680  061B                     	;# 
  3681  061C                     	;# 
  3682  061D                     	;# 
  3683  061E                     	;# 
  3684  068C                     	;# 
  3685  068D                     	;# 
  3686  068E                     	;# 
  3687  068F                     	;# 
  3688  0690                     	;# 
  3689  0691                     	;# 
  3690  0692                     	;# 
  3691  0693                     	;# 
  3692  0694                     	;# 
  3693  070C                     	;# 
  3694  070D                     	;# 
  3695  070E                     	;# 
  3696  070F                     	;# 
  3697  0710                     	;# 
  3698  0711                     	;# 
  3699  0712                     	;# 
  3700  0713                     	;# 
  3701  0714                     	;# 
  3702  0716                     	;# 
  3703  0717                     	;# 
  3704  0718                     	;# 
  3705  0719                     	;# 
  3706  071A                     	;# 
  3707  071B                     	;# 
  3708  071C                     	;# 
  3709  071D                     	;# 
  3710  071E                     	;# 
  3711  0796                     	;# 
  3712  0797                     	;# 
  3713  0798                     	;# 
  3714  0799                     	;# 
  3715  079A                     	;# 
  3716  079B                     	;# 
  3717  080C                     	;# 
  3718  080D                     	;# 
  3719  080E                     	;# 
  3720  080F                     	;# 
  3721  0810                     	;# 
  3722  0811                     	;# 
  3723  0812                     	;# 
  3724  0813                     	;# 
  3725  0814                     	;# 
  3726  081A                     	;# 
  3727  081B                     	;# 
  3728  081C                     	;# 
  3729  081D                     	;# 
  3730  081E                     	;# 
  3731  081F                     	;# 
  3732  088C                     	;# 
  3733  088D                     	;# 
  3734  088E                     	;# 
  3735  088F                     	;# 
  3736  0890                     	;# 
  3737  0891                     	;# 
  3738  0892                     	;# 
  3739  0893                     	;# 
  3740  0895                     	;# 
  3741  0896                     	;# 
  3742  0897                     	;# 
  3743  0898                     	;# 
  3744  0899                     	;# 
  3745  089A                     	;# 
  3746  089B                     	;# 
  3747  090C                     	;# 
  3748  090E                     	;# 
  3749  090F                     	;# 
  3750  091F                     	;# 
  3751  091F                     	;# 
  3752  098F                     	;# 
  3753  098F                     	;# 
  3754  0990                     	;# 
  3755  0991                     	;# 
  3756  0992                     	;# 
  3757  0993                     	;# 
  3758  0994                     	;# 
  3759  0995                     	;# 
  3760  0996                     	;# 
  3761  0997                     	;# 
  3762  0E0F                     	;# 
  3763  0E10                     	;# 
  3764  0E11                     	;# 
  3765  0E12                     	;# 
  3766  0E13                     	;# 
  3767  0E14                     	;# 
  3768  0E15                     	;# 
  3769  0E16                     	;# 
  3770  0E17                     	;# 
  3771  0E18                     	;# 
  3772  0E19                     	;# 
  3773  0E1A                     	;# 
  3774  0E1B                     	;# 
  3775  0E1C                     	;# 
  3776  0E1D                     	;# 
  3777  0E1E                     	;# 
  3778  0E1F                     	;# 
  3779  0E20                     	;# 
  3780  0E21                     	;# 
  3781  0E22                     	;# 
  3782  0E23                     	;# 
  3783  0E24                     	;# 
  3784  0E25                     	;# 
  3785  0E26                     	;# 
  3786  0E27                     	;# 
  3787  0E28                     	;# 
  3788  0E29                     	;# 
  3789  0E2A                     	;# 
  3790  0E2B                     	;# 
  3791  0E2C                     	;# 
  3792  0E2D                     	;# 
  3793  0E2E                     	;# 
  3794  0E2F                     	;# 
  3795  0E30                     	;# 
  3796  0E31                     	;# 
  3797  0E32                     	;# 
  3798  0E33                     	;# 
  3799  0E34                     	;# 
  3800  0E35                     	;# 
  3801  0E36                     	;# 
  3802  0E37                     	;# 
  3803  0E8F                     	;# 
  3804  0E90                     	;# 
  3805  0E91                     	;# 
  3806  0E92                     	;# 
  3807  0E93                     	;# 
  3808  0E94                     	;# 
  3809  0E95                     	;# 
  3810  0E96                     	;# 
  3811  0E97                     	;# 
  3812  0E9C                     	;# 
  3813  0E9D                     	;# 
  3814  0E9E                     	;# 
  3815  0EA1                     	;# 
  3816  0EA2                     	;# 
  3817  0EA3                     	;# 
  3818  0EA4                     	;# 
  3819  0EA5                     	;# 
  3820  0EA9                     	;# 
  3821  0EAA                     	;# 
  3822  0EAB                     	;# 
  3823  0EAC                     	;# 
  3824  0EB1                     	;# 
  3825  0EB2                     	;# 
  3826  0EB3                     	;# 
  3827  0EB8                     	;# 
  3828  0EB9                     	;# 
  3829  0EBA                     	;# 
  3830  0EBB                     	;# 
  3831  0EBC                     	;# 
  3832  0EBD                     	;# 
  3833  0EBE                     	;# 
  3834  0EC3                     	;# 
  3835  0EC5                     	;# 
  3836  0EC6                     	;# 
  3837  0EC7                     	;# 
  3838  0EC8                     	;# 
  3839  0EC9                     	;# 
  3840  0ECA                     	;# 
  3841  0ECB                     	;# 
  3842  0ECC                     	;# 
  3843  0F10                     	;# 
  3844  0F11                     	;# 
  3845  0F12                     	;# 
  3846  0F13                     	;# 
  3847  0F14                     	;# 
  3848  0F15                     	;# 
  3849  0F16                     	;# 
  3850  0F17                     	;# 
  3851  0F18                     	;# 
  3852  0F19                     	;# 
  3853  0F1A                     	;# 
  3854  0F1B                     	;# 
  3855  0F1C                     	;# 
  3856  0F1D                     	;# 
  3857  0F1E                     	;# 
  3858  0F1F                     	;# 
  3859  0F20                     	;# 
  3860  0F21                     	;# 
  3861  0F22                     	;# 
  3862  0F23                     	;# 
  3863  0F24                     	;# 
  3864  0F25                     	;# 
  3865  0F26                     	;# 
  3866  0F27                     	;# 
  3867  0F28                     	;# 
  3868  0F29                     	;# 
  3869  0F2A                     	;# 
  3870  0F2B                     	;# 
  3871  0F2C                     	;# 
  3872  0F2D                     	;# 
  3873  0F2E                     	;# 
  3874  0F2F                     	;# 
  3875  0F30                     	;# 
  3876  0F31                     	;# 
  3877  0F32                     	;# 
  3878  0F38                     	;# 
  3879  0F39                     	;# 
  3880  0F3A                     	;# 
  3881  0F3B                     	;# 
  3882  0F3C                     	;# 
  3883  0F3D                     	;# 
  3884  0F3E                     	;# 
  3885  0F3F                     	;# 
  3886  0F40                     	;# 
  3887  0F41                     	;# 
  3888  0F43                     	;# 
  3889  0F44                     	;# 
  3890  0F45                     	;# 
  3891  0F46                     	;# 
  3892  0F47                     	;# 
  3893  0F48                     	;# 
  3894  0F49                     	;# 
  3895  0F4A                     	;# 
  3896  0F4B                     	;# 
  3897  0F4C                     	;# 
  3898  0F4E                     	;# 
  3899  0F4F                     	;# 
  3900  0F50                     	;# 
  3901  0F51                     	;# 
  3902  0F52                     	;# 
  3903  0F53                     	;# 
  3904  0F54                     	;# 
  3905  0F55                     	;# 
  3906  0F56                     	;# 
  3907  0F57                     	;# 
  3908  0F59                     	;# 
  3909  0F5A                     	;# 
  3910  0F5B                     	;# 
  3911  0F5C                     	;# 
  3912  0F5D                     	;# 
  3913  0F61                     	;# 
  3914  0F62                     	;# 
  3915  0F64                     	;# 
  3916  0F65                     	;# 
  3917  0F66                     	;# 
  3918  0F67                     	;# 
  3919  0F68                     	;# 
  3920  0F69                     	;# 
  3921  0F6A                     	;# 
  3922  0F6B                     	;# 
  3923  0F6C                     	;# 
  3924  0F6D                     	;# 
  3925  0FE4                     	;# 
  3926  0FE5                     	;# 
  3927  0FE6                     	;# 
  3928  0FE7                     	;# 
  3929  0FE8                     	;# 
  3930  0FE9                     	;# 
  3931  0FEA                     	;# 
  3932  0FEB                     	;# 
  3933  0FED                     	;# 
  3934  0FEE                     	;# 
  3935  0FEF                     	;# 
  3936  0000                     	;# 
  3937  0001                     	;# 
  3938  0002                     	;# 
  3939  0003                     	;# 
  3940  0004                     	;# 
  3941  0005                     	;# 
  3942  0006                     	;# 
  3943  0007                     	;# 
  3944  0008                     	;# 
  3945  0009                     	;# 
  3946  000A                     	;# 
  3947  000B                     	;# 
  3948  000C                     	;# 
  3949  000D                     	;# 
  3950  000E                     	;# 
  3951  000F                     	;# 
  3952  0010                     	;# 
  3953  0011                     	;# 
  3954  0012                     	;# 
  3955  0013                     	;# 
  3956  0014                     	;# 
  3957  0015                     	;# 
  3958  0016                     	;# 
  3959  0017                     	;# 
  3960  0018                     	;# 
  3961  0019                     	;# 
  3962  001A                     	;# 
  3963  001C                     	;# 
  3964  001C                     	;# 
  3965  001D                     	;# 
  3966  001D                     	;# 
  3967  001E                     	;# 
  3968  001F                     	;# 
  3969  008C                     	;# 
  3970  008C                     	;# 
  3971  008D                     	;# 
  3972  008E                     	;# 
  3973  008E                     	;# 
  3974  008F                     	;# 
  3975  0090                     	;# 
  3976  0090                     	;# 
  3977  0091                     	;# 
  3978  0093                     	;# 
  3979  0094                     	;# 
  3980  0095                     	;# 
  3981  0096                     	;# 
  3982  0097                     	;# 
  3983  0098                     	;# 
  3984  0099                     	;# 
  3985  009A                     	;# 
  3986  009B                     	;# 
  3987  009C                     	;# 
  3988  009D                     	;# 
  3989  009E                     	;# 
  3990  010C                     	;# 
  3991  010D                     	;# 
  3992  010E                     	;# 
  3993  010E                     	;# 
  3994  010F                     	;# 
  3995  0110                     	;# 
  3996  0110                     	;# 
  3997  0111                     	;# 
  3998  0112                     	;# 
  3999  0112                     	;# 
  4000  0113                     	;# 
  4001  0114                     	;# 
  4002  0114                     	;# 
  4003  0115                     	;# 
  4004  0116                     	;# 
  4005  0116                     	;# 
  4006  0117                     	;# 
  4007  0119                     	;# 
  4008  0119                     	;# 
  4009  0119                     	;# 
  4010  011A                     	;# 
  4011  011A                     	;# 
  4012  011A                     	;# 
  4013  011B                     	;# 
  4014  011B                     	;# 
  4015  011B                     	;# 
  4016  011B                     	;# 
  4017  011B                     	;# 
  4018  011C                     	;# 
  4019  011C                     	;# 
  4020  011C                     	;# 
  4021  011D                     	;# 
  4022  011D                     	;# 
  4023  011D                     	;# 
  4024  011E                     	;# 
  4025  011E                     	;# 
  4026  011E                     	;# 
  4027  011F                     	;# 
  4028  011F                     	;# 
  4029  011F                     	;# 
  4030  011F                     	;# 
  4031  011F                     	;# 
  4032  018C                     	;# 
  4033  018D                     	;# 
  4034  018E                     	;# 
  4035  018F                     	;# 
  4036  0190                     	;# 
  4037  0191                     	;# 
  4038  0192                     	;# 
  4039  0196                     	;# 
  4040  0197                     	;# 
  4041  0198                     	;# 
  4042  0199                     	;# 
  4043  019A                     	;# 
  4044  019B                     	;# 
  4045  019C                     	;# 
  4046  020C                     	;# 
  4047  020C                     	;# 
  4048  020D                     	;# 
  4049  020E                     	;# 
  4050  020F                     	;# 
  4051  020F                     	;# 
  4052  0210                     	;# 
  4053  0210                     	;# 
  4054  0211                     	;# 
  4055  0211                     	;# 
  4056  0212                     	;# 
  4057  0212                     	;# 
  4058  0213                     	;# 
  4059  0214                     	;# 
  4060  0215                     	;# 
  4061  0215                     	;# 
  4062  0216                     	;# 
  4063  0216                     	;# 
  4064  0217                     	;# 
  4065  0217                     	;# 
  4066  0218                     	;# 
  4067  0218                     	;# 
  4068  0219                     	;# 
  4069  021A                     	;# 
  4070  021B                     	;# 
  4071  021B                     	;# 
  4072  021C                     	;# 
  4073  021C                     	;# 
  4074  021D                     	;# 
  4075  021D                     	;# 
  4076  021E                     	;# 
  4077  021F                     	;# 
  4078  028C                     	;# 
  4079  028C                     	;# 
  4080  028D                     	;# 
  4081  028D                     	;# 
  4082  028E                     	;# 
  4083  028F                     	;# 
  4084  0290                     	;# 
  4085  0290                     	;# 
  4086  0291                     	;# 
  4087  0292                     	;# 
  4088  0292                     	;# 
  4089  0293                     	;# 
  4090  0293                     	;# 
  4091  0294                     	;# 
  4092  0295                     	;# 
  4093  0296                     	;# 
  4094  0296                     	;# 
  4095  0297                     	;# 
  4096  0298                     	;# 
  4097  0298                     	;# 
  4098  0299                     	;# 
  4099  0299                     	;# 
  4100  029A                     	;# 
  4101  029B                     	;# 
  4102  029C                     	;# 
  4103  029C                     	;# 
  4104  029D                     	;# 
  4105  030C                     	;# 
  4106  030C                     	;# 
  4107  030D                     	;# 
  4108  030E                     	;# 
  4109  030F                     	;# 
  4110  0310                     	;# 
  4111  0310                     	;# 
  4112  0311                     	;# 
  4113  0312                     	;# 
  4114  0313                     	;# 
  4115  0314                     	;# 
  4116  0314                     	;# 
  4117  0315                     	;# 
  4118  0316                     	;# 
  4119  0317                     	;# 
  4120  0318                     	;# 
  4121  0318                     	;# 
  4122  0319                     	;# 
  4123  031A                     	;# 
  4124  031B                     	;# 
  4125  031C                     	;# 
  4126  031C                     	;# 
  4127  031D                     	;# 
  4128  031E                     	;# 
  4129  031F                     	;# 
  4130  038C                     	;# 
  4131  038C                     	;# 
  4132  038D                     	;# 
  4133  038E                     	;# 
  4134  0390                     	;# 
  4135  0390                     	;# 
  4136  0391                     	;# 
  4137  0392                     	;# 
  4138  040C                     	;# 
  4139  040D                     	;# 
  4140  040E                     	;# 
  4141  040F                     	;# 
  4142  0410                     	;# 
  4143  0411                     	;# 
  4144  0416                     	;# 
  4145  0416                     	;# 
  4146  0417                     	;# 
  4147  0418                     	;# 
  4148  0418                     	;# 
  4149  0419                     	;# 
  4150  041A                     	;# 
  4151  041A                     	;# 
  4152  041B                     	;# 
  4153  041C                     	;# 
  4154  041C                     	;# 
  4155  041D                     	;# 
  4156  041E                     	;# 
  4157  041F                     	;# 
  4158  048C                     	;# 
  4159  048C                     	;# 
  4160  048D                     	;# 
  4161  048E                     	;# 
  4162  048F                     	;# 
  4163  048F                     	;# 
  4164  0490                     	;# 
  4165  0491                     	;# 
  4166  0492                     	;# 
  4167  0492                     	;# 
  4168  0493                     	;# 
  4169  0494                     	;# 
  4170  0495                     	;# 
  4171  0495                     	;# 
  4172  0496                     	;# 
  4173  0497                     	;# 
  4174  0498                     	;# 
  4175  0499                     	;# 
  4176  049A                     	;# 
  4177  049B                     	;# 
  4178  049C                     	;# 
  4179  049D                     	;# 
  4180  050C                     	;# 
  4181  050C                     	;# 
  4182  050D                     	;# 
  4183  050E                     	;# 
  4184  050F                     	;# 
  4185  050F                     	;# 
  4186  0510                     	;# 
  4187  0511                     	;# 
  4188  0512                     	;# 
  4189  0512                     	;# 
  4190  0513                     	;# 
  4191  0514                     	;# 
  4192  0515                     	;# 
  4193  0515                     	;# 
  4194  0516                     	;# 
  4195  0517                     	;# 
  4196  0518                     	;# 
  4197  0519                     	;# 
  4198  051A                     	;# 
  4199  051B                     	;# 
  4200  051C                     	;# 
  4201  051D                     	;# 
  4202  058C                     	;# 
  4203  058C                     	;# 
  4204  058D                     	;# 
  4205  058E                     	;# 
  4206  058F                     	;# 
  4207  058F                     	;# 
  4208  0590                     	;# 
  4209  0591                     	;# 
  4210  0592                     	;# 
  4211  0593                     	;# 
  4212  060C                     	;# 
  4213  060D                     	;# 
  4214  060E                     	;# 
  4215  060F                     	;# 
  4216  0610                     	;# 
  4217  0611                     	;# 
  4218  0612                     	;# 
  4219  0613                     	;# 
  4220  0614                     	;# 
  4221  0616                     	;# 
  4222  0617                     	;# 
  4223  0618                     	;# 
  4224  0619                     	;# 
  4225  061A                     	;# 
  4226  061B                     	;# 
  4227  061C                     	;# 
  4228  061D                     	;# 
  4229  061E                     	;# 
  4230  068C                     	;# 
  4231  068D                     	;# 
  4232  068E                     	;# 
  4233  068F                     	;# 
  4234  0690                     	;# 
  4235  0691                     	;# 
  4236  0692                     	;# 
  4237  0693                     	;# 
  4238  0694                     	;# 
  4239  070C                     	;# 
  4240  070D                     	;# 
  4241  070E                     	;# 
  4242  070F                     	;# 
  4243  0710                     	;# 
  4244  0711                     	;# 
  4245  0712                     	;# 
  4246  0713                     	;# 
  4247  0714                     	;# 
  4248  0716                     	;# 
  4249  0717                     	;# 
  4250  0718                     	;# 
  4251  0719                     	;# 
  4252  071A                     	;# 
  4253  071B                     	;# 
  4254  071C                     	;# 
  4255  071D                     	;# 
  4256  071E                     	;# 
  4257  0796                     	;# 
  4258  0797                     	;# 
  4259  0798                     	;# 
  4260  0799                     	;# 
  4261  079A                     	;# 
  4262  079B                     	;# 
  4263  080C                     	;# 
  4264  080D                     	;# 
  4265  080E                     	;# 
  4266  080F                     	;# 
  4267  0810                     	;# 
  4268  0811                     	;# 
  4269  0812                     	;# 
  4270  0813                     	;# 
  4271  0814                     	;# 
  4272  081A                     	;# 
  4273  081B                     	;# 
  4274  081C                     	;# 
  4275  081D                     	;# 
  4276  081E                     	;# 
  4277  081F                     	;# 
  4278  088C                     	;# 
  4279  088D                     	;# 
  4280  088E                     	;# 
  4281  088F                     	;# 
  4282  0890                     	;# 
  4283  0891                     	;# 
  4284  0892                     	;# 
  4285  0893                     	;# 
  4286  0895                     	;# 
  4287  0896                     	;# 
  4288  0897                     	;# 
  4289  0898                     	;# 
  4290  0899                     	;# 
  4291  089A                     	;# 
  4292  089B                     	;# 
  4293  090C                     	;# 
  4294  090E                     	;# 
  4295  090F                     	;# 
  4296  091F                     	;# 
  4297  091F                     	;# 
  4298  098F                     	;# 
  4299  098F                     	;# 
  4300  0990                     	;# 
  4301  0991                     	;# 
  4302  0992                     	;# 
  4303  0993                     	;# 
  4304  0994                     	;# 
  4305  0995                     	;# 
  4306  0996                     	;# 
  4307  0997                     	;# 
  4308  0E0F                     	;# 
  4309  0E10                     	;# 
  4310  0E11                     	;# 
  4311  0E12                     	;# 
  4312  0E13                     	;# 
  4313  0E14                     	;# 
  4314  0E15                     	;# 
  4315  0E16                     	;# 
  4316  0E17                     	;# 
  4317  0E18                     	;# 
  4318  0E19                     	;# 
  4319  0E1A                     	;# 
  4320  0E1B                     	;# 
  4321  0E1C                     	;# 
  4322  0E1D                     	;# 
  4323  0E1E                     	;# 
  4324  0E1F                     	;# 
  4325  0E20                     	;# 
  4326  0E21                     	;# 
  4327  0E22                     	;# 
  4328  0E23                     	;# 
  4329  0E24                     	;# 
  4330  0E25                     	;# 
  4331  0E26                     	;# 
  4332  0E27                     	;# 
  4333  0E28                     	;# 
  4334  0E29                     	;# 
  4335  0E2A                     	;# 
  4336  0E2B                     	;# 
  4337  0E2C                     	;# 
  4338  0E2D                     	;# 
  4339  0E2E                     	;# 
  4340  0E2F                     	;# 
  4341  0E30                     	;# 
  4342  0E31                     	;# 
  4343  0E32                     	;# 
  4344  0E33                     	;# 
  4345  0E34                     	;# 
  4346  0E35                     	;# 
  4347  0E36                     	;# 
  4348  0E37                     	;# 
  4349  0E8F                     	;# 
  4350  0E90                     	;# 
  4351  0E91                     	;# 
  4352  0E92                     	;# 
  4353  0E93                     	;# 
  4354  0E94                     	;# 
  4355  0E95                     	;# 
  4356  0E96                     	;# 
  4357  0E97                     	;# 
  4358  0E9C                     	;# 
  4359  0E9D                     	;# 
  4360  0E9E                     	;# 
  4361  0EA1                     	;# 
  4362  0EA2                     	;# 
  4363  0EA3                     	;# 
  4364  0EA4                     	;# 
  4365  0EA5                     	;# 
  4366  0EA9                     	;# 
  4367  0EAA                     	;# 
  4368  0EAB                     	;# 
  4369  0EAC                     	;# 
  4370  0EB1                     	;# 
  4371  0EB2                     	;# 
  4372  0EB3                     	;# 
  4373  0EB8                     	;# 
  4374  0EB9                     	;# 
  4375  0EBA                     	;# 
  4376  0EBB                     	;# 
  4377  0EBC                     	;# 
  4378  0EBD                     	;# 
  4379  0EBE                     	;# 
  4380  0EC3                     	;# 
  4381  0EC5                     	;# 
  4382  0EC6                     	;# 
  4383  0EC7                     	;# 
  4384  0EC8                     	;# 
  4385  0EC9                     	;# 
  4386  0ECA                     	;# 
  4387  0ECB                     	;# 
  4388  0ECC                     	;# 
  4389  0F10                     	;# 
  4390  0F11                     	;# 
  4391  0F12                     	;# 
  4392  0F13                     	;# 
  4393  0F14                     	;# 
  4394  0F15                     	;# 
  4395  0F16                     	;# 
  4396  0F17                     	;# 
  4397  0F18                     	;# 
  4398  0F19                     	;# 
  4399  0F1A                     	;# 
  4400  0F1B                     	;# 
  4401  0F1C                     	;# 
  4402  0F1D                     	;# 
  4403  0F1E                     	;# 
  4404  0F1F                     	;# 
  4405  0F20                     	;# 
  4406  0F21                     	;# 
  4407  0F22                     	;# 
  4408  0F23                     	;# 
  4409  0F24                     	;# 
  4410  0F25                     	;# 
  4411  0F26                     	;# 
  4412  0F27                     	;# 
  4413  0F28                     	;# 
  4414  0F29                     	;# 
  4415  0F2A                     	;# 
  4416  0F2B                     	;# 
  4417  0F2C                     	;# 
  4418  0F2D                     	;# 
  4419  0F2E                     	;# 
  4420  0F2F                     	;# 
  4421  0F30                     	;# 
  4422  0F31                     	;# 
  4423  0F32                     	;# 
  4424  0F38                     	;# 
  4425  0F39                     	;# 
  4426  0F3A                     	;# 
  4427  0F3B                     	;# 
  4428  0F3C                     	;# 
  4429  0F3D                     	;# 
  4430  0F3E                     	;# 
  4431  0F3F                     	;# 
  4432  0F40                     	;# 
  4433  0F41                     	;# 
  4434  0F43                     	;# 
  4435  0F44                     	;# 
  4436  0F45                     	;# 
  4437  0F46                     	;# 
  4438  0F47                     	;# 
  4439  0F48                     	;# 
  4440  0F49                     	;# 
  4441  0F4A                     	;# 
  4442  0F4B                     	;# 
  4443  0F4C                     	;# 
  4444  0F4E                     	;# 
  4445  0F4F                     	;# 
  4446  0F50                     	;# 
  4447  0F51                     	;# 
  4448  0F52                     	;# 
  4449  0F53                     	;# 
  4450  0F54                     	;# 
  4451  0F55                     	;# 
  4452  0F56                     	;# 
  4453  0F57                     	;# 
  4454  0F59                     	;# 
  4455  0F5A                     	;# 
  4456  0F5B                     	;# 
  4457  0F5C                     	;# 
  4458  0F5D                     	;# 
  4459  0F61                     	;# 
  4460  0F62                     	;# 
  4461  0F64                     	;# 
  4462  0F65                     	;# 
  4463  0F66                     	;# 
  4464  0F67                     	;# 
  4465  0F68                     	;# 
  4466  0F69                     	;# 
  4467  0F6A                     	;# 
  4468  0F6B                     	;# 
  4469  0F6C                     	;# 
  4470  0F6D                     	;# 
  4471  0FE4                     	;# 
  4472  0FE5                     	;# 
  4473  0FE6                     	;# 
  4474  0FE7                     	;# 
  4475  0FE8                     	;# 
  4476  0FE9                     	;# 
  4477  0FEA                     	;# 
  4478  0FEB                     	;# 
  4479  0FED                     	;# 
  4480  0FEE                     	;# 
  4481  0FEF                     	;# 
  4482  0000                     	;# 
  4483  0001                     	;# 
  4484  0002                     	;# 
  4485  0003                     	;# 
  4486  0004                     	;# 
  4487  0005                     	;# 
  4488  0006                     	;# 
  4489  0007                     	;# 
  4490  0008                     	;# 
  4491  0009                     	;# 
  4492  000A                     	;# 
  4493  000B                     	;# 
  4494  000C                     	;# 
  4495  000D                     	;# 
  4496  000E                     	;# 
  4497  000F                     	;# 
  4498  0010                     	;# 
  4499  0011                     	;# 
  4500  0012                     	;# 
  4501  0013                     	;# 
  4502  0014                     	;# 
  4503  0015                     	;# 
  4504  0016                     	;# 
  4505  0017                     	;# 
  4506  0018                     	;# 
  4507  0019                     	;# 
  4508  001A                     	;# 
  4509  001C                     	;# 
  4510  001C                     	;# 
  4511  001D                     	;# 
  4512  001D                     	;# 
  4513  001E                     	;# 
  4514  001F                     	;# 
  4515  008C                     	;# 
  4516  008C                     	;# 
  4517  008D                     	;# 
  4518  008E                     	;# 
  4519  008E                     	;# 
  4520  008F                     	;# 
  4521  0090                     	;# 
  4522  0090                     	;# 
  4523  0091                     	;# 
  4524  0093                     	;# 
  4525  0094                     	;# 
  4526  0095                     	;# 
  4527  0096                     	;# 
  4528  0097                     	;# 
  4529  0098                     	;# 
  4530  0099                     	;# 
  4531  009A                     	;# 
  4532  009B                     	;# 
  4533  009C                     	;# 
  4534  009D                     	;# 
  4535  009E                     	;# 
  4536  010C                     	;# 
  4537  010D                     	;# 
  4538  010E                     	;# 
  4539  010E                     	;# 
  4540  010F                     	;# 
  4541  0110                     	;# 
  4542  0110                     	;# 
  4543  0111                     	;# 
  4544  0112                     	;# 
  4545  0112                     	;# 
  4546  0113                     	;# 
  4547  0114                     	;# 
  4548  0114                     	;# 
  4549  0115                     	;# 
  4550  0116                     	;# 
  4551  0116                     	;# 
  4552  0117                     	;# 
  4553  0119                     	;# 
  4554  0119                     	;# 
  4555  0119                     	;# 
  4556  011A                     	;# 
  4557  011A                     	;# 
  4558  011A                     	;# 
  4559  011B                     	;# 
  4560  011B                     	;# 
  4561  011B                     	;# 
  4562  011B                     	;# 
  4563  011B                     	;# 
  4564  011C                     	;# 
  4565  011C                     	;# 
  4566  011C                     	;# 
  4567  011D                     	;# 
  4568  011D                     	;# 
  4569  011D                     	;# 
  4570  011E                     	;# 
  4571  011E                     	;# 
  4572  011E                     	;# 
  4573  011F                     	;# 
  4574  011F                     	;# 
  4575  011F                     	;# 
  4576  011F                     	;# 
  4577  011F                     	;# 
  4578  018C                     	;# 
  4579  018D                     	;# 
  4580  018E                     	;# 
  4581  018F                     	;# 
  4582  0190                     	;# 
  4583  0191                     	;# 
  4584  0192                     	;# 
  4585  0196                     	;# 
  4586  0197                     	;# 
  4587  0198                     	;# 
  4588  0199                     	;# 
  4589  019A                     	;# 
  4590  019B                     	;# 
  4591  019C                     	;# 
  4592  020C                     	;# 
  4593  020C                     	;# 
  4594  020D                     	;# 
  4595  020E                     	;# 
  4596  020F                     	;# 
  4597  020F                     	;# 
  4598  0210                     	;# 
  4599  0210                     	;# 
  4600  0211                     	;# 
  4601  0211                     	;# 
  4602  0212                     	;# 
  4603  0212                     	;# 
  4604  0213                     	;# 
  4605  0214                     	;# 
  4606  0215                     	;# 
  4607  0215                     	;# 
  4608  0216                     	;# 
  4609  0216                     	;# 
  4610  0217                     	;# 
  4611  0217                     	;# 
  4612  0218                     	;# 
  4613  0218                     	;# 
  4614  0219                     	;# 
  4615  021A                     	;# 
  4616  021B                     	;# 
  4617  021B                     	;# 
  4618  021C                     	;# 
  4619  021C                     	;# 
  4620  021D                     	;# 
  4621  021D                     	;# 
  4622  021E                     	;# 
  4623  021F                     	;# 
  4624  028C                     	;# 
  4625  028C                     	;# 
  4626  028D                     	;# 
  4627  028D                     	;# 
  4628  028E                     	;# 
  4629  028F                     	;# 
  4630  0290                     	;# 
  4631  0290                     	;# 
  4632  0291                     	;# 
  4633  0292                     	;# 
  4634  0292                     	;# 
  4635  0293                     	;# 
  4636  0293                     	;# 
  4637  0294                     	;# 
  4638  0295                     	;# 
  4639  0296                     	;# 
  4640  0296                     	;# 
  4641  0297                     	;# 
  4642  0298                     	;# 
  4643  0298                     	;# 
  4644  0299                     	;# 
  4645  0299                     	;# 
  4646  029A                     	;# 
  4647  029B                     	;# 
  4648  029C                     	;# 
  4649  029C                     	;# 
  4650  029D                     	;# 
  4651  030C                     	;# 
  4652  030C                     	;# 
  4653  030D                     	;# 
  4654  030E                     	;# 
  4655  030F                     	;# 
  4656  0310                     	;# 
  4657  0310                     	;# 
  4658  0311                     	;# 
  4659  0312                     	;# 
  4660  0313                     	;# 
  4661  0314                     	;# 
  4662  0314                     	;# 
  4663  0315                     	;# 
  4664  0316                     	;# 
  4665  0317                     	;# 
  4666  0318                     	;# 
  4667  0318                     	;# 
  4668  0319                     	;# 
  4669  031A                     	;# 
  4670  031B                     	;# 
  4671  031C                     	;# 
  4672  031C                     	;# 
  4673  031D                     	;# 
  4674  031E                     	;# 
  4675  031F                     	;# 
  4676  038C                     	;# 
  4677  038C                     	;# 
  4678  038D                     	;# 
  4679  038E                     	;# 
  4680  0390                     	;# 
  4681  0390                     	;# 
  4682  0391                     	;# 
  4683  0392                     	;# 
  4684  040C                     	;# 
  4685  040D                     	;# 
  4686  040E                     	;# 
  4687  040F                     	;# 
  4688  0410                     	;# 
  4689  0411                     	;# 
  4690  0416                     	;# 
  4691  0416                     	;# 
  4692  0417                     	;# 
  4693  0418                     	;# 
  4694  0418                     	;# 
  4695  0419                     	;# 
  4696  041A                     	;# 
  4697  041A                     	;# 
  4698  041B                     	;# 
  4699  041C                     	;# 
  4700  041C                     	;# 
  4701  041D                     	;# 
  4702  041E                     	;# 
  4703  041F                     	;# 
  4704  048C                     	;# 
  4705  048C                     	;# 
  4706  048D                     	;# 
  4707  048E                     	;# 
  4708  048F                     	;# 
  4709  048F                     	;# 
  4710  0490                     	;# 
  4711  0491                     	;# 
  4712  0492                     	;# 
  4713  0492                     	;# 
  4714  0493                     	;# 
  4715  0494                     	;# 
  4716  0495                     	;# 
  4717  0495                     	;# 
  4718  0496                     	;# 
  4719  0497                     	;# 
  4720  0498                     	;# 
  4721  0499                     	;# 
  4722  049A                     	;# 
  4723  049B                     	;# 
  4724  049C                     	;# 
  4725  049D                     	;# 
  4726  050C                     	;# 
  4727  050C                     	;# 
  4728  050D                     	;# 
  4729  050E                     	;# 
  4730  050F                     	;# 
  4731  050F                     	;# 
  4732  0510                     	;# 
  4733  0511                     	;# 
  4734  0512                     	;# 
  4735  0512                     	;# 
  4736  0513                     	;# 
  4737  0514                     	;# 
  4738  0515                     	;# 
  4739  0515                     	;# 
  4740  0516                     	;# 
  4741  0517                     	;# 
  4742  0518                     	;# 
  4743  0519                     	;# 
  4744  051A                     	;# 
  4745  051B                     	;# 
  4746  051C                     	;# 
  4747  051D                     	;# 
  4748  058C                     	;# 
  4749  058C                     	;# 
  4750  058D                     	;# 
  4751  058E                     	;# 
  4752  058F                     	;# 
  4753  058F                     	;# 
  4754  0590                     	;# 
  4755  0591                     	;# 
  4756  0592                     	;# 
  4757  0593                     	;# 
  4758  060C                     	;# 
  4759  060D                     	;# 
  4760  060E                     	;# 
  4761  060F                     	;# 
  4762  0610                     	;# 
  4763  0611                     	;# 
  4764  0612                     	;# 
  4765  0613                     	;# 
  4766  0614                     	;# 
  4767  0616                     	;# 
  4768  0617                     	;# 
  4769  0618                     	;# 
  4770  0619                     	;# 
  4771  061A                     	;# 
  4772  061B                     	;# 
  4773  061C                     	;# 
  4774  061D                     	;# 
  4775  061E                     	;# 
  4776  068C                     	;# 
  4777  068D                     	;# 
  4778  068E                     	;# 
  4779  068F                     	;# 
  4780  0690                     	;# 
  4781  0691                     	;# 
  4782  0692                     	;# 
  4783  0693                     	;# 
  4784  0694                     	;# 
  4785  070C                     	;# 
  4786  070D                     	;# 
  4787  070E                     	;# 
  4788  070F                     	;# 
  4789  0710                     	;# 
  4790  0711                     	;# 
  4791  0712                     	;# 
  4792  0713                     	;# 
  4793  0714                     	;# 
  4794  0716                     	;# 
  4795  0717                     	;# 
  4796  0718                     	;# 
  4797  0719                     	;# 
  4798  071A                     	;# 
  4799  071B                     	;# 
  4800  071C                     	;# 
  4801  071D                     	;# 
  4802  071E                     	;# 
  4803  0796                     	;# 
  4804  0797                     	;# 
  4805  0798                     	;# 
  4806  0799                     	;# 
  4807  079A                     	;# 
  4808  079B                     	;# 
  4809  080C                     	;# 
  4810  080D                     	;# 
  4811  080E                     	;# 
  4812  080F                     	;# 
  4813  0810                     	;# 
  4814  0811                     	;# 
  4815  0812                     	;# 
  4816  0813                     	;# 
  4817  0814                     	;# 
  4818  081A                     	;# 
  4819  081B                     	;# 
  4820  081C                     	;# 
  4821  081D                     	;# 
  4822  081E                     	;# 
  4823  081F                     	;# 
  4824  088C                     	;# 
  4825  088D                     	;# 
  4826  088E                     	;# 
  4827  088F                     	;# 
  4828  0890                     	;# 
  4829  0891                     	;# 
  4830  0892                     	;# 
  4831  0893                     	;# 
  4832  0895                     	;# 
  4833  0896                     	;# 
  4834  0897                     	;# 
  4835  0898                     	;# 
  4836  0899                     	;# 
  4837  089A                     	;# 
  4838  089B                     	;# 
  4839  090C                     	;# 
  4840  090E                     	;# 
  4841  090F                     	;# 
  4842  091F                     	;# 
  4843  091F                     	;# 
  4844  098F                     	;# 
  4845  098F                     	;# 
  4846  0990                     	;# 
  4847  0991                     	;# 
  4848  0992                     	;# 
  4849  0993                     	;# 
  4850  0994                     	;# 
  4851  0995                     	;# 
  4852  0996                     	;# 
  4853  0997                     	;# 
  4854  0E0F                     	;# 
  4855  0E10                     	;# 
  4856  0E11                     	;# 
  4857  0E12                     	;# 
  4858  0E13                     	;# 
  4859  0E14                     	;# 
  4860  0E15                     	;# 
  4861  0E16                     	;# 
  4862  0E17                     	;# 
  4863  0E18                     	;# 
  4864  0E19                     	;# 
  4865  0E1A                     	;# 
  4866  0E1B                     	;# 
  4867  0E1C                     	;# 
  4868  0E1D                     	;# 
  4869  0E1E                     	;# 
  4870  0E1F                     	;# 
  4871  0E20                     	;# 
  4872  0E21                     	;# 
  4873  0E22                     	;# 
  4874  0E23                     	;# 
  4875  0E24                     	;# 
  4876  0E25                     	;# 
  4877  0E26                     	;# 
  4878  0E27                     	;# 
  4879  0E28                     	;# 
  4880  0E29                     	;# 
  4881  0E2A                     	;# 
  4882  0E2B                     	;# 
  4883  0E2C                     	;# 
  4884  0E2D                     	;# 
  4885  0E2E                     	;# 
  4886  0E2F                     	;# 
  4887  0E30                     	;# 
  4888  0E31                     	;# 
  4889  0E32                     	;# 
  4890  0E33                     	;# 
  4891  0E34                     	;# 
  4892  0E35                     	;# 
  4893  0E36                     	;# 
  4894  0E37                     	;# 
  4895  0E8F                     	;# 
  4896  0E90                     	;# 
  4897  0E91                     	;# 
  4898  0E92                     	;# 
  4899  0E93                     	;# 
  4900  0E94                     	;# 
  4901  0E95                     	;# 
  4902  0E96                     	;# 
  4903  0E97                     	;# 
  4904  0E9C                     	;# 
  4905  0E9D                     	;# 
  4906  0E9E                     	;# 
  4907  0EA1                     	;# 
  4908  0EA2                     	;# 
  4909  0EA3                     	;# 
  4910  0EA4                     	;# 
  4911  0EA5                     	;# 
  4912  0EA9                     	;# 
  4913  0EAA                     	;# 
  4914  0EAB                     	;# 
  4915  0EAC                     	;# 
  4916  0EB1                     	;# 
  4917  0EB2                     	;# 
  4918  0EB3                     	;# 
  4919  0EB8                     	;# 
  4920  0EB9                     	;# 
  4921  0EBA                     	;# 
  4922  0EBB                     	;# 
  4923  0EBC                     	;# 
  4924  0EBD                     	;# 
  4925  0EBE                     	;# 
  4926  0EC3                     	;# 
  4927  0EC5                     	;# 
  4928  0EC6                     	;# 
  4929  0EC7                     	;# 
  4930  0EC8                     	;# 
  4931  0EC9                     	;# 
  4932  0ECA                     	;# 
  4933  0ECB                     	;# 
  4934  0ECC                     	;# 
  4935  0F10                     	;# 
  4936  0F11                     	;# 
  4937  0F12                     	;# 
  4938  0F13                     	;# 
  4939  0F14                     	;# 
  4940  0F15                     	;# 
  4941  0F16                     	;# 
  4942  0F17                     	;# 
  4943  0F18                     	;# 
  4944  0F19                     	;# 
  4945  0F1A                     	;# 
  4946  0F1B                     	;# 
  4947  0F1C                     	;# 
  4948  0F1D                     	;# 
  4949  0F1E                     	;# 
  4950  0F1F                     	;# 
  4951  0F20                     	;# 
  4952  0F21                     	;# 
  4953  0F22                     	;# 
  4954  0F23                     	;# 
  4955  0F24                     	;# 
  4956  0F25                     	;# 
  4957  0F26                     	;# 
  4958  0F27                     	;# 
  4959  0F28                     	;# 
  4960  0F29                     	;# 
  4961  0F2A                     	;# 
  4962  0F2B                     	;# 
  4963  0F2C                     	;# 
  4964  0F2D                     	;# 
  4965  0F2E                     	;# 
  4966  0F2F                     	;# 
  4967  0F30                     	;# 
  4968  0F31                     	;# 
  4969  0F32                     	;# 
  4970  0F38                     	;# 
  4971  0F39                     	;# 
  4972  0F3A                     	;# 
  4973  0F3B                     	;# 
  4974  0F3C                     	;# 
  4975  0F3D                     	;# 
  4976  0F3E                     	;# 
  4977  0F3F                     	;# 
  4978  0F40                     	;# 
  4979  0F41                     	;# 
  4980  0F43                     	;# 
  4981  0F44                     	;# 
  4982  0F45                     	;# 
  4983  0F46                     	;# 
  4984  0F47                     	;# 
  4985  0F48                     	;# 
  4986  0F49                     	;# 
  4987  0F4A                     	;# 
  4988  0F4B                     	;# 
  4989  0F4C                     	;# 
  4990  0F4E                     	;# 
  4991  0F4F                     	;# 
  4992  0F50                     	;# 
  4993  0F51                     	;# 
  4994  0F52                     	;# 
  4995  0F53                     	;# 
  4996  0F54                     	;# 
  4997  0F55                     	;# 
  4998  0F56                     	;# 
  4999  0F57                     	;# 
  5000  0F59                     	;# 
  5001  0F5A                     	;# 
  5002  0F5B                     	;# 
  5003  0F5C                     	;# 
  5004  0F5D                     	;# 
  5005  0F61                     	;# 
  5006  0F62                     	;# 
  5007  0F64                     	;# 
  5008  0F65                     	;# 
  5009  0F66                     	;# 
  5010  0F67                     	;# 
  5011  0F68                     	;# 
  5012  0F69                     	;# 
  5013  0F6A                     	;# 
  5014  0F6B                     	;# 
  5015  0F6C                     	;# 
  5016  0F6D                     	;# 
  5017  0FE4                     	;# 
  5018  0FE5                     	;# 
  5019  0FE6                     	;# 
  5020  0FE7                     	;# 
  5021  0FE8                     	;# 
  5022  0FE9                     	;# 
  5023  0FEA                     	;# 
  5024  0FEB                     	;# 
  5025  0FED                     	;# 
  5026  0FEE                     	;# 
  5027  0FEF                     	;# 
  5028  0000                     	;# 
  5029  0001                     	;# 
  5030  0002                     	;# 
  5031  0003                     	;# 
  5032  0004                     	;# 
  5033  0005                     	;# 
  5034  0006                     	;# 
  5035  0007                     	;# 
  5036  0008                     	;# 
  5037  0009                     	;# 
  5038  000A                     	;# 
  5039  000B                     	;# 
  5040  000C                     	;# 
  5041  000D                     	;# 
  5042  000E                     	;# 
  5043  000F                     	;# 
  5044  0010                     	;# 
  5045  0011                     	;# 
  5046  0012                     	;# 
  5047  0013                     	;# 
  5048  0014                     	;# 
  5049  0015                     	;# 
  5050  0016                     	;# 
  5051  0017                     	;# 
  5052  0018                     	;# 
  5053  0019                     	;# 
  5054  001A                     	;# 
  5055  001C                     	;# 
  5056  001C                     	;# 
  5057  001D                     	;# 
  5058  001D                     	;# 
  5059  001E                     	;# 
  5060  001F                     	;# 
  5061  008C                     	;# 
  5062  008C                     	;# 
  5063  008D                     	;# 
  5064  008E                     	;# 
  5065  008E                     	;# 
  5066  008F                     	;# 
  5067  0090                     	;# 
  5068  0090                     	;# 
  5069  0091                     	;# 
  5070  0093                     	;# 
  5071  0094                     	;# 
  5072  0095                     	;# 
  5073  0096                     	;# 
  5074  0097                     	;# 
  5075  0098                     	;# 
  5076  0099                     	;# 
  5077  009A                     	;# 
  5078  009B                     	;# 
  5079  009C                     	;# 
  5080  009D                     	;# 
  5081  009E                     	;# 
  5082  010C                     	;# 
  5083  010D                     	;# 
  5084  010E                     	;# 
  5085  010E                     	;# 
  5086  010F                     	;# 
  5087  0110                     	;# 
  5088  0110                     	;# 
  5089  0111                     	;# 
  5090  0112                     	;# 
  5091  0112                     	;# 
  5092  0113                     	;# 
  5093  0114                     	;# 
  5094  0114                     	;# 
  5095  0115                     	;# 
  5096  0116                     	;# 
  5097  0116                     	;# 
  5098  0117                     	;# 
  5099  0119                     	;# 
  5100  0119                     	;# 
  5101  0119                     	;# 
  5102  011A                     	;# 
  5103  011A                     	;# 
  5104  011A                     	;# 
  5105  011B                     	;# 
  5106  011B                     	;# 
  5107  011B                     	;# 
  5108  011B                     	;# 
  5109  011B                     	;# 
  5110  011C                     	;# 
  5111  011C                     	;# 
  5112  011C                     	;# 
  5113  011D                     	;# 
  5114  011D                     	;# 
  5115  011D                     	;# 
  5116  011E                     	;# 
  5117  011E                     	;# 
  5118  011E                     	;# 
  5119  011F                     	;# 
  5120  011F                     	;# 
  5121  011F                     	;# 
  5122  011F                     	;# 
  5123  011F                     	;# 
  5124  018C                     	;# 
  5125  018D                     	;# 
  5126  018E                     	;# 
  5127  018F                     	;# 
  5128  0190                     	;# 
  5129  0191                     	;# 
  5130  0192                     	;# 
  5131  0196                     	;# 
  5132  0197                     	;# 
  5133  0198                     	;# 
  5134  0199                     	;# 
  5135  019A                     	;# 
  5136  019B                     	;# 
  5137  019C                     	;# 
  5138  020C                     	;# 
  5139  020C                     	;# 
  5140  020D                     	;# 
  5141  020E                     	;# 
  5142  020F                     	;# 
  5143  020F                     	;# 
  5144  0210                     	;# 
  5145  0210                     	;# 
  5146  0211                     	;# 
  5147  0211                     	;# 
  5148  0212                     	;# 
  5149  0212                     	;# 
  5150  0213                     	;# 
  5151  0214                     	;# 
  5152  0215                     	;# 
  5153  0215                     	;# 
  5154  0216                     	;# 
  5155  0216                     	;# 
  5156  0217                     	;# 
  5157  0217                     	;# 
  5158  0218                     	;# 
  5159  0218                     	;# 
  5160  0219                     	;# 
  5161  021A                     	;# 
  5162  021B                     	;# 
  5163  021B                     	;# 
  5164  021C                     	;# 
  5165  021C                     	;# 
  5166  021D                     	;# 
  5167  021D                     	;# 
  5168  021E                     	;# 
  5169  021F                     	;# 
  5170  028C                     	;# 
  5171  028C                     	;# 
  5172  028D                     	;# 
  5173  028D                     	;# 
  5174  028E                     	;# 
  5175  028F                     	;# 
  5176  0290                     	;# 
  5177  0290                     	;# 
  5178  0291                     	;# 
  5179  0292                     	;# 
  5180  0292                     	;# 
  5181  0293                     	;# 
  5182  0293                     	;# 
  5183  0294                     	;# 
  5184  0295                     	;# 
  5185  0296                     	;# 
  5186  0296                     	;# 
  5187  0297                     	;# 
  5188  0298                     	;# 
  5189  0298                     	;# 
  5190  0299                     	;# 
  5191  0299                     	;# 
  5192  029A                     	;# 
  5193  029B                     	;# 
  5194  029C                     	;# 
  5195  029C                     	;# 
  5196  029D                     	;# 
  5197  030C                     	;# 
  5198  030C                     	;# 
  5199  030D                     	;# 
  5200  030E                     	;# 
  5201  030F                     	;# 
  5202  0310                     	;# 
  5203  0310                     	;# 
  5204  0311                     	;# 
  5205  0312                     	;# 
  5206  0313                     	;# 
  5207  0314                     	;# 
  5208  0314                     	;# 
  5209  0315                     	;# 
  5210  0316                     	;# 
  5211  0317                     	;# 
  5212  0318                     	;# 
  5213  0318                     	;# 
  5214  0319                     	;# 
  5215  031A                     	;# 
  5216  031B                     	;# 
  5217  031C                     	;# 
  5218  031C                     	;# 
  5219  031D                     	;# 
  5220  031E                     	;# 
  5221  031F                     	;# 
  5222  038C                     	;# 
  5223  038C                     	;# 
  5224  038D                     	;# 
  5225  038E                     	;# 
  5226  0390                     	;# 
  5227  0390                     	;# 
  5228  0391                     	;# 
  5229  0392                     	;# 
  5230  040C                     	;# 
  5231  040D                     	;# 
  5232  040E                     	;# 
  5233  040F                     	;# 
  5234  0410                     	;# 
  5235  0411                     	;# 
  5236  0416                     	;# 
  5237  0416                     	;# 
  5238  0417                     	;# 
  5239  0418                     	;# 
  5240  0418                     	;# 
  5241  0419                     	;# 
  5242  041A                     	;# 
  5243  041A                     	;# 
  5244  041B                     	;# 
  5245  041C                     	;# 
  5246  041C                     	;# 
  5247  041D                     	;# 
  5248  041E                     	;# 
  5249  041F                     	;# 
  5250  048C                     	;# 
  5251  048C                     	;# 
  5252  048D                     	;# 
  5253  048E                     	;# 
  5254  048F                     	;# 
  5255  048F                     	;# 
  5256  0490                     	;# 
  5257  0491                     	;# 
  5258  0492                     	;# 
  5259  0492                     	;# 
  5260  0493                     	;# 
  5261  0494                     	;# 
  5262  0495                     	;# 
  5263  0495                     	;# 
  5264  0496                     	;# 
  5265  0497                     	;# 
  5266  0498                     	;# 
  5267  0499                     	;# 
  5268  049A                     	;# 
  5269  049B                     	;# 
  5270  049C                     	;# 
  5271  049D                     	;# 
  5272  050C                     	;# 
  5273  050C                     	;# 
  5274  050D                     	;# 
  5275  050E                     	;# 
  5276  050F                     	;# 
  5277  050F                     	;# 
  5278  0510                     	;# 
  5279  0511                     	;# 
  5280  0512                     	;# 
  5281  0512                     	;# 
  5282  0513                     	;# 
  5283  0514                     	;# 
  5284  0515                     	;# 
  5285  0515                     	;# 
  5286  0516                     	;# 
  5287  0517                     	;# 
  5288  0518                     	;# 
  5289  0519                     	;# 
  5290  051A                     	;# 
  5291  051B                     	;# 
  5292  051C                     	;# 
  5293  051D                     	;# 
  5294  058C                     	;# 
  5295  058C                     	;# 
  5296  058D                     	;# 
  5297  058E                     	;# 
  5298  058F                     	;# 
  5299  058F                     	;# 
  5300  0590                     	;# 
  5301  0591                     	;# 
  5302  0592                     	;# 
  5303  0593                     	;# 
  5304  060C                     	;# 
  5305  060D                     	;# 
  5306  060E                     	;# 
  5307  060F                     	;# 
  5308  0610                     	;# 
  5309  0611                     	;# 
  5310  0612                     	;# 
  5311  0613                     	;# 
  5312  0614                     	;# 
  5313  0616                     	;# 
  5314  0617                     	;# 
  5315  0618                     	;# 
  5316  0619                     	;# 
  5317  061A                     	;# 
  5318  061B                     	;# 
  5319  061C                     	;# 
  5320  061D                     	;# 
  5321  061E                     	;# 
  5322  068C                     	;# 
  5323  068D                     	;# 
  5324  068E                     	;# 
  5325  068F                     	;# 
  5326  0690                     	;# 
  5327  0691                     	;# 
  5328  0692                     	;# 
  5329  0693                     	;# 
  5330  0694                     	;# 
  5331  070C                     	;# 
  5332  070D                     	;# 
  5333  070E                     	;# 
  5334  070F                     	;# 
  5335  0710                     	;# 
  5336  0711                     	;# 
  5337  0712                     	;# 
  5338  0713                     	;# 
  5339  0714                     	;# 
  5340  0716                     	;# 
  5341  0717                     	;# 
  5342  0718                     	;# 
  5343  0719                     	;# 
  5344  071A                     	;# 
  5345  071B                     	;# 
  5346  071C                     	;# 
  5347  071D                     	;# 
  5348  071E                     	;# 
  5349  0796                     	;# 
  5350  0797                     	;# 
  5351  0798                     	;# 
  5352  0799                     	;# 
  5353  079A                     	;# 
  5354  079B                     	;# 
  5355  080C                     	;# 
  5356  080D                     	;# 
  5357  080E                     	;# 
  5358  080F                     	;# 
  5359  0810                     	;# 
  5360  0811                     	;# 
  5361  0812                     	;# 
  5362  0813                     	;# 
  5363  0814                     	;# 
  5364  081A                     	;# 
  5365  081B                     	;# 
  5366  081C                     	;# 
  5367  081D                     	;# 
  5368  081E                     	;# 
  5369  081F                     	;# 
  5370  088C                     	;# 
  5371  088D                     	;# 
  5372  088E                     	;# 
  5373  088F                     	;# 
  5374  0890                     	;# 
  5375  0891                     	;# 
  5376  0892                     	;# 
  5377  0893                     	;# 
  5378  0895                     	;# 
  5379  0896                     	;# 
  5380  0897                     	;# 
  5381  0898                     	;# 
  5382  0899                     	;# 
  5383  089A                     	;# 
  5384  089B                     	;# 
  5385  090C                     	;# 
  5386  090E                     	;# 
  5387  090F                     	;# 
  5388  091F                     	;# 
  5389  091F                     	;# 
  5390  098F                     	;# 
  5391  098F                     	;# 
  5392  0990                     	;# 
  5393  0991                     	;# 
  5394  0992                     	;# 
  5395  0993                     	;# 
  5396  0994                     	;# 
  5397  0995                     	;# 
  5398  0996                     	;# 
  5399  0997                     	;# 
  5400  0E0F                     	;# 
  5401  0E10                     	;# 
  5402  0E11                     	;# 
  5403  0E12                     	;# 
  5404  0E13                     	;# 
  5405  0E14                     	;# 
  5406  0E15                     	;# 
  5407  0E16                     	;# 
  5408  0E17                     	;# 
  5409  0E18                     	;# 
  5410  0E19                     	;# 
  5411  0E1A                     	;# 
  5412  0E1B                     	;# 
  5413  0E1C                     	;# 
  5414  0E1D                     	;# 
  5415  0E1E                     	;# 
  5416  0E1F                     	;# 
  5417  0E20                     	;# 
  5418  0E21                     	;# 
  5419  0E22                     	;# 
  5420  0E23                     	;# 
  5421  0E24                     	;# 
  5422  0E25                     	;# 
  5423  0E26                     	;# 
  5424  0E27                     	;# 
  5425  0E28                     	;# 
  5426  0E29                     	;# 
  5427  0E2A                     	;# 
  5428  0E2B                     	;# 
  5429  0E2C                     	;# 
  5430  0E2D                     	;# 
  5431  0E2E                     	;# 
  5432  0E2F                     	;# 
  5433  0E30                     	;# 
  5434  0E31                     	;# 
  5435  0E32                     	;# 
  5436  0E33                     	;# 
  5437  0E34                     	;# 
  5438  0E35                     	;# 
  5439  0E36                     	;# 
  5440  0E37                     	;# 
  5441  0E8F                     	;# 
  5442  0E90                     	;# 
  5443  0E91                     	;# 
  5444  0E92                     	;# 
  5445  0E93                     	;# 
  5446  0E94                     	;# 
  5447  0E95                     	;# 
  5448  0E96                     	;# 
  5449  0E97                     	;# 
  5450  0E9C                     	;# 
  5451  0E9D                     	;# 
  5452  0E9E                     	;# 
  5453  0EA1                     	;# 
  5454  0EA2                     	;# 
  5455  0EA3                     	;# 
  5456  0EA4                     	;# 
  5457  0EA5                     	;# 
  5458  0EA9                     	;# 
  5459  0EAA                     	;# 
  5460  0EAB                     	;# 
  5461  0EAC                     	;# 
  5462  0EB1                     	;# 
  5463  0EB2                     	;# 
  5464  0EB3                     	;# 
  5465  0EB8                     	;# 
  5466  0EB9                     	;# 
  5467  0EBA                     	;# 
  5468  0EBB                     	;# 
  5469  0EBC                     	;# 
  5470  0EBD                     	;# 
  5471  0EBE                     	;# 
  5472  0EC3                     	;# 
  5473  0EC5                     	;# 
  5474  0EC6                     	;# 
  5475  0EC7                     	;# 
  5476  0EC8                     	;# 
  5477  0EC9                     	;# 
  5478  0ECA                     	;# 
  5479  0ECB                     	;# 
  5480  0ECC                     	;# 
  5481  0F10                     	;# 
  5482  0F11                     	;# 
  5483  0F12                     	;# 
  5484  0F13                     	;# 
  5485  0F14                     	;# 
  5486  0F15                     	;# 
  5487  0F16                     	;# 
  5488  0F17                     	;# 
  5489  0F18                     	;# 
  5490  0F19                     	;# 
  5491  0F1A                     	;# 
  5492  0F1B                     	;# 
  5493  0F1C                     	;# 
  5494  0F1D                     	;# 
  5495  0F1E                     	;# 
  5496  0F1F                     	;# 
  5497  0F20                     	;# 
  5498  0F21                     	;# 
  5499  0F22                     	;# 
  5500  0F23                     	;# 
  5501  0F24                     	;# 
  5502  0F25                     	;# 
  5503  0F26                     	;# 
  5504  0F27                     	;# 
  5505  0F28                     	;# 
  5506  0F29                     	;# 
  5507  0F2A                     	;# 
  5508  0F2B                     	;# 
  5509  0F2C                     	;# 
  5510  0F2D                     	;# 
  5511  0F2E                     	;# 
  5512  0F2F                     	;# 
  5513  0F30                     	;# 
  5514  0F31                     	;# 
  5515  0F32                     	;# 
  5516  0F38                     	;# 
  5517  0F39                     	;# 
  5518  0F3A                     	;# 
  5519  0F3B                     	;# 
  5520  0F3C                     	;# 
  5521  0F3D                     	;# 
  5522  0F3E                     	;# 
  5523  0F3F                     	;# 
  5524  0F40                     	;# 
  5525  0F41                     	;# 
  5526  0F43                     	;# 
  5527  0F44                     	;# 
  5528  0F45                     	;# 
  5529  0F46                     	;# 
  5530  0F47                     	;# 
  5531  0F48                     	;# 
  5532  0F49                     	;# 
  5533  0F4A                     	;# 
  5534  0F4B                     	;# 
  5535  0F4C                     	;# 
  5536  0F4E                     	;# 
  5537  0F4F                     	;# 
  5538  0F50                     	;# 
  5539  0F51                     	;# 
  5540  0F52                     	;# 
  5541  0F53                     	;# 
  5542  0F54                     	;# 
  5543  0F55                     	;# 
  5544  0F56                     	;# 
  5545  0F57                     	;# 
  5546  0F59                     	;# 
  5547  0F5A                     	;# 
  5548  0F5B                     	;# 
  5549  0F5C                     	;# 
  5550  0F5D                     	;# 
  5551  0F61                     	;# 
  5552  0F62                     	;# 
  5553  0F64                     	;# 
  5554  0F65                     	;# 
  5555  0F66                     	;# 
  5556  0F67                     	;# 
  5557  0F68                     	;# 
  5558  0F69                     	;# 
  5559  0F6A                     	;# 
  5560  0F6B                     	;# 
  5561  0F6C                     	;# 
  5562  0F6D                     	;# 
  5563  0FE4                     	;# 
  5564  0FE5                     	;# 
  5565  0FE6                     	;# 
  5566  0FE7                     	;# 
  5567  0FE8                     	;# 
  5568  0FE9                     	;# 
  5569  0FEA                     	;# 
  5570  0FEB                     	;# 
  5571  0FED                     	;# 
  5572  0FEE                     	;# 
  5573  0FEF                     	;# 
  5574  0000                     	;# 
  5575  0001                     	;# 
  5576  0002                     	;# 
  5577  0003                     	;# 
  5578  0004                     	;# 
  5579  0005                     	;# 
  5580  0006                     	;# 
  5581  0007                     	;# 
  5582  0008                     	;# 
  5583  0009                     	;# 
  5584  000A                     	;# 
  5585  000B                     	;# 
  5586  000C                     	;# 
  5587  000D                     	;# 
  5588  000E                     	;# 
  5589  000F                     	;# 
  5590  0010                     	;# 
  5591  0011                     	;# 
  5592  0012                     	;# 
  5593  0013                     	;# 
  5594  0014                     	;# 
  5595  0015                     	;# 
  5596  0016                     	;# 
  5597  0017                     	;# 
  5598  0018                     	;# 
  5599  0019                     	;# 
  5600  001A                     	;# 
  5601  001C                     	;# 
  5602  001C                     	;# 
  5603  001D                     	;# 
  5604  001D                     	;# 
  5605  001E                     	;# 
  5606  001F                     	;# 
  5607  008C                     	;# 
  5608  008C                     	;# 
  5609  008D                     	;# 
  5610  008E                     	;# 
  5611  008E                     	;# 
  5612  008F                     	;# 
  5613  0090                     	;# 
  5614  0090                     	;# 
  5615  0091                     	;# 
  5616  0093                     	;# 
  5617  0094                     	;# 
  5618  0095                     	;# 
  5619  0096                     	;# 
  5620  0097                     	;# 
  5621  0098                     	;# 
  5622  0099                     	;# 
  5623  009A                     	;# 
  5624  009B                     	;# 
  5625  009C                     	;# 
  5626  009D                     	;# 
  5627  009E                     	;# 
  5628  010C                     	;# 
  5629  010D                     	;# 
  5630  010E                     	;# 
  5631  010E                     	;# 
  5632  010F                     	;# 
  5633  0110                     	;# 
  5634  0110                     	;# 
  5635  0111                     	;# 
  5636  0112                     	;# 
  5637  0112                     	;# 
  5638  0113                     	;# 
  5639  0114                     	;# 
  5640  0114                     	;# 
  5641  0115                     	;# 
  5642  0116                     	;# 
  5643  0116                     	;# 
  5644  0117                     	;# 
  5645  0119                     	;# 
  5646  0119                     	;# 
  5647  0119                     	;# 
  5648  011A                     	;# 
  5649  011A                     	;# 
  5650  011A                     	;# 
  5651  011B                     	;# 
  5652  011B                     	;# 
  5653  011B                     	;# 
  5654  011B                     	;# 
  5655  011B                     	;# 
  5656  011C                     	;# 
  5657  011C                     	;# 
  5658  011C                     	;# 
  5659  011D                     	;# 
  5660  011D                     	;# 
  5661  011D                     	;# 
  5662  011E                     	;# 
  5663  011E                     	;# 
  5664  011E                     	;# 
  5665  011F                     	;# 
  5666  011F                     	;# 
  5667  011F                     	;# 
  5668  011F                     	;# 
  5669  011F                     	;# 
  5670  018C                     	;# 
  5671  018D                     	;# 
  5672  018E                     	;# 
  5673  018F                     	;# 
  5674  0190                     	;# 
  5675  0191                     	;# 
  5676  0192                     	;# 
  5677  0196                     	;# 
  5678  0197                     	;# 
  5679  0198                     	;# 
  5680  0199                     	;# 
  5681  019A                     	;# 
  5682  019B                     	;# 
  5683  019C                     	;# 
  5684  020C                     	;# 
  5685  020C                     	;# 
  5686  020D                     	;# 
  5687  020E                     	;# 
  5688  020F                     	;# 
  5689  020F                     	;# 
  5690  0210                     	;# 
  5691  0210                     	;# 
  5692  0211                     	;# 
  5693  0211                     	;# 
  5694  0212                     	;# 
  5695  0212                     	;# 
  5696  0213                     	;# 
  5697  0214                     	;# 
  5698  0215                     	;# 
  5699  0215                     	;# 
  5700  0216                     	;# 
  5701  0216                     	;# 
  5702  0217                     	;# 
  5703  0217                     	;# 
  5704  0218                     	;# 
  5705  0218                     	;# 
  5706  0219                     	;# 
  5707  021A                     	;# 
  5708  021B                     	;# 
  5709  021B                     	;# 
  5710  021C                     	;# 
  5711  021C                     	;# 
  5712  021D                     	;# 
  5713  021D                     	;# 
  5714  021E                     	;# 
  5715  021F                     	;# 
  5716  028C                     	;# 
  5717  028C                     	;# 
  5718  028D                     	;# 
  5719  028D                     	;# 
  5720  028E                     	;# 
  5721  028F                     	;# 
  5722  0290                     	;# 
  5723  0290                     	;# 
  5724  0291                     	;# 
  5725  0292                     	;# 
  5726  0292                     	;# 
  5727  0293                     	;# 
  5728  0293                     	;# 
  5729  0294                     	;# 
  5730  0295                     	;# 
  5731  0296                     	;# 
  5732  0296                     	;# 
  5733  0297                     	;# 
  5734  0298                     	;# 
  5735  0298                     	;# 
  5736  0299                     	;# 
  5737  0299                     	;# 
  5738  029A                     	;# 
  5739  029B                     	;# 
  5740  029C                     	;# 
  5741  029C                     	;# 
  5742  029D                     	;# 
  5743  030C                     	;# 
  5744  030C                     	;# 
  5745  030D                     	;# 
  5746  030E                     	;# 
  5747  030F                     	;# 
  5748  0310                     	;# 
  5749  0310                     	;# 
  5750  0311                     	;# 
  5751  0312                     	;# 
  5752  0313                     	;# 
  5753  0314                     	;# 
  5754  0314                     	;# 
  5755  0315                     	;# 
  5756  0316                     	;# 
  5757  0317                     	;# 
  5758  0318                     	;# 
  5759  0318                     	;# 
  5760  0319                     	;# 
  5761  031A                     	;# 
  5762  031B                     	;# 
  5763  031C                     	;# 
  5764  031C                     	;# 
  5765  031D                     	;# 
  5766  031E                     	;# 
  5767  031F                     	;# 
  5768  038C                     	;# 
  5769  038C                     	;# 
  5770  038D                     	;# 
  5771  038E                     	;# 
  5772  0390                     	;# 
  5773  0390                     	;# 
  5774  0391                     	;# 
  5775  0392                     	;# 
  5776  040C                     	;# 
  5777  040D                     	;# 
  5778  040E                     	;# 
  5779  040F                     	;# 
  5780  0410                     	;# 
  5781  0411                     	;# 
  5782  0416                     	;# 
  5783  0416                     	;# 
  5784  0417                     	;# 
  5785  0418                     	;# 
  5786  0418                     	;# 
  5787  0419                     	;# 
  5788  041A                     	;# 
  5789  041A                     	;# 
  5790  041B                     	;# 
  5791  041C                     	;# 
  5792  041C                     	;# 
  5793  041D                     	;# 
  5794  041E                     	;# 
  5795  041F                     	;# 
  5796  048C                     	;# 
  5797  048C                     	;# 
  5798  048D                     	;# 
  5799  048E                     	;# 
  5800  048F                     	;# 
  5801  048F                     	;# 
  5802  0490                     	;# 
  5803  0491                     	;# 
  5804  0492                     	;# 
  5805  0492                     	;# 
  5806  0493                     	;# 
  5807  0494                     	;# 
  5808  0495                     	;# 
  5809  0495                     	;# 
  5810  0496                     	;# 
  5811  0497                     	;# 
  5812  0498                     	;# 
  5813  0499                     	;# 
  5814  049A                     	;# 
  5815  049B                     	;# 
  5816  049C                     	;# 
  5817  049D                     	;# 
  5818  050C                     	;# 
  5819  050C                     	;# 
  5820  050D                     	;# 
  5821  050E                     	;# 
  5822  050F                     	;# 
  5823  050F                     	;# 
  5824  0510                     	;# 
  5825  0511                     	;# 
  5826  0512                     	;# 
  5827  0512                     	;# 
  5828  0513                     	;# 
  5829  0514                     	;# 
  5830  0515                     	;# 
  5831  0515                     	;# 
  5832  0516                     	;# 
  5833  0517                     	;# 
  5834  0518                     	;# 
  5835  0519                     	;# 
  5836  051A                     	;# 
  5837  051B                     	;# 
  5838  051C                     	;# 
  5839  051D                     	;# 
  5840  058C                     	;# 
  5841  058C                     	;# 
  5842  058D                     	;# 
  5843  058E                     	;# 
  5844  058F                     	;# 
  5845  058F                     	;# 
  5846  0590                     	;# 
  5847  0591                     	;# 
  5848  0592                     	;# 
  5849  0593                     	;# 
  5850  060C                     	;# 
  5851  060D                     	;# 
  5852  060E                     	;# 
  5853  060F                     	;# 
  5854  0610                     	;# 
  5855  0611                     	;# 
  5856  0612                     	;# 
  5857  0613                     	;# 
  5858  0614                     	;# 
  5859  0616                     	;# 
  5860  0617                     	;# 
  5861  0618                     	;# 
  5862  0619                     	;# 
  5863  061A                     	;# 
  5864  061B                     	;# 
  5865  061C                     	;# 
  5866  061D                     	;# 
  5867  061E                     	;# 
  5868  068C                     	;# 
  5869  068D                     	;# 
  5870  068E                     	;# 
  5871  068F                     	;# 
  5872  0690                     	;# 
  5873  0691                     	;# 
  5874  0692                     	;# 
  5875  0693                     	;# 
  5876  0694                     	;# 
  5877  070C                     	;# 
  5878  070D                     	;# 
  5879  070E                     	;# 
  5880  070F                     	;# 
  5881  0710                     	;# 
  5882  0711                     	;# 
  5883  0712                     	;# 
  5884  0713                     	;# 
  5885  0714                     	;# 
  5886  0716                     	;# 
  5887  0717                     	;# 
  5888  0718                     	;# 
  5889  0719                     	;# 
  5890  071A                     	;# 
  5891  071B                     	;# 
  5892  071C                     	;# 
  5893  071D                     	;# 
  5894  071E                     	;# 
  5895  0796                     	;# 
  5896  0797                     	;# 
  5897  0798                     	;# 
  5898  0799                     	;# 
  5899  079A                     	;# 
  5900  079B                     	;# 
  5901  080C                     	;# 
  5902  080D                     	;# 
  5903  080E                     	;# 
  5904  080F                     	;# 
  5905  0810                     	;# 
  5906  0811                     	;# 
  5907  0812                     	;# 
  5908  0813                     	;# 
  5909  0814                     	;# 
  5910  081A                     	;# 
  5911  081B                     	;# 
  5912  081C                     	;# 
  5913  081D                     	;# 
  5914  081E                     	;# 
  5915  081F                     	;# 
  5916  088C                     	;# 
  5917  088D                     	;# 
  5918  088E                     	;# 
  5919  088F                     	;# 
  5920  0890                     	;# 
  5921  0891                     	;# 
  5922  0892                     	;# 
  5923  0893                     	;# 
  5924  0895                     	;# 
  5925  0896                     	;# 
  5926  0897                     	;# 
  5927  0898                     	;# 
  5928  0899                     	;# 
  5929  089A                     	;# 
  5930  089B                     	;# 
  5931  090C                     	;# 
  5932  090E                     	;# 
  5933  090F                     	;# 
  5934  091F                     	;# 
  5935  091F                     	;# 
  5936  098F                     	;# 
  5937  098F                     	;# 
  5938  0990                     	;# 
  5939  0991                     	;# 
  5940  0992                     	;# 
  5941  0993                     	;# 
  5942  0994                     	;# 
  5943  0995                     	;# 
  5944  0996                     	;# 
  5945  0997                     	;# 
  5946  0E0F                     	;# 
  5947  0E10                     	;# 
  5948  0E11                     	;# 
  5949  0E12                     	;# 
  5950  0E13                     	;# 
  5951  0E14                     	;# 
  5952  0E15                     	;# 
  5953  0E16                     	;# 
  5954  0E17                     	;# 
  5955  0E18                     	;# 
  5956  0E19                     	;# 
  5957  0E1A                     	;# 
  5958  0E1B                     	;# 
  5959  0E1C                     	;# 
  5960  0E1D                     	;# 
  5961  0E1E                     	;# 
  5962  0E1F                     	;# 
  5963  0E20                     	;# 
  5964  0E21                     	;# 
  5965  0E22                     	;# 
  5966  0E23                     	;# 
  5967  0E24                     	;# 
  5968  0E25                     	;# 
  5969  0E26                     	;# 
  5970  0E27                     	;# 
  5971  0E28                     	;# 
  5972  0E29                     	;# 
  5973  0E2A                     	;# 
  5974  0E2B                     	;# 
  5975  0E2C                     	;# 
  5976  0E2D                     	;# 
  5977  0E2E                     	;# 
  5978  0E2F                     	;# 
  5979  0E30                     	;# 
  5980  0E31                     	;# 
  5981  0E32                     	;# 
  5982  0E33                     	;# 
  5983  0E34                     	;# 
  5984  0E35                     	;# 
  5985  0E36                     	;# 
  5986  0E37                     	;# 
  5987  0E8F                     	;# 
  5988  0E90                     	;# 
  5989  0E91                     	;# 
  5990  0E92                     	;# 
  5991  0E93                     	;# 
  5992  0E94                     	;# 
  5993  0E95                     	;# 
  5994  0E96                     	;# 
  5995  0E97                     	;# 
  5996  0E9C                     	;# 
  5997  0E9D                     	;# 
  5998  0E9E                     	;# 
  5999  0EA1                     	;# 
  6000  0EA2                     	;# 
  6001  0EA3                     	;# 
  6002  0EA4                     	;# 
  6003  0EA5                     	;# 
  6004  0EA9                     	;# 
  6005  0EAA                     	;# 
  6006  0EAB                     	;# 
  6007  0EAC                     	;# 
  6008  0EB1                     	;# 
  6009  0EB2                     	;# 
  6010  0EB3                     	;# 
  6011  0EB8                     	;# 
  6012  0EB9                     	;# 
  6013  0EBA                     	;# 
  6014  0EBB                     	;# 
  6015  0EBC                     	;# 
  6016  0EBD                     	;# 
  6017  0EBE                     	;# 
  6018  0EC3                     	;# 
  6019  0EC5                     	;# 
  6020  0EC6                     	;# 
  6021  0EC7                     	;# 
  6022  0EC8                     	;# 
  6023  0EC9                     	;# 
  6024  0ECA                     	;# 
  6025  0ECB                     	;# 
  6026  0ECC                     	;# 
  6027  0F10                     	;# 
  6028  0F11                     	;# 
  6029  0F12                     	;# 
  6030  0F13                     	;# 
  6031  0F14                     	;# 
  6032  0F15                     	;# 
  6033  0F16                     	;# 
  6034  0F17                     	;# 
  6035  0F18                     	;# 
  6036  0F19                     	;# 
  6037  0F1A                     	;# 
  6038  0F1B                     	;# 
  6039  0F1C                     	;# 
  6040  0F1D                     	;# 
  6041  0F1E                     	;# 
  6042  0F1F                     	;# 
  6043  0F20                     	;# 
  6044  0F21                     	;# 
  6045  0F22                     	;# 
  6046  0F23                     	;# 
  6047  0F24                     	;# 
  6048  0F25                     	;# 
  6049  0F26                     	;# 
  6050  0F27                     	;# 
  6051  0F28                     	;# 
  6052  0F29                     	;# 
  6053  0F2A                     	;# 
  6054  0F2B                     	;# 
  6055  0F2C                     	;# 
  6056  0F2D                     	;# 
  6057  0F2E                     	;# 
  6058  0F2F                     	;# 
  6059  0F30                     	;# 
  6060  0F31                     	;# 
  6061  0F32                     	;# 
  6062  0F38                     	;# 
  6063  0F39                     	;# 
  6064  0F3A                     	;# 
  6065  0F3B                     	;# 
  6066  0F3C                     	;# 
  6067  0F3D                     	;# 
  6068  0F3E                     	;# 
  6069  0F3F                     	;# 
  6070  0F40                     	;# 
  6071  0F41                     	;# 
  6072  0F43                     	;# 
  6073  0F44                     	;# 
  6074  0F45                     	;# 
  6075  0F46                     	;# 
  6076  0F47                     	;# 
  6077  0F48                     	;# 
  6078  0F49                     	;# 
  6079  0F4A                     	;# 
  6080  0F4B                     	;# 
  6081  0F4C                     	;# 
  6082  0F4E                     	;# 
  6083  0F4F                     	;# 
  6084  0F50                     	;# 
  6085  0F51                     	;# 
  6086  0F52                     	;# 
  6087  0F53                     	;# 
  6088  0F54                     	;# 
  6089  0F55                     	;# 
  6090  0F56                     	;# 
  6091  0F57                     	;# 
  6092  0F59                     	;# 
  6093  0F5A                     	;# 
  6094  0F5B                     	;# 
  6095  0F5C                     	;# 
  6096  0F5D                     	;# 
  6097  0F61                     	;# 
  6098  0F62                     	;# 
  6099  0F64                     	;# 
  6100  0F65                     	;# 
  6101  0F66                     	;# 
  6102  0F67                     	;# 
  6103  0F68                     	;# 
  6104  0F69                     	;# 
  6105  0F6A                     	;# 
  6106  0F6B                     	;# 
  6107  0F6C                     	;# 
  6108  0F6D                     	;# 
  6109  0FE4                     	;# 
  6110  0FE5                     	;# 
  6111  0FE6                     	;# 
  6112  0FE7                     	;# 
  6113  0FE8                     	;# 
  6114  0FE9                     	;# 
  6115  0FEA                     	;# 
  6116  0FEB                     	;# 
  6117  0FED                     	;# 
  6118  0FEE                     	;# 
  6119  0FEF                     	;# 
  6120  0000                     	;# 
  6121  0001                     	;# 
  6122  0002                     	;# 
  6123  0003                     	;# 
  6124  0004                     	;# 
  6125  0005                     	;# 
  6126  0006                     	;# 
  6127  0007                     	;# 
  6128  0008                     	;# 
  6129  0009                     	;# 
  6130  000A                     	;# 
  6131  000B                     	;# 
  6132  000C                     	;# 
  6133  000D                     	;# 
  6134  000E                     	;# 
  6135  000F                     	;# 
  6136  0010                     	;# 
  6137  0011                     	;# 
  6138  0012                     	;# 
  6139  0013                     	;# 
  6140  0014                     	;# 
  6141  0015                     	;# 
  6142  0016                     	;# 
  6143  0017                     	;# 
  6144  0018                     	;# 
  6145  0019                     	;# 
  6146  001A                     	;# 
  6147  001C                     	;# 
  6148  001C                     	;# 
  6149  001D                     	;# 
  6150  001D                     	;# 
  6151  001E                     	;# 
  6152  001F                     	;# 
  6153  008C                     	;# 
  6154  008C                     	;# 
  6155  008D                     	;# 
  6156  008E                     	;# 
  6157  008E                     	;# 
  6158  008F                     	;# 
  6159  0090                     	;# 
  6160  0090                     	;# 
  6161  0091                     	;# 
  6162  0093                     	;# 
  6163  0094                     	;# 
  6164  0095                     	;# 
  6165  0096                     	;# 
  6166  0097                     	;# 
  6167  0098                     	;# 
  6168  0099                     	;# 
  6169  009A                     	;# 
  6170  009B                     	;# 
  6171  009C                     	;# 
  6172  009D                     	;# 
  6173  009E                     	;# 
  6174  010C                     	;# 
  6175  010D                     	;# 
  6176  010E                     	;# 
  6177  010E                     	;# 
  6178  010F                     	;# 
  6179  0110                     	;# 
  6180  0110                     	;# 
  6181  0111                     	;# 
  6182  0112                     	;# 
  6183  0112                     	;# 
  6184  0113                     	;# 
  6185  0114                     	;# 
  6186  0114                     	;# 
  6187  0115                     	;# 
  6188  0116                     	;# 
  6189  0116                     	;# 
  6190  0117                     	;# 
  6191  0119                     	;# 
  6192  0119                     	;# 
  6193  0119                     	;# 
  6194  011A                     	;# 
  6195  011A                     	;# 
  6196  011A                     	;# 
  6197  011B                     	;# 
  6198  011B                     	;# 
  6199  011B                     	;# 
  6200  011B                     	;# 
  6201  011B                     	;# 
  6202  011C                     	;# 
  6203  011C                     	;# 
  6204  011C                     	;# 
  6205  011D                     	;# 
  6206  011D                     	;# 
  6207  011D                     	;# 
  6208  011E                     	;# 
  6209  011E                     	;# 
  6210  011E                     	;# 
  6211  011F                     	;# 
  6212  011F                     	;# 
  6213  011F                     	;# 
  6214  011F                     	;# 
  6215  011F                     	;# 
  6216  018C                     	;# 
  6217  018D                     	;# 
  6218  018E                     	;# 
  6219  018F                     	;# 
  6220  0190                     	;# 
  6221  0191                     	;# 
  6222  0192                     	;# 
  6223  0196                     	;# 
  6224  0197                     	;# 
  6225  0198                     	;# 
  6226  0199                     	;# 
  6227  019A                     	;# 
  6228  019B                     	;# 
  6229  019C                     	;# 
  6230  020C                     	;# 
  6231  020C                     	;# 
  6232  020D                     	;# 
  6233  020E                     	;# 
  6234  020F                     	;# 
  6235  020F                     	;# 
  6236  0210                     	;# 
  6237  0210                     	;# 
  6238  0211                     	;# 
  6239  0211                     	;# 
  6240  0212                     	;# 
  6241  0212                     	;# 
  6242  0213                     	;# 
  6243  0214                     	;# 
  6244  0215                     	;# 
  6245  0215                     	;# 
  6246  0216                     	;# 
  6247  0216                     	;# 
  6248  0217                     	;# 
  6249  0217                     	;# 
  6250  0218                     	;# 
  6251  0218                     	;# 
  6252  0219                     	;# 
  6253  021A                     	;# 
  6254  021B                     	;# 
  6255  021B                     	;# 
  6256  021C                     	;# 
  6257  021C                     	;# 
  6258  021D                     	;# 
  6259  021D                     	;# 
  6260  021E                     	;# 
  6261  021F                     	;# 
  6262  028C                     	;# 
  6263  028C                     	;# 
  6264  028D                     	;# 
  6265  028D                     	;# 
  6266  028E                     	;# 
  6267  028F                     	;# 
  6268  0290                     	;# 
  6269  0290                     	;# 
  6270  0291                     	;# 
  6271  0292                     	;# 
  6272  0292                     	;# 
  6273  0293                     	;# 
  6274  0293                     	;# 
  6275  0294                     	;# 
  6276  0295                     	;# 
  6277  0296                     	;# 
  6278  0296                     	;# 
  6279  0297                     	;# 
  6280  0298                     	;# 
  6281  0298                     	;# 
  6282  0299                     	;# 
  6283  0299                     	;# 
  6284  029A                     	;# 
  6285  029B                     	;# 
  6286  029C                     	;# 
  6287  029C                     	;# 
  6288  029D                     	;# 
  6289  030C                     	;# 
  6290  030C                     	;# 
  6291  030D                     	;# 
  6292  030E                     	;# 
  6293  030F                     	;# 
  6294  0310                     	;# 
  6295  0310                     	;# 
  6296  0311                     	;# 
  6297  0312                     	;# 
  6298  0313                     	;# 
  6299  0314                     	;# 
  6300  0314                     	;# 
  6301  0315                     	;# 
  6302  0316                     	;# 
  6303  0317                     	;# 
  6304  0318                     	;# 
  6305  0318                     	;# 
  6306  0319                     	;# 
  6307  031A                     	;# 
  6308  031B                     	;# 
  6309  031C                     	;# 
  6310  031C                     	;# 
  6311  031D                     	;# 
  6312  031E                     	;# 
  6313  031F                     	;# 
  6314  038C                     	;# 
  6315  038C                     	;# 
  6316  038D                     	;# 
  6317  038E                     	;# 
  6318  0390                     	;# 
  6319  0390                     	;# 
  6320  0391                     	;# 
  6321  0392                     	;# 
  6322  040C                     	;# 
  6323  040D                     	;# 
  6324  040E                     	;# 
  6325  040F                     	;# 
  6326  0410                     	;# 
  6327  0411                     	;# 
  6328  0416                     	;# 
  6329  0416                     	;# 
  6330  0417                     	;# 
  6331  0418                     	;# 
  6332  0418                     	;# 
  6333  0419                     	;# 
  6334  041A                     	;# 
  6335  041A                     	;# 
  6336  041B                     	;# 
  6337  041C                     	;# 
  6338  041C                     	;# 
  6339  041D                     	;# 
  6340  041E                     	;# 
  6341  041F                     	;# 
  6342  048C                     	;# 
  6343  048C                     	;# 
  6344  048D                     	;# 
  6345  048E                     	;# 
  6346  048F                     	;# 
  6347  048F                     	;# 
  6348  0490                     	;# 
  6349  0491                     	;# 
  6350  0492                     	;# 
  6351  0492                     	;# 
  6352  0493                     	;# 
  6353  0494                     	;# 
  6354  0495                     	;# 
  6355  0495                     	;# 
  6356  0496                     	;# 
  6357  0497                     	;# 
  6358  0498                     	;# 
  6359  0499                     	;# 
  6360  049A                     	;# 
  6361  049B                     	;# 
  6362  049C                     	;# 
  6363  049D                     	;# 
  6364  050C                     	;# 
  6365  050C                     	;# 
  6366  050D                     	;# 
  6367  050E                     	;# 
  6368  050F                     	;# 
  6369  050F                     	;# 
  6370  0510                     	;# 
  6371  0511                     	;# 
  6372  0512                     	;# 
  6373  0512                     	;# 
  6374  0513                     	;# 
  6375  0514                     	;# 
  6376  0515                     	;# 
  6377  0515                     	;# 
  6378  0516                     	;# 
  6379  0517                     	;# 
  6380  0518                     	;# 
  6381  0519                     	;# 
  6382  051A                     	;# 
  6383  051B                     	;# 
  6384  051C                     	;# 
  6385  051D                     	;# 
  6386  058C                     	;# 
  6387  058C                     	;# 
  6388  058D                     	;# 
  6389  058E                     	;# 
  6390  058F                     	;# 
  6391  058F                     	;# 
  6392  0590                     	;# 
  6393  0591                     	;# 
  6394  0592                     	;# 
  6395  0593                     	;# 
  6396  060C                     	;# 
  6397  060D                     	;# 
  6398  060E                     	;# 
  6399  060F                     	;# 
  6400  0610                     	;# 
  6401  0611                     	;# 
  6402  0612                     	;# 
  6403  0613                     	;# 
  6404  0614                     	;# 
  6405  0616                     	;# 
  6406  0617                     	;# 
  6407  0618                     	;# 
  6408  0619                     	;# 
  6409  061A                     	;# 
  6410  061B                     	;# 
  6411  061C                     	;# 
  6412  061D                     	;# 
  6413  061E                     	;# 
  6414  068C                     	;# 
  6415  068D                     	;# 
  6416  068E                     	;# 
  6417  068F                     	;# 
  6418  0690                     	;# 
  6419  0691                     	;# 
  6420  0692                     	;# 
  6421  0693                     	;# 
  6422  0694                     	;# 
  6423  070C                     	;# 
  6424  070D                     	;# 
  6425  070E                     	;# 
  6426  070F                     	;# 
  6427  0710                     	;# 
  6428  0711                     	;# 
  6429  0712                     	;# 
  6430  0713                     	;# 
  6431  0714                     	;# 
  6432  0716                     	;# 
  6433  0717                     	;# 
  6434  0718                     	;# 
  6435  0719                     	;# 
  6436  071A                     	;# 
  6437  071B                     	;# 
  6438  071C                     	;# 
  6439  071D                     	;# 
  6440  071E                     	;# 
  6441  0796                     	;# 
  6442  0797                     	;# 
  6443  0798                     	;# 
  6444  0799                     	;# 
  6445  079A                     	;# 
  6446  079B                     	;# 
  6447  080C                     	;# 
  6448  080D                     	;# 
  6449  080E                     	;# 
  6450  080F                     	;# 
  6451  0810                     	;# 
  6452  0811                     	;# 
  6453  0812                     	;# 
  6454  0813                     	;# 
  6455  0814                     	;# 
  6456  081A                     	;# 
  6457  081B                     	;# 
  6458  081C                     	;# 
  6459  081D                     	;# 
  6460  081E                     	;# 
  6461  081F                     	;# 
  6462  088C                     	;# 
  6463  088D                     	;# 
  6464  088E                     	;# 
  6465  088F                     	;# 
  6466  0890                     	;# 
  6467  0891                     	;# 
  6468  0892                     	;# 
  6469  0893                     	;# 
  6470  0895                     	;# 
  6471  0896                     	;# 
  6472  0897                     	;# 
  6473  0898                     	;# 
  6474  0899                     	;# 
  6475  089A                     	;# 
  6476  089B                     	;# 
  6477  090C                     	;# 
  6478  090E                     	;# 
  6479  090F                     	;# 
  6480  091F                     	;# 
  6481  091F                     	;# 
  6482  098F                     	;# 
  6483  098F                     	;# 
  6484  0990                     	;# 
  6485  0991                     	;# 
  6486  0992                     	;# 
  6487  0993                     	;# 
  6488  0994                     	;# 
  6489  0995                     	;# 
  6490  0996                     	;# 
  6491  0997                     	;# 
  6492  0E0F                     	;# 
  6493  0E10                     	;# 
  6494  0E11                     	;# 
  6495  0E12                     	;# 
  6496  0E13                     	;# 
  6497  0E14                     	;# 
  6498  0E15                     	;# 
  6499  0E16                     	;# 
  6500  0E17                     	;# 
  6501  0E18                     	;# 
  6502  0E19                     	;# 
  6503  0E1A                     	;# 
  6504  0E1B                     	;# 
  6505  0E1C                     	;# 
  6506  0E1D                     	;# 
  6507  0E1E                     	;# 
  6508  0E1F                     	;# 
  6509  0E20                     	;# 
  6510  0E21                     	;# 
  6511  0E22                     	;# 
  6512  0E23                     	;# 
  6513  0E24                     	;# 
  6514  0E25                     	;# 
  6515  0E26                     	;# 
  6516  0E27                     	;# 
  6517  0E28                     	;# 
  6518  0E29                     	;# 
  6519  0E2A                     	;# 
  6520  0E2B                     	;# 
  6521  0E2C                     	;# 
  6522  0E2D                     	;# 
  6523  0E2E                     	;# 
  6524  0E2F                     	;# 
  6525  0E30                     	;# 
  6526  0E31                     	;# 
  6527  0E32                     	;# 
  6528  0E33                     	;# 
  6529  0E34                     	;# 
  6530  0E35                     	;# 
  6531  0E36                     	;# 
  6532  0E37                     	;# 
  6533  0E8F                     	;# 
  6534  0E90                     	;# 
  6535  0E91                     	;# 
  6536  0E92                     	;# 
  6537  0E93                     	;# 
  6538  0E94                     	;# 
  6539  0E95                     	;# 
  6540  0E96                     	;# 
  6541  0E97                     	;# 
  6542  0E9C                     	;# 
  6543  0E9D                     	;# 
  6544  0E9E                     	;# 
  6545  0EA1                     	;# 
  6546  0EA2                     	;# 
  6547  0EA3                     	;# 
  6548  0EA4                     	;# 
  6549  0EA5                     	;# 
  6550  0EA9                     	;# 
  6551  0EAA                     	;# 
  6552  0EAB                     	;# 
  6553  0EAC                     	;# 
  6554  0EB1                     	;# 
  6555  0EB2                     	;# 
  6556  0EB3                     	;# 
  6557  0EB8                     	;# 
  6558  0EB9                     	;# 
  6559  0EBA                     	;# 
  6560  0EBB                     	;# 
  6561  0EBC                     	;# 
  6562  0EBD                     	;# 
  6563  0EBE                     	;# 
  6564  0EC3                     	;# 
  6565  0EC5                     	;# 
  6566  0EC6                     	;# 
  6567  0EC7                     	;# 
  6568  0EC8                     	;# 
  6569  0EC9                     	;# 
  6570  0ECA                     	;# 
  6571  0ECB                     	;# 
  6572  0ECC                     	;# 
  6573  0F10                     	;# 
  6574  0F11                     	;# 
  6575  0F12                     	;# 
  6576  0F13                     	;# 
  6577  0F14                     	;# 
  6578  0F15                     	;# 
  6579  0F16                     	;# 
  6580  0F17                     	;# 
  6581  0F18                     	;# 
  6582  0F19                     	;# 
  6583  0F1A                     	;# 
  6584  0F1B                     	;# 
  6585  0F1C                     	;# 
  6586  0F1D                     	;# 
  6587  0F1E                     	;# 
  6588  0F1F                     	;# 
  6589  0F20                     	;# 
  6590  0F21                     	;# 
  6591  0F22                     	;# 
  6592  0F23                     	;# 
  6593  0F24                     	;# 
  6594  0F25                     	;# 
  6595  0F26                     	;# 
  6596  0F27                     	;# 
  6597  0F28                     	;# 
  6598  0F29                     	;# 
  6599  0F2A                     	;# 
  6600  0F2B                     	;# 
  6601  0F2C                     	;# 
  6602  0F2D                     	;# 
  6603  0F2E                     	;# 
  6604  0F2F                     	;# 
  6605  0F30                     	;# 
  6606  0F31                     	;# 
  6607  0F32                     	;# 
  6608  0F38                     	;# 
  6609  0F39                     	;# 
  6610  0F3A                     	;# 
  6611  0F3B                     	;# 
  6612  0F3C                     	;# 
  6613  0F3D                     	;# 
  6614  0F3E                     	;# 
  6615  0F3F                     	;# 
  6616  0F40                     	;# 
  6617  0F41                     	;# 
  6618  0F43                     	;# 
  6619  0F44                     	;# 
  6620  0F45                     	;# 
  6621  0F46                     	;# 
  6622  0F47                     	;# 
  6623  0F48                     	;# 
  6624  0F49                     	;# 
  6625  0F4A                     	;# 
  6626  0F4B                     	;# 
  6627  0F4C                     	;# 
  6628  0F4E                     	;# 
  6629  0F4F                     	;# 
  6630  0F50                     	;# 
  6631  0F51                     	;# 
  6632  0F52                     	;# 
  6633  0F53                     	;# 
  6634  0F54                     	;# 
  6635  0F55                     	;# 
  6636  0F56                     	;# 
  6637  0F57                     	;# 
  6638  0F59                     	;# 
  6639  0F5A                     	;# 
  6640  0F5B                     	;# 
  6641  0F5C                     	;# 
  6642  0F5D                     	;# 
  6643  0F61                     	;# 
  6644  0F62                     	;# 
  6645  0F64                     	;# 
  6646  0F65                     	;# 
  6647  0F66                     	;# 
  6648  0F67                     	;# 
  6649  0F68                     	;# 
  6650  0F69                     	;# 
  6651  0F6A                     	;# 
  6652  0F6B                     	;# 
  6653  0F6C                     	;# 
  6654  0F6D                     	;# 
  6655  0FE4                     	;# 
  6656  0FE5                     	;# 
  6657  0FE6                     	;# 
  6658  0FE7                     	;# 
  6659  0FE8                     	;# 
  6660  0FE9                     	;# 
  6661  0FEA                     	;# 
  6662  0FEB                     	;# 
  6663  0FED                     	;# 
  6664  0FEE                     	;# 
  6665  0FEF                     	;# 
  6666  0000                     	;# 
  6667  0001                     	;# 
  6668  0002                     	;# 
  6669  0003                     	;# 
  6670  0004                     	;# 
  6671  0005                     	;# 
  6672  0006                     	;# 
  6673  0007                     	;# 
  6674  0008                     	;# 
  6675  0009                     	;# 
  6676  000A                     	;# 
  6677  000B                     	;# 
  6678  000C                     	;# 
  6679  000D                     	;# 
  6680  000E                     	;# 
  6681  000F                     	;# 
  6682  0010                     	;# 
  6683  0011                     	;# 
  6684  0012                     	;# 
  6685  0013                     	;# 
  6686  0014                     	;# 
  6687  0015                     	;# 
  6688  0016                     	;# 
  6689  0017                     	;# 
  6690  0018                     	;# 
  6691  0019                     	;# 
  6692  001A                     	;# 
  6693  001C                     	;# 
  6694  001C                     	;# 
  6695  001D                     	;# 
  6696  001D                     	;# 
  6697  001E                     	;# 
  6698  001F                     	;# 
  6699  008C                     	;# 
  6700  008C                     	;# 
  6701  008D                     	;# 
  6702  008E                     	;# 
  6703  008E                     	;# 
  6704  008F                     	;# 
  6705  0090                     	;# 
  6706  0090                     	;# 
  6707  0091                     	;# 
  6708  0093                     	;# 
  6709  0094                     	;# 
  6710  0095                     	;# 
  6711  0096                     	;# 
  6712  0097                     	;# 
  6713  0098                     	;# 
  6714  0099                     	;# 
  6715  009A                     	;# 
  6716  009B                     	;# 
  6717  009C                     	;# 
  6718  009D                     	;# 
  6719  009E                     	;# 
  6720  010C                     	;# 
  6721  010D                     	;# 
  6722  010E                     	;# 
  6723  010E                     	;# 
  6724  010F                     	;# 
  6725  0110                     	;# 
  6726  0110                     	;# 
  6727  0111                     	;# 
  6728  0112                     	;# 
  6729  0112                     	;# 
  6730  0113                     	;# 
  6731  0114                     	;# 
  6732  0114                     	;# 
  6733  0115                     	;# 
  6734  0116                     	;# 
  6735  0116                     	;# 
  6736  0117                     	;# 
  6737  0119                     	;# 
  6738  0119                     	;# 
  6739  0119                     	;# 
  6740  011A                     	;# 
  6741  011A                     	;# 
  6742  011A                     	;# 
  6743  011B                     	;# 
  6744  011B                     	;# 
  6745  011B                     	;# 
  6746  011B                     	;# 
  6747  011B                     	;# 
  6748  011C                     	;# 
  6749  011C                     	;# 
  6750  011C                     	;# 
  6751  011D                     	;# 
  6752  011D                     	;# 
  6753  011D                     	;# 
  6754  011E                     	;# 
  6755  011E                     	;# 
  6756  011E                     	;# 
  6757  011F                     	;# 
  6758  011F                     	;# 
  6759  011F                     	;# 
  6760  011F                     	;# 
  6761  011F                     	;# 
  6762  018C                     	;# 
  6763  018D                     	;# 
  6764  018E                     	;# 
  6765  018F                     	;# 
  6766  0190                     	;# 
  6767  0191                     	;# 
  6768  0192                     	;# 
  6769  0196                     	;# 
  6770  0197                     	;# 
  6771  0198                     	;# 
  6772  0199                     	;# 
  6773  019A                     	;# 
  6774  019B                     	;# 
  6775  019C                     	;# 
  6776  020C                     	;# 
  6777  020C                     	;# 
  6778  020D                     	;# 
  6779  020E                     	;# 
  6780  020F                     	;# 
  6781  020F                     	;# 
  6782  0210                     	;# 
  6783  0210                     	;# 
  6784  0211                     	;# 
  6785  0211                     	;# 
  6786  0212                     	;# 
  6787  0212                     	;# 
  6788  0213                     	;# 
  6789  0214                     	;# 
  6790  0215                     	;# 
  6791  0215                     	;# 
  6792  0216                     	;# 
  6793  0216                     	;# 
  6794  0217                     	;# 
  6795  0217                     	;# 
  6796  0218                     	;# 
  6797  0218                     	;# 
  6798  0219                     	;# 
  6799  021A                     	;# 
  6800  021B                     	;# 
  6801  021B                     	;# 
  6802  021C                     	;# 
  6803  021C                     	;# 
  6804  021D                     	;# 
  6805  021D                     	;# 
  6806  021E                     	;# 
  6807  021F                     	;# 
  6808  028C                     	;# 
  6809  028C                     	;# 
  6810  028D                     	;# 
  6811  028D                     	;# 
  6812  028E                     	;# 
  6813  028F                     	;# 
  6814  0290                     	;# 
  6815  0290                     	;# 
  6816  0291                     	;# 
  6817  0292                     	;# 
  6818  0292                     	;# 
  6819  0293                     	;# 
  6820  0293                     	;# 
  6821  0294                     	;# 
  6822  0295                     	;# 
  6823  0296                     	;# 
  6824  0296                     	;# 
  6825  0297                     	;# 
  6826  0298                     	;# 
  6827  0298                     	;# 
  6828  0299                     	;# 
  6829  0299                     	;# 
  6830  029A                     	;# 
  6831  029B                     	;# 
  6832  029C                     	;# 
  6833  029C                     	;# 
  6834  029D                     	;# 
  6835  030C                     	;# 
  6836  030C                     	;# 
  6837  030D                     	;# 
  6838  030E                     	;# 
  6839  030F                     	;# 
  6840  0310                     	;# 
  6841  0310                     	;# 
  6842  0311                     	;# 
  6843  0312                     	;# 
  6844  0313                     	;# 
  6845  0314                     	;# 
  6846  0314                     	;# 
  6847  0315                     	;# 
  6848  0316                     	;# 
  6849  0317                     	;# 
  6850  0318                     	;# 
  6851  0318                     	;# 
  6852  0319                     	;# 
  6853  031A                     	;# 
  6854  031B                     	;# 
  6855  031C                     	;# 
  6856  031C                     	;# 
  6857  031D                     	;# 
  6858  031E                     	;# 
  6859  031F                     	;# 
  6860  038C                     	;# 
  6861  038C                     	;# 
  6862  038D                     	;# 
  6863  038E                     	;# 
  6864  0390                     	;# 
  6865  0390                     	;# 
  6866  0391                     	;# 
  6867  0392                     	;# 
  6868  040C                     	;# 
  6869  040D                     	;# 
  6870  040E                     	;# 
  6871  040F                     	;# 
  6872  0410                     	;# 
  6873  0411                     	;# 
  6874  0416                     	;# 
  6875  0416                     	;# 
  6876  0417                     	;# 
  6877  0418                     	;# 
  6878  0418                     	;# 
  6879  0419                     	;# 
  6880  041A                     	;# 
  6881  041A                     	;# 
  6882  041B                     	;# 
  6883  041C                     	;# 
  6884  041C                     	;# 
  6885  041D                     	;# 
  6886  041E                     	;# 
  6887  041F                     	;# 
  6888  048C                     	;# 
  6889  048C                     	;# 
  6890  048D                     	;# 
  6891  048E                     	;# 
  6892  048F                     	;# 
  6893  048F                     	;# 
  6894  0490                     	;# 
  6895  0491                     	;# 
  6896  0492                     	;# 
  6897  0492                     	;# 
  6898  0493                     	;# 
  6899  0494                     	;# 
  6900  0495                     	;# 
  6901  0495                     	;# 
  6902  0496                     	;# 
  6903  0497                     	;# 
  6904  0498                     	;# 
  6905  0499                     	;# 
  6906  049A                     	;# 
  6907  049B                     	;# 
  6908  049C                     	;# 
  6909  049D                     	;# 
  6910  050C                     	;# 
  6911  050C                     	;# 
  6912  050D                     	;# 
  6913  050E                     	;# 
  6914  050F                     	;# 
  6915  050F                     	;# 
  6916  0510                     	;# 
  6917  0511                     	;# 
  6918  0512                     	;# 
  6919  0512                     	;# 
  6920  0513                     	;# 
  6921  0514                     	;# 
  6922  0515                     	;# 
  6923  0515                     	;# 
  6924  0516                     	;# 
  6925  0517                     	;# 
  6926  0518                     	;# 
  6927  0519                     	;# 
  6928  051A                     	;# 
  6929  051B                     	;# 
  6930  051C                     	;# 
  6931  051D                     	;# 
  6932  058C                     	;# 
  6933  058C                     	;# 
  6934  058D                     	;# 
  6935  058E                     	;# 
  6936  058F                     	;# 
  6937  058F                     	;# 
  6938  0590                     	;# 
  6939  0591                     	;# 
  6940  0592                     	;# 
  6941  0593                     	;# 
  6942  060C                     	;# 
  6943  060D                     	;# 
  6944  060E                     	;# 
  6945  060F                     	;# 
  6946  0610                     	;# 
  6947  0611                     	;# 
  6948  0612                     	;# 
  6949  0613                     	;# 
  6950  0614                     	;# 
  6951  0616                     	;# 
  6952  0617                     	;# 
  6953  0618                     	;# 
  6954  0619                     	;# 
  6955  061A                     	;# 
  6956  061B                     	;# 
  6957  061C                     	;# 
  6958  061D                     	;# 
  6959  061E                     	;# 
  6960  068C                     	;# 
  6961  068D                     	;# 
  6962  068E                     	;# 
  6963  068F                     	;# 
  6964  0690                     	;# 
  6965  0691                     	;# 
  6966  0692                     	;# 
  6967  0693                     	;# 
  6968  0694                     	;# 
  6969  070C                     	;# 
  6970  070D                     	;# 
  6971  070E                     	;# 
  6972  070F                     	;# 
  6973  0710                     	;# 
  6974  0711                     	;# 
  6975  0712                     	;# 
  6976  0713                     	;# 
  6977  0714                     	;# 
  6978  0716                     	;# 
  6979  0717                     	;# 
  6980  0718                     	;# 
  6981  0719                     	;# 
  6982  071A                     	;# 
  6983  071B                     	;# 
  6984  071C                     	;# 
  6985  071D                     	;# 
  6986  071E                     	;# 
  6987  0796                     	;# 
  6988  0797                     	;# 
  6989  0798                     	;# 
  6990  0799                     	;# 
  6991  079A                     	;# 
  6992  079B                     	;# 
  6993  080C                     	;# 
  6994  080D                     	;# 
  6995  080E                     	;# 
  6996  080F                     	;# 
  6997  0810                     	;# 
  6998  0811                     	;# 
  6999  0812                     	;# 
  7000  0813                     	;# 
  7001  0814                     	;# 
  7002  081A                     	;# 
  7003  081B                     	;# 
  7004  081C                     	;# 
  7005  081D                     	;# 
  7006  081E                     	;# 
  7007  081F                     	;# 
  7008  088C                     	;# 
  7009  088D                     	;# 
  7010  088E                     	;# 
  7011  088F                     	;# 
  7012  0890                     	;# 
  7013  0891                     	;# 
  7014  0892                     	;# 
  7015  0893                     	;# 
  7016  0895                     	;# 
  7017  0896                     	;# 
  7018  0897                     	;# 
  7019  0898                     	;# 
  7020  0899                     	;# 
  7021  089A                     	;# 
  7022  089B                     	;# 
  7023  090C                     	;# 
  7024  090E                     	;# 
  7025  090F                     	;# 
  7026  091F                     	;# 
  7027  091F                     	;# 
  7028  098F                     	;# 
  7029  098F                     	;# 
  7030  0990                     	;# 
  7031  0991                     	;# 
  7032  0992                     	;# 
  7033  0993                     	;# 
  7034  0994                     	;# 
  7035  0995                     	;# 
  7036  0996                     	;# 
  7037  0997                     	;# 
  7038  0E0F                     	;# 
  7039  0E10                     	;# 
  7040  0E11                     	;# 
  7041  0E12                     	;# 
  7042  0E13                     	;# 
  7043  0E14                     	;# 
  7044  0E15                     	;# 
  7045  0E16                     	;# 
  7046  0E17                     	;# 
  7047  0E18                     	;# 
  7048  0E19                     	;# 
  7049  0E1A                     	;# 
  7050  0E1B                     	;# 
  7051  0E1C                     	;# 
  7052  0E1D                     	;# 
  7053  0E1E                     	;# 
  7054  0E1F                     	;# 
  7055  0E20                     	;# 
  7056  0E21                     	;# 
  7057  0E22                     	;# 
  7058  0E23                     	;# 
  7059  0E24                     	;# 
  7060  0E25                     	;# 
  7061  0E26                     	;# 
  7062  0E27                     	;# 
  7063  0E28                     	;# 
  7064  0E29                     	;# 
  7065  0E2A                     	;# 
  7066  0E2B                     	;# 
  7067  0E2C                     	;# 
  7068  0E2D                     	;# 
  7069  0E2E                     	;# 
  7070  0E2F                     	;# 
  7071  0E30                     	;# 
  7072  0E31                     	;# 
  7073  0E32                     	;# 
  7074  0E33                     	;# 
  7075  0E34                     	;# 
  7076  0E35                     	;# 
  7077  0E36                     	;# 
  7078  0E37                     	;# 
  7079  0E8F                     	;# 
  7080  0E90                     	;# 
  7081  0E91                     	;# 
  7082  0E92                     	;# 
  7083  0E93                     	;# 
  7084  0E94                     	;# 
  7085  0E95                     	;# 
  7086  0E96                     	;# 
  7087  0E97                     	;# 
  7088  0E9C                     	;# 
  7089  0E9D                     	;# 
  7090  0E9E                     	;# 
  7091  0EA1                     	;# 
  7092  0EA2                     	;# 
  7093  0EA3                     	;# 
  7094  0EA4                     	;# 
  7095  0EA5                     	;# 
  7096  0EA9                     	;# 
  7097  0EAA                     	;# 
  7098  0EAB                     	;# 
  7099  0EAC                     	;# 
  7100  0EB1                     	;# 
  7101  0EB2                     	;# 
  7102  0EB3                     	;# 
  7103  0EB8                     	;# 
  7104  0EB9                     	;# 
  7105  0EBA                     	;# 
  7106  0EBB                     	;# 
  7107  0EBC                     	;# 
  7108  0EBD                     	;# 
  7109  0EBE                     	;# 
  7110  0EC3                     	;# 
  7111  0EC5                     	;# 
  7112  0EC6                     	;# 
  7113  0EC7                     	;# 
  7114  0EC8                     	;# 
  7115  0EC9                     	;# 
  7116  0ECA                     	;# 
  7117  0ECB                     	;# 
  7118  0ECC                     	;# 
  7119  0F10                     	;# 
  7120  0F11                     	;# 
  7121  0F12                     	;# 
  7122  0F13                     	;# 
  7123  0F14                     	;# 
  7124  0F15                     	;# 
  7125  0F16                     	;# 
  7126  0F17                     	;# 
  7127  0F18                     	;# 
  7128  0F19                     	;# 
  7129  0F1A                     	;# 
  7130  0F1B                     	;# 
  7131  0F1C                     	;# 
  7132  0F1D                     	;# 
  7133  0F1E                     	;# 
  7134  0F1F                     	;# 
  7135  0F20                     	;# 
  7136  0F21                     	;# 
  7137  0F22                     	;# 
  7138  0F23                     	;# 
  7139  0F24                     	;# 
  7140  0F25                     	;# 
  7141  0F26                     	;# 
  7142  0F27                     	;# 
  7143  0F28                     	;# 
  7144  0F29                     	;# 
  7145  0F2A                     	;# 
  7146  0F2B                     	;# 
  7147  0F2C                     	;# 
  7148  0F2D                     	;# 
  7149  0F2E                     	;# 
  7150  0F2F                     	;# 
  7151  0F30                     	;# 
  7152  0F31                     	;# 
  7153  0F32                     	;# 
  7154  0F38                     	;# 
  7155  0F39                     	;# 
  7156  0F3A                     	;# 
  7157  0F3B                     	;# 
  7158  0F3C                     	;# 
  7159  0F3D                     	;# 
  7160  0F3E                     	;# 
  7161  0F3F                     	;# 
  7162  0F40                     	;# 
  7163  0F41                     	;# 
  7164  0F43                     	;# 
  7165  0F44                     	;# 
  7166  0F45                     	;# 
  7167  0F46                     	;# 
  7168  0F47                     	;# 
  7169  0F48                     	;# 
  7170  0F49                     	;# 
  7171  0F4A                     	;# 
  7172  0F4B                     	;# 
  7173  0F4C                     	;# 
  7174  0F4E                     	;# 
  7175  0F4F                     	;# 
  7176  0F50                     	;# 
  7177  0F51                     	;# 
  7178  0F52                     	;# 
  7179  0F53                     	;# 
  7180  0F54                     	;# 
  7181  0F55                     	;# 
  7182  0F56                     	;# 
  7183  0F57                     	;# 
  7184  0F59                     	;# 
  7185  0F5A                     	;# 
  7186  0F5B                     	;# 
  7187  0F5C                     	;# 
  7188  0F5D                     	;# 
  7189  0F61                     	;# 
  7190  0F62                     	;# 
  7191  0F64                     	;# 
  7192  0F65                     	;# 
  7193  0F66                     	;# 
  7194  0F67                     	;# 
  7195  0F68                     	;# 
  7196  0F69                     	;# 
  7197  0F6A                     	;# 
  7198  0F6B                     	;# 
  7199  0F6C                     	;# 
  7200  0F6D                     	;# 
  7201  0FE4                     	;# 
  7202  0FE5                     	;# 
  7203  0FE6                     	;# 
  7204  0FE7                     	;# 
  7205  0FE8                     	;# 
  7206  0FE9                     	;# 
  7207  0FEA                     	;# 
  7208  0FEB                     	;# 
  7209  0FED                     	;# 
  7210  0FEE                     	;# 
  7211  0FEF                     	;# 
  7212                           
  7213                           	psect	idataBANK0
  7214  0C77                     __pidataBANK0:
  7215                           
  7216                           ;initializer for _clkAlarm
  7217  0C77  3400               	retlw	0
  7218  0C78  3400               	retlw	0
  7219  0C79  3401               	retlw	1
  7220  0C7A  3400               	retlw	0
  7221  0C7B  3400               	retlw	0
  7222  0C7C  3400               	retlw	0
  7223  0C7D  3400               	retlw	0
  7224                           
  7225                           ;initializer for _lumAlarm
  7226  0C7E  3404               	retlw	4
  7227  0C7F  3400               	retlw	0
  7228                           
  7229                           ;initializer for _tempAlarm
  7230  0C80  341C               	retlw	28
  7231  0C81  3400               	retlw	0
  7232                           
  7233                           ;initializer for _alarmsEnable
  7234  0C82  3401               	retlw	1
  7235                           
  7236                           	psect	idataBANK1
  7237  0C33                     __pidataBANK1:
  7238                           
  7239                           ;initializer for _alarmPWMStart
  7240  0C33  34FF               	retlw	255
  7241  0C34  34FF               	retlw	255
  7242  0C35  34FF               	retlw	255
  7243  0C36  34FF               	retlw	255
  7244  0C37  34FF               	retlw	255
  7245  0C38  34FF               	retlw	255
  7246                           
  7247                           	psect	stringtext1
  7248  100F                     __pstringtext1:
  7249  100F                     _dpowers:
  7250  100F  3401               	retlw	1
  7251  1010  3400               	retlw	0
  7252  1011  340A               	retlw	10
  7253  1012  3400               	retlw	0
  7254  1013  3464               	retlw	100
  7255  1014  3400               	retlw	0
  7256  1015  34E8               	retlw	232
  7257  1016  3403               	retlw	3
  7258  1017  3410               	retlw	16
  7259  1018  3427               	retlw	39
  7260  1019                     __end_of_dpowers:
  7261                           
  7262                           	psect	nvBANK0
  7263  0067                     __pnvBANK0:
  7264  0067                     _TMR5_InterruptHandler:
  7265  0067                     	ds	2
  7266  0069                     _timer5ReloadVal:
  7267  0069                     	ds	2
  7268  006B                     _TMR3_InterruptHandler:
  7269  006B                     	ds	2
  7270  006D                     _timer3ReloadVal:
  7271  006D                     	ds	2
  7272                           
  7273                           	psect	nvBANK1
  7274  00B5                     __pnvBANK1:
  7275  00B5                     _TMR1_InterruptHandler:
  7276  00B5                     	ds	2
  7277  00B7                     _timer1ReloadVal:
  7278  00B7                     	ds	2
  7279  0013                     _TRISCbits	set	19
  7280  0016                     _LATAbits	set	22
  7281  000B                     _INTCONbits	set	11
  7282  0014                     _TRISD	set	20
  7283  0013                     _TRISC	set	19
  7284  0012                     _TRISB	set	18
  7285  0011                     _TRISA	set	17
  7286  0015                     _TRISE	set	21
  7287  0018                     _LATC	set	24
  7288  0017                     _LATB	set	23
  7289  0016                     _LATA	set	22
  7290  0019                     _LATD	set	25
  7291  001A                     _LATE	set	26
  7292  0094                     _ADCON1bits	set	148
  7293  008E                     _ADPREVL	set	142
  7294  008F                     _ADPREVH	set	143
  7295  0097                     _ADSTATbits	set	151
  7296  0090                     _ADACCL	set	144
  7297  0091                     _ADACCH	set	145
  7298  0095                     _ADCON2bits	set	149
  7299  009C                     _ADPRE	set	156
  7300  0096                     _ADCON3bits	set	150
  7301  008C                     _ADRESL	set	140
  7302  008D                     _ADRESH	set	141
  7303  0093                     _ADCON0bits	set	147
  7304  009D                     _ADACQ	set	157
  7305  0093                     _ADCON0	set	147
  7306  0098                     _ADCLK	set	152
  7307  0099                     _ADACT	set	153
  7308  009A                     _ADREF	set	154
  7309  0097                     _ADSTAT	set	151
  7310  0096                     _ADCON3	set	150
  7311  0095                     _ADCON2	set	149
  7312  0094                     _ADCON1	set	148
  7313  009B                     _ADCAP	set	155
  7314  009E                     _ADPCH	set	158
  7315  0116                     _ADERRL	set	278
  7316  0117                     _ADERRH	set	279
  7317  0114                     _ADFLTRL	set	276
  7318  0115                     _ADFLTRH	set	277
  7319  010C                     _ADCNT	set	268
  7320  010D                     _ADRPT	set	269
  7321  0113                     _ADSTPTH	set	275
  7322  0112                     _ADSTPTL	set	274
  7323  0111                     _ADUTHH	set	273
  7324  0110                     _ADUTHL	set	272
  7325  010F                     _ADLTHH	set	271
  7326  010E                     _ADLTHL	set	270
  7327  018E                     _SSP1MSK	set	398
  7328  018D                     _SSP1ADD	set	397
  7329  018F                     _SSP1STAT	set	399
  7330  0191                     _SSP1CON2	set	401
  7331  0190                     _SSP1CON1bits	set	400
  7332  018C                     _SSP1BUF	set	396
  7333  018F                     _SSP1STATbits	set	399
  7334  0191                     _SSP1CON2bits	set	401
  7335  0190                     _SSP1CON1	set	400
  7336  021F                     _CCPTMRS1bits	set	543
  7337  021B                     _T5GCONbits	set	539
  7338  021A                     _T5CONbits	set	538
  7339  021A                     _T5CON	set	538
  7340  0218                     _TMR5L	set	536
  7341  0219                     _TMR5H	set	537
  7342  021D                     _T5CLK	set	541
  7343  021C                     _T5GATE	set	540
  7344  021B                     _T5GCON	set	539
  7345  0215                     _T3GCONbits	set	533
  7346  0214                     _T3CONbits	set	532
  7347  0214                     _T3CON	set	532
  7348  0212                     _TMR3L	set	530
  7349  0213                     _TMR3H	set	531
  7350  0217                     _T3CLK	set	535
  7351  0216                     _T3GATE	set	534
  7352  0215                     _T3GCON	set	533
  7353  020F                     _T1GCONbits	set	527
  7354  020E                     _T1CONbits	set	526
  7355  020E                     _T1CON	set	526
  7356  020C                     _TMR1L	set	524
  7357  020D                     _TMR1H	set	525
  7358  0211                     _T1CLK	set	529
  7359  0210                     _T1GATE	set	528
  7360  020F                     _T1GCON	set	527
  7361  028D                     _PR2	set	653
  7362  028C                     _TMR2	set	652
  7363  028E                     _T2CONbits	set	654
  7364  0291                     _T2RSTbits	set	657
  7365  028F                     _T2HLTbits	set	655
  7366  028E                     _T2CON	set	654
  7367  028C                     _T2TMR	set	652
  7368  028D                     _T2PR	set	653
  7369  0291                     _T2RST	set	657
  7370  028F                     _T2HLT	set	655
  7371  0290                     _T2CLKCON	set	656
  7372  038C                     _PWM6DCL	set	908
  7373  038D                     _PWM6DCH	set	909
  7374  038E                     _PWM6CON	set	910
  7375  0710                     _PIR4bits	set	1808
  7376  071A                     _PIE4bits	set	1818
  7377  0719                     _PIE3bits	set	1817
  7378  070F                     _PIR3bits	set	1807
  7379  079B                     _PMD5	set	1947
  7380  079A                     _PMD4	set	1946
  7381  0799                     _PMD3	set	1945
  7382  0798                     _PMD2	set	1944
  7383  0797                     _PMD1	set	1943
  7384  0796                     _PMD0	set	1942
  7385  0892                     _OSCTUNE	set	2194
  7386  0893                     _OSCFRQ	set	2195
  7387  0891                     _OSCEN	set	2193
  7388  088F                     _OSCCON3	set	2191
  7389  088D                     _OSCCON1	set	2189
  7390  0EC6                     _SSP1DATPPS	set	3782
  7391  0EC5                     _SSP1CLKPPS	set	3781
  7392  0F16                     _RA6PPS	set	3862
  7393  0F24                     _RC4PPS	set	3876
  7394  0F23                     _RC3PPS	set	3875
  7395  0F67                     _SLRCONE	set	3943
  7396  0F5C                     _SLRCOND	set	3932
  7397  0F51                     _SLRCONC	set	3921
  7398  0F46                     _SLRCONB	set	3910
  7399  0F3B                     _SLRCONA	set	3899
  7400  0F5B                     _ODCOND	set	3931
  7401  0F50                     _ODCONC	set	3920
  7402  0F45                     _ODCONB	set	3909
  7403  0F3A                     _ODCONA	set	3898
  7404  0F66                     _ODCONE	set	3942
  7405  0F4F                     _WPUC	set	3919
  7406  0F39                     _WPUA	set	3897
  7407  0F44                     _WPUB	set	3908
  7408  0F65                     _WPUE	set	3941
  7409  0F5A                     _WPUD	set	3930
  7410  0F38                     _ANSELA	set	3896
  7411  0F64                     _ANSELE	set	3940
  7412  0F43                     _ANSELB	set	3907
  7413  0F4E                     _ANSELC	set	3918
  7414  0F59                     _ANSELD	set	3929
  7415  7A7C                     _WPUC4	set	31356
  7416  7A7B                     _WPUC3	set	31355
  7417                           
  7418                           	psect	stringtext2
  7419  1000                     __pstringtext2:
  7420  1000                     STR_1:
  7421  1000  3425               	retlw	37	;'%'
  7422  1001  3430               	retlw	48	;'0'
  7423  1002  3432               	retlw	50	;'2'
  7424  1003  3464               	retlw	100	;'d'
  7425  1004  343A               	retlw	58	;':'
  7426  1005  3425               	retlw	37	;'%'
  7427  1006  3430               	retlw	48	;'0'
  7428  1007  3432               	retlw	50	;'2'
  7429  1008  3464               	retlw	100	;'d'
  7430  1009  343A               	retlw	58	;':'
  7431  100A  3425               	retlw	37	;'%'
  7432  100B  3430               	retlw	48	;'0'
  7433  100C  3432               	retlw	50	;'2'
  7434  100D  3464               	retlw	100	;'d'
  7435  100E  3400               	retlw	0
  7436                           
  7437                           	psect	stringtext3
  7438  1019                     __pstringtext3:
  7439  1019                     STR_2:
  7440  1019  3425               	retlw	37	;'%'
  7441  101A  3430               	retlw	48	;'0'
  7442  101B  3432               	retlw	50	;'2'
  7443  101C  3464               	retlw	100	;'d'
  7444  101D  3420               	retlw	32	;' '
  7445  101E  3443               	retlw	67	;'C'
  7446  101F  3400               	retlw	0
  7447                           
  7448                           	psect	stringtext4
  7449  1020                     __pstringtext4:
  7450  1020                     STR_3:
  7451  1020  344C               	retlw	76	;'L'
  7452  1021  3420               	retlw	32	;' '
  7453  1022  3425               	retlw	37	;'%'
  7454  1023  3464               	retlw	100	;'d'
  7455  1024  3400               	retlw	0
  7456                           
  7457                           	psect	stringtext5
  7458  0000                     __pstringtext5:
  7459                           
  7460                           	psect	cinit
  7461  0042                     start_initialization:	
  7462                           ; #config settings
  7463                           
  7464  0042                     __initialization:
  7465                           
  7466                           ; Initialize objects allocated to BANK0
  7467  0042  3077               	movlw	low __pidataBANK0
  7468  0043  0084               	movwf	4
  7469  0044  308C               	movlw	(high __pidataBANK0)| (0+128)
  7470  0045  0085               	movwf	5
  7471  0046  305B               	movlw	low __pdataBANK0
  7472  0047  0086               	movwf	6
  7473  0048  3000               	movlw	high __pdataBANK0
  7474  0049  0087               	movwf	7
  7475  004A  300C               	movlw	12
  7476  004B  318C  242D  3180   	fcall	init_ram
  7477                           
  7478                           ; Initialize objects allocated to BANK1
  7479  004E  3033               	movlw	low __pidataBANK1
  7480  004F  0084               	movwf	4
  7481  0050  308C               	movlw	(high __pidataBANK1)| (0+128)
  7482  0051  0085               	movwf	5
  7483  0052  30AF               	movlw	low __pdataBANK1
  7484  0053  0086               	movwf	6
  7485  0054  3000               	movlw	high __pdataBANK1
  7486  0055  0087               	movwf	7
  7487  0056  3006               	movlw	6
  7488  0057  318C  242D  3180   	fcall	init_ram
  7489                           
  7490                           ; Clear objects allocated to BANK0
  7491  005A  304C               	movlw	low __pbssBANK0
  7492  005B  0084               	movwf	4
  7493  005C  3000               	movlw	high __pbssBANK0
  7494  005D  0085               	movwf	5
  7495  005E  300F               	movlw	15
  7496  005F  318C  2427  3180   	fcall	clear_ram0
  7497                           
  7498                           ; Clear objects allocated to BANK1
  7499  0062  0021               	movlb	1	; select bank1
  7500  0063  01A9               	clrf	__pbssBANK1& (0+127)
  7501  0064  01AA               	clrf	(__pbssBANK1+1)& (0+127)
  7502  0065  01AB               	clrf	(__pbssBANK1+2)& (0+127)
  7503  0066  01AC               	clrf	(__pbssBANK1+3)& (0+127)
  7504  0067  01AD               	clrf	(__pbssBANK1+4)& (0+127)
  7505  0068  01AE               	clrf	(__pbssBANK1+5)& (0+127)
  7506  0069                     end_of_initialization:	
  7507                           ;End of C runtime variable initialization code
  7508                           
  7509  0069                     __end_of__initialization:
  7510  0069  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7511  006A  0020               	movlb	0
  7512  006B  318E  2E2D         	ljmp	_main	;jump to C main() function
  7513                           
  7514                           	psect	bssBANK0
  7515  004C                     __pbssBANK0:
  7516  004C                     _t:
  7517  004C                     	ds	6
  7518  0052                     _dimingLed:
  7519  0052                     	ds	2
  7520  0054                     _lumLevel:
  7521  0054                     	ds	2
  7522  0056                     _i2c1_driver_i2cISR:
  7523  0056                     	ds	2
  7524  0058                     _i2c1_driver_busCollisionISR:
  7525  0058                     	ds	2
  7526  005A                     _temp:
  7527  005A                     	ds	1
  7528                           
  7529                           	psect	dataBANK0
  7530  005B                     __pdataBANK0:
  7531  005B                     _clkAlarm:
  7532  005B                     	ds	7
  7533  0062                     _lumAlarm:
  7534  0062                     	ds	2
  7535  0064                     _tempAlarm:
  7536  0064                     	ds	2
  7537  0066                     _alarmsEnable:
  7538  0066                     	ds	1
  7539                           
  7540                           	psect	bssBANK1
  7541  00A9                     __pbssBANK1:
  7542  00A9                     menuLCD_ISR@F12782:
  7543  00A9                     	ds	6
  7544                           
  7545                           	psect	dataBANK1
  7546  00AF                     __pdataBANK1:
  7547  00AF                     _alarmPWMStart:
  7548  00AF                     	ds	6
  7549                           
  7550                           	psect	inittext
  7551  0C2D                     init_ram:
  7552  0C2D  00FE               	movwf	btemp
  7553  0C2E                     initloop:
  7554  0C2E  0012               	moviw fsr0++
  7555  0C2F  001E               	movwi fsr1++
  7556  0C30  0BFE               	decfsz	btemp,f
  7557  0C31  2C2E               	goto	initloop
  7558  0C32  3400               	retlw	0
  7559                           
  7560                           	psect	clrtext
  7561  0C27                     clear_ram0:	
  7562                           ;	Called with FSR0 containing the base address, and
  7563                           ;	WREG with the size to clear
  7564                           
  7565  0C27  0064               	clrwdt	;clear the watchdog before getting into this loop
  7566  0C28                     clrloop0:
  7567  0C28  0180               	clrf	0	;clear RAM location pointed to by FSR
  7568  0C29  3101               	addfsr 0,1
  7569  0C2A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7570  0C2B  2C28               	goto	clrloop0	;have we reached the end yet?
  7571  0C2C  3400               	retlw	0	;all done for this memory range, return
  7572                           
  7573                           	psect	cstackBANK1
  7574  00A0                     __pcstackBANK1:
  7575  00A0                     ??_PMD_Initialize:
  7576  00A0                     ??_OSCILLATOR_Initialize:	
  7577                           ; 1 bytes @ 0x0
  7578                           
  7579  00A0                     ??_PWM6_Initialize:	
  7580                           ; 1 bytes @ 0x0
  7581                           
  7582  00A0                     ??_ADCC_Initialize:	
  7583                           ; 1 bytes @ 0x0
  7584                           
  7585  00A0                     ??_TMR2_Initialize:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588  00A0                     ?_TMR1_SetInterruptHandler:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591  00A0                     ?_TMR3_SetInterruptHandler:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594  00A0                     ??_TMR2_StopTimer:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597  00A0                     ?_TMR5_SetInterruptHandler:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  00A0                     ??_WriteI2C:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603  00A0                     ??_PIN_MANAGER_Initialize:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606  00A0                     ??_i2c1_driver_open:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609  00A0                     ??_TMR2_Stop:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  7616                           ; 2 bytes @ 0x0
  7617                           
  7618  00A0                     TMR5_SetInterruptHandler@InterruptHandler:	
  7619                           ; 2 bytes @ 0x0
  7620                           
  7621                           
  7622                           ; 2 bytes @ 0x0
  7623  00A0                     	ds	1
  7624  00A1                     WriteI2C@data_out:
  7625                           
  7626                           ; 1 bytes @ 0x1
  7627  00A1                     	ds	1
  7628  00A2                     ??_TMR3_Initialize:
  7629  00A2                     ??_TMR5_Initialize:	
  7630                           ; 1 bytes @ 0x2
  7631                           
  7632  00A2                     ??_TMR1_Initialize:	
  7633                           ; 1 bytes @ 0x2
  7634                           
  7635  00A2                     ??_TMR1_SetInterruptHandler:	
  7636                           ; 1 bytes @ 0x2
  7637                           
  7638  00A2                     ??_TMR3_SetInterruptHandler:	
  7639                           ; 1 bytes @ 0x2
  7640                           
  7641  00A2                     ??_TMR5_SetInterruptHandler:	
  7642                           ; 1 bytes @ 0x2
  7643                           
  7644  00A2                     ??_SYSTEM_Initialize:	
  7645                           ; 1 bytes @ 0x2
  7646                           
  7647  00A2                     ??_LCDsend:	
  7648                           ; 1 bytes @ 0x2
  7649                           
  7650  00A2                     ?_LCDsend2x4:	
  7651                           ; 1 bytes @ 0x2
  7652                           
  7653  00A2                     LCDsend2x4@mode:	
  7654                           ; 1 bytes @ 0x2
  7655                           
  7656                           
  7657                           ; 1 bytes @ 0x2
  7658  00A2                     	ds	1
  7659  00A3                     ??_LCDsend2x4:
  7660  00A3                     LCDsend@c:	
  7661                           ; 1 bytes @ 0x3
  7662                           
  7663                           
  7664                           ; 1 bytes @ 0x3
  7665  00A3                     	ds	2
  7666  00A5                     LCDsend2x4@c:
  7667                           
  7668                           ; 1 bytes @ 0x5
  7669  00A5                     	ds	1
  7670  00A6                     LCDsend2x4@hc:
  7671                           
  7672                           ; 1 bytes @ 0x6
  7673  00A6                     	ds	1
  7674  00A7                     LCDsend2x4@lc:
  7675                           
  7676                           ; 1 bytes @ 0x7
  7677  00A7                     	ds	1
  7678  00A8                     ??_LCDinit:
  7679                           
  7680                           ; 1 bytes @ 0x8
  7681  00A8                     	ds	1
  7682  00A9                     ??_main:
  7683                           
  7684                           	psect	cstackCOMMON
  7685  0070                     __pcstackCOMMON:	
  7686                           ; 1 bytes @ 0x9
  7687                           
  7688  0070                     ?_isdigit:
  7689  0070                     ?_i2c1_driver_open:	
  7690                           ; 1 bit 
  7691                           
  7692  0070                     ?_PMD_Initialize:	
  7693                           ; 1 bit 
  7694                           
  7695  0070                     ?_OSCILLATOR_Initialize:	
  7696                           ; 1 bytes @ 0x0
  7697                           
  7698  0070                     ?_PWM6_Initialize:	
  7699                           ; 1 bytes @ 0x0
  7700                           
  7701  0070                     ?_ADCC_Initialize:	
  7702                           ; 1 bytes @ 0x0
  7703                           
  7704  0070                     ?_TMR3_Initialize:	
  7705                           ; 1 bytes @ 0x0
  7706                           
  7707  0070                     ?_TMR5_Initialize:	
  7708                           ; 1 bytes @ 0x0
  7709                           
  7710  0070                     ?_TMR2_Initialize:	
  7711                           ; 1 bytes @ 0x0
  7712                           
  7713  0070                     ?_TMR1_Initialize:	
  7714                           ; 1 bytes @ 0x0
  7715                           
  7716  0070                     ?_TMR5_ISR:	
  7717                           ; 1 bytes @ 0x0
  7718                           
  7719  0070                     ?_TMR3_ISR:	
  7720                           ; 1 bytes @ 0x0
  7721                           
  7722  0070                     ?_TMR1_ISR:	
  7723                           ; 1 bytes @ 0x0
  7724                           
  7725  0070                     ?_TMR1_DefaultInterruptHandler:	
  7726                           ; 1 bytes @ 0x0
  7727                           
  7728  0070                     ??_TMR1_DefaultInterruptHandler:	
  7729                           ; 1 bytes @ 0x0
  7730                           
  7731  0070                     ?_TMR3_DefaultInterruptHandler:	
  7732                           ; 1 bytes @ 0x0
  7733                           
  7734  0070                     ??_TMR3_DefaultInterruptHandler:	
  7735                           ; 1 bytes @ 0x0
  7736                           
  7737  0070                     ?_TMR2_StartTimer:	
  7738                           ; 1 bytes @ 0x0
  7739                           
  7740  0070                     ??_TMR2_StartTimer:	
  7741                           ; 1 bytes @ 0x0
  7742                           
  7743  0070                     ?_PWM6_LoadDutyValue:	
  7744                           ; 1 bytes @ 0x0
  7745                           
  7746  0070                     ?_TMR2_StopTimer:	
  7747                           ; 1 bytes @ 0x0
  7748                           
  7749  0070                     ?_TMR5_DefaultInterruptHandler:	
  7750                           ; 1 bytes @ 0x0
  7751                           
  7752  0070                     ??_TMR5_DefaultInterruptHandler:	
  7753                           ; 1 bytes @ 0x0
  7754                           
  7755  0070                     ??_isdigit:	
  7756                           ; 1 bytes @ 0x0
  7757                           
  7758  0070                     ?_ReadI2C:	
  7759                           ; 1 bytes @ 0x0
  7760                           
  7761  0070                     ??_ReadI2C:	
  7762                           ; 1 bytes @ 0x0
  7763                           
  7764  0070                     ?_WriteI2C:	
  7765                           ; 1 bytes @ 0x0
  7766                           
  7767  0070                     ?_PIN_MANAGER_Initialize:	
  7768                           ; 1 bytes @ 0x0
  7769                           
  7770  0070                     ?_SYSTEM_Initialize:	
  7771                           ; 1 bytes @ 0x0
  7772                           
  7773  0070                     ?_INTERRUPT_InterruptManager:	
  7774                           ; 1 bytes @ 0x0
  7775                           
  7776  0070                     ?_TMR1_WriteTimer:	
  7777                           ; 1 bytes @ 0x0
  7778                           
  7779  0070                     ?_TMR3_WriteTimer:	
  7780                           ; 1 bytes @ 0x0
  7781                           
  7782  0070                     ?_tsttc:	
  7783                           ; 1 bytes @ 0x0
  7784                           
  7785  0070                     ?_LCDsend:	
  7786                           ; 1 bytes @ 0x0
  7787                           
  7788  0070                     ?_LCDinit:	
  7789                           ; 1 bytes @ 0x0
  7790                           
  7791  0070                     ?_LCDcmd:	
  7792                           ; 1 bytes @ 0x0
  7793                           
  7794  0070                     ?_LCDchar:	
  7795                           ; 1 bytes @ 0x0
  7796                           
  7797  0070                     ?_LCDstr:	
  7798                           ; 1 bytes @ 0x0
  7799                           
  7800  0070                     ?_differenceBetweenTimePeriod:	
  7801                           ; 1 bytes @ 0x0
  7802                           
  7803  0070                     ?_Clock_ISR:	
  7804                           ; 1 bytes @ 0x0
  7805                           
  7806  0070                     ??_Clock_ISR:	
  7807                           ; 1 bytes @ 0x0
  7808                           
  7809  0070                     ?_menuLCD_ISR:	
  7810                           ; 1 bytes @ 0x0
  7811                           
  7812  0070                     ?_monitoring_ISR:	
  7813                           ; 1 bytes @ 0x0
  7814                           
  7815  0070                     ?_main:	
  7816                           ; 1 bytes @ 0x0
  7817                           
  7818  0070                     ?_TMR5_WriteTimer:	
  7819                           ; 1 bytes @ 0x0
  7820                           
  7821  0070                     ?_TMR2_Start:	
  7822                           ; 1 bytes @ 0x0
  7823                           
  7824  0070                     ??_TMR2_Start:	
  7825                           ; 1 bytes @ 0x0
  7826                           
  7827  0070                     ?_TMR2_Stop:	
  7828                           ; 1 bytes @ 0x0
  7829                           
  7830  0070                     ?i1_WriteI2C:	
  7831                           ; 1 bytes @ 0x0
  7832                           
  7833  0070                     ??i1_WriteI2C:	
  7834                           ; 1 bytes @ 0x0
  7835                           
  7836  0070                     ?_ADCC_GetSingleConversion:	
  7837                           ; 1 bytes @ 0x0
  7838                           
  7839  0070                     ?___wmul:	
  7840                           ; 2 bytes @ 0x0
  7841                           
  7842  0070                     ?___lwdiv:	
  7843                           ; 2 bytes @ 0x0
  7844                           
  7845  0070                     _isdigit$2747:	
  7846                           ; 2 bytes @ 0x0
  7847                           
  7848  0070                     TMR1_WriteTimer@timerVal:	
  7849                           ; 1 bytes @ 0x0
  7850                           
  7851  0070                     TMR3_WriteTimer@timerVal:	
  7852                           ; 2 bytes @ 0x0
  7853                           
  7854  0070                     TMR5_WriteTimer@timerVal:	
  7855                           ; 2 bytes @ 0x0
  7856                           
  7857  0070                     PWM6_LoadDutyValue@dutyValue:	
  7858                           ; 2 bytes @ 0x0
  7859                           
  7860  0070                     ___wmul@multiplier:	
  7861                           ; 2 bytes @ 0x0
  7862                           
  7863  0070                     ___lwdiv@divisor:	
  7864                           ; 2 bytes @ 0x0
  7865                           
  7866  0070                     differenceBetweenTimePeriod@start:	
  7867                           ; 2 bytes @ 0x0
  7868                           
  7869                           
  7870                           ; 6 bytes @ 0x0
  7871  0070                     	ds	1
  7872  0071                     isdigit@c:
  7873  0071                     i1WriteI2C@data_out:	
  7874                           ; 1 bytes @ 0x1
  7875                           
  7876                           
  7877                           ; 1 bytes @ 0x1
  7878  0071                     	ds	1
  7879  0072                     ??_TMR1_ISR:
  7880  0072                     ??_PWM6_LoadDutyValue:	
  7881                           ; 1 bytes @ 0x2
  7882                           
  7883  0072                     ??_TMR1_WriteTimer:	
  7884                           ; 1 bytes @ 0x2
  7885                           
  7886  0072                     ??_TMR3_WriteTimer:	
  7887                           ; 1 bytes @ 0x2
  7888                           
  7889  0072                     ??_tsttc:	
  7890                           ; 1 bytes @ 0x2
  7891                           
  7892  0072                     ??_TMR5_WriteTimer:	
  7893                           ; 1 bytes @ 0x2
  7894                           
  7895  0072                     ?i1_LCDsend2x4:	
  7896                           ; 1 bytes @ 0x2
  7897                           
  7898  0072                     i1LCDsend2x4@mode:	
  7899                           ; 1 bytes @ 0x2
  7900                           
  7901  0072                     ___wmul@multiplicand:	
  7902                           ; 1 bytes @ 0x2
  7903                           
  7904  0072                     ___lwdiv@dividend:	
  7905                           ; 2 bytes @ 0x2
  7906                           
  7907                           
  7908                           ; 2 bytes @ 0x2
  7909  0072                     	ds	1
  7910  0073                     ??_ADCC_GetSingleConversion:
  7911  0073                     ??i1_LCDsend2x4:	
  7912                           ; 1 bytes @ 0x3
  7913                           
  7914  0073                     ADCC_GetSingleConversion@channel:	
  7915                           ; 1 bytes @ 0x3
  7916                           
  7917  0073                     tsttc@value:	
  7918                           ; 1 bytes @ 0x3
  7919                           
  7920                           
  7921                           ; 1 bytes @ 0x3
  7922  0073                     	ds	1
  7923  0074                     ??___wmul:
  7924  0074                     ??___lwdiv:	
  7925                           ; 1 bytes @ 0x4
  7926                           
  7927  0074                     ___wmul@product:	
  7928                           ; 1 bytes @ 0x4
  7929                           
  7930                           
  7931                           ; 2 bytes @ 0x4
  7932  0074                     	ds	1
  7933  0075                     i1LCDsend2x4@c:
  7934  0075                     ___lwdiv@quotient:	
  7935                           ; 1 bytes @ 0x5
  7936                           
  7937                           
  7938                           ; 2 bytes @ 0x5
  7939  0075                     	ds	1
  7940  0076                     ?___awdiv:
  7941  0076                     i1LCDsend2x4@hc:	
  7942                           ; 2 bytes @ 0x6
  7943                           
  7944  0076                     ___awdiv@divisor:	
  7945                           ; 1 bytes @ 0x6
  7946                           
  7947  0076                     differenceBetweenTimePeriod@stop:	
  7948                           ; 2 bytes @ 0x6
  7949                           
  7950                           
  7951                           ; 6 bytes @ 0x6
  7952  0076                     	ds	1
  7953  0077                     ___lwdiv@counter:
  7954  0077                     i1LCDsend2x4@lc:	
  7955                           ; 1 bytes @ 0x7
  7956                           
  7957                           
  7958                           ; 1 bytes @ 0x7
  7959  0077                     	ds	1
  7960  0078                     ??_LCDcmd:
  7961  0078                     ??_LCDchar:	
  7962                           ; 1 bytes @ 0x8
  7963                           
  7964  0078                     ?___lwmod:	
  7965                           ; 1 bytes @ 0x8
  7966                           
  7967  0078                     LCDcmd@c:	
  7968                           ; 2 bytes @ 0x8
  7969                           
  7970  0078                     LCDchar@c:	
  7971                           ; 1 bytes @ 0x8
  7972                           
  7973  0078                     ___awdiv@dividend:	
  7974                           ; 1 bytes @ 0x8
  7975                           
  7976  0078                     ___lwmod@divisor:	
  7977                           ; 2 bytes @ 0x8
  7978                           
  7979                           
  7980                           ; 2 bytes @ 0x8
  7981  0078                     	ds	1
  7982  0079                     ??_LCDstr:
  7983                           
  7984                           ; 1 bytes @ 0x9
  7985  0079                     	ds	1
  7986  007A                     ??___awdiv:
  7987  007A                     LCDstr@c:	
  7988                           ; 1 bytes @ 0xA
  7989                           
  7990  007A                     ___lwmod@dividend:	
  7991                           ; 1 bytes @ 0xA
  7992                           
  7993                           
  7994                           ; 2 bytes @ 0xA
  7995  007A                     	ds	1
  7996  007B                     ??_map:
  7997  007B                     ??_monitoring_ISR:	
  7998                           ; 1 bytes @ 0xB
  7999                           
  8000  007B                     LCDstr@p:	
  8001                           ; 1 bytes @ 0xB
  8002                           
  8003                           
  8004                           ; 1 bytes @ 0xB
  8005  007B                     	ds	1
  8006  007C                     ??___lwmod:
  8007  007C                     differenceBetweenTimePeriod@diff:	
  8008                           ; 1 bytes @ 0xC
  8009                           
  8010                           
  8011                           ; 1 bytes @ 0xC
  8012  007C                     	ds	1
  8013  007D                     ___lwmod@counter:
  8014                           
  8015                           ; 1 bytes @ 0xD
  8016  007D                     	ds	1
  8017  007E                     ??_TMR5_ISR:
  8018  007E                     ??_TMR3_ISR:	
  8019                           ; 1 bytes @ 0xE
  8020                           
  8021  007E                     ??_INTERRUPT_InterruptManager:	
  8022                           ; 1 bytes @ 0xE
  8023                           
  8024                           
  8025                           	psect	cstackBANK0
  8026  0020                     __pcstackBANK0:	
  8027                           ; 1 bytes @ 0xE
  8028                           
  8029  0020                     ??_differenceBetweenTimePeriod:
  8030  0020                     ?_sprintf:	
  8031                           ; 1 bytes @ 0x0
  8032                           
  8033  0020                     ___awdiv@counter:	
  8034                           ; 2 bytes @ 0x0
  8035                           
  8036  0020                     sprintf@f:	
  8037                           ; 1 bytes @ 0x0
  8038                           
  8039                           
  8040                           ; 2 bytes @ 0x0
  8041  0020                     	ds	1
  8042  0021                     ___awdiv@sign:
  8043                           
  8044                           ; 1 bytes @ 0x1
  8045  0021                     	ds	1
  8046  0022                     ___awdiv@quotient:
  8047                           
  8048                           ; 2 bytes @ 0x2
  8049  0022                     	ds	2
  8050  0024                     ?_map:
  8051  0024                     map@x:	
  8052                           ; 2 bytes @ 0x4
  8053                           
  8054                           
  8055                           ; 2 bytes @ 0x4
  8056  0024                     	ds	2
  8057  0026                     map@in_min:
  8058                           
  8059                           ; 2 bytes @ 0x6
  8060  0026                     	ds	2
  8061  0028                     ??_sprintf:
  8062  0028                     map@in_max:	
  8063                           ; 1 bytes @ 0x8
  8064                           
  8065                           
  8066                           ; 2 bytes @ 0x8
  8067  0028                     	ds	2
  8068  002A                     map@out_min:
  8069                           
  8070                           ; 2 bytes @ 0xA
  8071  002A                     	ds	2
  8072  002C                     sprintf@ap:
  8073  002C                     map@out_max:	
  8074                           ; 1 bytes @ 0xC
  8075                           
  8076                           
  8077                           ; 2 bytes @ 0xC
  8078  002C                     	ds	1
  8079  002D                     sprintf@prec:
  8080                           
  8081                           ; 1 bytes @ 0xD
  8082  002D                     	ds	1
  8083  002E                     monitoring_ISR@lum:
  8084  002E                     sprintf@val:	
  8085                           ; 1 bytes @ 0xE
  8086                           
  8087                           
  8088                           ; 2 bytes @ 0xE
  8089  002E                     	ds	2
  8090  0030                     sprintf@flag:
  8091                           
  8092                           ; 1 bytes @ 0x10
  8093  0030                     	ds	1
  8094  0031                     sprintf@width:
  8095                           
  8096                           ; 2 bytes @ 0x11
  8097  0031                     	ds	2
  8098  0033                     sprintf@sp:
  8099                           
  8100                           ; 1 bytes @ 0x13
  8101  0033                     	ds	1
  8102  0034                     sprintf@c:
  8103                           
  8104                           ; 1 bytes @ 0x14
  8105  0034                     	ds	1
  8106  0035                     ??_menuLCD_ISR:
  8107                           
  8108                           ; 1 bytes @ 0x15
  8109  0035                     	ds	2
  8110  0037                     menuLCD_ISR@str:
  8111                           
  8112                           ; 8 bytes @ 0x17
  8113  0037                     	ds	8
  8114  003F                     menuLCD_ISR@tt:
  8115                           
  8116                           ; 4 bytes @ 0x1F
  8117  003F                     	ds	4
  8118  0043                     menuLCD_ISR@l:
  8119                           
  8120                           ; 3 bytes @ 0x23
  8121  0043                     	ds	3
  8122  0046                     menuLCD_ISR@diff:
  8123                           
  8124                           ; 6 bytes @ 0x26
  8125  0046                     	ds	6
  8126                           
  8127                           	psect	maintext
  8128  0E2D                     __pmaintext:	
  8129 ;;
  8130 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  8131 ;;
  8132 ;; *************** function _main *****************
  8133 ;; Defined at:
  8134 ;;		line 406 in file "main.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;		None
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;		None
  8139 ;; Return value:  Size  Location     Type
  8140 ;;                  1    wreg      void 
  8141 ;; Registers used:
  8142 ;;		wreg, status,2, status,0, pclath, cstack
  8143 ;; Tracked objects:
  8144 ;;		On entry : B1F/0
  8145 ;;		On exit  : 0/0
  8146 ;;		Unchanged: 0/0
  8147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;Total ram usage:        0 bytes
  8153 ;; Hardware stack levels required when called:   10
  8154 ;; This function calls:
  8155 ;;		_LCDinit
  8156 ;;		_SYSTEM_Initialize
  8157 ;;		_TMR1_SetInterruptHandler
  8158 ;;		_TMR2_StopTimer
  8159 ;;		_TMR3_SetInterruptHandler
  8160 ;;		_TMR5_SetInterruptHandler
  8161 ;;		_i2c1_driver_open
  8162 ;; This function is called by:
  8163 ;;		Startup code after reset
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           
  8168                           ;psect for function _main
  8169  0E2D                     _main:
  8170  0E2D                     l4129:	
  8171                           ;incstack = 0
  8172                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  8173                           
  8174                           
  8175                           ;main.c: 409: SYSTEM_Initialize();
  8176  0E2D  318D  2595  318E   	fcall	_SYSTEM_Initialize
  8177  0E30                     l4131:
  8178                           
  8179                           ;main.c: 411: TMR2_StopTimer();
  8180  0E30  3187  27FB  318E   	fcall	_TMR2_StopTimer
  8181  0E33                     l4133:
  8182                           
  8183                           ;main.c: 414: TMR1_SetInterruptHandler(Clock_ISR);
  8184  0E33  30B3               	movlw	low _Clock_ISR
  8185  0E34  0021               	movlb	1	; select bank1
  8186  0E35  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  8187  0E36  3006               	movlw	high _Clock_ISR
  8188  0E37  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8189  0E38  318C  2421  318E   	fcall	_TMR1_SetInterruptHandler
  8190  0E3B                     l4135:
  8191                           
  8192                           ;main.c: 416: TMR3_SetInterruptHandler(menuLCD_ISR);
  8193  0E3B  300A               	movlw	low _menuLCD_ISR
  8194  0E3C  0021               	movlb	1	; select bank1
  8195  0E3D  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  8196  0E3E  3002               	movlw	high _menuLCD_ISR
  8197  0E3F  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8198  0E40  318C  2459  318E   	fcall	_TMR3_SetInterruptHandler
  8199  0E43                     l4137:
  8200                           
  8201                           ;main.c: 418: TMR5_SetInterruptHandler(monitoring_ISR);
  8202  0E43  30A8               	movlw	low _monitoring_ISR
  8203  0E44  0021               	movlb	1	; select bank1
  8204  0E45  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  8205  0E46  300F               	movlw	high _monitoring_ISR
  8206  0E47  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8207  0E48  318C  2462  318E   	fcall	_TMR5_SetInterruptHandler
  8208  0E4B                     l4139:
  8209                           
  8210                           ;main.c: 420: i2c1_driver_open();
  8211  0E4B  318C  246B  318E   	fcall	_i2c1_driver_open
  8212  0E4E                     l4141:
  8213                           
  8214                           ;main.c: 421: TRISCbits.TRISC3 = 1;
  8215  0E4E  0020               	movlb	0	; select bank0
  8216  0E4F  1593               	bsf	19,3	;volatile
  8217  0E50                     l4143:
  8218                           
  8219                           ;main.c: 422: TRISCbits.TRISC4 = 1;
  8220  0E50  1613               	bsf	19,4	;volatile
  8221  0E51                     l4145:
  8222                           
  8223                           ;main.c: 423: WPUC3 = 1;
  8224  0E51  003E               	movlb	30	; select bank30
  8225  0E52  15CF               	bsf	79,3	;volatile
  8226  0E53                     l4147:
  8227                           
  8228                           ;main.c: 424: WPUC4 = 1;
  8229  0E53  164F               	bsf	79,4	;volatile
  8230  0E54                     l4149:
  8231                           
  8232                           ;main.c: 425: LCDinit();
  8233  0E54  3185  25CF  318E   	fcall	_LCDinit
  8234  0E57                     l4151:
  8235                           
  8236                           ;main.c: 428: (INTCONbits.GIE = 1);
  8237  0E57  178B               	bsf	11,7	;volatile
  8238  0E58                     l4153:
  8239                           
  8240                           ;main.c: 431: (INTCONbits.PEIE = 1);
  8241  0E58  170B               	bsf	11,6	;volatile
  8242  0E59                     l1001:	
  8243                           ;main.c: 433: while (1)
  8244                           
  8245  0E59                     l1002:	
  8246                           ;main.c: 434: {
  8247                           
  8248  0E59  2E59               	goto	l1001
  8249  0E5A  3180  2840         	ljmp	start
  8250  0E5C                     __end_of_main:
  8251                           
  8252                           	psect	text1
  8253  0C6B                     __ptext1:	
  8254 ;; *************** function _i2c1_driver_open *****************
  8255 ;; Defined at:
  8256 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;		None
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;		None
  8261 ;; Return value:  Size  Location     Type
  8262 ;;		None               void
  8263 ;; Registers used:
  8264 ;;		wreg, status,2
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;Total ram usage:        0 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:    7
  8277 ;; This function calls:
  8278 ;;		Nothing
  8279 ;; This function is called by:
  8280 ;;		_main
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           
  8285                           ;psect for function _i2c1_driver_open
  8286  0C6B                     _i2c1_driver_open:
  8287  0C6B                     l3955:	
  8288                           ;incstack = 0
  8289                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  8290                           
  8291                           
  8292                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  8293  0C6B  0023               	movlb	3	; select bank3
  8294  0C6C  1A90               	btfsc	16,5	;volatile
  8295  0C6D  2C6F               	goto	u3521
  8296  0C6E  2C70               	goto	u3520
  8297  0C6F                     u3521:
  8298  0C6F  2C76               	goto	l239
  8299  0C70                     u3520:
  8300  0C70                     l3957:
  8301                           
  8302                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  8303  0C70  018F               	clrf	15	;volatile
  8304  0C71                     l3959:
  8305                           
  8306                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  8307  0C71  3028               	movlw	40
  8308  0C72  0090               	movwf	16	;volatile
  8309  0C73                     l3961:
  8310                           
  8311                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  8312  0C73  0191               	clrf	17	;volatile
  8313                           
  8314                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  8315  0C74  3003               	movlw	3
  8316  0C75  008D               	movwf	13	;volatile
  8317  0C76                     l239:
  8318  0C76  0008               	return
  8319  0C77                     __end_of_i2c1_driver_open:
  8320                           
  8321                           	psect	text2
  8322  07FB                     __ptext2:	
  8323 ;; *************** function _TMR2_StopTimer *****************
  8324 ;; Defined at:
  8325 ;;		line 117 in file "mcc_generated_files/tmr2.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;		None
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;		None
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  1    wreg      void 
  8332 ;; Registers used:
  8333 ;;		status,2, status,0, pclath, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8343 ;;Total ram usage:        0 bytes
  8344 ;; Hardware stack levels used:    1
  8345 ;; Hardware stack levels required when called:    8
  8346 ;; This function calls:
  8347 ;;		_TMR2_Stop
  8348 ;; This function is called by:
  8349 ;;		_main
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           
  8354                           ;psect for function _TMR2_StopTimer
  8355  07FB                     _TMR2_StopTimer:
  8356  07FB                     l4091:	
  8357                           ;incstack = 0
  8358                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
  8359                           
  8360                           
  8361                           ;tmr2.c: 119: TMR2_Stop();
  8362  07FB  318C  241A  3187   	fcall	_TMR2_Stop
  8363  07FE                     l1127:
  8364  07FE  0008               	return
  8365  07FF                     __end_of_TMR2_StopTimer:
  8366                           
  8367                           	psect	text3
  8368  0C1A                     __ptext3:	
  8369 ;; *************** function _TMR2_Stop *****************
  8370 ;; Defined at:
  8371 ;;		line 111 in file "mcc_generated_files/tmr2.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;		None
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;		None
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      void 
  8378 ;; Registers used:
  8379 ;;		None
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8389 ;;Total ram usage:        0 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:    7
  8392 ;; This function calls:
  8393 ;;		Nothing
  8394 ;; This function is called by:
  8395 ;;		_TMR2_StopTimer
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           
  8400                           ;psect for function _TMR2_Stop
  8401  0C1A                     _TMR2_Stop:
  8402  0C1A                     l3935:	
  8403                           ;incstack = 0
  8404                           ; Regs used in _TMR2_Stop: []
  8405                           
  8406                           
  8407                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
  8408  0C1A  0025               	movlb	5	; select bank5
  8409  0C1B  138E               	bcf	14,7	;volatile
  8410  0C1C                     l1124:
  8411  0C1C  0008               	return
  8412  0C1D                     __end_of_TMR2_Stop:
  8413                           
  8414                           	psect	text4
  8415  0D95                     __ptext4:	
  8416 ;; *************** function _SYSTEM_Initialize *****************
  8417 ;; Defined at:
  8418 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;		None
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;		None
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg, status,2, status,0, pclath, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8436 ;;Total ram usage:        0 bytes
  8437 ;; Hardware stack levels used:    1
  8438 ;; Hardware stack levels required when called:    9
  8439 ;; This function calls:
  8440 ;;		_ADCC_Initialize
  8441 ;;		_OSCILLATOR_Initialize
  8442 ;;		_PIN_MANAGER_Initialize
  8443 ;;		_PMD_Initialize
  8444 ;;		_PWM6_Initialize
  8445 ;;		_TMR1_Initialize
  8446 ;;		_TMR2_Initialize
  8447 ;;		_TMR3_Initialize
  8448 ;;		_TMR5_Initialize
  8449 ;; This function is called by:
  8450 ;;		_main
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           
  8455                           ;psect for function _SYSTEM_Initialize
  8456  0D95                     _SYSTEM_Initialize:
  8457  0D95                     l3937:	
  8458                           ;incstack = 0
  8459                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8460                           
  8461                           
  8462                           ;mcc.c: 52: PMD_Initialize();
  8463  0D95  318C  2448  318D   	fcall	_PMD_Initialize
  8464  0D98                     l3939:
  8465                           
  8466                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  8467  0D98  318E  26CC  318D   	fcall	_PIN_MANAGER_Initialize
  8468  0D9B                     l3941:
  8469                           
  8470                           ;mcc.c: 54: OSCILLATOR_Initialize();
  8471  0D9B  318C  2450  318D   	fcall	_OSCILLATOR_Initialize
  8472  0D9E                     l3943:
  8473                           
  8474                           ;mcc.c: 55: PWM6_Initialize();
  8475  0D9E  318C  2483  318D   	fcall	_PWM6_Initialize
  8476  0DA1                     l3945:
  8477                           
  8478                           ;mcc.c: 56: ADCC_Initialize();
  8479  0DA1  318D  2564  318D   	fcall	_ADCC_Initialize
  8480  0DA4                     l3947:
  8481                           
  8482                           ;mcc.c: 57: TMR3_Initialize();
  8483  0DA4  318D  25EF  318D   	fcall	_TMR3_Initialize
  8484  0DA7                     l3949:
  8485                           
  8486                           ;mcc.c: 58: TMR5_Initialize();
  8487  0DA7  318E  260E  318D   	fcall	_TMR5_Initialize
  8488  0DAA                     l3951:
  8489                           
  8490                           ;mcc.c: 59: TMR2_Initialize();
  8491  0DAA  318C  2490  318D   	fcall	_TMR2_Initialize
  8492  0DAD                     l3953:
  8493                           
  8494                           ;mcc.c: 60: TMR1_Initialize();
  8495  0DAD  318D  25D0  318D   	fcall	_TMR1_Initialize
  8496  0DB0                     l172:
  8497  0DB0  0008               	return
  8498  0DB1                     __end_of_SYSTEM_Initialize:
  8499                           
  8500                           	psect	text5
  8501  0E0E                     __ptext5:	
  8502 ;; *************** function _TMR5_Initialize *****************
  8503 ;; Defined at:
  8504 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;		None
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      void 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2, status,0, pclath, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;Total ram usage:        0 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    8
  8525 ;; This function calls:
  8526 ;;		_TMR5_SetInterruptHandler
  8527 ;; This function is called by:
  8528 ;;		_SYSTEM_Initialize
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           
  8533                           ;psect for function _TMR5_Initialize
  8534  0E0E                     _TMR5_Initialize:
  8535  0E0E                     l3685:	
  8536                           ;incstack = 0
  8537                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8538                           
  8539                           
  8540                           ;tmr5.c: 69: T5GCON = 0x00;
  8541  0E0E  0024               	movlb	4	; select bank4
  8542  0E0F  019B               	clrf	27	;volatile
  8543                           
  8544                           ;tmr5.c: 72: T5GATE = 0x00;
  8545  0E10  019C               	clrf	28	;volatile
  8546  0E11                     l3687:
  8547                           
  8548                           ;tmr5.c: 75: T5CLK = 0x04;
  8549  0E11  3004               	movlw	4
  8550  0E12  009D               	movwf	29	;volatile
  8551  0E13                     l3689:
  8552                           
  8553                           ;tmr5.c: 79: TMR5H = 0x4A;
  8554  0E13  304A               	movlw	74
  8555  0E14  0099               	movwf	25	;volatile
  8556  0E15                     l3691:
  8557                           
  8558                           ;tmr5.c: 82: TMR5L = 0x5C;
  8559  0E15  305C               	movlw	92
  8560  0E16  0098               	movwf	24	;volatile
  8561  0E17                     l3693:
  8562                           
  8563                           ;tmr5.c: 85: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  8564  0E17  0819               	movf	25,w	;volatile
  8565  0E18  0020               	movlb	0	; select bank0
  8566  0E19  00EA               	movwf	_timer5ReloadVal+1	;volatile
  8567  0E1A  0024               	movlb	4	; select bank4
  8568  0E1B  0818               	movf	24,w	;volatile
  8569  0E1C  0020               	movlb	0	; select bank0
  8570  0E1D  00E9               	movwf	_timer5ReloadVal	;volatile
  8571  0E1E                     l3695:
  8572                           
  8573                           ;tmr5.c: 88: PIR4bits.TMR5IF = 0;
  8574  0E1E  002E               	movlb	14	; select bank14
  8575  0E1F  1210               	bcf	16,4	;volatile
  8576  0E20                     l3697:
  8577                           
  8578                           ;tmr5.c: 91: PIE4bits.TMR5IE = 1;
  8579  0E20  161A               	bsf	26,4	;volatile
  8580  0E21                     l3699:
  8581                           
  8582                           ;tmr5.c: 94: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
  8583  0E21  30FF               	movlw	low _TMR5_DefaultInterruptHandler
  8584  0E22  0021               	movlb	1	; select bank1
  8585  0E23  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  8586  0E24  3007               	movlw	high _TMR5_DefaultInterruptHandler
  8587  0E25  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8588  0E26  318C  2462  318E   	fcall	_TMR5_SetInterruptHandler
  8589  0E29                     l3701:
  8590                           
  8591                           ;tmr5.c: 97: T5CON = 0x11;
  8592  0E29  3011               	movlw	17
  8593  0E2A  0024               	movlb	4	; select bank4
  8594  0E2B  009A               	movwf	26	;volatile
  8595  0E2C                     l1035:
  8596  0E2C  0008               	return
  8597  0E2D                     __end_of_TMR5_Initialize:
  8598                           
  8599                           	psect	text6
  8600  0C62                     __ptext6:	
  8601 ;; *************** function _TMR5_SetInterruptHandler *****************
  8602 ;; Defined at:
  8603 ;;		line 179 in file "mcc_generated_files/tmr5.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  8606 ;;		 -> TMR5_DefaultInterruptHandler(1), monitoring_ISR(1), 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;		None
  8609 ;; Return value:  Size  Location     Type
  8610 ;;                  1    wreg      void 
  8611 ;; Registers used:
  8612 ;;		wreg
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8618 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8621 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8622 ;;Total ram usage:        2 bytes
  8623 ;; Hardware stack levels used:    1
  8624 ;; Hardware stack levels required when called:    7
  8625 ;; This function calls:
  8626 ;;		Nothing
  8627 ;; This function is called by:
  8628 ;;		_main
  8629 ;;		_TMR5_Initialize
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           
  8634                           ;psect for function _TMR5_SetInterruptHandler
  8635  0C62                     _TMR5_SetInterruptHandler:
  8636  0C62                     l3589:	
  8637                           ;incstack = 0
  8638                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
  8639                           
  8640                           
  8641                           ;tmr5.c: 180: TMR5_InterruptHandler = InterruptHandler;
  8642  0C62  0021               	movlb	1	; select bank1
  8643  0C63  0821               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  8644  0C64  0020               	movlb	0	; select bank0
  8645  0C65  00E8               	movwf	_TMR5_InterruptHandler+1
  8646  0C66  0021               	movlb	1	; select bank1
  8647  0C67  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
  8648  0C68  0020               	movlb	0	; select bank0
  8649  0C69  00E7               	movwf	_TMR5_InterruptHandler
  8650  0C6A                     l1065:
  8651  0C6A  0008               	return
  8652  0C6B                     __end_of_TMR5_SetInterruptHandler:
  8653                           
  8654                           	psect	text7
  8655  0DEF                     __ptext7:	
  8656 ;; *************** function _TMR3_Initialize *****************
  8657 ;; Defined at:
  8658 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;		None
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;		None
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      void 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2, status,0, pclath, cstack
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;Total ram usage:        0 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    8
  8679 ;; This function calls:
  8680 ;;		_TMR3_SetInterruptHandler
  8681 ;; This function is called by:
  8682 ;;		_SYSTEM_Initialize
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           
  8687                           ;psect for function _TMR3_Initialize
  8688  0DEF                     _TMR3_Initialize:
  8689  0DEF                     l3667:	
  8690                           ;incstack = 0
  8691                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8692                           
  8693                           
  8694                           ;tmr3.c: 69: T3GCON = 0x00;
  8695  0DEF  0024               	movlb	4	; select bank4
  8696  0DF0  0195               	clrf	21	;volatile
  8697                           
  8698                           ;tmr3.c: 72: T3GATE = 0x00;
  8699  0DF1  0196               	clrf	22	;volatile
  8700  0DF2                     l3669:
  8701                           
  8702                           ;tmr3.c: 75: T3CLK = 0x04;
  8703  0DF2  3004               	movlw	4
  8704  0DF3  0097               	movwf	23	;volatile
  8705  0DF4                     l3671:
  8706                           
  8707                           ;tmr3.c: 78: TMR3H = 0xE7;
  8708  0DF4  30E7               	movlw	231
  8709  0DF5  0093               	movwf	19	;volatile
  8710  0DF6                     l3673:
  8711                           
  8712                           ;tmr3.c: 81: TMR3L = 0xC8;
  8713  0DF6  30C8               	movlw	200
  8714  0DF7  0092               	movwf	18	;volatile
  8715  0DF8                     l3675:
  8716                           
  8717                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  8718  0DF8  0813               	movf	19,w	;volatile
  8719  0DF9  0020               	movlb	0	; select bank0
  8720  0DFA  00EE               	movwf	_timer3ReloadVal+1	;volatile
  8721  0DFB  0024               	movlb	4	; select bank4
  8722  0DFC  0812               	movf	18,w	;volatile
  8723  0DFD  0020               	movlb	0	; select bank0
  8724  0DFE  00ED               	movwf	_timer3ReloadVal	;volatile
  8725  0DFF                     l3677:
  8726                           
  8727                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
  8728  0DFF  002E               	movlb	14	; select bank14
  8729  0E00  1110               	bcf	16,2	;volatile
  8730  0E01                     l3679:
  8731                           
  8732                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
  8733  0E01  151A               	bsf	26,2	;volatile
  8734  0E02                     l3681:
  8735                           
  8736                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  8737  0E02  3003               	movlw	low _TMR3_DefaultInterruptHandler
  8738  0E03  0021               	movlb	1	; select bank1
  8739  0E04  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  8740  0E05  3000               	movlw	high _TMR3_DefaultInterruptHandler
  8741  0E06  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8742  0E07  318C  2459  318D   	fcall	_TMR3_SetInterruptHandler
  8743  0E0A                     l3683:
  8744                           
  8745                           ;tmr3.c: 96: T3CON = 0x01;
  8746  0E0A  3001               	movlw	1
  8747  0E0B  0024               	movlb	4	; select bank4
  8748  0E0C  0094               	movwf	20	;volatile
  8749  0E0D                     l451:
  8750  0E0D  0008               	return
  8751  0E0E                     __end_of_TMR3_Initialize:
  8752                           
  8753                           	psect	text8
  8754  0C59                     __ptext8:	
  8755 ;; *************** function _TMR3_SetInterruptHandler *****************
  8756 ;; Defined at:
  8757 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  8760 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  1    wreg      void 
  8765 ;; Registers used:
  8766 ;;		wreg
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8772 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8775 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;Total ram usage:        2 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; Hardware stack levels required when called:    7
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		_TMR3_Initialize
  8783 ;;		_main
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           
  8788                           ;psect for function _TMR3_SetInterruptHandler
  8789  0C59                     _TMR3_SetInterruptHandler:
  8790  0C59                     l3383:	
  8791                           ;incstack = 0
  8792                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
  8793                           
  8794                           
  8795                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
  8796  0C59  0021               	movlb	1	; select bank1
  8797  0C5A  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  8798  0C5B  0020               	movlb	0	; select bank0
  8799  0C5C  00EC               	movwf	_TMR3_InterruptHandler+1
  8800  0C5D  0021               	movlb	1	; select bank1
  8801  0C5E  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
  8802  0C5F  0020               	movlb	0	; select bank0
  8803  0C60  00EB               	movwf	_TMR3_InterruptHandler
  8804  0C61                     l481:
  8805  0C61  0008               	return
  8806  0C62                     __end_of_TMR3_SetInterruptHandler:
  8807                           
  8808                           	psect	text9
  8809  0C90                     __ptext9:	
  8810 ;; *************** function _TMR2_Initialize *****************
  8811 ;; Defined at:
  8812 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;		None
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;		None
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  1    wreg      void 
  8819 ;; Registers used:
  8820 ;;		wreg, status,2
  8821 ;; Tracked objects:
  8822 ;;		On entry : 0/0
  8823 ;;		On exit  : 0/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8830 ;;Total ram usage:        0 bytes
  8831 ;; Hardware stack levels used:    1
  8832 ;; Hardware stack levels required when called:    7
  8833 ;; This function calls:
  8834 ;;		Nothing
  8835 ;; This function is called by:
  8836 ;;		_SYSTEM_Initialize
  8837 ;; This function uses a non-reentrant model
  8838 ;;
  8839                           
  8840                           
  8841                           ;psect for function _TMR2_Initialize
  8842  0C90                     _TMR2_Initialize:
  8843  0C90                     l3703:	
  8844                           ;incstack = 0
  8845                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8846                           
  8847                           
  8848                           ;tmr2.c: 67: T2CLKCON = 0x01;
  8849  0C90  3001               	movlw	1
  8850  0C91  0025               	movlb	5	; select bank5
  8851  0C92  0090               	movwf	16	;volatile
  8852  0C93                     l3705:
  8853                           
  8854                           ;tmr2.c: 70: T2HLT = 0x00;
  8855  0C93  018F               	clrf	15	;volatile
  8856  0C94                     l3707:
  8857                           
  8858                           ;tmr2.c: 73: T2RST = 0x00;
  8859  0C94  0191               	clrf	17	;volatile
  8860                           
  8861                           ;tmr2.c: 76: T2PR = 0xFF;
  8862  0C95  30FF               	movlw	255
  8863  0C96  008D               	movwf	13	;volatile
  8864  0C97                     l3709:
  8865                           
  8866                           ;tmr2.c: 79: T2TMR = 0x00;
  8867  0C97  018C               	clrf	12	;volatile
  8868  0C98                     l3711:
  8869                           
  8870                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
  8871  0C98  002E               	movlb	14	; select bank14
  8872  0C99  1090               	bcf	16,1	;volatile
  8873  0C9A                     l3713:
  8874                           
  8875                           ;tmr2.c: 85: T2CON = 0x80;
  8876  0C9A  3080               	movlw	128
  8877  0C9B  0025               	movlb	5	; select bank5
  8878  0C9C  008E               	movwf	14	;volatile
  8879  0C9D                     l1109:
  8880  0C9D  0008               	return
  8881  0C9E                     __end_of_TMR2_Initialize:
  8882                           
  8883                           	psect	text10
  8884  0DD0                     __ptext10:	
  8885 ;; *************** function _TMR1_Initialize *****************
  8886 ;; Defined at:
  8887 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;		None
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;		None
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  1    wreg      void 
  8894 ;; Registers used:
  8895 ;;		wreg, status,2, status,0, pclath, cstack
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;Total ram usage:        0 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; Hardware stack levels required when called:    8
  8908 ;; This function calls:
  8909 ;;		_TMR1_SetInterruptHandler
  8910 ;; This function is called by:
  8911 ;;		_SYSTEM_Initialize
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           
  8916                           ;psect for function _TMR1_Initialize
  8917  0DD0                     _TMR1_Initialize:
  8918  0DD0                     l3715:	
  8919                           ;incstack = 0
  8920                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8921                           
  8922                           
  8923                           ;tmr1.c: 69: T1GCON = 0x00;
  8924  0DD0  0024               	movlb	4	; select bank4
  8925  0DD1  018F               	clrf	15	;volatile
  8926                           
  8927                           ;tmr1.c: 72: T1GATE = 0x00;
  8928  0DD2  0190               	clrf	16	;volatile
  8929  0DD3                     l3717:
  8930                           
  8931                           ;tmr1.c: 75: T1CLK = 0x04;
  8932  0DD3  3004               	movlw	4
  8933  0DD4  0091               	movwf	17	;volatile
  8934  0DD5                     l3719:
  8935                           
  8936                           ;tmr1.c: 78: TMR1H = 0x86;
  8937  0DD5  3086               	movlw	134
  8938  0DD6  008D               	movwf	13	;volatile
  8939  0DD7                     l3721:
  8940                           
  8941                           ;tmr1.c: 81: TMR1L = 0xE8;
  8942  0DD7  30E8               	movlw	232
  8943  0DD8  008C               	movwf	12	;volatile
  8944  0DD9                     l3723:
  8945                           
  8946                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8947  0DD9  080D               	movf	13,w	;volatile
  8948  0DDA  0021               	movlb	1	; select bank1
  8949  0DDB  00B8               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8950  0DDC  0024               	movlb	4	; select bank4
  8951  0DDD  080C               	movf	12,w	;volatile
  8952  0DDE  0021               	movlb	1	; select bank1
  8953  0DDF  00B7               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8954  0DE0                     l3725:
  8955                           
  8956                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
  8957  0DE0  002E               	movlb	14	; select bank14
  8958  0DE1  1010               	bcf	16,0	;volatile
  8959  0DE2                     l3727:
  8960                           
  8961                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
  8962  0DE2  141A               	bsf	26,0	;volatile
  8963  0DE3                     l3729:
  8964                           
  8965                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  8966  0DE3  3002               	movlw	low _TMR1_DefaultInterruptHandler
  8967  0DE4  0021               	movlb	1	; select bank1
  8968  0DE5  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  8969  0DE6  3000               	movlw	high _TMR1_DefaultInterruptHandler
  8970  0DE7  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8971  0DE8  318C  2421  318D   	fcall	_TMR1_SetInterruptHandler
  8972  0DEB                     l3731:
  8973                           
  8974                           ;tmr1.c: 96: T1CON = 0x01;
  8975  0DEB  3001               	movlw	1
  8976  0DEC  0024               	movlb	4	; select bank4
  8977  0DED  008E               	movwf	14	;volatile
  8978  0DEE                     l387:
  8979  0DEE  0008               	return
  8980  0DEF                     __end_of_TMR1_Initialize:
  8981                           
  8982                           	psect	text11
  8983  0C21                     __ptext11:	
  8984 ;; *************** function _TMR1_SetInterruptHandler *****************
  8985 ;; Defined at:
  8986 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  8989 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;		None
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  1    wreg      void 
  8994 ;; Registers used:
  8995 ;;		wreg
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9001 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;Total ram usage:        2 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; Hardware stack levels required when called:    7
  9008 ;; This function calls:
  9009 ;;		Nothing
  9010 ;; This function is called by:
  9011 ;;		_TMR1_Initialize
  9012 ;;		_main
  9013 ;; This function uses a non-reentrant model
  9014 ;;
  9015                           
  9016                           
  9017                           ;psect for function _TMR1_SetInterruptHandler
  9018  0C21                     _TMR1_SetInterruptHandler:
  9019  0C21                     l3381:	
  9020                           ;incstack = 0
  9021                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  9022                           
  9023                           
  9024                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
  9025  0C21  0021               	movlb	1	; select bank1
  9026  0C22  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9027  0C23  00B6               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  9028  0C24  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  9029  0C25  00B5               	movwf	_TMR1_InterruptHandler^(0+128)
  9030  0C26                     l417:
  9031  0C26  0008               	return
  9032  0C27                     __end_of_TMR1_SetInterruptHandler:
  9033                           
  9034                           	psect	text12
  9035  0C83                     __ptext12:	
  9036 ;; *************** function _PWM6_Initialize *****************
  9037 ;; Defined at:
  9038 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  9039 ;; Parameters:    Size  Location     Type
  9040 ;;		None
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;		None
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  1    wreg      void 
  9045 ;; Registers used:
  9046 ;;		wreg, status,2, status,0
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;Total ram usage:        0 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:    7
  9059 ;; This function calls:
  9060 ;;		Nothing
  9061 ;; This function is called by:
  9062 ;;		_SYSTEM_Initialize
  9063 ;; This function uses a non-reentrant model
  9064 ;;
  9065                           
  9066                           
  9067                           ;psect for function _PWM6_Initialize
  9068  0C83                     _PWM6_Initialize:
  9069  0C83                     l3657:	
  9070                           ;incstack = 0
  9071                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9072                           
  9073                           
  9074                           ;pwm6.c: 62: PWM6CON = 0x80;
  9075  0C83  3080               	movlw	128
  9076  0C84  0027               	movlb	7	; select bank7
  9077  0C85  008E               	movwf	14	;volatile
  9078                           
  9079                           ;pwm6.c: 65: PWM6DCH = 0xFF;
  9080  0C86  30FF               	movlw	255
  9081  0C87  008D               	movwf	13	;volatile
  9082                           
  9083                           ;pwm6.c: 68: PWM6DCL = 0xC0;
  9084  0C88  30C0               	movlw	192
  9085  0C89  008C               	movwf	12	;volatile
  9086  0C8A                     l3659:
  9087                           
  9088                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
  9089  0C8A  0024               	movlb	4	; select bank4
  9090  0C8B  081F               	movf	31,w	;volatile
  9091  0C8C  39F3               	andlw	-13
  9092  0C8D  3804               	iorlw	4
  9093  0C8E  009F               	movwf	31	;volatile
  9094  0C8F                     l1079:
  9095  0C8F  0008               	return
  9096  0C90                     __end_of_PWM6_Initialize:
  9097                           
  9098                           	psect	text13
  9099  0C48                     __ptext13:	
  9100 ;; *************** function _PMD_Initialize *****************
  9101 ;; Defined at:
  9102 ;;		line 77 in file "mcc_generated_files/mcc.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;		None
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;		None
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  1    wreg      void 
  9109 ;; Registers used:
  9110 ;;		status,2
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9120 ;;Total ram usage:        0 bytes
  9121 ;; Hardware stack levels used:    1
  9122 ;; Hardware stack levels required when called:    7
  9123 ;; This function calls:
  9124 ;;		Nothing
  9125 ;; This function is called by:
  9126 ;;		_SYSTEM_Initialize
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           
  9131                           ;psect for function _PMD_Initialize
  9132  0C48                     _PMD_Initialize:
  9133  0C48                     l3647:	
  9134                           ;incstack = 0
  9135                           ; Regs used in _PMD_Initialize: [status,2]
  9136                           
  9137                           
  9138                           ;mcc.c: 80: PMD0 = 0x00;
  9139  0C48  002F               	movlb	15	; select bank15
  9140  0C49  0196               	clrf	22	;volatile
  9141                           
  9142                           ;mcc.c: 82: PMD1 = 0x00;
  9143  0C4A  0197               	clrf	23	;volatile
  9144                           
  9145                           ;mcc.c: 84: PMD2 = 0x00;
  9146  0C4B  0198               	clrf	24	;volatile
  9147                           
  9148                           ;mcc.c: 86: PMD3 = 0x00;
  9149  0C4C  0199               	clrf	25	;volatile
  9150                           
  9151                           ;mcc.c: 88: PMD4 = 0x00;
  9152  0C4D  019A               	clrf	26	;volatile
  9153                           
  9154                           ;mcc.c: 90: PMD5 = 0x00;
  9155  0C4E  019B               	clrf	27	;volatile
  9156  0C4F                     l178:
  9157  0C4F  0008               	return
  9158  0C50                     __end_of_PMD_Initialize:
  9159                           
  9160                           	psect	text14
  9161  0ECC                     __ptext14:	
  9162 ;; *************** function _PIN_MANAGER_Initialize *****************
  9163 ;; Defined at:
  9164 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;		None
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;		None
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  1    wreg      void 
  9171 ;; Registers used:
  9172 ;;		wreg, status,2
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;Total ram usage:        0 bytes
  9183 ;; Hardware stack levels used:    1
  9184 ;; Hardware stack levels required when called:    7
  9185 ;; This function calls:
  9186 ;;		Nothing
  9187 ;; This function is called by:
  9188 ;;		_SYSTEM_Initialize
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           
  9193                           ;psect for function _PIN_MANAGER_Initialize
  9194  0ECC                     _PIN_MANAGER_Initialize:
  9195  0ECC                     l3591:	
  9196                           ;incstack = 0
  9197                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9198                           
  9199                           
  9200                           ;pin_manager.c: 62: LATE = 0x00;
  9201  0ECC  0020               	movlb	0	; select bank0
  9202  0ECD  019A               	clrf	26	;volatile
  9203                           
  9204                           ;pin_manager.c: 63: LATD = 0x00;
  9205  0ECE  0199               	clrf	25	;volatile
  9206                           
  9207                           ;pin_manager.c: 64: LATA = 0x00;
  9208  0ECF  0196               	clrf	22	;volatile
  9209                           
  9210                           ;pin_manager.c: 65: LATB = 0x00;
  9211  0ED0  0197               	clrf	23	;volatile
  9212                           
  9213                           ;pin_manager.c: 66: LATC = 0x00;
  9214  0ED1  0198               	clrf	24	;volatile
  9215  0ED2                     l3593:
  9216                           
  9217                           ;pin_manager.c: 71: TRISE = 0x07;
  9218  0ED2  3007               	movlw	7
  9219  0ED3  0095               	movwf	21	;volatile
  9220  0ED4                     l3595:
  9221                           
  9222                           ;pin_manager.c: 72: TRISA = 0x0F;
  9223  0ED4  300F               	movlw	15
  9224  0ED5  0091               	movwf	17	;volatile
  9225  0ED6                     l3597:
  9226                           
  9227                           ;pin_manager.c: 73: TRISB = 0xFF;
  9228  0ED6  30FF               	movlw	255
  9229  0ED7  0092               	movwf	18	;volatile
  9230  0ED8                     l3599:
  9231                           
  9232                           ;pin_manager.c: 74: TRISC = 0xFF;
  9233  0ED8  30FF               	movlw	255
  9234  0ED9  0093               	movwf	19	;volatile
  9235  0EDA                     l3601:
  9236                           
  9237                           ;pin_manager.c: 75: TRISD = 0xFF;
  9238  0EDA  30FF               	movlw	255
  9239  0EDB  0094               	movwf	20	;volatile
  9240  0EDC                     l3603:
  9241                           
  9242                           ;pin_manager.c: 80: ANSELD = 0xFF;
  9243  0EDC  30FF               	movlw	255
  9244  0EDD  003E               	movlb	30	; select bank30
  9245  0EDE  00D9               	movwf	89	;volatile
  9246  0EDF                     l3605:
  9247                           
  9248                           ;pin_manager.c: 81: ANSELC = 0xC7;
  9249  0EDF  30C7               	movlw	199
  9250  0EE0  00CE               	movwf	78	;volatile
  9251  0EE1                     l3607:
  9252                           
  9253                           ;pin_manager.c: 82: ANSELB = 0xEF;
  9254  0EE1  30EF               	movlw	239
  9255  0EE2  00C3               	movwf	67	;volatile
  9256  0EE3                     l3609:
  9257                           
  9258                           ;pin_manager.c: 83: ANSELE = 0x07;
  9259  0EE3  3007               	movlw	7
  9260  0EE4  00E4               	movwf	100	;volatile
  9261  0EE5                     l3611:
  9262                           
  9263                           ;pin_manager.c: 84: ANSELA = 0x4F;
  9264  0EE5  304F               	movlw	79
  9265  0EE6  00B8               	movwf	56	;volatile
  9266                           
  9267                           ;pin_manager.c: 89: WPUD = 0x00;
  9268  0EE7  01DA               	clrf	90	;volatile
  9269                           
  9270                           ;pin_manager.c: 90: WPUE = 0x00;
  9271  0EE8  01E5               	clrf	101	;volatile
  9272                           
  9273                           ;pin_manager.c: 91: WPUB = 0x00;
  9274  0EE9  01C4               	clrf	68	;volatile
  9275  0EEA                     l3613:
  9276                           
  9277                           ;pin_manager.c: 92: WPUA = 0x01;
  9278  0EEA  3001               	movlw	1
  9279  0EEB  00B9               	movwf	57	;volatile
  9280  0EEC                     l3615:
  9281                           
  9282                           ;pin_manager.c: 93: WPUC = 0x00;
  9283  0EEC  01CF               	clrf	79	;volatile
  9284  0EED                     l3617:
  9285                           
  9286                           ;pin_manager.c: 98: ODCONE = 0x00;
  9287  0EED  01E6               	clrf	102	;volatile
  9288  0EEE                     l3619:
  9289                           
  9290                           ;pin_manager.c: 99: ODCONA = 0x00;
  9291  0EEE  01BA               	clrf	58	;volatile
  9292  0EEF                     l3621:
  9293                           
  9294                           ;pin_manager.c: 100: ODCONB = 0x00;
  9295  0EEF  01C5               	clrf	69	;volatile
  9296  0EF0                     l3623:
  9297                           
  9298                           ;pin_manager.c: 101: ODCONC = 0x00;
  9299  0EF0  01D0               	clrf	80	;volatile
  9300  0EF1                     l3625:
  9301                           
  9302                           ;pin_manager.c: 102: ODCOND = 0x00;
  9303  0EF1  01DB               	clrf	91	;volatile
  9304  0EF2                     l3627:
  9305                           
  9306                           ;pin_manager.c: 107: SLRCONA = 0xFF;
  9307  0EF2  30FF               	movlw	255
  9308  0EF3  00BB               	movwf	59	;volatile
  9309  0EF4                     l3629:
  9310                           
  9311                           ;pin_manager.c: 108: SLRCONB = 0xFF;
  9312  0EF4  30FF               	movlw	255
  9313  0EF5  00C6               	movwf	70	;volatile
  9314  0EF6                     l3631:
  9315                           
  9316                           ;pin_manager.c: 109: SLRCONC = 0xFF;
  9317  0EF6  30FF               	movlw	255
  9318  0EF7  00D1               	movwf	81	;volatile
  9319  0EF8                     l3633:
  9320                           
  9321                           ;pin_manager.c: 110: SLRCOND = 0xFF;
  9322  0EF8  30FF               	movlw	255
  9323  0EF9  00DC               	movwf	92	;volatile
  9324  0EFA                     l3635:
  9325                           
  9326                           ;pin_manager.c: 111: SLRCONE = 0x07;
  9327  0EFA  3007               	movlw	7
  9328  0EFB  00E7               	movwf	103	;volatile
  9329  0EFC                     l3637:
  9330                           
  9331                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
  9332  0EFC  3013               	movlw	19
  9333  0EFD  003D               	movlb	29	; select bank29
  9334  0EFE  00C5               	movwf	69	;volatile
  9335  0EFF                     l3639:
  9336                           
  9337                           ;pin_manager.c: 121: RC3PPS = 0x14;
  9338  0EFF  3014               	movlw	20
  9339  0F00  003E               	movlb	30	; select bank30
  9340  0F01  00A3               	movwf	35	;volatile
  9341  0F02                     l3641:
  9342                           
  9343                           ;pin_manager.c: 122: RC4PPS = 0x15;
  9344  0F02  3015               	movlw	21
  9345  0F03  00A4               	movwf	36	;volatile
  9346  0F04                     l3643:
  9347                           
  9348                           ;pin_manager.c: 123: RA6PPS = 0x0E;
  9349  0F04  300E               	movlw	14
  9350  0F05  0096               	movwf	22	;volatile
  9351  0F06                     l3645:
  9352                           
  9353                           ;pin_manager.c: 124: SSP1DATPPS = 0x14;
  9354  0F06  3014               	movlw	20
  9355  0F07  003D               	movlb	29	; select bank29
  9356  0F08  00C6               	movwf	70	;volatile
  9357  0F09                     l122:
  9358  0F09  0008               	return
  9359  0F0A                     __end_of_PIN_MANAGER_Initialize:
  9360                           
  9361                           	psect	text15
  9362  0C50                     __ptext15:	
  9363 ;; *************** function _OSCILLATOR_Initialize *****************
  9364 ;; Defined at:
  9365 ;;		line 63 in file "mcc_generated_files/mcc.c"
  9366 ;; Parameters:    Size  Location     Type
  9367 ;;		None
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;		None
  9370 ;; Return value:  Size  Location     Type
  9371 ;;                  1    wreg      void 
  9372 ;; Registers used:
  9373 ;;		wreg, status,2
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9383 ;;Total ram usage:        0 bytes
  9384 ;; Hardware stack levels used:    1
  9385 ;; Hardware stack levels required when called:    7
  9386 ;; This function calls:
  9387 ;;		Nothing
  9388 ;; This function is called by:
  9389 ;;		_SYSTEM_Initialize
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           
  9394                           ;psect for function _OSCILLATOR_Initialize
  9395  0C50                     _OSCILLATOR_Initialize:
  9396  0C50                     l3649:	
  9397                           ;incstack = 0
  9398                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9399                           
  9400                           
  9401                           ;mcc.c: 66: OSCCON1 = 0x62;
  9402  0C50  3062               	movlw	98
  9403  0C51  0031               	movlb	17	; select bank17
  9404  0C52  008D               	movwf	13	;volatile
  9405  0C53                     l3651:
  9406                           
  9407                           ;mcc.c: 68: OSCCON3 = 0x00;
  9408  0C53  018F               	clrf	15	;volatile
  9409  0C54                     l3653:
  9410                           
  9411                           ;mcc.c: 70: OSCEN = 0x00;
  9412  0C54  0191               	clrf	17	;volatile
  9413                           
  9414                           ;mcc.c: 72: OSCFRQ = 0x02;
  9415  0C55  3002               	movlw	2
  9416  0C56  0093               	movwf	19	;volatile
  9417  0C57                     l3655:
  9418                           
  9419                           ;mcc.c: 74: OSCTUNE = 0x00;
  9420  0C57  0192               	clrf	18	;volatile
  9421  0C58                     l175:
  9422  0C58  0008               	return
  9423  0C59                     __end_of_OSCILLATOR_Initialize:
  9424                           
  9425                           	psect	text16
  9426  0D64                     __ptext16:	
  9427 ;; *************** function _ADCC_Initialize *****************
  9428 ;; Defined at:
  9429 ;;		line 63 in file "mcc_generated_files/adcc.c"
  9430 ;; Parameters:    Size  Location     Type
  9431 ;;		None
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;		None
  9434 ;; Return value:  Size  Location     Type
  9435 ;;                  1    wreg      void 
  9436 ;; Registers used:
  9437 ;;		wreg, status,2
  9438 ;; Tracked objects:
  9439 ;;		On entry : 0/0
  9440 ;;		On exit  : 0/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9447 ;;Total ram usage:        0 bytes
  9448 ;; Hardware stack levels used:    1
  9449 ;; Hardware stack levels required when called:    7
  9450 ;; This function calls:
  9451 ;;		Nothing
  9452 ;; This function is called by:
  9453 ;;		_SYSTEM_Initialize
  9454 ;; This function uses a non-reentrant model
  9455 ;;
  9456                           
  9457                           
  9458                           ;psect for function _ADCC_Initialize
  9459  0D64                     _ADCC_Initialize:
  9460  0D64                     l3661:	
  9461                           ;incstack = 0
  9462                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9463                           
  9464                           
  9465                           ;adcc.c: 67: ADLTHL = 0x00;
  9466  0D64  0022               	movlb	2	; select bank2
  9467  0D65  018E               	clrf	14	;volatile
  9468                           
  9469                           ;adcc.c: 69: ADLTHH = 0x00;
  9470  0D66  018F               	clrf	15	;volatile
  9471                           
  9472                           ;adcc.c: 71: ADUTHL = 0x00;
  9473  0D67  0190               	clrf	16	;volatile
  9474                           
  9475                           ;adcc.c: 73: ADUTHH = 0x00;
  9476  0D68  0191               	clrf	17	;volatile
  9477                           
  9478                           ;adcc.c: 75: ADSTPTL = 0x00;
  9479  0D69  0192               	clrf	18	;volatile
  9480                           
  9481                           ;adcc.c: 77: ADSTPTH = 0x00;
  9482  0D6A  0193               	clrf	19	;volatile
  9483                           
  9484                           ;adcc.c: 79: ADRPT = 0x00;
  9485  0D6B  018D               	clrf	13	;volatile
  9486                           
  9487                           ;adcc.c: 81: ADPCH = 0x00;
  9488  0D6C  0021               	movlb	1	; select bank1
  9489  0D6D  019E               	clrf	30	;volatile
  9490                           
  9491                           ;adcc.c: 83: ADCAP = 0x00;
  9492  0D6E  019B               	clrf	27	;volatile
  9493                           
  9494                           ;adcc.c: 85: ADCON1 = 0x00;
  9495  0D6F  0194               	clrf	20	;volatile
  9496                           
  9497                           ;adcc.c: 87: ADCON2 = 0x00;
  9498  0D70  0195               	clrf	21	;volatile
  9499                           
  9500                           ;adcc.c: 89: ADCON3 = 0x00;
  9501  0D71  0196               	clrf	22	;volatile
  9502                           
  9503                           ;adcc.c: 91: ADSTAT = 0x00;
  9504  0D72  0197               	clrf	23	;volatile
  9505                           
  9506                           ;adcc.c: 93: ADREF = 0x00;
  9507  0D73  019A               	clrf	26	;volatile
  9508                           
  9509                           ;adcc.c: 95: ADACT = 0x00;
  9510  0D74  0199               	clrf	25	;volatile
  9511                           
  9512                           ;adcc.c: 97: ADCLK = 0x00;
  9513  0D75  0198               	clrf	24	;volatile
  9514  0D76                     l3663:
  9515                           
  9516                           ;adcc.c: 99: ADCON0 = 0x80;
  9517  0D76  3080               	movlw	128
  9518  0D77  0093               	movwf	19	;volatile
  9519  0D78                     l3665:
  9520                           
  9521                           ;adcc.c: 101: ADACQ = 0xFF;
  9522  0D78  30FF               	movlw	255
  9523  0D79  009D               	movwf	29	;volatile
  9524  0D7A                     l563:
  9525  0D7A  0008               	return
  9526  0D7B                     __end_of_ADCC_Initialize:
  9527                           
  9528                           	psect	text17
  9529  05CF                     __ptext17:	
  9530 ;; *************** function _LCDinit *****************
  9531 ;; Defined at:
  9532 ;;		line 155 in file "main.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;		None
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;		None
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  1    wreg      void 
  9539 ;; Registers used:
  9540 ;;		wreg, status,2, status,0, pclath, cstack
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9549 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9550 ;;Total ram usage:        1 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:    9
  9553 ;; This function calls:
  9554 ;;		_LCDsend
  9555 ;;		_LCDsend2x4
  9556 ;; This function is called by:
  9557 ;;		_main
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           
  9562                           ;psect for function _LCDinit
  9563  05CF                     _LCDinit:
  9564  05CF                     l4057:	
  9565                           ;incstack = 0
  9566                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
  9567                           
  9568                           
  9569                           ;main.c: 157: _delay((unsigned long)((50)*(1000000/4000.0)));
  9570  05CF  3011               	movlw	17
  9571  05D0  0021               	movlb	1	; select bank1
  9572  05D1  00A8               	movwf	??_LCDinit^(0+128)
  9573  05D2  303A               	movlw	58
  9574  05D3                     u3937:
  9575  05D3  0B89               	decfsz	9,f
  9576  05D4  2DD3               	goto	u3937
  9577  05D5  0BA8               	decfsz	??_LCDinit^(0+128),f
  9578  05D6  2DD3               	goto	u3937
  9579  05D7  0000               	nop
  9580  05D8                     l4059:
  9581                           
  9582                           ;main.c: 158: LCDsend(0x30);
  9583  05D8  3030               	movlw	48
  9584  05D9  318F  2755  3185   	fcall	_LCDsend
  9585  05DC                     l4061:
  9586                           
  9587                           ;main.c: 159: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  9588  05DC  3034               	movlw	52
  9589  05DD  318F  2755  3185   	fcall	_LCDsend
  9590  05E0  3029               	movlw	41
  9591  05E1                     u3947:
  9592  05E1  0B89               	decfsz	9,f
  9593  05E2  2DE1               	goto	u3947
  9594  05E3  3200               	nop2
  9595  05E4                     l4063:
  9596  05E4  3030               	movlw	48
  9597  05E5  318F  2755  3185   	fcall	_LCDsend
  9598  05E8                     l4065:
  9599                           
  9600                           ;main.c: 160: _delay((unsigned long)((5)*(1000000/4000.0)));
  9601  05E8  30FA               	movlw	250
  9602  05E9                     u3957:
  9603  05E9  3200               	nop2
  9604  05EA  0B89               	decfsz	9,f
  9605  05EB  2DE9               	goto	u3957
  9606                           
  9607                           ;main.c: 161: LCDsend(0x30);
  9608  05EC  3030               	movlw	48
  9609  05ED  318F  2755  3185   	fcall	_LCDsend
  9610                           
  9611                           ;main.c: 162: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  9612  05F0  3034               	movlw	52
  9613  05F1  318F  2755  3185   	fcall	_LCDsend
  9614  05F4                     l4067:
  9615  05F4  3029               	movlw	41
  9616  05F5                     u3967:
  9617  05F5  0B89               	decfsz	9,f
  9618  05F6  2DF5               	goto	u3967
  9619  05F7  3200               	nop2
  9620  05F8                     l4069:
  9621  05F8  3030               	movlw	48
  9622  05F9  318F  2755  3185   	fcall	_LCDsend
  9623                           
  9624                           ;main.c: 163: _delay((unsigned long)((100)*(1000000/4000000.0)));
  9625  05FC  3008               	movlw	8
  9626  05FD                     u3977:
  9627  05FD  0B89               	decfsz	9,f
  9628  05FE  2DFD               	goto	u3977
  9629  05FF  0000               	nop
  9630  0600                     l4071:
  9631                           
  9632                           ;main.c: 164: LCDsend(0x30);
  9633  0600  3030               	movlw	48
  9634  0601  318F  2755  3185   	fcall	_LCDsend
  9635  0604                     l4073:
  9636                           
  9637                           ;main.c: 165: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  9638  0604  3034               	movlw	52
  9639  0605  318F  2755  3185   	fcall	_LCDsend
  9640  0608  3029               	movlw	41
  9641  0609                     u3987:
  9642  0609  0B89               	decfsz	9,f
  9643  060A  2E09               	goto	u3987
  9644  060B  3200               	nop2
  9645  060C                     l4075:
  9646  060C  3030               	movlw	48
  9647  060D  318F  2755  3185   	fcall	_LCDsend
  9648  0610                     l4077:
  9649                           
  9650                           ;main.c: 166: _delay((unsigned long)((100)*(1000000/4000000.0)));
  9651  0610  3008               	movlw	8
  9652  0611                     u3997:
  9653  0611  0B89               	decfsz	9,f
  9654  0612  2E11               	goto	u3997
  9655  0613  0000               	nop
  9656                           
  9657                           ;main.c: 167: LCDsend(0x20);
  9658  0614  3020               	movlw	32
  9659  0615  318F  2755  3185   	fcall	_LCDsend
  9660                           
  9661                           ;main.c: 168: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
  9662  0618  3024               	movlw	36
  9663  0619  318F  2755  3185   	fcall	_LCDsend
  9664  061C                     l4079:
  9665  061C  3029               	movlw	41
  9666  061D                     u4007:
  9667  061D  0B89               	decfsz	9,f
  9668  061E  2E1D               	goto	u4007
  9669  061F  3200               	nop2
  9670  0620                     l4081:
  9671  0620  3020               	movlw	32
  9672  0621  318F  2755  3185   	fcall	_LCDsend
  9673                           
  9674                           ;main.c: 169: _delay((unsigned long)((5)*(1000000/4000.0)));
  9675  0624  30FA               	movlw	250
  9676  0625                     u4017:
  9677  0625  3200               	nop2
  9678  0626  0B89               	decfsz	9,f
  9679  0627  2E25               	goto	u4017
  9680  0628                     l4083:
  9681                           
  9682                           ;main.c: 171: LCDsend2x4(0x28, 0);
  9683  0628  0021               	movlb	1	; select bank1
  9684  0629  01A2               	clrf	LCDsend2x4@mode^(0+128)
  9685  062A  3028               	movlw	40
  9686  062B  3184  2448  3185   	fcall	_LCDsend2x4
  9687  062E                     l4085:
  9688                           
  9689                           ;main.c: 172: LCDsend2x4(0x06, 0);
  9690  062E  0021               	movlb	1	; select bank1
  9691  062F  01A2               	clrf	LCDsend2x4@mode^(0+128)
  9692  0630  3006               	movlw	6
  9693  0631  3184  2448  3185   	fcall	_LCDsend2x4
  9694  0634                     l4087:
  9695                           
  9696                           ;main.c: 173: LCDsend2x4(0x0f, 0);
  9697  0634  0021               	movlb	1	; select bank1
  9698  0635  01A2               	clrf	LCDsend2x4@mode^(0+128)
  9699  0636  300F               	movlw	15
  9700  0637  3184  2448  3185   	fcall	_LCDsend2x4
  9701  063A                     l4089:
  9702                           
  9703                           ;main.c: 174: LCDsend2x4(0x01, 0);
  9704  063A  0021               	movlb	1	; select bank1
  9705  063B  01A2               	clrf	LCDsend2x4@mode^(0+128)
  9706  063C  3001               	movlw	1
  9707  063D  3184  2448  3185   	fcall	_LCDsend2x4
  9708                           
  9709                           ;main.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  9710  0640  30A6               	movlw	166
  9711  0641                     u4027:
  9712  0641  0B89               	decfsz	9,f
  9713  0642  2E41               	goto	u4027
  9714  0643  3200               	nop2
  9715  0644                     l908:
  9716  0644  0008               	return
  9717  0645                     __end_of_LCDinit:
  9718                           
  9719                           	psect	text18
  9720  0448                     __ptext18:	
  9721 ;; *************** function _LCDsend2x4 *****************
  9722 ;; Defined at:
  9723 ;;		line 132 in file "main.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;  c               1    wreg     unsigned char 
  9726 ;;  mode            1    2[BANK1 ] unsigned char 
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  c               1    5[BANK1 ] unsigned char 
  9729 ;;  lc              1    7[BANK1 ] unsigned char 
  9730 ;;  hc              1    6[BANK1 ] unsigned char 
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  1    wreg      void 
  9733 ;; Registers used:
  9734 ;;		wreg, status,2, status,0, pclath, cstack
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9740 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9741 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9742 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9743 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;Total ram usage:        6 bytes
  9745 ;; Hardware stack levels used:    1
  9746 ;; Hardware stack levels required when called:    8
  9747 ;; This function calls:
  9748 ;;		_WriteI2C
  9749 ;; This function is called by:
  9750 ;;		_LCDinit
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           
  9755                           ;psect for function _LCDsend2x4
  9756  0448                     _LCDsend2x4:
  9757                           
  9758                           ;incstack = 0
  9759                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
  9760                           ;LCDsend2x4@c stored from wreg
  9761  0448  0021               	movlb	1	; select bank1
  9762  0449  00A5               	movwf	LCDsend2x4@c^(0+128)
  9763  044A                     l3775:
  9764                           
  9765                           ;main.c: 134: unsigned char hc;;main.c: 135: unsigned char lc;;main.c: 137: hc = c & 0xf
      +                          0;
  9766  044A  0825               	movf	LCDsend2x4@c^(0+128),w
  9767  044B  39F0               	andlw	240
  9768  044C  00A3               	movwf	??_LCDsend2x4^(0+128)
  9769  044D  0823               	movf	??_LCDsend2x4^(0+128),w
  9770  044E  00A6               	movwf	LCDsend2x4@hc^(0+128)
  9771  044F                     l3777:
  9772                           
  9773                           ;main.c: 138: lc = (c << 4) & 0xf0;
  9774  044F  0825               	movf	LCDsend2x4@c^(0+128),w
  9775  0450  00A3               	movwf	??_LCDsend2x4^(0+128)
  9776  0451  3003               	movlw	3
  9777  0452                     u3175:
  9778  0452  35A3               	lslf	??_LCDsend2x4^(0+128),f
  9779  0453  3EFF               	addlw	-1
  9780  0454  1D03               	skipz
  9781  0455  2C52               	goto	u3175
  9782  0456  3523               	lslf	??_LCDsend2x4^(0+128),w
  9783  0457  39F0               	andlw	240
  9784  0458  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
  9785  0459  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
  9786  045A  00A7               	movwf	LCDsend2x4@lc^(0+128)
  9787  045B                     l3779:	
  9788                           ;main.c: 140: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9789                           
  9790  045B  0023               	movlb	3	; select bank3
  9791  045C  0C0F               	rrf	15,w	;volatile
  9792  045D  0C89               	rrf	9,f
  9793  045E  3901               	andlw	1
  9794  045F  0021               	movlb	1	; select bank1
  9795  0460  00A3               	movwf	??_LCDsend2x4^(0+128)
  9796  0461  0023               	movlb	3	; select bank3
  9797  0462  0811               	movf	17,w	;volatile
  9798  0463  391F               	andlw	31
  9799  0464  0021               	movlb	1	; select bank1
  9800  0465  0423               	iorwf	??_LCDsend2x4^(0+128),w
  9801  0466  1D03               	btfss	3,2
  9802  0467  2C69               	goto	u3181
  9803  0468  2C6A               	goto	u3180
  9804  0469                     u3181:
  9805  0469  2C5B               	goto	l3779
  9806  046A                     u3180:
  9807  046A                     l874:
  9808                           
  9809                           ;main.c: 141: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  9810  046A  0023               	movlb	3	; select bank3
  9811  046B  1411               	bsf	17,0	;volatile
  9812  046C                     l875:
  9813  046C  1811               	btfsc	17,0	;volatile
  9814  046D  2C6F               	goto	u3191
  9815  046E  2C70               	goto	u3190
  9816  046F                     u3191:
  9817  046F  2C6C               	goto	l875
  9818  0470                     u3190:
  9819  0470                     l3781:
  9820  0470  0023               	movlb	3	; select bank3
  9821  0471  0C0F               	rrf	15,w	;volatile
  9822  0472  0C89               	rrf	9,f
  9823  0473  3901               	andlw	1
  9824  0474  0021               	movlb	1	; select bank1
  9825  0475  00A3               	movwf	??_LCDsend2x4^(0+128)
  9826  0476  0023               	movlb	3	; select bank3
  9827  0477  0811               	movf	17,w	;volatile
  9828  0478  391F               	andlw	31
  9829  0479  0021               	movlb	1	; select bank1
  9830  047A  0423               	iorwf	??_LCDsend2x4^(0+128),w
  9831  047B  1D03               	btfss	3,2
  9832  047C  2C7E               	goto	u3201
  9833  047D  2C7F               	goto	u3200
  9834  047E                     u3201:
  9835  047E  2C70               	goto	l3781
  9836  047F                     u3200:
  9837  047F                     l3783:
  9838                           
  9839                           ;main.c: 142: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9840  047F  304E               	movlw	78
  9841  0480  3187  277C  3184   	fcall	_WriteI2C
  9842  0483                     l3785:
  9843  0483  0023               	movlb	3	; select bank3
  9844  0484  0C0F               	rrf	15,w	;volatile
  9845  0485  0C89               	rrf	9,f
  9846  0486  3901               	andlw	1
  9847  0487  0021               	movlb	1	; select bank1
  9848  0488  00A3               	movwf	??_LCDsend2x4^(0+128)
  9849  0489  0023               	movlb	3	; select bank3
  9850  048A  0811               	movf	17,w	;volatile
  9851  048B  391F               	andlw	31
  9852  048C  0021               	movlb	1	; select bank1
  9853  048D  0423               	iorwf	??_LCDsend2x4^(0+128),w
  9854  048E  1D03               	btfss	3,2
  9855  048F  2C91               	goto	u3211
  9856  0490  2C92               	goto	u3210
  9857  0491                     u3211:
  9858  0491  2C83               	goto	l3785
  9859  0492                     u3210:
  9860  0492                     l3787:
  9861                           
  9862                           ;main.c: 143: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  9863  0492  0826               	movf	LCDsend2x4@hc^(0+128),w
  9864  0493  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  9865  0494  3808               	iorlw	8
  9866  0495  3187  277C  3184   	fcall	_WriteI2C
  9867  0498                     l3789:
  9868  0498  0023               	movlb	3	; select bank3
  9869  0499  0C0F               	rrf	15,w	;volatile
  9870  049A  0C89               	rrf	9,f
  9871  049B  3901               	andlw	1
  9872  049C  0021               	movlb	1	; select bank1
  9873  049D  00A3               	movwf	??_LCDsend2x4^(0+128)
  9874  049E  0023               	movlb	3	; select bank3
  9875  049F  0811               	movf	17,w	;volatile
  9876  04A0  391F               	andlw	31
  9877  04A1  0021               	movlb	1	; select bank1
  9878  04A2  0423               	iorwf	??_LCDsend2x4^(0+128),w
  9879  04A3  1D03               	btfss	3,2
  9880  04A4  2CA6               	goto	u3221
  9881  04A5  2CA7               	goto	u3220
  9882  04A6                     u3221:
  9883  04A6  2C98               	goto	l3789
  9884  04A7                     u3220:
  9885  04A7                     l3791:
  9886                           
  9887                           ;main.c: 144: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  9888  04A7  0826               	movf	LCDsend2x4@hc^(0+128),w
  9889  04A8  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  9890  04A9  380C               	iorlw	12
  9891  04AA  3187  277C  3184   	fcall	_WriteI2C
  9892  04AD                     l3793:
  9893  04AD  0023               	movlb	3	; select bank3
  9894  04AE  0C0F               	rrf	15,w	;volatile
  9895  04AF  0C89               	rrf	9,f
  9896  04B0  3901               	andlw	1
  9897  04B1  0021               	movlb	1	; select bank1
  9898  04B2  00A3               	movwf	??_LCDsend2x4^(0+128)
  9899  04B3  0023               	movlb	3	; select bank3
  9900  04B4  0811               	movf	17,w	;volatile
  9901  04B5  391F               	andlw	31
  9902  04B6  0021               	movlb	1	; select bank1
  9903  04B7  0423               	iorwf	??_LCDsend2x4^(0+128),w
  9904  04B8  1D03               	btfss	3,2
  9905  04B9  2CBB               	goto	u3231
  9906  04BA  2CBC               	goto	u3230
  9907  04BB                     u3231:
  9908  04BB  2CAD               	goto	l3793
  9909  04BC                     u3230:
  9910  04BC                     l889:
  9911  04BC                     l3795:	
  9912                           ;main.c: 145: _delay((unsigned long)((1)*(1000000/4000000.0)));
  9913                           
  9914                           
  9915                           ;main.c: 146: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  9916  04BC  0021               	movlb	1	; select bank1
  9917  04BD  0826               	movf	LCDsend2x4@hc^(0+128),w
  9918  04BE  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  9919  04BF  3808               	iorlw	8
  9920  04C0  3187  277C  3184   	fcall	_WriteI2C
  9921  04C3                     l3797:
  9922  04C3  0023               	movlb	3	; select bank3
  9923  04C4  0C0F               	rrf	15,w	;volatile
  9924  04C5  0C89               	rrf	9,f
  9925  04C6  3901               	andlw	1
  9926  04C7  0021               	movlb	1	; select bank1
  9927  04C8  00A3               	movwf	??_LCDsend2x4^(0+128)
  9928  04C9  0023               	movlb	3	; select bank3
  9929  04CA  0811               	movf	17,w	;volatile
  9930  04CB  391F               	andlw	31
  9931  04CC  0021               	movlb	1	; select bank1
  9932  04CD  0423               	iorwf	??_LCDsend2x4^(0+128),w
  9933  04CE  1D03               	btfss	3,2
  9934  04CF  2CD1               	goto	u3241
  9935  04D0  2CD2               	goto	u3240
  9936  04D1                     u3241:
  9937  04D1  2CC3               	goto	l3797
  9938  04D2                     u3240:
  9939  04D2                     l3799:
  9940                           
  9941                           ;main.c: 147: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  9942  04D2  0827               	movf	LCDsend2x4@lc^(0+128),w
  9943  04D3  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  9944  04D4  3808               	iorlw	8
  9945  04D5  3187  277C  3184   	fcall	_WriteI2C
  9946  04D8                     l3801:
  9947  04D8  0023               	movlb	3	; select bank3
  9948  04D9  0C0F               	rrf	15,w	;volatile
  9949  04DA  0C89               	rrf	9,f
  9950  04DB  3901               	andlw	1
  9951  04DC  0021               	movlb	1	; select bank1
  9952  04DD  00A3               	movwf	??_LCDsend2x4^(0+128)
  9953  04DE  0023               	movlb	3	; select bank3
  9954  04DF  0811               	movf	17,w	;volatile
  9955  04E0  391F               	andlw	31
  9956  04E1  0021               	movlb	1	; select bank1
  9957  04E2  0423               	iorwf	??_LCDsend2x4^(0+128),w
  9958  04E3  1D03               	btfss	3,2
  9959  04E4  2CE6               	goto	u3251
  9960  04E5  2CE7               	goto	u3250
  9961  04E6                     u3251:
  9962  04E6  2CD8               	goto	l3801
  9963  04E7                     u3250:
  9964  04E7                     l3803:
  9965                           
  9966                           ;main.c: 148: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  9967  04E7  0827               	movf	LCDsend2x4@lc^(0+128),w
  9968  04E8  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  9969  04E9  380C               	iorlw	12
  9970  04EA  3187  277C  3184   	fcall	_WriteI2C
  9971  04ED                     l3805:
  9972  04ED  0023               	movlb	3	; select bank3
  9973  04EE  0C0F               	rrf	15,w	;volatile
  9974  04EF  0C89               	rrf	9,f
  9975  04F0  3901               	andlw	1
  9976  04F1  0021               	movlb	1	; select bank1
  9977  04F2  00A3               	movwf	??_LCDsend2x4^(0+128)
  9978  04F3  0023               	movlb	3	; select bank3
  9979  04F4  0811               	movf	17,w	;volatile
  9980  04F5  391F               	andlw	31
  9981  04F6  0021               	movlb	1	; select bank1
  9982  04F7  0423               	iorwf	??_LCDsend2x4^(0+128),w
  9983  04F8  1D03               	btfss	3,2
  9984  04F9  2CFB               	goto	u3261
  9985  04FA  2CFC               	goto	u3260
  9986  04FB                     u3261:
  9987  04FB  2CED               	goto	l3805
  9988  04FC                     u3260:
  9989  04FC                     l898:
  9990  04FC                     l3807:	
  9991                           ;main.c: 149: _delay((unsigned long)((1)*(1000000/4000000.0)));
  9992                           
  9993                           
  9994                           ;main.c: 150: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  9995  04FC  0021               	movlb	1	; select bank1
  9996  04FD  0827               	movf	LCDsend2x4@lc^(0+128),w
  9997  04FE  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  9998  04FF  3808               	iorlw	8
  9999  0500  3187  277C  3184   	fcall	_WriteI2C
 10000  0503                     l3809:
 10001  0503  0023               	movlb	3	; select bank3
 10002  0504  0C0F               	rrf	15,w	;volatile
 10003  0505  0C89               	rrf	9,f
 10004  0506  3901               	andlw	1
 10005  0507  0021               	movlb	1	; select bank1
 10006  0508  00A3               	movwf	??_LCDsend2x4^(0+128)
 10007  0509  0023               	movlb	3	; select bank3
 10008  050A  0811               	movf	17,w	;volatile
 10009  050B  391F               	andlw	31
 10010  050C  0021               	movlb	1	; select bank1
 10011  050D  0423               	iorwf	??_LCDsend2x4^(0+128),w
 10012  050E  1D03               	btfss	3,2
 10013  050F  2D11               	goto	u3271
 10014  0510  2D12               	goto	u3270
 10015  0511                     u3271:
 10016  0511  2D03               	goto	l3809
 10017  0512                     u3270:
 10018  0512                     l901:
 10019                           
 10020                           ;main.c: 151: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 10021  0512  0023               	movlb	3	; select bank3
 10022  0513  1511               	bsf	17,2	;volatile
 10023  0514                     l902:
 10024  0514  1911               	btfsc	17,2	;volatile
 10025  0515  2D17               	goto	u3281
 10026  0516  2D18               	goto	u3280
 10027  0517                     u3281:
 10028  0517  2D14               	goto	l902
 10029  0518                     u3280:
 10030  0518                     l3811:
 10031                           
 10032                           ;main.c: 152: _delay((unsigned long)((50)*(1000000/4000000.0)));
 10033  0518  3004               	movlw	4
 10034  0519                     u4037:
 10035  0519  0B89               	decfsz	9,f
 10036  051A  2D19               	goto	u4037
 10037  051B                     l905:
 10038  051B  0008               	return
 10039  051C                     __end_of_LCDsend2x4:
 10040                           
 10041                           	psect	text19
 10042  0F55                     __ptext19:	
 10043 ;; *************** function _LCDsend *****************
 10044 ;; Defined at:
 10045 ;;		line 93 in file "main.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;  c               1    wreg     unsigned char 
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;  c               1    3[BANK1 ] unsigned char 
 10050 ;; Return value:  Size  Location     Type
 10051 ;;                  1    wreg      void 
 10052 ;; Registers used:
 10053 ;;		wreg, status,2, status,0, pclath, cstack
 10054 ;; Tracked objects:
 10055 ;;		On entry : 0/0
 10056 ;;		On exit  : 0/0
 10057 ;;		Unchanged: 0/0
 10058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10060 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10061 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10062 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10063 ;;Total ram usage:        2 bytes
 10064 ;; Hardware stack levels used:    1
 10065 ;; Hardware stack levels required when called:    8
 10066 ;; This function calls:
 10067 ;;		_WriteI2C
 10068 ;; This function is called by:
 10069 ;;		_LCDinit
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           
 10074                           ;psect for function _LCDsend
 10075  0F55                     _LCDsend:
 10076                           
 10077                           ;incstack = 0
 10078                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 10079                           ;LCDsend@c stored from wreg
 10080  0F55  0021               	movlb	1	; select bank1
 10081  0F56  00A3               	movwf	LCDsend@c^(0+128)
 10082  0F57                     l3761:
 10083  0F57                     l3763:	
 10084                           ;main.c: 95: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10085                           
 10086  0F57  0023               	movlb	3	; select bank3
 10087  0F58  0C0F               	rrf	15,w	;volatile
 10088  0F59  0C89               	rrf	9,f
 10089  0F5A  3901               	andlw	1
 10090  0F5B  0021               	movlb	1	; select bank1
 10091  0F5C  00A2               	movwf	??_LCDsend^(0+128)
 10092  0F5D  0023               	movlb	3	; select bank3
 10093  0F5E  0811               	movf	17,w	;volatile
 10094  0F5F  391F               	andlw	31
 10095  0F60  0021               	movlb	1	; select bank1
 10096  0F61  0422               	iorwf	??_LCDsend^(0+128),w
 10097  0F62  1D03               	btfss	3,2
 10098  0F63  2F65               	goto	u3111
 10099  0F64  2F66               	goto	u3110
 10100  0F65                     u3111:
 10101  0F65  2F57               	goto	l3763
 10102  0F66                     u3110:
 10103  0F66                     l772:
 10104                           
 10105                           ;main.c: 96: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 10106  0F66  0023               	movlb	3	; select bank3
 10107  0F67  1411               	bsf	17,0	;volatile
 10108  0F68                     l773:
 10109  0F68  1811               	btfsc	17,0	;volatile
 10110  0F69  2F6B               	goto	u3121
 10111  0F6A  2F6C               	goto	u3120
 10112  0F6B                     u3121:
 10113  0F6B  2F68               	goto	l773
 10114  0F6C                     u3120:
 10115  0F6C                     l3765:
 10116  0F6C  0023               	movlb	3	; select bank3
 10117  0F6D  0C0F               	rrf	15,w	;volatile
 10118  0F6E  0C89               	rrf	9,f
 10119  0F6F  3901               	andlw	1
 10120  0F70  0021               	movlb	1	; select bank1
 10121  0F71  00A2               	movwf	??_LCDsend^(0+128)
 10122  0F72  0023               	movlb	3	; select bank3
 10123  0F73  0811               	movf	17,w	;volatile
 10124  0F74  391F               	andlw	31
 10125  0F75  0021               	movlb	1	; select bank1
 10126  0F76  0422               	iorwf	??_LCDsend^(0+128),w
 10127  0F77  1D03               	btfss	3,2
 10128  0F78  2F7A               	goto	u3131
 10129  0F79  2F7B               	goto	u3130
 10130  0F7A                     u3131:
 10131  0F7A  2F6C               	goto	l3765
 10132  0F7B                     u3130:
 10133  0F7B                     l3767:
 10134                           
 10135                           ;main.c: 97: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10136  0F7B  304E               	movlw	78
 10137  0F7C  3187  277C  318F   	fcall	_WriteI2C
 10138  0F7F                     l3769:
 10139  0F7F  0023               	movlb	3	; select bank3
 10140  0F80  0C0F               	rrf	15,w	;volatile
 10141  0F81  0C89               	rrf	9,f
 10142  0F82  3901               	andlw	1
 10143  0F83  0021               	movlb	1	; select bank1
 10144  0F84  00A2               	movwf	??_LCDsend^(0+128)
 10145  0F85  0023               	movlb	3	; select bank3
 10146  0F86  0811               	movf	17,w	;volatile
 10147  0F87  391F               	andlw	31
 10148  0F88  0021               	movlb	1	; select bank1
 10149  0F89  0422               	iorwf	??_LCDsend^(0+128),w
 10150  0F8A  1D03               	btfss	3,2
 10151  0F8B  2F8D               	goto	u3141
 10152  0F8C  2F8E               	goto	u3140
 10153  0F8D                     u3141:
 10154  0F8D  2F7F               	goto	l3769
 10155  0F8E                     u3140:
 10156  0F8E                     l3771:
 10157                           
 10158                           ;main.c: 98: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10159  0F8E  0823               	movf	LCDsend@c^(0+128),w
 10160  0F8F  3187  277C  318F   	fcall	_WriteI2C
 10161  0F92                     l3773:
 10162  0F92  0023               	movlb	3	; select bank3
 10163  0F93  0C0F               	rrf	15,w	;volatile
 10164  0F94  0C89               	rrf	9,f
 10165  0F95  3901               	andlw	1
 10166  0F96  0021               	movlb	1	; select bank1
 10167  0F97  00A2               	movwf	??_LCDsend^(0+128)
 10168  0F98  0023               	movlb	3	; select bank3
 10169  0F99  0811               	movf	17,w	;volatile
 10170  0F9A  391F               	andlw	31
 10171  0F9B  0021               	movlb	1	; select bank1
 10172  0F9C  0422               	iorwf	??_LCDsend^(0+128),w
 10173  0F9D  1D03               	btfss	3,2
 10174  0F9E  2FA0               	goto	u3151
 10175  0F9F  2FA1               	goto	u3150
 10176  0FA0                     u3151:
 10177  0FA0  2F92               	goto	l3773
 10178  0FA1                     u3150:
 10179  0FA1                     l784:
 10180                           
 10181                           ;main.c: 99: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 10182  0FA1  0023               	movlb	3	; select bank3
 10183  0FA2  1511               	bsf	17,2	;volatile
 10184  0FA3                     l785:
 10185  0FA3  1911               	btfsc	17,2	;volatile
 10186  0FA4  2FA6               	goto	u3161
 10187  0FA5  2FA7               	goto	u3160
 10188  0FA6                     u3161:
 10189  0FA6  2FA3               	goto	l785
 10190  0FA7                     u3160:
 10191  0FA7                     l788:
 10192  0FA7  0008               	return
 10193  0FA8                     __end_of_LCDsend:
 10194                           
 10195                           	psect	text20
 10196  077C                     __ptext20:	
 10197 ;; *************** function _WriteI2C *****************
 10198 ;; Defined at:
 10199 ;;		line 47 in file "I2C/i2c.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;  data_out        1    wreg     unsigned char 
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;  data_out        1    1[BANK1 ] unsigned char 
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  1    wreg      char 
 10206 ;; Registers used:
 10207 ;;		wreg, status,2, status,0
 10208 ;; Tracked objects:
 10209 ;;		On entry : 0/0
 10210 ;;		On exit  : 0/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10215 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10217 ;;Total ram usage:        2 bytes
 10218 ;; Hardware stack levels used:    1
 10219 ;; Hardware stack levels required when called:    7
 10220 ;; This function calls:
 10221 ;;		Nothing
 10222 ;; This function is called by:
 10223 ;;		_LCDsend
 10224 ;;		_LCDsend2x4
 10225 ;;		_LCDrecv
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229                           
 10230                           ;psect for function _WriteI2C
 10231  077C                     _WriteI2C:
 10232                           
 10233                           ;incstack = 0
 10234                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 10235                           ;WriteI2C@data_out stored from wreg
 10236  077C  0021               	movlb	1	; select bank1
 10237  077D  00A1               	movwf	WriteI2C@data_out^(0+128)
 10238  077E                     l3351:
 10239                           
 10240                           ;i2c.c: 49: SSP1BUF = data_out;
 10241  077E  0821               	movf	WriteI2C@data_out^(0+128),w
 10242  077F  0023               	movlb	3	; select bank3
 10243  0780  008C               	movwf	12	;volatile
 10244  0781                     l3353:
 10245                           
 10246                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 10247  0781  1F90               	btfss	16,7	;volatile
 10248  0782  2F84               	goto	u2521
 10249  0783  2F85               	goto	u2520
 10250  0784                     u2521:
 10251  0784  2F86               	goto	l3359
 10252  0785                     u2520:
 10253  0785  2FD5               	goto	l30
 10254  0786                     l3359:
 10255                           
 10256                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 10257  0786  300F               	movlw	15
 10258  0787  0510               	andwf	16,w	;volatile
 10259  0788  0021               	movlb	1	; select bank1
 10260  0789  00A0               	movwf	??_WriteI2C^(0+128)
 10261  078A  3008               	movlw	8
 10262  078B  0620               	xorwf	??_WriteI2C^(0+128),w
 10263  078C  1903               	btfsc	3,2
 10264  078D  2F8F               	goto	u2531
 10265  078E  2F90               	goto	u2530
 10266  078F                     u2531:
 10267  078F  2FA9               	goto	l3371
 10268  0790                     u2530:
 10269  0790                     l3361:
 10270  0790  300F               	movlw	15
 10271  0791  0023               	movlb	3	; select bank3
 10272  0792  0510               	andwf	16,w	;volatile
 10273  0793  0021               	movlb	1	; select bank1
 10274  0794  00A0               	movwf	??_WriteI2C^(0+128)
 10275  0795  300B               	movlw	11
 10276  0796  0620               	xorwf	??_WriteI2C^(0+128),w
 10277  0797  1903               	btfsc	3,2
 10278  0798  2F9A               	goto	u2541
 10279  0799  2F9B               	goto	u2540
 10280  079A                     u2541:
 10281  079A  2FA9               	goto	l3371
 10282  079B                     u2540:
 10283  079B                     l3363:
 10284                           
 10285                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 10286  079B  0023               	movlb	3	; select bank3
 10287  079C  1610               	bsf	16,4	;volatile
 10288  079D                     l33:	
 10289                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 10290                           
 10291  079D  002E               	movlb	14	; select bank14
 10292  079E  1C0F               	btfss	15,0	;volatile
 10293  079F  2FA1               	goto	u2551
 10294  07A0  2FA2               	goto	u2550
 10295  07A1                     u2551:
 10296  07A1  2F9D               	goto	l33
 10297  07A2                     u2550:
 10298  07A2                     l35:
 10299                           
 10300                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 10301  07A2  0023               	movlb	3	; select bank3
 10302  07A3  190F               	btfsc	15,2	;volatile
 10303  07A4  2FA6               	goto	u2561
 10304  07A5  2FA7               	goto	u2560
 10305  07A6                     u2561:
 10306  07A6  2FD5               	goto	l30
 10307  07A7                     u2560:
 10308  07A7                     l3365:
 10309  07A7  080F               	movf	15,w	;volatile
 10310  07A8  2FD5               	goto	l30
 10311  07A9                     l3371:
 10312                           
 10313                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 10314  07A9  300F               	movlw	15
 10315  07AA  0023               	movlb	3	; select bank3
 10316  07AB  0510               	andwf	16,w	;volatile
 10317  07AC  0021               	movlb	1	; select bank1
 10318  07AD  00A0               	movwf	??_WriteI2C^(0+128)
 10319  07AE  3008               	movlw	8
 10320  07AF  0620               	xorwf	??_WriteI2C^(0+128),w
 10321  07B0  1903               	btfsc	3,2
 10322  07B1  2FB3               	goto	u2571
 10323  07B2  2FB4               	goto	u2570
 10324  07B3                     u2571:
 10325  07B3  2FBF               	goto	l42
 10326  07B4                     u2570:
 10327  07B4                     l3373:
 10328  07B4  300F               	movlw	15
 10329  07B5  0023               	movlb	3	; select bank3
 10330  07B6  0510               	andwf	16,w	;volatile
 10331  07B7  0021               	movlb	1	; select bank1
 10332  07B8  00A0               	movwf	??_WriteI2C^(0+128)
 10333  07B9  300B               	movlw	11
 10334  07BA  0620               	xorwf	??_WriteI2C^(0+128),w
 10335  07BB  1D03               	btfss	3,2
 10336  07BC  2FBE               	goto	u2581
 10337  07BD  2FBF               	goto	u2580
 10338  07BE                     u2581:
 10339  07BE  2FD5               	goto	l30
 10340  07BF                     u2580:
 10341  07BF                     l42:
 10342  07BF  0023               	movlb	3	; select bank3
 10343  07C0  180F               	btfsc	15,0	;volatile
 10344  07C1  2FC3               	goto	u2591
 10345  07C2  2FC4               	goto	u2590
 10346  07C3                     u2591:
 10347  07C3  2FBF               	goto	l42
 10348  07C4                     u2590:
 10349  07C4                     l3375:
 10350  07C4  0023               	movlb	3	; select bank3
 10351  07C5  0C0F               	rrf	15,w	;volatile
 10352  07C6  0C89               	rrf	9,f
 10353  07C7  3901               	andlw	1
 10354  07C8  0021               	movlb	1	; select bank1
 10355  07C9  00A0               	movwf	??_WriteI2C^(0+128)
 10356  07CA  0023               	movlb	3	; select bank3
 10357  07CB  0811               	movf	17,w	;volatile
 10358  07CC  391F               	andlw	31
 10359  07CD  0021               	movlb	1	; select bank1
 10360  07CE  0420               	iorwf	??_WriteI2C^(0+128),w
 10361  07CF  1D03               	btfss	3,2
 10362  07D0  2FD2               	goto	u2601
 10363  07D1  2FD3               	goto	u2600
 10364  07D2                     u2601:
 10365  07D2  2FC4               	goto	l3375
 10366  07D3                     u2600:
 10367  07D3                     l47:
 10368                           
 10369                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 10370  07D3  0023               	movlb	3	; select bank3
 10371  07D4  0811               	movf	17,w	;volatile
 10372  07D5                     l30:
 10373  07D5  0008               	return
 10374  07D6                     __end_of_WriteI2C:
 10375                           
 10376                           	psect	intentry
 10377  0004                     __pintentry:	
 10378 ;; *************** function _INTERRUPT_InterruptManager *****************
 10379 ;; Defined at:
 10380 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10381 ;; Parameters:    Size  Location     Type
 10382 ;;		None
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;		None
 10385 ;; Return value:  Size  Location     Type
 10386 ;;                  1    wreg      void 
 10387 ;; Registers used:
 10388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10389 ;; Tracked objects:
 10390 ;;		On entry : 0/0
 10391 ;;		On exit  : 0/0
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10398 ;;Total ram usage:        0 bytes
 10399 ;; Hardware stack levels used:    1
 10400 ;; Hardware stack levels required when called:    6
 10401 ;; This function calls:
 10402 ;;		_TMR1_ISR
 10403 ;;		_TMR3_ISR
 10404 ;;		_TMR5_ISR
 10405 ;; This function is called by:
 10406 ;;		Interrupt level 1
 10407 ;; This function uses a non-reentrant model
 10408 ;;
 10409                           
 10410  0004                     _INTERRUPT_InterruptManager:
 10411                           
 10412                           ;incstack = 0
 10413  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 10414                           
 10415                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10416  0005  3180               	pagesel	$
 10417  0006                     i1l4097:
 10418                           
 10419                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 10420  0006  1F0B               	btfss	11,6	;volatile
 10421  0007  2809               	goto	u383_21
 10422  0008  280A               	goto	u383_20
 10423  0009                     u383_21:
 10424  0009  283E               	goto	i1l356
 10425  000A                     u383_20:
 10426  000A                     i1l4099:
 10427                           
 10428                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 10429  000A  002E               	movlb	14	; select bank14
 10430  000B  1E1A               	btfss	26,4	;volatile
 10431  000C  280E               	goto	u384_21
 10432  000D  280F               	goto	u384_20
 10433  000E                     u384_21:
 10434  000E  2817               	goto	i1l345
 10435  000F                     u384_20:
 10436  000F                     i1l4101:
 10437  000F  1E10               	btfss	16,4	;volatile
 10438  0010  2812               	goto	u385_21
 10439  0011  2813               	goto	u385_20
 10440  0012                     u385_21:
 10441  0012  2817               	goto	i1l345
 10442  0013                     u385_20:
 10443  0013                     i1l4103:
 10444                           
 10445                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR5_ISR();
 10446  0013  318D  254D  3180   	fcall	_TMR5_ISR
 10447                           
 10448                           ;interrupt_manager.c: 60: }
 10449  0016  283E               	goto	i1l356
 10450  0017                     i1l345:
 10451                           
 10452                           ;interrupt_manager.c: 61: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 10453  0017  1D1A               	btfss	26,2	;volatile
 10454  0018  281A               	goto	u386_21
 10455  0019  281B               	goto	u386_20
 10456  001A                     u386_21:
 10457  001A  2823               	goto	i1l347
 10458  001B                     u386_20:
 10459  001B                     i1l4105:
 10460  001B  1D10               	btfss	16,2	;volatile
 10461  001C  281E               	goto	u387_21
 10462  001D  281F               	goto	u387_20
 10463  001E                     u387_21:
 10464  001E  2823               	goto	i1l347
 10465  001F                     u387_20:
 10466  001F                     i1l4107:
 10467                           
 10468                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR3_ISR();
 10469  001F  318D  2536  3180   	fcall	_TMR3_ISR
 10470                           
 10471                           ;interrupt_manager.c: 64: }
 10472  0022  283E               	goto	i1l356
 10473  0023                     i1l347:
 10474                           
 10475                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 10476  0023  1C1A               	btfss	26,0	;volatile
 10477  0024  2826               	goto	u388_21
 10478  0025  2827               	goto	u388_20
 10479  0026                     u388_21:
 10480  0026  282F               	goto	i1l349
 10481  0027                     u388_20:
 10482  0027                     i1l4109:
 10483  0027  1C10               	btfss	16,0	;volatile
 10484  0028  282A               	goto	u389_21
 10485  0029  282B               	goto	u389_20
 10486  002A                     u389_21:
 10487  002A  282F               	goto	i1l349
 10488  002B                     u389_20:
 10489  002B                     i1l4111:
 10490                           
 10491                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR1_ISR();
 10492  002B  318D  251F  3180   	fcall	_TMR1_ISR
 10493                           
 10494                           ;interrupt_manager.c: 68: }
 10495  002E  283E               	goto	i1l356
 10496  002F                     i1l349:
 10497                           
 10498                           ;interrupt_manager.c: 69: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 10499  002F  1C99               	btfss	25,1	;volatile
 10500  0030  2832               	goto	u390_21
 10501  0031  2833               	goto	u390_20
 10502  0032                     u390_21:
 10503  0032  2838               	goto	i1l351
 10504  0033                     u390_20:
 10505  0033                     i1l4113:
 10506                           
 10507                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_busCollisionISR();
 10508  0033  1C8F               	btfss	15,1	;volatile
 10509  0034  2836               	goto	u391_21
 10510  0035  2837               	goto	u391_20
 10511  0036                     u391_21:
 10512  0036  2838               	goto	i1l351
 10513  0037                     u391_20:
 10514  0037  283E               	goto	i1l356
 10515  0038                     i1l351:
 10516                           
 10517                           ;interrupt_manager.c: 73: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 10518  0038  1C19               	btfss	25,0	;volatile
 10519  0039  283B               	goto	u392_21
 10520  003A  283C               	goto	u392_20
 10521  003B                     u392_21:
 10522  003B  283E               	goto	i1l350
 10523  003C                     u392_20:
 10524  003C                     i1l4117:
 10525                           
 10526                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_i2cISR();
 10527  003C  080F               	movf	15,w	;volatile
 10528  003D  283E               	goto	i1l356
 10529  003E                     i1l350:
 10530  003E                     i1l356:
 10531  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10532  003F  0009               	retfie
 10533  0040                     __end_of_INTERRUPT_InterruptManager:
 10534                           
 10535                           	psect	text22
 10536  0D4D                     __ptext22:	
 10537 ;; *************** function _TMR5_ISR *****************
 10538 ;; Defined at:
 10539 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 10540 ;; Parameters:    Size  Location     Type
 10541 ;;		None
 10542 ;; Auto vars:     Size  Location     Type
 10543 ;;		None
 10544 ;; Return value:  Size  Location     Type
 10545 ;;                  1    wreg      void 
 10546 ;; Registers used:
 10547 ;;		wreg, status,2, status,0, pclath, cstack
 10548 ;; Tracked objects:
 10549 ;;		On entry : 0/0
 10550 ;;		On exit  : 0/0
 10551 ;;		Unchanged: 0/0
 10552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10557 ;;Total ram usage:        0 bytes
 10558 ;; Hardware stack levels used:    1
 10559 ;; Hardware stack levels required when called:    3
 10560 ;; This function calls:
 10561 ;;		Absolute function
 10562 ;;		_TMR5_DefaultInterruptHandler
 10563 ;;		_TMR5_WriteTimer
 10564 ;;		_monitoring_ISR
 10565 ;; This function is called by:
 10566 ;;		_INTERRUPT_InterruptManager
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           
 10571                           ;psect for function _TMR5_ISR
 10572  0D4D                     _TMR5_ISR:
 10573  0D4D                     i1l3967:	
 10574                           ;incstack = 0
 10575                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 10576                           
 10577                           
 10578                           ;tmr5.c: 169: PIR4bits.TMR5IF = 0;
 10579  0D4D  002E               	movlb	14	; select bank14
 10580  0D4E  1210               	bcf	16,4	;volatile
 10581  0D4F                     i1l3969:
 10582                           
 10583                           ;tmr5.c: 170: TMR5_WriteTimer(timer5ReloadVal);
 10584  0D4F  0020               	movlb	0	; select bank0
 10585  0D50  086A               	movf	_timer5ReloadVal+1,w	;volatile
 10586  0D51  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 10587  0D52  0869               	movf	_timer5ReloadVal,w	;volatile
 10588  0D53  00F0               	movwf	TMR5_WriteTimer@timerVal
 10589  0D54  318C  24C0  318D   	fcall	_TMR5_WriteTimer
 10590  0D57                     i1l3971:
 10591                           
 10592                           ;tmr5.c: 172: if(TMR5_InterruptHandler)
 10593  0D57  0020               	movlb	0	; select bank0
 10594  0D58  0867               	movf	_TMR5_InterruptHandler,w
 10595  0D59  0468               	iorwf	_TMR5_InterruptHandler+1,w
 10596  0D5A  1903               	btfsc	3,2
 10597  0D5B  2D5D               	goto	u353_21
 10598  0D5C  2D5E               	goto	u353_20
 10599  0D5D                     u353_21:
 10600  0D5D  2D63               	goto	i1l1062
 10601  0D5E                     u353_20:
 10602  0D5E                     i1l3973:
 10603                           
 10604                           ;tmr5.c: 173: {;tmr5.c: 174: TMR5_InterruptHandler();
 10605  0D5E  0868               	movf	_TMR5_InterruptHandler+1,w
 10606  0D5F  008A               	movwf	10
 10607  0D60  0867               	movf	_TMR5_InterruptHandler,w
 10608  0D61  000A               	callw
 10609  0D62  318D               	pagesel	$
 10610  0D63                     i1l1062:
 10611  0D63  0008               	return
 10612  0D64                     __end_of_TMR5_ISR:
 10613                           
 10614                           	psect	text23
 10615  07FF                     __ptext23:	
 10616 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 10617 ;; Defined at:
 10618 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 10619 ;; Parameters:    Size  Location     Type
 10620 ;;		None
 10621 ;; Auto vars:     Size  Location     Type
 10622 ;;		None
 10623 ;; Return value:  Size  Location     Type
 10624 ;;                  1    wreg      void 
 10625 ;; Registers used:
 10626 ;;		None
 10627 ;; Tracked objects:
 10628 ;;		On entry : 0/0
 10629 ;;		On exit  : 0/0
 10630 ;;		Unchanged: 0/0
 10631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10636 ;;Total ram usage:        0 bytes
 10637 ;; Hardware stack levels used:    1
 10638 ;; This function calls:
 10639 ;;		Nothing
 10640 ;; This function is called by:
 10641 ;;		_TMR5_Initialize
 10642 ;;		_TMR5_ISR
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           
 10647                           ;psect for function _TMR5_DefaultInterruptHandler
 10648  07FF                     _TMR5_DefaultInterruptHandler:
 10649  07FF                     i1l1068:	
 10650                           ;incstack = 0
 10651                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 10652                           
 10653  07FF  0008               	return
 10654  0800                     __end_of_TMR5_DefaultInterruptHandler:
 10655                           
 10656                           	psect	text24
 10657  0FA8                     __ptext24:	
 10658 ;; *************** function _monitoring_ISR *****************
 10659 ;; Defined at:
 10660 ;;		line 377 in file "main.c"
 10661 ;; Parameters:    Size  Location     Type
 10662 ;;		None
 10663 ;; Auto vars:     Size  Location     Type
 10664 ;;  lum             1   14[BANK0 ] unsigned char 
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  1    wreg      void 
 10667 ;; Registers used:
 10668 ;;		wreg, status,2, status,0, pclath, cstack
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10677 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10678 ;;Total ram usage:        4 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; Hardware stack levels required when called:    2
 10681 ;; This function calls:
 10682 ;;		_ADCC_GetSingleConversion
 10683 ;;		_map
 10684 ;;		_tsttc
 10685 ;; This function is called by:
 10686 ;;		_main
 10687 ;;		_TMR5_ISR
 10688 ;; This function uses a non-reentrant model
 10689 ;;
 10690                           
 10691                           
 10692                           ;psect for function _monitoring_ISR
 10693  0FA8                     _monitoring_ISR:
 10694  0FA8                     i1l3903:	
 10695                           ;incstack = 0
 10696                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 10697                           
 10698                           
 10699                           ;main.c: 378: temp = tsttc();
 10700  0FA8  3183  233B  318F   	fcall	_tsttc
 10701  0FAB  00FB               	movwf	??_monitoring_ISR
 10702  0FAC  087B               	movf	??_monitoring_ISR,w
 10703  0FAD  0020               	movlb	0	; select bank0
 10704  0FAE  00DA               	movwf	_temp
 10705                           
 10706                           ;main.c: 380: uint8_t lum = ADCC_GetSingleConversion(channel_ANA0) >> 12;
 10707  0FAF  3000               	movlw	0
 10708  0FB0  318C  24E3  318F   	fcall	_ADCC_GetSingleConversion
 10709  0FB3  0870               	movf	?_ADCC_GetSingleConversion,w
 10710  0FB4  00FB               	movwf	??_monitoring_ISR
 10711  0FB5  0871               	movf	?_ADCC_GetSingleConversion+1,w
 10712  0FB6  00FC               	movwf	??_monitoring_ISR+1
 10713  0FB7  0E7C               	swapf	??_monitoring_ISR+1,w
 10714  0FB8  390F               	andlw	15
 10715  0FB9  00FB               	movwf	??_monitoring_ISR
 10716  0FBA  01FC               	clrf	??_monitoring_ISR+1
 10717  0FBB  087B               	movf	??_monitoring_ISR,w
 10718  0FBC  00FD               	movwf	??_monitoring_ISR+2
 10719  0FBD  087D               	movf	??_monitoring_ISR+2,w
 10720  0FBE  0020               	movlb	0	; select bank0
 10721  0FBF  00AE               	movwf	monitoring_ISR@lum
 10722                           
 10723                           ;main.c: 382: lumLevel = map(lum,1,15,0,7);
 10724  0FC0  082E               	movf	monitoring_ISR@lum,w
 10725  0FC1  00FB               	movwf	??_monitoring_ISR
 10726  0FC2  01FC               	clrf	??_monitoring_ISR+1
 10727  0FC3  087B               	movf	??_monitoring_ISR,w
 10728  0FC4  00A4               	movwf	map@x
 10729  0FC5  087C               	movf	??_monitoring_ISR+1,w
 10730  0FC6  00A5               	movwf	map@x+1
 10731  0FC7  3001               	movlw	1
 10732  0FC8  00A6               	movwf	map@in_min
 10733  0FC9  3000               	movlw	0
 10734  0FCA  00A7               	movwf	map@in_min+1
 10735  0FCB  300F               	movlw	15
 10736  0FCC  00A8               	movwf	map@in_max
 10737  0FCD  3000               	movlw	0
 10738  0FCE  00A9               	movwf	map@in_max+1
 10739  0FCF  3000               	movlw	0
 10740  0FD0  00AA               	movwf	map@out_min
 10741  0FD1  00AB               	movwf	map@out_min+1
 10742  0FD2  3007               	movlw	7
 10743  0FD3  00AC               	movwf	map@out_max
 10744  0FD4  3000               	movlw	0
 10745  0FD5  00AD               	movwf	map@out_max+1
 10746  0FD6  3187  27D6  318F   	fcall	_map
 10747  0FD9  0020               	movlb	0	; select bank0
 10748  0FDA  0825               	movf	?_map+1,w
 10749  0FDB  00D5               	movwf	_lumLevel+1
 10750  0FDC  0824               	movf	?_map,w
 10751  0FDD  00D4               	movwf	_lumLevel
 10752  0FDE                     i1l3905:
 10753                           
 10754                           ;main.c: 385: if(lumAlarm.alarmLum > lumLevel){
 10755  0FDE  0855               	movf	_lumLevel+1,w
 10756  0FDF  3A80               	xorlw	128
 10757  0FE0  00FB               	movwf	??_monitoring_ISR
 10758  0FE1  3080               	movlw	128
 10759  0FE2  027B               	subwf	??_monitoring_ISR,w
 10760  0FE3  1D03               	skipz
 10761  0FE4  2FE7               	goto	u349_25
 10762  0FE5  0862               	movf	_lumAlarm,w
 10763  0FE6  0254               	subwf	_lumLevel,w
 10764  0FE7                     u349_25:
 10765  0FE7  1803               	skipnc
 10766  0FE8  2FEA               	goto	u349_21
 10767  0FE9  2FEB               	goto	u349_20
 10768  0FEA                     u349_21:
 10769  0FEA  2FF0               	goto	i1l3909
 10770  0FEB                     u349_20:
 10771  0FEB                     i1l3907:
 10772                           
 10773                           ;main.c: 386: lumAlarm.trigger = 1;
 10774  0FEB  0020               	movlb	0	; select bank0
 10775  0FEC  01E3               	clrf	_lumAlarm+1
 10776  0FED  0AE3               	incf	_lumAlarm+1,f
 10777  0FEE                     i1l985:	
 10778                           ;main.c: 387: do { LATAbits.LATA4 = 1; } while(0);
 10779                           
 10780  0FEE  1616               	bsf	22,4	;volatile
 10781  0FEF  2FF3               	goto	i1l3913
 10782  0FF0                     i1l3909:
 10783                           
 10784                           ;main.c: 389: lumAlarm.trigger = 0;
 10785  0FF0  0020               	movlb	0	; select bank0
 10786  0FF1  01E3               	clrf	_lumAlarm+1
 10787  0FF2                     i1l3911:
 10788  0FF2  1216               	bcf	22,4	;volatile
 10789  0FF3                     i1l3913:
 10790                           
 10791                           ;main.c: 391: };main.c: 394: if(tempAlarm.alarmTemp < temp){
 10792  0FF3  085A               	movf	_temp,w
 10793  0FF4  0264               	subwf	_tempAlarm,w
 10794  0FF5  1803               	skipnc
 10795  0FF6  2FF8               	goto	u350_21
 10796  0FF7  2FF9               	goto	u350_20
 10797  0FF8                     u350_21:
 10798  0FF8  2FFD               	goto	i1l3917
 10799  0FF9                     u350_20:
 10800  0FF9                     i1l3915:
 10801                           
 10802                           ;main.c: 395: tempAlarm.trigger = 1;
 10803  0FF9  01E5               	clrf	_tempAlarm+1
 10804  0FFA  0AE5               	incf	_tempAlarm+1,f
 10805  0FFB                     i1l991:	
 10806                           ;main.c: 396: do { LATAbits.LATA5 = 1; } while(0);
 10807                           
 10808  0FFB  1696               	bsf	22,5	;volatile
 10809  0FFC  2FFF               	goto	i1l996
 10810  0FFD                     i1l3917:
 10811                           
 10812                           ;main.c: 398: tempAlarm.trigger = 0;
 10813  0FFD  01E5               	clrf	_tempAlarm+1
 10814  0FFE                     i1l3919:
 10815  0FFE  1296               	bcf	22,5	;volatile
 10816  0FFF                     i1l996:
 10817  0FFF  0008               	return
 10818  1000                     __end_of_monitoring_ISR:
 10819                           
 10820                           	psect	text25
 10821  033B                     __ptext25:	
 10822 ;; *************** function _tsttc *****************
 10823 ;; Defined at:
 10824 ;;		line 58 in file "main.c"
 10825 ;; Parameters:    Size  Location     Type
 10826 ;;		None
 10827 ;; Auto vars:     Size  Location     Type
 10828 ;;  value           1    3[COMMON] unsigned char 
 10829 ;; Return value:  Size  Location     Type
 10830 ;;                  1    wreg      unsigned char 
 10831 ;; Registers used:
 10832 ;;		wreg, status,2, status,0, pclath, cstack
 10833 ;; Tracked objects:
 10834 ;;		On entry : 0/0
 10835 ;;		On exit  : 0/0
 10836 ;;		Unchanged: 0/0
 10837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;Total ram usage:        2 bytes
 10843 ;; Hardware stack levels used:    1
 10844 ;; Hardware stack levels required when called:    1
 10845 ;; This function calls:
 10846 ;;		_ReadI2C
 10847 ;;		i1_WriteI2C
 10848 ;; This function is called by:
 10849 ;;		_monitoring_ISR
 10850 ;; This function uses a non-reentrant model
 10851 ;;
 10852                           
 10853                           
 10854                           ;psect for function _tsttc
 10855  033B                     _tsttc:
 10856  033B                     i1l693:	
 10857                           ;incstack = 0
 10858                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 10859                           ;main.c: 60: unsigned char value;;main.c: 61: do{
 10860                           
 10861  033B                     i1l3399:	
 10862                           ;main.c: 62: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10863                           
 10864  033B  0023               	movlb	3	; select bank3
 10865  033C  0C0F               	rrf	15,w	;volatile
 10866  033D  0C89               	rrf	9,f
 10867  033E  3901               	andlw	1
 10868  033F  00F2               	movwf	??_tsttc
 10869  0340  0811               	movf	17,w	;volatile
 10870  0341  391F               	andlw	31
 10871  0342  0472               	iorwf	??_tsttc,w
 10872  0343  1D03               	btfss	3,2
 10873  0344  2B46               	goto	u262_21
 10874  0345  2B47               	goto	u262_20
 10875  0346                     u262_21:
 10876  0346  2B3B               	goto	i1l3399
 10877  0347                     u262_20:
 10878  0347                     i1l696:
 10879                           
 10880                           ;main.c: 63: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 10881  0347  1411               	bsf	17,0	;volatile
 10882  0348                     i1l697:
 10883  0348  1811               	btfsc	17,0	;volatile
 10884  0349  2B4B               	goto	u263_21
 10885  034A  2B4C               	goto	u263_20
 10886  034B                     u263_21:
 10887  034B  2B48               	goto	i1l697
 10888  034C                     u263_20:
 10889  034C                     i1l3401:
 10890  034C  0C0F               	rrf	15,w	;volatile
 10891  034D  0C89               	rrf	9,f
 10892  034E  3901               	andlw	1
 10893  034F  00F2               	movwf	??_tsttc
 10894  0350  0811               	movf	17,w	;volatile
 10895  0351  391F               	andlw	31
 10896  0352  0472               	iorwf	??_tsttc,w
 10897  0353  1D03               	btfss	3,2
 10898  0354  2B56               	goto	u264_21
 10899  0355  2B57               	goto	u264_20
 10900  0356                     u264_21:
 10901  0356  2B4C               	goto	i1l3401
 10902  0357                     u264_20:
 10903  0357                     i1l3403:
 10904                           
 10905                           ;main.c: 65: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10906  0357  309A               	movlw	154
 10907  0358  318F  270A  3183   	fcall	i1_WriteI2C
 10908  035B                     i1l3405:
 10909  035B  0023               	movlb	3	; select bank3
 10910  035C  0C0F               	rrf	15,w	;volatile
 10911  035D  0C89               	rrf	9,f
 10912  035E  3901               	andlw	1
 10913  035F  00F2               	movwf	??_tsttc
 10914  0360  0811               	movf	17,w	;volatile
 10915  0361  391F               	andlw	31
 10916  0362  0472               	iorwf	??_tsttc,w
 10917  0363  1D03               	btfss	3,2
 10918  0364  2B66               	goto	u265_21
 10919  0365  2B67               	goto	u265_20
 10920  0366                     u265_21:
 10921  0366  2B5B               	goto	i1l3405
 10922  0367                     u265_20:
 10923  0367                     i1l3407:
 10924                           
 10925                           ;main.c: 66: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10926  0367  3001               	movlw	1
 10927  0368  318F  270A  3183   	fcall	i1_WriteI2C
 10928  036B                     i1l3409:
 10929  036B  0023               	movlb	3	; select bank3
 10930  036C  0C0F               	rrf	15,w	;volatile
 10931  036D  0C89               	rrf	9,f
 10932  036E  3901               	andlw	1
 10933  036F  00F2               	movwf	??_tsttc
 10934  0370  0811               	movf	17,w	;volatile
 10935  0371  391F               	andlw	31
 10936  0372  0472               	iorwf	??_tsttc,w
 10937  0373  1D03               	btfss	3,2
 10938  0374  2B76               	goto	u266_21
 10939  0375  2B77               	goto	u266_20
 10940  0376                     u266_21:
 10941  0376  2B6B               	goto	i1l3409
 10942  0377                     u266_20:
 10943  0377                     i1l708:
 10944                           
 10945                           ;main.c: 67: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 10946  0377  1491               	bsf	17,1	;volatile
 10947  0378                     i1l709:
 10948  0378  1891               	btfsc	17,1	;volatile
 10949  0379  2B7B               	goto	u267_21
 10950  037A  2B7C               	goto	u267_20
 10951  037B                     u267_21:
 10952  037B  2B78               	goto	i1l709
 10953  037C                     u267_20:
 10954  037C                     i1l3411:
 10955  037C  0C0F               	rrf	15,w	;volatile
 10956  037D  0C89               	rrf	9,f
 10957  037E  3901               	andlw	1
 10958  037F  00F2               	movwf	??_tsttc
 10959  0380  0811               	movf	17,w	;volatile
 10960  0381  391F               	andlw	31
 10961  0382  0472               	iorwf	??_tsttc,w
 10962  0383  1D03               	btfss	3,2
 10963  0384  2B86               	goto	u268_21
 10964  0385  2B87               	goto	u268_20
 10965  0386                     u268_21:
 10966  0386  2B7C               	goto	i1l3411
 10967  0387                     u268_20:
 10968  0387                     i1l3413:
 10969                           
 10970                           ;main.c: 68: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10971  0387  309B               	movlw	155
 10972  0388  318F  270A  3183   	fcall	i1_WriteI2C
 10973  038B                     i1l3415:
 10974  038B  0023               	movlb	3	; select bank3
 10975  038C  0C0F               	rrf	15,w	;volatile
 10976  038D  0C89               	rrf	9,f
 10977  038E  3901               	andlw	1
 10978  038F  00F2               	movwf	??_tsttc
 10979  0390  0811               	movf	17,w	;volatile
 10980  0391  391F               	andlw	31
 10981  0392  0472               	iorwf	??_tsttc,w
 10982  0393  1D03               	btfss	3,2
 10983  0394  2B96               	goto	u269_21
 10984  0395  2B97               	goto	u269_20
 10985  0396                     u269_21:
 10986  0396  2B8B               	goto	i1l3415
 10987  0397                     u269_20:
 10988  0397                     i1l3417:
 10989                           
 10990                           ;main.c: 69: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10991  0397  318D  257B  3183   	fcall	_ReadI2C
 10992  039A  00F2               	movwf	??_tsttc
 10993  039B  0872               	movf	??_tsttc,w
 10994  039C  00F3               	movwf	tsttc@value
 10995  039D                     i1l3419:
 10996  039D  0023               	movlb	3	; select bank3
 10997  039E  0C0F               	rrf	15,w	;volatile
 10998  039F  0C89               	rrf	9,f
 10999  03A0  3901               	andlw	1
 11000  03A1  00F2               	movwf	??_tsttc
 11001  03A2  0811               	movf	17,w	;volatile
 11002  03A3  391F               	andlw	31
 11003  03A4  0472               	iorwf	??_tsttc,w
 11004  03A5  1D03               	btfss	3,2
 11005  03A6  2BA8               	goto	u270_21
 11006  03A7  2BA9               	goto	u270_20
 11007  03A8                     u270_21:
 11008  03A8  2B9D               	goto	i1l3419
 11009  03A9                     u270_20:
 11010  03A9                     i1l720:
 11011                           
 11012                           ;main.c: 70: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11013  03A9  1691               	bsf	17,5	;volatile
 11014  03AA  1611               	bsf	17,4	;volatile
 11015  03AB                     i1l721:
 11016  03AB  1A11               	btfsc	17,4	;volatile
 11017  03AC  2BAE               	goto	u271_21
 11018  03AD  2BAF               	goto	u271_20
 11019  03AE                     u271_21:
 11020  03AE  2BAB               	goto	i1l721
 11021  03AF                     u271_20:
 11022  03AF                     i1l3421:
 11023  03AF  0C0F               	rrf	15,w	;volatile
 11024  03B0  0C89               	rrf	9,f
 11025  03B1  3901               	andlw	1
 11026  03B2  00F2               	movwf	??_tsttc
 11027  03B3  0811               	movf	17,w	;volatile
 11028  03B4  391F               	andlw	31
 11029  03B5  0472               	iorwf	??_tsttc,w
 11030  03B6  1D03               	btfss	3,2
 11031  03B7  2BB9               	goto	u272_21
 11032  03B8  2BBA               	goto	u272_20
 11033  03B9                     u272_21:
 11034  03B9  2BAF               	goto	i1l3421
 11035  03BA                     u272_20:
 11036  03BA                     i1l726:
 11037                           
 11038                           ;main.c: 71: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11039  03BA  1511               	bsf	17,2	;volatile
 11040  03BB                     i1l727:
 11041  03BB  1911               	btfsc	17,2	;volatile
 11042  03BC  2BBE               	goto	u273_21
 11043  03BD  2BBF               	goto	u273_20
 11044  03BE                     u273_21:
 11045  03BE  2BBB               	goto	i1l727
 11046  03BF                     u273_20:
 11047  03BF                     i1l729:
 11048                           
 11049                           ;main.c: 72: } while (!(value & 0x40));
 11050  03BF  1F73               	btfss	tsttc@value,6
 11051  03C0  2BC2               	goto	u274_21
 11052  03C1  2BC3               	goto	u274_20
 11053  03C2                     u274_21:
 11054  03C2  2B3B               	goto	i1l693
 11055  03C3                     u274_20:
 11056  03C3                     i1l3423:
 11057  03C3  0C0F               	rrf	15,w	;volatile
 11058  03C4  0C89               	rrf	9,f
 11059  03C5  3901               	andlw	1
 11060  03C6  00F2               	movwf	??_tsttc
 11061  03C7  0811               	movf	17,w	;volatile
 11062  03C8  391F               	andlw	31
 11063  03C9  0472               	iorwf	??_tsttc,w
 11064  03CA  1D03               	btfss	3,2
 11065  03CB  2BCD               	goto	u275_21
 11066  03CC  2BCE               	goto	u275_20
 11067  03CD                     u275_21:
 11068  03CD  2BC3               	goto	i1l3423
 11069  03CE                     u275_20:
 11070  03CE                     i1l733:
 11071                           
 11072                           ;main.c: 75: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11073  03CE  1411               	bsf	17,0	;volatile
 11074  03CF                     i1l734:
 11075  03CF  1811               	btfsc	17,0	;volatile
 11076  03D0  2BD2               	goto	u276_21
 11077  03D1  2BD3               	goto	u276_20
 11078  03D2                     u276_21:
 11079  03D2  2BCF               	goto	i1l734
 11080  03D3                     u276_20:
 11081  03D3                     i1l3425:
 11082  03D3  0C0F               	rrf	15,w	;volatile
 11083  03D4  0C89               	rrf	9,f
 11084  03D5  3901               	andlw	1
 11085  03D6  00F2               	movwf	??_tsttc
 11086  03D7  0811               	movf	17,w	;volatile
 11087  03D8  391F               	andlw	31
 11088  03D9  0472               	iorwf	??_tsttc,w
 11089  03DA  1D03               	btfss	3,2
 11090  03DB  2BDD               	goto	u277_21
 11091  03DC  2BDE               	goto	u277_20
 11092  03DD                     u277_21:
 11093  03DD  2BD3               	goto	i1l3425
 11094  03DE                     u277_20:
 11095  03DE                     i1l3427:
 11096                           
 11097                           ;main.c: 76: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11098  03DE  309A               	movlw	154
 11099  03DF  318F  270A  3183   	fcall	i1_WriteI2C
 11100  03E2                     i1l3429:
 11101  03E2  0023               	movlb	3	; select bank3
 11102  03E3  0C0F               	rrf	15,w	;volatile
 11103  03E4  0C89               	rrf	9,f
 11104  03E5  3901               	andlw	1
 11105  03E6  00F2               	movwf	??_tsttc
 11106  03E7  0811               	movf	17,w	;volatile
 11107  03E8  391F               	andlw	31
 11108  03E9  0472               	iorwf	??_tsttc,w
 11109  03EA  1D03               	btfss	3,2
 11110  03EB  2BED               	goto	u278_21
 11111  03EC  2BEE               	goto	u278_20
 11112  03ED                     u278_21:
 11113  03ED  2BE2               	goto	i1l3429
 11114  03EE                     u278_20:
 11115  03EE                     i1l3431:
 11116                           
 11117                           ;main.c: 77: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11118  03EE  3000               	movlw	0
 11119  03EF  318F  270A  3183   	fcall	i1_WriteI2C
 11120  03F2                     i1l3433:
 11121  03F2  0023               	movlb	3	; select bank3
 11122  03F3  0C0F               	rrf	15,w	;volatile
 11123  03F4  0C89               	rrf	9,f
 11124  03F5  3901               	andlw	1
 11125  03F6  00F2               	movwf	??_tsttc
 11126  03F7  0811               	movf	17,w	;volatile
 11127  03F8  391F               	andlw	31
 11128  03F9  0472               	iorwf	??_tsttc,w
 11129  03FA  1D03               	btfss	3,2
 11130  03FB  2BFD               	goto	u279_21
 11131  03FC  2BFE               	goto	u279_20
 11132  03FD                     u279_21:
 11133  03FD  2BF2               	goto	i1l3433
 11134  03FE                     u279_20:
 11135  03FE                     i1l745:
 11136                           
 11137                           ;main.c: 78: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 11138  03FE  1491               	bsf	17,1	;volatile
 11139  03FF                     i1l746:
 11140  03FF  1891               	btfsc	17,1	;volatile
 11141  0400  2C02               	goto	u280_21
 11142  0401  2C03               	goto	u280_20
 11143  0402                     u280_21:
 11144  0402  2BFF               	goto	i1l746
 11145  0403                     u280_20:
 11146  0403                     i1l3435:
 11147  0403  0C0F               	rrf	15,w	;volatile
 11148  0404  0C89               	rrf	9,f
 11149  0405  3901               	andlw	1
 11150  0406  00F2               	movwf	??_tsttc
 11151  0407  0811               	movf	17,w	;volatile
 11152  0408  391F               	andlw	31
 11153  0409  0472               	iorwf	??_tsttc,w
 11154  040A  1D03               	btfss	3,2
 11155  040B  2C0D               	goto	u281_21
 11156  040C  2C0E               	goto	u281_20
 11157  040D                     u281_21:
 11158  040D  2C03               	goto	i1l3435
 11159  040E                     u281_20:
 11160  040E                     i1l3437:
 11161                           
 11162                           ;main.c: 79: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11163  040E  309B               	movlw	155
 11164  040F  318F  270A  3183   	fcall	i1_WriteI2C
 11165  0412                     i1l3439:
 11166  0412  0023               	movlb	3	; select bank3
 11167  0413  0C0F               	rrf	15,w	;volatile
 11168  0414  0C89               	rrf	9,f
 11169  0415  3901               	andlw	1
 11170  0416  00F2               	movwf	??_tsttc
 11171  0417  0811               	movf	17,w	;volatile
 11172  0418  391F               	andlw	31
 11173  0419  0472               	iorwf	??_tsttc,w
 11174  041A  1D03               	btfss	3,2
 11175  041B  2C1D               	goto	u282_21
 11176  041C  2C1E               	goto	u282_20
 11177  041D                     u282_21:
 11178  041D  2C12               	goto	i1l3439
 11179  041E                     u282_20:
 11180  041E                     i1l3441:
 11181                           
 11182                           ;main.c: 80: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11183  041E  318D  257B  3183   	fcall	_ReadI2C
 11184  0421  00F2               	movwf	??_tsttc
 11185  0422  0872               	movf	??_tsttc,w
 11186  0423  00F3               	movwf	tsttc@value
 11187  0424                     i1l3443:
 11188  0424  0023               	movlb	3	; select bank3
 11189  0425  0C0F               	rrf	15,w	;volatile
 11190  0426  0C89               	rrf	9,f
 11191  0427  3901               	andlw	1
 11192  0428  00F2               	movwf	??_tsttc
 11193  0429  0811               	movf	17,w	;volatile
 11194  042A  391F               	andlw	31
 11195  042B  0472               	iorwf	??_tsttc,w
 11196  042C  1D03               	btfss	3,2
 11197  042D  2C2F               	goto	u283_21
 11198  042E  2C30               	goto	u283_20
 11199  042F                     u283_21:
 11200  042F  2C24               	goto	i1l3443
 11201  0430                     u283_20:
 11202  0430                     i1l757:
 11203                           
 11204                           ;main.c: 81: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11205  0430  1691               	bsf	17,5	;volatile
 11206  0431  1611               	bsf	17,4	;volatile
 11207  0432                     i1l758:
 11208  0432  1A11               	btfsc	17,4	;volatile
 11209  0433  2C35               	goto	u284_21
 11210  0434  2C36               	goto	u284_20
 11211  0435                     u284_21:
 11212  0435  2C32               	goto	i1l758
 11213  0436                     u284_20:
 11214  0436                     i1l3445:
 11215  0436  0C0F               	rrf	15,w	;volatile
 11216  0437  0C89               	rrf	9,f
 11217  0438  3901               	andlw	1
 11218  0439  00F2               	movwf	??_tsttc
 11219  043A  0811               	movf	17,w	;volatile
 11220  043B  391F               	andlw	31
 11221  043C  0472               	iorwf	??_tsttc,w
 11222  043D  1D03               	btfss	3,2
 11223  043E  2C40               	goto	u285_21
 11224  043F  2C41               	goto	u285_20
 11225  0440                     u285_21:
 11226  0440  2C36               	goto	i1l3445
 11227  0441                     u285_20:
 11228  0441                     i1l763:
 11229                           
 11230                           ;main.c: 82: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11231  0441  1511               	bsf	17,2	;volatile
 11232  0442                     i1l764:
 11233  0442  1911               	btfsc	17,2	;volatile
 11234  0443  2C45               	goto	u286_21
 11235  0444  2C46               	goto	u286_20
 11236  0445                     u286_21:
 11237  0445  2C42               	goto	i1l764
 11238  0446                     u286_20:
 11239  0446                     i1l3447:
 11240                           
 11241                           ;main.c: 84: return value;
 11242  0446  0873               	movf	tsttc@value,w
 11243  0447                     i1l767:
 11244  0447  0008               	return
 11245  0448                     __end_of_tsttc:
 11246                           
 11247                           	psect	text26
 11248  0D7B                     __ptext26:	
 11249 ;; *************** function _ReadI2C *****************
 11250 ;; Defined at:
 11251 ;;		line 32 in file "I2C/i2c.c"
 11252 ;; Parameters:    Size  Location     Type
 11253 ;;		None
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;		None
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  1    wreg      unsigned char 
 11258 ;; Registers used:
 11259 ;;		wreg, status,2, status,0
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;Total ram usage:        1 bytes
 11270 ;; Hardware stack levels used:    1
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_tsttc
 11275 ;;		_LCDrecv
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           
 11279                           
 11280                           ;psect for function _ReadI2C
 11281  0D7B                     _ReadI2C:
 11282  0D7B                     i1l3221:	
 11283                           ;incstack = 0
 11284                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11285                           
 11286                           
 11287                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11288  0D7B  300F               	movlw	15
 11289  0D7C  0023               	movlb	3	; select bank3
 11290  0D7D  0510               	andwf	16,w	;volatile
 11291  0D7E  00F0               	movwf	??_ReadI2C
 11292  0D7F  3008               	movlw	8
 11293  0D80  0670               	xorwf	??_ReadI2C,w
 11294  0D81  1903               	btfsc	3,2
 11295  0D82  2D84               	goto	u220_21
 11296  0D83  2D85               	goto	u220_20
 11297  0D84                     u220_21:
 11298  0D84  2D8E               	goto	i1l22
 11299  0D85                     u220_20:
 11300  0D85                     i1l3223:
 11301  0D85  300F               	movlw	15
 11302  0D86  0510               	andwf	16,w	;volatile
 11303  0D87  00F0               	movwf	??_ReadI2C
 11304  0D88  300B               	movlw	11
 11305  0D89  0670               	xorwf	??_ReadI2C,w
 11306  0D8A  1D03               	btfss	3,2
 11307  0D8B  2D8D               	goto	u221_21
 11308  0D8C  2D8E               	goto	u221_20
 11309  0D8D                     u221_21:
 11310  0D8D  2D8F               	goto	i1l23
 11311  0D8E                     u221_20:
 11312  0D8E                     i1l22:
 11313                           
 11314                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 11315  0D8E  1591               	bsf	17,3	;volatile
 11316  0D8F                     i1l23:
 11317  0D8F  1C0F               	btfss	15,0	;volatile
 11318  0D90  2D92               	goto	u222_21
 11319  0D91  2D93               	goto	u222_20
 11320  0D92                     u222_21:
 11321  0D92  2D8F               	goto	i1l23
 11322  0D93                     u222_20:
 11323  0D93                     i1l3225:
 11324                           
 11325                           ;i2c.c: 37: return ( SSP1BUF );
 11326  0D93  080C               	movf	12,w	;volatile
 11327  0D94                     i1l26:
 11328  0D94  0008               	return
 11329  0D95                     __end_of_ReadI2C:
 11330                           
 11331                           	psect	text27
 11332  07D6                     __ptext27:	
 11333 ;; *************** function _map *****************
 11334 ;; Defined at:
 11335 ;;		line 246 in file "main.c"
 11336 ;; Parameters:    Size  Location     Type
 11337 ;;  x               2    4[BANK0 ] int 
 11338 ;;  in_min          2    6[BANK0 ] int 
 11339 ;;  in_max          2    8[BANK0 ] int 
 11340 ;;  out_min         2   10[BANK0 ] int 
 11341 ;;  out_max         2   12[BANK0 ] int 
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;		None
 11344 ;; Return value:  Size  Location     Type
 11345 ;;                  2    4[BANK0 ] int 
 11346 ;; Registers used:
 11347 ;;		wreg, status,2, status,0, pclath, cstack
 11348 ;; Tracked objects:
 11349 ;;		On entry : 0/0
 11350 ;;		On exit  : 0/0
 11351 ;;		Unchanged: 0/0
 11352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11353 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11356 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11357 ;;Total ram usage:       10 bytes
 11358 ;; Hardware stack levels used:    1
 11359 ;; Hardware stack levels required when called:    1
 11360 ;; This function calls:
 11361 ;;		___awdiv
 11362 ;;		___wmul
 11363 ;; This function is called by:
 11364 ;;		_monitoring_ISR
 11365 ;; This function uses a non-reentrant model
 11366 ;;
 11367                           
 11368                           
 11369                           ;psect for function _map
 11370  07D6                     _map:
 11371  07D6                     i1l3471:	
 11372                           ;incstack = 0
 11373                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
 11374                           
 11375                           
 11376                           ;main.c: 247: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 11377  07D6  0020               	movlb	0	; select bank0
 11378  07D7  0826               	movf	map@in_min,w
 11379  07D8  0228               	subwf	map@in_max,w
 11380  07D9  00F6               	movwf	___awdiv@divisor
 11381  07DA  0827               	movf	map@in_min+1,w
 11382  07DB  3B29               	subwfb	map@in_max+1,w
 11383  07DC  00F7               	movwf	___awdiv@divisor+1
 11384  07DD  0826               	movf	map@in_min,w
 11385  07DE  0224               	subwf	map@x,w
 11386  07DF  00F0               	movwf	___wmul@multiplier
 11387  07E0  0827               	movf	map@in_min+1,w
 11388  07E1  3B25               	subwfb	map@x+1,w
 11389  07E2  00F1               	movwf	___wmul@multiplier+1
 11390  07E3  082A               	movf	map@out_min,w
 11391  07E4  022C               	subwf	map@out_max,w
 11392  07E5  00F2               	movwf	___wmul@multiplicand
 11393  07E6  082B               	movf	map@out_min+1,w
 11394  07E7  3B2D               	subwfb	map@out_max+1,w
 11395  07E8  00F3               	movwf	___wmul@multiplicand+1
 11396  07E9  318D  25B1  3187   	fcall	___wmul
 11397  07EC  0871               	movf	?___wmul+1,w
 11398  07ED  00F9               	movwf	___awdiv@dividend+1
 11399  07EE  0870               	movf	?___wmul,w
 11400  07EF  00F8               	movwf	___awdiv@dividend
 11401  07F0  3187  271C  3187   	fcall	___awdiv
 11402  07F3  0020               	movlb	0	; select bank0
 11403  07F4  082A               	movf	map@out_min,w
 11404  07F5  0776               	addwf	?___awdiv,w
 11405  07F6  00A4               	movwf	?_map
 11406  07F7  082B               	movf	map@out_min+1,w
 11407  07F8  3D77               	addwfc	?___awdiv+1,w
 11408  07F9  00A5               	movwf	?_map+1
 11409  07FA                     i1l936:
 11410  07FA  0008               	return
 11411  07FB                     __end_of_map:
 11412                           
 11413                           	psect	text28
 11414  071C                     __ptext28:	
 11415 ;; *************** function ___awdiv *****************
 11416 ;; Defined at:
 11417 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
 11418 ;; Parameters:    Size  Location     Type
 11419 ;;  divisor         2    6[COMMON] int 
 11420 ;;  dividend        2    8[COMMON] int 
 11421 ;; Auto vars:     Size  Location     Type
 11422 ;;  quotient        2    2[BANK0 ] int 
 11423 ;;  sign            1    1[BANK0 ] unsigned char 
 11424 ;;  counter         1    0[BANK0 ] unsigned char 
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  2    6[COMMON] int 
 11427 ;; Registers used:
 11428 ;;		wreg, status,2, status,0
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11435 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11437 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11438 ;;Total ram usage:        9 bytes
 11439 ;; Hardware stack levels used:    1
 11440 ;; This function calls:
 11441 ;;		Nothing
 11442 ;; This function is called by:
 11443 ;;		_map
 11444 ;; This function uses a non-reentrant model
 11445 ;;
 11446                           
 11447                           
 11448                           ;psect for function ___awdiv
 11449  071C                     ___awdiv:
 11450  071C                     i1l3259:	
 11451                           ;incstack = 0
 11452                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11453                           
 11454  071C  0020               	movlb	0	; select bank0
 11455  071D  01A1               	clrf	___awdiv@sign
 11456  071E                     i1l3261:
 11457  071E  1FF7               	btfss	___awdiv@divisor+1,7
 11458  071F  2F21               	goto	u229_21
 11459  0720  2F22               	goto	u229_20
 11460  0721                     u229_21:
 11461  0721  2F29               	goto	i1l3267
 11462  0722                     u229_20:
 11463  0722                     i1l3263:
 11464  0722  09F6               	comf	___awdiv@divisor,f
 11465  0723  09F7               	comf	___awdiv@divisor+1,f
 11466  0724  0AF6               	incf	___awdiv@divisor,f
 11467  0725  1903               	skipnz
 11468  0726  0AF7               	incf	___awdiv@divisor+1,f
 11469  0727                     i1l3265:
 11470  0727  01A1               	clrf	___awdiv@sign
 11471  0728  0AA1               	incf	___awdiv@sign,f
 11472  0729                     i1l3267:
 11473  0729  1FF9               	btfss	___awdiv@dividend+1,7
 11474  072A  2F2C               	goto	u230_21
 11475  072B  2F2D               	goto	u230_20
 11476  072C                     u230_21:
 11477  072C  2F36               	goto	i1l3273
 11478  072D                     u230_20:
 11479  072D                     i1l3269:
 11480  072D  09F8               	comf	___awdiv@dividend,f
 11481  072E  09F9               	comf	___awdiv@dividend+1,f
 11482  072F  0AF8               	incf	___awdiv@dividend,f
 11483  0730  1903               	skipnz
 11484  0731  0AF9               	incf	___awdiv@dividend+1,f
 11485  0732                     i1l3271:
 11486  0732  3001               	movlw	1
 11487  0733  00FA               	movwf	??___awdiv
 11488  0734  087A               	movf	??___awdiv,w
 11489  0735  06A1               	xorwf	___awdiv@sign,f
 11490  0736                     i1l3273:
 11491  0736  01A2               	clrf	___awdiv@quotient
 11492  0737  01A3               	clrf	___awdiv@quotient+1
 11493  0738                     i1l3275:
 11494  0738  0876               	movf	___awdiv@divisor,w
 11495  0739  0477               	iorwf	___awdiv@divisor+1,w
 11496  073A  1903               	btfsc	3,2
 11497  073B  2F3D               	goto	u231_21
 11498  073C  2F3E               	goto	u231_20
 11499  073D                     u231_21:
 11500  073D  2F6D               	goto	i1l3295
 11501  073E                     u231_20:
 11502  073E                     i1l3277:
 11503  073E  01A0               	clrf	___awdiv@counter
 11504  073F  0AA0               	incf	___awdiv@counter,f
 11505  0740  2F4A               	goto	i1l3283
 11506  0741                     i1l3279:
 11507  0741  3001               	movlw	1
 11508  0742                     u232_25:
 11509  0742  35F6               	lslf	___awdiv@divisor,f
 11510  0743  0DF7               	rlf	___awdiv@divisor+1,f
 11511  0744  0B89               	decfsz	9,f
 11512  0745  2F42               	goto	u232_25
 11513  0746                     i1l3281:
 11514  0746  3001               	movlw	1
 11515  0747  00FA               	movwf	??___awdiv
 11516  0748  087A               	movf	??___awdiv,w
 11517  0749  07A0               	addwf	___awdiv@counter,f
 11518  074A                     i1l3283:
 11519  074A  1FF7               	btfss	___awdiv@divisor+1,7
 11520  074B  2F4D               	goto	u233_21
 11521  074C  2F4E               	goto	u233_20
 11522  074D                     u233_21:
 11523  074D  2F41               	goto	i1l3279
 11524  074E                     u233_20:
 11525  074E                     i1l3285:
 11526  074E  3001               	movlw	1
 11527  074F                     u234_25:
 11528  074F  35A2               	lslf	___awdiv@quotient,f
 11529  0750  0DA3               	rlf	___awdiv@quotient+1,f
 11530  0751  0B89               	decfsz	9,f
 11531  0752  2F4F               	goto	u234_25
 11532  0753  0877               	movf	___awdiv@divisor+1,w
 11533  0754  0279               	subwf	___awdiv@dividend+1,w
 11534  0755  1D03               	skipz
 11535  0756  2F59               	goto	u235_25
 11536  0757  0876               	movf	___awdiv@divisor,w
 11537  0758  0278               	subwf	___awdiv@dividend,w
 11538  0759                     u235_25:
 11539  0759  1C03               	skipc
 11540  075A  2F5C               	goto	u235_21
 11541  075B  2F5D               	goto	u235_20
 11542  075C                     u235_21:
 11543  075C  2F62               	goto	i1l3291
 11544  075D                     u235_20:
 11545  075D                     i1l3287:
 11546  075D  0876               	movf	___awdiv@divisor,w
 11547  075E  02F8               	subwf	___awdiv@dividend,f
 11548  075F  0877               	movf	___awdiv@divisor+1,w
 11549  0760  3BF9               	subwfb	___awdiv@dividend+1,f
 11550  0761                     i1l3289:
 11551  0761  1422               	bsf	___awdiv@quotient,0
 11552  0762                     i1l3291:
 11553  0762  3001               	movlw	1
 11554  0763                     u236_25:
 11555  0763  36F7               	lsrf	___awdiv@divisor+1,f
 11556  0764  0CF6               	rrf	___awdiv@divisor,f
 11557  0765  0B89               	decfsz	9,f
 11558  0766  2F63               	goto	u236_25
 11559  0767                     i1l3293:
 11560  0767  3001               	movlw	1
 11561  0768  02A0               	subwf	___awdiv@counter,f
 11562  0769  1D03               	btfss	3,2
 11563  076A  2F6C               	goto	u237_21
 11564  076B  2F6D               	goto	u237_20
 11565  076C                     u237_21:
 11566  076C  2F4E               	goto	i1l3285
 11567  076D                     u237_20:
 11568  076D                     i1l3295:
 11569  076D  0821               	movf	___awdiv@sign,w
 11570  076E  1903               	btfsc	3,2
 11571  076F  2F71               	goto	u238_21
 11572  0770  2F72               	goto	u238_20
 11573  0771                     u238_21:
 11574  0771  2F77               	goto	i1l3299
 11575  0772                     u238_20:
 11576  0772                     i1l3297:
 11577  0772  09A2               	comf	___awdiv@quotient,f
 11578  0773  09A3               	comf	___awdiv@quotient+1,f
 11579  0774  0AA2               	incf	___awdiv@quotient,f
 11580  0775  1903               	skipnz
 11581  0776  0AA3               	incf	___awdiv@quotient+1,f
 11582  0777                     i1l3299:
 11583  0777  0823               	movf	___awdiv@quotient+1,w
 11584  0778  00F7               	movwf	?___awdiv+1
 11585  0779  0822               	movf	___awdiv@quotient,w
 11586  077A  00F6               	movwf	?___awdiv
 11587  077B                     i1l1505:
 11588  077B  0008               	return
 11589  077C                     __end_of___awdiv:
 11590                           
 11591                           	psect	text29
 11592  0CE3                     __ptext29:	
 11593 ;; *************** function _ADCC_GetSingleConversion *****************
 11594 ;; Defined at:
 11595 ;;		line 130 in file "mcc_generated_files/adcc.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;  channel         1    wreg     enum E12086
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;  channel         1    3[COMMON] enum E12086
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  2    0[COMMON] unsigned int 
 11602 ;; Registers used:
 11603 ;;		wreg
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11609 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11612 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11613 ;;Total ram usage:        4 bytes
 11614 ;; Hardware stack levels used:    1
 11615 ;; This function calls:
 11616 ;;		Nothing
 11617 ;; This function is called by:
 11618 ;;		_monitoring_ISR
 11619 ;; This function uses a non-reentrant model
 11620 ;;
 11621                           
 11622                           
 11623                           ;psect for function _ADCC_GetSingleConversion
 11624  0CE3                     _ADCC_GetSingleConversion:
 11625                           
 11626                           ;incstack = 0
 11627                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11628                           ;ADCC_GetSingleConversion@channel stored from wreg
 11629  0CE3  00F3               	movwf	ADCC_GetSingleConversion@channel
 11630  0CE4                     i1l3385:
 11631                           
 11632                           ;adcc.c: 133: ADPCH = channel;
 11633  0CE4  0873               	movf	ADCC_GetSingleConversion@channel,w
 11634  0CE5  0021               	movlb	1	; select bank1
 11635  0CE6  009E               	movwf	30	;volatile
 11636  0CE7                     i1l3387:
 11637                           
 11638                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 11639  0CE7  1793               	bsf	19,7	;volatile
 11640  0CE8                     i1l3389:
 11641                           
 11642                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 11643  0CE8  1313               	bcf	19,6	;volatile
 11644  0CE9                     i1l3391:
 11645                           
 11646                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 11647  0CE9  1413               	bsf	19,0	;volatile
 11648  0CEA                     i1l3393:
 11649                           
 11650                           ;adcc.c: 145: __nop();
 11651  0CEA  0000               	nop
 11652  0CEB                     i1l575:	
 11653                           ;adcc.c: 149: {
 11654                           
 11655  0CEB  0021               	movlb	1	; select bank1
 11656  0CEC  1813               	btfsc	19,0	;volatile
 11657  0CED  2CEF               	goto	u261_21
 11658  0CEE  2CF0               	goto	u261_20
 11659  0CEF                     u261_21:
 11660  0CEF  2CEB               	goto	i1l575
 11661  0CF0                     u261_20:
 11662  0CF0                     i1l3395:
 11663                           
 11664                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11665  0CF0  080D               	movf	13,w	;volatile
 11666  0CF1  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11667  0CF2  080C               	movf	12,w	;volatile
 11668  0CF3  00F0               	movwf	?_ADCC_GetSingleConversion
 11669  0CF4                     i1l578:
 11670  0CF4  0008               	return
 11671  0CF5                     __end_of_ADCC_GetSingleConversion:
 11672                           
 11673                           	psect	text30
 11674  0CC0                     __ptext30:	
 11675 ;; *************** function _TMR5_WriteTimer *****************
 11676 ;; Defined at:
 11677 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 11678 ;; Parameters:    Size  Location     Type
 11679 ;;  timerVal        2    0[COMMON] unsigned int 
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;		None
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  1    wreg      void 
 11684 ;; Registers used:
 11685 ;;		wreg, status,2
 11686 ;; Tracked objects:
 11687 ;;		On entry : 0/0
 11688 ;;		On exit  : 0/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;Total ram usage:        2 bytes
 11696 ;; Hardware stack levels used:    1
 11697 ;; This function calls:
 11698 ;;		Nothing
 11699 ;; This function is called by:
 11700 ;;		_TMR5_ISR
 11701 ;;		_TMR5_Reload
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705                           
 11706                           ;psect for function _TMR5_WriteTimer
 11707  0CC0                     _TMR5_WriteTimer:
 11708  0CC0                     i1l3921:	
 11709                           ;incstack = 0
 11710                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 11711                           
 11712                           
 11713                           ;tmr5.c: 130: if (T5CONbits.nT5SYNC == 1)
 11714  0CC0  0024               	movlb	4	; select bank4
 11715  0CC1  1D1A               	btfss	26,2	;volatile
 11716  0CC2  2CC4               	goto	u351_21
 11717  0CC3  2CC5               	goto	u351_20
 11718  0CC4                     u351_21:
 11719  0CC4  2CCC               	goto	i1l3931
 11720  0CC5                     u351_20:
 11721  0CC5                     i1l3923:
 11722                           
 11723                           ;tmr5.c: 131: {;tmr5.c: 133: T5CONbits.TMR5ON = 0;
 11724  0CC5  101A               	bcf	26,0	;volatile
 11725  0CC6                     i1l3925:
 11726                           
 11727                           ;tmr5.c: 136: TMR5H = (timerVal >> 8);
 11728  0CC6  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 11729  0CC7  0099               	movwf	25	;volatile
 11730  0CC8                     i1l3927:
 11731                           
 11732                           ;tmr5.c: 137: TMR5L = timerVal;
 11733  0CC8  0870               	movf	TMR5_WriteTimer@timerVal,w
 11734  0CC9  0098               	movwf	24	;volatile
 11735  0CCA                     i1l3929:
 11736                           
 11737                           ;tmr5.c: 140: T5CONbits.TMR5ON =1;
 11738  0CCA  141A               	bsf	26,0	;volatile
 11739                           
 11740                           ;tmr5.c: 141: }
 11741  0CCB  2CD0               	goto	i1l1049
 11742  0CCC                     i1l3931:
 11743                           
 11744                           ;tmr5.c: 142: else;tmr5.c: 143: {;tmr5.c: 145: TMR5H = (timerVal >> 8);
 11745  0CCC  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 11746  0CCD  0099               	movwf	25	;volatile
 11747  0CCE                     i1l3933:
 11748                           
 11749                           ;tmr5.c: 146: TMR5L = timerVal;
 11750  0CCE  0870               	movf	TMR5_WriteTimer@timerVal,w
 11751  0CCF  0098               	movwf	24	;volatile
 11752  0CD0                     i1l1049:
 11753  0CD0  0008               	return
 11754  0CD1                     __end_of_TMR5_WriteTimer:
 11755                           
 11756                           	psect	text31
 11757  0D36                     __ptext31:	
 11758 ;; *************** function _TMR3_ISR *****************
 11759 ;; Defined at:
 11760 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;		None
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;		None
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  1    wreg      void 
 11767 ;; Registers used:
 11768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11778 ;;Total ram usage:        0 bytes
 11779 ;; Hardware stack levels used:    1
 11780 ;; Hardware stack levels required when called:    5
 11781 ;; This function calls:
 11782 ;;		Absolute function
 11783 ;;		_TMR3_DefaultInterruptHandler
 11784 ;;		_TMR3_WriteTimer
 11785 ;;		_menuLCD_ISR
 11786 ;; This function is called by:
 11787 ;;		_INTERRUPT_InterruptManager
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           
 11792                           ;psect for function _TMR3_ISR
 11793  0D36                     _TMR3_ISR:
 11794  0D36                     i1l3975:	
 11795                           ;incstack = 0
 11796                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11797                           
 11798                           
 11799                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 11800  0D36  002E               	movlb	14	; select bank14
 11801  0D37  1110               	bcf	16,2	;volatile
 11802  0D38                     i1l3977:
 11803                           
 11804                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 11805  0D38  0020               	movlb	0	; select bank0
 11806  0D39  086E               	movf	_timer3ReloadVal+1,w	;volatile
 11807  0D3A  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 11808  0D3B  086D               	movf	_timer3ReloadVal,w	;volatile
 11809  0D3C  00F0               	movwf	TMR3_WriteTimer@timerVal
 11810  0D3D  318C  24AF  318D   	fcall	_TMR3_WriteTimer
 11811  0D40                     i1l3979:
 11812                           
 11813                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 11814  0D40  0020               	movlb	0	; select bank0
 11815  0D41  086B               	movf	_TMR3_InterruptHandler,w
 11816  0D42  046C               	iorwf	_TMR3_InterruptHandler+1,w
 11817  0D43  1903               	btfsc	3,2
 11818  0D44  2D46               	goto	u354_21
 11819  0D45  2D47               	goto	u354_20
 11820  0D46                     u354_21:
 11821  0D46  2D4C               	goto	i1l478
 11822  0D47                     u354_20:
 11823  0D47                     i1l3981:
 11824                           
 11825                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 11826  0D47  086C               	movf	_TMR3_InterruptHandler+1,w
 11827  0D48  008A               	movwf	10
 11828  0D49  086B               	movf	_TMR3_InterruptHandler,w
 11829  0D4A  000A               	callw
 11830  0D4B  318D               	pagesel	$
 11831  0D4C                     i1l478:
 11832  0D4C  0008               	return
 11833  0D4D                     __end_of_TMR3_ISR:
 11834                           
 11835                           	psect	text32
 11836  0003                     __ptext32:	
 11837 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 11838 ;; Defined at:
 11839 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 11840 ;; Parameters:    Size  Location     Type
 11841 ;;		None
 11842 ;; Auto vars:     Size  Location     Type
 11843 ;;		None
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  1    wreg      void 
 11846 ;; Registers used:
 11847 ;;		None
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11857 ;;Total ram usage:        0 bytes
 11858 ;; Hardware stack levels used:    1
 11859 ;; This function calls:
 11860 ;;		Nothing
 11861 ;; This function is called by:
 11862 ;;		_TMR3_Initialize
 11863 ;;		_TMR3_ISR
 11864 ;; This function uses a non-reentrant model
 11865 ;;
 11866                           
 11867                           
 11868                           ;psect for function _TMR3_DefaultInterruptHandler
 11869  0003                     _TMR3_DefaultInterruptHandler:
 11870  0003                     i1l484:	
 11871                           ;incstack = 0
 11872                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 11873                           
 11874  0003  0008               	return
 11875  0004                     __end_of_TMR3_DefaultInterruptHandler:
 11876                           
 11877                           	psect	text33
 11878  020A                     __ptext33:	
 11879 ;; *************** function _menuLCD_ISR *****************
 11880 ;; Defined at:
 11881 ;;		line 309 in file "main.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;		None
 11884 ;; Auto vars:     Size  Location     Type
 11885 ;;  diff            6   38[BANK0 ] struct Time
 11886 ;;  str             8   23[BANK0 ] unsigned char [8]
 11887 ;;  tt              4   31[BANK0 ] unsigned char [4]
 11888 ;;  l               3   35[BANK0 ] unsigned char [3]
 11889 ;; Return value:  Size  Location     Type
 11890 ;;                  1    wreg      void 
 11891 ;; Registers used:
 11892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11893 ;; Tracked objects:
 11894 ;;		On entry : 0/0
 11895 ;;		On exit  : 0/0
 11896 ;;		Unchanged: 0/0
 11897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11900 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11902 ;;Total ram usage:       23 bytes
 11903 ;; Hardware stack levels used:    1
 11904 ;; Hardware stack levels required when called:    4
 11905 ;; This function calls:
 11906 ;;		_LCDchar
 11907 ;;		_LCDcmd
 11908 ;;		_LCDstr
 11909 ;;		_PWM6_LoadDutyValue
 11910 ;;		_TMR2_StartTimer
 11911 ;;		_differenceBetweenTimePeriod
 11912 ;;		_sprintf
 11913 ;; This function is called by:
 11914 ;;		_main
 11915 ;;		_TMR3_ISR
 11916 ;; This function uses a non-reentrant model
 11917 ;;
 11918                           
 11919                           
 11920                           ;psect for function _menuLCD_ISR
 11921  020A                     _menuLCD_ISR:
 11922  020A                     i1l3843:	
 11923                           ;incstack = 0
 11924                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11925                           
 11926                           
 11927                           ;main.c: 310: char str[8];;main.c: 311: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 11928  020A  3000               	movlw	low (STR_1| (0+32768))
 11929  020B  0020               	movlb	0	; select bank0
 11930  020C  00A0               	movwf	sprintf@f
 11931  020D  3090               	movlw	high (STR_1| (0+32768))
 11932  020E  00A1               	movwf	sprintf@f+1
 11933  020F  084D               	movf	_t+1,w
 11934  0210  00A3               	movwf	?_sprintf+3
 11935  0211  084C               	movf	_t,w
 11936  0212  00A2               	movwf	?_sprintf+2
 11937  0213  084F               	movf	_t+3,w
 11938  0214  00A5               	movwf	?_sprintf+5
 11939  0215  084E               	movf	_t+2,w
 11940  0216  00A4               	movwf	?_sprintf+4
 11941  0217  0851               	movf	_t+5,w
 11942  0218  00A7               	movwf	?_sprintf+7
 11943  0219  0850               	movf	_t+4,w
 11944  021A  00A6               	movwf	?_sprintf+6
 11945  021B  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 11946  021C  3180  206D  3182   	fcall	_sprintf
 11947  021F                     i1l3845:
 11948                           
 11949                           ;main.c: 313: LCDcmd(0x80);
 11950  021F  3080               	movlw	128
 11951  0220  318C  2439  3182   	fcall	_LCDcmd
 11952  0223                     i1l3847:
 11953                           
 11954                           ;main.c: 314: LCDstr(str);
 11955  0223  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 11956  0224  318C  24F5  3182   	fcall	_LCDstr
 11957  0227                     i1l3849:
 11958                           
 11959                           ;main.c: 317: if(alarmsEnable){
 11960  0227  0020               	movlb	0	; select bank0
 11961  0228  0866               	movf	_alarmsEnable,w
 11962  0229  1903               	btfsc	3,2
 11963  022A  2A2C               	goto	u338_21
 11964  022B  2A2D               	goto	u338_20
 11965  022C                     u338_21:
 11966  022C  2B05               	goto	i1l3893
 11967  022D                     u338_20:
 11968  022D                     i1l3851:
 11969                           
 11970                           ;main.c: 318: LCDcmd(0x8F);
 11971  022D  308F               	movlw	143
 11972  022E  318C  2439  3182   	fcall	_LCDcmd
 11973                           
 11974                           ;main.c: 319: LCDchar('A');
 11975  0231  3041               	movlw	65
 11976  0232  318C  2440  3182   	fcall	_LCDchar
 11977  0235                     i1l3853:
 11978                           
 11979                           ;main.c: 322: if(clkAlarm.trigger == 1){
 11980  0235  0020               	movlb	0	; select bank0
 11981  0236  0361               	decf	_clkAlarm+6,w
 11982  0237  1D03               	btfss	3,2
 11983  0238  2A3A               	goto	u339_21
 11984  0239  2A3B               	goto	u339_20
 11985  023A                     u339_21:
 11986  023A  2A43               	goto	i1l3857
 11987  023B                     u339_20:
 11988  023B                     i1l3855:
 11989                           
 11990                           ;main.c: 323: LCDcmd(0x8B);
 11991  023B  308B               	movlw	139
 11992  023C  318C  2439  3182   	fcall	_LCDcmd
 11993                           
 11994                           ;main.c: 324: LCDchar('C');
 11995  023F  3043               	movlw	67
 11996  0240  318C  2440  3182   	fcall	_LCDchar
 11997  0243                     i1l3857:
 11998                           
 11999                           ;main.c: 325: };main.c: 328: if(tempAlarm.trigger == 1){
 12000  0243  0020               	movlb	0	; select bank0
 12001  0244  0365               	decf	_tempAlarm+1,w
 12002  0245  1D03               	btfss	3,2
 12003  0246  2A48               	goto	u340_21
 12004  0247  2A49               	goto	u340_20
 12005  0248                     u340_21:
 12006  0248  2A51               	goto	i1l3861
 12007  0249                     u340_20:
 12008  0249                     i1l3859:
 12009                           
 12010                           ;main.c: 329: LCDcmd(0x8C);
 12011  0249  308C               	movlw	140
 12012  024A  318C  2439  3182   	fcall	_LCDcmd
 12013                           
 12014                           ;main.c: 330: LCDchar('T');
 12015  024D  3054               	movlw	84
 12016  024E  318C  2440  3182   	fcall	_LCDchar
 12017  0251                     i1l3861:
 12018                           
 12019                           ;main.c: 331: };main.c: 334: if(lumAlarm.trigger == 1){
 12020  0251  0020               	movlb	0	; select bank0
 12021  0252  0363               	decf	_lumAlarm+1,w
 12022  0253  1D03               	btfss	3,2
 12023  0254  2A56               	goto	u341_21
 12024  0255  2A57               	goto	u341_20
 12025  0256                     u341_21:
 12026  0256  2A5F               	goto	i1l3865
 12027  0257                     u341_20:
 12028  0257                     i1l3863:
 12029                           
 12030                           ;main.c: 335: LCDcmd(0x8D);
 12031  0257  308D               	movlw	141
 12032  0258  318C  2439  3182   	fcall	_LCDcmd
 12033                           
 12034                           ;main.c: 336: LCDchar('L');
 12035  025B  304C               	movlw	76
 12036  025C  318C  2440  3182   	fcall	_LCDchar
 12037  025F                     i1l3865:
 12038                           
 12039                           ;main.c: 337: };main.c: 338: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 12040  025F  0020               	movlb	0	; select bank0
 12041  0260  0861               	movf	_clkAlarm+6,w
 12042  0261  1D03               	btfss	3,2
 12043  0262  2A64               	goto	u342_21
 12044  0263  2A65               	goto	u342_20
 12045  0264                     u342_21:
 12046  0264  2A6F               	goto	i1l3871
 12047  0265                     u342_20:
 12048  0265                     i1l3867:
 12049  0265  0865               	movf	_tempAlarm+1,w
 12050  0266  1D03               	btfss	3,2
 12051  0267  2A69               	goto	u343_21
 12052  0268  2A6A               	goto	u343_20
 12053  0269                     u343_21:
 12054  0269  2A6F               	goto	i1l3871
 12055  026A                     u343_20:
 12056  026A                     i1l3869:
 12057  026A  0863               	movf	_lumAlarm+1,w
 12058  026B  1903               	btfsc	3,2
 12059  026C  2A6E               	goto	u344_21
 12060  026D  2A6F               	goto	u344_20
 12061  026E                     u344_21:
 12062  026E  2B0D               	goto	i1l980
 12063  026F                     u344_20:
 12064  026F                     i1l3871:
 12065                           
 12066                           ;main.c: 339: if(alarmPWMStart.h == -1){
 12067  026F  0021               	movlb	1	; select bank1
 12068  0270  0A2F               	incf	_alarmPWMStart^(0+128),w
 12069  0271  1D03               	skipz
 12070  0272  2A77               	goto	u345_21
 12071  0273  0A30               	incf	(_alarmPWMStart+1)^(0+128),w
 12072  0274  1D03               	btfss	3,2
 12073  0275  2A77               	goto	u345_21
 12074  0276  2A78               	goto	u345_20
 12075  0277                     u345_21:
 12076  0277  2A90               	goto	i1l3875
 12077  0278                     u345_20:
 12078  0278                     i1l3873:
 12079                           
 12080                           ;main.c: 340: alarmPWMStart.h = t.h;
 12081  0278  0020               	movlb	0	; select bank0
 12082  0279  084D               	movf	_t+1,w
 12083  027A  0021               	movlb	1	; select bank1
 12084  027B  00B0               	movwf	(_alarmPWMStart+1)^(0+128)
 12085  027C  0020               	movlb	0	; select bank0
 12086  027D  084C               	movf	_t,w
 12087  027E  0021               	movlb	1	; select bank1
 12088  027F  00AF               	movwf	_alarmPWMStart^(0+128)
 12089                           
 12090                           ;main.c: 341: alarmPWMStart.m = t.m;
 12091  0280  0020               	movlb	0	; select bank0
 12092  0281  084F               	movf	_t+3,w
 12093  0282  0021               	movlb	1	; select bank1
 12094  0283  00B2               	movwf	((_alarmPWMStart+1)^(0+128)+2)
 12095  0284  0020               	movlb	0	; select bank0
 12096  0285  084E               	movf	_t+2,w
 12097  0286  0021               	movlb	1	; select bank1
 12098  0287  00B1               	movwf	(_alarmPWMStart^(0+128)+2)
 12099                           
 12100                           ;main.c: 342: alarmPWMStart.s = t.s;
 12101  0288  0020               	movlb	0	; select bank0
 12102  0289  0851               	movf	_t+5,w
 12103  028A  0021               	movlb	1	; select bank1
 12104  028B  00B4               	movwf	((_alarmPWMStart+1)^(0+128)+4)
 12105  028C  0020               	movlb	0	; select bank0
 12106  028D  0850               	movf	_t+4,w
 12107  028E  0021               	movlb	1	; select bank1
 12108  028F  00B3               	movwf	(_alarmPWMStart^(0+128)+4)
 12109  0290                     i1l3875:
 12110                           
 12111                           ;main.c: 343: };main.c: 344: struct Time diff = {0,0,0};
 12112  0290  30A9               	movlw	low menuLCD_ISR@F12782
 12113  0291  0086               	movwf	6
 12114  0292  3000               	movlw	high menuLCD_ISR@F12782
 12115  0293  0087               	movwf	7
 12116  0294  3046               	movlw	low menuLCD_ISR@diff
 12117  0295  0084               	movwf	4
 12118  0296  3000               	movlw	high menuLCD_ISR@diff
 12119  0297  0085               	movwf	5
 12120  0298  3006               	movlw	6
 12121  0299  0020               	movlb	0	; select bank0
 12122  029A  00B5               	movwf	??_menuLCD_ISR
 12123  029B                     u346_20:
 12124  029B  0016               	moviw fsr1++
 12125  029C  001A               	movwi fsr0++
 12126  029D  0BB5               	decfsz	??_menuLCD_ISR,f
 12127  029E  2A9B               	goto	u346_20
 12128  029F                     i1l3877:
 12129                           
 12130                           ;main.c: 345: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 12131  029F  304C               	movlw	low _t
 12132  02A0  0086               	movwf	6
 12133  02A1  3000               	movlw	high _t
 12134  02A2  0087               	movwf	7
 12135  02A3  3070               	movlw	low differenceBetweenTimePeriod@start
 12136  02A4  0084               	movwf	4
 12137  02A5  3000               	movlw	high differenceBetweenTimePeriod@start
 12138  02A6  0085               	movwf	5
 12139  02A7  3F40               	moviw [0]fsr1
 12140  02A8  3F80               	movwi [0]fsr0
 12141  02A9  3F41               	moviw [1]fsr1
 12142  02AA  3F81               	movwi [1]fsr0
 12143  02AB  3F42               	moviw [2]fsr1
 12144  02AC  3F82               	movwi [2]fsr0
 12145  02AD  3F43               	moviw [3]fsr1
 12146  02AE  3F83               	movwi [3]fsr0
 12147  02AF  3F44               	moviw [4]fsr1
 12148  02B0  3F84               	movwi [4]fsr0
 12149  02B1  3F45               	moviw [5]fsr1
 12150  02B2  3F85               	movwi [5]fsr0
 12151  02B3  30AF               	movlw	low _alarmPWMStart
 12152  02B4  0086               	movwf	6
 12153  02B5  3000               	movlw	high _alarmPWMStart
 12154  02B6  0087               	movwf	7
 12155  02B7  3076               	movlw	low differenceBetweenTimePeriod@stop
 12156  02B8  0084               	movwf	4
 12157  02B9  3000               	movlw	high differenceBetweenTimePeriod@stop
 12158  02BA  0085               	movwf	5
 12159  02BB  3F40               	moviw [0]fsr1
 12160  02BC  3F80               	movwi [0]fsr0
 12161  02BD  3F41               	moviw [1]fsr1
 12162  02BE  3F81               	movwi [1]fsr0
 12163  02BF  3F42               	moviw [2]fsr1
 12164  02C0  3F82               	movwi [2]fsr0
 12165  02C1  3F43               	moviw [3]fsr1
 12166  02C2  3F83               	movwi [3]fsr0
 12167  02C3  3F44               	moviw [4]fsr1
 12168  02C4  3F84               	movwi [4]fsr0
 12169  02C5  3F45               	moviw [5]fsr1
 12170  02C6  3F85               	movwi [5]fsr0
 12171  02C7  3046               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 12172  02C8  00B5               	movwf	??_menuLCD_ISR
 12173  02C9  0835               	movf	??_menuLCD_ISR,w
 12174  02CA  00FC               	movwf	differenceBetweenTimePeriod@diff
 12175  02CB  3186  2645  3182   	fcall	_differenceBetweenTimePeriod
 12176  02CE                     i1l3879:
 12177                           
 12178                           ;main.c: 348: if(diff.s <= 5){
 12179  02CE  0020               	movlb	0	; select bank0
 12180  02CF  084B               	movf	menuLCD_ISR@diff+5,w
 12181  02D0  3A80               	xorlw	128
 12182  02D1  00B5               	movwf	??_menuLCD_ISR
 12183  02D2  3080               	movlw	128
 12184  02D3  0235               	subwf	??_menuLCD_ISR,w
 12185  02D4  1D03               	skipz
 12186  02D5  2AD8               	goto	u347_25
 12187  02D6  3006               	movlw	6
 12188  02D7  024A               	subwf	menuLCD_ISR@diff+4,w
 12189  02D8                     u347_25:
 12190  02D8  1803               	skipnc
 12191  02D9  2ADB               	goto	u347_21
 12192  02DA  2ADC               	goto	u347_20
 12193  02DB                     u347_21:
 12194  02DB  2AFE               	goto	i1l3891
 12195  02DC                     u347_20:
 12196  02DC                     i1l3881:
 12197                           
 12198                           ;main.c: 349: TMR2_StartTimer();
 12199  02DC  318C  241D  3182   	fcall	_TMR2_StartTimer
 12200  02DF                     i1l3883:
 12201                           
 12202                           ;main.c: 351: if(dimingLed <= 1023){
 12203  02DF  0020               	movlb	0	; select bank0
 12204  02E0  0853               	movf	_dimingLed+1,w
 12205  02E1  3A80               	xorlw	128
 12206  02E2  00B5               	movwf	??_menuLCD_ISR
 12207  02E3  3084               	movlw	132
 12208  02E4  0235               	subwf	??_menuLCD_ISR,w
 12209  02E5  1D03               	skipz
 12210  02E6  2AE9               	goto	u348_25
 12211  02E7  3000               	movlw	0
 12212  02E8  0252               	subwf	_dimingLed,w
 12213  02E9                     u348_25:
 12214  02E9  1803               	skipnc
 12215  02EA  2AEC               	goto	u348_21
 12216  02EB  2AED               	goto	u348_20
 12217  02EC                     u348_21:
 12218  02EC  2AF3               	goto	i1l3887
 12219  02ED                     u348_20:
 12220  02ED                     i1l3885:
 12221                           
 12222                           ;main.c: 352: dimingLed += 200;
 12223  02ED  30C8               	movlw	200
 12224  02EE  0020               	movlb	0	; select bank0
 12225  02EF  07D2               	addwf	_dimingLed,f
 12226  02F0  3000               	movlw	0
 12227  02F1  3DD3               	addwfc	_dimingLed+1,f
 12228                           
 12229                           ;main.c: 353: } else{
 12230  02F2  2AF6               	goto	i1l3889
 12231  02F3                     i1l3887:
 12232                           
 12233                           ;main.c: 354: dimingLed = 0;
 12234  02F3  0020               	movlb	0	; select bank0
 12235  02F4  01D2               	clrf	_dimingLed
 12236  02F5  01D3               	clrf	_dimingLed+1
 12237  02F6                     i1l3889:
 12238                           
 12239                           ;main.c: 355: };main.c: 356: PWM6_LoadDutyValue(dimingLed);
 12240  02F6  0853               	movf	_dimingLed+1,w
 12241  02F7  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12242  02F8  0852               	movf	_dimingLed,w
 12243  02F9  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 12244  02FA  318D  2509  3182   	fcall	_PWM6_LoadDutyValue
 12245                           
 12246                           ;main.c: 357: } else{
 12247  02FD  2B0D               	goto	i1l980
 12248  02FE                     i1l3891:
 12249                           
 12250                           ;main.c: 358: PWM6_LoadDutyValue(0);
 12251  02FE  3000               	movlw	0
 12252  02FF  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 12253  0300  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12254  0301  318D  2509  3182   	fcall	_PWM6_LoadDutyValue
 12255  0304  2B0D               	goto	i1l980
 12256  0305                     i1l3893:
 12257                           
 12258                           ;main.c: 362: LCDcmd(0x8F);
 12259  0305  308F               	movlw	143
 12260  0306  318C  2439  3182   	fcall	_LCDcmd
 12261                           
 12262                           ;main.c: 363: LCDchar('a');
 12263  0309  3061               	movlw	97
 12264  030A  318C  2440  3182   	fcall	_LCDchar
 12265  030D                     i1l980:
 12266                           
 12267                           ;main.c: 364: };main.c: 366: LCDcmd(0xc0);
 12268  030D  30C0               	movlw	192
 12269  030E  318C  2439  3182   	fcall	_LCDcmd
 12270  0311                     i1l3895:
 12271                           
 12272                           ;main.c: 367: char tt[4];;main.c: 368: sprintf(tt, "%02d C", temp);
 12273  0311  3019               	movlw	low (STR_2| (0+32768))
 12274  0312  0020               	movlb	0	; select bank0
 12275  0313  00A0               	movwf	sprintf@f
 12276  0314  3090               	movlw	high (STR_2| (0+32768))
 12277  0315  00A1               	movwf	sprintf@f+1
 12278  0316  085A               	movf	_temp,w
 12279  0317  00B5               	movwf	??_menuLCD_ISR
 12280  0318  01B6               	clrf	??_menuLCD_ISR+1
 12281  0319  0835               	movf	??_menuLCD_ISR,w
 12282  031A  00A2               	movwf	?_sprintf+2
 12283  031B  0836               	movf	??_menuLCD_ISR+1,w
 12284  031C  00A3               	movwf	?_sprintf+3
 12285  031D  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 12286  031E  3180  206D  3182   	fcall	_sprintf
 12287  0321                     i1l3897:
 12288                           
 12289                           ;main.c: 369: LCDstr(tt);
 12290  0321  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 12291  0322  318C  24F5  3182   	fcall	_LCDstr
 12292  0325                     i1l3899:
 12293                           
 12294                           ;main.c: 371: LCDcmd(0xcd);
 12295  0325  30CD               	movlw	205
 12296  0326  318C  2439  3182   	fcall	_LCDcmd
 12297  0329                     i1l3901:
 12298                           
 12299                           ;main.c: 372: char l[3];;main.c: 373: sprintf(l, "L %d", lumLevel);
 12300  0329  3020               	movlw	low (STR_3| (0+32768))
 12301  032A  0020               	movlb	0	; select bank0
 12302  032B  00A0               	movwf	sprintf@f
 12303  032C  3090               	movlw	high (STR_3| (0+32768))
 12304  032D  00A1               	movwf	sprintf@f+1
 12305  032E  0855               	movf	_lumLevel+1,w
 12306  032F  00A3               	movwf	?_sprintf+3
 12307  0330  0854               	movf	_lumLevel,w
 12308  0331  00A2               	movwf	?_sprintf+2
 12309  0332  3043               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 12310  0333  3180  206D  3182   	fcall	_sprintf
 12311                           
 12312                           ;main.c: 374: LCDstr(l);
 12313  0336  3043               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 12314  0337  318C  24F5  3182   	fcall	_LCDstr
 12315  033A                     i1l981:
 12316  033A  0008               	return
 12317  033B                     __end_of_menuLCD_ISR:
 12318                           
 12319                           	psect	text34
 12320  006D                     __ptext34:	
 12321 ;; *************** function _sprintf *****************
 12322 ;; Defined at:
 12323 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 12324 ;; Parameters:    Size  Location     Type
 12325 ;;  sp              1    wreg     PTR unsigned char 
 12326 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 12327 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 12328 ;;		 -> STR_3(5), STR_2(7), STR_1(15), 
 12329 ;; Auto vars:     Size  Location     Type
 12330 ;;  sp              1   19[BANK0 ] PTR unsigned char 
 12331 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 12332 ;;  tmpval          4    0        struct .
 12333 ;;  width           2   17[BANK0 ] int 
 12334 ;;  val             2   14[BANK0 ] unsigned int 
 12335 ;;  cp              2    0        PTR const unsigned char 
 12336 ;;  len             2    0        unsigned int 
 12337 ;;  c               1   20[BANK0 ] unsigned char 
 12338 ;;  flag            1   16[BANK0 ] unsigned char 
 12339 ;;  prec            1   13[BANK0 ] char 
 12340 ;;  ap              1   12[BANK0 ] PTR void [1]
 12341 ;;		 -> ?_sprintf(2), 
 12342 ;; Return value:  Size  Location     Type
 12343 ;;                  2    0[BANK0 ] int 
 12344 ;; Registers used:
 12345 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12346 ;; Tracked objects:
 12347 ;;		On entry : 0/0
 12348 ;;		On exit  : 0/0
 12349 ;;		Unchanged: 0/0
 12350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12351 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12352 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12353 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12354 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12355 ;;Total ram usage:       21 bytes
 12356 ;; Hardware stack levels used:    1
 12357 ;; Hardware stack levels required when called:    1
 12358 ;; This function calls:
 12359 ;;		___lwdiv
 12360 ;;		___lwmod
 12361 ;;		___wmul
 12362 ;;		_isdigit
 12363 ;; This function is called by:
 12364 ;;		_menuLCD_ISR
 12365 ;; This function uses a non-reentrant model
 12366 ;;
 12367                           
 12368                           
 12369                           ;psect for function _sprintf
 12370  006D                     _sprintf:
 12371                           
 12372                           ;incstack = 0
 12373                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12374                           ;sprintf@sp stored from wreg
 12375  006D  0020               	movlb	0	; select bank0
 12376  006E  00B3               	movwf	sprintf@sp
 12377  006F                     i1l3475:
 12378                           
 12379                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 12380  006F  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 12381  0070  00A8               	movwf	??_sprintf
 12382  0071  0828               	movf	??_sprintf,w
 12383  0072  00AC               	movwf	sprintf@ap
 12384                           
 12385                           ;doprnt.c: 553: while((c = *f++)) {
 12386  0073  29F1               	goto	i1l3579
 12387  0074                     i1l3477:
 12388                           
 12389                           ;doprnt.c: 555: if(c != '%')
 12390  0074  3025               	movlw	37
 12391  0075  0634               	xorwf	sprintf@c,w
 12392  0076  1903               	btfsc	3,2
 12393  0077  2879               	goto	u290_21
 12394  0078  287A               	goto	u290_20
 12395  0079                     u290_21:
 12396  0079  2886               	goto	i1l3483
 12397  007A                     u290_20:
 12398  007A                     i1l3479:
 12399                           
 12400                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 12401  007A  0834               	movf	sprintf@c,w
 12402  007B  00A8               	movwf	??_sprintf
 12403  007C  0833               	movf	sprintf@sp,w
 12404  007D  0086               	movwf	6
 12405  007E  0187               	clrf	7
 12406  007F  0828               	movf	??_sprintf,w
 12407  0080  0081               	movwf	1
 12408  0081                     i1l3481:
 12409  0081  3001               	movlw	1
 12410  0082  00A8               	movwf	??_sprintf
 12411  0083  0828               	movf	??_sprintf,w
 12412  0084  07B3               	addwf	sprintf@sp,f
 12413                           
 12414                           ;doprnt.c: 559: continue;
 12415  0085  29F1               	goto	i1l3579
 12416  0086                     i1l3483:
 12417                           
 12418                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 12419  0086  01B1               	clrf	sprintf@width
 12420  0087  01B2               	clrf	sprintf@width+1
 12421                           
 12422                           ;doprnt.c: 565: flag = 0;
 12423  0088  01B0               	clrf	sprintf@flag
 12424  0089  288F               	goto	i1l3489
 12425  008A                     i1l1313:	
 12426                           ;doprnt.c: 596: case '0':
 12427                           
 12428                           
 12429                           ;doprnt.c: 597: flag |= 0x04;
 12430  008A  1530               	bsf	sprintf@flag,2
 12431  008B                     i1l3485:
 12432                           
 12433                           ;doprnt.c: 598: f++;
 12434  008B  3001               	movlw	1
 12435  008C  07A0               	addwf	sprintf@f,f
 12436  008D  3000               	movlw	0
 12437  008E  3DA1               	addwfc	sprintf@f+1,f
 12438  008F                     i1l3489:	
 12439                           ;doprnt.c: 599: continue;
 12440                           
 12441  008F  0820               	movf	sprintf@f,w
 12442  0090  0084               	movwf	4
 12443  0091  0821               	movf	sprintf@f+1,w
 12444  0092  0085               	movwf	5
 12445  0093  0800               	movf	0,w	;code access
 12446                           
 12447                           ; Switch size 1, requested type "simple"
 12448                           ; Number of cases is 1, Range of values is 48 to 48
 12449                           ; switch strategies available:
 12450                           ; Name         Instructions Cycles
 12451                           ; simple_byte            4     3 (average)
 12452                           ; direct_byte           11     9 (fixed)
 12453                           ; jumptable            263     9 (fixed)
 12454                           ;	Chosen strategy is simple_byte
 12455  0094  3A30               	xorlw	48	; case 48
 12456  0095  1903               	skipnz
 12457  0096  288A               	goto	i1l1313
 12458  0097  2898               	goto	i1l3491
 12459  0098                     i1l3491:
 12460                           
 12461                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 12462  0098  0820               	movf	sprintf@f,w
 12463  0099  0084               	movwf	4
 12464  009A  0821               	movf	sprintf@f+1,w
 12465  009B  0085               	movwf	5
 12466  009C  0800               	movf	0,w	;code access
 12467  009D  318C  24D1  3180   	fcall	_isdigit
 12468  00A0  1C03               	btfss	3,0
 12469  00A1  28A3               	goto	u291_21
 12470  00A2  28A4               	goto	u291_20
 12471  00A3                     u291_21:
 12472  00A3  28D7               	goto	i1l3505
 12473  00A4                     u291_20:
 12474  00A4                     i1l3493:
 12475                           
 12476                           ;doprnt.c: 615: width = 0;
 12477  00A4  0020               	movlb	0	; select bank0
 12478  00A5  01B1               	clrf	sprintf@width
 12479  00A6  01B2               	clrf	sprintf@width+1
 12480  00A7                     i1l3495:
 12481                           
 12482                           ;doprnt.c: 617: width *= 10;
 12483  00A7  300A               	movlw	10
 12484  00A8  00F0               	movwf	___wmul@multiplier
 12485  00A9  3000               	movlw	0
 12486  00AA  00F1               	movwf	___wmul@multiplier+1
 12487  00AB  0020               	movlb	0	; select bank0
 12488  00AC  0832               	movf	sprintf@width+1,w
 12489  00AD  00F3               	movwf	___wmul@multiplicand+1
 12490  00AE  0831               	movf	sprintf@width,w
 12491  00AF  00F2               	movwf	___wmul@multiplicand
 12492  00B0  318D  25B1  3180   	fcall	___wmul
 12493  00B3  0871               	movf	?___wmul+1,w
 12494  00B4  0020               	movlb	0	; select bank0
 12495  00B5  00B2               	movwf	sprintf@width+1
 12496  00B6  0870               	movf	?___wmul,w
 12497  00B7  00B1               	movwf	sprintf@width
 12498  00B8                     i1l3497:
 12499                           
 12500                           ;doprnt.c: 618: width += *f++ - '0';
 12501  00B8  0820               	movf	sprintf@f,w
 12502  00B9  0084               	movwf	4
 12503  00BA  0821               	movf	sprintf@f+1,w
 12504  00BB  0085               	movwf	5
 12505  00BC  0800               	movf	0,w	;code access
 12506  00BD  3ED0               	addlw	208
 12507  00BE  00A8               	movwf	??_sprintf
 12508  00BF  30FF               	movlw	255
 12509  00C0  1803               	skipnc
 12510  00C1  3000               	movlw	0
 12511  00C2  00A9               	movwf	??_sprintf+1
 12512  00C3  0828               	movf	??_sprintf,w
 12513  00C4  07B1               	addwf	sprintf@width,f
 12514  00C5  0829               	movf	??_sprintf+1,w
 12515  00C6  3DB2               	addwfc	sprintf@width+1,f
 12516  00C7                     i1l3499:
 12517  00C7  3001               	movlw	1
 12518  00C8  07A0               	addwf	sprintf@f,f
 12519  00C9  3000               	movlw	0
 12520  00CA  3DA1               	addwfc	sprintf@f+1,f
 12521  00CB                     i1l3501:
 12522                           
 12523                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 12524  00CB  0820               	movf	sprintf@f,w
 12525  00CC  0084               	movwf	4
 12526  00CD  0821               	movf	sprintf@f+1,w
 12527  00CE  0085               	movwf	5
 12528  00CF  0800               	movf	0,w	;code access
 12529  00D0  318C  24D1  3180   	fcall	_isdigit
 12530  00D3  1803               	btfsc	3,0
 12531  00D4  28D6               	goto	u292_21
 12532  00D5  28D7               	goto	u292_20
 12533  00D6                     u292_21:
 12534  00D6  28A7               	goto	i1l3495
 12535  00D7                     u292_20:
 12536  00D7                     i1l3505:
 12537  00D7  0020               	movlb	0	; select bank0
 12538  00D8  0821               	movf	sprintf@f+1,w
 12539  00D9  00A9               	movwf	??_sprintf+1
 12540  00DA  0820               	movf	sprintf@f,w
 12541  00DB  00A8               	movwf	??_sprintf
 12542  00DC  0AA0               	incf	sprintf@f,f
 12543  00DD  1903               	skipnz
 12544  00DE  0AA1               	incf	sprintf@f+1,f
 12545  00DF  0828               	movf	??_sprintf,w
 12546  00E0  0084               	movwf	4
 12547  00E1  0829               	movf	??_sprintf+1,w
 12548  00E2  0085               	movwf	5
 12549  00E3  0800               	movf	0,w	;code access
 12550  00E4  00B4               	movwf	sprintf@c
 12551                           
 12552                           ; Switch size 1, requested type "simple"
 12553                           ; Number of cases is 3, Range of values is 0 to 105
 12554                           ; switch strategies available:
 12555                           ; Name         Instructions Cycles
 12556                           ; simple_byte           10     6 (average)
 12557                           ; direct_byte          218     6 (fixed)
 12558                           ; jumptable            260     6 (fixed)
 12559                           ;	Chosen strategy is simple_byte
 12560  00E5  3A00               	xorlw	0	; case 0
 12561  00E6  1903               	skipnz
 12562  00E7  2A05               	goto	i1l3581
 12563  00E8  3A64               	xorlw	100	; case 100
 12564  00E9  1903               	skipnz
 12565  00EA  28EF               	goto	i1l3507
 12566  00EB  3A0D               	xorlw	13	; case 105
 12567  00EC  1903               	skipnz
 12568  00ED  28EF               	goto	i1l3507
 12569  00EE  29F1               	goto	i1l3579
 12570  00EF                     i1l3507:
 12571                           
 12572                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 12573  00EF  082C               	movf	sprintf@ap,w
 12574  00F0  0086               	movwf	6
 12575  00F1  0187               	clrf	7
 12576  00F2  3F40               	moviw [0]fsr1
 12577  00F3  00AE               	movwf	sprintf@val
 12578  00F4  3F41               	moviw [1]fsr1
 12579  00F5  00AF               	movwf	sprintf@val+1
 12580  00F6                     i1l3509:
 12581  00F6  3002               	movlw	2
 12582  00F7  00A8               	movwf	??_sprintf
 12583  00F8  0828               	movf	??_sprintf,w
 12584  00F9  07AC               	addwf	sprintf@ap,f
 12585  00FA                     i1l3511:
 12586                           
 12587                           ;doprnt.c: 1287: if((int)val < 0) {
 12588  00FA  1FAF               	btfss	sprintf@val+1,7
 12589  00FB  28FD               	goto	u293_21
 12590  00FC  28FE               	goto	u293_20
 12591  00FD                     u293_21:
 12592  00FD  2907               	goto	i1l3517
 12593  00FE                     u293_20:
 12594  00FE                     i1l3513:
 12595                           
 12596                           ;doprnt.c: 1288: flag |= 0x03;
 12597  00FE  3003               	movlw	3
 12598  00FF  00A8               	movwf	??_sprintf
 12599  0100  0828               	movf	??_sprintf,w
 12600  0101  04B0               	iorwf	sprintf@flag,f
 12601  0102                     i1l3515:
 12602                           
 12603                           ;doprnt.c: 1289: val = -val;
 12604  0102  09AE               	comf	sprintf@val,f
 12605  0103  09AF               	comf	sprintf@val+1,f
 12606  0104  0AAE               	incf	sprintf@val,f
 12607  0105  1903               	skipnz
 12608  0106  0AAF               	incf	sprintf@val+1,f
 12609  0107                     i1l3517:
 12610                           
 12611                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 12612  0107  01B4               	clrf	sprintf@c
 12613  0108  0AB4               	incf	sprintf@c,f
 12614  0109                     i1l3523:
 12615                           
 12616                           ;doprnt.c: 1332: if(val < dpowers[c])
 12617  0109  0834               	movf	sprintf@c,w
 12618  010A  00A8               	movwf	??_sprintf
 12619  010B  01A9               	clrf	??_sprintf+1
 12620  010C  35A8               	lslf	??_sprintf,f
 12621  010D  0DA9               	rlf	??_sprintf+1,f
 12622  010E  300F               	movlw	low (_dpowers| (0+32768))
 12623  010F  0728               	addwf	??_sprintf,w
 12624  0110  0084               	movwf	4
 12625  0111  3090               	movlw	high (_dpowers| (0+32768))
 12626  0112  3D29               	addwfc	??_sprintf+1,w
 12627  0113  0085               	movwf	5
 12628  0114  3F00               	moviw [0]fsr0
 12629  0115  00AA               	movwf	??_sprintf+2
 12630  0116  3F01               	moviw [1]fsr0
 12631  0117  00AB               	movwf	??_sprintf+3
 12632  0118  082B               	movf	??_sprintf+3,w
 12633  0119  022F               	subwf	sprintf@val+1,w
 12634  011A  1D03               	skipz
 12635  011B  291E               	goto	u294_25
 12636  011C  082A               	movf	??_sprintf+2,w
 12637  011D  022E               	subwf	sprintf@val,w
 12638  011E                     u294_25:
 12639  011E  1803               	skipnc
 12640  011F  2921               	goto	u294_21
 12641  0120  2922               	goto	u294_20
 12642  0121                     u294_21:
 12643  0121  2923               	goto	i1l3527
 12644  0122                     u294_20:
 12645  0122  292D               	goto	i1l3529
 12646  0123                     i1l3527:
 12647  0123  3001               	movlw	1
 12648  0124  00A8               	movwf	??_sprintf
 12649  0125  0828               	movf	??_sprintf,w
 12650  0126  07B4               	addwf	sprintf@c,f
 12651  0127  3005               	movlw	5
 12652  0128  0634               	xorwf	sprintf@c,w
 12653  0129  1D03               	btfss	3,2
 12654  012A  292C               	goto	u295_21
 12655  012B  292D               	goto	u295_20
 12656  012C                     u295_21:
 12657  012C  2909               	goto	i1l3523
 12658  012D                     u295_20:
 12659  012D                     i1l3529:
 12660                           
 12661                           ;doprnt.c: 1371: if(width && flag & 0x03)
 12662  012D  0831               	movf	sprintf@width,w
 12663  012E  0432               	iorwf	sprintf@width+1,w
 12664  012F  1903               	btfsc	3,2
 12665  0130  2932               	goto	u296_21
 12666  0131  2933               	goto	u296_20
 12667  0132                     u296_21:
 12668  0132  293D               	goto	i1l1331
 12669  0133                     u296_20:
 12670  0133                     i1l3531:
 12671  0133  0830               	movf	sprintf@flag,w
 12672  0134  3903               	andlw	3
 12673  0135  1903               	btfsc	3,2
 12674  0136  2938               	goto	u297_21
 12675  0137  2939               	goto	u297_20
 12676  0138                     u297_21:
 12677  0138  293D               	goto	i1l1331
 12678  0139                     u297_20:
 12679  0139                     i1l3533:
 12680                           
 12681                           ;doprnt.c: 1372: width--;
 12682  0139  30FF               	movlw	255
 12683  013A  07B1               	addwf	sprintf@width,f
 12684  013B  30FF               	movlw	255
 12685  013C  3DB2               	addwfc	sprintf@width+1,f
 12686  013D                     i1l1331:
 12687                           
 12688                           ;doprnt.c: 1407: if(width > c)
 12689  013D  0832               	movf	sprintf@width+1,w
 12690  013E  3A80               	xorlw	128
 12691  013F  3C80               	sublw	128
 12692  0140  1D03               	skipz
 12693  0141  2944               	goto	u298_25
 12694  0142  0831               	movf	sprintf@width,w
 12695  0143  0234               	subwf	sprintf@c,w
 12696  0144                     u298_25:
 12697  0144  1803               	skipnc
 12698  0145  2947               	goto	u298_21
 12699  0146  2948               	goto	u298_20
 12700  0147                     u298_21:
 12701  0147  2951               	goto	i1l3537
 12702  0148                     u298_20:
 12703  0148                     i1l3535:
 12704                           
 12705                           ;doprnt.c: 1408: width -= c;
 12706  0148  0020               	movlb	0	; select bank0
 12707  0149  0834               	movf	sprintf@c,w
 12708  014A  00A8               	movwf	??_sprintf
 12709  014B  01A9               	clrf	??_sprintf+1
 12710  014C  0828               	movf	??_sprintf,w
 12711  014D  02B1               	subwf	sprintf@width,f
 12712  014E  0829               	movf	??_sprintf+1,w
 12713  014F  3BB2               	subwfb	sprintf@width+1,f
 12714  0150  2954               	goto	i1l3539
 12715  0151                     i1l3537:
 12716                           
 12717                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 12718  0151  0020               	movlb	0	; select bank0
 12719  0152  01B1               	clrf	sprintf@width
 12720  0153  01B2               	clrf	sprintf@width+1
 12721  0154                     i1l3539:
 12722                           
 12723                           ;doprnt.c: 1413: if(flag & 0x04) {
 12724  0154  1D30               	btfss	sprintf@flag,2
 12725  0155  2957               	goto	u299_21
 12726  0156  2958               	goto	u299_20
 12727  0157                     u299_21:
 12728  0157  2985               	goto	i1l3555
 12729  0158                     u299_20:
 12730  0158                     i1l3541:
 12731                           
 12732                           ;doprnt.c: 1418: if(flag & 0x03)
 12733  0158  0830               	movf	sprintf@flag,w
 12734  0159  3903               	andlw	3
 12735  015A  1903               	btfsc	3,2
 12736  015B  295D               	goto	u300_21
 12737  015C  295E               	goto	u300_20
 12738  015D                     u300_21:
 12739  015D  2969               	goto	i1l3547
 12740  015E                     u300_20:
 12741  015E                     i1l3543:
 12742                           
 12743                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 12744  015E  302D               	movlw	45
 12745  015F  00A8               	movwf	??_sprintf
 12746  0160  0833               	movf	sprintf@sp,w
 12747  0161  0086               	movwf	6
 12748  0162  0187               	clrf	7
 12749  0163  0828               	movf	??_sprintf,w
 12750  0164  0081               	movwf	1
 12751  0165                     i1l3545:
 12752  0165  3001               	movlw	1
 12753  0166  00A8               	movwf	??_sprintf
 12754  0167  0828               	movf	??_sprintf,w
 12755  0168  07B3               	addwf	sprintf@sp,f
 12756  0169                     i1l3547:
 12757                           
 12758                           ;doprnt.c: 1441: if(width)
 12759  0169  0831               	movf	sprintf@width,w
 12760  016A  0432               	iorwf	sprintf@width+1,w
 12761  016B  1903               	btfsc	3,2
 12762  016C  296E               	goto	u301_21
 12763  016D  296F               	goto	u301_20
 12764  016E                     u301_21:
 12765  016E  29B1               	goto	i1l3569
 12766  016F                     u301_20:
 12767  016F                     i1l3549:
 12768                           
 12769                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 12770  016F  3030               	movlw	48
 12771  0170  00A8               	movwf	??_sprintf
 12772  0171  0833               	movf	sprintf@sp,w
 12773  0172  0086               	movwf	6
 12774  0173  0187               	clrf	7
 12775  0174  0828               	movf	??_sprintf,w
 12776  0175  0081               	movwf	1
 12777  0176                     i1l3551:
 12778  0176  3001               	movlw	1
 12779  0177  00A8               	movwf	??_sprintf
 12780  0178  0828               	movf	??_sprintf,w
 12781  0179  07B3               	addwf	sprintf@sp,f
 12782  017A                     i1l3553:
 12783                           
 12784                           ;doprnt.c: 1444: while(--width);
 12785  017A  30FF               	movlw	255
 12786  017B  07B1               	addwf	sprintf@width,f
 12787  017C  30FF               	movlw	255
 12788  017D  3DB2               	addwfc	sprintf@width+1,f
 12789  017E  0831               	movf	sprintf@width,w
 12790  017F  0432               	iorwf	sprintf@width+1,w
 12791  0180  1D03               	btfss	3,2
 12792  0181  2983               	goto	u302_21
 12793  0182  2984               	goto	u302_20
 12794  0183                     u302_21:
 12795  0183  296F               	goto	i1l3549
 12796  0184                     u302_20:
 12797  0184  29B1               	goto	i1l3569
 12798  0185                     i1l3555:
 12799                           
 12800                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 12801  0185  0831               	movf	sprintf@width,w
 12802  0186  0432               	iorwf	sprintf@width+1,w
 12803  0187  1903               	btfsc	3,2
 12804  0188  298A               	goto	u303_21
 12805  0189  298B               	goto	u303_20
 12806  018A                     u303_21:
 12807  018A  29A0               	goto	i1l3563
 12808  018B                     u303_20:
 12809  018B                     i1l3557:
 12810                           
 12811                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 12812  018B  3020               	movlw	32
 12813  018C  00A8               	movwf	??_sprintf
 12814  018D  0833               	movf	sprintf@sp,w
 12815  018E  0086               	movwf	6
 12816  018F  0187               	clrf	7
 12817  0190  0828               	movf	??_sprintf,w
 12818  0191  0081               	movwf	1
 12819  0192                     i1l3559:
 12820  0192  3001               	movlw	1
 12821  0193  00A8               	movwf	??_sprintf
 12822  0194  0828               	movf	??_sprintf,w
 12823  0195  07B3               	addwf	sprintf@sp,f
 12824  0196                     i1l3561:
 12825                           
 12826                           ;doprnt.c: 1457: while(--width);
 12827  0196  30FF               	movlw	255
 12828  0197  07B1               	addwf	sprintf@width,f
 12829  0198  30FF               	movlw	255
 12830  0199  3DB2               	addwfc	sprintf@width+1,f
 12831  019A  0831               	movf	sprintf@width,w
 12832  019B  0432               	iorwf	sprintf@width+1,w
 12833  019C  1D03               	btfss	3,2
 12834  019D  299F               	goto	u304_21
 12835  019E  29A0               	goto	u304_20
 12836  019F                     u304_21:
 12837  019F  298B               	goto	i1l3557
 12838  01A0                     u304_20:
 12839  01A0                     i1l3563:
 12840                           
 12841                           ;doprnt.c: 1464: if(flag & 0x03)
 12842  01A0  0830               	movf	sprintf@flag,w
 12843  01A1  3903               	andlw	3
 12844  01A2  1903               	btfsc	3,2
 12845  01A3  29A5               	goto	u305_21
 12846  01A4  29A6               	goto	u305_20
 12847  01A5                     u305_21:
 12848  01A5  29B1               	goto	i1l3569
 12849  01A6                     u305_20:
 12850  01A6                     i1l3565:
 12851                           
 12852                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 12853  01A6  302D               	movlw	45
 12854  01A7  00A8               	movwf	??_sprintf
 12855  01A8  0833               	movf	sprintf@sp,w
 12856  01A9  0086               	movwf	6
 12857  01AA  0187               	clrf	7
 12858  01AB  0828               	movf	??_sprintf,w
 12859  01AC  0081               	movwf	1
 12860  01AD                     i1l3567:
 12861  01AD  3001               	movlw	1
 12862  01AE  00A8               	movwf	??_sprintf
 12863  01AF  0828               	movf	??_sprintf,w
 12864  01B0  07B3               	addwf	sprintf@sp,f
 12865  01B1                     i1l3569:
 12866                           
 12867                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 12868  01B1  0834               	movf	sprintf@c,w
 12869  01B2  00A8               	movwf	??_sprintf
 12870  01B3  0828               	movf	??_sprintf,w
 12871  01B4  00AD               	movwf	sprintf@prec
 12872                           
 12873                           ;doprnt.c: 1500: while(prec--) {
 12874  01B5  29E8               	goto	i1l3577
 12875  01B6                     i1l3571:
 12876                           
 12877                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 12878  01B6  300A               	movlw	10
 12879  01B7  00F8               	movwf	___lwmod@divisor
 12880  01B8  3000               	movlw	0
 12881  01B9  00F9               	movwf	___lwmod@divisor+1
 12882  01BA  082D               	movf	sprintf@prec,w
 12883  01BB  00A8               	movwf	??_sprintf
 12884  01BC  01A9               	clrf	??_sprintf+1
 12885  01BD  35A8               	lslf	??_sprintf,f
 12886  01BE  0DA9               	rlf	??_sprintf+1,f
 12887  01BF  300F               	movlw	low (_dpowers| (0+32768))
 12888  01C0  0728               	addwf	??_sprintf,w
 12889  01C1  0084               	movwf	4
 12890  01C2  3090               	movlw	high (_dpowers| (0+32768))
 12891  01C3  3D29               	addwfc	??_sprintf+1,w
 12892  01C4  0085               	movwf	5
 12893  01C5  3F00               	moviw [0]fsr0
 12894  01C6  00F0               	movwf	___lwdiv@divisor
 12895  01C7  3F01               	moviw [1]fsr0
 12896  01C8  00F1               	movwf	___lwdiv@divisor+1
 12897  01C9  082F               	movf	sprintf@val+1,w
 12898  01CA  00F3               	movwf	___lwdiv@dividend+1
 12899  01CB  082E               	movf	sprintf@val,w
 12900  01CC  00F2               	movwf	___lwdiv@dividend
 12901  01CD  318E  2690  3180   	fcall	___lwdiv
 12902  01D0  0871               	movf	?___lwdiv+1,w
 12903  01D1  00FB               	movwf	___lwmod@dividend+1
 12904  01D2  0870               	movf	?___lwdiv,w
 12905  01D3  00FA               	movwf	___lwmod@dividend
 12906  01D4  318E  265C  3180   	fcall	___lwmod
 12907  01D7  0878               	movf	?___lwmod,w
 12908  01D8  3E30               	addlw	48
 12909  01D9  0020               	movlb	0	; select bank0
 12910  01DA  00AA               	movwf	??_sprintf+2
 12911  01DB  082A               	movf	??_sprintf+2,w
 12912  01DC  00B4               	movwf	sprintf@c
 12913  01DD                     i1l3573:
 12914                           
 12915                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 12916  01DD  0834               	movf	sprintf@c,w
 12917  01DE  00A8               	movwf	??_sprintf
 12918  01DF  0833               	movf	sprintf@sp,w
 12919  01E0  0086               	movwf	6
 12920  01E1  0187               	clrf	7
 12921  01E2  0828               	movf	??_sprintf,w
 12922  01E3  0081               	movwf	1
 12923  01E4                     i1l3575:
 12924  01E4  3001               	movlw	1
 12925  01E5  00A8               	movwf	??_sprintf
 12926  01E6  0828               	movf	??_sprintf,w
 12927  01E7  07B3               	addwf	sprintf@sp,f
 12928  01E8                     i1l3577:
 12929  01E8  30FF               	movlw	255
 12930  01E9  00A8               	movwf	??_sprintf
 12931  01EA  0828               	movf	??_sprintf,w
 12932  01EB  07AD               	addwf	sprintf@prec,f
 12933  01EC  0A2D               	incf	sprintf@prec,w
 12934  01ED  1D03               	btfss	3,2
 12935  01EE  29F0               	goto	u306_21
 12936  01EF  29F1               	goto	u306_20
 12937  01F0                     u306_21:
 12938  01F0  29B6               	goto	i1l3571
 12939  01F1                     u306_20:
 12940  01F1                     i1l3579:
 12941  01F1  0821               	movf	sprintf@f+1,w
 12942  01F2  00A9               	movwf	??_sprintf+1
 12943  01F3  0820               	movf	sprintf@f,w
 12944  01F4  00A8               	movwf	??_sprintf
 12945  01F5  0AA0               	incf	sprintf@f,f
 12946  01F6  1903               	skipnz
 12947  01F7  0AA1               	incf	sprintf@f+1,f
 12948  01F8  0828               	movf	??_sprintf,w
 12949  01F9  0084               	movwf	4
 12950  01FA  0829               	movf	??_sprintf+1,w
 12951  01FB  0085               	movwf	5
 12952  01FC  0800               	movf	0,w	;code access
 12953  01FD  00AA               	movwf	??_sprintf+2
 12954  01FE  082A               	movf	??_sprintf+2,w
 12955  01FF  00B4               	movwf	sprintf@c
 12956  0200  0834               	movf	sprintf@c,w
 12957  0201  1D03               	btfss	3,2
 12958  0202  2A04               	goto	u307_21
 12959  0203  2A05               	goto	u307_20
 12960  0204                     u307_21:
 12961  0204  2874               	goto	i1l3477
 12962  0205                     u307_20:
 12963  0205                     i1l3581:
 12964                           
 12965                           ;doprnt.c: 1564: *sp = 0;
 12966  0205  0833               	movf	sprintf@sp,w
 12967  0206  0086               	movwf	6
 12968  0207  0187               	clrf	7
 12969  0208  0181               	clrf	1
 12970  0209                     i1l1348:
 12971  0209  0008               	return
 12972  020A                     __end_of_sprintf:
 12973                           
 12974                           	psect	text35
 12975  0CD1                     __ptext35:	
 12976 ;; *************** function _isdigit *****************
 12977 ;; Defined at:
 12978 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;  c               1    wreg     unsigned char 
 12981 ;; Auto vars:     Size  Location     Type
 12982 ;;  c               1    1[COMMON] unsigned char 
 12983 ;; Return value:  Size  Location     Type
 12984 ;;		None               void
 12985 ;; Registers used:
 12986 ;;		wreg, status,2, status,0
 12987 ;; Tracked objects:
 12988 ;;		On entry : 0/0
 12989 ;;		On exit  : 0/0
 12990 ;;		Unchanged: 0/0
 12991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12995 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12996 ;;Total ram usage:        2 bytes
 12997 ;; Hardware stack levels used:    1
 12998 ;; This function calls:
 12999 ;;		Nothing
 13000 ;; This function is called by:
 13001 ;;		_sprintf
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005                           
 13006                           ;psect for function _isdigit
 13007  0CD1                     _isdigit:
 13008                           
 13009                           ;incstack = 0
 13010                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13011                           ;isdigit@c stored from wreg
 13012  0CD1  00F1               	movwf	isdigit@c
 13013  0CD2                     i1l3233:
 13014  0CD2  01F0               	clrf	_isdigit$2747
 13015  0CD3                     i1l3235:
 13016  0CD3  303A               	movlw	58
 13017  0CD4  0271               	subwf	isdigit@c,w
 13018  0CD5  1803               	skipnc
 13019  0CD6  2CD8               	goto	u223_21
 13020  0CD7  2CD9               	goto	u223_20
 13021  0CD8                     u223_21:
 13022  0CD8  2CE1               	goto	i1l3241
 13023  0CD9                     u223_20:
 13024  0CD9                     i1l3237:
 13025  0CD9  3030               	movlw	48
 13026  0CDA  0271               	subwf	isdigit@c,w
 13027  0CDB  1C03               	skipc
 13028  0CDC  2CDE               	goto	u224_21
 13029  0CDD  2CDF               	goto	u224_20
 13030  0CDE                     u224_21:
 13031  0CDE  2CE1               	goto	i1l3241
 13032  0CDF                     u224_20:
 13033  0CDF                     i1l3239:
 13034  0CDF  01F0               	clrf	_isdigit$2747
 13035  0CE0  0AF0               	incf	_isdigit$2747,f
 13036  0CE1                     i1l3241:
 13037  0CE1  0C70               	rrf	_isdigit$2747,w
 13038  0CE2                     i1l1805:
 13039  0CE2  0008               	return
 13040  0CE3                     __end_of_isdigit:
 13041                           
 13042                           	psect	text36
 13043  0DB1                     __ptext36:	
 13044 ;; *************** function ___wmul *****************
 13045 ;; Defined at:
 13046 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 13047 ;; Parameters:    Size  Location     Type
 13048 ;;  multiplier      2    0[COMMON] unsigned int 
 13049 ;;  multiplicand    2    2[COMMON] unsigned int 
 13050 ;; Auto vars:     Size  Location     Type
 13051 ;;  product         2    4[COMMON] unsigned int 
 13052 ;; Return value:  Size  Location     Type
 13053 ;;                  2    0[COMMON] unsigned int 
 13054 ;; Registers used:
 13055 ;;		wreg, status,2, status,0
 13056 ;; Tracked objects:
 13057 ;;		On entry : 0/0
 13058 ;;		On exit  : 0/0
 13059 ;;		Unchanged: 0/0
 13060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13064 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13065 ;;Total ram usage:        6 bytes
 13066 ;; Hardware stack levels used:    1
 13067 ;; This function calls:
 13068 ;;		Nothing
 13069 ;; This function is called by:
 13070 ;;		_map
 13071 ;;		_sprintf
 13072 ;; This function uses a non-reentrant model
 13073 ;;
 13074                           
 13075                           
 13076                           ;psect for function ___wmul
 13077  0DB1                     ___wmul:
 13078  0DB1                     i1l3245:	
 13079                           ;incstack = 0
 13080                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13081                           
 13082  0DB1  01F4               	clrf	___wmul@product
 13083  0DB2  01F5               	clrf	___wmul@product+1
 13084  0DB3                     i1l3247:
 13085  0DB3  1C70               	btfss	___wmul@multiplier,0
 13086  0DB4  2DB6               	goto	u225_21
 13087  0DB5  2DB7               	goto	u225_20
 13088  0DB6                     u225_21:
 13089  0DB6  2DBB               	goto	i1l1352
 13090  0DB7                     u225_20:
 13091  0DB7                     i1l3249:
 13092  0DB7  0872               	movf	___wmul@multiplicand,w
 13093  0DB8  07F4               	addwf	___wmul@product,f
 13094  0DB9  0873               	movf	___wmul@multiplicand+1,w
 13095  0DBA  3DF5               	addwfc	___wmul@product+1,f
 13096  0DBB                     i1l1352:
 13097  0DBB  3001               	movlw	1
 13098  0DBC                     u226_25:
 13099  0DBC  35F2               	lslf	___wmul@multiplicand,f
 13100  0DBD  0DF3               	rlf	___wmul@multiplicand+1,f
 13101  0DBE  0B89               	decfsz	9,f
 13102  0DBF  2DBC               	goto	u226_25
 13103  0DC0                     i1l3251:
 13104  0DC0  3001               	movlw	1
 13105  0DC1                     u227_25:
 13106  0DC1  36F1               	lsrf	___wmul@multiplier+1,f
 13107  0DC2  0CF0               	rrf	___wmul@multiplier,f
 13108  0DC3  0B89               	decfsz	9,f
 13109  0DC4  2DC1               	goto	u227_25
 13110  0DC5                     i1l3253:
 13111  0DC5  0870               	movf	___wmul@multiplier,w
 13112  0DC6  0471               	iorwf	___wmul@multiplier+1,w
 13113  0DC7  1D03               	btfss	3,2
 13114  0DC8  2DCA               	goto	u228_21
 13115  0DC9  2DCB               	goto	u228_20
 13116  0DCA                     u228_21:
 13117  0DCA  2DB3               	goto	i1l3247
 13118  0DCB                     u228_20:
 13119  0DCB                     i1l3255:
 13120  0DCB  0875               	movf	___wmul@product+1,w
 13121  0DCC  00F1               	movwf	?___wmul+1
 13122  0DCD  0874               	movf	___wmul@product,w
 13123  0DCE  00F0               	movwf	?___wmul
 13124  0DCF                     i1l1354:
 13125  0DCF  0008               	return
 13126  0DD0                     __end_of___wmul:
 13127                           
 13128                           	psect	text37
 13129  0E5C                     __ptext37:	
 13130 ;; *************** function ___lwmod *****************
 13131 ;; Defined at:
 13132 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 13133 ;; Parameters:    Size  Location     Type
 13134 ;;  divisor         2    8[COMMON] unsigned int 
 13135 ;;  dividend        2   10[COMMON] unsigned int 
 13136 ;; Auto vars:     Size  Location     Type
 13137 ;;  counter         1   13[COMMON] unsigned char 
 13138 ;; Return value:  Size  Location     Type
 13139 ;;                  2    8[COMMON] unsigned int 
 13140 ;; Registers used:
 13141 ;;		wreg, status,2, status,0
 13142 ;; Tracked objects:
 13143 ;;		On entry : 0/0
 13144 ;;		On exit  : 0/0
 13145 ;;		Unchanged: 0/0
 13146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13150 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13151 ;;Total ram usage:        6 bytes
 13152 ;; Hardware stack levels used:    1
 13153 ;; This function calls:
 13154 ;;		Nothing
 13155 ;; This function is called by:
 13156 ;;		_sprintf
 13157 ;; This function uses a non-reentrant model
 13158 ;;
 13159                           
 13160                           
 13161                           ;psect for function ___lwmod
 13162  0E5C                     ___lwmod:
 13163  0E5C                     i1l3329:	
 13164                           ;incstack = 0
 13165                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13166                           
 13167  0E5C  0878               	movf	___lwmod@divisor,w
 13168  0E5D  0479               	iorwf	___lwmod@divisor+1,w
 13169  0E5E  1903               	btfsc	3,2
 13170  0E5F  2E61               	goto	u246_21
 13171  0E60  2E62               	goto	u246_20
 13172  0E61                     u246_21:
 13173  0E61  2E8B               	goto	i1l3347
 13174  0E62                     u246_20:
 13175  0E62                     i1l3331:
 13176  0E62  01FD               	clrf	___lwmod@counter
 13177  0E63  0AFD               	incf	___lwmod@counter,f
 13178  0E64  2E6E               	goto	i1l3337
 13179  0E65                     i1l3333:
 13180  0E65  3001               	movlw	1
 13181  0E66                     u247_25:
 13182  0E66  35F8               	lslf	___lwmod@divisor,f
 13183  0E67  0DF9               	rlf	___lwmod@divisor+1,f
 13184  0E68  0B89               	decfsz	9,f
 13185  0E69  2E66               	goto	u247_25
 13186  0E6A                     i1l3335:
 13187  0E6A  3001               	movlw	1
 13188  0E6B  00FC               	movwf	??___lwmod
 13189  0E6C  087C               	movf	??___lwmod,w
 13190  0E6D  07FD               	addwf	___lwmod@counter,f
 13191  0E6E                     i1l3337:
 13192  0E6E  1FF9               	btfss	___lwmod@divisor+1,7
 13193  0E6F  2E71               	goto	u248_21
 13194  0E70  2E72               	goto	u248_20
 13195  0E71                     u248_21:
 13196  0E71  2E65               	goto	i1l3333
 13197  0E72                     u248_20:
 13198  0E72                     i1l3339:
 13199  0E72  0879               	movf	___lwmod@divisor+1,w
 13200  0E73  027B               	subwf	___lwmod@dividend+1,w
 13201  0E74  1D03               	skipz
 13202  0E75  2E78               	goto	u249_25
 13203  0E76  0878               	movf	___lwmod@divisor,w
 13204  0E77  027A               	subwf	___lwmod@dividend,w
 13205  0E78                     u249_25:
 13206  0E78  1C03               	skipc
 13207  0E79  2E7B               	goto	u249_21
 13208  0E7A  2E7C               	goto	u249_20
 13209  0E7B                     u249_21:
 13210  0E7B  2E80               	goto	i1l3343
 13211  0E7C                     u249_20:
 13212  0E7C                     i1l3341:
 13213  0E7C  0878               	movf	___lwmod@divisor,w
 13214  0E7D  02FA               	subwf	___lwmod@dividend,f
 13215  0E7E  0879               	movf	___lwmod@divisor+1,w
 13216  0E7F  3BFB               	subwfb	___lwmod@dividend+1,f
 13217  0E80                     i1l3343:
 13218  0E80  3001               	movlw	1
 13219  0E81                     u250_25:
 13220  0E81  36F9               	lsrf	___lwmod@divisor+1,f
 13221  0E82  0CF8               	rrf	___lwmod@divisor,f
 13222  0E83  0B89               	decfsz	9,f
 13223  0E84  2E81               	goto	u250_25
 13224  0E85                     i1l3345:
 13225  0E85  3001               	movlw	1
 13226  0E86  02FD               	subwf	___lwmod@counter,f
 13227  0E87  1D03               	btfss	3,2
 13228  0E88  2E8A               	goto	u251_21
 13229  0E89  2E8B               	goto	u251_20
 13230  0E8A                     u251_21:
 13231  0E8A  2E72               	goto	i1l3339
 13232  0E8B                     u251_20:
 13233  0E8B                     i1l3347:
 13234  0E8B  087B               	movf	___lwmod@dividend+1,w
 13235  0E8C  00F9               	movwf	?___lwmod+1
 13236  0E8D  087A               	movf	___lwmod@dividend,w
 13237  0E8E  00F8               	movwf	?___lwmod
 13238  0E8F                     i1l1634:
 13239  0E8F  0008               	return
 13240  0E90                     __end_of___lwmod:
 13241                           
 13242                           	psect	text38
 13243  0E90                     __ptext38:	
 13244 ;; *************** function ___lwdiv *****************
 13245 ;; Defined at:
 13246 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 13247 ;; Parameters:    Size  Location     Type
 13248 ;;  divisor         2    0[COMMON] unsigned int 
 13249 ;;  dividend        2    2[COMMON] unsigned int 
 13250 ;; Auto vars:     Size  Location     Type
 13251 ;;  quotient        2    5[COMMON] unsigned int 
 13252 ;;  counter         1    7[COMMON] unsigned char 
 13253 ;; Return value:  Size  Location     Type
 13254 ;;                  2    0[COMMON] unsigned int 
 13255 ;; Registers used:
 13256 ;;		wreg, status,2, status,0
 13257 ;; Tracked objects:
 13258 ;;		On entry : 0/0
 13259 ;;		On exit  : 0/0
 13260 ;;		Unchanged: 0/0
 13261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13263 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13264 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13265 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13266 ;;Total ram usage:        8 bytes
 13267 ;; Hardware stack levels used:    1
 13268 ;; This function calls:
 13269 ;;		Nothing
 13270 ;; This function is called by:
 13271 ;;		_sprintf
 13272 ;; This function uses a non-reentrant model
 13273 ;;
 13274                           
 13275                           
 13276                           ;psect for function ___lwdiv
 13277  0E90                     ___lwdiv:
 13278  0E90                     i1l3303:	
 13279                           ;incstack = 0
 13280                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13281                           
 13282  0E90  01F5               	clrf	___lwdiv@quotient
 13283  0E91  01F6               	clrf	___lwdiv@quotient+1
 13284  0E92                     i1l3305:
 13285  0E92  0870               	movf	___lwdiv@divisor,w
 13286  0E93  0471               	iorwf	___lwdiv@divisor+1,w
 13287  0E94  1903               	btfsc	3,2
 13288  0E95  2E97               	goto	u239_21
 13289  0E96  2E98               	goto	u239_20
 13290  0E97                     u239_21:
 13291  0E97  2EC7               	goto	i1l3325
 13292  0E98                     u239_20:
 13293  0E98                     i1l3307:
 13294  0E98  01F7               	clrf	___lwdiv@counter
 13295  0E99  0AF7               	incf	___lwdiv@counter,f
 13296  0E9A  2EA4               	goto	i1l3313
 13297  0E9B                     i1l3309:
 13298  0E9B  3001               	movlw	1
 13299  0E9C                     u240_25:
 13300  0E9C  35F0               	lslf	___lwdiv@divisor,f
 13301  0E9D  0DF1               	rlf	___lwdiv@divisor+1,f
 13302  0E9E  0B89               	decfsz	9,f
 13303  0E9F  2E9C               	goto	u240_25
 13304  0EA0                     i1l3311:
 13305  0EA0  3001               	movlw	1
 13306  0EA1  00F4               	movwf	??___lwdiv
 13307  0EA2  0874               	movf	??___lwdiv,w
 13308  0EA3  07F7               	addwf	___lwdiv@counter,f
 13309  0EA4                     i1l3313:
 13310  0EA4  1FF1               	btfss	___lwdiv@divisor+1,7
 13311  0EA5  2EA7               	goto	u241_21
 13312  0EA6  2EA8               	goto	u241_20
 13313  0EA7                     u241_21:
 13314  0EA7  2E9B               	goto	i1l3309
 13315  0EA8                     u241_20:
 13316  0EA8                     i1l3315:
 13317  0EA8  3001               	movlw	1
 13318  0EA9                     u242_25:
 13319  0EA9  35F5               	lslf	___lwdiv@quotient,f
 13320  0EAA  0DF6               	rlf	___lwdiv@quotient+1,f
 13321  0EAB  0B89               	decfsz	9,f
 13322  0EAC  2EA9               	goto	u242_25
 13323  0EAD  0871               	movf	___lwdiv@divisor+1,w
 13324  0EAE  0273               	subwf	___lwdiv@dividend+1,w
 13325  0EAF  1D03               	skipz
 13326  0EB0  2EB3               	goto	u243_25
 13327  0EB1  0870               	movf	___lwdiv@divisor,w
 13328  0EB2  0272               	subwf	___lwdiv@dividend,w
 13329  0EB3                     u243_25:
 13330  0EB3  1C03               	skipc
 13331  0EB4  2EB6               	goto	u243_21
 13332  0EB5  2EB7               	goto	u243_20
 13333  0EB6                     u243_21:
 13334  0EB6  2EBC               	goto	i1l3321
 13335  0EB7                     u243_20:
 13336  0EB7                     i1l3317:
 13337  0EB7  0870               	movf	___lwdiv@divisor,w
 13338  0EB8  02F2               	subwf	___lwdiv@dividend,f
 13339  0EB9  0871               	movf	___lwdiv@divisor+1,w
 13340  0EBA  3BF3               	subwfb	___lwdiv@dividend+1,f
 13341  0EBB                     i1l3319:
 13342  0EBB  1475               	bsf	___lwdiv@quotient,0
 13343  0EBC                     i1l3321:
 13344  0EBC  3001               	movlw	1
 13345  0EBD                     u244_25:
 13346  0EBD  36F1               	lsrf	___lwdiv@divisor+1,f
 13347  0EBE  0CF0               	rrf	___lwdiv@divisor,f
 13348  0EBF  0B89               	decfsz	9,f
 13349  0EC0  2EBD               	goto	u244_25
 13350  0EC1                     i1l3323:
 13351  0EC1  3001               	movlw	1
 13352  0EC2  02F7               	subwf	___lwdiv@counter,f
 13353  0EC3  1D03               	btfss	3,2
 13354  0EC4  2EC6               	goto	u245_21
 13355  0EC5  2EC7               	goto	u245_20
 13356  0EC6                     u245_21:
 13357  0EC6  2EA8               	goto	i1l3315
 13358  0EC7                     u245_20:
 13359  0EC7                     i1l3325:
 13360  0EC7  0876               	movf	___lwdiv@quotient+1,w
 13361  0EC8  00F1               	movwf	?___lwdiv+1
 13362  0EC9  0875               	movf	___lwdiv@quotient,w
 13363  0ECA  00F0               	movwf	?___lwdiv
 13364  0ECB                     i1l1624:
 13365  0ECB  0008               	return
 13366  0ECC                     __end_of___lwdiv:
 13367                           
 13368                           	psect	text39
 13369  0645                     __ptext39:	
 13370 ;; *************** function _differenceBetweenTimePeriod *****************
 13371 ;; Defined at:
 13372 ;;		line 208 in file "main.c"
 13373 ;; Parameters:    Size  Location     Type
 13374 ;;  start           6    0[COMMON] struct Time
 13375 ;;  stop            6    6[COMMON] struct Time
 13376 ;;  diff            1   12[COMMON] PTR struct Time
 13377 ;;		 -> menuLCD_ISR@diff(6), 
 13378 ;; Auto vars:     Size  Location     Type
 13379 ;;		None
 13380 ;; Return value:  Size  Location     Type
 13381 ;;                  1    wreg      void 
 13382 ;; Registers used:
 13383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 13384 ;; Tracked objects:
 13385 ;;		On entry : 0/0
 13386 ;;		On exit  : 0/0
 13387 ;;		Unchanged: 0/0
 13388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13389 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13392 ;;      Totals:        13       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;Total ram usage:       15 bytes
 13394 ;; Hardware stack levels used:    1
 13395 ;; This function calls:
 13396 ;;		Nothing
 13397 ;; This function is called by:
 13398 ;;		_menuLCD_ISR
 13399 ;; This function uses a non-reentrant model
 13400 ;;
 13401                           
 13402                           
 13403                           ;psect for function _differenceBetweenTimePeriod
 13404  0645                     _differenceBetweenTimePeriod:
 13405  0645                     i1l3459:	
 13406                           ;incstack = 0
 13407                           ; Regs used in _differenceBetweenTimePeriod: [wreg-fsr1h+status,2+status,0]
 13408                           
 13409                           
 13410                           ;main.c: 211: while (stop.s > start.s) {
 13411  0645  2E4E               	goto	i1l927
 13412  0646                     i1l3461:
 13413                           
 13414                           ;main.c: 212: --start.m;
 13415  0646  30FF               	movlw	255
 13416  0647  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 13417  0648  30FF               	movlw	255
 13418  0649  3DF3               	addwfc	differenceBetweenTimePeriod@start+3,f
 13419                           
 13420                           ;main.c: 213: start.s += 60;
 13421  064A  303C               	movlw	60
 13422  064B  07F4               	addwf	differenceBetweenTimePeriod@start+4,f
 13423  064C  3000               	movlw	0
 13424  064D  3DF5               	addwfc	differenceBetweenTimePeriod@start+5,f
 13425  064E                     i1l927:
 13426  064E  0875               	movf	differenceBetweenTimePeriod@start+5,w
 13427  064F  3A80               	xorlw	128
 13428  0650  0020               	movlb	0	; select bank0
 13429  0651  00A0               	movwf	??_differenceBetweenTimePeriod
 13430  0652  087B               	movf	differenceBetweenTimePeriod@stop+5,w
 13431  0653  3A80               	xorlw	128
 13432  0654  0220               	subwf	??_differenceBetweenTimePeriod,w
 13433  0655  1D03               	skipz
 13434  0656  2E59               	goto	u288_25
 13435  0657  087A               	movf	differenceBetweenTimePeriod@stop+4,w
 13436  0658  0274               	subwf	differenceBetweenTimePeriod@start+4,w
 13437  0659                     u288_25:
 13438  0659  1C03               	skipc
 13439  065A  2E5C               	goto	u288_21
 13440  065B  2E5D               	goto	u288_20
 13441  065C                     u288_21:
 13442  065C  2E46               	goto	i1l3461
 13443  065D                     u288_20:
 13444  065D                     i1l3463:
 13445                           
 13446                           ;main.c: 214: };main.c: 215: diff->s = start.s - stop.s;
 13447  065D  3004               	movlw	4
 13448  065E  3E76               	addlw	(low (differenceBetweenTimePeriod@stop| 0))& (0+255)
 13449  065F  0086               	movwf	6
 13450  0660  0187               	clrf	7
 13451  0661  3004               	movlw	4
 13452  0662  3E70               	addlw	(low (differenceBetweenTimePeriod@start| 0))& (0+255)
 13453  0663  0084               	movwf	4
 13454  0664  0185               	clrf	5
 13455  0665  3F40               	moviw [0]fsr1
 13456  0666  0200               	subwf	0,w
 13457  0667  0020               	movlb	0	; select bank0
 13458  0668  00A0               	movwf	??_differenceBetweenTimePeriod
 13459  0669  3101               	addfsr 0,1
 13460  066A  3F41               	moviw [1]fsr1
 13461  066B  3B00               	subwfb	0,w
 13462  066C  00A1               	movwf	??_differenceBetweenTimePeriod+1
 13463  066D  087C               	movf	differenceBetweenTimePeriod@diff,w
 13464  066E  3E04               	addlw	4
 13465  066F  0086               	movwf	6
 13466  0670  0187               	clrf	7
 13467  0671  0820               	movf	??_differenceBetweenTimePeriod,w
 13468  0672  3FC0               	movwi [0]fsr1
 13469  0673  0821               	movf	??_differenceBetweenTimePeriod+1,w
 13470  0674  3FC1               	movwi [1]fsr1
 13471                           
 13472                           ;main.c: 216: while (stop.m > start.m) {
 13473  0675  2E7E               	goto	i1l930
 13474  0676                     i1l3465:
 13475                           
 13476                           ;main.c: 217: --start.h;
 13477  0676  30FF               	movlw	255
 13478  0677  07F0               	addwf	differenceBetweenTimePeriod@start,f
 13479  0678  30FF               	movlw	255
 13480  0679  3DF1               	addwfc	differenceBetweenTimePeriod@start+1,f
 13481                           
 13482                           ;main.c: 218: start.m += 60;
 13483  067A  303C               	movlw	60
 13484  067B  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 13485  067C  3000               	movlw	0
 13486  067D  3DF3               	addwfc	differenceBetweenTimePeriod@start+3,f
 13487  067E                     i1l930:
 13488  067E  0873               	movf	differenceBetweenTimePeriod@start+3,w
 13489  067F  3A80               	xorlw	128
 13490  0680  0020               	movlb	0	; select bank0
 13491  0681  00A0               	movwf	??_differenceBetweenTimePeriod
 13492  0682  0879               	movf	differenceBetweenTimePeriod@stop+3,w
 13493  0683  3A80               	xorlw	128
 13494  0684  0220               	subwf	??_differenceBetweenTimePeriod,w
 13495  0685  1D03               	skipz
 13496  0686  2E89               	goto	u289_25
 13497  0687  0878               	movf	differenceBetweenTimePeriod@stop+2,w
 13498  0688  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 13499  0689                     u289_25:
 13500  0689  1C03               	skipc
 13501  068A  2E8C               	goto	u289_21
 13502  068B  2E8D               	goto	u289_20
 13503  068C                     u289_21:
 13504  068C  2E76               	goto	i1l3465
 13505  068D                     u289_20:
 13506  068D                     i1l3467:
 13507                           
 13508                           ;main.c: 219: };main.c: 220: diff->m = start.m - stop.m;
 13509  068D  3002               	movlw	2
 13510  068E  3E76               	addlw	(low (differenceBetweenTimePeriod@stop| 0))& (0+255)
 13511  068F  0086               	movwf	6
 13512  0690  0187               	clrf	7
 13513  0691  3002               	movlw	2
 13514  0692  3E70               	addlw	(low (differenceBetweenTimePeriod@start| 0))& (0+255)
 13515  0693  0084               	movwf	4
 13516  0694  0185               	clrf	5
 13517  0695  3F40               	moviw [0]fsr1
 13518  0696  0200               	subwf	0,w
 13519  0697  0020               	movlb	0	; select bank0
 13520  0698  00A0               	movwf	??_differenceBetweenTimePeriod
 13521  0699  3101               	addfsr 0,1
 13522  069A  3F41               	moviw [1]fsr1
 13523  069B  3B00               	subwfb	0,w
 13524  069C  00A1               	movwf	??_differenceBetweenTimePeriod+1
 13525  069D  087C               	movf	differenceBetweenTimePeriod@diff,w
 13526  069E  3E02               	addlw	2
 13527  069F  0086               	movwf	6
 13528  06A0  0187               	clrf	7
 13529  06A1  0820               	movf	??_differenceBetweenTimePeriod,w
 13530  06A2  3FC0               	movwi [0]fsr1
 13531  06A3  0821               	movf	??_differenceBetweenTimePeriod+1,w
 13532  06A4  3FC1               	movwi [1]fsr1
 13533  06A5                     i1l3469:
 13534                           
 13535                           ;main.c: 221: diff->h = start.h - stop.h;
 13536  06A5  0876               	movf	differenceBetweenTimePeriod@stop,w
 13537  06A6  0270               	subwf	differenceBetweenTimePeriod@start,w
 13538  06A7  00A0               	movwf	??_differenceBetweenTimePeriod
 13539  06A8  0877               	movf	differenceBetweenTimePeriod@stop+1,w
 13540  06A9  3B71               	subwfb	differenceBetweenTimePeriod@start+1,w
 13541  06AA  00A1               	movwf	??_differenceBetweenTimePeriod+1
 13542  06AB  087C               	movf	differenceBetweenTimePeriod@diff,w
 13543  06AC  0086               	movwf	6
 13544  06AD  0187               	clrf	7
 13545  06AE  0820               	movf	??_differenceBetweenTimePeriod,w
 13546  06AF  3FC0               	movwi [0]fsr1
 13547  06B0  0821               	movf	??_differenceBetweenTimePeriod+1,w
 13548  06B1  3FC1               	movwi [1]fsr1
 13549  06B2                     i1l933:
 13550  06B2  0008               	return
 13551  06B3                     __end_of_differenceBetweenTimePeriod:
 13552                           
 13553                           	psect	text40
 13554  0C1D                     __ptext40:	
 13555 ;; *************** function _TMR2_StartTimer *****************
 13556 ;; Defined at:
 13557 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 13558 ;; Parameters:    Size  Location     Type
 13559 ;;		None
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;		None
 13562 ;; Return value:  Size  Location     Type
 13563 ;;                  1    wreg      void 
 13564 ;; Registers used:
 13565 ;;		status,2, status,0, pclath, cstack
 13566 ;; Tracked objects:
 13567 ;;		On entry : 0/0
 13568 ;;		On exit  : 0/0
 13569 ;;		Unchanged: 0/0
 13570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13575 ;;Total ram usage:        0 bytes
 13576 ;; Hardware stack levels used:    1
 13577 ;; Hardware stack levels required when called:    1
 13578 ;; This function calls:
 13579 ;;		_TMR2_Start
 13580 ;; This function is called by:
 13581 ;;		_menuLCD_ISR
 13582 ;; This function uses a non-reentrant model
 13583 ;;
 13584                           
 13585                           
 13586                           ;psect for function _TMR2_StartTimer
 13587  0C1D                     _TMR2_StartTimer:
 13588  0C1D                     i1l3585:	
 13589                           ;incstack = 0
 13590                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 13591                           
 13592                           
 13593                           ;tmr2.c: 108: TMR2_Start();
 13594  0C1D  318C  2417  318C   	fcall	_TMR2_Start
 13595  0C20                     i1l1121:
 13596  0C20  0008               	return
 13597  0C21                     __end_of_TMR2_StartTimer:
 13598                           
 13599                           	psect	text41
 13600  0C17                     __ptext41:	
 13601 ;; *************** function _TMR2_Start *****************
 13602 ;; Defined at:
 13603 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 13604 ;; Parameters:    Size  Location     Type
 13605 ;;		None
 13606 ;; Auto vars:     Size  Location     Type
 13607 ;;		None
 13608 ;; Return value:  Size  Location     Type
 13609 ;;                  1    wreg      void 
 13610 ;; Registers used:
 13611 ;;		None
 13612 ;; Tracked objects:
 13613 ;;		On entry : 0/0
 13614 ;;		On exit  : 0/0
 13615 ;;		Unchanged: 0/0
 13616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13621 ;;Total ram usage:        0 bytes
 13622 ;; Hardware stack levels used:    1
 13623 ;; This function calls:
 13624 ;;		Nothing
 13625 ;; This function is called by:
 13626 ;;		_TMR2_StartTimer
 13627 ;; This function uses a non-reentrant model
 13628 ;;
 13629                           
 13630                           
 13631                           ;psect for function _TMR2_Start
 13632  0C17                     _TMR2_Start:
 13633  0C17                     i1l3231:	
 13634                           ;incstack = 0
 13635                           ; Regs used in _TMR2_Start: []
 13636                           
 13637                           
 13638                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 13639  0C17  0025               	movlb	5	; select bank5
 13640  0C18  178E               	bsf	14,7	;volatile
 13641  0C19                     i1l1118:
 13642  0C19  0008               	return
 13643  0C1A                     __end_of_TMR2_Start:
 13644                           
 13645                           	psect	text42
 13646  0D09                     __ptext42:	
 13647 ;; *************** function _PWM6_LoadDutyValue *****************
 13648 ;; Defined at:
 13649 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 13650 ;; Parameters:    Size  Location     Type
 13651 ;;  dutyValue       2    0[COMMON] unsigned int 
 13652 ;; Auto vars:     Size  Location     Type
 13653 ;;		None
 13654 ;; Return value:  Size  Location     Type
 13655 ;;                  1    wreg      void 
 13656 ;; Registers used:
 13657 ;;		wreg, status,2, status,0
 13658 ;; Tracked objects:
 13659 ;;		On entry : 0/0
 13660 ;;		On exit  : 0/0
 13661 ;;		Unchanged: 0/0
 13662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13665 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13667 ;;Total ram usage:        4 bytes
 13668 ;; Hardware stack levels used:    1
 13669 ;; This function calls:
 13670 ;;		Nothing
 13671 ;; This function is called by:
 13672 ;;		_menuLCD_ISR
 13673 ;; This function uses a non-reentrant model
 13674 ;;
 13675                           
 13676                           
 13677                           ;psect for function _PWM6_LoadDutyValue
 13678  0D09                     _PWM6_LoadDutyValue:
 13679  0D09                     i1l3587:	
 13680                           ;incstack = 0
 13681                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 13682                           
 13683                           
 13684                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 13685  0D09  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 13686  0D0A  00F3               	movwf	??_PWM6_LoadDutyValue+1
 13687  0D0B  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 13688  0D0C  00F2               	movwf	??_PWM6_LoadDutyValue
 13689  0D0D  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 13690  0D0E  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 13691  0D0F  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 13692  0D10  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 13693  0D11  0872               	movf	??_PWM6_LoadDutyValue,w
 13694  0D12  0027               	movlb	7	; select bank7
 13695  0D13  008D               	movwf	13	;volatile
 13696                           
 13697                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 13698  0D14  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 13699  0D15  3903               	andlw	3
 13700  0D16  00F2               	movwf	??_PWM6_LoadDutyValue
 13701  0D17  3005               	movlw	5
 13702  0D18                     u308_25:
 13703  0D18  35F2               	lslf	??_PWM6_LoadDutyValue,f
 13704  0D19  3EFF               	addlw	-1
 13705  0D1A  1D03               	skipz
 13706  0D1B  2D18               	goto	u308_25
 13707  0D1C  3572               	lslf	??_PWM6_LoadDutyValue,w
 13708  0D1D  008C               	movwf	12	;volatile
 13709  0D1E                     i1l1082:
 13710  0D1E  0008               	return
 13711  0D1F                     __end_of_PWM6_LoadDutyValue:
 13712                           
 13713                           	psect	text43
 13714  0CF5                     __ptext43:	
 13715 ;; *************** function _LCDstr *****************
 13716 ;; Defined at:
 13717 ;;		line 188 in file "main.c"
 13718 ;; Parameters:    Size  Location     Type
 13719 ;;  p               1    wreg     PTR unsigned char 
 13720 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 13721 ;; Auto vars:     Size  Location     Type
 13722 ;;  p               1   11[COMMON] PTR unsigned char 
 13723 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 13724 ;;  c               1   10[COMMON] unsigned char 
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  1    wreg      void 
 13727 ;; Registers used:
 13728 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13737 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13738 ;;Total ram usage:        3 bytes
 13739 ;; Hardware stack levels used:    1
 13740 ;; Hardware stack levels required when called:    3
 13741 ;; This function calls:
 13742 ;;		_LCDchar
 13743 ;; This function is called by:
 13744 ;;		_menuLCD_ISR
 13745 ;; This function uses a non-reentrant model
 13746 ;;
 13747                           
 13748                           
 13749                           ;psect for function _LCDstr
 13750  0CF5                     _LCDstr:
 13751                           
 13752                           ;incstack = 0
 13753                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13754                           ;LCDstr@p stored from wreg
 13755  0CF5  00FB               	movwf	LCDstr@p
 13756  0CF6                     i1l3453:
 13757                           
 13758                           ;main.c: 190: unsigned char c;;main.c: 192: while((c = *p++)) LCDchar(c);
 13759  0CF6  2CFB               	goto	i1l3457
 13760  0CF7                     i1l3455:
 13761  0CF7  087A               	movf	LCDstr@c,w
 13762  0CF8  318C  2440  318C   	fcall	_LCDchar
 13763  0CFB                     i1l3457:
 13764  0CFB  087B               	movf	LCDstr@p,w
 13765  0CFC  0086               	movwf	6
 13766  0CFD  0187               	clrf	7
 13767  0CFE  0AFB               	incf	LCDstr@p,f
 13768  0CFF  0801               	movf	1,w
 13769  0D00  00F9               	movwf	??_LCDstr
 13770  0D01  0879               	movf	??_LCDstr,w
 13771  0D02  00FA               	movwf	LCDstr@c
 13772  0D03  087A               	movf	LCDstr@c,w
 13773  0D04  1D03               	btfss	3,2
 13774  0D05  2D07               	goto	u287_21
 13775  0D06  2D08               	goto	u287_20
 13776  0D07                     u287_21:
 13777  0D07  2CF7               	goto	i1l3455
 13778  0D08                     u287_20:
 13779  0D08                     i1l920:
 13780  0D08  0008               	return
 13781  0D09                     __end_of_LCDstr:
 13782                           
 13783                           	psect	text44
 13784  0C40                     __ptext44:	
 13785 ;; *************** function _LCDchar *****************
 13786 ;; Defined at:
 13787 ;;		line 183 in file "main.c"
 13788 ;; Parameters:    Size  Location     Type
 13789 ;;  c               1    wreg     unsigned char 
 13790 ;; Auto vars:     Size  Location     Type
 13791 ;;  c               1    8[COMMON] unsigned char 
 13792 ;; Return value:  Size  Location     Type
 13793 ;;                  1    wreg      void 
 13794 ;; Registers used:
 13795 ;;		wreg, status,2, status,0, pclath, cstack
 13796 ;; Tracked objects:
 13797 ;;		On entry : 0/0
 13798 ;;		On exit  : 0/0
 13799 ;;		Unchanged: 0/0
 13800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13805 ;;Total ram usage:        1 bytes
 13806 ;; Hardware stack levels used:    1
 13807 ;; Hardware stack levels required when called:    2
 13808 ;; This function calls:
 13809 ;;		i1_LCDsend2x4
 13810 ;; This function is called by:
 13811 ;;		_LCDstr
 13812 ;;		_menuLCD_ISR
 13813 ;; This function uses a non-reentrant model
 13814 ;;
 13815                           
 13816                           
 13817                           ;psect for function _LCDchar
 13818  0C40                     _LCDchar:
 13819                           
 13820                           ;incstack = 0
 13821                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 13822                           ;LCDchar@c stored from wreg
 13823  0C40  00F8               	movwf	LCDchar@c
 13824  0C41                     i1l3229:
 13825                           
 13826                           ;main.c: 185: LCDsend2x4(c, 0x01);
 13827  0C41  01F2               	clrf	i1LCDsend2x4@mode
 13828  0C42  0AF2               	incf	i1LCDsend2x4@mode,f
 13829  0C43  0878               	movf	LCDchar@c,w
 13830  0C44  3185  251C  318C   	fcall	i1_LCDsend2x4
 13831  0C47                     i1l914:
 13832  0C47  0008               	return
 13833  0C48                     __end_of_LCDchar:
 13834                           
 13835                           	psect	text45
 13836  0C39                     __ptext45:	
 13837 ;; *************** function _LCDcmd *****************
 13838 ;; Defined at:
 13839 ;;		line 178 in file "main.c"
 13840 ;; Parameters:    Size  Location     Type
 13841 ;;  c               1    wreg     unsigned char 
 13842 ;; Auto vars:     Size  Location     Type
 13843 ;;  c               1    8[COMMON] unsigned char 
 13844 ;; Return value:  Size  Location     Type
 13845 ;;                  1    wreg      void 
 13846 ;; Registers used:
 13847 ;;		wreg, status,2, status,0, pclath, cstack
 13848 ;; Tracked objects:
 13849 ;;		On entry : 0/0
 13850 ;;		On exit  : 0/0
 13851 ;;		Unchanged: 0/0
 13852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13857 ;;Total ram usage:        1 bytes
 13858 ;; Hardware stack levels used:    1
 13859 ;; Hardware stack levels required when called:    2
 13860 ;; This function calls:
 13861 ;;		i1_LCDsend2x4
 13862 ;; This function is called by:
 13863 ;;		_menuLCD_ISR
 13864 ;; This function uses a non-reentrant model
 13865 ;;
 13866                           
 13867                           
 13868                           ;psect for function _LCDcmd
 13869  0C39                     _LCDcmd:
 13870                           
 13871                           ;incstack = 0
 13872                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 13873                           ;LCDcmd@c stored from wreg
 13874  0C39  00F8               	movwf	LCDcmd@c
 13875  0C3A                     i1l3451:
 13876                           
 13877                           ;main.c: 180: LCDsend2x4(c, 0);
 13878  0C3A  01F2               	clrf	i1LCDsend2x4@mode
 13879  0C3B  0878               	movf	LCDcmd@c,w
 13880  0C3C  3185  251C  318C   	fcall	i1_LCDsend2x4
 13881  0C3F                     i1l911:
 13882  0C3F  0008               	return
 13883  0C40                     __end_of_LCDcmd:
 13884                           
 13885                           	psect	text46
 13886  051C                     __ptext46:	
 13887 ;; *************** function i1_LCDsend2x4 *****************
 13888 ;; Defined at:
 13889 ;;		line 132 in file "main.c"
 13890 ;; Parameters:    Size  Location     Type
 13891 ;;  c               1    wreg     unsigned char 
 13892 ;;  mode            1    2[COMMON] unsigned char 
 13893 ;; Auto vars:     Size  Location     Type
 13894 ;;  c               1    5[COMMON] unsigned char 
 13895 ;;  lc              1    7[COMMON] unsigned char 
 13896 ;;  hc              1    6[COMMON] unsigned char 
 13897 ;; Return value:  Size  Location     Type
 13898 ;;                  1    wreg      void 
 13899 ;; Registers used:
 13900 ;;		wreg, status,2, status,0, pclath, cstack
 13901 ;; Tracked objects:
 13902 ;;		On entry : 0/0
 13903 ;;		On exit  : 0/0
 13904 ;;		Unchanged: 0/0
 13905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13906 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13907 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13908 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13909 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13910 ;;Total ram usage:        6 bytes
 13911 ;; Hardware stack levels used:    1
 13912 ;; Hardware stack levels required when called:    1
 13913 ;; This function calls:
 13914 ;;		i1_WriteI2C
 13915 ;; This function is called by:
 13916 ;;		_LCDcmd
 13917 ;;		_LCDchar
 13918 ;; This function uses a non-reentrant model
 13919 ;;
 13920                           
 13921                           
 13922                           ;psect for function i1_LCDsend2x4
 13923  051C                     i1_LCDsend2x4:
 13924                           
 13925                           ;incstack = 0
 13926                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 13927                           ;i1LCDsend2x4@c stored from wreg
 13928  051C  00F5               	movwf	i1LCDsend2x4@c
 13929  051D                     i1l3183:
 13930                           
 13931                           ;main.c: 134: unsigned char hc;;main.c: 135: unsigned char lc;;main.c: 137: hc = c & 0xf
      +                          0;
 13932  051D  0875               	movf	i1LCDsend2x4@c,w
 13933  051E  39F0               	andlw	240
 13934  051F  00F3               	movwf	??i1_LCDsend2x4
 13935  0520  0873               	movf	??i1_LCDsend2x4,w
 13936  0521  00F6               	movwf	i1LCDsend2x4@hc
 13937  0522                     i1l3185:
 13938                           
 13939                           ;main.c: 138: lc = (c << 4) & 0xf0;
 13940  0522  0875               	movf	i1LCDsend2x4@c,w
 13941  0523  00F3               	movwf	??i1_LCDsend2x4
 13942  0524  3003               	movlw	3
 13943  0525                     u208_25:
 13944  0525  35F3               	lslf	??i1_LCDsend2x4,f
 13945  0526  3EFF               	addlw	-1
 13946  0527  1D03               	skipz
 13947  0528  2D25               	goto	u208_25
 13948  0529  3573               	lslf	??i1_LCDsend2x4,w
 13949  052A  39F0               	andlw	240
 13950  052B  00F4               	movwf	??i1_LCDsend2x4+1
 13951  052C  0874               	movf	??i1_LCDsend2x4+1,w
 13952  052D  00F7               	movwf	i1LCDsend2x4@lc
 13953  052E                     i1l3187:	
 13954                           ;main.c: 140: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13955                           
 13956  052E  0023               	movlb	3	; select bank3
 13957  052F  0C0F               	rrf	15,w	;volatile
 13958  0530  0C89               	rrf	9,f
 13959  0531  3901               	andlw	1
 13960  0532  00F3               	movwf	??i1_LCDsend2x4
 13961  0533  0811               	movf	17,w	;volatile
 13962  0534  391F               	andlw	31
 13963  0535  0473               	iorwf	??i1_LCDsend2x4,w
 13964  0536  1D03               	btfss	3,2
 13965  0537  2D39               	goto	u209_21
 13966  0538  2D3A               	goto	u209_20
 13967  0539                     u209_21:
 13968  0539  2D2E               	goto	i1l3187
 13969  053A                     u209_20:
 13970  053A                     i1l874:
 13971                           
 13972                           ;main.c: 141: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 13973  053A  1411               	bsf	17,0	;volatile
 13974  053B                     i1l875:
 13975  053B  1811               	btfsc	17,0	;volatile
 13976  053C  2D3E               	goto	u210_21
 13977  053D  2D3F               	goto	u210_20
 13978  053E                     u210_21:
 13979  053E  2D3B               	goto	i1l875
 13980  053F                     u210_20:
 13981  053F                     i1l3189:
 13982  053F  0C0F               	rrf	15,w	;volatile
 13983  0540  0C89               	rrf	9,f
 13984  0541  3901               	andlw	1
 13985  0542  00F3               	movwf	??i1_LCDsend2x4
 13986  0543  0811               	movf	17,w	;volatile
 13987  0544  391F               	andlw	31
 13988  0545  0473               	iorwf	??i1_LCDsend2x4,w
 13989  0546  1D03               	btfss	3,2
 13990  0547  2D49               	goto	u211_21
 13991  0548  2D4A               	goto	u211_20
 13992  0549                     u211_21:
 13993  0549  2D3F               	goto	i1l3189
 13994  054A                     u211_20:
 13995  054A                     i1l3191:
 13996                           
 13997                           ;main.c: 142: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13998  054A  304E               	movlw	78
 13999  054B  318F  270A  3185   	fcall	i1_WriteI2C
 14000  054E                     i1l3193:
 14001  054E  0023               	movlb	3	; select bank3
 14002  054F  0C0F               	rrf	15,w	;volatile
 14003  0550  0C89               	rrf	9,f
 14004  0551  3901               	andlw	1
 14005  0552  00F3               	movwf	??i1_LCDsend2x4
 14006  0553  0811               	movf	17,w	;volatile
 14007  0554  391F               	andlw	31
 14008  0555  0473               	iorwf	??i1_LCDsend2x4,w
 14009  0556  1D03               	btfss	3,2
 14010  0557  2D59               	goto	u212_21
 14011  0558  2D5A               	goto	u212_20
 14012  0559                     u212_21:
 14013  0559  2D4E               	goto	i1l3193
 14014  055A                     u212_20:
 14015  055A                     i1l3195:
 14016                           
 14017                           ;main.c: 143: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14018  055A  0876               	movf	i1LCDsend2x4@hc,w
 14019  055B  0472               	iorwf	i1LCDsend2x4@mode,w
 14020  055C  3808               	iorlw	8
 14021  055D  318F  270A  3185   	fcall	i1_WriteI2C
 14022  0560                     i1l3197:
 14023  0560  0023               	movlb	3	; select bank3
 14024  0561  0C0F               	rrf	15,w	;volatile
 14025  0562  0C89               	rrf	9,f
 14026  0563  3901               	andlw	1
 14027  0564  00F3               	movwf	??i1_LCDsend2x4
 14028  0565  0811               	movf	17,w	;volatile
 14029  0566  391F               	andlw	31
 14030  0567  0473               	iorwf	??i1_LCDsend2x4,w
 14031  0568  1D03               	btfss	3,2
 14032  0569  2D6B               	goto	u213_21
 14033  056A  2D6C               	goto	u213_20
 14034  056B                     u213_21:
 14035  056B  2D60               	goto	i1l3197
 14036  056C                     u213_20:
 14037  056C                     i1l3199:
 14038                           
 14039                           ;main.c: 144: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 14040  056C  0876               	movf	i1LCDsend2x4@hc,w
 14041  056D  0472               	iorwf	i1LCDsend2x4@mode,w
 14042  056E  380C               	iorlw	12
 14043  056F  318F  270A  3185   	fcall	i1_WriteI2C
 14044  0572                     i1l3201:
 14045  0572  0023               	movlb	3	; select bank3
 14046  0573  0C0F               	rrf	15,w	;volatile
 14047  0574  0C89               	rrf	9,f
 14048  0575  3901               	andlw	1
 14049  0576  00F3               	movwf	??i1_LCDsend2x4
 14050  0577  0811               	movf	17,w	;volatile
 14051  0578  391F               	andlw	31
 14052  0579  0473               	iorwf	??i1_LCDsend2x4,w
 14053  057A  1D03               	btfss	3,2
 14054  057B  2D7D               	goto	u214_21
 14055  057C  2D7E               	goto	u214_20
 14056  057D                     u214_21:
 14057  057D  2D72               	goto	i1l3201
 14058  057E                     u214_20:
 14059  057E                     i1l889:
 14060  057E                     i1l3203:	
 14061                           ;main.c: 145: _delay((unsigned long)((1)*(1000000/4000000.0)));
 14062                           
 14063                           
 14064                           ;main.c: 146: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14065  057E  0876               	movf	i1LCDsend2x4@hc,w
 14066  057F  0472               	iorwf	i1LCDsend2x4@mode,w
 14067  0580  3808               	iorlw	8
 14068  0581  318F  270A  3185   	fcall	i1_WriteI2C
 14069  0584                     i1l3205:
 14070  0584  0023               	movlb	3	; select bank3
 14071  0585  0C0F               	rrf	15,w	;volatile
 14072  0586  0C89               	rrf	9,f
 14073  0587  3901               	andlw	1
 14074  0588  00F3               	movwf	??i1_LCDsend2x4
 14075  0589  0811               	movf	17,w	;volatile
 14076  058A  391F               	andlw	31
 14077  058B  0473               	iorwf	??i1_LCDsend2x4,w
 14078  058C  1D03               	btfss	3,2
 14079  058D  2D8F               	goto	u215_21
 14080  058E  2D90               	goto	u215_20
 14081  058F                     u215_21:
 14082  058F  2D84               	goto	i1l3205
 14083  0590                     u215_20:
 14084  0590                     i1l3207:
 14085                           
 14086                           ;main.c: 147: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14087  0590  0877               	movf	i1LCDsend2x4@lc,w
 14088  0591  0472               	iorwf	i1LCDsend2x4@mode,w
 14089  0592  3808               	iorlw	8
 14090  0593  318F  270A  3185   	fcall	i1_WriteI2C
 14091  0596                     i1l3209:
 14092  0596  0023               	movlb	3	; select bank3
 14093  0597  0C0F               	rrf	15,w	;volatile
 14094  0598  0C89               	rrf	9,f
 14095  0599  3901               	andlw	1
 14096  059A  00F3               	movwf	??i1_LCDsend2x4
 14097  059B  0811               	movf	17,w	;volatile
 14098  059C  391F               	andlw	31
 14099  059D  0473               	iorwf	??i1_LCDsend2x4,w
 14100  059E  1D03               	btfss	3,2
 14101  059F  2DA1               	goto	u216_21
 14102  05A0  2DA2               	goto	u216_20
 14103  05A1                     u216_21:
 14104  05A1  2D96               	goto	i1l3209
 14105  05A2                     u216_20:
 14106  05A2                     i1l3211:
 14107                           
 14108                           ;main.c: 148: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 14109  05A2  0877               	movf	i1LCDsend2x4@lc,w
 14110  05A3  0472               	iorwf	i1LCDsend2x4@mode,w
 14111  05A4  380C               	iorlw	12
 14112  05A5  318F  270A  3185   	fcall	i1_WriteI2C
 14113  05A8                     i1l3213:
 14114  05A8  0023               	movlb	3	; select bank3
 14115  05A9  0C0F               	rrf	15,w	;volatile
 14116  05AA  0C89               	rrf	9,f
 14117  05AB  3901               	andlw	1
 14118  05AC  00F3               	movwf	??i1_LCDsend2x4
 14119  05AD  0811               	movf	17,w	;volatile
 14120  05AE  391F               	andlw	31
 14121  05AF  0473               	iorwf	??i1_LCDsend2x4,w
 14122  05B0  1D03               	btfss	3,2
 14123  05B1  2DB3               	goto	u217_21
 14124  05B2  2DB4               	goto	u217_20
 14125  05B3                     u217_21:
 14126  05B3  2DA8               	goto	i1l3213
 14127  05B4                     u217_20:
 14128  05B4                     i1l898:
 14129  05B4                     i1l3215:	
 14130                           ;main.c: 149: _delay((unsigned long)((1)*(1000000/4000000.0)));
 14131                           
 14132                           
 14133                           ;main.c: 150: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14134  05B4  0877               	movf	i1LCDsend2x4@lc,w
 14135  05B5  0472               	iorwf	i1LCDsend2x4@mode,w
 14136  05B6  3808               	iorlw	8
 14137  05B7  318F  270A  3185   	fcall	i1_WriteI2C
 14138  05BA                     i1l3217:
 14139  05BA  0023               	movlb	3	; select bank3
 14140  05BB  0C0F               	rrf	15,w	;volatile
 14141  05BC  0C89               	rrf	9,f
 14142  05BD  3901               	andlw	1
 14143  05BE  00F3               	movwf	??i1_LCDsend2x4
 14144  05BF  0811               	movf	17,w	;volatile
 14145  05C0  391F               	andlw	31
 14146  05C1  0473               	iorwf	??i1_LCDsend2x4,w
 14147  05C2  1D03               	btfss	3,2
 14148  05C3  2DC5               	goto	u218_21
 14149  05C4  2DC6               	goto	u218_20
 14150  05C5                     u218_21:
 14151  05C5  2DBA               	goto	i1l3217
 14152  05C6                     u218_20:
 14153  05C6                     i1l901:
 14154                           
 14155                           ;main.c: 151: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14156  05C6  1511               	bsf	17,2	;volatile
 14157  05C7                     i1l902:
 14158  05C7  1911               	btfsc	17,2	;volatile
 14159  05C8  2DCA               	goto	u219_21
 14160  05C9  2DCB               	goto	u219_20
 14161  05CA                     u219_21:
 14162  05CA  2DC7               	goto	i1l902
 14163  05CB                     u219_20:
 14164  05CB                     i1l3219:
 14165                           
 14166                           ;main.c: 152: _delay((unsigned long)((50)*(1000000/4000000.0)));
 14167  05CB  3004               	movlw	4
 14168  05CC                     u404_27:
 14169  05CC  0B89               	decfsz	9,f
 14170  05CD  2DCC               	goto	u404_27
 14171  05CE                     i1l905:
 14172  05CE  0008               	return
 14173  05CF                     __end_ofi1_LCDsend2x4:
 14174                           
 14175                           	psect	text47
 14176  0F0A                     __ptext47:	
 14177 ;; *************** function i1_WriteI2C *****************
 14178 ;; Defined at:
 14179 ;;		line 47 in file "I2C/i2c.c"
 14180 ;; Parameters:    Size  Location     Type
 14181 ;;  data_out        1    wreg     unsigned char 
 14182 ;; Auto vars:     Size  Location     Type
 14183 ;;  data_out        1    1[COMMON] unsigned char 
 14184 ;; Return value:  Size  Location     Type
 14185 ;;                  1    wreg      char 
 14186 ;; Registers used:
 14187 ;;		wreg, status,2, status,0
 14188 ;; Tracked objects:
 14189 ;;		On entry : 0/0
 14190 ;;		On exit  : 0/0
 14191 ;;		Unchanged: 0/0
 14192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14197 ;;Total ram usage:        2 bytes
 14198 ;; Hardware stack levels used:    1
 14199 ;; This function calls:
 14200 ;;		Nothing
 14201 ;; This function is called by:
 14202 ;;		_tsttc
 14203 ;;		i1_LCDsend2x4
 14204 ;; This function uses a non-reentrant model
 14205 ;;
 14206                           
 14207                           
 14208                           ;psect for function i1_WriteI2C
 14209  0F0A                     i1_WriteI2C:
 14210                           
 14211                           ;incstack = 0
 14212                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 14213                           ;i1WriteI2C@data_out stored from wreg
 14214  0F0A  00F1               	movwf	i1WriteI2C@data_out
 14215  0F0B                     i1l3153:
 14216                           
 14217                           ;i2c.c: 49: SSP1BUF = data_out;
 14218  0F0B  0871               	movf	i1WriteI2C@data_out,w
 14219  0F0C  0023               	movlb	3	; select bank3
 14220  0F0D  008C               	movwf	12	;volatile
 14221  0F0E                     i1l3155:
 14222                           
 14223                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 14224  0F0E  1F90               	btfss	16,7	;volatile
 14225  0F0F  2F11               	goto	u199_21
 14226  0F10  2F12               	goto	u199_20
 14227  0F11                     u199_21:
 14228  0F11  2F13               	goto	i1l3161
 14229  0F12                     u199_20:
 14230  0F12  2F54               	goto	i1l30
 14231  0F13                     i1l3161:
 14232                           
 14233                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 14234  0F13  300F               	movlw	15
 14235  0F14  0510               	andwf	16,w	;volatile
 14236  0F15  00F0               	movwf	??i1_WriteI2C
 14237  0F16  3008               	movlw	8
 14238  0F17  0670               	xorwf	??i1_WriteI2C,w
 14239  0F18  1903               	btfsc	3,2
 14240  0F19  2F1B               	goto	u200_21
 14241  0F1A  2F1C               	goto	u200_20
 14242  0F1B                     u200_21:
 14243  0F1B  2F32               	goto	i1l3173
 14244  0F1C                     u200_20:
 14245  0F1C                     i1l3163:
 14246  0F1C  300F               	movlw	15
 14247  0F1D  0510               	andwf	16,w	;volatile
 14248  0F1E  00F0               	movwf	??i1_WriteI2C
 14249  0F1F  300B               	movlw	11
 14250  0F20  0670               	xorwf	??i1_WriteI2C,w
 14251  0F21  1903               	btfsc	3,2
 14252  0F22  2F24               	goto	u201_21
 14253  0F23  2F25               	goto	u201_20
 14254  0F24                     u201_21:
 14255  0F24  2F32               	goto	i1l3173
 14256  0F25                     u201_20:
 14257  0F25                     i1l3165:
 14258                           
 14259                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 14260  0F25  1610               	bsf	16,4	;volatile
 14261  0F26                     i1l33:	
 14262                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 14263                           
 14264  0F26  002E               	movlb	14	; select bank14
 14265  0F27  1C0F               	btfss	15,0	;volatile
 14266  0F28  2F2A               	goto	u202_21
 14267  0F29  2F2B               	goto	u202_20
 14268  0F2A                     u202_21:
 14269  0F2A  2F26               	goto	i1l33
 14270  0F2B                     u202_20:
 14271  0F2B                     i1l35:
 14272                           
 14273                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 14274  0F2B  0023               	movlb	3	; select bank3
 14275  0F2C  190F               	btfsc	15,2	;volatile
 14276  0F2D  2F2F               	goto	u203_21
 14277  0F2E  2F30               	goto	u203_20
 14278  0F2F                     u203_21:
 14279  0F2F  2F54               	goto	i1l30
 14280  0F30                     u203_20:
 14281  0F30                     i1l3167:
 14282  0F30  080F               	movf	15,w	;volatile
 14283  0F31  2F54               	goto	i1l30
 14284  0F32                     i1l3173:
 14285                           
 14286                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 14287  0F32  300F               	movlw	15
 14288  0F33  0510               	andwf	16,w	;volatile
 14289  0F34  00F0               	movwf	??i1_WriteI2C
 14290  0F35  3008               	movlw	8
 14291  0F36  0670               	xorwf	??i1_WriteI2C,w
 14292  0F37  1903               	btfsc	3,2
 14293  0F38  2F3A               	goto	u204_21
 14294  0F39  2F3B               	goto	u204_20
 14295  0F3A                     u204_21:
 14296  0F3A  2F44               	goto	i1l42
 14297  0F3B                     u204_20:
 14298  0F3B                     i1l3175:
 14299  0F3B  300F               	movlw	15
 14300  0F3C  0510               	andwf	16,w	;volatile
 14301  0F3D  00F0               	movwf	??i1_WriteI2C
 14302  0F3E  300B               	movlw	11
 14303  0F3F  0670               	xorwf	??i1_WriteI2C,w
 14304  0F40  1D03               	btfss	3,2
 14305  0F41  2F43               	goto	u205_21
 14306  0F42  2F44               	goto	u205_20
 14307  0F43                     u205_21:
 14308  0F43  2F54               	goto	i1l30
 14309  0F44                     u205_20:
 14310  0F44                     i1l42:
 14311  0F44  180F               	btfsc	15,0	;volatile
 14312  0F45  2F47               	goto	u206_21
 14313  0F46  2F48               	goto	u206_20
 14314  0F47                     u206_21:
 14315  0F47  2F44               	goto	i1l42
 14316  0F48                     u206_20:
 14317  0F48                     i1l3177:
 14318  0F48  0C0F               	rrf	15,w	;volatile
 14319  0F49  0C89               	rrf	9,f
 14320  0F4A  3901               	andlw	1
 14321  0F4B  00F0               	movwf	??i1_WriteI2C
 14322  0F4C  0811               	movf	17,w	;volatile
 14323  0F4D  391F               	andlw	31
 14324  0F4E  0470               	iorwf	??i1_WriteI2C,w
 14325  0F4F  1D03               	btfss	3,2
 14326  0F50  2F52               	goto	u207_21
 14327  0F51  2F53               	goto	u207_20
 14328  0F52                     u207_21:
 14329  0F52  2F48               	goto	i1l3177
 14330  0F53                     u207_20:
 14331  0F53                     i1l47:
 14332                           
 14333                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 14334  0F53  0811               	movf	17,w	;volatile
 14335  0F54                     i1l30:
 14336  0F54  0008               	return
 14337  0F55                     __end_ofi1_WriteI2C:
 14338                           
 14339                           	psect	text48
 14340  0CAF                     __ptext48:	
 14341 ;; *************** function _TMR3_WriteTimer *****************
 14342 ;; Defined at:
 14343 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 14344 ;; Parameters:    Size  Location     Type
 14345 ;;  timerVal        2    0[COMMON] unsigned int 
 14346 ;; Auto vars:     Size  Location     Type
 14347 ;;		None
 14348 ;; Return value:  Size  Location     Type
 14349 ;;                  1    wreg      void 
 14350 ;; Registers used:
 14351 ;;		wreg, status,2
 14352 ;; Tracked objects:
 14353 ;;		On entry : 0/0
 14354 ;;		On exit  : 0/0
 14355 ;;		Unchanged: 0/0
 14356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14361 ;;Total ram usage:        2 bytes
 14362 ;; Hardware stack levels used:    1
 14363 ;; This function calls:
 14364 ;;		Nothing
 14365 ;; This function is called by:
 14366 ;;		_TMR3_ISR
 14367 ;;		_TMR3_Reload
 14368 ;; This function uses a non-reentrant model
 14369 ;;
 14370                           
 14371                           
 14372                           ;psect for function _TMR3_WriteTimer
 14373  0CAF                     _TMR3_WriteTimer:
 14374  0CAF                     i1l3747:	
 14375                           ;incstack = 0
 14376                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 14377                           
 14378                           
 14379                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 14380  0CAF  0024               	movlb	4	; select bank4
 14381  0CB0  1D14               	btfss	20,2	;volatile
 14382  0CB1  2CB3               	goto	u310_21
 14383  0CB2  2CB4               	goto	u310_20
 14384  0CB3                     u310_21:
 14385  0CB3  2CBB               	goto	i1l3757
 14386  0CB4                     u310_20:
 14387  0CB4                     i1l3749:
 14388                           
 14389                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 14390  0CB4  1014               	bcf	20,0	;volatile
 14391  0CB5                     i1l3751:
 14392                           
 14393                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 14394  0CB5  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14395  0CB6  0093               	movwf	19	;volatile
 14396  0CB7                     i1l3753:
 14397                           
 14398                           ;tmr3.c: 136: TMR3L = timerVal;
 14399  0CB7  0870               	movf	TMR3_WriteTimer@timerVal,w
 14400  0CB8  0092               	movwf	18	;volatile
 14401  0CB9                     i1l3755:
 14402                           
 14403                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 14404  0CB9  1414               	bsf	20,0	;volatile
 14405                           
 14406                           ;tmr3.c: 140: }
 14407  0CBA  2CBF               	goto	i1l465
 14408  0CBB                     i1l3757:
 14409                           
 14410                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 14411  0CBB  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14412  0CBC  0093               	movwf	19	;volatile
 14413  0CBD                     i1l3759:
 14414                           
 14415                           ;tmr3.c: 145: TMR3L = timerVal;
 14416  0CBD  0870               	movf	TMR3_WriteTimer@timerVal,w
 14417  0CBE  0092               	movwf	18	;volatile
 14418  0CBF                     i1l465:
 14419  0CBF  0008               	return
 14420  0CC0                     __end_of_TMR3_WriteTimer:
 14421                           
 14422                           	psect	text49
 14423  0D1F                     __ptext49:	
 14424 ;; *************** function _TMR1_ISR *****************
 14425 ;; Defined at:
 14426 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 14427 ;; Parameters:    Size  Location     Type
 14428 ;;		None
 14429 ;; Auto vars:     Size  Location     Type
 14430 ;;		None
 14431 ;; Return value:  Size  Location     Type
 14432 ;;                  1    wreg      void 
 14433 ;; Registers used:
 14434 ;;		wreg, status,2, status,0, pclath, cstack
 14435 ;; Tracked objects:
 14436 ;;		On entry : 0/0
 14437 ;;		On exit  : 0/0
 14438 ;;		Unchanged: 0/0
 14439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14444 ;;Total ram usage:        0 bytes
 14445 ;; Hardware stack levels used:    1
 14446 ;; Hardware stack levels required when called:    1
 14447 ;; This function calls:
 14448 ;;		Absolute function
 14449 ;;		_Clock_ISR
 14450 ;;		_TMR1_DefaultInterruptHandler
 14451 ;;		_TMR1_WriteTimer
 14452 ;; This function is called by:
 14453 ;;		_INTERRUPT_InterruptManager
 14454 ;; This function uses a non-reentrant model
 14455 ;;
 14456                           
 14457                           
 14458                           ;psect for function _TMR1_ISR
 14459  0D1F                     _TMR1_ISR:
 14460  0D1F                     i1l3983:	
 14461                           ;incstack = 0
 14462                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 14463                           
 14464                           
 14465                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 14466  0D1F  002E               	movlb	14	; select bank14
 14467  0D20  1010               	bcf	16,0	;volatile
 14468  0D21                     i1l3985:
 14469                           
 14470                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 14471  0D21  0021               	movlb	1	; select bank1
 14472  0D22  0838               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 14473  0D23  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 14474  0D24  0837               	movf	_timer1ReloadVal^(0+128),w	;volatile
 14475  0D25  00F0               	movwf	TMR1_WriteTimer@timerVal
 14476  0D26  318C  249E  318D   	fcall	_TMR1_WriteTimer
 14477  0D29                     i1l3987:
 14478                           
 14479                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 14480  0D29  0021               	movlb	1	; select bank1
 14481  0D2A  0835               	movf	_TMR1_InterruptHandler^(0+128),w
 14482  0D2B  0436               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 14483  0D2C  1903               	btfsc	3,2
 14484  0D2D  2D2F               	goto	u355_21
 14485  0D2E  2D30               	goto	u355_20
 14486  0D2F                     u355_21:
 14487  0D2F  2D35               	goto	i1l414
 14488  0D30                     u355_20:
 14489  0D30                     i1l3989:
 14490                           
 14491                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 14492  0D30  0836               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 14493  0D31  008A               	movwf	10
 14494  0D32  0835               	movf	_TMR1_InterruptHandler^(0+128),w
 14495  0D33  000A               	callw
 14496  0D34  318D               	pagesel	$
 14497  0D35                     i1l414:
 14498  0D35  0008               	return
 14499  0D36                     __end_of_TMR1_ISR:
 14500                           
 14501                           	psect	text50
 14502  0C9E                     __ptext50:	
 14503 ;; *************** function _TMR1_WriteTimer *****************
 14504 ;; Defined at:
 14505 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 14506 ;; Parameters:    Size  Location     Type
 14507 ;;  timerVal        2    0[COMMON] unsigned int 
 14508 ;; Auto vars:     Size  Location     Type
 14509 ;;		None
 14510 ;; Return value:  Size  Location     Type
 14511 ;;                  1    wreg      void 
 14512 ;; Registers used:
 14513 ;;		wreg, status,2
 14514 ;; Tracked objects:
 14515 ;;		On entry : 0/0
 14516 ;;		On exit  : 0/0
 14517 ;;		Unchanged: 0/0
 14518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14522 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14523 ;;Total ram usage:        2 bytes
 14524 ;; Hardware stack levels used:    1
 14525 ;; This function calls:
 14526 ;;		Nothing
 14527 ;; This function is called by:
 14528 ;;		_TMR1_ISR
 14529 ;;		_TMR1_Reload
 14530 ;; This function uses a non-reentrant model
 14531 ;;
 14532                           
 14533                           
 14534                           ;psect for function _TMR1_WriteTimer
 14535  0C9E                     _TMR1_WriteTimer:
 14536  0C9E                     i1l3733:	
 14537                           ;incstack = 0
 14538                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 14539                           
 14540                           
 14541                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 14542  0C9E  0024               	movlb	4	; select bank4
 14543  0C9F  1D0E               	btfss	14,2	;volatile
 14544  0CA0  2CA2               	goto	u309_21
 14545  0CA1  2CA3               	goto	u309_20
 14546  0CA2                     u309_21:
 14547  0CA2  2CAA               	goto	i1l3743
 14548  0CA3                     u309_20:
 14549  0CA3                     i1l3735:
 14550                           
 14551                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 14552  0CA3  100E               	bcf	14,0	;volatile
 14553  0CA4                     i1l3737:
 14554                           
 14555                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 14556  0CA4  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14557  0CA5  008D               	movwf	13	;volatile
 14558  0CA6                     i1l3739:
 14559                           
 14560                           ;tmr1.c: 136: TMR1L = timerVal;
 14561  0CA6  0870               	movf	TMR1_WriteTimer@timerVal,w
 14562  0CA7  008C               	movwf	12	;volatile
 14563  0CA8                     i1l3741:
 14564                           
 14565                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 14566  0CA8  140E               	bsf	14,0	;volatile
 14567                           
 14568                           ;tmr1.c: 140: }
 14569  0CA9  2CAE               	goto	i1l401
 14570  0CAA                     i1l3743:
 14571                           
 14572                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 14573  0CAA  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14574  0CAB  008D               	movwf	13	;volatile
 14575  0CAC                     i1l3745:
 14576                           
 14577                           ;tmr1.c: 145: TMR1L = timerVal;
 14578  0CAC  0870               	movf	TMR1_WriteTimer@timerVal,w
 14579  0CAD  008C               	movwf	12	;volatile
 14580  0CAE                     i1l401:
 14581  0CAE  0008               	return
 14582  0CAF                     __end_of_TMR1_WriteTimer:
 14583                           
 14584                           	psect	text51
 14585  06B3                     __ptext51:	
 14586 ;; *************** function _Clock_ISR *****************
 14587 ;; Defined at:
 14588 ;;		line 276 in file "main.c"
 14589 ;; Parameters:    Size  Location     Type
 14590 ;;		None
 14591 ;; Auto vars:     Size  Location     Type
 14592 ;;		None
 14593 ;; Return value:  Size  Location     Type
 14594 ;;                  1    wreg      void 
 14595 ;; Registers used:
 14596 ;;		wreg, status,2, status,0
 14597 ;; Tracked objects:
 14598 ;;		On entry : 0/0
 14599 ;;		On exit  : 0/0
 14600 ;;		Unchanged: 0/0
 14601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14606 ;;Total ram usage:        1 bytes
 14607 ;; Hardware stack levels used:    1
 14608 ;; This function calls:
 14609 ;;		Nothing
 14610 ;; This function is called by:
 14611 ;;		_main
 14612 ;;		_TMR1_ISR
 14613 ;; This function uses a non-reentrant model
 14614 ;;
 14615                           
 14616                           
 14617                           ;psect for function _Clock_ISR
 14618  06B3                     _Clock_ISR:
 14619  06B3                     i1l3813:	
 14620                           ;incstack = 0
 14621                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0]
 14622                           
 14623                           
 14624                           ;main.c: 278: t.s++;
 14625  06B3  3001               	movlw	1
 14626  06B4  0020               	movlb	0	; select bank0
 14627  06B5  07D0               	addwf	_t+4,f
 14628  06B6  3000               	movlw	0
 14629  06B7  3DD1               	addwfc	_t+5,f
 14630  06B8                     i1l3815:
 14631                           
 14632                           ;main.c: 280: if(t.s==60){
 14633  06B8  303C               	movlw	60
 14634  06B9  0650               	xorwf	_t+4,w
 14635  06BA  0451               	iorwf	_t+5,w
 14636  06BB  1D03               	btfss	3,2
 14637  06BC  2EBE               	goto	u329_21
 14638  06BD  2EBF               	goto	u329_20
 14639  06BE                     u329_21:
 14640  06BE  2EC5               	goto	i1l3821
 14641  06BF                     u329_20:
 14642  06BF                     i1l3817:
 14643                           
 14644                           ;main.c: 281: t.m++;
 14645  06BF  3001               	movlw	1
 14646  06C0  07CE               	addwf	_t+2,f
 14647  06C1  3000               	movlw	0
 14648  06C2  3DCF               	addwfc	_t+3,f
 14649  06C3                     i1l3819:
 14650                           
 14651                           ;main.c: 282: t.s=0;
 14652  06C3  01D0               	clrf	_t+4
 14653  06C4  01D1               	clrf	_t+5
 14654  06C5                     i1l3821:
 14655                           
 14656                           ;main.c: 283: };main.c: 284: if(t.m==60){
 14657  06C5  303C               	movlw	60
 14658  06C6  064E               	xorwf	_t+2,w
 14659  06C7  044F               	iorwf	_t+3,w
 14660  06C8  1D03               	btfss	3,2
 14661  06C9  2ECB               	goto	u330_21
 14662  06CA  2ECC               	goto	u330_20
 14663  06CB                     u330_21:
 14664  06CB  2ED2               	goto	i1l3827
 14665  06CC                     u330_20:
 14666  06CC                     i1l3823:
 14667                           
 14668                           ;main.c: 286: t.h++;
 14669  06CC  3001               	movlw	1
 14670  06CD  07CC               	addwf	_t,f
 14671  06CE  3000               	movlw	0
 14672  06CF  3DCD               	addwfc	_t+1,f
 14673  06D0                     i1l3825:
 14674                           
 14675                           ;main.c: 287: t.m=0;
 14676  06D0  01CE               	clrf	_t+2
 14677  06D1  01CF               	clrf	_t+3
 14678  06D2                     i1l3827:
 14679                           
 14680                           ;main.c: 288: };main.c: 289: if(t.h==24){
 14681  06D2  3018               	movlw	24
 14682  06D3  064C               	xorwf	_t,w
 14683  06D4  044D               	iorwf	_t+1,w
 14684  06D5  1D03               	btfss	3,2
 14685  06D6  2ED8               	goto	u331_21
 14686  06D7  2ED9               	goto	u331_20
 14687  06D8                     u331_21:
 14688  06D8  2EDB               	goto	i1l3831
 14689  06D9                     u331_20:
 14690  06D9                     i1l3829:
 14691                           
 14692                           ;main.c: 290: t.h=0;
 14693  06D9  01CC               	clrf	_t
 14694  06DA  01CD               	clrf	_t+1
 14695  06DB                     i1l3831:
 14696                           
 14697                           ;main.c: 291: };main.c: 294: if(alarmsEnable == 1 && t.s >= clkAlarm.alarmVal.s && t.m >
      +                          = clkAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h){
 14698  06DB  0366               	decf	_alarmsEnable,w
 14699  06DC  1D03               	btfss	3,2
 14700  06DD  2EDF               	goto	u332_21
 14701  06DE  2EE0               	goto	u332_20
 14702  06DF                     u332_21:
 14703  06DF  2F0F               	goto	i1l3841
 14704  06E0                     u332_20:
 14705  06E0                     i1l3833:
 14706  06E0  0851               	movf	_t+5,w
 14707  06E1  3A80               	xorlw	128
 14708  06E2  00F0               	movwf	??_Clock_ISR
 14709  06E3  0860               	movf	_clkAlarm+5,w
 14710  06E4  3A80               	xorlw	128
 14711  06E5  0270               	subwf	??_Clock_ISR,w
 14712  06E6  1D03               	skipz
 14713  06E7  2EEA               	goto	u333_25
 14714  06E8  085F               	movf	_clkAlarm+4,w
 14715  06E9  0250               	subwf	_t+4,w
 14716  06EA                     u333_25:
 14717  06EA  1C03               	skipc
 14718  06EB  2EED               	goto	u333_21
 14719  06EC  2EEE               	goto	u333_20
 14720  06ED                     u333_21:
 14721  06ED  2F0F               	goto	i1l3841
 14722  06EE                     u333_20:
 14723  06EE                     i1l3835:
 14724  06EE  0020               	movlb	0	; select bank0
 14725  06EF  084F               	movf	_t+3,w
 14726  06F0  3A80               	xorlw	128
 14727  06F1  00F0               	movwf	??_Clock_ISR
 14728  06F2  085E               	movf	_clkAlarm+3,w
 14729  06F3  3A80               	xorlw	128
 14730  06F4  0270               	subwf	??_Clock_ISR,w
 14731  06F5  1D03               	skipz
 14732  06F6  2EF9               	goto	u334_25
 14733  06F7  085D               	movf	_clkAlarm+2,w
 14734  06F8  024E               	subwf	_t+2,w
 14735  06F9                     u334_25:
 14736  06F9  1C03               	skipc
 14737  06FA  2EFC               	goto	u334_21
 14738  06FB  2EFD               	goto	u334_20
 14739  06FC                     u334_21:
 14740  06FC  2F0F               	goto	i1l3841
 14741  06FD                     u334_20:
 14742  06FD                     i1l3837:
 14743  06FD  0020               	movlb	0	; select bank0
 14744  06FE  084D               	movf	_t+1,w
 14745  06FF  3A80               	xorlw	128
 14746  0700  00F0               	movwf	??_Clock_ISR
 14747  0701  085C               	movf	_clkAlarm+1,w
 14748  0702  3A80               	xorlw	128
 14749  0703  0270               	subwf	??_Clock_ISR,w
 14750  0704  1D03               	skipz
 14751  0705  2F08               	goto	u335_25
 14752  0706  085B               	movf	_clkAlarm,w
 14753  0707  024C               	subwf	_t,w
 14754  0708                     u335_25:
 14755  0708  1C03               	skipc
 14756  0709  2F0B               	goto	u335_21
 14757  070A  2F0C               	goto	u335_20
 14758  070B                     u335_21:
 14759  070B  2F0F               	goto	i1l3841
 14760  070C                     u335_20:
 14761  070C                     i1l3839:
 14762                           
 14763                           ;main.c: 295: clkAlarm.trigger = 1;
 14764  070C  0020               	movlb	0	; select bank0
 14765  070D  01E1               	clrf	_clkAlarm+6
 14766  070E  0AE1               	incf	_clkAlarm+6,f
 14767  070F                     i1l3841:
 14768  070F  1003               	clrc
 14769  0710  0020               	movlb	0	; select bank0
 14770  0711  1F96               	btfss	22,7	;volatile
 14771  0712  1403               	setc
 14772  0713  1803               	btfsc	3,0
 14773  0714  2F16               	goto	u336_21
 14774  0715  2F19               	goto	u336_20
 14775  0716                     u336_21:
 14776  0716  0020               	movlb	0	; select bank0
 14777  0717  1796               	bsf	22,7	;volatile
 14778  0718  2F1B               	goto	u337_24
 14779  0719                     u336_20:
 14780  0719  0020               	movlb	0	; select bank0
 14781  071A  1396               	bcf	22,7	;volatile
 14782  071B                     u337_24:
 14783  071B                     i1l959:
 14784  071B  0008               	return
 14785  071C                     __end_of_Clock_ISR:
 14786                           
 14787                           	psect	text52
 14788  0002                     __ptext52:	
 14789 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 14790 ;; Defined at:
 14791 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 14792 ;; Parameters:    Size  Location     Type
 14793 ;;		None
 14794 ;; Auto vars:     Size  Location     Type
 14795 ;;		None
 14796 ;; Return value:  Size  Location     Type
 14797 ;;                  1    wreg      void 
 14798 ;; Registers used:
 14799 ;;		None
 14800 ;; Tracked objects:
 14801 ;;		On entry : 0/0
 14802 ;;		On exit  : 0/0
 14803 ;;		Unchanged: 0/0
 14804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14809 ;;Total ram usage:        0 bytes
 14810 ;; Hardware stack levels used:    1
 14811 ;; This function calls:
 14812 ;;		Nothing
 14813 ;; This function is called by:
 14814 ;;		_TMR1_Initialize
 14815 ;;		_TMR1_ISR
 14816 ;; This function uses a non-reentrant model
 14817 ;;
 14818                           
 14819                           
 14820                           ;psect for function _TMR1_DefaultInterruptHandler
 14821  0002                     _TMR1_DefaultInterruptHandler:
 14822  0002                     i1l420:	
 14823                           ;incstack = 0
 14824                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 14825                           
 14826  0002  0008               	return
 14827  0003                     __end_of_TMR1_DefaultInterruptHandler:
 14828  007E                     btemp	set	126	;btemp
 14829  007E                     int$flags	set	126
 14830  007E                     wtemp0	set	126
 14831                           
 14832                           	psect	config
 14833                           
 14834                           ;Config register CONFIG1 @ 0x8007
 14835                           ;	External Oscillator mode selection bits
 14836                           ;	FEXTOSC = OFF, Oscillator not enabled
 14837                           ;	Power-up default value for COSC bits
 14838                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 14839                           ;	Clock Out Enable bit
 14840                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 14841                           ;	Clock Switch Enable bit
 14842                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 14843                           ;	Fail-Safe Clock Monitor Enable bit
 14844                           ;	FCMEN = ON, FSCM timer enabled
 14845  8007                     	org	32775
 14846  8007  3FEC               	dw	16364
 14847                           
 14848                           ;Config register CONFIG2 @ 0x8008
 14849                           ;	Master Clear Enable bit
 14850                           ;	MCLRE = ON, MCLR pin is Master Clear function
 14851                           ;	Power-up Timer Enable bit
 14852                           ;	PWRTE = OFF, PWRT disabled
 14853                           ;	Low-Power BOR enable bit
 14854                           ;	LPBOREN = OFF, ULPBOR disabled
 14855                           ;	Brown-out reset enable bits
 14856                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 14857                           ;	Brown-out Reset Voltage Selection
 14858                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 14859                           ;	Zero-cross detect disable
 14860                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 14861                           ;	Peripheral Pin Select one-way control
 14862                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 14863                           ;	Stack Overflow/Underflow Reset Enable bit
 14864                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 14865                           ;	Background Debugger
 14866                           ;	DEBUG = OFF, Background Debugger disabled
 14867  8008                     	org	32776
 14868  8008  3FFF               	dw	16383
 14869                           
 14870                           ;Config register CONFIG3 @ 0x8009
 14871                           ;	WDT Period Select bits
 14872                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14873                           ;	WDT operating mode
 14874                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 14875                           ;	WDT Window Select bits
 14876                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 14877                           ;	WDT input clock selector
 14878                           ;	WDTCCS = SC, Software Control
 14879  8009                     	org	32777
 14880  8009  3F9F               	dw	16287
 14881                           
 14882                           ;Config register CONFIG4 @ 0x800A
 14883                           ;	UserNVM self-write protection bits
 14884                           ;	WRT = OFF, Write protection off
 14885                           ;	Scanner Enable bit
 14886                           ;	SCANE = available, Scanner module is available for use
 14887                           ;	Low Voltage Programming Enable bit
 14888                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 14889  800A                     	org	32778
 14890  800A  3FFF               	dw	16383
 14891                           
 14892                           ;Config register CONFIG5 @ 0x800B
 14893                           ;	UserNVM Program memory code protection bit
 14894                           ;	CP = OFF, Program Memory code protection disabled
 14895                           ;	DataNVM code protection bit
 14896                           ;	CPD = OFF, Data EEPROM code protection disabled
 14897  800B                     	org	32779
 14898  800B  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        18
    BSS         21
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      79
    BANK1            80      9      25
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[5]), STR_2(CODE[7]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), monitoring_ISR(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), monitoring_ISR(), Absolute function(), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 6
		 -> menuLCD_ISR@diff(BANK0[6]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _tsttc->i1_WriteI2C
    _map->___awdiv
    ___awdiv->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->_map
    _map->___awdiv
    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1824
                            _LCDinit
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                   _i2c1_driver_open
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    6921
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0    1735
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       4     4      0    1495
                                             11 COMMON     3     3      0
                                             14 BANK0      1     1      0
           _ADCC_GetSingleConversion
                                _map
                              _tsttc
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _map                                                 10     0     10    1382
                                              4 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    4946
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         23    23      0    4706
                                             21 BANK0     23    23      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
                 _PWM6_LoadDutyValue
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    2324
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                         15     2     13     595
                                              0 COMMON    13     0     13
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM6_LoadDutyValue                                   4     2      2     196
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               3     3      0     550
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _i2c1_driver_open

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM6_LoadDutyValue
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       _map
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _tsttc
         _ReadI2C
         i1_WriteI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      9      19       7       31.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      76      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      76      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Oct 21 23:39:30 2020

                                       _t 004C          __end_of_TMR5_SetInterruptHandler 0C6B  
                              i1_WriteI2C 0F0A                                        l30 07D5  
                                      l33 079D                                        l42 07BF  
                                      l35 07A2                                        l47 07D3  
                            ___awdiv@sign 0021                       ___wmul@multiplicand 0072  
                       ??_TMR5_WriteTimer 0072               __size_of_PWM6_LoadDutyValue 0016  
                                     l122 0F09                                       l172 0DB0  
                                     l175 0C58                                       l239 0C76  
                                     l417 0C26                                       l178 0C4F  
                                     l451 0E0D                                       l481 0C61  
                                     l563 0D7A                                       l387 0DEE  
                                     l901 0512                                       l902 0514  
                                     l905 051B                                       l772 0F66  
                                     l908 0644                                       l773 0F68  
                                     l784 0FA1                                       l785 0FA3  
                                     l874 046A                                       l875 046C  
                                     l788 0FA7                                       l889 04BC  
                                     l898 04FC                                       _PR2 028D  
                         _timer1ReloadVal 00B7                                       _map 07D6  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 0C90  
                                     wreg 0009                               ?_LCDsend2x4 00A2  
                         __end_of_LCDchar 0C48                                      l1001 0E59  
                                    l1002 0E59                                      l1035 0E2C  
                                    l1124 0C1C                                      l1109 0C9D  
                                    l1127 07FE                                      l1065 0C6A  
                                    l1079 0C8F                           _timer3ReloadVal 006D  
                                    l4131 0E30                                      l4061 05DC  
                                    l4141 0E4E                                      l4133 0E33  
                                    l3351 077E                                      l4071 0600  
                                    l4063 05E4                                      l4151 0E57  
                                    l4143 0E50                                      l4135 0E3B  
                                    l3361 0790                                      l3353 0781  
                                    l4081 0620                                      l4073 0604  
                                    l4065 05E8                                      l4057 05CF  
                                    l3601 0EDA                                      l4153 0E58  
                                    l4145 0E51                                      l4137 0E43  
                                    l4129 0E2D                                      l3363 079B  
                                    l3371 07A9                                      l4083 0628  
                                    l4075 060C                                      l4067 05F4  
                                    l4059 05D8                                      l3611 0EE5  
                                    l3603 0EDC                                      l4091 07FB  
                                    l4147 0E53                                      l4139 0E4B  
                                    l3373 07B4                                      l3365 07A7  
                                    l4085 062E                                      l4077 0610  
                                    l4069 05F8                                      l3621 0EEF  
                                    l3613 0EEA                                      l3605 0EDF  
                                    l3381 0C21                                      l3701 0E29  
                                    l4149 0E54                                      l3375 07C4  
                                    l3359 0786                                      l4087 0634  
                                    l4079 061C                                      l3631 0EF6  
                                    l3623 0EF0                                      l3615 0EEC  
                                    l3607 0EE1                                      l3711 0C98  
                                    l3703 0C90                                      l3383 0C59  
                                    l3801 04D8                                      l4089 063A  
                                    l3641 0F02                                      l3633 0EF8  
                                    l3625 0EF1                                      l3617 0EED  
                                    l3609 0EE3                                      l3721 0DD7  
                                    l3713 0C9A                                      l3705 0C93  
                                    l3811 0518                                      l3803 04E7  
                                    l3651 0C53                                      l3643 0F04  
                                    l3635 0EFA                                      l3627 0EF2  
                                    l3619 0EEE                                      l3731 0DEB  
                                    l3723 0DD9                                      l3715 0DD0  
                                    l3707 0C94                                      l3805 04ED  
                                    l3661 0D64                                      l3653 0C54  
                                    l3645 0F06                                      l3637 0EFC  
                                    l3629 0EF4                                      l3725 0DE0  
                                    l3717 0DD3                                      l3709 0C97  
                                    ?_map 0024                                      l3807 04FC  
                                    l3663 0D76                                      l3655 0C57  
                                    l3639 0EFF                                      l3591 0ECC  
                                    l3647 0C48                                      l3727 0DE2  
                                    l3719 0DD5                                      l3671 0DF4  
                                    l3761 0F57                                      l3809 0503  
                         __end_of_LCDinit 0645                                      l3665 0D78  
                                    l3649 0C50                                      l3593 0ED2  
                                    l3657 0C83                                      l3729 0DE3  
                                    l3681 0E02                                      l3673 0DF6  
                                    l3771 0F8E                                      l3763 0F57  
                                    l3595 0ED4                                      l3659 0C8A  
                                    l3683 0E0A                                      l3675 0DF8  
                                    l3667 0DEF                                      l3691 0E15  
                                    l3773 0F92                                      l3765 0F6C  
                                    l3781 0470                                      l3597 0ED6  
                                    l3677 0DFF                                      l3669 0DF2  
                                    l3589 0C62                                      l3693 0E17  
                                    l3685 0E0E                                      l3941 0D9B  
                                    l3767 0F7B                                      l3791 04A7  
                                    l3783 047F                                      l3775 044A  
                                    l3599 0ED8                                      l3679 0E01  
                                    l3695 0E1E                                      l3687 0E11  
                                    l3951 0DAA                                      l3943 0D9E  
                                    l3935 0C1A                                      l3769 0F7F  
                                    l3793 04AD                                      l3785 0483  
                                    l3777 044F                                      l3697 0E20  
                                    l3689 0E13                                      l3953 0DAD  
                                    l3945 0DA1                                      l3937 0D95  
                                    l3961 0C73                                      l3795 04BC  
                                    l3787 0492                                      l3779 045B  
                                    l3699 0E21                                      l3947 0DA4  
                                    l3939 0D98                                      l3955 0C6B  
                                    l3797 04C3                                      l3789 0498  
                                    l3949 0DA7                                      l3957 0C70  
                                    l3799 04D2                                      l3959 0C71  
                         __end_of_LCDsend 0FA8                                      STR_1 1000  
                                    STR_2 1019                                      STR_3 1020  
                                    _LATA 0016                                      u3110 0F66  
                                    _LATB 0017                                      u3111 0F65  
                                    _LATC 0018                                      u3120 0F6C  
                                    u3200 047F                                      _LATD 0019  
                                    u3121 0F6B                                      u3201 047E  
                                    _LATE 001A                                      u3130 0F7B  
                                    u3210 0492                                      u3131 0F7A  
                                    u3211 0491                                      u3140 0F8E  
                                    u3220 04A7                                      u3141 0F8D  
                                    u3221 04A6                                      u3150 0FA1  
                                    u3230 04BC                                      u3151 0FA0  
                                    u3231 04BB                                      u4007 061D  
                                    u2600 07D3                                      u2520 0785  
                                    u3160 0FA7                                      u3240 04D2  
                                    u2601 07D2                                      u2521 0784  
                                    u3161 0FA6                                      u3241 04D1  
                                    u4017 0625                                      u2530 0790  
                                    u3250 04E7                                      _T2PR 028D  
                                    u2531 078F                                      u3251 04E6  
                                    u4027 0641                                      u2540 079B  
                                    u3260 04FC                                      u3180 046A  
                                    u2541 079A                                      u4037 0519  
                                    u3261 04FB                                      u3181 0469  
                                    u2550 07A2                                      u3270 0512  
                                    u3190 0470                                      u2551 07A1  
                                    u3271 0511                                      u3191 046F  
                                    u3175 0452                                      u2560 07A7  
                                    u3280 0518                                      u3520 0C70  
                                    u2561 07A6                                      u3281 0517  
                                    u3521 0C6F                                      u2570 07B4  
                                    u2571 07B3                                      u2580 07BF  
                                    u2581 07BE                                      u2590 07C4  
                                    u2591 07C3                                      _PMD0 0796  
                                    _PMD1 0797                                      i1l30 0F54  
                                    i1l22 0D8E                                      _PMD2 0798  
                                    i1l23 0D8F                                      _PMD3 0799  
                                    _PMD4 079A                                      i1l33 0F26  
                                    _PMD5 079B                                      i1l42 0F44  
                                    i1l26 0D94                                      i1l35 0F2B  
                                    i1l47 0F53                         monitoring_ISR@lum 002E  
                                    u3937 05D3                                      u3947 05E1  
                                    u3957 05E9                                      u3967 05F5  
                                    u3977 05FD                                      u3987 0609  
                                    u3997 0611                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                              ?_menuLCD_ISR 0070  
                                    _main 0E2D                                      _temp 005A  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    map@x 0024                                      btemp 007E  
                                    start 0040                           _timer5ReloadVal 0069  
                         _TMR3_Initialize 0DEF                ??_TMR1_SetInterruptHandler 00A2  
                         __end_of_ReadI2C 0D95                                     ??_map 007B  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0C59  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 0C77  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                           __end_of___awdiv 077C  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                           ___awdiv@divisor 0076  
                                   _T1CON 020E                                     _T3CLK 0217  
                                   _T2CON 028E                                     _T3CON 0214  
                                   _T5CLK 021D                                     _T2HLT 028F  
                                   _T5CON 021A                           __end_of___lwdiv 0ECC  
                                   _T2TMR 028C                                     i1l401 0CAE  
                                   _T2RST 0291                                     i1l420 0002  
                                   i1l414 0D35                                     i1l350 003E  
                                   i1l351 0038                           __end_of___lwmod 0E90  
                                   i1l345 0017                                     i1l347 0023  
                                   i1l356 003E                                     i1l349 002F  
                                   i1l720 03A9                                     i1l465 0CBF  
                                   i1l721 03AB                                     i1l484 0003  
                                   i1l708 0377                                     i1l901 05C6  
                                   i1l733 03CE                                     i1l709 0378  
                                   i1l902 05C7                                     i1l478 0D4C  
                                   i1l734 03CF                                     i1l726 03BA  
                                   i1l911 0C3F                                     i1l575 0CEB  
                                   i1l727 03BB                                     i1l920 0D08  
                                   i1l905 05CE                                     i1l745 03FE  
                                   i1l729 03BF                                     i1l914 0C47  
                                   i1l930 067E                                     i1l578 0CF4  
                                   i1l746 03FF                                     i1l763 0441  
                                   i1l764 0442                                     i1l933 06B2  
                                   i1l757 0430                                     i1l693 033B  
                                   i1l758 0432                                     i1l927 064E  
                                   i1l767 0447                                     i1l936 07FA  
                                   i1l696 0347                                     i1l697 0348  
                                   i1l874 053A                                     i1l875 053B  
                                   i1l980 030D                                     i1l981 033A  
                                   i1l959 071B                                     i1l991 0FFB  
                                   i1l889 057E                                     i1l985 0FEE  
                                   i1l898 05B4                                     i1l996 0FFF  
                         ___awdiv@counter 0020                                     _OSCEN 0891  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TMR3H 0213                                     _TMR3L 0212  
                                   _TMR5H 0219                                     _TMR5L 0218  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C                           _PWM6_Initialize 0C83  
       __size_of_TMR3_SetInterruptHandler 0009                 ?_TMR3_SetInterruptHandler 00A0  
                        __end_of_TMR1_ISR 0D36                          __end_of_TMR3_ISR 0D4D  
                        __end_of_TMR5_ISR 0D64            ??_TMR3_DefaultInterruptHandler 0070  
                         __end_of_dpowers 1019                        __size_of_TMR2_Stop 0003  
                             ?_TMR2_Start 0070                           __end_of_isdigit 0CE3  
                                   _tsttc 033B                   __end_of_TMR1_Initialize 0DEF  
                                   pclath 000A                            menuLCD_ISR@str 0037  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 020A                           _TMR2_StartTimer 0C1D  
                         _TMR1_WriteTimer 0C9E                           _TMR5_Initialize 0E0E  
                         __initialization 0042                              __end_of_main 0E5C  
                             ?i1_WriteI2C 0070                       __size_of_LCDsend2x4 00D4  
                 __end_of_TMR2_Initialize 0C9E               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00A9                  _TMR5_SetInterruptHandler 0C62  
                      __size_of_Clock_ISR 0069                     _TMR3_InterruptHandler 006B  
        differenceBetweenTimePeriod@start 0070                                 ??_LCDchar 0078  
                               ??_LCDinit 00A8                                 ??_LCDsend 00A2  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                        ___awdiv@dividend 0078                                    _ADUTHL 0110  
                        __end_of_WriteI2C 07D6                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _T3GATE 0216  
                                  _T3GCON 0215                                    _T5GATE 021C  
                                  _T5GCON 021B                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                                    i1l1121 0C20  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1118 0C19                                    i1l1062 0D63  
                                  i1l1313 008A                                    i1l1049 0CD0  
                                  i1l1082 0D1E                                    i1l1331 013D  
                                  i1l1068 07FF                                    u200_20 0F1C  
                                  i1l1352 0DBB                                    u200_21 0F1B  
                                  i1l3201 0572                                    i1l1505 077B  
                                  _ODCONA 0F3A                                    i1l1354 0DCF  
                                  _ODCONB 0F45                                    i1l3211 05A2  
                                  i1l3203 057E                                    _ODCONC 0F50  
                                  i1l1348 0209                                    _ODCOND 0F5B  
                                  i1l3213 05A8                                    i1l3205 0584  
                                  i1l3221 0D7B                                    i1l4101 000F  
                                  _ODCONE 0F66                                    i1l3215 05B4  
                                  i1l3207 0590                                    i1l3231 0C17  
                                  i1l3311 0EA0                                    i1l3303 0E90  
                                  i1l3223 0D85                                    i1l4111 002B  
                                  i1l4103 0013                                    u201_20 0F25  
                                  i1l1624 0ECB                                    u201_21 0F24  
                                  i1l3161 0F13                                    i1l3153 0F0B  
                                  i1l3217 05BA                                    i1l3209 0596  
                                  i1l3321 0EBC                                    i1l3313 0EA4  
                                  i1l3305 0E92                                    i1l3241 0CE1  
                                  i1l3233 0CD2                                    i1l3225 0D93  
                                  i1l3401 034C                                    i1l4113 0033  
                                  i1l4105 001B                                    i1l1634 0E8F  
                                  i1l3163 0F1C                                    i1l3155 0F0E  
                                  i1l3219 05CB                                    i1l3323 0EC1  
                                  i1l3315 0EA8                                    i1l3307 0E98  
                                  i1l3331 0E62                                    i1l3251 0DC0  
                                  i1l3235 0CD3                                    i1l3411 037C  
                                  i1l3403 0357                                    i1l4107 001F  
                                  i1l3165 0F25                                    i1l3173 0F32  
                                  i1l3229 0C41                                    i1l3317 0EB7  
                                  i1l3309 0E9B                                    i1l3325 0EC7  
                                  i1l3341 0E7C                                    i1l3333 0E65  
                                  i1l3253 0DC5                                    i1l3245 0DB1  
                                  i1l1805 0CE2                                    i1l3237 0CD9  
                                  i1l3501 00CB                                    i1l3261 071E  
                                  i1l3421 03AF                                    i1l3413 0387  
                                  i1l3405 035B                                    i1l4117 003C  
                                  i1l4109 0027                                    i1l3175 0F3B  
                                  i1l3167 0F30                                    i1l3191 054A  
                                  i1l3183 051D                                    i1l3319 0EBB  
                                  i1l3343 0E80                                    i1l3335 0E6A  
                                  i1l3255 0DCB                                    i1l3247 0DB3  
                                  i1l3239 0CDF                                    i1l3511 00FA  
                                  i1l3271 0732                                    i1l3263 0722  
                                  i1l3431 03EE                                    i1l3423 03C3  
                                  i1l3415 038B                                    i1l3407 0367  
                                  u202_20 0F2B                                    u210_20 053F  
                                  i1l3177 0F48                                    u202_21 0F2A  
                                  i1l3193 054E                                    u210_21 053E  
                                  i1l3185 0522                                    i1l3345 0E85  
                                  i1l3337 0E6E                                    i1l3329 0E5C  
                                  i1l3249 0DB7                                    i1l3513 00FE  
                                  i1l3505 00D7                                    i1l3281 0746  
                                  i1l3273 0736                                    i1l3265 0727  
                                  i1l3441 041E                                    i1l3433 03F2  
                                  i1l3425 03D3                                    i1l3417 0397  
                                  i1l3409 036B                                    i1l3195 055A  
                                  i1l3187 052E                                    i1l3451 0C3A  
                                  i1l3339 0E72                                    i1l3347 0E8B  
                                  i1l3531 0133                                    i1l3523 0109  
                                  i1l3515 0102                                    i1l3507 00EF  
                                  i1l3291 0762                                    i1l3283 074A  
                                  i1l3275 0738                                    i1l3267 0729  
                                  i1l3259 071C                                    i1l3443 0424  
                                  i1l3435 0403                                    i1l3427 03DE  
                                  i1l3419 039D                   __end_of_TMR3_Initialize 0E0E  
                                  i1l3197 0560                                    i1l3189 053F  
                                  i1l3453 0CF6                                    i1l3461 0646  
                                  i1l3541 0158                                    i1l3533 0139  
                                  i1l3517 0107                                    i1l3509 00F6  
                                  i1l3293 0767                                    i1l3285 074E  
                                  i1l3277 073E                                    i1l3269 072D  
                                  i1l3445 0436                                    i1l3437 040E  
                                  i1l3429 03E2                                    i1l3199 056C  
                                  i1l3455 0CF7                                    i1l3463 065D  
                                  i1l3551 0176                                    i1l3543 015E  
                                  i1l3535 0148                                    i1l3527 0123  
                                  i1l3391 0CE9                                    i1l3287 075D  
                                  i1l3279 0741                                    i1l3295 076D  
                                  i1l3471 07D6                                    i1l3447 0446  
                                  i1l3439 0412                                    u203_20 0F30  
                                  u211_20 054A                                    u203_21 0F2F  
                                  u211_21 0549                                    i1l3457 0CFB  
                                  i1l3465 0676                                    i1l3561 0196  
                                  i1l3553 017A                                    i1l3545 0165  
                                  i1l3537 0151                                    i1l3529 012D  
                                  i1l3481 0081                                    i1l3393 0CEA  
                                  i1l3385 0CE4                                    i1l3297 0772  
                                  i1l3289 0761                                    i1l4097 0006  
                                  i1l3467 068D                                    i1l3459 0645  
                                  i1l3571 01B6                                    i1l3563 01A0  
                                  i1l3547 0169                                    i1l3555 0185  
                                  i1l3539 0154                                    i1l3491 0098  
                                  i1l3483 0086                                    i1l3475 006F  
                                  i1l3395 0CF0                                    i1l3387 0CE7  
                                  i1l3299 0777                                    i1l4099 000A  
                                  i1l3821 06C5                                    i1l3813 06B3  
                                  i1l3741 0CA8                                    i1l3733 0C9E  
                                  i1l3469 06A5                                    i1l3573 01DD  
                                  i1l3565 01A6                                    i1l3557 018B  
                                  i1l3549 016F                                    i1l3581 0205  
                                  i1l3493 00A4                                    i1l3485 008B  
                                  i1l3477 0074                                    i1l3901 0329  
                                  i1l3389 0CE8                                    i1l3831 06DB  
                                  i1l3823 06CC                                    i1l3815 06B8  
                                  i1l3735 0CA3                                    i1l3743 0CAA  
                                  i1l3751 0CB5                                    i1l3575 01E4  
                                  i1l3567 01AD                                    i1l3559 0192  
                                  i1l3495 00A7                                    i1l3479 007A  
                                  i1l3399 033B                                    i1l3911 0FF2  
                                  i1l3903 0FA8                                    u204_20 0F3B  
                                  u212_20 055A                                    u300_20 015E  
                                  u220_20 0D85                                    i1l3833 06E0  
                                  i1l3841 070F                                    i1l3825 06D0  
                                  i1l3817 06BF                                    i1l3745 0CAC  
                                  i1l3737 0CA4                                    i1l3753 0CB7  
                                  u204_21 0F3A                                    u212_21 0559  
                                  i1l3585 0C1D                                    i1l3577 01E8  
                                  i1l3569 01B1                                    u300_21 015D  
                                  i1l3497 00B8                                    i1l3489 008F  
                                  i1l3921 0CC0                                    u220_21 0D84  
                                  i1l3913 0FF3                                    i1l3905 0FDE  
                                  i1l3835 06EE                                    i1l3827 06D2  
                                  i1l3819 06C3                                    i1l3739 0CA6  
                                  i1l3755 0CB9                                    i1l3747 0CAF  
                                  i1l3587 0D09                                    i1l3499 00C7  
                                  i1l3579 01F1                                    i1l3851 022D  
                                  i1l3843 020A                                    i1l3923 0CC5  
                                  i1l3931 0CCC                                    i1l3915 0FF9  
                                  i1l3907 0FEB                                    i1l3837 06FD  
                                  i1l3829 06D9                                    i1l3749 0CB4  
                                  i1l3757 0CBB                                    i1l3861 0251  
                                  i1l3853 0235                                    i1l3845 021F  
                                  i1l3933 0CCE                                    i1l3925 0CC6  
                                  i1l3917 0FFD                                    i1l3909 0FF0  
                                  i1l3839 070C                                    i1l3759 0CBD  
                                  i1l3871 026F                                    i1l3863 0257  
                                  i1l3855 023B                                    i1l3847 0223  
                                  i1l3927 0CC8                                    i1l3919 0FFE  
                                  u205_20 0F44                                    u213_20 056C  
                                  u301_20 016F                                    u221_20 0D8E  
                                  u205_21 0F43                                    u213_21 056B  
                                  u301_21 016E                                    i1l3881 02DC  
                                  i1l3873 0278                                    i1l3865 025F  
                                  i1l3857 0243                                    i1l3849 0227  
                                  i1l3929 0CCA                                    u221_21 0D8D  
                                  i1l3883 02DF                                    i1l3891 02FE  
                                  i1l3875 0290                                    i1l3867 0265  
                                  i1l3859 0249                                    i1l3971 0D57  
                                  i1l3885 02ED                                    i1l3877 029F  
                                  i1l3869 026A                                    i1l3893 0305  
                                  i1l3981 0D47                                    i1l3973 0D5E  
                                  i1l3983 0D1F                                    i1l3895 0311  
                                  i1l3887 02F3                                    i1l3879 02CE  
                                  i1l3975 0D36                                    i1l3967 0D4D  
                                  u310_20 0CB4                                    u206_20 0F48  
                                  u214_20 057E                                    u302_20 0184  
                                  u230_20 072D                                    u222_20 0D93  
                                  i1l3985 0D21                                    u310_21 0CB3  
                                  u206_21 0F47                                    u214_21 057D  
                                  u302_21 0183                                    i1l3897 0321  
                                  i1l3889 02F6                                    i1l3977 0D38  
                                  u230_21 072C                                    u222_21 0D92  
                                  i1l3969 0D4F                                    i1l3987 0D29  
                                  i1l3899 0325                                    i1l3979 0D40  
                                  i1l3989 0D30                                    u207_20 0F53  
                                  u215_20 0590                                    u223_20 0CD9  
                                  u303_20 018B                                    u231_20 073E  
                                  u207_21 0F52                                    u215_21 058F  
                                  u223_21 0CD8                                    u303_21 018A  
                                  u231_21 073D                                    u216_20 05A2  
                                  u224_20 0CDF                                    u304_20 01A0  
                                  u216_21 05A1                                    u224_21 0CDE  
                                  u304_21 019F                                    u208_25 0525  
                                  u240_25 0E9C                                    u232_25 0742  
                                  u217_20 05B4                                    u209_20 053A  
                                  u241_20 0EA8                                    u225_20 0DB7  
                                  u305_20 01A6                                    u233_20 074E  
                                  u217_21 05B3                                    u209_21 0539  
                                  u241_21 0EA7                                    u225_21 0DB6  
                                  u305_21 01A5                                    u233_21 074D  
                                  _LCDcmd 0C39                                    u330_20 06CC  
                                  u218_20 05C6                                    u306_20 01F1  
                                  u330_21 06CB                                    u218_21 05C5  
                                  u306_21 01F0                                    u242_25 0EA9  
                                  u250_25 0E81                                    u226_25 0DBC  
                                  u234_25 074F                                    u331_20 06D9  
                                  u219_20 05CB                                    u243_20 0EB7  
                                  u251_20 0E8B                                    u307_20 0205  
                                  u235_20 075D                                    u331_21 06D8  
                                  u219_21 05CA                                    u243_21 0EB6  
                                  u251_21 0E8A                                    u307_21 0204  
                                  u235_21 075C                                    u243_25 0EB3  
                                  u227_25 0DC1                                    u235_25 0759  
                                  u332_20 06E0                                    u228_20 0DCB  
                                  u340_20 0249                                    u332_21 06DF  
                                  u228_21 0DCA                                    u340_21 0248  
                                  u308_25 0D18                                    u244_25 0EBD  
                                  u236_25 0763                                    u404_27 05CC  
                                  u333_20 06EE                                    u309_20 0CA3  
                                  u245_20 0EC7                                    u341_20 0257  
                                  u261_20 0CF0                                    u237_20 076D  
                                  u229_20 0722                                    u333_21 06ED  
                                  u309_21 0CA2                                    u245_21 0EC6  
                                  u341_21 0256                                    u261_21 0CEF  
                                  u237_21 076C                                    u229_21 0721  
                                  u333_25 06EA                                    u334_20 06FD  
                                  u246_20 0E62                                    u342_20 0265  
                                  u238_20 0772                                    u270_20 03A9  
                                  u262_20 0347                                    u350_20 0FF9  
                                  u334_21 06FC                                    u246_21 0E61  
                                  u342_21 0264                                    u238_21 0771  
                                  u270_21 03A8                                    u262_21 0346  
                                  u350_21 0FF8                                    u334_25 06F9  
                                  u335_20 070C                                    u239_20 0E98  
                                  u343_20 026A                                    u351_20 0CC5  
                                  u271_20 03AF                                    u263_20 034C  
                                  u335_21 070B                                    u239_21 0E97  
                                  u343_21 0269                                    u351_21 0CC4  
                                  u271_21 03AE                                    u263_21 034B  
                                  u335_25 0708                                    u247_25 0E66  
                                  u336_20 0719                                    u248_20 0E72  
                                  u344_20 026F                                    u280_20 0403  
                                  u272_20 03BA                                    u264_20 0357  
                                  u336_21 0716                                    u248_21 0E71  
                                  u344_21 026E                                    u280_21 0402  
                                  u272_21 03B9                                    u264_21 0356  
                                  u329_20 06BF                                    u249_20 0E7C  
                                  u345_20 0278                                    u281_20 040E  
                                  u273_20 03BF                                    u265_20 0367  
                                  u353_20 0D5E                                    u329_21 06BE  
                                  u249_21 0E7B                                    u345_21 0277  
                                  u281_21 040D                                    u273_21 03BE  
                                  u265_21 0366                                    u353_21 0D5D  
                                  u337_24 071B                                    u249_25 0E78  
                                  u290_20 007A                                    u346_20 029B  
                                  u338_20 022D                                    u354_20 0D47  
                                  u282_20 041E                                    u274_20 03C3  
                                  u266_20 0377                                    u290_21 0079  
                                  u338_21 022C                                    u354_21 0D46  
                                  u282_21 041D                                    u274_21 03C2  
                                  u266_21 0376                                    u355_20 0D30  
                                  u291_20 00A4                                    u347_20 02DC  
                                  u339_20 023B                                    u283_20 0430  
                                  u275_20 03CE                                    u267_20 037C  
                                  u355_21 0D2F                                    u291_21 00A3  
                                  u347_21 02DB                                    u339_21 023A  
                                  u283_21 042F                                    u275_21 03CD  
                                  u267_21 037B                                    u347_25 02D8  
                                  u292_20 00D7                                    u348_20 02ED  
                                  u284_20 0436                                    u276_20 03D3  
                                  u268_20 0387                                    u292_21 00D6  
                                  u348_21 02EC                                    u284_21 0435  
                                  u276_21 03D2                                    u268_21 0386  
                                  u348_25 02E9                                    _LCDstr 0CF5  
                                  u293_20 00FE                                    u285_20 0441  
                                  u277_20 03DE                                    u269_20 0397  
                                  u349_20 0FEB                                    u293_21 00FD  
                                  u285_21 0440                                    u277_21 03DD  
                                  u269_21 0396                                    u349_21 0FEA  
                                  u349_25 0FE7                                    u294_20 0122  
                                  u286_20 0446                                    u278_20 03EE  
                                  u390_20 0033                                    u294_21 0121  
                                  u286_21 0445                                    u278_21 03ED  
                                  u390_21 0032                                    u294_25 011E  
                                  u199_20 0F12                                    u287_20 0D08  
                                  u295_20 012D                                    u279_20 03FE  
                                  u391_20 0037                                    u383_20 000A  
                                  u199_21 0F11                                    u287_21 0D07  
                                  u295_21 012C                                    u279_21 03FD  
                                  u391_21 0036                                    u383_21 0009  
                                  u288_20 065D                                    u296_20 0133  
                                  u392_20 003C                                    u384_20 000F  
                                  u288_21 065C                                    u296_21 0132  
                                  u392_21 003B                                    u384_21 000E  
                                  u288_25 0659                                    u289_20 068D  
                                  u297_20 0139                                    u385_20 0013  
                                  u289_21 068C                                    u297_21 0138  
                                  u385_21 0012                                    u289_25 0689  
                                  u298_20 0148                                    u386_20 001B  
                                  u298_21 0147                                    u386_21 001A  
                                  u298_25 0144                                    u299_20 0158  
                                  u387_20 001F                                    u299_21 0157  
                                  u387_21 001E                                    u388_20 0027  
                                  u388_21 0026                                    _OSCFRQ 0893  
                                  u389_20 002B                                    u389_21 002A  
                               ??_ReadI2C 0070                               LCDsend2x4@c 00A5  
                         _TMR3_WriteTimer 0CAF      __end_of_TMR1_DefaultInterruptHandler 0003  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0002  
                            _CCPTMRS1bits 021F                             ?i1_LCDsend2x4 0072  
                                  ___wmul 0DB1                                 ??___awdiv 007A  
                       __end_of_TMR2_Stop 0C1D                                 ??___lwdiv 0074  
                               ??___lwmod 007C                       __size_of_TMR2_Start 0003  
                 __end_of_PWM6_Initialize 0C90                          ___awdiv@quotient 0022  
                 __size_of_monitoring_ISR 0058                           _ADCC_Initialize 0D64  
                          _PMD_Initialize 0C48                                 ??_isdigit 0070  
                         menuLCD_ISR@diff 0046         __size_of_ADCC_GetSingleConversion 0012  
               ?_ADCC_GetSingleConversion 0070                   __end_of_TMR2_StartTimer 0C21  
TMR5_SetInterruptHandler@InterruptHandler 00A0  TMR3_SetInterruptHandler@InterruptHandler 00A0  
TMR1_SetInterruptHandler@InterruptHandler 00A0                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 0CAF                       __size_ofi1_WriteI2C 004B  
                        ?_TMR1_Initialize 0070                   __end_of_TMR5_Initialize 0E2D  
                       _SYSTEM_Initialize 0D95                   __end_of__initialization 0069  
                      ?_SYSTEM_Initialize 0070                         __end_of_Clock_ISR 071C  
                         _TMR5_WriteTimer 0CC0                      __size_of_menuLCD_ISR 0131  
                          __pcstackCOMMON 0070                            ??i1_LCDsend2x4 0073  
                            __pidataBANK0 0C77                              __pidataBANK1 0C33  
                     ??_SYSTEM_Initialize 00A2                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                                 ?_TMR3_ISR 0070  
                               ?_TMR5_ISR 0070                              menuLCD_ISR@l 0043  
         differenceBetweenTimePeriod@diff 007C                             __end_of_tsttc 0448  
                        ?_TMR2_Initialize 0070           differenceBetweenTimePeriod@stop 0076  
                  __end_of_PMD_Initialize 0C50                              _alarmsEnable 0066  
                            ??_LCDsend2x4 00A3                 __end_of_SYSTEM_Initialize 0DB1  
                            sprintf@width 0031                   __end_of_TMR3_WriteTimer 0CC0  
                                 ??_tsttc 0072                                __pbssBANK0 004C  
                              __pbssBANK1 00A9                                   ?_LCDcmd 0070  
                        ?_TMR3_Initialize 0070                                   ?_LCDstr 0070  
                                 LCDcmd@c 0078                                   LCDstr@c 007A  
                                 LCDstr@p 007B                                __pmaintext 0E2D  
        __end_of_TMR3_SetInterruptHandler 0C62                                   ?___wmul 0070  
                              ??_TMR1_ISR 0072                                ??_TMR3_ISR 007E  
                 __end_of_ADCC_Initialize 0D7B                __end_of_PWM6_LoadDutyValue 0D1F  
                              ??_TMR5_ISR 007E                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                      __end_of_LCDsend2x4 051C                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                        ?_PWM6_Initialize 0070                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
                       ?_i2c1_driver_open 0070                                   _LCDchar 0C40  
                                 _LCDinit 05CF                                   _LCDsend 0F55  
                      ??_i2c1_driver_open 00A0                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                   _OSCTUNE 0892  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                                 _SSP1MSK 018E                              ??_TMR2_Start 0070  
                 __size_of_TMR2_StopTimer 0004                          ?_TMR2_StartTimer 0070  
                        ?_TMR1_WriteTimer 0070                   __end_of_TMR5_WriteTimer 0CD1  
                            LCDsend2x4@hc 00A6                              LCDsend2x4@lc 00A7  
                        ?_TMR5_Initialize 0070                           __size_of_LCDcmd 0007  
                      _i2c1_driver_i2cISR 0056                           __size_of_LCDstr 0014  
                                 _ReadI2C 0D7B                ??_TMR5_SetInterruptHandler 00A2  
                            ??i1_WriteI2C 0070                                   ___awdiv 071C  
                         __size_of___wmul 001F                                   ___lwdiv 0E90  
                                 ___lwmod 0E5C                        __end_of_TMR2_Start 0C1A  
                              ??_WriteI2C 00A0                                   __ptext1 0C6B  
                                 __ptext2 07FB                                   __ptext3 0C1A  
                                 __ptext4 0D95                                   __ptext5 0E0E  
                                 __ptext6 0C62                                   __ptext7 0DEF  
                                 __ptext8 0C59                                   __ptext9 0C90  
                          _monitoring_ISR 0FA8            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                                   _dpowers 100F  
                   _OSCILLATOR_Initialize 0C50                                 _T2CONbits 028E  
                            __size_of_map 0025                                   _isdigit 0CD1  
                               _T3CONbits 0214         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 00A0                 ?_TMR1_SetInterruptHandler 00A0  
                               _T2HLTbits 028F                                 _T5CONbits 021A  
                    __end_ofi1_LCDsend2x4 05CF                __size_of_SYSTEM_Initialize 001C  
                                 _sprintf 006D                                   clrloop0 0C28  
                    end_of_initialization 0069                          ?_TMR3_WriteTimer 0070  
                               _T2RSTbits 0291                        __end_ofi1_WriteI2C 0F55  
                                 init_ram 0C2D                                   initloop 0C2E  
                          i1LCDsend2x4@hc 0076                            i1LCDsend2x4@lc 0077  
            ?_differenceBetweenTimePeriod 0070                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 0CF5                    __end_of_monitoring_ISR 1000  
                               _TMR2_Stop 0C1A                  _TMR3_SetInterruptHandler 0C59  
                   _TMR5_InterruptHandler 0067                                 _TRISCbits 0013  
                           _alarmPWMStart 00AF                          ?_TMR5_WriteTimer 0070  
                              map@out_max 002C                                map@out_min 002A  
                 TMR5_WriteTimer@timerVal 0070                            __end_of_LCDcmd 0C40  
                          __end_of_LCDstr 0D09                            LCDsend2x4@mode 00A2  
                               _Clock_ISR 06B3                            __end_of___wmul 0DD0  
                         ?_monitoring_ISR 0070                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR3_ISR 0017                         __size_of_TMR5_ISR 0017  
                              ?_TMR2_Stop 0070                    ?_OSCILLATOR_Initialize 0070  
                           menuLCD_ISR@tt 003F                       start_initialization 0042  
    __end_of_TMR5_DefaultInterruptHandler 0800     __size_of_TMR5_DefaultInterruptHandler 0001  
            _TMR5_DefaultInterruptHandler 07FF           __size_of_PIN_MANAGER_Initialize 003E  
                             __end_of_map 07FB                            _TMR2_StopTimer 07FB  
                        WriteI2C@data_out 00A1                                  ??_LCDcmd 0078  
                                ??_LCDstr 0079                             ??_menuLCD_ISR 0035  
                __size_of_TMR1_Initialize 001F                          ??_PMD_Initialize 00A0  
                              ?_Clock_ISR 0070                                  ??___wmul 0074  
                             __pdataBANK0 005B                               __pdataBANK1 00AF  
                       __size_of_WriteI2C 005A                     __size_ofi1_LCDsend2x4 00B3  
                _ADCC_GetSingleConversion 0CE3                    __end_of_TMR2_StopTimer 07FF  
                                ?_LCDchar 0070                                  ?_LCDinit 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                      _PWM6_LoadDutyValue 0D09                  __size_of_TMR2_Initialize 000E  
                            _isdigit$2747 0070             ?_TMR5_DefaultInterruptHandler 0070  
    __size_of_differenceBetweenTimePeriod 006E                                  LCDchar@c 0078  
                                LCDsend@c 00A3                       ?_PWM6_LoadDutyValue 0070  
                             sprintf@flag 0030                 __size_of_i2c1_driver_open 000C  
                             sprintf@prec 002D                                  ?_ReadI2C 0070  
                               __pnvBANK0 0067                                 __pnvBANK1 00B5  
                        ___lwdiv@dividend 0072                    _PIN_MANAGER_Initialize 0ECC  
                __size_of_TMR3_Initialize 001F                       __end_of_menuLCD_ISR 033B  
        __end_of_TMR1_SetInterruptHandler 0C27           ADCC_GetSingleConversion@channel 0073  
                                ?___awdiv 0076                              i1_LCDsend2x4 051C  
                               _dimingLed 0052                                  ?___lwdiv 0070  
                                ?___lwmod 0078               _i2c1_driver_busCollisionISR 0058  
                    ??_PWM6_LoadDutyValue 0072              ??_INTERRUPT_InterruptManager 007E  
                             ??_TMR2_Stop 00A0                                  ?_isdigit 0070  
                         ?_TMR2_StopTimer 0070                  __size_of_PWM6_Initialize 000D  
                        ___lwdiv@quotient 0075                                  ?_sprintf 0020  
                                _T2CLKCON 0290                            __size_of_tsttc 010D  
                          ___wmul@product 0074                                  _LATAbits 0016  
                               clear_ram0 0C27                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR2_StartTimer 0004  
                           i1LCDsend2x4@c 0075                                 _tempAlarm 0064  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 003C  
                                _PIR3bits 070F                                  _PIR4bits 0710  
              ??_TMR3_SetInterruptHandler 00A2                  __size_of_TMR5_Initialize 001F  
                             ??_Clock_ISR 0070                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 0D1F  
                                _TMR3_ISR 0D36                                  _TMR5_ISR 0D4D  
                                _SSP1STAT 018F                                 map@in_max 0028  
                               map@in_min 0026                         ??_TMR1_Initialize 00A2  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0070                        i1WriteI2C@data_out 0071  
       __size_of_TMR5_SetInterruptHandler 0009                          __size_of_LCDchar 0008  
               ?_TMR5_SetInterruptHandler 00A0                          __size_of_LCDinit 0076  
                        __size_of_LCDsend 0053                         ??_TMR2_Initialize 00A0  
                             _menuLCD_ISR 020A            ??_TMR5_DefaultInterruptHandler 0070  
                        __size_of_ReadI2C 001A                                _ADSTATbits 0097  
                __size_of_TMR3_WriteTimer 0011                          ??_monitoring_ISR 007B  
                 ??_OSCILLATOR_Initialize 00A0                          __size_of___awdiv 0060  
                        __size_of___lwdiv 003C                          __size_of___lwmod 0034  
                                _WriteI2C 077C                         ??_TMR3_Initialize 00A2  
                _TMR1_SetInterruptHandler 0C21                          i1LCDsend2x4@mode 0072  
                   _TMR1_InterruptHandler 00B5                                sprintf@val 002E  
                                _clkAlarm 005B                  __size_of_ADCC_Initialize 0017  
                        __size_of_isdigit 0012                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                                  __ptext10 0DD0  
                                __ptext11 0C21                                  __ptext20 077C  
                                __ptext12 0C83                                  __ptext13 0C48  
                              _T1GCONbits 020F                                  __ptext30 0CC0  
                                __ptext22 0D4D                                  __ptext14 0ECC  
                                __ptext31 0D36                                  __ptext23 07FF  
                                __ptext15 0C50                                  __ptext40 0C1D  
                                __ptext32 0003                                  __ptext24 0FA8  
                                __ptext16 0D64                                  __ptext41 0C17  
                                __ptext33 020A                                  __ptext25 033B  
                                __ptext17 05CF                                  __ptext50 0C9E  
                                __ptext42 0D09                                  __ptext34 006D  
                                __ptext26 0D7B                                  __ptext18 0448  
                                __ptext51 06B3                                  __ptext43 0CF5  
                                __ptext35 0CD1                                  __ptext27 07D6  
                                __ptext19 0F55                                  __ptext52 0002  
                                __ptext44 0C40                                  __ptext36 0DB1  
                                __ptext28 071C                                  __ptext45 0C39  
                                __ptext37 0E5C                                  __ptext29 0CE3  
                                __ptext46 051C                                  __ptext38 0E90  
                                __ptext47 0F0A                                  __ptext39 0645  
                                __ptext48 0CAF                                  __ptext49 0D1F  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
                        __size_of_sprintf 019D                                _T3GCONbits 0215  
                 TMR3_WriteTimer@timerVal 0070                          _i2c1_driver_open 0C6B  
                       ??_PWM6_Initialize 00A0                             __size_of_main 002F  
                              _T5GCONbits 021B                                  _lumAlarm 0062  
                                _lumLevel 0054                  __size_of_TMR5_WriteTimer 0011  
                              tsttc@value 0073                ??_ADCC_GetSingleConversion 0073  
                                int$flags 007E                         ??_TMR2_StartTimer 0070  
      __end_of_INTERRUPT_InterruptManager 0040                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                       menuLCD_ISR@F12782 00A9      __end_of_TMR3_DefaultInterruptHandler 0004  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 0003  
                       ??_TMR5_Initialize 00A2                                _INTCONbits 000B  
                                isdigit@c 0071                                _LCDsend2x4 0448  
                                intlevel1 0000                                 sprintf@ap 002C  
                               sprintf@sp 0033                          ___lwmod@dividend 007A  
                 ?_PIN_MANAGER_Initialize 0070       __end_of_differenceBetweenTimePeriod 06B3  
             _differenceBetweenTimePeriod 0645                          ??_TMR2_StopTimer 00A0  
                       ??_TMR3_WriteTimer 0072                             __pstringtext1 100F  
                           __pstringtext2 1000                             __pstringtext3 1019  
                           __pstringtext4 1020                             __pstringtext5 0000  
           ??_differenceBetweenTimePeriod 0020                                  sprintf@c 0034  
                                sprintf@f 0020             ?_TMR3_DefaultInterruptHandler 0070  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         ___lwmod@divisor 0078                           ___lwmod@counter 007D  
             PWM6_LoadDutyValue@dutyValue 0070                                _TMR2_Start 0C17  
          __end_of_PIN_MANAGER_Initialize 0F0A                         ??_ADCC_Initialize 00A0  
                         _TMR1_Initialize 0DD0  
