

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Oct 20 17:31:20 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 2.30
    62                           ; Generated 15/09/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F18875 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000D                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001C                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  008C                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0110                     	;# 
   156  0110                     	;# 
   157  0111                     	;# 
   158  0112                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0114                     	;# 
   163  0115                     	;# 
   164  0116                     	;# 
   165  0116                     	;# 
   166  0117                     	;# 
   167  0119                     	;# 
   168  0119                     	;# 
   169  0119                     	;# 
   170  011A                     	;# 
   171  011A                     	;# 
   172  011A                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011C                     	;# 
   179  011C                     	;# 
   180  011C                     	;# 
   181  011D                     	;# 
   182  011D                     	;# 
   183  011D                     	;# 
   184  011E                     	;# 
   185  011E                     	;# 
   186  011E                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  018E                     	;# 
   195  018F                     	;# 
   196  0190                     	;# 
   197  0191                     	;# 
   198  0192                     	;# 
   199  0196                     	;# 
   200  0197                     	;# 
   201  0198                     	;# 
   202  0199                     	;# 
   203  019A                     	;# 
   204  019B                     	;# 
   205  019C                     	;# 
   206  020C                     	;# 
   207  020C                     	;# 
   208  020D                     	;# 
   209  020E                     	;# 
   210  020F                     	;# 
   211  020F                     	;# 
   212  0210                     	;# 
   213  0210                     	;# 
   214  0211                     	;# 
   215  0211                     	;# 
   216  0212                     	;# 
   217  0212                     	;# 
   218  0213                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0216                     	;# 
   223  0216                     	;# 
   224  0217                     	;# 
   225  0217                     	;# 
   226  0218                     	;# 
   227  0218                     	;# 
   228  0219                     	;# 
   229  021A                     	;# 
   230  021B                     	;# 
   231  021B                     	;# 
   232  021C                     	;# 
   233  021C                     	;# 
   234  021D                     	;# 
   235  021D                     	;# 
   236  021E                     	;# 
   237  021F                     	;# 
   238  028C                     	;# 
   239  028C                     	;# 
   240  028D                     	;# 
   241  028D                     	;# 
   242  028E                     	;# 
   243  028F                     	;# 
   244  0290                     	;# 
   245  0290                     	;# 
   246  0291                     	;# 
   247  0292                     	;# 
   248  0292                     	;# 
   249  0293                     	;# 
   250  0293                     	;# 
   251  0294                     	;# 
   252  0295                     	;# 
   253  0296                     	;# 
   254  0296                     	;# 
   255  0297                     	;# 
   256  0298                     	;# 
   257  0298                     	;# 
   258  0299                     	;# 
   259  0299                     	;# 
   260  029A                     	;# 
   261  029B                     	;# 
   262  029C                     	;# 
   263  029C                     	;# 
   264  029D                     	;# 
   265  030C                     	;# 
   266  030C                     	;# 
   267  030D                     	;# 
   268  030E                     	;# 
   269  030F                     	;# 
   270  0310                     	;# 
   271  0310                     	;# 
   272  0311                     	;# 
   273  0312                     	;# 
   274  0313                     	;# 
   275  0314                     	;# 
   276  0314                     	;# 
   277  0315                     	;# 
   278  0316                     	;# 
   279  0317                     	;# 
   280  0318                     	;# 
   281  0318                     	;# 
   282  0319                     	;# 
   283  031A                     	;# 
   284  031B                     	;# 
   285  031C                     	;# 
   286  031C                     	;# 
   287  031D                     	;# 
   288  031E                     	;# 
   289  031F                     	;# 
   290  038C                     	;# 
   291  038C                     	;# 
   292  038D                     	;# 
   293  038E                     	;# 
   294  0390                     	;# 
   295  0390                     	;# 
   296  0391                     	;# 
   297  0392                     	;# 
   298  040C                     	;# 
   299  040D                     	;# 
   300  040E                     	;# 
   301  040F                     	;# 
   302  0410                     	;# 
   303  0411                     	;# 
   304  0416                     	;# 
   305  0416                     	;# 
   306  0417                     	;# 
   307  0418                     	;# 
   308  0418                     	;# 
   309  0419                     	;# 
   310  041A                     	;# 
   311  041A                     	;# 
   312  041B                     	;# 
   313  041C                     	;# 
   314  041C                     	;# 
   315  041D                     	;# 
   316  041E                     	;# 
   317  041F                     	;# 
   318  048C                     	;# 
   319  048C                     	;# 
   320  048D                     	;# 
   321  048E                     	;# 
   322  048F                     	;# 
   323  048F                     	;# 
   324  0490                     	;# 
   325  0491                     	;# 
   326  0492                     	;# 
   327  0492                     	;# 
   328  0493                     	;# 
   329  0494                     	;# 
   330  0495                     	;# 
   331  0495                     	;# 
   332  0496                     	;# 
   333  0497                     	;# 
   334  0498                     	;# 
   335  0499                     	;# 
   336  049A                     	;# 
   337  049B                     	;# 
   338  049C                     	;# 
   339  049D                     	;# 
   340  050C                     	;# 
   341  050C                     	;# 
   342  050D                     	;# 
   343  050E                     	;# 
   344  050F                     	;# 
   345  050F                     	;# 
   346  0510                     	;# 
   347  0511                     	;# 
   348  0512                     	;# 
   349  0512                     	;# 
   350  0513                     	;# 
   351  0514                     	;# 
   352  0515                     	;# 
   353  0515                     	;# 
   354  0516                     	;# 
   355  0517                     	;# 
   356  0518                     	;# 
   357  0519                     	;# 
   358  051A                     	;# 
   359  051B                     	;# 
   360  051C                     	;# 
   361  051D                     	;# 
   362  058C                     	;# 
   363  058C                     	;# 
   364  058D                     	;# 
   365  058E                     	;# 
   366  058F                     	;# 
   367  058F                     	;# 
   368  0590                     	;# 
   369  0591                     	;# 
   370  0592                     	;# 
   371  0593                     	;# 
   372  060C                     	;# 
   373  060D                     	;# 
   374  060E                     	;# 
   375  060F                     	;# 
   376  0610                     	;# 
   377  0611                     	;# 
   378  0612                     	;# 
   379  0613                     	;# 
   380  0614                     	;# 
   381  0616                     	;# 
   382  0617                     	;# 
   383  0618                     	;# 
   384  0619                     	;# 
   385  061A                     	;# 
   386  061B                     	;# 
   387  061C                     	;# 
   388  061D                     	;# 
   389  061E                     	;# 
   390  068C                     	;# 
   391  068D                     	;# 
   392  068E                     	;# 
   393  068F                     	;# 
   394  0690                     	;# 
   395  0691                     	;# 
   396  0692                     	;# 
   397  0693                     	;# 
   398  0694                     	;# 
   399  070C                     	;# 
   400  070D                     	;# 
   401  070E                     	;# 
   402  070F                     	;# 
   403  0710                     	;# 
   404  0711                     	;# 
   405  0712                     	;# 
   406  0713                     	;# 
   407  0714                     	;# 
   408  0716                     	;# 
   409  0717                     	;# 
   410  0718                     	;# 
   411  0719                     	;# 
   412  071A                     	;# 
   413  071B                     	;# 
   414  071C                     	;# 
   415  071D                     	;# 
   416  071E                     	;# 
   417  0796                     	;# 
   418  0797                     	;# 
   419  0798                     	;# 
   420  0799                     	;# 
   421  079A                     	;# 
   422  079B                     	;# 
   423  080C                     	;# 
   424  080D                     	;# 
   425  080E                     	;# 
   426  080F                     	;# 
   427  0810                     	;# 
   428  0811                     	;# 
   429  0812                     	;# 
   430  0813                     	;# 
   431  0814                     	;# 
   432  081A                     	;# 
   433  081B                     	;# 
   434  081C                     	;# 
   435  081D                     	;# 
   436  081E                     	;# 
   437  081F                     	;# 
   438  088C                     	;# 
   439  088D                     	;# 
   440  088E                     	;# 
   441  088F                     	;# 
   442  0890                     	;# 
   443  0891                     	;# 
   444  0892                     	;# 
   445  0893                     	;# 
   446  0895                     	;# 
   447  0896                     	;# 
   448  0897                     	;# 
   449  0898                     	;# 
   450  0899                     	;# 
   451  089A                     	;# 
   452  089B                     	;# 
   453  090C                     	;# 
   454  090E                     	;# 
   455  090F                     	;# 
   456  091F                     	;# 
   457  091F                     	;# 
   458  098F                     	;# 
   459  098F                     	;# 
   460  0990                     	;# 
   461  0991                     	;# 
   462  0992                     	;# 
   463  0993                     	;# 
   464  0994                     	;# 
   465  0995                     	;# 
   466  0996                     	;# 
   467  0997                     	;# 
   468  0E0F                     	;# 
   469  0E10                     	;# 
   470  0E11                     	;# 
   471  0E12                     	;# 
   472  0E13                     	;# 
   473  0E14                     	;# 
   474  0E15                     	;# 
   475  0E16                     	;# 
   476  0E17                     	;# 
   477  0E18                     	;# 
   478  0E19                     	;# 
   479  0E1A                     	;# 
   480  0E1B                     	;# 
   481  0E1C                     	;# 
   482  0E1D                     	;# 
   483  0E1E                     	;# 
   484  0E1F                     	;# 
   485  0E20                     	;# 
   486  0E21                     	;# 
   487  0E22                     	;# 
   488  0E23                     	;# 
   489  0E24                     	;# 
   490  0E25                     	;# 
   491  0E26                     	;# 
   492  0E27                     	;# 
   493  0E28                     	;# 
   494  0E29                     	;# 
   495  0E2A                     	;# 
   496  0E2B                     	;# 
   497  0E2C                     	;# 
   498  0E2D                     	;# 
   499  0E2E                     	;# 
   500  0E2F                     	;# 
   501  0E30                     	;# 
   502  0E31                     	;# 
   503  0E32                     	;# 
   504  0E33                     	;# 
   505  0E34                     	;# 
   506  0E35                     	;# 
   507  0E36                     	;# 
   508  0E37                     	;# 
   509  0E8F                     	;# 
   510  0E90                     	;# 
   511  0E91                     	;# 
   512  0E92                     	;# 
   513  0E93                     	;# 
   514  0E94                     	;# 
   515  0E95                     	;# 
   516  0E96                     	;# 
   517  0E97                     	;# 
   518  0E9C                     	;# 
   519  0E9D                     	;# 
   520  0E9E                     	;# 
   521  0EA1                     	;# 
   522  0EA2                     	;# 
   523  0EA3                     	;# 
   524  0EA4                     	;# 
   525  0EA5                     	;# 
   526  0EA9                     	;# 
   527  0EAA                     	;# 
   528  0EAB                     	;# 
   529  0EAC                     	;# 
   530  0EB1                     	;# 
   531  0EB2                     	;# 
   532  0EB3                     	;# 
   533  0EB8                     	;# 
   534  0EB9                     	;# 
   535  0EBA                     	;# 
   536  0EBB                     	;# 
   537  0EBC                     	;# 
   538  0EBD                     	;# 
   539  0EBE                     	;# 
   540  0EC3                     	;# 
   541  0EC5                     	;# 
   542  0EC6                     	;# 
   543  0EC7                     	;# 
   544  0EC8                     	;# 
   545  0EC9                     	;# 
   546  0ECA                     	;# 
   547  0ECB                     	;# 
   548  0ECC                     	;# 
   549  0F10                     	;# 
   550  0F11                     	;# 
   551  0F12                     	;# 
   552  0F13                     	;# 
   553  0F14                     	;# 
   554  0F15                     	;# 
   555  0F16                     	;# 
   556  0F17                     	;# 
   557  0F18                     	;# 
   558  0F19                     	;# 
   559  0F1A                     	;# 
   560  0F1B                     	;# 
   561  0F1C                     	;# 
   562  0F1D                     	;# 
   563  0F1E                     	;# 
   564  0F1F                     	;# 
   565  0F20                     	;# 
   566  0F21                     	;# 
   567  0F22                     	;# 
   568  0F23                     	;# 
   569  0F24                     	;# 
   570  0F25                     	;# 
   571  0F26                     	;# 
   572  0F27                     	;# 
   573  0F28                     	;# 
   574  0F29                     	;# 
   575  0F2A                     	;# 
   576  0F2B                     	;# 
   577  0F2C                     	;# 
   578  0F2D                     	;# 
   579  0F2E                     	;# 
   580  0F2F                     	;# 
   581  0F30                     	;# 
   582  0F31                     	;# 
   583  0F32                     	;# 
   584  0F38                     	;# 
   585  0F39                     	;# 
   586  0F3A                     	;# 
   587  0F3B                     	;# 
   588  0F3C                     	;# 
   589  0F3D                     	;# 
   590  0F3E                     	;# 
   591  0F3F                     	;# 
   592  0F40                     	;# 
   593  0F41                     	;# 
   594  0F43                     	;# 
   595  0F44                     	;# 
   596  0F45                     	;# 
   597  0F46                     	;# 
   598  0F47                     	;# 
   599  0F48                     	;# 
   600  0F49                     	;# 
   601  0F4A                     	;# 
   602  0F4B                     	;# 
   603  0F4C                     	;# 
   604  0F4E                     	;# 
   605  0F4F                     	;# 
   606  0F50                     	;# 
   607  0F51                     	;# 
   608  0F52                     	;# 
   609  0F53                     	;# 
   610  0F54                     	;# 
   611  0F55                     	;# 
   612  0F56                     	;# 
   613  0F57                     	;# 
   614  0F59                     	;# 
   615  0F5A                     	;# 
   616  0F5B                     	;# 
   617  0F5C                     	;# 
   618  0F5D                     	;# 
   619  0F61                     	;# 
   620  0F62                     	;# 
   621  0F64                     	;# 
   622  0F65                     	;# 
   623  0F66                     	;# 
   624  0F67                     	;# 
   625  0F68                     	;# 
   626  0F69                     	;# 
   627  0F6A                     	;# 
   628  0F6B                     	;# 
   629  0F6C                     	;# 
   630  0F6D                     	;# 
   631  0FE4                     	;# 
   632  0FE5                     	;# 
   633  0FE6                     	;# 
   634  0FE7                     	;# 
   635  0FE8                     	;# 
   636  0FE9                     	;# 
   637  0FEA                     	;# 
   638  0FEB                     	;# 
   639  0FED                     	;# 
   640  0FEE                     	;# 
   641  0FEF                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0008                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  000F                     	;# 
   658  0010                     	;# 
   659  0011                     	;# 
   660  0012                     	;# 
   661  0013                     	;# 
   662  0014                     	;# 
   663  0015                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0019                     	;# 
   668  001A                     	;# 
   669  001C                     	;# 
   670  001C                     	;# 
   671  001D                     	;# 
   672  001D                     	;# 
   673  001E                     	;# 
   674  001F                     	;# 
   675  008C                     	;# 
   676  008C                     	;# 
   677  008D                     	;# 
   678  008E                     	;# 
   679  008E                     	;# 
   680  008F                     	;# 
   681  0090                     	;# 
   682  0090                     	;# 
   683  0091                     	;# 
   684  0093                     	;# 
   685  0094                     	;# 
   686  0095                     	;# 
   687  0096                     	;# 
   688  0097                     	;# 
   689  0098                     	;# 
   690  0099                     	;# 
   691  009A                     	;# 
   692  009B                     	;# 
   693  009C                     	;# 
   694  009D                     	;# 
   695  009E                     	;# 
   696  010C                     	;# 
   697  010D                     	;# 
   698  010E                     	;# 
   699  010E                     	;# 
   700  010F                     	;# 
   701  0110                     	;# 
   702  0110                     	;# 
   703  0111                     	;# 
   704  0112                     	;# 
   705  0112                     	;# 
   706  0113                     	;# 
   707  0114                     	;# 
   708  0114                     	;# 
   709  0115                     	;# 
   710  0116                     	;# 
   711  0116                     	;# 
   712  0117                     	;# 
   713  0119                     	;# 
   714  0119                     	;# 
   715  0119                     	;# 
   716  011A                     	;# 
   717  011A                     	;# 
   718  011A                     	;# 
   719  011B                     	;# 
   720  011B                     	;# 
   721  011B                     	;# 
   722  011B                     	;# 
   723  011B                     	;# 
   724  011C                     	;# 
   725  011C                     	;# 
   726  011C                     	;# 
   727  011D                     	;# 
   728  011D                     	;# 
   729  011D                     	;# 
   730  011E                     	;# 
   731  011E                     	;# 
   732  011E                     	;# 
   733  011F                     	;# 
   734  011F                     	;# 
   735  011F                     	;# 
   736  011F                     	;# 
   737  011F                     	;# 
   738  018C                     	;# 
   739  018D                     	;# 
   740  018E                     	;# 
   741  018F                     	;# 
   742  0190                     	;# 
   743  0191                     	;# 
   744  0192                     	;# 
   745  0196                     	;# 
   746  0197                     	;# 
   747  0198                     	;# 
   748  0199                     	;# 
   749  019A                     	;# 
   750  019B                     	;# 
   751  019C                     	;# 
   752  020C                     	;# 
   753  020C                     	;# 
   754  020D                     	;# 
   755  020E                     	;# 
   756  020F                     	;# 
   757  020F                     	;# 
   758  0210                     	;# 
   759  0210                     	;# 
   760  0211                     	;# 
   761  0211                     	;# 
   762  0212                     	;# 
   763  0212                     	;# 
   764  0213                     	;# 
   765  0214                     	;# 
   766  0215                     	;# 
   767  0215                     	;# 
   768  0216                     	;# 
   769  0216                     	;# 
   770  0217                     	;# 
   771  0217                     	;# 
   772  0218                     	;# 
   773  0218                     	;# 
   774  0219                     	;# 
   775  021A                     	;# 
   776  021B                     	;# 
   777  021B                     	;# 
   778  021C                     	;# 
   779  021C                     	;# 
   780  021D                     	;# 
   781  021D                     	;# 
   782  021E                     	;# 
   783  021F                     	;# 
   784  028C                     	;# 
   785  028C                     	;# 
   786  028D                     	;# 
   787  028D                     	;# 
   788  028E                     	;# 
   789  028F                     	;# 
   790  0290                     	;# 
   791  0290                     	;# 
   792  0291                     	;# 
   793  0292                     	;# 
   794  0292                     	;# 
   795  0293                     	;# 
   796  0293                     	;# 
   797  0294                     	;# 
   798  0295                     	;# 
   799  0296                     	;# 
   800  0296                     	;# 
   801  0297                     	;# 
   802  0298                     	;# 
   803  0298                     	;# 
   804  0299                     	;# 
   805  0299                     	;# 
   806  029A                     	;# 
   807  029B                     	;# 
   808  029C                     	;# 
   809  029C                     	;# 
   810  029D                     	;# 
   811  030C                     	;# 
   812  030C                     	;# 
   813  030D                     	;# 
   814  030E                     	;# 
   815  030F                     	;# 
   816  0310                     	;# 
   817  0310                     	;# 
   818  0311                     	;# 
   819  0312                     	;# 
   820  0313                     	;# 
   821  0314                     	;# 
   822  0314                     	;# 
   823  0315                     	;# 
   824  0316                     	;# 
   825  0317                     	;# 
   826  0318                     	;# 
   827  0318                     	;# 
   828  0319                     	;# 
   829  031A                     	;# 
   830  031B                     	;# 
   831  031C                     	;# 
   832  031C                     	;# 
   833  031D                     	;# 
   834  031E                     	;# 
   835  031F                     	;# 
   836  038C                     	;# 
   837  038C                     	;# 
   838  038D                     	;# 
   839  038E                     	;# 
   840  0390                     	;# 
   841  0390                     	;# 
   842  0391                     	;# 
   843  0392                     	;# 
   844  040C                     	;# 
   845  040D                     	;# 
   846  040E                     	;# 
   847  040F                     	;# 
   848  0410                     	;# 
   849  0411                     	;# 
   850  0416                     	;# 
   851  0416                     	;# 
   852  0417                     	;# 
   853  0418                     	;# 
   854  0418                     	;# 
   855  0419                     	;# 
   856  041A                     	;# 
   857  041A                     	;# 
   858  041B                     	;# 
   859  041C                     	;# 
   860  041C                     	;# 
   861  041D                     	;# 
   862  041E                     	;# 
   863  041F                     	;# 
   864  048C                     	;# 
   865  048C                     	;# 
   866  048D                     	;# 
   867  048E                     	;# 
   868  048F                     	;# 
   869  048F                     	;# 
   870  0490                     	;# 
   871  0491                     	;# 
   872  0492                     	;# 
   873  0492                     	;# 
   874  0493                     	;# 
   875  0494                     	;# 
   876  0495                     	;# 
   877  0495                     	;# 
   878  0496                     	;# 
   879  0497                     	;# 
   880  0498                     	;# 
   881  0499                     	;# 
   882  049A                     	;# 
   883  049B                     	;# 
   884  049C                     	;# 
   885  049D                     	;# 
   886  050C                     	;# 
   887  050C                     	;# 
   888  050D                     	;# 
   889  050E                     	;# 
   890  050F                     	;# 
   891  050F                     	;# 
   892  0510                     	;# 
   893  0511                     	;# 
   894  0512                     	;# 
   895  0512                     	;# 
   896  0513                     	;# 
   897  0514                     	;# 
   898  0515                     	;# 
   899  0515                     	;# 
   900  0516                     	;# 
   901  0517                     	;# 
   902  0518                     	;# 
   903  0519                     	;# 
   904  051A                     	;# 
   905  051B                     	;# 
   906  051C                     	;# 
   907  051D                     	;# 
   908  058C                     	;# 
   909  058C                     	;# 
   910  058D                     	;# 
   911  058E                     	;# 
   912  058F                     	;# 
   913  058F                     	;# 
   914  0590                     	;# 
   915  0591                     	;# 
   916  0592                     	;# 
   917  0593                     	;# 
   918  060C                     	;# 
   919  060D                     	;# 
   920  060E                     	;# 
   921  060F                     	;# 
   922  0610                     	;# 
   923  0611                     	;# 
   924  0612                     	;# 
   925  0613                     	;# 
   926  0614                     	;# 
   927  0616                     	;# 
   928  0617                     	;# 
   929  0618                     	;# 
   930  0619                     	;# 
   931  061A                     	;# 
   932  061B                     	;# 
   933  061C                     	;# 
   934  061D                     	;# 
   935  061E                     	;# 
   936  068C                     	;# 
   937  068D                     	;# 
   938  068E                     	;# 
   939  068F                     	;# 
   940  0690                     	;# 
   941  0691                     	;# 
   942  0692                     	;# 
   943  0693                     	;# 
   944  0694                     	;# 
   945  070C                     	;# 
   946  070D                     	;# 
   947  070E                     	;# 
   948  070F                     	;# 
   949  0710                     	;# 
   950  0711                     	;# 
   951  0712                     	;# 
   952  0713                     	;# 
   953  0714                     	;# 
   954  0716                     	;# 
   955  0717                     	;# 
   956  0718                     	;# 
   957  0719                     	;# 
   958  071A                     	;# 
   959  071B                     	;# 
   960  071C                     	;# 
   961  071D                     	;# 
   962  071E                     	;# 
   963  0796                     	;# 
   964  0797                     	;# 
   965  0798                     	;# 
   966  0799                     	;# 
   967  079A                     	;# 
   968  079B                     	;# 
   969  080C                     	;# 
   970  080D                     	;# 
   971  080E                     	;# 
   972  080F                     	;# 
   973  0810                     	;# 
   974  0811                     	;# 
   975  0812                     	;# 
   976  0813                     	;# 
   977  0814                     	;# 
   978  081A                     	;# 
   979  081B                     	;# 
   980  081C                     	;# 
   981  081D                     	;# 
   982  081E                     	;# 
   983  081F                     	;# 
   984  088C                     	;# 
   985  088D                     	;# 
   986  088E                     	;# 
   987  088F                     	;# 
   988  0890                     	;# 
   989  0891                     	;# 
   990  0892                     	;# 
   991  0893                     	;# 
   992  0895                     	;# 
   993  0896                     	;# 
   994  0897                     	;# 
   995  0898                     	;# 
   996  0899                     	;# 
   997  089A                     	;# 
   998  089B                     	;# 
   999  090C                     	;# 
  1000  090E                     	;# 
  1001  090F                     	;# 
  1002  091F                     	;# 
  1003  091F                     	;# 
  1004  098F                     	;# 
  1005  098F                     	;# 
  1006  0990                     	;# 
  1007  0991                     	;# 
  1008  0992                     	;# 
  1009  0993                     	;# 
  1010  0994                     	;# 
  1011  0995                     	;# 
  1012  0996                     	;# 
  1013  0997                     	;# 
  1014  0E0F                     	;# 
  1015  0E10                     	;# 
  1016  0E11                     	;# 
  1017  0E12                     	;# 
  1018  0E13                     	;# 
  1019  0E14                     	;# 
  1020  0E15                     	;# 
  1021  0E16                     	;# 
  1022  0E17                     	;# 
  1023  0E18                     	;# 
  1024  0E19                     	;# 
  1025  0E1A                     	;# 
  1026  0E1B                     	;# 
  1027  0E1C                     	;# 
  1028  0E1D                     	;# 
  1029  0E1E                     	;# 
  1030  0E1F                     	;# 
  1031  0E20                     	;# 
  1032  0E21                     	;# 
  1033  0E22                     	;# 
  1034  0E23                     	;# 
  1035  0E24                     	;# 
  1036  0E25                     	;# 
  1037  0E26                     	;# 
  1038  0E27                     	;# 
  1039  0E28                     	;# 
  1040  0E29                     	;# 
  1041  0E2A                     	;# 
  1042  0E2B                     	;# 
  1043  0E2C                     	;# 
  1044  0E2D                     	;# 
  1045  0E2E                     	;# 
  1046  0E2F                     	;# 
  1047  0E30                     	;# 
  1048  0E31                     	;# 
  1049  0E32                     	;# 
  1050  0E33                     	;# 
  1051  0E34                     	;# 
  1052  0E35                     	;# 
  1053  0E36                     	;# 
  1054  0E37                     	;# 
  1055  0E8F                     	;# 
  1056  0E90                     	;# 
  1057  0E91                     	;# 
  1058  0E92                     	;# 
  1059  0E93                     	;# 
  1060  0E94                     	;# 
  1061  0E95                     	;# 
  1062  0E96                     	;# 
  1063  0E97                     	;# 
  1064  0E9C                     	;# 
  1065  0E9D                     	;# 
  1066  0E9E                     	;# 
  1067  0EA1                     	;# 
  1068  0EA2                     	;# 
  1069  0EA3                     	;# 
  1070  0EA4                     	;# 
  1071  0EA5                     	;# 
  1072  0EA9                     	;# 
  1073  0EAA                     	;# 
  1074  0EAB                     	;# 
  1075  0EAC                     	;# 
  1076  0EB1                     	;# 
  1077  0EB2                     	;# 
  1078  0EB3                     	;# 
  1079  0EB8                     	;# 
  1080  0EB9                     	;# 
  1081  0EBA                     	;# 
  1082  0EBB                     	;# 
  1083  0EBC                     	;# 
  1084  0EBD                     	;# 
  1085  0EBE                     	;# 
  1086  0EC3                     	;# 
  1087  0EC5                     	;# 
  1088  0EC6                     	;# 
  1089  0EC7                     	;# 
  1090  0EC8                     	;# 
  1091  0EC9                     	;# 
  1092  0ECA                     	;# 
  1093  0ECB                     	;# 
  1094  0ECC                     	;# 
  1095  0F10                     	;# 
  1096  0F11                     	;# 
  1097  0F12                     	;# 
  1098  0F13                     	;# 
  1099  0F14                     	;# 
  1100  0F15                     	;# 
  1101  0F16                     	;# 
  1102  0F17                     	;# 
  1103  0F18                     	;# 
  1104  0F19                     	;# 
  1105  0F1A                     	;# 
  1106  0F1B                     	;# 
  1107  0F1C                     	;# 
  1108  0F1D                     	;# 
  1109  0F1E                     	;# 
  1110  0F1F                     	;# 
  1111  0F20                     	;# 
  1112  0F21                     	;# 
  1113  0F22                     	;# 
  1114  0F23                     	;# 
  1115  0F24                     	;# 
  1116  0F25                     	;# 
  1117  0F26                     	;# 
  1118  0F27                     	;# 
  1119  0F28                     	;# 
  1120  0F29                     	;# 
  1121  0F2A                     	;# 
  1122  0F2B                     	;# 
  1123  0F2C                     	;# 
  1124  0F2D                     	;# 
  1125  0F2E                     	;# 
  1126  0F2F                     	;# 
  1127  0F30                     	;# 
  1128  0F31                     	;# 
  1129  0F32                     	;# 
  1130  0F38                     	;# 
  1131  0F39                     	;# 
  1132  0F3A                     	;# 
  1133  0F3B                     	;# 
  1134  0F3C                     	;# 
  1135  0F3D                     	;# 
  1136  0F3E                     	;# 
  1137  0F3F                     	;# 
  1138  0F40                     	;# 
  1139  0F41                     	;# 
  1140  0F43                     	;# 
  1141  0F44                     	;# 
  1142  0F45                     	;# 
  1143  0F46                     	;# 
  1144  0F47                     	;# 
  1145  0F48                     	;# 
  1146  0F49                     	;# 
  1147  0F4A                     	;# 
  1148  0F4B                     	;# 
  1149  0F4C                     	;# 
  1150  0F4E                     	;# 
  1151  0F4F                     	;# 
  1152  0F50                     	;# 
  1153  0F51                     	;# 
  1154  0F52                     	;# 
  1155  0F53                     	;# 
  1156  0F54                     	;# 
  1157  0F55                     	;# 
  1158  0F56                     	;# 
  1159  0F57                     	;# 
  1160  0F59                     	;# 
  1161  0F5A                     	;# 
  1162  0F5B                     	;# 
  1163  0F5C                     	;# 
  1164  0F5D                     	;# 
  1165  0F61                     	;# 
  1166  0F62                     	;# 
  1167  0F64                     	;# 
  1168  0F65                     	;# 
  1169  0F66                     	;# 
  1170  0F67                     	;# 
  1171  0F68                     	;# 
  1172  0F69                     	;# 
  1173  0F6A                     	;# 
  1174  0F6B                     	;# 
  1175  0F6C                     	;# 
  1176  0F6D                     	;# 
  1177  0FE4                     	;# 
  1178  0FE5                     	;# 
  1179  0FE6                     	;# 
  1180  0FE7                     	;# 
  1181  0FE8                     	;# 
  1182  0FE9                     	;# 
  1183  0FEA                     	;# 
  1184  0FEB                     	;# 
  1185  0FED                     	;# 
  1186  0FEE                     	;# 
  1187  0FEF                     	;# 
  1188  0000                     	;# 
  1189  0001                     	;# 
  1190  0002                     	;# 
  1191  0003                     	;# 
  1192  0004                     	;# 
  1193  0005                     	;# 
  1194  0006                     	;# 
  1195  0007                     	;# 
  1196  0008                     	;# 
  1197  0009                     	;# 
  1198  000A                     	;# 
  1199  000B                     	;# 
  1200  000C                     	;# 
  1201  000D                     	;# 
  1202  000E                     	;# 
  1203  000F                     	;# 
  1204  0010                     	;# 
  1205  0011                     	;# 
  1206  0012                     	;# 
  1207  0013                     	;# 
  1208  0014                     	;# 
  1209  0015                     	;# 
  1210  0016                     	;# 
  1211  0017                     	;# 
  1212  0018                     	;# 
  1213  0019                     	;# 
  1214  001A                     	;# 
  1215  001C                     	;# 
  1216  001C                     	;# 
  1217  001D                     	;# 
  1218  001D                     	;# 
  1219  001E                     	;# 
  1220  001F                     	;# 
  1221  008C                     	;# 
  1222  008C                     	;# 
  1223  008D                     	;# 
  1224  008E                     	;# 
  1225  008E                     	;# 
  1226  008F                     	;# 
  1227  0090                     	;# 
  1228  0090                     	;# 
  1229  0091                     	;# 
  1230  0093                     	;# 
  1231  0094                     	;# 
  1232  0095                     	;# 
  1233  0096                     	;# 
  1234  0097                     	;# 
  1235  0098                     	;# 
  1236  0099                     	;# 
  1237  009A                     	;# 
  1238  009B                     	;# 
  1239  009C                     	;# 
  1240  009D                     	;# 
  1241  009E                     	;# 
  1242  010C                     	;# 
  1243  010D                     	;# 
  1244  010E                     	;# 
  1245  010E                     	;# 
  1246  010F                     	;# 
  1247  0110                     	;# 
  1248  0110                     	;# 
  1249  0111                     	;# 
  1250  0112                     	;# 
  1251  0112                     	;# 
  1252  0113                     	;# 
  1253  0114                     	;# 
  1254  0114                     	;# 
  1255  0115                     	;# 
  1256  0116                     	;# 
  1257  0116                     	;# 
  1258  0117                     	;# 
  1259  0119                     	;# 
  1260  0119                     	;# 
  1261  0119                     	;# 
  1262  011A                     	;# 
  1263  011A                     	;# 
  1264  011A                     	;# 
  1265  011B                     	;# 
  1266  011B                     	;# 
  1267  011B                     	;# 
  1268  011B                     	;# 
  1269  011B                     	;# 
  1270  011C                     	;# 
  1271  011C                     	;# 
  1272  011C                     	;# 
  1273  011D                     	;# 
  1274  011D                     	;# 
  1275  011D                     	;# 
  1276  011E                     	;# 
  1277  011E                     	;# 
  1278  011E                     	;# 
  1279  011F                     	;# 
  1280  011F                     	;# 
  1281  011F                     	;# 
  1282  011F                     	;# 
  1283  011F                     	;# 
  1284  018C                     	;# 
  1285  018D                     	;# 
  1286  018E                     	;# 
  1287  018F                     	;# 
  1288  0190                     	;# 
  1289  0191                     	;# 
  1290  0192                     	;# 
  1291  0196                     	;# 
  1292  0197                     	;# 
  1293  0198                     	;# 
  1294  0199                     	;# 
  1295  019A                     	;# 
  1296  019B                     	;# 
  1297  019C                     	;# 
  1298  020C                     	;# 
  1299  020C                     	;# 
  1300  020D                     	;# 
  1301  020E                     	;# 
  1302  020F                     	;# 
  1303  020F                     	;# 
  1304  0210                     	;# 
  1305  0210                     	;# 
  1306  0211                     	;# 
  1307  0211                     	;# 
  1308  0212                     	;# 
  1309  0212                     	;# 
  1310  0213                     	;# 
  1311  0214                     	;# 
  1312  0215                     	;# 
  1313  0215                     	;# 
  1314  0216                     	;# 
  1315  0216                     	;# 
  1316  0217                     	;# 
  1317  0217                     	;# 
  1318  0218                     	;# 
  1319  0218                     	;# 
  1320  0219                     	;# 
  1321  021A                     	;# 
  1322  021B                     	;# 
  1323  021B                     	;# 
  1324  021C                     	;# 
  1325  021C                     	;# 
  1326  021D                     	;# 
  1327  021D                     	;# 
  1328  021E                     	;# 
  1329  021F                     	;# 
  1330  028C                     	;# 
  1331  028C                     	;# 
  1332  028D                     	;# 
  1333  028D                     	;# 
  1334  028E                     	;# 
  1335  028F                     	;# 
  1336  0290                     	;# 
  1337  0290                     	;# 
  1338  0291                     	;# 
  1339  0292                     	;# 
  1340  0292                     	;# 
  1341  0293                     	;# 
  1342  0293                     	;# 
  1343  0294                     	;# 
  1344  0295                     	;# 
  1345  0296                     	;# 
  1346  0296                     	;# 
  1347  0297                     	;# 
  1348  0298                     	;# 
  1349  0298                     	;# 
  1350  0299                     	;# 
  1351  0299                     	;# 
  1352  029A                     	;# 
  1353  029B                     	;# 
  1354  029C                     	;# 
  1355  029C                     	;# 
  1356  029D                     	;# 
  1357  030C                     	;# 
  1358  030C                     	;# 
  1359  030D                     	;# 
  1360  030E                     	;# 
  1361  030F                     	;# 
  1362  0310                     	;# 
  1363  0310                     	;# 
  1364  0311                     	;# 
  1365  0312                     	;# 
  1366  0313                     	;# 
  1367  0314                     	;# 
  1368  0314                     	;# 
  1369  0315                     	;# 
  1370  0316                     	;# 
  1371  0317                     	;# 
  1372  0318                     	;# 
  1373  0318                     	;# 
  1374  0319                     	;# 
  1375  031A                     	;# 
  1376  031B                     	;# 
  1377  031C                     	;# 
  1378  031C                     	;# 
  1379  031D                     	;# 
  1380  031E                     	;# 
  1381  031F                     	;# 
  1382  038C                     	;# 
  1383  038C                     	;# 
  1384  038D                     	;# 
  1385  038E                     	;# 
  1386  0390                     	;# 
  1387  0390                     	;# 
  1388  0391                     	;# 
  1389  0392                     	;# 
  1390  040C                     	;# 
  1391  040D                     	;# 
  1392  040E                     	;# 
  1393  040F                     	;# 
  1394  0410                     	;# 
  1395  0411                     	;# 
  1396  0416                     	;# 
  1397  0416                     	;# 
  1398  0417                     	;# 
  1399  0418                     	;# 
  1400  0418                     	;# 
  1401  0419                     	;# 
  1402  041A                     	;# 
  1403  041A                     	;# 
  1404  041B                     	;# 
  1405  041C                     	;# 
  1406  041C                     	;# 
  1407  041D                     	;# 
  1408  041E                     	;# 
  1409  041F                     	;# 
  1410  048C                     	;# 
  1411  048C                     	;# 
  1412  048D                     	;# 
  1413  048E                     	;# 
  1414  048F                     	;# 
  1415  048F                     	;# 
  1416  0490                     	;# 
  1417  0491                     	;# 
  1418  0492                     	;# 
  1419  0492                     	;# 
  1420  0493                     	;# 
  1421  0494                     	;# 
  1422  0495                     	;# 
  1423  0495                     	;# 
  1424  0496                     	;# 
  1425  0497                     	;# 
  1426  0498                     	;# 
  1427  0499                     	;# 
  1428  049A                     	;# 
  1429  049B                     	;# 
  1430  049C                     	;# 
  1431  049D                     	;# 
  1432  050C                     	;# 
  1433  050C                     	;# 
  1434  050D                     	;# 
  1435  050E                     	;# 
  1436  050F                     	;# 
  1437  050F                     	;# 
  1438  0510                     	;# 
  1439  0511                     	;# 
  1440  0512                     	;# 
  1441  0512                     	;# 
  1442  0513                     	;# 
  1443  0514                     	;# 
  1444  0515                     	;# 
  1445  0515                     	;# 
  1446  0516                     	;# 
  1447  0517                     	;# 
  1448  0518                     	;# 
  1449  0519                     	;# 
  1450  051A                     	;# 
  1451  051B                     	;# 
  1452  051C                     	;# 
  1453  051D                     	;# 
  1454  058C                     	;# 
  1455  058C                     	;# 
  1456  058D                     	;# 
  1457  058E                     	;# 
  1458  058F                     	;# 
  1459  058F                     	;# 
  1460  0590                     	;# 
  1461  0591                     	;# 
  1462  0592                     	;# 
  1463  0593                     	;# 
  1464  060C                     	;# 
  1465  060D                     	;# 
  1466  060E                     	;# 
  1467  060F                     	;# 
  1468  0610                     	;# 
  1469  0611                     	;# 
  1470  0612                     	;# 
  1471  0613                     	;# 
  1472  0614                     	;# 
  1473  0616                     	;# 
  1474  0617                     	;# 
  1475  0618                     	;# 
  1476  0619                     	;# 
  1477  061A                     	;# 
  1478  061B                     	;# 
  1479  061C                     	;# 
  1480  061D                     	;# 
  1481  061E                     	;# 
  1482  068C                     	;# 
  1483  068D                     	;# 
  1484  068E                     	;# 
  1485  068F                     	;# 
  1486  0690                     	;# 
  1487  0691                     	;# 
  1488  0692                     	;# 
  1489  0693                     	;# 
  1490  0694                     	;# 
  1491  070C                     	;# 
  1492  070D                     	;# 
  1493  070E                     	;# 
  1494  070F                     	;# 
  1495  0710                     	;# 
  1496  0711                     	;# 
  1497  0712                     	;# 
  1498  0713                     	;# 
  1499  0714                     	;# 
  1500  0716                     	;# 
  1501  0717                     	;# 
  1502  0718                     	;# 
  1503  0719                     	;# 
  1504  071A                     	;# 
  1505  071B                     	;# 
  1506  071C                     	;# 
  1507  071D                     	;# 
  1508  071E                     	;# 
  1509  0796                     	;# 
  1510  0797                     	;# 
  1511  0798                     	;# 
  1512  0799                     	;# 
  1513  079A                     	;# 
  1514  079B                     	;# 
  1515  080C                     	;# 
  1516  080D                     	;# 
  1517  080E                     	;# 
  1518  080F                     	;# 
  1519  0810                     	;# 
  1520  0811                     	;# 
  1521  0812                     	;# 
  1522  0813                     	;# 
  1523  0814                     	;# 
  1524  081A                     	;# 
  1525  081B                     	;# 
  1526  081C                     	;# 
  1527  081D                     	;# 
  1528  081E                     	;# 
  1529  081F                     	;# 
  1530  088C                     	;# 
  1531  088D                     	;# 
  1532  088E                     	;# 
  1533  088F                     	;# 
  1534  0890                     	;# 
  1535  0891                     	;# 
  1536  0892                     	;# 
  1537  0893                     	;# 
  1538  0895                     	;# 
  1539  0896                     	;# 
  1540  0897                     	;# 
  1541  0898                     	;# 
  1542  0899                     	;# 
  1543  089A                     	;# 
  1544  089B                     	;# 
  1545  090C                     	;# 
  1546  090E                     	;# 
  1547  090F                     	;# 
  1548  091F                     	;# 
  1549  091F                     	;# 
  1550  098F                     	;# 
  1551  098F                     	;# 
  1552  0990                     	;# 
  1553  0991                     	;# 
  1554  0992                     	;# 
  1555  0993                     	;# 
  1556  0994                     	;# 
  1557  0995                     	;# 
  1558  0996                     	;# 
  1559  0997                     	;# 
  1560  0E0F                     	;# 
  1561  0E10                     	;# 
  1562  0E11                     	;# 
  1563  0E12                     	;# 
  1564  0E13                     	;# 
  1565  0E14                     	;# 
  1566  0E15                     	;# 
  1567  0E16                     	;# 
  1568  0E17                     	;# 
  1569  0E18                     	;# 
  1570  0E19                     	;# 
  1571  0E1A                     	;# 
  1572  0E1B                     	;# 
  1573  0E1C                     	;# 
  1574  0E1D                     	;# 
  1575  0E1E                     	;# 
  1576  0E1F                     	;# 
  1577  0E20                     	;# 
  1578  0E21                     	;# 
  1579  0E22                     	;# 
  1580  0E23                     	;# 
  1581  0E24                     	;# 
  1582  0E25                     	;# 
  1583  0E26                     	;# 
  1584  0E27                     	;# 
  1585  0E28                     	;# 
  1586  0E29                     	;# 
  1587  0E2A                     	;# 
  1588  0E2B                     	;# 
  1589  0E2C                     	;# 
  1590  0E2D                     	;# 
  1591  0E2E                     	;# 
  1592  0E2F                     	;# 
  1593  0E30                     	;# 
  1594  0E31                     	;# 
  1595  0E32                     	;# 
  1596  0E33                     	;# 
  1597  0E34                     	;# 
  1598  0E35                     	;# 
  1599  0E36                     	;# 
  1600  0E37                     	;# 
  1601  0E8F                     	;# 
  1602  0E90                     	;# 
  1603  0E91                     	;# 
  1604  0E92                     	;# 
  1605  0E93                     	;# 
  1606  0E94                     	;# 
  1607  0E95                     	;# 
  1608  0E96                     	;# 
  1609  0E97                     	;# 
  1610  0E9C                     	;# 
  1611  0E9D                     	;# 
  1612  0E9E                     	;# 
  1613  0EA1                     	;# 
  1614  0EA2                     	;# 
  1615  0EA3                     	;# 
  1616  0EA4                     	;# 
  1617  0EA5                     	;# 
  1618  0EA9                     	;# 
  1619  0EAA                     	;# 
  1620  0EAB                     	;# 
  1621  0EAC                     	;# 
  1622  0EB1                     	;# 
  1623  0EB2                     	;# 
  1624  0EB3                     	;# 
  1625  0EB8                     	;# 
  1626  0EB9                     	;# 
  1627  0EBA                     	;# 
  1628  0EBB                     	;# 
  1629  0EBC                     	;# 
  1630  0EBD                     	;# 
  1631  0EBE                     	;# 
  1632  0EC3                     	;# 
  1633  0EC5                     	;# 
  1634  0EC6                     	;# 
  1635  0EC7                     	;# 
  1636  0EC8                     	;# 
  1637  0EC9                     	;# 
  1638  0ECA                     	;# 
  1639  0ECB                     	;# 
  1640  0ECC                     	;# 
  1641  0F10                     	;# 
  1642  0F11                     	;# 
  1643  0F12                     	;# 
  1644  0F13                     	;# 
  1645  0F14                     	;# 
  1646  0F15                     	;# 
  1647  0F16                     	;# 
  1648  0F17                     	;# 
  1649  0F18                     	;# 
  1650  0F19                     	;# 
  1651  0F1A                     	;# 
  1652  0F1B                     	;# 
  1653  0F1C                     	;# 
  1654  0F1D                     	;# 
  1655  0F1E                     	;# 
  1656  0F1F                     	;# 
  1657  0F20                     	;# 
  1658  0F21                     	;# 
  1659  0F22                     	;# 
  1660  0F23                     	;# 
  1661  0F24                     	;# 
  1662  0F25                     	;# 
  1663  0F26                     	;# 
  1664  0F27                     	;# 
  1665  0F28                     	;# 
  1666  0F29                     	;# 
  1667  0F2A                     	;# 
  1668  0F2B                     	;# 
  1669  0F2C                     	;# 
  1670  0F2D                     	;# 
  1671  0F2E                     	;# 
  1672  0F2F                     	;# 
  1673  0F30                     	;# 
  1674  0F31                     	;# 
  1675  0F32                     	;# 
  1676  0F38                     	;# 
  1677  0F39                     	;# 
  1678  0F3A                     	;# 
  1679  0F3B                     	;# 
  1680  0F3C                     	;# 
  1681  0F3D                     	;# 
  1682  0F3E                     	;# 
  1683  0F3F                     	;# 
  1684  0F40                     	;# 
  1685  0F41                     	;# 
  1686  0F43                     	;# 
  1687  0F44                     	;# 
  1688  0F45                     	;# 
  1689  0F46                     	;# 
  1690  0F47                     	;# 
  1691  0F48                     	;# 
  1692  0F49                     	;# 
  1693  0F4A                     	;# 
  1694  0F4B                     	;# 
  1695  0F4C                     	;# 
  1696  0F4E                     	;# 
  1697  0F4F                     	;# 
  1698  0F50                     	;# 
  1699  0F51                     	;# 
  1700  0F52                     	;# 
  1701  0F53                     	;# 
  1702  0F54                     	;# 
  1703  0F55                     	;# 
  1704  0F56                     	;# 
  1705  0F57                     	;# 
  1706  0F59                     	;# 
  1707  0F5A                     	;# 
  1708  0F5B                     	;# 
  1709  0F5C                     	;# 
  1710  0F5D                     	;# 
  1711  0F61                     	;# 
  1712  0F62                     	;# 
  1713  0F64                     	;# 
  1714  0F65                     	;# 
  1715  0F66                     	;# 
  1716  0F67                     	;# 
  1717  0F68                     	;# 
  1718  0F69                     	;# 
  1719  0F6A                     	;# 
  1720  0F6B                     	;# 
  1721  0F6C                     	;# 
  1722  0F6D                     	;# 
  1723  0FE4                     	;# 
  1724  0FE5                     	;# 
  1725  0FE6                     	;# 
  1726  0FE7                     	;# 
  1727  0FE8                     	;# 
  1728  0FE9                     	;# 
  1729  0FEA                     	;# 
  1730  0FEB                     	;# 
  1731  0FED                     	;# 
  1732  0FEE                     	;# 
  1733  0FEF                     	;# 
  1734  0000                     	;# 
  1735  0001                     	;# 
  1736  0002                     	;# 
  1737  0003                     	;# 
  1738  0004                     	;# 
  1739  0005                     	;# 
  1740  0006                     	;# 
  1741  0007                     	;# 
  1742  0008                     	;# 
  1743  0009                     	;# 
  1744  000A                     	;# 
  1745  000B                     	;# 
  1746  000C                     	;# 
  1747  000D                     	;# 
  1748  000E                     	;# 
  1749  000F                     	;# 
  1750  0010                     	;# 
  1751  0011                     	;# 
  1752  0012                     	;# 
  1753  0013                     	;# 
  1754  0014                     	;# 
  1755  0015                     	;# 
  1756  0016                     	;# 
  1757  0017                     	;# 
  1758  0018                     	;# 
  1759  0019                     	;# 
  1760  001A                     	;# 
  1761  001C                     	;# 
  1762  001C                     	;# 
  1763  001D                     	;# 
  1764  001D                     	;# 
  1765  001E                     	;# 
  1766  001F                     	;# 
  1767  008C                     	;# 
  1768  008C                     	;# 
  1769  008D                     	;# 
  1770  008E                     	;# 
  1771  008E                     	;# 
  1772  008F                     	;# 
  1773  0090                     	;# 
  1774  0090                     	;# 
  1775  0091                     	;# 
  1776  0093                     	;# 
  1777  0094                     	;# 
  1778  0095                     	;# 
  1779  0096                     	;# 
  1780  0097                     	;# 
  1781  0098                     	;# 
  1782  0099                     	;# 
  1783  009A                     	;# 
  1784  009B                     	;# 
  1785  009C                     	;# 
  1786  009D                     	;# 
  1787  009E                     	;# 
  1788  010C                     	;# 
  1789  010D                     	;# 
  1790  010E                     	;# 
  1791  010E                     	;# 
  1792  010F                     	;# 
  1793  0110                     	;# 
  1794  0110                     	;# 
  1795  0111                     	;# 
  1796  0112                     	;# 
  1797  0112                     	;# 
  1798  0113                     	;# 
  1799  0114                     	;# 
  1800  0114                     	;# 
  1801  0115                     	;# 
  1802  0116                     	;# 
  1803  0116                     	;# 
  1804  0117                     	;# 
  1805  0119                     	;# 
  1806  0119                     	;# 
  1807  0119                     	;# 
  1808  011A                     	;# 
  1809  011A                     	;# 
  1810  011A                     	;# 
  1811  011B                     	;# 
  1812  011B                     	;# 
  1813  011B                     	;# 
  1814  011B                     	;# 
  1815  011B                     	;# 
  1816  011C                     	;# 
  1817  011C                     	;# 
  1818  011C                     	;# 
  1819  011D                     	;# 
  1820  011D                     	;# 
  1821  011D                     	;# 
  1822  011E                     	;# 
  1823  011E                     	;# 
  1824  011E                     	;# 
  1825  011F                     	;# 
  1826  011F                     	;# 
  1827  011F                     	;# 
  1828  011F                     	;# 
  1829  011F                     	;# 
  1830  018C                     	;# 
  1831  018D                     	;# 
  1832  018E                     	;# 
  1833  018F                     	;# 
  1834  0190                     	;# 
  1835  0191                     	;# 
  1836  0192                     	;# 
  1837  0196                     	;# 
  1838  0197                     	;# 
  1839  0198                     	;# 
  1840  0199                     	;# 
  1841  019A                     	;# 
  1842  019B                     	;# 
  1843  019C                     	;# 
  1844  020C                     	;# 
  1845  020C                     	;# 
  1846  020D                     	;# 
  1847  020E                     	;# 
  1848  020F                     	;# 
  1849  020F                     	;# 
  1850  0210                     	;# 
  1851  0210                     	;# 
  1852  0211                     	;# 
  1853  0211                     	;# 
  1854  0212                     	;# 
  1855  0212                     	;# 
  1856  0213                     	;# 
  1857  0214                     	;# 
  1858  0215                     	;# 
  1859  0215                     	;# 
  1860  0216                     	;# 
  1861  0216                     	;# 
  1862  0217                     	;# 
  1863  0217                     	;# 
  1864  0218                     	;# 
  1865  0218                     	;# 
  1866  0219                     	;# 
  1867  021A                     	;# 
  1868  021B                     	;# 
  1869  021B                     	;# 
  1870  021C                     	;# 
  1871  021C                     	;# 
  1872  021D                     	;# 
  1873  021D                     	;# 
  1874  021E                     	;# 
  1875  021F                     	;# 
  1876  028C                     	;# 
  1877  028C                     	;# 
  1878  028D                     	;# 
  1879  028D                     	;# 
  1880  028E                     	;# 
  1881  028F                     	;# 
  1882  0290                     	;# 
  1883  0290                     	;# 
  1884  0291                     	;# 
  1885  0292                     	;# 
  1886  0292                     	;# 
  1887  0293                     	;# 
  1888  0293                     	;# 
  1889  0294                     	;# 
  1890  0295                     	;# 
  1891  0296                     	;# 
  1892  0296                     	;# 
  1893  0297                     	;# 
  1894  0298                     	;# 
  1895  0298                     	;# 
  1896  0299                     	;# 
  1897  0299                     	;# 
  1898  029A                     	;# 
  1899  029B                     	;# 
  1900  029C                     	;# 
  1901  029C                     	;# 
  1902  029D                     	;# 
  1903  030C                     	;# 
  1904  030C                     	;# 
  1905  030D                     	;# 
  1906  030E                     	;# 
  1907  030F                     	;# 
  1908  0310                     	;# 
  1909  0310                     	;# 
  1910  0311                     	;# 
  1911  0312                     	;# 
  1912  0313                     	;# 
  1913  0314                     	;# 
  1914  0314                     	;# 
  1915  0315                     	;# 
  1916  0316                     	;# 
  1917  0317                     	;# 
  1918  0318                     	;# 
  1919  0318                     	;# 
  1920  0319                     	;# 
  1921  031A                     	;# 
  1922  031B                     	;# 
  1923  031C                     	;# 
  1924  031C                     	;# 
  1925  031D                     	;# 
  1926  031E                     	;# 
  1927  031F                     	;# 
  1928  038C                     	;# 
  1929  038C                     	;# 
  1930  038D                     	;# 
  1931  038E                     	;# 
  1932  0390                     	;# 
  1933  0390                     	;# 
  1934  0391                     	;# 
  1935  0392                     	;# 
  1936  040C                     	;# 
  1937  040D                     	;# 
  1938  040E                     	;# 
  1939  040F                     	;# 
  1940  0410                     	;# 
  1941  0411                     	;# 
  1942  0416                     	;# 
  1943  0416                     	;# 
  1944  0417                     	;# 
  1945  0418                     	;# 
  1946  0418                     	;# 
  1947  0419                     	;# 
  1948  041A                     	;# 
  1949  041A                     	;# 
  1950  041B                     	;# 
  1951  041C                     	;# 
  1952  041C                     	;# 
  1953  041D                     	;# 
  1954  041E                     	;# 
  1955  041F                     	;# 
  1956  048C                     	;# 
  1957  048C                     	;# 
  1958  048D                     	;# 
  1959  048E                     	;# 
  1960  048F                     	;# 
  1961  048F                     	;# 
  1962  0490                     	;# 
  1963  0491                     	;# 
  1964  0492                     	;# 
  1965  0492                     	;# 
  1966  0493                     	;# 
  1967  0494                     	;# 
  1968  0495                     	;# 
  1969  0495                     	;# 
  1970  0496                     	;# 
  1971  0497                     	;# 
  1972  0498                     	;# 
  1973  0499                     	;# 
  1974  049A                     	;# 
  1975  049B                     	;# 
  1976  049C                     	;# 
  1977  049D                     	;# 
  1978  050C                     	;# 
  1979  050C                     	;# 
  1980  050D                     	;# 
  1981  050E                     	;# 
  1982  050F                     	;# 
  1983  050F                     	;# 
  1984  0510                     	;# 
  1985  0511                     	;# 
  1986  0512                     	;# 
  1987  0512                     	;# 
  1988  0513                     	;# 
  1989  0514                     	;# 
  1990  0515                     	;# 
  1991  0515                     	;# 
  1992  0516                     	;# 
  1993  0517                     	;# 
  1994  0518                     	;# 
  1995  0519                     	;# 
  1996  051A                     	;# 
  1997  051B                     	;# 
  1998  051C                     	;# 
  1999  051D                     	;# 
  2000  058C                     	;# 
  2001  058C                     	;# 
  2002  058D                     	;# 
  2003  058E                     	;# 
  2004  058F                     	;# 
  2005  058F                     	;# 
  2006  0590                     	;# 
  2007  0591                     	;# 
  2008  0592                     	;# 
  2009  0593                     	;# 
  2010  060C                     	;# 
  2011  060D                     	;# 
  2012  060E                     	;# 
  2013  060F                     	;# 
  2014  0610                     	;# 
  2015  0611                     	;# 
  2016  0612                     	;# 
  2017  0613                     	;# 
  2018  0614                     	;# 
  2019  0616                     	;# 
  2020  0617                     	;# 
  2021  0618                     	;# 
  2022  0619                     	;# 
  2023  061A                     	;# 
  2024  061B                     	;# 
  2025  061C                     	;# 
  2026  061D                     	;# 
  2027  061E                     	;# 
  2028  068C                     	;# 
  2029  068D                     	;# 
  2030  068E                     	;# 
  2031  068F                     	;# 
  2032  0690                     	;# 
  2033  0691                     	;# 
  2034  0692                     	;# 
  2035  0693                     	;# 
  2036  0694                     	;# 
  2037  070C                     	;# 
  2038  070D                     	;# 
  2039  070E                     	;# 
  2040  070F                     	;# 
  2041  0710                     	;# 
  2042  0711                     	;# 
  2043  0712                     	;# 
  2044  0713                     	;# 
  2045  0714                     	;# 
  2046  0716                     	;# 
  2047  0717                     	;# 
  2048  0718                     	;# 
  2049  0719                     	;# 
  2050  071A                     	;# 
  2051  071B                     	;# 
  2052  071C                     	;# 
  2053  071D                     	;# 
  2054  071E                     	;# 
  2055  0796                     	;# 
  2056  0797                     	;# 
  2057  0798                     	;# 
  2058  0799                     	;# 
  2059  079A                     	;# 
  2060  079B                     	;# 
  2061  080C                     	;# 
  2062  080D                     	;# 
  2063  080E                     	;# 
  2064  080F                     	;# 
  2065  0810                     	;# 
  2066  0811                     	;# 
  2067  0812                     	;# 
  2068  0813                     	;# 
  2069  0814                     	;# 
  2070  081A                     	;# 
  2071  081B                     	;# 
  2072  081C                     	;# 
  2073  081D                     	;# 
  2074  081E                     	;# 
  2075  081F                     	;# 
  2076  088C                     	;# 
  2077  088D                     	;# 
  2078  088E                     	;# 
  2079  088F                     	;# 
  2080  0890                     	;# 
  2081  0891                     	;# 
  2082  0892                     	;# 
  2083  0893                     	;# 
  2084  0895                     	;# 
  2085  0896                     	;# 
  2086  0897                     	;# 
  2087  0898                     	;# 
  2088  0899                     	;# 
  2089  089A                     	;# 
  2090  089B                     	;# 
  2091  090C                     	;# 
  2092  090E                     	;# 
  2093  090F                     	;# 
  2094  091F                     	;# 
  2095  091F                     	;# 
  2096  098F                     	;# 
  2097  098F                     	;# 
  2098  0990                     	;# 
  2099  0991                     	;# 
  2100  0992                     	;# 
  2101  0993                     	;# 
  2102  0994                     	;# 
  2103  0995                     	;# 
  2104  0996                     	;# 
  2105  0997                     	;# 
  2106  0E0F                     	;# 
  2107  0E10                     	;# 
  2108  0E11                     	;# 
  2109  0E12                     	;# 
  2110  0E13                     	;# 
  2111  0E14                     	;# 
  2112  0E15                     	;# 
  2113  0E16                     	;# 
  2114  0E17                     	;# 
  2115  0E18                     	;# 
  2116  0E19                     	;# 
  2117  0E1A                     	;# 
  2118  0E1B                     	;# 
  2119  0E1C                     	;# 
  2120  0E1D                     	;# 
  2121  0E1E                     	;# 
  2122  0E1F                     	;# 
  2123  0E20                     	;# 
  2124  0E21                     	;# 
  2125  0E22                     	;# 
  2126  0E23                     	;# 
  2127  0E24                     	;# 
  2128  0E25                     	;# 
  2129  0E26                     	;# 
  2130  0E27                     	;# 
  2131  0E28                     	;# 
  2132  0E29                     	;# 
  2133  0E2A                     	;# 
  2134  0E2B                     	;# 
  2135  0E2C                     	;# 
  2136  0E2D                     	;# 
  2137  0E2E                     	;# 
  2138  0E2F                     	;# 
  2139  0E30                     	;# 
  2140  0E31                     	;# 
  2141  0E32                     	;# 
  2142  0E33                     	;# 
  2143  0E34                     	;# 
  2144  0E35                     	;# 
  2145  0E36                     	;# 
  2146  0E37                     	;# 
  2147  0E8F                     	;# 
  2148  0E90                     	;# 
  2149  0E91                     	;# 
  2150  0E92                     	;# 
  2151  0E93                     	;# 
  2152  0E94                     	;# 
  2153  0E95                     	;# 
  2154  0E96                     	;# 
  2155  0E97                     	;# 
  2156  0E9C                     	;# 
  2157  0E9D                     	;# 
  2158  0E9E                     	;# 
  2159  0EA1                     	;# 
  2160  0EA2                     	;# 
  2161  0EA3                     	;# 
  2162  0EA4                     	;# 
  2163  0EA5                     	;# 
  2164  0EA9                     	;# 
  2165  0EAA                     	;# 
  2166  0EAB                     	;# 
  2167  0EAC                     	;# 
  2168  0EB1                     	;# 
  2169  0EB2                     	;# 
  2170  0EB3                     	;# 
  2171  0EB8                     	;# 
  2172  0EB9                     	;# 
  2173  0EBA                     	;# 
  2174  0EBB                     	;# 
  2175  0EBC                     	;# 
  2176  0EBD                     	;# 
  2177  0EBE                     	;# 
  2178  0EC3                     	;# 
  2179  0EC5                     	;# 
  2180  0EC6                     	;# 
  2181  0EC7                     	;# 
  2182  0EC8                     	;# 
  2183  0EC9                     	;# 
  2184  0ECA                     	;# 
  2185  0ECB                     	;# 
  2186  0ECC                     	;# 
  2187  0F10                     	;# 
  2188  0F11                     	;# 
  2189  0F12                     	;# 
  2190  0F13                     	;# 
  2191  0F14                     	;# 
  2192  0F15                     	;# 
  2193  0F16                     	;# 
  2194  0F17                     	;# 
  2195  0F18                     	;# 
  2196  0F19                     	;# 
  2197  0F1A                     	;# 
  2198  0F1B                     	;# 
  2199  0F1C                     	;# 
  2200  0F1D                     	;# 
  2201  0F1E                     	;# 
  2202  0F1F                     	;# 
  2203  0F20                     	;# 
  2204  0F21                     	;# 
  2205  0F22                     	;# 
  2206  0F23                     	;# 
  2207  0F24                     	;# 
  2208  0F25                     	;# 
  2209  0F26                     	;# 
  2210  0F27                     	;# 
  2211  0F28                     	;# 
  2212  0F29                     	;# 
  2213  0F2A                     	;# 
  2214  0F2B                     	;# 
  2215  0F2C                     	;# 
  2216  0F2D                     	;# 
  2217  0F2E                     	;# 
  2218  0F2F                     	;# 
  2219  0F30                     	;# 
  2220  0F31                     	;# 
  2221  0F32                     	;# 
  2222  0F38                     	;# 
  2223  0F39                     	;# 
  2224  0F3A                     	;# 
  2225  0F3B                     	;# 
  2226  0F3C                     	;# 
  2227  0F3D                     	;# 
  2228  0F3E                     	;# 
  2229  0F3F                     	;# 
  2230  0F40                     	;# 
  2231  0F41                     	;# 
  2232  0F43                     	;# 
  2233  0F44                     	;# 
  2234  0F45                     	;# 
  2235  0F46                     	;# 
  2236  0F47                     	;# 
  2237  0F48                     	;# 
  2238  0F49                     	;# 
  2239  0F4A                     	;# 
  2240  0F4B                     	;# 
  2241  0F4C                     	;# 
  2242  0F4E                     	;# 
  2243  0F4F                     	;# 
  2244  0F50                     	;# 
  2245  0F51                     	;# 
  2246  0F52                     	;# 
  2247  0F53                     	;# 
  2248  0F54                     	;# 
  2249  0F55                     	;# 
  2250  0F56                     	;# 
  2251  0F57                     	;# 
  2252  0F59                     	;# 
  2253  0F5A                     	;# 
  2254  0F5B                     	;# 
  2255  0F5C                     	;# 
  2256  0F5D                     	;# 
  2257  0F61                     	;# 
  2258  0F62                     	;# 
  2259  0F64                     	;# 
  2260  0F65                     	;# 
  2261  0F66                     	;# 
  2262  0F67                     	;# 
  2263  0F68                     	;# 
  2264  0F69                     	;# 
  2265  0F6A                     	;# 
  2266  0F6B                     	;# 
  2267  0F6C                     	;# 
  2268  0F6D                     	;# 
  2269  0FE4                     	;# 
  2270  0FE5                     	;# 
  2271  0FE6                     	;# 
  2272  0FE7                     	;# 
  2273  0FE8                     	;# 
  2274  0FE9                     	;# 
  2275  0FEA                     	;# 
  2276  0FEB                     	;# 
  2277  0FED                     	;# 
  2278  0FEE                     	;# 
  2279  0FEF                     	;# 
  2280  0000                     	;# 
  2281  0001                     	;# 
  2282  0002                     	;# 
  2283  0003                     	;# 
  2284  0004                     	;# 
  2285  0005                     	;# 
  2286  0006                     	;# 
  2287  0007                     	;# 
  2288  0008                     	;# 
  2289  0009                     	;# 
  2290  000A                     	;# 
  2291  000B                     	;# 
  2292  000C                     	;# 
  2293  000D                     	;# 
  2294  000E                     	;# 
  2295  000F                     	;# 
  2296  0010                     	;# 
  2297  0011                     	;# 
  2298  0012                     	;# 
  2299  0013                     	;# 
  2300  0014                     	;# 
  2301  0015                     	;# 
  2302  0016                     	;# 
  2303  0017                     	;# 
  2304  0018                     	;# 
  2305  0019                     	;# 
  2306  001A                     	;# 
  2307  001C                     	;# 
  2308  001C                     	;# 
  2309  001D                     	;# 
  2310  001D                     	;# 
  2311  001E                     	;# 
  2312  001F                     	;# 
  2313  008C                     	;# 
  2314  008C                     	;# 
  2315  008D                     	;# 
  2316  008E                     	;# 
  2317  008E                     	;# 
  2318  008F                     	;# 
  2319  0090                     	;# 
  2320  0090                     	;# 
  2321  0091                     	;# 
  2322  0093                     	;# 
  2323  0094                     	;# 
  2324  0095                     	;# 
  2325  0096                     	;# 
  2326  0097                     	;# 
  2327  0098                     	;# 
  2328  0099                     	;# 
  2329  009A                     	;# 
  2330  009B                     	;# 
  2331  009C                     	;# 
  2332  009D                     	;# 
  2333  009E                     	;# 
  2334  010C                     	;# 
  2335  010D                     	;# 
  2336  010E                     	;# 
  2337  010E                     	;# 
  2338  010F                     	;# 
  2339  0110                     	;# 
  2340  0110                     	;# 
  2341  0111                     	;# 
  2342  0112                     	;# 
  2343  0112                     	;# 
  2344  0113                     	;# 
  2345  0114                     	;# 
  2346  0114                     	;# 
  2347  0115                     	;# 
  2348  0116                     	;# 
  2349  0116                     	;# 
  2350  0117                     	;# 
  2351  0119                     	;# 
  2352  0119                     	;# 
  2353  0119                     	;# 
  2354  011A                     	;# 
  2355  011A                     	;# 
  2356  011A                     	;# 
  2357  011B                     	;# 
  2358  011B                     	;# 
  2359  011B                     	;# 
  2360  011B                     	;# 
  2361  011B                     	;# 
  2362  011C                     	;# 
  2363  011C                     	;# 
  2364  011C                     	;# 
  2365  011D                     	;# 
  2366  011D                     	;# 
  2367  011D                     	;# 
  2368  011E                     	;# 
  2369  011E                     	;# 
  2370  011E                     	;# 
  2371  011F                     	;# 
  2372  011F                     	;# 
  2373  011F                     	;# 
  2374  011F                     	;# 
  2375  011F                     	;# 
  2376  018C                     	;# 
  2377  018D                     	;# 
  2378  018E                     	;# 
  2379  018F                     	;# 
  2380  0190                     	;# 
  2381  0191                     	;# 
  2382  0192                     	;# 
  2383  0196                     	;# 
  2384  0197                     	;# 
  2385  0198                     	;# 
  2386  0199                     	;# 
  2387  019A                     	;# 
  2388  019B                     	;# 
  2389  019C                     	;# 
  2390  020C                     	;# 
  2391  020C                     	;# 
  2392  020D                     	;# 
  2393  020E                     	;# 
  2394  020F                     	;# 
  2395  020F                     	;# 
  2396  0210                     	;# 
  2397  0210                     	;# 
  2398  0211                     	;# 
  2399  0211                     	;# 
  2400  0212                     	;# 
  2401  0212                     	;# 
  2402  0213                     	;# 
  2403  0214                     	;# 
  2404  0215                     	;# 
  2405  0215                     	;# 
  2406  0216                     	;# 
  2407  0216                     	;# 
  2408  0217                     	;# 
  2409  0217                     	;# 
  2410  0218                     	;# 
  2411  0218                     	;# 
  2412  0219                     	;# 
  2413  021A                     	;# 
  2414  021B                     	;# 
  2415  021B                     	;# 
  2416  021C                     	;# 
  2417  021C                     	;# 
  2418  021D                     	;# 
  2419  021D                     	;# 
  2420  021E                     	;# 
  2421  021F                     	;# 
  2422  028C                     	;# 
  2423  028C                     	;# 
  2424  028D                     	;# 
  2425  028D                     	;# 
  2426  028E                     	;# 
  2427  028F                     	;# 
  2428  0290                     	;# 
  2429  0290                     	;# 
  2430  0291                     	;# 
  2431  0292                     	;# 
  2432  0292                     	;# 
  2433  0293                     	;# 
  2434  0293                     	;# 
  2435  0294                     	;# 
  2436  0295                     	;# 
  2437  0296                     	;# 
  2438  0296                     	;# 
  2439  0297                     	;# 
  2440  0298                     	;# 
  2441  0298                     	;# 
  2442  0299                     	;# 
  2443  0299                     	;# 
  2444  029A                     	;# 
  2445  029B                     	;# 
  2446  029C                     	;# 
  2447  029C                     	;# 
  2448  029D                     	;# 
  2449  030C                     	;# 
  2450  030C                     	;# 
  2451  030D                     	;# 
  2452  030E                     	;# 
  2453  030F                     	;# 
  2454  0310                     	;# 
  2455  0310                     	;# 
  2456  0311                     	;# 
  2457  0312                     	;# 
  2458  0313                     	;# 
  2459  0314                     	;# 
  2460  0314                     	;# 
  2461  0315                     	;# 
  2462  0316                     	;# 
  2463  0317                     	;# 
  2464  0318                     	;# 
  2465  0318                     	;# 
  2466  0319                     	;# 
  2467  031A                     	;# 
  2468  031B                     	;# 
  2469  031C                     	;# 
  2470  031C                     	;# 
  2471  031D                     	;# 
  2472  031E                     	;# 
  2473  031F                     	;# 
  2474  038C                     	;# 
  2475  038C                     	;# 
  2476  038D                     	;# 
  2477  038E                     	;# 
  2478  0390                     	;# 
  2479  0390                     	;# 
  2480  0391                     	;# 
  2481  0392                     	;# 
  2482  040C                     	;# 
  2483  040D                     	;# 
  2484  040E                     	;# 
  2485  040F                     	;# 
  2486  0410                     	;# 
  2487  0411                     	;# 
  2488  0416                     	;# 
  2489  0416                     	;# 
  2490  0417                     	;# 
  2491  0418                     	;# 
  2492  0418                     	;# 
  2493  0419                     	;# 
  2494  041A                     	;# 
  2495  041A                     	;# 
  2496  041B                     	;# 
  2497  041C                     	;# 
  2498  041C                     	;# 
  2499  041D                     	;# 
  2500  041E                     	;# 
  2501  041F                     	;# 
  2502  048C                     	;# 
  2503  048C                     	;# 
  2504  048D                     	;# 
  2505  048E                     	;# 
  2506  048F                     	;# 
  2507  048F                     	;# 
  2508  0490                     	;# 
  2509  0491                     	;# 
  2510  0492                     	;# 
  2511  0492                     	;# 
  2512  0493                     	;# 
  2513  0494                     	;# 
  2514  0495                     	;# 
  2515  0495                     	;# 
  2516  0496                     	;# 
  2517  0497                     	;# 
  2518  0498                     	;# 
  2519  0499                     	;# 
  2520  049A                     	;# 
  2521  049B                     	;# 
  2522  049C                     	;# 
  2523  049D                     	;# 
  2524  050C                     	;# 
  2525  050C                     	;# 
  2526  050D                     	;# 
  2527  050E                     	;# 
  2528  050F                     	;# 
  2529  050F                     	;# 
  2530  0510                     	;# 
  2531  0511                     	;# 
  2532  0512                     	;# 
  2533  0512                     	;# 
  2534  0513                     	;# 
  2535  0514                     	;# 
  2536  0515                     	;# 
  2537  0515                     	;# 
  2538  0516                     	;# 
  2539  0517                     	;# 
  2540  0518                     	;# 
  2541  0519                     	;# 
  2542  051A                     	;# 
  2543  051B                     	;# 
  2544  051C                     	;# 
  2545  051D                     	;# 
  2546  058C                     	;# 
  2547  058C                     	;# 
  2548  058D                     	;# 
  2549  058E                     	;# 
  2550  058F                     	;# 
  2551  058F                     	;# 
  2552  0590                     	;# 
  2553  0591                     	;# 
  2554  0592                     	;# 
  2555  0593                     	;# 
  2556  060C                     	;# 
  2557  060D                     	;# 
  2558  060E                     	;# 
  2559  060F                     	;# 
  2560  0610                     	;# 
  2561  0611                     	;# 
  2562  0612                     	;# 
  2563  0613                     	;# 
  2564  0614                     	;# 
  2565  0616                     	;# 
  2566  0617                     	;# 
  2567  0618                     	;# 
  2568  0619                     	;# 
  2569  061A                     	;# 
  2570  061B                     	;# 
  2571  061C                     	;# 
  2572  061D                     	;# 
  2573  061E                     	;# 
  2574  068C                     	;# 
  2575  068D                     	;# 
  2576  068E                     	;# 
  2577  068F                     	;# 
  2578  0690                     	;# 
  2579  0691                     	;# 
  2580  0692                     	;# 
  2581  0693                     	;# 
  2582  0694                     	;# 
  2583  070C                     	;# 
  2584  070D                     	;# 
  2585  070E                     	;# 
  2586  070F                     	;# 
  2587  0710                     	;# 
  2588  0711                     	;# 
  2589  0712                     	;# 
  2590  0713                     	;# 
  2591  0714                     	;# 
  2592  0716                     	;# 
  2593  0717                     	;# 
  2594  0718                     	;# 
  2595  0719                     	;# 
  2596  071A                     	;# 
  2597  071B                     	;# 
  2598  071C                     	;# 
  2599  071D                     	;# 
  2600  071E                     	;# 
  2601  0796                     	;# 
  2602  0797                     	;# 
  2603  0798                     	;# 
  2604  0799                     	;# 
  2605  079A                     	;# 
  2606  079B                     	;# 
  2607  080C                     	;# 
  2608  080D                     	;# 
  2609  080E                     	;# 
  2610  080F                     	;# 
  2611  0810                     	;# 
  2612  0811                     	;# 
  2613  0812                     	;# 
  2614  0813                     	;# 
  2615  0814                     	;# 
  2616  081A                     	;# 
  2617  081B                     	;# 
  2618  081C                     	;# 
  2619  081D                     	;# 
  2620  081E                     	;# 
  2621  081F                     	;# 
  2622  088C                     	;# 
  2623  088D                     	;# 
  2624  088E                     	;# 
  2625  088F                     	;# 
  2626  0890                     	;# 
  2627  0891                     	;# 
  2628  0892                     	;# 
  2629  0893                     	;# 
  2630  0895                     	;# 
  2631  0896                     	;# 
  2632  0897                     	;# 
  2633  0898                     	;# 
  2634  0899                     	;# 
  2635  089A                     	;# 
  2636  089B                     	;# 
  2637  090C                     	;# 
  2638  090E                     	;# 
  2639  090F                     	;# 
  2640  091F                     	;# 
  2641  091F                     	;# 
  2642  098F                     	;# 
  2643  098F                     	;# 
  2644  0990                     	;# 
  2645  0991                     	;# 
  2646  0992                     	;# 
  2647  0993                     	;# 
  2648  0994                     	;# 
  2649  0995                     	;# 
  2650  0996                     	;# 
  2651  0997                     	;# 
  2652  0E0F                     	;# 
  2653  0E10                     	;# 
  2654  0E11                     	;# 
  2655  0E12                     	;# 
  2656  0E13                     	;# 
  2657  0E14                     	;# 
  2658  0E15                     	;# 
  2659  0E16                     	;# 
  2660  0E17                     	;# 
  2661  0E18                     	;# 
  2662  0E19                     	;# 
  2663  0E1A                     	;# 
  2664  0E1B                     	;# 
  2665  0E1C                     	;# 
  2666  0E1D                     	;# 
  2667  0E1E                     	;# 
  2668  0E1F                     	;# 
  2669  0E20                     	;# 
  2670  0E21                     	;# 
  2671  0E22                     	;# 
  2672  0E23                     	;# 
  2673  0E24                     	;# 
  2674  0E25                     	;# 
  2675  0E26                     	;# 
  2676  0E27                     	;# 
  2677  0E28                     	;# 
  2678  0E29                     	;# 
  2679  0E2A                     	;# 
  2680  0E2B                     	;# 
  2681  0E2C                     	;# 
  2682  0E2D                     	;# 
  2683  0E2E                     	;# 
  2684  0E2F                     	;# 
  2685  0E30                     	;# 
  2686  0E31                     	;# 
  2687  0E32                     	;# 
  2688  0E33                     	;# 
  2689  0E34                     	;# 
  2690  0E35                     	;# 
  2691  0E36                     	;# 
  2692  0E37                     	;# 
  2693  0E8F                     	;# 
  2694  0E90                     	;# 
  2695  0E91                     	;# 
  2696  0E92                     	;# 
  2697  0E93                     	;# 
  2698  0E94                     	;# 
  2699  0E95                     	;# 
  2700  0E96                     	;# 
  2701  0E97                     	;# 
  2702  0E9C                     	;# 
  2703  0E9D                     	;# 
  2704  0E9E                     	;# 
  2705  0EA1                     	;# 
  2706  0EA2                     	;# 
  2707  0EA3                     	;# 
  2708  0EA4                     	;# 
  2709  0EA5                     	;# 
  2710  0EA9                     	;# 
  2711  0EAA                     	;# 
  2712  0EAB                     	;# 
  2713  0EAC                     	;# 
  2714  0EB1                     	;# 
  2715  0EB2                     	;# 
  2716  0EB3                     	;# 
  2717  0EB8                     	;# 
  2718  0EB9                     	;# 
  2719  0EBA                     	;# 
  2720  0EBB                     	;# 
  2721  0EBC                     	;# 
  2722  0EBD                     	;# 
  2723  0EBE                     	;# 
  2724  0EC3                     	;# 
  2725  0EC5                     	;# 
  2726  0EC6                     	;# 
  2727  0EC7                     	;# 
  2728  0EC8                     	;# 
  2729  0EC9                     	;# 
  2730  0ECA                     	;# 
  2731  0ECB                     	;# 
  2732  0ECC                     	;# 
  2733  0F10                     	;# 
  2734  0F11                     	;# 
  2735  0F12                     	;# 
  2736  0F13                     	;# 
  2737  0F14                     	;# 
  2738  0F15                     	;# 
  2739  0F16                     	;# 
  2740  0F17                     	;# 
  2741  0F18                     	;# 
  2742  0F19                     	;# 
  2743  0F1A                     	;# 
  2744  0F1B                     	;# 
  2745  0F1C                     	;# 
  2746  0F1D                     	;# 
  2747  0F1E                     	;# 
  2748  0F1F                     	;# 
  2749  0F20                     	;# 
  2750  0F21                     	;# 
  2751  0F22                     	;# 
  2752  0F23                     	;# 
  2753  0F24                     	;# 
  2754  0F25                     	;# 
  2755  0F26                     	;# 
  2756  0F27                     	;# 
  2757  0F28                     	;# 
  2758  0F29                     	;# 
  2759  0F2A                     	;# 
  2760  0F2B                     	;# 
  2761  0F2C                     	;# 
  2762  0F2D                     	;# 
  2763  0F2E                     	;# 
  2764  0F2F                     	;# 
  2765  0F30                     	;# 
  2766  0F31                     	;# 
  2767  0F32                     	;# 
  2768  0F38                     	;# 
  2769  0F39                     	;# 
  2770  0F3A                     	;# 
  2771  0F3B                     	;# 
  2772  0F3C                     	;# 
  2773  0F3D                     	;# 
  2774  0F3E                     	;# 
  2775  0F3F                     	;# 
  2776  0F40                     	;# 
  2777  0F41                     	;# 
  2778  0F43                     	;# 
  2779  0F44                     	;# 
  2780  0F45                     	;# 
  2781  0F46                     	;# 
  2782  0F47                     	;# 
  2783  0F48                     	;# 
  2784  0F49                     	;# 
  2785  0F4A                     	;# 
  2786  0F4B                     	;# 
  2787  0F4C                     	;# 
  2788  0F4E                     	;# 
  2789  0F4F                     	;# 
  2790  0F50                     	;# 
  2791  0F51                     	;# 
  2792  0F52                     	;# 
  2793  0F53                     	;# 
  2794  0F54                     	;# 
  2795  0F55                     	;# 
  2796  0F56                     	;# 
  2797  0F57                     	;# 
  2798  0F59                     	;# 
  2799  0F5A                     	;# 
  2800  0F5B                     	;# 
  2801  0F5C                     	;# 
  2802  0F5D                     	;# 
  2803  0F61                     	;# 
  2804  0F62                     	;# 
  2805  0F64                     	;# 
  2806  0F65                     	;# 
  2807  0F66                     	;# 
  2808  0F67                     	;# 
  2809  0F68                     	;# 
  2810  0F69                     	;# 
  2811  0F6A                     	;# 
  2812  0F6B                     	;# 
  2813  0F6C                     	;# 
  2814  0F6D                     	;# 
  2815  0FE4                     	;# 
  2816  0FE5                     	;# 
  2817  0FE6                     	;# 
  2818  0FE7                     	;# 
  2819  0FE8                     	;# 
  2820  0FE9                     	;# 
  2821  0FEA                     	;# 
  2822  0FEB                     	;# 
  2823  0FED                     	;# 
  2824  0FEE                     	;# 
  2825  0FEF                     	;# 
  2826  0000                     	;# 
  2827  0001                     	;# 
  2828  0002                     	;# 
  2829  0003                     	;# 
  2830  0004                     	;# 
  2831  0005                     	;# 
  2832  0006                     	;# 
  2833  0007                     	;# 
  2834  0008                     	;# 
  2835  0009                     	;# 
  2836  000A                     	;# 
  2837  000B                     	;# 
  2838  000C                     	;# 
  2839  000D                     	;# 
  2840  000E                     	;# 
  2841  000F                     	;# 
  2842  0010                     	;# 
  2843  0011                     	;# 
  2844  0012                     	;# 
  2845  0013                     	;# 
  2846  0014                     	;# 
  2847  0015                     	;# 
  2848  0016                     	;# 
  2849  0017                     	;# 
  2850  0018                     	;# 
  2851  0019                     	;# 
  2852  001A                     	;# 
  2853  001C                     	;# 
  2854  001C                     	;# 
  2855  001D                     	;# 
  2856  001D                     	;# 
  2857  001E                     	;# 
  2858  001F                     	;# 
  2859  008C                     	;# 
  2860  008C                     	;# 
  2861  008D                     	;# 
  2862  008E                     	;# 
  2863  008E                     	;# 
  2864  008F                     	;# 
  2865  0090                     	;# 
  2866  0090                     	;# 
  2867  0091                     	;# 
  2868  0093                     	;# 
  2869  0094                     	;# 
  2870  0095                     	;# 
  2871  0096                     	;# 
  2872  0097                     	;# 
  2873  0098                     	;# 
  2874  0099                     	;# 
  2875  009A                     	;# 
  2876  009B                     	;# 
  2877  009C                     	;# 
  2878  009D                     	;# 
  2879  009E                     	;# 
  2880  010C                     	;# 
  2881  010D                     	;# 
  2882  010E                     	;# 
  2883  010E                     	;# 
  2884  010F                     	;# 
  2885  0110                     	;# 
  2886  0110                     	;# 
  2887  0111                     	;# 
  2888  0112                     	;# 
  2889  0112                     	;# 
  2890  0113                     	;# 
  2891  0114                     	;# 
  2892  0114                     	;# 
  2893  0115                     	;# 
  2894  0116                     	;# 
  2895  0116                     	;# 
  2896  0117                     	;# 
  2897  0119                     	;# 
  2898  0119                     	;# 
  2899  0119                     	;# 
  2900  011A                     	;# 
  2901  011A                     	;# 
  2902  011A                     	;# 
  2903  011B                     	;# 
  2904  011B                     	;# 
  2905  011B                     	;# 
  2906  011B                     	;# 
  2907  011B                     	;# 
  2908  011C                     	;# 
  2909  011C                     	;# 
  2910  011C                     	;# 
  2911  011D                     	;# 
  2912  011D                     	;# 
  2913  011D                     	;# 
  2914  011E                     	;# 
  2915  011E                     	;# 
  2916  011E                     	;# 
  2917  011F                     	;# 
  2918  011F                     	;# 
  2919  011F                     	;# 
  2920  011F                     	;# 
  2921  011F                     	;# 
  2922  018C                     	;# 
  2923  018D                     	;# 
  2924  018E                     	;# 
  2925  018F                     	;# 
  2926  0190                     	;# 
  2927  0191                     	;# 
  2928  0192                     	;# 
  2929  0196                     	;# 
  2930  0197                     	;# 
  2931  0198                     	;# 
  2932  0199                     	;# 
  2933  019A                     	;# 
  2934  019B                     	;# 
  2935  019C                     	;# 
  2936  020C                     	;# 
  2937  020C                     	;# 
  2938  020D                     	;# 
  2939  020E                     	;# 
  2940  020F                     	;# 
  2941  020F                     	;# 
  2942  0210                     	;# 
  2943  0210                     	;# 
  2944  0211                     	;# 
  2945  0211                     	;# 
  2946  0212                     	;# 
  2947  0212                     	;# 
  2948  0213                     	;# 
  2949  0214                     	;# 
  2950  0215                     	;# 
  2951  0215                     	;# 
  2952  0216                     	;# 
  2953  0216                     	;# 
  2954  0217                     	;# 
  2955  0217                     	;# 
  2956  0218                     	;# 
  2957  0218                     	;# 
  2958  0219                     	;# 
  2959  021A                     	;# 
  2960  021B                     	;# 
  2961  021B                     	;# 
  2962  021C                     	;# 
  2963  021C                     	;# 
  2964  021D                     	;# 
  2965  021D                     	;# 
  2966  021E                     	;# 
  2967  021F                     	;# 
  2968  028C                     	;# 
  2969  028C                     	;# 
  2970  028D                     	;# 
  2971  028D                     	;# 
  2972  028E                     	;# 
  2973  028F                     	;# 
  2974  0290                     	;# 
  2975  0290                     	;# 
  2976  0291                     	;# 
  2977  0292                     	;# 
  2978  0292                     	;# 
  2979  0293                     	;# 
  2980  0293                     	;# 
  2981  0294                     	;# 
  2982  0295                     	;# 
  2983  0296                     	;# 
  2984  0296                     	;# 
  2985  0297                     	;# 
  2986  0298                     	;# 
  2987  0298                     	;# 
  2988  0299                     	;# 
  2989  0299                     	;# 
  2990  029A                     	;# 
  2991  029B                     	;# 
  2992  029C                     	;# 
  2993  029C                     	;# 
  2994  029D                     	;# 
  2995  030C                     	;# 
  2996  030C                     	;# 
  2997  030D                     	;# 
  2998  030E                     	;# 
  2999  030F                     	;# 
  3000  0310                     	;# 
  3001  0310                     	;# 
  3002  0311                     	;# 
  3003  0312                     	;# 
  3004  0313                     	;# 
  3005  0314                     	;# 
  3006  0314                     	;# 
  3007  0315                     	;# 
  3008  0316                     	;# 
  3009  0317                     	;# 
  3010  0318                     	;# 
  3011  0318                     	;# 
  3012  0319                     	;# 
  3013  031A                     	;# 
  3014  031B                     	;# 
  3015  031C                     	;# 
  3016  031C                     	;# 
  3017  031D                     	;# 
  3018  031E                     	;# 
  3019  031F                     	;# 
  3020  038C                     	;# 
  3021  038C                     	;# 
  3022  038D                     	;# 
  3023  038E                     	;# 
  3024  0390                     	;# 
  3025  0390                     	;# 
  3026  0391                     	;# 
  3027  0392                     	;# 
  3028  040C                     	;# 
  3029  040D                     	;# 
  3030  040E                     	;# 
  3031  040F                     	;# 
  3032  0410                     	;# 
  3033  0411                     	;# 
  3034  0416                     	;# 
  3035  0416                     	;# 
  3036  0417                     	;# 
  3037  0418                     	;# 
  3038  0418                     	;# 
  3039  0419                     	;# 
  3040  041A                     	;# 
  3041  041A                     	;# 
  3042  041B                     	;# 
  3043  041C                     	;# 
  3044  041C                     	;# 
  3045  041D                     	;# 
  3046  041E                     	;# 
  3047  041F                     	;# 
  3048  048C                     	;# 
  3049  048C                     	;# 
  3050  048D                     	;# 
  3051  048E                     	;# 
  3052  048F                     	;# 
  3053  048F                     	;# 
  3054  0490                     	;# 
  3055  0491                     	;# 
  3056  0492                     	;# 
  3057  0492                     	;# 
  3058  0493                     	;# 
  3059  0494                     	;# 
  3060  0495                     	;# 
  3061  0495                     	;# 
  3062  0496                     	;# 
  3063  0497                     	;# 
  3064  0498                     	;# 
  3065  0499                     	;# 
  3066  049A                     	;# 
  3067  049B                     	;# 
  3068  049C                     	;# 
  3069  049D                     	;# 
  3070  050C                     	;# 
  3071  050C                     	;# 
  3072  050D                     	;# 
  3073  050E                     	;# 
  3074  050F                     	;# 
  3075  050F                     	;# 
  3076  0510                     	;# 
  3077  0511                     	;# 
  3078  0512                     	;# 
  3079  0512                     	;# 
  3080  0513                     	;# 
  3081  0514                     	;# 
  3082  0515                     	;# 
  3083  0515                     	;# 
  3084  0516                     	;# 
  3085  0517                     	;# 
  3086  0518                     	;# 
  3087  0519                     	;# 
  3088  051A                     	;# 
  3089  051B                     	;# 
  3090  051C                     	;# 
  3091  051D                     	;# 
  3092  058C                     	;# 
  3093  058C                     	;# 
  3094  058D                     	;# 
  3095  058E                     	;# 
  3096  058F                     	;# 
  3097  058F                     	;# 
  3098  0590                     	;# 
  3099  0591                     	;# 
  3100  0592                     	;# 
  3101  0593                     	;# 
  3102  060C                     	;# 
  3103  060D                     	;# 
  3104  060E                     	;# 
  3105  060F                     	;# 
  3106  0610                     	;# 
  3107  0611                     	;# 
  3108  0612                     	;# 
  3109  0613                     	;# 
  3110  0614                     	;# 
  3111  0616                     	;# 
  3112  0617                     	;# 
  3113  0618                     	;# 
  3114  0619                     	;# 
  3115  061A                     	;# 
  3116  061B                     	;# 
  3117  061C                     	;# 
  3118  061D                     	;# 
  3119  061E                     	;# 
  3120  068C                     	;# 
  3121  068D                     	;# 
  3122  068E                     	;# 
  3123  068F                     	;# 
  3124  0690                     	;# 
  3125  0691                     	;# 
  3126  0692                     	;# 
  3127  0693                     	;# 
  3128  0694                     	;# 
  3129  070C                     	;# 
  3130  070D                     	;# 
  3131  070E                     	;# 
  3132  070F                     	;# 
  3133  0710                     	;# 
  3134  0711                     	;# 
  3135  0712                     	;# 
  3136  0713                     	;# 
  3137  0714                     	;# 
  3138  0716                     	;# 
  3139  0717                     	;# 
  3140  0718                     	;# 
  3141  0719                     	;# 
  3142  071A                     	;# 
  3143  071B                     	;# 
  3144  071C                     	;# 
  3145  071D                     	;# 
  3146  071E                     	;# 
  3147  0796                     	;# 
  3148  0797                     	;# 
  3149  0798                     	;# 
  3150  0799                     	;# 
  3151  079A                     	;# 
  3152  079B                     	;# 
  3153  080C                     	;# 
  3154  080D                     	;# 
  3155  080E                     	;# 
  3156  080F                     	;# 
  3157  0810                     	;# 
  3158  0811                     	;# 
  3159  0812                     	;# 
  3160  0813                     	;# 
  3161  0814                     	;# 
  3162  081A                     	;# 
  3163  081B                     	;# 
  3164  081C                     	;# 
  3165  081D                     	;# 
  3166  081E                     	;# 
  3167  081F                     	;# 
  3168  088C                     	;# 
  3169  088D                     	;# 
  3170  088E                     	;# 
  3171  088F                     	;# 
  3172  0890                     	;# 
  3173  0891                     	;# 
  3174  0892                     	;# 
  3175  0893                     	;# 
  3176  0895                     	;# 
  3177  0896                     	;# 
  3178  0897                     	;# 
  3179  0898                     	;# 
  3180  0899                     	;# 
  3181  089A                     	;# 
  3182  089B                     	;# 
  3183  090C                     	;# 
  3184  090E                     	;# 
  3185  090F                     	;# 
  3186  091F                     	;# 
  3187  091F                     	;# 
  3188  098F                     	;# 
  3189  098F                     	;# 
  3190  0990                     	;# 
  3191  0991                     	;# 
  3192  0992                     	;# 
  3193  0993                     	;# 
  3194  0994                     	;# 
  3195  0995                     	;# 
  3196  0996                     	;# 
  3197  0997                     	;# 
  3198  0E0F                     	;# 
  3199  0E10                     	;# 
  3200  0E11                     	;# 
  3201  0E12                     	;# 
  3202  0E13                     	;# 
  3203  0E14                     	;# 
  3204  0E15                     	;# 
  3205  0E16                     	;# 
  3206  0E17                     	;# 
  3207  0E18                     	;# 
  3208  0E19                     	;# 
  3209  0E1A                     	;# 
  3210  0E1B                     	;# 
  3211  0E1C                     	;# 
  3212  0E1D                     	;# 
  3213  0E1E                     	;# 
  3214  0E1F                     	;# 
  3215  0E20                     	;# 
  3216  0E21                     	;# 
  3217  0E22                     	;# 
  3218  0E23                     	;# 
  3219  0E24                     	;# 
  3220  0E25                     	;# 
  3221  0E26                     	;# 
  3222  0E27                     	;# 
  3223  0E28                     	;# 
  3224  0E29                     	;# 
  3225  0E2A                     	;# 
  3226  0E2B                     	;# 
  3227  0E2C                     	;# 
  3228  0E2D                     	;# 
  3229  0E2E                     	;# 
  3230  0E2F                     	;# 
  3231  0E30                     	;# 
  3232  0E31                     	;# 
  3233  0E32                     	;# 
  3234  0E33                     	;# 
  3235  0E34                     	;# 
  3236  0E35                     	;# 
  3237  0E36                     	;# 
  3238  0E37                     	;# 
  3239  0E8F                     	;# 
  3240  0E90                     	;# 
  3241  0E91                     	;# 
  3242  0E92                     	;# 
  3243  0E93                     	;# 
  3244  0E94                     	;# 
  3245  0E95                     	;# 
  3246  0E96                     	;# 
  3247  0E97                     	;# 
  3248  0E9C                     	;# 
  3249  0E9D                     	;# 
  3250  0E9E                     	;# 
  3251  0EA1                     	;# 
  3252  0EA2                     	;# 
  3253  0EA3                     	;# 
  3254  0EA4                     	;# 
  3255  0EA5                     	;# 
  3256  0EA9                     	;# 
  3257  0EAA                     	;# 
  3258  0EAB                     	;# 
  3259  0EAC                     	;# 
  3260  0EB1                     	;# 
  3261  0EB2                     	;# 
  3262  0EB3                     	;# 
  3263  0EB8                     	;# 
  3264  0EB9                     	;# 
  3265  0EBA                     	;# 
  3266  0EBB                     	;# 
  3267  0EBC                     	;# 
  3268  0EBD                     	;# 
  3269  0EBE                     	;# 
  3270  0EC3                     	;# 
  3271  0EC5                     	;# 
  3272  0EC6                     	;# 
  3273  0EC7                     	;# 
  3274  0EC8                     	;# 
  3275  0EC9                     	;# 
  3276  0ECA                     	;# 
  3277  0ECB                     	;# 
  3278  0ECC                     	;# 
  3279  0F10                     	;# 
  3280  0F11                     	;# 
  3281  0F12                     	;# 
  3282  0F13                     	;# 
  3283  0F14                     	;# 
  3284  0F15                     	;# 
  3285  0F16                     	;# 
  3286  0F17                     	;# 
  3287  0F18                     	;# 
  3288  0F19                     	;# 
  3289  0F1A                     	;# 
  3290  0F1B                     	;# 
  3291  0F1C                     	;# 
  3292  0F1D                     	;# 
  3293  0F1E                     	;# 
  3294  0F1F                     	;# 
  3295  0F20                     	;# 
  3296  0F21                     	;# 
  3297  0F22                     	;# 
  3298  0F23                     	;# 
  3299  0F24                     	;# 
  3300  0F25                     	;# 
  3301  0F26                     	;# 
  3302  0F27                     	;# 
  3303  0F28                     	;# 
  3304  0F29                     	;# 
  3305  0F2A                     	;# 
  3306  0F2B                     	;# 
  3307  0F2C                     	;# 
  3308  0F2D                     	;# 
  3309  0F2E                     	;# 
  3310  0F2F                     	;# 
  3311  0F30                     	;# 
  3312  0F31                     	;# 
  3313  0F32                     	;# 
  3314  0F38                     	;# 
  3315  0F39                     	;# 
  3316  0F3A                     	;# 
  3317  0F3B                     	;# 
  3318  0F3C                     	;# 
  3319  0F3D                     	;# 
  3320  0F3E                     	;# 
  3321  0F3F                     	;# 
  3322  0F40                     	;# 
  3323  0F41                     	;# 
  3324  0F43                     	;# 
  3325  0F44                     	;# 
  3326  0F45                     	;# 
  3327  0F46                     	;# 
  3328  0F47                     	;# 
  3329  0F48                     	;# 
  3330  0F49                     	;# 
  3331  0F4A                     	;# 
  3332  0F4B                     	;# 
  3333  0F4C                     	;# 
  3334  0F4E                     	;# 
  3335  0F4F                     	;# 
  3336  0F50                     	;# 
  3337  0F51                     	;# 
  3338  0F52                     	;# 
  3339  0F53                     	;# 
  3340  0F54                     	;# 
  3341  0F55                     	;# 
  3342  0F56                     	;# 
  3343  0F57                     	;# 
  3344  0F59                     	;# 
  3345  0F5A                     	;# 
  3346  0F5B                     	;# 
  3347  0F5C                     	;# 
  3348  0F5D                     	;# 
  3349  0F61                     	;# 
  3350  0F62                     	;# 
  3351  0F64                     	;# 
  3352  0F65                     	;# 
  3353  0F66                     	;# 
  3354  0F67                     	;# 
  3355  0F68                     	;# 
  3356  0F69                     	;# 
  3357  0F6A                     	;# 
  3358  0F6B                     	;# 
  3359  0F6C                     	;# 
  3360  0F6D                     	;# 
  3361  0FE4                     	;# 
  3362  0FE5                     	;# 
  3363  0FE6                     	;# 
  3364  0FE7                     	;# 
  3365  0FE8                     	;# 
  3366  0FE9                     	;# 
  3367  0FEA                     	;# 
  3368  0FEB                     	;# 
  3369  0FED                     	;# 
  3370  0FEE                     	;# 
  3371  0FEF                     	;# 
  3372  0000                     	;# 
  3373  0001                     	;# 
  3374  0002                     	;# 
  3375  0003                     	;# 
  3376  0004                     	;# 
  3377  0005                     	;# 
  3378  0006                     	;# 
  3379  0007                     	;# 
  3380  0008                     	;# 
  3381  0009                     	;# 
  3382  000A                     	;# 
  3383  000B                     	;# 
  3384  000C                     	;# 
  3385  000D                     	;# 
  3386  000E                     	;# 
  3387  000F                     	;# 
  3388  0010                     	;# 
  3389  0011                     	;# 
  3390  0012                     	;# 
  3391  0013                     	;# 
  3392  0014                     	;# 
  3393  0015                     	;# 
  3394  0016                     	;# 
  3395  0017                     	;# 
  3396  0018                     	;# 
  3397  0019                     	;# 
  3398  001A                     	;# 
  3399  001C                     	;# 
  3400  001C                     	;# 
  3401  001D                     	;# 
  3402  001D                     	;# 
  3403  001E                     	;# 
  3404  001F                     	;# 
  3405  008C                     	;# 
  3406  008C                     	;# 
  3407  008D                     	;# 
  3408  008E                     	;# 
  3409  008E                     	;# 
  3410  008F                     	;# 
  3411  0090                     	;# 
  3412  0090                     	;# 
  3413  0091                     	;# 
  3414  0093                     	;# 
  3415  0094                     	;# 
  3416  0095                     	;# 
  3417  0096                     	;# 
  3418  0097                     	;# 
  3419  0098                     	;# 
  3420  0099                     	;# 
  3421  009A                     	;# 
  3422  009B                     	;# 
  3423  009C                     	;# 
  3424  009D                     	;# 
  3425  009E                     	;# 
  3426  010C                     	;# 
  3427  010D                     	;# 
  3428  010E                     	;# 
  3429  010E                     	;# 
  3430  010F                     	;# 
  3431  0110                     	;# 
  3432  0110                     	;# 
  3433  0111                     	;# 
  3434  0112                     	;# 
  3435  0112                     	;# 
  3436  0113                     	;# 
  3437  0114                     	;# 
  3438  0114                     	;# 
  3439  0115                     	;# 
  3440  0116                     	;# 
  3441  0116                     	;# 
  3442  0117                     	;# 
  3443  0119                     	;# 
  3444  0119                     	;# 
  3445  0119                     	;# 
  3446  011A                     	;# 
  3447  011A                     	;# 
  3448  011A                     	;# 
  3449  011B                     	;# 
  3450  011B                     	;# 
  3451  011B                     	;# 
  3452  011B                     	;# 
  3453  011B                     	;# 
  3454  011C                     	;# 
  3455  011C                     	;# 
  3456  011C                     	;# 
  3457  011D                     	;# 
  3458  011D                     	;# 
  3459  011D                     	;# 
  3460  011E                     	;# 
  3461  011E                     	;# 
  3462  011E                     	;# 
  3463  011F                     	;# 
  3464  011F                     	;# 
  3465  011F                     	;# 
  3466  011F                     	;# 
  3467  011F                     	;# 
  3468  018C                     	;# 
  3469  018D                     	;# 
  3470  018E                     	;# 
  3471  018F                     	;# 
  3472  0190                     	;# 
  3473  0191                     	;# 
  3474  0192                     	;# 
  3475  0196                     	;# 
  3476  0197                     	;# 
  3477  0198                     	;# 
  3478  0199                     	;# 
  3479  019A                     	;# 
  3480  019B                     	;# 
  3481  019C                     	;# 
  3482  020C                     	;# 
  3483  020C                     	;# 
  3484  020D                     	;# 
  3485  020E                     	;# 
  3486  020F                     	;# 
  3487  020F                     	;# 
  3488  0210                     	;# 
  3489  0210                     	;# 
  3490  0211                     	;# 
  3491  0211                     	;# 
  3492  0212                     	;# 
  3493  0212                     	;# 
  3494  0213                     	;# 
  3495  0214                     	;# 
  3496  0215                     	;# 
  3497  0215                     	;# 
  3498  0216                     	;# 
  3499  0216                     	;# 
  3500  0217                     	;# 
  3501  0217                     	;# 
  3502  0218                     	;# 
  3503  0218                     	;# 
  3504  0219                     	;# 
  3505  021A                     	;# 
  3506  021B                     	;# 
  3507  021B                     	;# 
  3508  021C                     	;# 
  3509  021C                     	;# 
  3510  021D                     	;# 
  3511  021D                     	;# 
  3512  021E                     	;# 
  3513  021F                     	;# 
  3514  028C                     	;# 
  3515  028C                     	;# 
  3516  028D                     	;# 
  3517  028D                     	;# 
  3518  028E                     	;# 
  3519  028F                     	;# 
  3520  0290                     	;# 
  3521  0290                     	;# 
  3522  0291                     	;# 
  3523  0292                     	;# 
  3524  0292                     	;# 
  3525  0293                     	;# 
  3526  0293                     	;# 
  3527  0294                     	;# 
  3528  0295                     	;# 
  3529  0296                     	;# 
  3530  0296                     	;# 
  3531  0297                     	;# 
  3532  0298                     	;# 
  3533  0298                     	;# 
  3534  0299                     	;# 
  3535  0299                     	;# 
  3536  029A                     	;# 
  3537  029B                     	;# 
  3538  029C                     	;# 
  3539  029C                     	;# 
  3540  029D                     	;# 
  3541  030C                     	;# 
  3542  030C                     	;# 
  3543  030D                     	;# 
  3544  030E                     	;# 
  3545  030F                     	;# 
  3546  0310                     	;# 
  3547  0310                     	;# 
  3548  0311                     	;# 
  3549  0312                     	;# 
  3550  0313                     	;# 
  3551  0314                     	;# 
  3552  0314                     	;# 
  3553  0315                     	;# 
  3554  0316                     	;# 
  3555  0317                     	;# 
  3556  0318                     	;# 
  3557  0318                     	;# 
  3558  0319                     	;# 
  3559  031A                     	;# 
  3560  031B                     	;# 
  3561  031C                     	;# 
  3562  031C                     	;# 
  3563  031D                     	;# 
  3564  031E                     	;# 
  3565  031F                     	;# 
  3566  038C                     	;# 
  3567  038C                     	;# 
  3568  038D                     	;# 
  3569  038E                     	;# 
  3570  0390                     	;# 
  3571  0390                     	;# 
  3572  0391                     	;# 
  3573  0392                     	;# 
  3574  040C                     	;# 
  3575  040D                     	;# 
  3576  040E                     	;# 
  3577  040F                     	;# 
  3578  0410                     	;# 
  3579  0411                     	;# 
  3580  0416                     	;# 
  3581  0416                     	;# 
  3582  0417                     	;# 
  3583  0418                     	;# 
  3584  0418                     	;# 
  3585  0419                     	;# 
  3586  041A                     	;# 
  3587  041A                     	;# 
  3588  041B                     	;# 
  3589  041C                     	;# 
  3590  041C                     	;# 
  3591  041D                     	;# 
  3592  041E                     	;# 
  3593  041F                     	;# 
  3594  048C                     	;# 
  3595  048C                     	;# 
  3596  048D                     	;# 
  3597  048E                     	;# 
  3598  048F                     	;# 
  3599  048F                     	;# 
  3600  0490                     	;# 
  3601  0491                     	;# 
  3602  0492                     	;# 
  3603  0492                     	;# 
  3604  0493                     	;# 
  3605  0494                     	;# 
  3606  0495                     	;# 
  3607  0495                     	;# 
  3608  0496                     	;# 
  3609  0497                     	;# 
  3610  0498                     	;# 
  3611  0499                     	;# 
  3612  049A                     	;# 
  3613  049B                     	;# 
  3614  049C                     	;# 
  3615  049D                     	;# 
  3616  050C                     	;# 
  3617  050C                     	;# 
  3618  050D                     	;# 
  3619  050E                     	;# 
  3620  050F                     	;# 
  3621  050F                     	;# 
  3622  0510                     	;# 
  3623  0511                     	;# 
  3624  0512                     	;# 
  3625  0512                     	;# 
  3626  0513                     	;# 
  3627  0514                     	;# 
  3628  0515                     	;# 
  3629  0515                     	;# 
  3630  0516                     	;# 
  3631  0517                     	;# 
  3632  0518                     	;# 
  3633  0519                     	;# 
  3634  051A                     	;# 
  3635  051B                     	;# 
  3636  051C                     	;# 
  3637  051D                     	;# 
  3638  058C                     	;# 
  3639  058C                     	;# 
  3640  058D                     	;# 
  3641  058E                     	;# 
  3642  058F                     	;# 
  3643  058F                     	;# 
  3644  0590                     	;# 
  3645  0591                     	;# 
  3646  0592                     	;# 
  3647  0593                     	;# 
  3648  060C                     	;# 
  3649  060D                     	;# 
  3650  060E                     	;# 
  3651  060F                     	;# 
  3652  0610                     	;# 
  3653  0611                     	;# 
  3654  0612                     	;# 
  3655  0613                     	;# 
  3656  0614                     	;# 
  3657  0616                     	;# 
  3658  0617                     	;# 
  3659  0618                     	;# 
  3660  0619                     	;# 
  3661  061A                     	;# 
  3662  061B                     	;# 
  3663  061C                     	;# 
  3664  061D                     	;# 
  3665  061E                     	;# 
  3666  068C                     	;# 
  3667  068D                     	;# 
  3668  068E                     	;# 
  3669  068F                     	;# 
  3670  0690                     	;# 
  3671  0691                     	;# 
  3672  0692                     	;# 
  3673  0693                     	;# 
  3674  0694                     	;# 
  3675  070C                     	;# 
  3676  070D                     	;# 
  3677  070E                     	;# 
  3678  070F                     	;# 
  3679  0710                     	;# 
  3680  0711                     	;# 
  3681  0712                     	;# 
  3682  0713                     	;# 
  3683  0714                     	;# 
  3684  0716                     	;# 
  3685  0717                     	;# 
  3686  0718                     	;# 
  3687  0719                     	;# 
  3688  071A                     	;# 
  3689  071B                     	;# 
  3690  071C                     	;# 
  3691  071D                     	;# 
  3692  071E                     	;# 
  3693  0796                     	;# 
  3694  0797                     	;# 
  3695  0798                     	;# 
  3696  0799                     	;# 
  3697  079A                     	;# 
  3698  079B                     	;# 
  3699  080C                     	;# 
  3700  080D                     	;# 
  3701  080E                     	;# 
  3702  080F                     	;# 
  3703  0810                     	;# 
  3704  0811                     	;# 
  3705  0812                     	;# 
  3706  0813                     	;# 
  3707  0814                     	;# 
  3708  081A                     	;# 
  3709  081B                     	;# 
  3710  081C                     	;# 
  3711  081D                     	;# 
  3712  081E                     	;# 
  3713  081F                     	;# 
  3714  088C                     	;# 
  3715  088D                     	;# 
  3716  088E                     	;# 
  3717  088F                     	;# 
  3718  0890                     	;# 
  3719  0891                     	;# 
  3720  0892                     	;# 
  3721  0893                     	;# 
  3722  0895                     	;# 
  3723  0896                     	;# 
  3724  0897                     	;# 
  3725  0898                     	;# 
  3726  0899                     	;# 
  3727  089A                     	;# 
  3728  089B                     	;# 
  3729  090C                     	;# 
  3730  090E                     	;# 
  3731  090F                     	;# 
  3732  091F                     	;# 
  3733  091F                     	;# 
  3734  098F                     	;# 
  3735  098F                     	;# 
  3736  0990                     	;# 
  3737  0991                     	;# 
  3738  0992                     	;# 
  3739  0993                     	;# 
  3740  0994                     	;# 
  3741  0995                     	;# 
  3742  0996                     	;# 
  3743  0997                     	;# 
  3744  0E0F                     	;# 
  3745  0E10                     	;# 
  3746  0E11                     	;# 
  3747  0E12                     	;# 
  3748  0E13                     	;# 
  3749  0E14                     	;# 
  3750  0E15                     	;# 
  3751  0E16                     	;# 
  3752  0E17                     	;# 
  3753  0E18                     	;# 
  3754  0E19                     	;# 
  3755  0E1A                     	;# 
  3756  0E1B                     	;# 
  3757  0E1C                     	;# 
  3758  0E1D                     	;# 
  3759  0E1E                     	;# 
  3760  0E1F                     	;# 
  3761  0E20                     	;# 
  3762  0E21                     	;# 
  3763  0E22                     	;# 
  3764  0E23                     	;# 
  3765  0E24                     	;# 
  3766  0E25                     	;# 
  3767  0E26                     	;# 
  3768  0E27                     	;# 
  3769  0E28                     	;# 
  3770  0E29                     	;# 
  3771  0E2A                     	;# 
  3772  0E2B                     	;# 
  3773  0E2C                     	;# 
  3774  0E2D                     	;# 
  3775  0E2E                     	;# 
  3776  0E2F                     	;# 
  3777  0E30                     	;# 
  3778  0E31                     	;# 
  3779  0E32                     	;# 
  3780  0E33                     	;# 
  3781  0E34                     	;# 
  3782  0E35                     	;# 
  3783  0E36                     	;# 
  3784  0E37                     	;# 
  3785  0E8F                     	;# 
  3786  0E90                     	;# 
  3787  0E91                     	;# 
  3788  0E92                     	;# 
  3789  0E93                     	;# 
  3790  0E94                     	;# 
  3791  0E95                     	;# 
  3792  0E96                     	;# 
  3793  0E97                     	;# 
  3794  0E9C                     	;# 
  3795  0E9D                     	;# 
  3796  0E9E                     	;# 
  3797  0EA1                     	;# 
  3798  0EA2                     	;# 
  3799  0EA3                     	;# 
  3800  0EA4                     	;# 
  3801  0EA5                     	;# 
  3802  0EA9                     	;# 
  3803  0EAA                     	;# 
  3804  0EAB                     	;# 
  3805  0EAC                     	;# 
  3806  0EB1                     	;# 
  3807  0EB2                     	;# 
  3808  0EB3                     	;# 
  3809  0EB8                     	;# 
  3810  0EB9                     	;# 
  3811  0EBA                     	;# 
  3812  0EBB                     	;# 
  3813  0EBC                     	;# 
  3814  0EBD                     	;# 
  3815  0EBE                     	;# 
  3816  0EC3                     	;# 
  3817  0EC5                     	;# 
  3818  0EC6                     	;# 
  3819  0EC7                     	;# 
  3820  0EC8                     	;# 
  3821  0EC9                     	;# 
  3822  0ECA                     	;# 
  3823  0ECB                     	;# 
  3824  0ECC                     	;# 
  3825  0F10                     	;# 
  3826  0F11                     	;# 
  3827  0F12                     	;# 
  3828  0F13                     	;# 
  3829  0F14                     	;# 
  3830  0F15                     	;# 
  3831  0F16                     	;# 
  3832  0F17                     	;# 
  3833  0F18                     	;# 
  3834  0F19                     	;# 
  3835  0F1A                     	;# 
  3836  0F1B                     	;# 
  3837  0F1C                     	;# 
  3838  0F1D                     	;# 
  3839  0F1E                     	;# 
  3840  0F1F                     	;# 
  3841  0F20                     	;# 
  3842  0F21                     	;# 
  3843  0F22                     	;# 
  3844  0F23                     	;# 
  3845  0F24                     	;# 
  3846  0F25                     	;# 
  3847  0F26                     	;# 
  3848  0F27                     	;# 
  3849  0F28                     	;# 
  3850  0F29                     	;# 
  3851  0F2A                     	;# 
  3852  0F2B                     	;# 
  3853  0F2C                     	;# 
  3854  0F2D                     	;# 
  3855  0F2E                     	;# 
  3856  0F2F                     	;# 
  3857  0F30                     	;# 
  3858  0F31                     	;# 
  3859  0F32                     	;# 
  3860  0F38                     	;# 
  3861  0F39                     	;# 
  3862  0F3A                     	;# 
  3863  0F3B                     	;# 
  3864  0F3C                     	;# 
  3865  0F3D                     	;# 
  3866  0F3E                     	;# 
  3867  0F3F                     	;# 
  3868  0F40                     	;# 
  3869  0F41                     	;# 
  3870  0F43                     	;# 
  3871  0F44                     	;# 
  3872  0F45                     	;# 
  3873  0F46                     	;# 
  3874  0F47                     	;# 
  3875  0F48                     	;# 
  3876  0F49                     	;# 
  3877  0F4A                     	;# 
  3878  0F4B                     	;# 
  3879  0F4C                     	;# 
  3880  0F4E                     	;# 
  3881  0F4F                     	;# 
  3882  0F50                     	;# 
  3883  0F51                     	;# 
  3884  0F52                     	;# 
  3885  0F53                     	;# 
  3886  0F54                     	;# 
  3887  0F55                     	;# 
  3888  0F56                     	;# 
  3889  0F57                     	;# 
  3890  0F59                     	;# 
  3891  0F5A                     	;# 
  3892  0F5B                     	;# 
  3893  0F5C                     	;# 
  3894  0F5D                     	;# 
  3895  0F61                     	;# 
  3896  0F62                     	;# 
  3897  0F64                     	;# 
  3898  0F65                     	;# 
  3899  0F66                     	;# 
  3900  0F67                     	;# 
  3901  0F68                     	;# 
  3902  0F69                     	;# 
  3903  0F6A                     	;# 
  3904  0F6B                     	;# 
  3905  0F6C                     	;# 
  3906  0F6D                     	;# 
  3907  0FE4                     	;# 
  3908  0FE5                     	;# 
  3909  0FE6                     	;# 
  3910  0FE7                     	;# 
  3911  0FE8                     	;# 
  3912  0FE9                     	;# 
  3913  0FEA                     	;# 
  3914  0FEB                     	;# 
  3915  0FED                     	;# 
  3916  0FEE                     	;# 
  3917  0FEF                     	;# 
  3918  0000                     	;# 
  3919  0001                     	;# 
  3920  0002                     	;# 
  3921  0003                     	;# 
  3922  0004                     	;# 
  3923  0005                     	;# 
  3924  0006                     	;# 
  3925  0007                     	;# 
  3926  0008                     	;# 
  3927  0009                     	;# 
  3928  000A                     	;# 
  3929  000B                     	;# 
  3930  000C                     	;# 
  3931  000D                     	;# 
  3932  000E                     	;# 
  3933  000F                     	;# 
  3934  0010                     	;# 
  3935  0011                     	;# 
  3936  0012                     	;# 
  3937  0013                     	;# 
  3938  0014                     	;# 
  3939  0015                     	;# 
  3940  0016                     	;# 
  3941  0017                     	;# 
  3942  0018                     	;# 
  3943  0019                     	;# 
  3944  001A                     	;# 
  3945  001C                     	;# 
  3946  001C                     	;# 
  3947  001D                     	;# 
  3948  001D                     	;# 
  3949  001E                     	;# 
  3950  001F                     	;# 
  3951  008C                     	;# 
  3952  008C                     	;# 
  3953  008D                     	;# 
  3954  008E                     	;# 
  3955  008E                     	;# 
  3956  008F                     	;# 
  3957  0090                     	;# 
  3958  0090                     	;# 
  3959  0091                     	;# 
  3960  0093                     	;# 
  3961  0094                     	;# 
  3962  0095                     	;# 
  3963  0096                     	;# 
  3964  0097                     	;# 
  3965  0098                     	;# 
  3966  0099                     	;# 
  3967  009A                     	;# 
  3968  009B                     	;# 
  3969  009C                     	;# 
  3970  009D                     	;# 
  3971  009E                     	;# 
  3972  010C                     	;# 
  3973  010D                     	;# 
  3974  010E                     	;# 
  3975  010E                     	;# 
  3976  010F                     	;# 
  3977  0110                     	;# 
  3978  0110                     	;# 
  3979  0111                     	;# 
  3980  0112                     	;# 
  3981  0112                     	;# 
  3982  0113                     	;# 
  3983  0114                     	;# 
  3984  0114                     	;# 
  3985  0115                     	;# 
  3986  0116                     	;# 
  3987  0116                     	;# 
  3988  0117                     	;# 
  3989  0119                     	;# 
  3990  0119                     	;# 
  3991  0119                     	;# 
  3992  011A                     	;# 
  3993  011A                     	;# 
  3994  011A                     	;# 
  3995  011B                     	;# 
  3996  011B                     	;# 
  3997  011B                     	;# 
  3998  011B                     	;# 
  3999  011B                     	;# 
  4000  011C                     	;# 
  4001  011C                     	;# 
  4002  011C                     	;# 
  4003  011D                     	;# 
  4004  011D                     	;# 
  4005  011D                     	;# 
  4006  011E                     	;# 
  4007  011E                     	;# 
  4008  011E                     	;# 
  4009  011F                     	;# 
  4010  011F                     	;# 
  4011  011F                     	;# 
  4012  011F                     	;# 
  4013  011F                     	;# 
  4014  018C                     	;# 
  4015  018D                     	;# 
  4016  018E                     	;# 
  4017  018F                     	;# 
  4018  0190                     	;# 
  4019  0191                     	;# 
  4020  0192                     	;# 
  4021  0196                     	;# 
  4022  0197                     	;# 
  4023  0198                     	;# 
  4024  0199                     	;# 
  4025  019A                     	;# 
  4026  019B                     	;# 
  4027  019C                     	;# 
  4028  020C                     	;# 
  4029  020C                     	;# 
  4030  020D                     	;# 
  4031  020E                     	;# 
  4032  020F                     	;# 
  4033  020F                     	;# 
  4034  0210                     	;# 
  4035  0210                     	;# 
  4036  0211                     	;# 
  4037  0211                     	;# 
  4038  0212                     	;# 
  4039  0212                     	;# 
  4040  0213                     	;# 
  4041  0214                     	;# 
  4042  0215                     	;# 
  4043  0215                     	;# 
  4044  0216                     	;# 
  4045  0216                     	;# 
  4046  0217                     	;# 
  4047  0217                     	;# 
  4048  0218                     	;# 
  4049  0218                     	;# 
  4050  0219                     	;# 
  4051  021A                     	;# 
  4052  021B                     	;# 
  4053  021B                     	;# 
  4054  021C                     	;# 
  4055  021C                     	;# 
  4056  021D                     	;# 
  4057  021D                     	;# 
  4058  021E                     	;# 
  4059  021F                     	;# 
  4060  028C                     	;# 
  4061  028C                     	;# 
  4062  028D                     	;# 
  4063  028D                     	;# 
  4064  028E                     	;# 
  4065  028F                     	;# 
  4066  0290                     	;# 
  4067  0290                     	;# 
  4068  0291                     	;# 
  4069  0292                     	;# 
  4070  0292                     	;# 
  4071  0293                     	;# 
  4072  0293                     	;# 
  4073  0294                     	;# 
  4074  0295                     	;# 
  4075  0296                     	;# 
  4076  0296                     	;# 
  4077  0297                     	;# 
  4078  0298                     	;# 
  4079  0298                     	;# 
  4080  0299                     	;# 
  4081  0299                     	;# 
  4082  029A                     	;# 
  4083  029B                     	;# 
  4084  029C                     	;# 
  4085  029C                     	;# 
  4086  029D                     	;# 
  4087  030C                     	;# 
  4088  030C                     	;# 
  4089  030D                     	;# 
  4090  030E                     	;# 
  4091  030F                     	;# 
  4092  0310                     	;# 
  4093  0310                     	;# 
  4094  0311                     	;# 
  4095  0312                     	;# 
  4096  0313                     	;# 
  4097  0314                     	;# 
  4098  0314                     	;# 
  4099  0315                     	;# 
  4100  0316                     	;# 
  4101  0317                     	;# 
  4102  0318                     	;# 
  4103  0318                     	;# 
  4104  0319                     	;# 
  4105  031A                     	;# 
  4106  031B                     	;# 
  4107  031C                     	;# 
  4108  031C                     	;# 
  4109  031D                     	;# 
  4110  031E                     	;# 
  4111  031F                     	;# 
  4112  038C                     	;# 
  4113  038C                     	;# 
  4114  038D                     	;# 
  4115  038E                     	;# 
  4116  0390                     	;# 
  4117  0390                     	;# 
  4118  0391                     	;# 
  4119  0392                     	;# 
  4120  040C                     	;# 
  4121  040D                     	;# 
  4122  040E                     	;# 
  4123  040F                     	;# 
  4124  0410                     	;# 
  4125  0411                     	;# 
  4126  0416                     	;# 
  4127  0416                     	;# 
  4128  0417                     	;# 
  4129  0418                     	;# 
  4130  0418                     	;# 
  4131  0419                     	;# 
  4132  041A                     	;# 
  4133  041A                     	;# 
  4134  041B                     	;# 
  4135  041C                     	;# 
  4136  041C                     	;# 
  4137  041D                     	;# 
  4138  041E                     	;# 
  4139  041F                     	;# 
  4140  048C                     	;# 
  4141  048C                     	;# 
  4142  048D                     	;# 
  4143  048E                     	;# 
  4144  048F                     	;# 
  4145  048F                     	;# 
  4146  0490                     	;# 
  4147  0491                     	;# 
  4148  0492                     	;# 
  4149  0492                     	;# 
  4150  0493                     	;# 
  4151  0494                     	;# 
  4152  0495                     	;# 
  4153  0495                     	;# 
  4154  0496                     	;# 
  4155  0497                     	;# 
  4156  0498                     	;# 
  4157  0499                     	;# 
  4158  049A                     	;# 
  4159  049B                     	;# 
  4160  049C                     	;# 
  4161  049D                     	;# 
  4162  050C                     	;# 
  4163  050C                     	;# 
  4164  050D                     	;# 
  4165  050E                     	;# 
  4166  050F                     	;# 
  4167  050F                     	;# 
  4168  0510                     	;# 
  4169  0511                     	;# 
  4170  0512                     	;# 
  4171  0512                     	;# 
  4172  0513                     	;# 
  4173  0514                     	;# 
  4174  0515                     	;# 
  4175  0515                     	;# 
  4176  0516                     	;# 
  4177  0517                     	;# 
  4178  0518                     	;# 
  4179  0519                     	;# 
  4180  051A                     	;# 
  4181  051B                     	;# 
  4182  051C                     	;# 
  4183  051D                     	;# 
  4184  058C                     	;# 
  4185  058C                     	;# 
  4186  058D                     	;# 
  4187  058E                     	;# 
  4188  058F                     	;# 
  4189  058F                     	;# 
  4190  0590                     	;# 
  4191  0591                     	;# 
  4192  0592                     	;# 
  4193  0593                     	;# 
  4194  060C                     	;# 
  4195  060D                     	;# 
  4196  060E                     	;# 
  4197  060F                     	;# 
  4198  0610                     	;# 
  4199  0611                     	;# 
  4200  0612                     	;# 
  4201  0613                     	;# 
  4202  0614                     	;# 
  4203  0616                     	;# 
  4204  0617                     	;# 
  4205  0618                     	;# 
  4206  0619                     	;# 
  4207  061A                     	;# 
  4208  061B                     	;# 
  4209  061C                     	;# 
  4210  061D                     	;# 
  4211  061E                     	;# 
  4212  068C                     	;# 
  4213  068D                     	;# 
  4214  068E                     	;# 
  4215  068F                     	;# 
  4216  0690                     	;# 
  4217  0691                     	;# 
  4218  0692                     	;# 
  4219  0693                     	;# 
  4220  0694                     	;# 
  4221  070C                     	;# 
  4222  070D                     	;# 
  4223  070E                     	;# 
  4224  070F                     	;# 
  4225  0710                     	;# 
  4226  0711                     	;# 
  4227  0712                     	;# 
  4228  0713                     	;# 
  4229  0714                     	;# 
  4230  0716                     	;# 
  4231  0717                     	;# 
  4232  0718                     	;# 
  4233  0719                     	;# 
  4234  071A                     	;# 
  4235  071B                     	;# 
  4236  071C                     	;# 
  4237  071D                     	;# 
  4238  071E                     	;# 
  4239  0796                     	;# 
  4240  0797                     	;# 
  4241  0798                     	;# 
  4242  0799                     	;# 
  4243  079A                     	;# 
  4244  079B                     	;# 
  4245  080C                     	;# 
  4246  080D                     	;# 
  4247  080E                     	;# 
  4248  080F                     	;# 
  4249  0810                     	;# 
  4250  0811                     	;# 
  4251  0812                     	;# 
  4252  0813                     	;# 
  4253  0814                     	;# 
  4254  081A                     	;# 
  4255  081B                     	;# 
  4256  081C                     	;# 
  4257  081D                     	;# 
  4258  081E                     	;# 
  4259  081F                     	;# 
  4260  088C                     	;# 
  4261  088D                     	;# 
  4262  088E                     	;# 
  4263  088F                     	;# 
  4264  0890                     	;# 
  4265  0891                     	;# 
  4266  0892                     	;# 
  4267  0893                     	;# 
  4268  0895                     	;# 
  4269  0896                     	;# 
  4270  0897                     	;# 
  4271  0898                     	;# 
  4272  0899                     	;# 
  4273  089A                     	;# 
  4274  089B                     	;# 
  4275  090C                     	;# 
  4276  090E                     	;# 
  4277  090F                     	;# 
  4278  091F                     	;# 
  4279  091F                     	;# 
  4280  098F                     	;# 
  4281  098F                     	;# 
  4282  0990                     	;# 
  4283  0991                     	;# 
  4284  0992                     	;# 
  4285  0993                     	;# 
  4286  0994                     	;# 
  4287  0995                     	;# 
  4288  0996                     	;# 
  4289  0997                     	;# 
  4290  0E0F                     	;# 
  4291  0E10                     	;# 
  4292  0E11                     	;# 
  4293  0E12                     	;# 
  4294  0E13                     	;# 
  4295  0E14                     	;# 
  4296  0E15                     	;# 
  4297  0E16                     	;# 
  4298  0E17                     	;# 
  4299  0E18                     	;# 
  4300  0E19                     	;# 
  4301  0E1A                     	;# 
  4302  0E1B                     	;# 
  4303  0E1C                     	;# 
  4304  0E1D                     	;# 
  4305  0E1E                     	;# 
  4306  0E1F                     	;# 
  4307  0E20                     	;# 
  4308  0E21                     	;# 
  4309  0E22                     	;# 
  4310  0E23                     	;# 
  4311  0E24                     	;# 
  4312  0E25                     	;# 
  4313  0E26                     	;# 
  4314  0E27                     	;# 
  4315  0E28                     	;# 
  4316  0E29                     	;# 
  4317  0E2A                     	;# 
  4318  0E2B                     	;# 
  4319  0E2C                     	;# 
  4320  0E2D                     	;# 
  4321  0E2E                     	;# 
  4322  0E2F                     	;# 
  4323  0E30                     	;# 
  4324  0E31                     	;# 
  4325  0E32                     	;# 
  4326  0E33                     	;# 
  4327  0E34                     	;# 
  4328  0E35                     	;# 
  4329  0E36                     	;# 
  4330  0E37                     	;# 
  4331  0E8F                     	;# 
  4332  0E90                     	;# 
  4333  0E91                     	;# 
  4334  0E92                     	;# 
  4335  0E93                     	;# 
  4336  0E94                     	;# 
  4337  0E95                     	;# 
  4338  0E96                     	;# 
  4339  0E97                     	;# 
  4340  0E9C                     	;# 
  4341  0E9D                     	;# 
  4342  0E9E                     	;# 
  4343  0EA1                     	;# 
  4344  0EA2                     	;# 
  4345  0EA3                     	;# 
  4346  0EA4                     	;# 
  4347  0EA5                     	;# 
  4348  0EA9                     	;# 
  4349  0EAA                     	;# 
  4350  0EAB                     	;# 
  4351  0EAC                     	;# 
  4352  0EB1                     	;# 
  4353  0EB2                     	;# 
  4354  0EB3                     	;# 
  4355  0EB8                     	;# 
  4356  0EB9                     	;# 
  4357  0EBA                     	;# 
  4358  0EBB                     	;# 
  4359  0EBC                     	;# 
  4360  0EBD                     	;# 
  4361  0EBE                     	;# 
  4362  0EC3                     	;# 
  4363  0EC5                     	;# 
  4364  0EC6                     	;# 
  4365  0EC7                     	;# 
  4366  0EC8                     	;# 
  4367  0EC9                     	;# 
  4368  0ECA                     	;# 
  4369  0ECB                     	;# 
  4370  0ECC                     	;# 
  4371  0F10                     	;# 
  4372  0F11                     	;# 
  4373  0F12                     	;# 
  4374  0F13                     	;# 
  4375  0F14                     	;# 
  4376  0F15                     	;# 
  4377  0F16                     	;# 
  4378  0F17                     	;# 
  4379  0F18                     	;# 
  4380  0F19                     	;# 
  4381  0F1A                     	;# 
  4382  0F1B                     	;# 
  4383  0F1C                     	;# 
  4384  0F1D                     	;# 
  4385  0F1E                     	;# 
  4386  0F1F                     	;# 
  4387  0F20                     	;# 
  4388  0F21                     	;# 
  4389  0F22                     	;# 
  4390  0F23                     	;# 
  4391  0F24                     	;# 
  4392  0F25                     	;# 
  4393  0F26                     	;# 
  4394  0F27                     	;# 
  4395  0F28                     	;# 
  4396  0F29                     	;# 
  4397  0F2A                     	;# 
  4398  0F2B                     	;# 
  4399  0F2C                     	;# 
  4400  0F2D                     	;# 
  4401  0F2E                     	;# 
  4402  0F2F                     	;# 
  4403  0F30                     	;# 
  4404  0F31                     	;# 
  4405  0F32                     	;# 
  4406  0F38                     	;# 
  4407  0F39                     	;# 
  4408  0F3A                     	;# 
  4409  0F3B                     	;# 
  4410  0F3C                     	;# 
  4411  0F3D                     	;# 
  4412  0F3E                     	;# 
  4413  0F3F                     	;# 
  4414  0F40                     	;# 
  4415  0F41                     	;# 
  4416  0F43                     	;# 
  4417  0F44                     	;# 
  4418  0F45                     	;# 
  4419  0F46                     	;# 
  4420  0F47                     	;# 
  4421  0F48                     	;# 
  4422  0F49                     	;# 
  4423  0F4A                     	;# 
  4424  0F4B                     	;# 
  4425  0F4C                     	;# 
  4426  0F4E                     	;# 
  4427  0F4F                     	;# 
  4428  0F50                     	;# 
  4429  0F51                     	;# 
  4430  0F52                     	;# 
  4431  0F53                     	;# 
  4432  0F54                     	;# 
  4433  0F55                     	;# 
  4434  0F56                     	;# 
  4435  0F57                     	;# 
  4436  0F59                     	;# 
  4437  0F5A                     	;# 
  4438  0F5B                     	;# 
  4439  0F5C                     	;# 
  4440  0F5D                     	;# 
  4441  0F61                     	;# 
  4442  0F62                     	;# 
  4443  0F64                     	;# 
  4444  0F65                     	;# 
  4445  0F66                     	;# 
  4446  0F67                     	;# 
  4447  0F68                     	;# 
  4448  0F69                     	;# 
  4449  0F6A                     	;# 
  4450  0F6B                     	;# 
  4451  0F6C                     	;# 
  4452  0F6D                     	;# 
  4453  0FE4                     	;# 
  4454  0FE5                     	;# 
  4455  0FE6                     	;# 
  4456  0FE7                     	;# 
  4457  0FE8                     	;# 
  4458  0FE9                     	;# 
  4459  0FEA                     	;# 
  4460  0FEB                     	;# 
  4461  0FED                     	;# 
  4462  0FEE                     	;# 
  4463  0FEF                     	;# 
  4464  0000                     	;# 
  4465  0001                     	;# 
  4466  0002                     	;# 
  4467  0003                     	;# 
  4468  0004                     	;# 
  4469  0005                     	;# 
  4470  0006                     	;# 
  4471  0007                     	;# 
  4472  0008                     	;# 
  4473  0009                     	;# 
  4474  000A                     	;# 
  4475  000B                     	;# 
  4476  000C                     	;# 
  4477  000D                     	;# 
  4478  000E                     	;# 
  4479  000F                     	;# 
  4480  0010                     	;# 
  4481  0011                     	;# 
  4482  0012                     	;# 
  4483  0013                     	;# 
  4484  0014                     	;# 
  4485  0015                     	;# 
  4486  0016                     	;# 
  4487  0017                     	;# 
  4488  0018                     	;# 
  4489  0019                     	;# 
  4490  001A                     	;# 
  4491  001C                     	;# 
  4492  001C                     	;# 
  4493  001D                     	;# 
  4494  001D                     	;# 
  4495  001E                     	;# 
  4496  001F                     	;# 
  4497  008C                     	;# 
  4498  008C                     	;# 
  4499  008D                     	;# 
  4500  008E                     	;# 
  4501  008E                     	;# 
  4502  008F                     	;# 
  4503  0090                     	;# 
  4504  0090                     	;# 
  4505  0091                     	;# 
  4506  0093                     	;# 
  4507  0094                     	;# 
  4508  0095                     	;# 
  4509  0096                     	;# 
  4510  0097                     	;# 
  4511  0098                     	;# 
  4512  0099                     	;# 
  4513  009A                     	;# 
  4514  009B                     	;# 
  4515  009C                     	;# 
  4516  009D                     	;# 
  4517  009E                     	;# 
  4518  010C                     	;# 
  4519  010D                     	;# 
  4520  010E                     	;# 
  4521  010E                     	;# 
  4522  010F                     	;# 
  4523  0110                     	;# 
  4524  0110                     	;# 
  4525  0111                     	;# 
  4526  0112                     	;# 
  4527  0112                     	;# 
  4528  0113                     	;# 
  4529  0114                     	;# 
  4530  0114                     	;# 
  4531  0115                     	;# 
  4532  0116                     	;# 
  4533  0116                     	;# 
  4534  0117                     	;# 
  4535  0119                     	;# 
  4536  0119                     	;# 
  4537  0119                     	;# 
  4538  011A                     	;# 
  4539  011A                     	;# 
  4540  011A                     	;# 
  4541  011B                     	;# 
  4542  011B                     	;# 
  4543  011B                     	;# 
  4544  011B                     	;# 
  4545  011B                     	;# 
  4546  011C                     	;# 
  4547  011C                     	;# 
  4548  011C                     	;# 
  4549  011D                     	;# 
  4550  011D                     	;# 
  4551  011D                     	;# 
  4552  011E                     	;# 
  4553  011E                     	;# 
  4554  011E                     	;# 
  4555  011F                     	;# 
  4556  011F                     	;# 
  4557  011F                     	;# 
  4558  011F                     	;# 
  4559  011F                     	;# 
  4560  018C                     	;# 
  4561  018D                     	;# 
  4562  018E                     	;# 
  4563  018F                     	;# 
  4564  0190                     	;# 
  4565  0191                     	;# 
  4566  0192                     	;# 
  4567  0196                     	;# 
  4568  0197                     	;# 
  4569  0198                     	;# 
  4570  0199                     	;# 
  4571  019A                     	;# 
  4572  019B                     	;# 
  4573  019C                     	;# 
  4574  020C                     	;# 
  4575  020C                     	;# 
  4576  020D                     	;# 
  4577  020E                     	;# 
  4578  020F                     	;# 
  4579  020F                     	;# 
  4580  0210                     	;# 
  4581  0210                     	;# 
  4582  0211                     	;# 
  4583  0211                     	;# 
  4584  0212                     	;# 
  4585  0212                     	;# 
  4586  0213                     	;# 
  4587  0214                     	;# 
  4588  0215                     	;# 
  4589  0215                     	;# 
  4590  0216                     	;# 
  4591  0216                     	;# 
  4592  0217                     	;# 
  4593  0217                     	;# 
  4594  0218                     	;# 
  4595  0218                     	;# 
  4596  0219                     	;# 
  4597  021A                     	;# 
  4598  021B                     	;# 
  4599  021B                     	;# 
  4600  021C                     	;# 
  4601  021C                     	;# 
  4602  021D                     	;# 
  4603  021D                     	;# 
  4604  021E                     	;# 
  4605  021F                     	;# 
  4606  028C                     	;# 
  4607  028C                     	;# 
  4608  028D                     	;# 
  4609  028D                     	;# 
  4610  028E                     	;# 
  4611  028F                     	;# 
  4612  0290                     	;# 
  4613  0290                     	;# 
  4614  0291                     	;# 
  4615  0292                     	;# 
  4616  0292                     	;# 
  4617  0293                     	;# 
  4618  0293                     	;# 
  4619  0294                     	;# 
  4620  0295                     	;# 
  4621  0296                     	;# 
  4622  0296                     	;# 
  4623  0297                     	;# 
  4624  0298                     	;# 
  4625  0298                     	;# 
  4626  0299                     	;# 
  4627  0299                     	;# 
  4628  029A                     	;# 
  4629  029B                     	;# 
  4630  029C                     	;# 
  4631  029C                     	;# 
  4632  029D                     	;# 
  4633  030C                     	;# 
  4634  030C                     	;# 
  4635  030D                     	;# 
  4636  030E                     	;# 
  4637  030F                     	;# 
  4638  0310                     	;# 
  4639  0310                     	;# 
  4640  0311                     	;# 
  4641  0312                     	;# 
  4642  0313                     	;# 
  4643  0314                     	;# 
  4644  0314                     	;# 
  4645  0315                     	;# 
  4646  0316                     	;# 
  4647  0317                     	;# 
  4648  0318                     	;# 
  4649  0318                     	;# 
  4650  0319                     	;# 
  4651  031A                     	;# 
  4652  031B                     	;# 
  4653  031C                     	;# 
  4654  031C                     	;# 
  4655  031D                     	;# 
  4656  031E                     	;# 
  4657  031F                     	;# 
  4658  038C                     	;# 
  4659  038C                     	;# 
  4660  038D                     	;# 
  4661  038E                     	;# 
  4662  0390                     	;# 
  4663  0390                     	;# 
  4664  0391                     	;# 
  4665  0392                     	;# 
  4666  040C                     	;# 
  4667  040D                     	;# 
  4668  040E                     	;# 
  4669  040F                     	;# 
  4670  0410                     	;# 
  4671  0411                     	;# 
  4672  0416                     	;# 
  4673  0416                     	;# 
  4674  0417                     	;# 
  4675  0418                     	;# 
  4676  0418                     	;# 
  4677  0419                     	;# 
  4678  041A                     	;# 
  4679  041A                     	;# 
  4680  041B                     	;# 
  4681  041C                     	;# 
  4682  041C                     	;# 
  4683  041D                     	;# 
  4684  041E                     	;# 
  4685  041F                     	;# 
  4686  048C                     	;# 
  4687  048C                     	;# 
  4688  048D                     	;# 
  4689  048E                     	;# 
  4690  048F                     	;# 
  4691  048F                     	;# 
  4692  0490                     	;# 
  4693  0491                     	;# 
  4694  0492                     	;# 
  4695  0492                     	;# 
  4696  0493                     	;# 
  4697  0494                     	;# 
  4698  0495                     	;# 
  4699  0495                     	;# 
  4700  0496                     	;# 
  4701  0497                     	;# 
  4702  0498                     	;# 
  4703  0499                     	;# 
  4704  049A                     	;# 
  4705  049B                     	;# 
  4706  049C                     	;# 
  4707  049D                     	;# 
  4708  050C                     	;# 
  4709  050C                     	;# 
  4710  050D                     	;# 
  4711  050E                     	;# 
  4712  050F                     	;# 
  4713  050F                     	;# 
  4714  0510                     	;# 
  4715  0511                     	;# 
  4716  0512                     	;# 
  4717  0512                     	;# 
  4718  0513                     	;# 
  4719  0514                     	;# 
  4720  0515                     	;# 
  4721  0515                     	;# 
  4722  0516                     	;# 
  4723  0517                     	;# 
  4724  0518                     	;# 
  4725  0519                     	;# 
  4726  051A                     	;# 
  4727  051B                     	;# 
  4728  051C                     	;# 
  4729  051D                     	;# 
  4730  058C                     	;# 
  4731  058C                     	;# 
  4732  058D                     	;# 
  4733  058E                     	;# 
  4734  058F                     	;# 
  4735  058F                     	;# 
  4736  0590                     	;# 
  4737  0591                     	;# 
  4738  0592                     	;# 
  4739  0593                     	;# 
  4740  060C                     	;# 
  4741  060D                     	;# 
  4742  060E                     	;# 
  4743  060F                     	;# 
  4744  0610                     	;# 
  4745  0611                     	;# 
  4746  0612                     	;# 
  4747  0613                     	;# 
  4748  0614                     	;# 
  4749  0616                     	;# 
  4750  0617                     	;# 
  4751  0618                     	;# 
  4752  0619                     	;# 
  4753  061A                     	;# 
  4754  061B                     	;# 
  4755  061C                     	;# 
  4756  061D                     	;# 
  4757  061E                     	;# 
  4758  068C                     	;# 
  4759  068D                     	;# 
  4760  068E                     	;# 
  4761  068F                     	;# 
  4762  0690                     	;# 
  4763  0691                     	;# 
  4764  0692                     	;# 
  4765  0693                     	;# 
  4766  0694                     	;# 
  4767  070C                     	;# 
  4768  070D                     	;# 
  4769  070E                     	;# 
  4770  070F                     	;# 
  4771  0710                     	;# 
  4772  0711                     	;# 
  4773  0712                     	;# 
  4774  0713                     	;# 
  4775  0714                     	;# 
  4776  0716                     	;# 
  4777  0717                     	;# 
  4778  0718                     	;# 
  4779  0719                     	;# 
  4780  071A                     	;# 
  4781  071B                     	;# 
  4782  071C                     	;# 
  4783  071D                     	;# 
  4784  071E                     	;# 
  4785  0796                     	;# 
  4786  0797                     	;# 
  4787  0798                     	;# 
  4788  0799                     	;# 
  4789  079A                     	;# 
  4790  079B                     	;# 
  4791  080C                     	;# 
  4792  080D                     	;# 
  4793  080E                     	;# 
  4794  080F                     	;# 
  4795  0810                     	;# 
  4796  0811                     	;# 
  4797  0812                     	;# 
  4798  0813                     	;# 
  4799  0814                     	;# 
  4800  081A                     	;# 
  4801  081B                     	;# 
  4802  081C                     	;# 
  4803  081D                     	;# 
  4804  081E                     	;# 
  4805  081F                     	;# 
  4806  088C                     	;# 
  4807  088D                     	;# 
  4808  088E                     	;# 
  4809  088F                     	;# 
  4810  0890                     	;# 
  4811  0891                     	;# 
  4812  0892                     	;# 
  4813  0893                     	;# 
  4814  0895                     	;# 
  4815  0896                     	;# 
  4816  0897                     	;# 
  4817  0898                     	;# 
  4818  0899                     	;# 
  4819  089A                     	;# 
  4820  089B                     	;# 
  4821  090C                     	;# 
  4822  090E                     	;# 
  4823  090F                     	;# 
  4824  091F                     	;# 
  4825  091F                     	;# 
  4826  098F                     	;# 
  4827  098F                     	;# 
  4828  0990                     	;# 
  4829  0991                     	;# 
  4830  0992                     	;# 
  4831  0993                     	;# 
  4832  0994                     	;# 
  4833  0995                     	;# 
  4834  0996                     	;# 
  4835  0997                     	;# 
  4836  0E0F                     	;# 
  4837  0E10                     	;# 
  4838  0E11                     	;# 
  4839  0E12                     	;# 
  4840  0E13                     	;# 
  4841  0E14                     	;# 
  4842  0E15                     	;# 
  4843  0E16                     	;# 
  4844  0E17                     	;# 
  4845  0E18                     	;# 
  4846  0E19                     	;# 
  4847  0E1A                     	;# 
  4848  0E1B                     	;# 
  4849  0E1C                     	;# 
  4850  0E1D                     	;# 
  4851  0E1E                     	;# 
  4852  0E1F                     	;# 
  4853  0E20                     	;# 
  4854  0E21                     	;# 
  4855  0E22                     	;# 
  4856  0E23                     	;# 
  4857  0E24                     	;# 
  4858  0E25                     	;# 
  4859  0E26                     	;# 
  4860  0E27                     	;# 
  4861  0E28                     	;# 
  4862  0E29                     	;# 
  4863  0E2A                     	;# 
  4864  0E2B                     	;# 
  4865  0E2C                     	;# 
  4866  0E2D                     	;# 
  4867  0E2E                     	;# 
  4868  0E2F                     	;# 
  4869  0E30                     	;# 
  4870  0E31                     	;# 
  4871  0E32                     	;# 
  4872  0E33                     	;# 
  4873  0E34                     	;# 
  4874  0E35                     	;# 
  4875  0E36                     	;# 
  4876  0E37                     	;# 
  4877  0E8F                     	;# 
  4878  0E90                     	;# 
  4879  0E91                     	;# 
  4880  0E92                     	;# 
  4881  0E93                     	;# 
  4882  0E94                     	;# 
  4883  0E95                     	;# 
  4884  0E96                     	;# 
  4885  0E97                     	;# 
  4886  0E9C                     	;# 
  4887  0E9D                     	;# 
  4888  0E9E                     	;# 
  4889  0EA1                     	;# 
  4890  0EA2                     	;# 
  4891  0EA3                     	;# 
  4892  0EA4                     	;# 
  4893  0EA5                     	;# 
  4894  0EA9                     	;# 
  4895  0EAA                     	;# 
  4896  0EAB                     	;# 
  4897  0EAC                     	;# 
  4898  0EB1                     	;# 
  4899  0EB2                     	;# 
  4900  0EB3                     	;# 
  4901  0EB8                     	;# 
  4902  0EB9                     	;# 
  4903  0EBA                     	;# 
  4904  0EBB                     	;# 
  4905  0EBC                     	;# 
  4906  0EBD                     	;# 
  4907  0EBE                     	;# 
  4908  0EC3                     	;# 
  4909  0EC5                     	;# 
  4910  0EC6                     	;# 
  4911  0EC7                     	;# 
  4912  0EC8                     	;# 
  4913  0EC9                     	;# 
  4914  0ECA                     	;# 
  4915  0ECB                     	;# 
  4916  0ECC                     	;# 
  4917  0F10                     	;# 
  4918  0F11                     	;# 
  4919  0F12                     	;# 
  4920  0F13                     	;# 
  4921  0F14                     	;# 
  4922  0F15                     	;# 
  4923  0F16                     	;# 
  4924  0F17                     	;# 
  4925  0F18                     	;# 
  4926  0F19                     	;# 
  4927  0F1A                     	;# 
  4928  0F1B                     	;# 
  4929  0F1C                     	;# 
  4930  0F1D                     	;# 
  4931  0F1E                     	;# 
  4932  0F1F                     	;# 
  4933  0F20                     	;# 
  4934  0F21                     	;# 
  4935  0F22                     	;# 
  4936  0F23                     	;# 
  4937  0F24                     	;# 
  4938  0F25                     	;# 
  4939  0F26                     	;# 
  4940  0F27                     	;# 
  4941  0F28                     	;# 
  4942  0F29                     	;# 
  4943  0F2A                     	;# 
  4944  0F2B                     	;# 
  4945  0F2C                     	;# 
  4946  0F2D                     	;# 
  4947  0F2E                     	;# 
  4948  0F2F                     	;# 
  4949  0F30                     	;# 
  4950  0F31                     	;# 
  4951  0F32                     	;# 
  4952  0F38                     	;# 
  4953  0F39                     	;# 
  4954  0F3A                     	;# 
  4955  0F3B                     	;# 
  4956  0F3C                     	;# 
  4957  0F3D                     	;# 
  4958  0F3E                     	;# 
  4959  0F3F                     	;# 
  4960  0F40                     	;# 
  4961  0F41                     	;# 
  4962  0F43                     	;# 
  4963  0F44                     	;# 
  4964  0F45                     	;# 
  4965  0F46                     	;# 
  4966  0F47                     	;# 
  4967  0F48                     	;# 
  4968  0F49                     	;# 
  4969  0F4A                     	;# 
  4970  0F4B                     	;# 
  4971  0F4C                     	;# 
  4972  0F4E                     	;# 
  4973  0F4F                     	;# 
  4974  0F50                     	;# 
  4975  0F51                     	;# 
  4976  0F52                     	;# 
  4977  0F53                     	;# 
  4978  0F54                     	;# 
  4979  0F55                     	;# 
  4980  0F56                     	;# 
  4981  0F57                     	;# 
  4982  0F59                     	;# 
  4983  0F5A                     	;# 
  4984  0F5B                     	;# 
  4985  0F5C                     	;# 
  4986  0F5D                     	;# 
  4987  0F61                     	;# 
  4988  0F62                     	;# 
  4989  0F64                     	;# 
  4990  0F65                     	;# 
  4991  0F66                     	;# 
  4992  0F67                     	;# 
  4993  0F68                     	;# 
  4994  0F69                     	;# 
  4995  0F6A                     	;# 
  4996  0F6B                     	;# 
  4997  0F6C                     	;# 
  4998  0F6D                     	;# 
  4999  0FE4                     	;# 
  5000  0FE5                     	;# 
  5001  0FE6                     	;# 
  5002  0FE7                     	;# 
  5003  0FE8                     	;# 
  5004  0FE9                     	;# 
  5005  0FEA                     	;# 
  5006  0FEB                     	;# 
  5007  0FED                     	;# 
  5008  0FEE                     	;# 
  5009  0FEF                     	;# 
  5010  0000                     	;# 
  5011  0001                     	;# 
  5012  0002                     	;# 
  5013  0003                     	;# 
  5014  0004                     	;# 
  5015  0005                     	;# 
  5016  0006                     	;# 
  5017  0007                     	;# 
  5018  0008                     	;# 
  5019  0009                     	;# 
  5020  000A                     	;# 
  5021  000B                     	;# 
  5022  000C                     	;# 
  5023  000D                     	;# 
  5024  000E                     	;# 
  5025  000F                     	;# 
  5026  0010                     	;# 
  5027  0011                     	;# 
  5028  0012                     	;# 
  5029  0013                     	;# 
  5030  0014                     	;# 
  5031  0015                     	;# 
  5032  0016                     	;# 
  5033  0017                     	;# 
  5034  0018                     	;# 
  5035  0019                     	;# 
  5036  001A                     	;# 
  5037  001C                     	;# 
  5038  001C                     	;# 
  5039  001D                     	;# 
  5040  001D                     	;# 
  5041  001E                     	;# 
  5042  001F                     	;# 
  5043  008C                     	;# 
  5044  008C                     	;# 
  5045  008D                     	;# 
  5046  008E                     	;# 
  5047  008E                     	;# 
  5048  008F                     	;# 
  5049  0090                     	;# 
  5050  0090                     	;# 
  5051  0091                     	;# 
  5052  0093                     	;# 
  5053  0094                     	;# 
  5054  0095                     	;# 
  5055  0096                     	;# 
  5056  0097                     	;# 
  5057  0098                     	;# 
  5058  0099                     	;# 
  5059  009A                     	;# 
  5060  009B                     	;# 
  5061  009C                     	;# 
  5062  009D                     	;# 
  5063  009E                     	;# 
  5064  010C                     	;# 
  5065  010D                     	;# 
  5066  010E                     	;# 
  5067  010E                     	;# 
  5068  010F                     	;# 
  5069  0110                     	;# 
  5070  0110                     	;# 
  5071  0111                     	;# 
  5072  0112                     	;# 
  5073  0112                     	;# 
  5074  0113                     	;# 
  5075  0114                     	;# 
  5076  0114                     	;# 
  5077  0115                     	;# 
  5078  0116                     	;# 
  5079  0116                     	;# 
  5080  0117                     	;# 
  5081  0119                     	;# 
  5082  0119                     	;# 
  5083  0119                     	;# 
  5084  011A                     	;# 
  5085  011A                     	;# 
  5086  011A                     	;# 
  5087  011B                     	;# 
  5088  011B                     	;# 
  5089  011B                     	;# 
  5090  011B                     	;# 
  5091  011B                     	;# 
  5092  011C                     	;# 
  5093  011C                     	;# 
  5094  011C                     	;# 
  5095  011D                     	;# 
  5096  011D                     	;# 
  5097  011D                     	;# 
  5098  011E                     	;# 
  5099  011E                     	;# 
  5100  011E                     	;# 
  5101  011F                     	;# 
  5102  011F                     	;# 
  5103  011F                     	;# 
  5104  011F                     	;# 
  5105  011F                     	;# 
  5106  018C                     	;# 
  5107  018D                     	;# 
  5108  018E                     	;# 
  5109  018F                     	;# 
  5110  0190                     	;# 
  5111  0191                     	;# 
  5112  0192                     	;# 
  5113  0196                     	;# 
  5114  0197                     	;# 
  5115  0198                     	;# 
  5116  0199                     	;# 
  5117  019A                     	;# 
  5118  019B                     	;# 
  5119  019C                     	;# 
  5120  020C                     	;# 
  5121  020C                     	;# 
  5122  020D                     	;# 
  5123  020E                     	;# 
  5124  020F                     	;# 
  5125  020F                     	;# 
  5126  0210                     	;# 
  5127  0210                     	;# 
  5128  0211                     	;# 
  5129  0211                     	;# 
  5130  0212                     	;# 
  5131  0212                     	;# 
  5132  0213                     	;# 
  5133  0214                     	;# 
  5134  0215                     	;# 
  5135  0215                     	;# 
  5136  0216                     	;# 
  5137  0216                     	;# 
  5138  0217                     	;# 
  5139  0217                     	;# 
  5140  0218                     	;# 
  5141  0218                     	;# 
  5142  0219                     	;# 
  5143  021A                     	;# 
  5144  021B                     	;# 
  5145  021B                     	;# 
  5146  021C                     	;# 
  5147  021C                     	;# 
  5148  021D                     	;# 
  5149  021D                     	;# 
  5150  021E                     	;# 
  5151  021F                     	;# 
  5152  028C                     	;# 
  5153  028C                     	;# 
  5154  028D                     	;# 
  5155  028D                     	;# 
  5156  028E                     	;# 
  5157  028F                     	;# 
  5158  0290                     	;# 
  5159  0290                     	;# 
  5160  0291                     	;# 
  5161  0292                     	;# 
  5162  0292                     	;# 
  5163  0293                     	;# 
  5164  0293                     	;# 
  5165  0294                     	;# 
  5166  0295                     	;# 
  5167  0296                     	;# 
  5168  0296                     	;# 
  5169  0297                     	;# 
  5170  0298                     	;# 
  5171  0298                     	;# 
  5172  0299                     	;# 
  5173  0299                     	;# 
  5174  029A                     	;# 
  5175  029B                     	;# 
  5176  029C                     	;# 
  5177  029C                     	;# 
  5178  029D                     	;# 
  5179  030C                     	;# 
  5180  030C                     	;# 
  5181  030D                     	;# 
  5182  030E                     	;# 
  5183  030F                     	;# 
  5184  0310                     	;# 
  5185  0310                     	;# 
  5186  0311                     	;# 
  5187  0312                     	;# 
  5188  0313                     	;# 
  5189  0314                     	;# 
  5190  0314                     	;# 
  5191  0315                     	;# 
  5192  0316                     	;# 
  5193  0317                     	;# 
  5194  0318                     	;# 
  5195  0318                     	;# 
  5196  0319                     	;# 
  5197  031A                     	;# 
  5198  031B                     	;# 
  5199  031C                     	;# 
  5200  031C                     	;# 
  5201  031D                     	;# 
  5202  031E                     	;# 
  5203  031F                     	;# 
  5204  038C                     	;# 
  5205  038C                     	;# 
  5206  038D                     	;# 
  5207  038E                     	;# 
  5208  0390                     	;# 
  5209  0390                     	;# 
  5210  0391                     	;# 
  5211  0392                     	;# 
  5212  040C                     	;# 
  5213  040D                     	;# 
  5214  040E                     	;# 
  5215  040F                     	;# 
  5216  0410                     	;# 
  5217  0411                     	;# 
  5218  0416                     	;# 
  5219  0416                     	;# 
  5220  0417                     	;# 
  5221  0418                     	;# 
  5222  0418                     	;# 
  5223  0419                     	;# 
  5224  041A                     	;# 
  5225  041A                     	;# 
  5226  041B                     	;# 
  5227  041C                     	;# 
  5228  041C                     	;# 
  5229  041D                     	;# 
  5230  041E                     	;# 
  5231  041F                     	;# 
  5232  048C                     	;# 
  5233  048C                     	;# 
  5234  048D                     	;# 
  5235  048E                     	;# 
  5236  048F                     	;# 
  5237  048F                     	;# 
  5238  0490                     	;# 
  5239  0491                     	;# 
  5240  0492                     	;# 
  5241  0492                     	;# 
  5242  0493                     	;# 
  5243  0494                     	;# 
  5244  0495                     	;# 
  5245  0495                     	;# 
  5246  0496                     	;# 
  5247  0497                     	;# 
  5248  0498                     	;# 
  5249  0499                     	;# 
  5250  049A                     	;# 
  5251  049B                     	;# 
  5252  049C                     	;# 
  5253  049D                     	;# 
  5254  050C                     	;# 
  5255  050C                     	;# 
  5256  050D                     	;# 
  5257  050E                     	;# 
  5258  050F                     	;# 
  5259  050F                     	;# 
  5260  0510                     	;# 
  5261  0511                     	;# 
  5262  0512                     	;# 
  5263  0512                     	;# 
  5264  0513                     	;# 
  5265  0514                     	;# 
  5266  0515                     	;# 
  5267  0515                     	;# 
  5268  0516                     	;# 
  5269  0517                     	;# 
  5270  0518                     	;# 
  5271  0519                     	;# 
  5272  051A                     	;# 
  5273  051B                     	;# 
  5274  051C                     	;# 
  5275  051D                     	;# 
  5276  058C                     	;# 
  5277  058C                     	;# 
  5278  058D                     	;# 
  5279  058E                     	;# 
  5280  058F                     	;# 
  5281  058F                     	;# 
  5282  0590                     	;# 
  5283  0591                     	;# 
  5284  0592                     	;# 
  5285  0593                     	;# 
  5286  060C                     	;# 
  5287  060D                     	;# 
  5288  060E                     	;# 
  5289  060F                     	;# 
  5290  0610                     	;# 
  5291  0611                     	;# 
  5292  0612                     	;# 
  5293  0613                     	;# 
  5294  0614                     	;# 
  5295  0616                     	;# 
  5296  0617                     	;# 
  5297  0618                     	;# 
  5298  0619                     	;# 
  5299  061A                     	;# 
  5300  061B                     	;# 
  5301  061C                     	;# 
  5302  061D                     	;# 
  5303  061E                     	;# 
  5304  068C                     	;# 
  5305  068D                     	;# 
  5306  068E                     	;# 
  5307  068F                     	;# 
  5308  0690                     	;# 
  5309  0691                     	;# 
  5310  0692                     	;# 
  5311  0693                     	;# 
  5312  0694                     	;# 
  5313  070C                     	;# 
  5314  070D                     	;# 
  5315  070E                     	;# 
  5316  070F                     	;# 
  5317  0710                     	;# 
  5318  0711                     	;# 
  5319  0712                     	;# 
  5320  0713                     	;# 
  5321  0714                     	;# 
  5322  0716                     	;# 
  5323  0717                     	;# 
  5324  0718                     	;# 
  5325  0719                     	;# 
  5326  071A                     	;# 
  5327  071B                     	;# 
  5328  071C                     	;# 
  5329  071D                     	;# 
  5330  071E                     	;# 
  5331  0796                     	;# 
  5332  0797                     	;# 
  5333  0798                     	;# 
  5334  0799                     	;# 
  5335  079A                     	;# 
  5336  079B                     	;# 
  5337  080C                     	;# 
  5338  080D                     	;# 
  5339  080E                     	;# 
  5340  080F                     	;# 
  5341  0810                     	;# 
  5342  0811                     	;# 
  5343  0812                     	;# 
  5344  0813                     	;# 
  5345  0814                     	;# 
  5346  081A                     	;# 
  5347  081B                     	;# 
  5348  081C                     	;# 
  5349  081D                     	;# 
  5350  081E                     	;# 
  5351  081F                     	;# 
  5352  088C                     	;# 
  5353  088D                     	;# 
  5354  088E                     	;# 
  5355  088F                     	;# 
  5356  0890                     	;# 
  5357  0891                     	;# 
  5358  0892                     	;# 
  5359  0893                     	;# 
  5360  0895                     	;# 
  5361  0896                     	;# 
  5362  0897                     	;# 
  5363  0898                     	;# 
  5364  0899                     	;# 
  5365  089A                     	;# 
  5366  089B                     	;# 
  5367  090C                     	;# 
  5368  090E                     	;# 
  5369  090F                     	;# 
  5370  091F                     	;# 
  5371  091F                     	;# 
  5372  098F                     	;# 
  5373  098F                     	;# 
  5374  0990                     	;# 
  5375  0991                     	;# 
  5376  0992                     	;# 
  5377  0993                     	;# 
  5378  0994                     	;# 
  5379  0995                     	;# 
  5380  0996                     	;# 
  5381  0997                     	;# 
  5382  0E0F                     	;# 
  5383  0E10                     	;# 
  5384  0E11                     	;# 
  5385  0E12                     	;# 
  5386  0E13                     	;# 
  5387  0E14                     	;# 
  5388  0E15                     	;# 
  5389  0E16                     	;# 
  5390  0E17                     	;# 
  5391  0E18                     	;# 
  5392  0E19                     	;# 
  5393  0E1A                     	;# 
  5394  0E1B                     	;# 
  5395  0E1C                     	;# 
  5396  0E1D                     	;# 
  5397  0E1E                     	;# 
  5398  0E1F                     	;# 
  5399  0E20                     	;# 
  5400  0E21                     	;# 
  5401  0E22                     	;# 
  5402  0E23                     	;# 
  5403  0E24                     	;# 
  5404  0E25                     	;# 
  5405  0E26                     	;# 
  5406  0E27                     	;# 
  5407  0E28                     	;# 
  5408  0E29                     	;# 
  5409  0E2A                     	;# 
  5410  0E2B                     	;# 
  5411  0E2C                     	;# 
  5412  0E2D                     	;# 
  5413  0E2E                     	;# 
  5414  0E2F                     	;# 
  5415  0E30                     	;# 
  5416  0E31                     	;# 
  5417  0E32                     	;# 
  5418  0E33                     	;# 
  5419  0E34                     	;# 
  5420  0E35                     	;# 
  5421  0E36                     	;# 
  5422  0E37                     	;# 
  5423  0E8F                     	;# 
  5424  0E90                     	;# 
  5425  0E91                     	;# 
  5426  0E92                     	;# 
  5427  0E93                     	;# 
  5428  0E94                     	;# 
  5429  0E95                     	;# 
  5430  0E96                     	;# 
  5431  0E97                     	;# 
  5432  0E9C                     	;# 
  5433  0E9D                     	;# 
  5434  0E9E                     	;# 
  5435  0EA1                     	;# 
  5436  0EA2                     	;# 
  5437  0EA3                     	;# 
  5438  0EA4                     	;# 
  5439  0EA5                     	;# 
  5440  0EA9                     	;# 
  5441  0EAA                     	;# 
  5442  0EAB                     	;# 
  5443  0EAC                     	;# 
  5444  0EB1                     	;# 
  5445  0EB2                     	;# 
  5446  0EB3                     	;# 
  5447  0EB8                     	;# 
  5448  0EB9                     	;# 
  5449  0EBA                     	;# 
  5450  0EBB                     	;# 
  5451  0EBC                     	;# 
  5452  0EBD                     	;# 
  5453  0EBE                     	;# 
  5454  0EC3                     	;# 
  5455  0EC5                     	;# 
  5456  0EC6                     	;# 
  5457  0EC7                     	;# 
  5458  0EC8                     	;# 
  5459  0EC9                     	;# 
  5460  0ECA                     	;# 
  5461  0ECB                     	;# 
  5462  0ECC                     	;# 
  5463  0F10                     	;# 
  5464  0F11                     	;# 
  5465  0F12                     	;# 
  5466  0F13                     	;# 
  5467  0F14                     	;# 
  5468  0F15                     	;# 
  5469  0F16                     	;# 
  5470  0F17                     	;# 
  5471  0F18                     	;# 
  5472  0F19                     	;# 
  5473  0F1A                     	;# 
  5474  0F1B                     	;# 
  5475  0F1C                     	;# 
  5476  0F1D                     	;# 
  5477  0F1E                     	;# 
  5478  0F1F                     	;# 
  5479  0F20                     	;# 
  5480  0F21                     	;# 
  5481  0F22                     	;# 
  5482  0F23                     	;# 
  5483  0F24                     	;# 
  5484  0F25                     	;# 
  5485  0F26                     	;# 
  5486  0F27                     	;# 
  5487  0F28                     	;# 
  5488  0F29                     	;# 
  5489  0F2A                     	;# 
  5490  0F2B                     	;# 
  5491  0F2C                     	;# 
  5492  0F2D                     	;# 
  5493  0F2E                     	;# 
  5494  0F2F                     	;# 
  5495  0F30                     	;# 
  5496  0F31                     	;# 
  5497  0F32                     	;# 
  5498  0F38                     	;# 
  5499  0F39                     	;# 
  5500  0F3A                     	;# 
  5501  0F3B                     	;# 
  5502  0F3C                     	;# 
  5503  0F3D                     	;# 
  5504  0F3E                     	;# 
  5505  0F3F                     	;# 
  5506  0F40                     	;# 
  5507  0F41                     	;# 
  5508  0F43                     	;# 
  5509  0F44                     	;# 
  5510  0F45                     	;# 
  5511  0F46                     	;# 
  5512  0F47                     	;# 
  5513  0F48                     	;# 
  5514  0F49                     	;# 
  5515  0F4A                     	;# 
  5516  0F4B                     	;# 
  5517  0F4C                     	;# 
  5518  0F4E                     	;# 
  5519  0F4F                     	;# 
  5520  0F50                     	;# 
  5521  0F51                     	;# 
  5522  0F52                     	;# 
  5523  0F53                     	;# 
  5524  0F54                     	;# 
  5525  0F55                     	;# 
  5526  0F56                     	;# 
  5527  0F57                     	;# 
  5528  0F59                     	;# 
  5529  0F5A                     	;# 
  5530  0F5B                     	;# 
  5531  0F5C                     	;# 
  5532  0F5D                     	;# 
  5533  0F61                     	;# 
  5534  0F62                     	;# 
  5535  0F64                     	;# 
  5536  0F65                     	;# 
  5537  0F66                     	;# 
  5538  0F67                     	;# 
  5539  0F68                     	;# 
  5540  0F69                     	;# 
  5541  0F6A                     	;# 
  5542  0F6B                     	;# 
  5543  0F6C                     	;# 
  5544  0F6D                     	;# 
  5545  0FE4                     	;# 
  5546  0FE5                     	;# 
  5547  0FE6                     	;# 
  5548  0FE7                     	;# 
  5549  0FE8                     	;# 
  5550  0FE9                     	;# 
  5551  0FEA                     	;# 
  5552  0FEB                     	;# 
  5553  0FED                     	;# 
  5554  0FEE                     	;# 
  5555  0FEF                     	;# 
  5556                           
  5557                           	psect	stringtext1
  5558  100F                     __pstringtext1:
  5559  100F                     _dpowers:
  5560  100F  3401               	retlw	1
  5561  1010  3400               	retlw	0
  5562  1011  340A               	retlw	10
  5563  1012  3400               	retlw	0
  5564  1013  3464               	retlw	100
  5565  1014  3400               	retlw	0
  5566  1015  34E8               	retlw	232
  5567  1016  3403               	retlw	3
  5568  1017  3410               	retlw	16
  5569  1018  3427               	retlw	39
  5570  1019                     __end_of_dpowers:
  5571                           
  5572                           	psect	nvBANK0
  5573  0053                     __pnvBANK0:
  5574  0053                     _TMR3_InterruptHandler:
  5575  0053                     	ds	2
  5576  0055                     _timer3ReloadVal:
  5577  0055                     	ds	2
  5578  0057                     _TMR1_InterruptHandler:
  5579  0057                     	ds	2
  5580  0059                     _timer1ReloadVal:
  5581  0059                     	ds	2
  5582  000D                     _PORTBbits	set	13
  5583  0016                     _LATAbits	set	22
  5584  0013                     _TRISCbits	set	19
  5585  000B                     _INTCONbits	set	11
  5586  0014                     _TRISD	set	20
  5587  0013                     _TRISC	set	19
  5588  0012                     _TRISB	set	18
  5589  0011                     _TRISA	set	17
  5590  0015                     _TRISE	set	21
  5591  0018                     _LATC	set	24
  5592  0017                     _LATB	set	23
  5593  0016                     _LATA	set	22
  5594  0019                     _LATD	set	25
  5595  001A                     _LATE	set	26
  5596  0094                     _ADCON1bits	set	148
  5597  008E                     _ADPREVL	set	142
  5598  008F                     _ADPREVH	set	143
  5599  0097                     _ADSTATbits	set	151
  5600  0090                     _ADACCL	set	144
  5601  0091                     _ADACCH	set	145
  5602  0095                     _ADCON2bits	set	149
  5603  009C                     _ADPRE	set	156
  5604  0096                     _ADCON3bits	set	150
  5605  008C                     _ADRESL	set	140
  5606  008D                     _ADRESH	set	141
  5607  0093                     _ADCON0bits	set	147
  5608  009D                     _ADACQ	set	157
  5609  0093                     _ADCON0	set	147
  5610  0098                     _ADCLK	set	152
  5611  0099                     _ADACT	set	153
  5612  009A                     _ADREF	set	154
  5613  0097                     _ADSTAT	set	151
  5614  0096                     _ADCON3	set	150
  5615  0095                     _ADCON2	set	149
  5616  0094                     _ADCON1	set	148
  5617  009B                     _ADCAP	set	155
  5618  009E                     _ADPCH	set	158
  5619  0116                     _ADERRL	set	278
  5620  0117                     _ADERRH	set	279
  5621  0114                     _ADFLTRL	set	276
  5622  0115                     _ADFLTRH	set	277
  5623  010C                     _ADCNT	set	268
  5624  010D                     _ADRPT	set	269
  5625  0113                     _ADSTPTH	set	275
  5626  0112                     _ADSTPTL	set	274
  5627  0111                     _ADUTHH	set	273
  5628  0110                     _ADUTHL	set	272
  5629  010F                     _ADLTHH	set	271
  5630  010E                     _ADLTHL	set	270
  5631  018E                     _SSP1MSK	set	398
  5632  018D                     _SSP1ADD	set	397
  5633  018F                     _SSP1STAT	set	399
  5634  0191                     _SSP1CON2	set	401
  5635  0190                     _SSP1CON1bits	set	400
  5636  018C                     _SSP1BUF	set	396
  5637  018F                     _SSP1STATbits	set	399
  5638  0191                     _SSP1CON2bits	set	401
  5639  0190                     _SSP1CON1	set	400
  5640  0215                     _T3GCONbits	set	533
  5641  0214                     _T3CONbits	set	532
  5642  0214                     _T3CON	set	532
  5643  0212                     _TMR3L	set	530
  5644  0213                     _TMR3H	set	531
  5645  0217                     _T3CLK	set	535
  5646  0216                     _T3GATE	set	534
  5647  0215                     _T3GCON	set	533
  5648  020F                     _T1GCONbits	set	527
  5649  020E                     _T1CONbits	set	526
  5650  020E                     _T1CON	set	526
  5651  020C                     _TMR1L	set	524
  5652  020D                     _TMR1H	set	525
  5653  0211                     _T1CLK	set	529
  5654  0210                     _T1GATE	set	528
  5655  020F                     _T1GCON	set	527
  5656  0710                     _PIR4bits	set	1808
  5657  071A                     _PIE4bits	set	1818
  5658  0719                     _PIE3bits	set	1817
  5659  070F                     _PIR3bits	set	1807
  5660  079B                     _PMD5	set	1947
  5661  079A                     _PMD4	set	1946
  5662  0799                     _PMD3	set	1945
  5663  0798                     _PMD2	set	1944
  5664  0797                     _PMD1	set	1943
  5665  0796                     _PMD0	set	1942
  5666  0892                     _OSCTUNE	set	2194
  5667  0893                     _OSCFRQ	set	2195
  5668  0891                     _OSCEN	set	2193
  5669  088F                     _OSCCON3	set	2191
  5670  088D                     _OSCCON1	set	2189
  5671  0EC6                     _SSP1DATPPS	set	3782
  5672  0EC5                     _SSP1CLKPPS	set	3781
  5673  0F24                     _RC4PPS	set	3876
  5674  0F23                     _RC3PPS	set	3875
  5675  0F67                     _SLRCONE	set	3943
  5676  0F5C                     _SLRCOND	set	3932
  5677  0F51                     _SLRCONC	set	3921
  5678  0F46                     _SLRCONB	set	3910
  5679  0F3B                     _SLRCONA	set	3899
  5680  0F5B                     _ODCOND	set	3931
  5681  0F50                     _ODCONC	set	3920
  5682  0F45                     _ODCONB	set	3909
  5683  0F3A                     _ODCONA	set	3898
  5684  0F66                     _ODCONE	set	3942
  5685  0F4F                     _WPUC	set	3919
  5686  0F39                     _WPUA	set	3897
  5687  0F44                     _WPUB	set	3908
  5688  0F65                     _WPUE	set	3941
  5689  0F5A                     _WPUD	set	3930
  5690  0F38                     _ANSELA	set	3896
  5691  0F64                     _ANSELE	set	3940
  5692  0F43                     _ANSELB	set	3907
  5693  0F4E                     _ANSELC	set	3918
  5694  0F59                     _ANSELD	set	3929
  5695  7A7C                     _WPUC4	set	31356
  5696  7A7B                     _WPUC3	set	31355
  5697                           
  5698                           	psect	stringtext2
  5699  1000                     __pstringtext2:
  5700  1000                     STR_1:
  5701  1000  3425               	retlw	37	;'%'
  5702  1001  3430               	retlw	48	;'0'
  5703  1002  3432               	retlw	50	;'2'
  5704  1003  3464               	retlw	100	;'d'
  5705  1004  343A               	retlw	58	;':'
  5706  1005  3425               	retlw	37	;'%'
  5707  1006  3430               	retlw	48	;'0'
  5708  1007  3432               	retlw	50	;'2'
  5709  1008  3464               	retlw	100	;'d'
  5710  1009  343A               	retlw	58	;':'
  5711  100A  3425               	retlw	37	;'%'
  5712  100B  3430               	retlw	48	;'0'
  5713  100C  3432               	retlw	50	;'2'
  5714  100D  3464               	retlw	100	;'d'
  5715  100E  3400               	retlw	0
  5716                           
  5717                           	psect	stringtext3
  5718  1019                     __pstringtext3:
  5719  1019                     STR_3:
  5720  1019  3425               	retlw	37	;'%'
  5721  101A  3430               	retlw	48	;'0'
  5722  101B  3432               	retlw	50	;'2'
  5723  101C  3464               	retlw	100	;'d'
  5724  101D  3420               	retlw	32	;' '
  5725  101E  3443               	retlw	67	;'C'
  5726  101F  3400               	retlw	0
  5727                           
  5728                           	psect	stringtext4
  5729  1020                     __pstringtext4:
  5730  1020                     STR_2:
  5731  1020  3443               	retlw	67	;'C'
  5732  1021  3454               	retlw	84	;'T'
  5733  1022  344C               	retlw	76	;'L'
  5734  1023  3420               	retlw	32	;' '
  5735  1024  343F               	retlw	63	;'?'
  5736  1025  3400               	retlw	0
  5737                           
  5738                           	psect	stringtext5
  5739  1026                     __pstringtext5:
  5740  1026                     STR_4:
  5741  1026  344C               	retlw	76	;'L'
  5742  1027  3420               	retlw	32	;' '
  5743  1028  3425               	retlw	37	;'%'
  5744  1029  3464               	retlw	100	;'d'
  5745  102A  3400               	retlw	0
  5746                           
  5747                           	psect	stringtext6
  5748  0000                     __pstringtext6:
  5749                           
  5750                           	psect	cinit
  5751  0036                     start_initialization:	
  5752                           ; #config settings
  5753                           
  5754  0036                     __initialization:
  5755                           
  5756                           ; Clear objects allocated to BANK0
  5757  0036  3046               	movlw	low __pbssBANK0
  5758  0037  0084               	movwf	4
  5759  0038  3000               	movlw	high __pbssBANK0
  5760  0039  0085               	movwf	5
  5761  003A  300D               	movlw	13
  5762  003B  318D  251D  3180   	fcall	clear_ram0
  5763  003E                     end_of_initialization:	
  5764                           ;End of C runtime variable initialization code
  5765                           
  5766  003E                     __end_of__initialization:
  5767  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5768  003F  0020               	movlb	0
  5769  0040  3185  2D20         	ljmp	_main	;jump to C main() function
  5770                           
  5771                           	psect	bssBANK0
  5772  0046                     __pbssBANK0:
  5773  0046                     _t:
  5774  0046                     	ds	6
  5775  004C                     _lumLevel:
  5776  004C                     	ds	2
  5777  004E                     _i2c1_driver_i2cISR:
  5778  004E                     	ds	2
  5779  0050                     _i2c1_driver_busCollisionISR:
  5780  0050                     	ds	2
  5781  0052                     _c:
  5782  0052                     	ds	1
  5783                           
  5784                           	psect	clrtext
  5785  0D1D                     clear_ram0:	
  5786                           ;	Called with FSR0 containing the base address, and
  5787                           ;	WREG with the size to clear
  5788                           
  5789  0D1D  0064               	clrwdt	;clear the watchdog before getting into this loop
  5790  0D1E                     clrloop0:
  5791  0D1E  0180               	clrf	0	;clear RAM location pointed to by FSR
  5792  0D1F  3101               	addfsr 0,1
  5793  0D20  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5794  0D21  2D1E               	goto	clrloop0	;have we reached the end yet?
  5795  0D22  3400               	retlw	0	;all done for this memory range, return
  5796                           
  5797                           	psect	cstackBANK1
  5798  00A0                     __pcstackBANK1:
  5799  00A0                     ??_PMD_Initialize:
  5800  00A0                     ??_OSCILLATOR_Initialize:	
  5801                           ; 1 bytes @ 0x0
  5802                           
  5803  00A0                     ??_ADCC_Initialize:	
  5804                           ; 1 bytes @ 0x0
  5805                           
  5806  00A0                     ?_TMR1_SetInterruptHandler:	
  5807                           ; 1 bytes @ 0x0
  5808                           
  5809  00A0                     ?_TMR3_SetInterruptHandler:	
  5810                           ; 1 bytes @ 0x0
  5811                           
  5812  00A0                     ??_WriteI2C:	
  5813                           ; 1 bytes @ 0x0
  5814                           
  5815  00A0                     ??_PIN_MANAGER_Initialize:	
  5816                           ; 1 bytes @ 0x0
  5817                           
  5818  00A0                     ??_i2c1_driver_open:	
  5819                           ; 1 bytes @ 0x0
  5820                           
  5821  00A0                     ?___xxtofl:	
  5822                           ; 1 bytes @ 0x0
  5823                           
  5824  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  5825                           ; 4 bytes @ 0x0
  5826                           
  5827  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  5828                           ; 2 bytes @ 0x0
  5829                           
  5830  00A0                     ___xxtofl@val:	
  5831                           ; 2 bytes @ 0x0
  5832                           
  5833                           
  5834                           ; 4 bytes @ 0x0
  5835  00A0                     	ds	1
  5836  00A1                     WriteI2C@data_out:
  5837                           
  5838                           ; 1 bytes @ 0x1
  5839  00A1                     	ds	1
  5840  00A2                     ??_TMR3_Initialize:
  5841  00A2                     ??_TMR1_Initialize:	
  5842                           ; 1 bytes @ 0x2
  5843                           
  5844  00A2                     ??_TMR1_SetInterruptHandler:	
  5845                           ; 1 bytes @ 0x2
  5846                           
  5847  00A2                     ??_TMR3_SetInterruptHandler:	
  5848                           ; 1 bytes @ 0x2
  5849                           
  5850  00A2                     ??_SYSTEM_Initialize:	
  5851                           ; 1 bytes @ 0x2
  5852                           
  5853  00A2                     ??_LCDsend:	
  5854                           ; 1 bytes @ 0x2
  5855                           
  5856  00A2                     ?_LCDsend2x4:	
  5857                           ; 1 bytes @ 0x2
  5858                           
  5859  00A2                     LCDsend2x4@mode:	
  5860                           ; 1 bytes @ 0x2
  5861                           
  5862                           
  5863                           ; 1 bytes @ 0x2
  5864  00A2                     	ds	1
  5865  00A3                     ??_LCDsend2x4:
  5866  00A3                     LCDsend@c:	
  5867                           ; 1 bytes @ 0x3
  5868                           
  5869                           
  5870                           ; 1 bytes @ 0x3
  5871  00A3                     	ds	1
  5872  00A4                     ??___xxtofl:
  5873                           
  5874                           ; 1 bytes @ 0x4
  5875  00A4                     	ds	1
  5876  00A5                     LCDsend2x4@c:
  5877                           
  5878                           ; 1 bytes @ 0x5
  5879  00A5                     	ds	1
  5880  00A6                     LCDsend2x4@hc:
  5881                           
  5882                           ; 1 bytes @ 0x6
  5883  00A6                     	ds	1
  5884  00A7                     LCDsend2x4@lc:
  5885                           
  5886                           ; 1 bytes @ 0x7
  5887  00A7                     	ds	1
  5888  00A8                     ??_LCDinit:
  5889  00A8                     ___xxtofl@sign:	
  5890                           ; 1 bytes @ 0x8
  5891                           
  5892                           
  5893                           ; 1 bytes @ 0x8
  5894  00A8                     	ds	1
  5895  00A9                     ___xxtofl@exp:
  5896                           
  5897                           ; 1 bytes @ 0x9
  5898  00A9                     	ds	1
  5899  00AA                     ___xxtofl@arg:
  5900                           
  5901                           ; 4 bytes @ 0xA
  5902  00AA                     	ds	4
  5903  00AE                     ?___fleq:
  5904  00AE                     ___fleq@ff1:	
  5905                           ; 1 bit 
  5906                           
  5907                           
  5908                           ; 4 bytes @ 0xE
  5909  00AE                     	ds	4
  5910  00B2                     ___fleq@ff2:
  5911                           
  5912                           ; 4 bytes @ 0x12
  5913  00B2                     	ds	4
  5914  00B6                     ??___fleq:
  5915                           
  5916                           ; 1 bytes @ 0x16
  5917  00B6                     	ds	4
  5918  00BA                     ??_main:
  5919                           
  5920                           ; 1 bytes @ 0x1A
  5921  00BA                     	ds	4
  5922  00BE                     main@aux:
  5923                           
  5924                           ; 4 bytes @ 0x1E
  5925  00BE                     	ds	4
  5926  00C2                     main@a:
  5927                           
  5928                           ; 2 bytes @ 0x22
  5929  00C2                     	ds	2
  5930                           
  5931                           	psect	cstackCOMMON
  5932  0070                     __pcstackCOMMON:
  5933  0070                     ?_isdigit:
  5934  0070                     ?_i2c1_driver_open:	
  5935                           ; 1 bit 
  5936                           
  5937  0070                     ?_PMD_Initialize:	
  5938                           ; 1 bit 
  5939                           
  5940  0070                     ?_OSCILLATOR_Initialize:	
  5941                           ; 1 bytes @ 0x0
  5942                           
  5943  0070                     ?_ADCC_Initialize:	
  5944                           ; 1 bytes @ 0x0
  5945                           
  5946  0070                     ?_TMR3_Initialize:	
  5947                           ; 1 bytes @ 0x0
  5948                           
  5949  0070                     ?_TMR1_Initialize:	
  5950                           ; 1 bytes @ 0x0
  5951                           
  5952  0070                     ?_TMR3_ISR:	
  5953                           ; 1 bytes @ 0x0
  5954                           
  5955  0070                     ?_TMR1_ISR:	
  5956                           ; 1 bytes @ 0x0
  5957                           
  5958  0070                     ?_TMR1_DefaultInterruptHandler:	
  5959                           ; 1 bytes @ 0x0
  5960                           
  5961  0070                     ??_TMR1_DefaultInterruptHandler:	
  5962                           ; 1 bytes @ 0x0
  5963                           
  5964  0070                     ?_TMR3_DefaultInterruptHandler:	
  5965                           ; 1 bytes @ 0x0
  5966                           
  5967  0070                     ??_TMR3_DefaultInterruptHandler:	
  5968                           ; 1 bytes @ 0x0
  5969                           
  5970  0070                     ??_isdigit:	
  5971                           ; 1 bytes @ 0x0
  5972                           
  5973  0070                     ?_ReadI2C:	
  5974                           ; 1 bytes @ 0x0
  5975                           
  5976  0070                     ??_ReadI2C:	
  5977                           ; 1 bytes @ 0x0
  5978                           
  5979  0070                     ?_WriteI2C:	
  5980                           ; 1 bytes @ 0x0
  5981                           
  5982  0070                     ?_PIN_MANAGER_Initialize:	
  5983                           ; 1 bytes @ 0x0
  5984                           
  5985  0070                     ?_SYSTEM_Initialize:	
  5986                           ; 1 bytes @ 0x0
  5987                           
  5988  0070                     ?_INTERRUPT_InterruptManager:	
  5989                           ; 1 bytes @ 0x0
  5990                           
  5991  0070                     ?_TMR1_WriteTimer:	
  5992                           ; 1 bytes @ 0x0
  5993                           
  5994  0070                     ?_TMR3_WriteTimer:	
  5995                           ; 1 bytes @ 0x0
  5996                           
  5997  0070                     ?_tsttc:	
  5998                           ; 1 bytes @ 0x0
  5999                           
  6000  0070                     ?_LCDsend:	
  6001                           ; 1 bytes @ 0x0
  6002                           
  6003  0070                     ?_LCDinit:	
  6004                           ; 1 bytes @ 0x0
  6005                           
  6006  0070                     ?_LCDcmd:	
  6007                           ; 1 bytes @ 0x0
  6008                           
  6009  0070                     ?_LCDchar:	
  6010                           ; 1 bytes @ 0x0
  6011                           
  6012  0070                     ?_Clock_ISR:	
  6013                           ; 1 bytes @ 0x0
  6014                           
  6015  0070                     ?_menuLCD_ISR:	
  6016                           ; 1 bytes @ 0x0
  6017                           
  6018  0070                     ?_main:	
  6019                           ; 1 bytes @ 0x0
  6020                           
  6021  0070                     ?i1_WriteI2C:	
  6022                           ; 1 bytes @ 0x0
  6023                           
  6024  0070                     ??i1_WriteI2C:	
  6025                           ; 1 bytes @ 0x0
  6026                           
  6027  0070                     ?_ADCC_GetSingleConversion:	
  6028                           ; 1 bytes @ 0x0
  6029                           
  6030  0070                     ?___wmul:	
  6031                           ; 2 bytes @ 0x0
  6032                           
  6033  0070                     ?___lwdiv:	
  6034                           ; 2 bytes @ 0x0
  6035                           
  6036  0070                     _isdigit$2263:	
  6037                           ; 2 bytes @ 0x0
  6038                           
  6039  0070                     TMR1_WriteTimer@timerVal:	
  6040                           ; 1 bytes @ 0x0
  6041                           
  6042  0070                     TMR3_WriteTimer@timerVal:	
  6043                           ; 2 bytes @ 0x0
  6044                           
  6045  0070                     ___wmul@multiplier:	
  6046                           ; 2 bytes @ 0x0
  6047                           
  6048  0070                     ___lwdiv@divisor:	
  6049                           ; 2 bytes @ 0x0
  6050                           
  6051                           
  6052                           ; 2 bytes @ 0x0
  6053  0070                     	ds	1
  6054  0071                     isdigit@c:
  6055  0071                     i1WriteI2C@data_out:	
  6056                           ; 1 bytes @ 0x1
  6057                           
  6058                           
  6059                           ; 1 bytes @ 0x1
  6060  0071                     	ds	1
  6061  0072                     ??_TMR1_WriteTimer:
  6062  0072                     ??_TMR3_WriteTimer:	
  6063                           ; 1 bytes @ 0x2
  6064                           
  6065  0072                     ??_tsttc:	
  6066                           ; 1 bytes @ 0x2
  6067                           
  6068  0072                     ?i1_LCDsend2x4:	
  6069                           ; 1 bytes @ 0x2
  6070                           
  6071  0072                     i1LCDsend2x4@mode:	
  6072                           ; 1 bytes @ 0x2
  6073                           
  6074  0072                     ___wmul@multiplicand:	
  6075                           ; 1 bytes @ 0x2
  6076                           
  6077  0072                     ___lwdiv@dividend:	
  6078                           ; 2 bytes @ 0x2
  6079                           
  6080                           
  6081                           ; 2 bytes @ 0x2
  6082  0072                     	ds	1
  6083  0073                     ??_ADCC_GetSingleConversion:
  6084  0073                     ??i1_LCDsend2x4:	
  6085                           ; 1 bytes @ 0x3
  6086                           
  6087  0073                     tsttc@value:	
  6088                           ; 1 bytes @ 0x3
  6089                           
  6090  0073                     ADCC_GetSingleConversion@channel:	
  6091                           ; 1 bytes @ 0x3
  6092                           
  6093                           
  6094                           ; 1 bytes @ 0x3
  6095  0073                     	ds	1
  6096  0074                     ??___wmul:
  6097  0074                     ??___lwdiv:	
  6098                           ; 1 bytes @ 0x4
  6099                           
  6100  0074                     ___wmul@product:	
  6101                           ; 1 bytes @ 0x4
  6102                           
  6103                           
  6104                           ; 2 bytes @ 0x4
  6105  0074                     	ds	1
  6106  0075                     i1LCDsend2x4@c:
  6107  0075                     ___lwdiv@quotient:	
  6108                           ; 1 bytes @ 0x5
  6109                           
  6110                           
  6111                           ; 2 bytes @ 0x5
  6112  0075                     	ds	1
  6113  0076                     ?___awdiv:
  6114  0076                     i1LCDsend2x4@hc:	
  6115                           ; 2 bytes @ 0x6
  6116                           
  6117  0076                     ___awdiv@divisor:	
  6118                           ; 1 bytes @ 0x6
  6119                           
  6120                           
  6121                           ; 2 bytes @ 0x6
  6122  0076                     	ds	1
  6123  0077                     ___lwdiv@counter:
  6124  0077                     i1LCDsend2x4@lc:	
  6125                           ; 1 bytes @ 0x7
  6126                           
  6127                           
  6128                           ; 1 bytes @ 0x7
  6129  0077                     	ds	1
  6130  0078                     ??_LCDcmd:
  6131  0078                     ??_LCDchar:	
  6132                           ; 1 bytes @ 0x8
  6133                           
  6134  0078                     ?___lwmod:	
  6135                           ; 1 bytes @ 0x8
  6136                           
  6137  0078                     LCDcmd@c:	
  6138                           ; 2 bytes @ 0x8
  6139                           
  6140  0078                     LCDchar@c:	
  6141                           ; 1 bytes @ 0x8
  6142                           
  6143  0078                     ___awdiv@dividend:	
  6144                           ; 1 bytes @ 0x8
  6145                           
  6146  0078                     ___lwmod@divisor:	
  6147                           ; 2 bytes @ 0x8
  6148                           
  6149                           
  6150                           ; 2 bytes @ 0x8
  6151  0078                     	ds	1
  6152  0079                     ?_LCDstr:
  6153  0079                     LCDstr@p:	
  6154                           ; 1 bytes @ 0x9
  6155                           
  6156                           
  6157                           ; 2 bytes @ 0x9
  6158  0079                     	ds	1
  6159  007A                     ??___awdiv:
  6160  007A                     ___lwmod@dividend:	
  6161                           ; 1 bytes @ 0xA
  6162                           
  6163                           
  6164                           ; 2 bytes @ 0xA
  6165  007A                     	ds	1
  6166  007B                     ??_LCDstr:
  6167  007B                     ??_map:	
  6168                           ; 1 bytes @ 0xB
  6169                           
  6170  007B                     ??_Clock_ISR:	
  6171                           ; 1 bytes @ 0xB
  6172                           
  6173                           
  6174                           ; 1 bytes @ 0xB
  6175  007B                     	ds	1
  6176  007C                     ??___lwmod:
  6177                           
  6178                           ; 1 bytes @ 0xC
  6179  007C                     	ds	1
  6180  007D                     ___lwmod@counter:
  6181                           
  6182                           ; 1 bytes @ 0xD
  6183  007D                     	ds	1
  6184  007E                     ??_TMR3_ISR:
  6185  007E                     ??_TMR1_ISR:	
  6186                           ; 1 bytes @ 0xE
  6187                           
  6188  007E                     ??_INTERRUPT_InterruptManager:	
  6189                           ; 1 bytes @ 0xE
  6190                           
  6191                           
  6192                           	psect	cstackBANK0
  6193  0020                     __pcstackBANK0:	
  6194                           ; 1 bytes @ 0xE
  6195                           
  6196  0020                     ?_sprintf:
  6197  0020                     LCDstr@c:	
  6198                           ; 2 bytes @ 0x0
  6199                           
  6200  0020                     ___awdiv@counter:	
  6201                           ; 1 bytes @ 0x0
  6202                           
  6203  0020                     sprintf@f:	
  6204                           ; 1 bytes @ 0x0
  6205                           
  6206                           
  6207                           ; 2 bytes @ 0x0
  6208  0020                     	ds	1
  6209  0021                     ___awdiv@sign:
  6210                           
  6211                           ; 1 bytes @ 0x1
  6212  0021                     	ds	1
  6213  0022                     ___awdiv@quotient:
  6214                           
  6215                           ; 2 bytes @ 0x2
  6216  0022                     	ds	2
  6217  0024                     ?_map:
  6218  0024                     map@x:	
  6219                           ; 2 bytes @ 0x4
  6220                           
  6221                           
  6222                           ; 2 bytes @ 0x4
  6223  0024                     	ds	2
  6224  0026                     map@in_min:
  6225                           
  6226                           ; 2 bytes @ 0x6
  6227  0026                     	ds	2
  6228  0028                     ??_sprintf:
  6229  0028                     map@in_max:	
  6230                           ; 1 bytes @ 0x8
  6231                           
  6232                           
  6233                           ; 2 bytes @ 0x8
  6234  0028                     	ds	2
  6235  002A                     map@out_min:
  6236                           
  6237                           ; 2 bytes @ 0xA
  6238  002A                     	ds	2
  6239  002C                     sprintf@ap:
  6240  002C                     map@out_max:	
  6241                           ; 1 bytes @ 0xC
  6242                           
  6243                           
  6244                           ; 2 bytes @ 0xC
  6245  002C                     	ds	1
  6246  002D                     sprintf@prec:
  6247                           
  6248                           ; 1 bytes @ 0xD
  6249  002D                     	ds	1
  6250  002E                     Clock_ISR@lum:
  6251  002E                     sprintf@val:	
  6252                           ; 1 bytes @ 0xE
  6253                           
  6254                           
  6255                           ; 2 bytes @ 0xE
  6256  002E                     	ds	2
  6257  0030                     sprintf@flag:
  6258                           
  6259                           ; 1 bytes @ 0x10
  6260  0030                     	ds	1
  6261  0031                     sprintf@width:
  6262                           
  6263                           ; 2 bytes @ 0x11
  6264  0031                     	ds	2
  6265  0033                     sprintf@sp:
  6266                           
  6267                           ; 1 bytes @ 0x13
  6268  0033                     	ds	1
  6269  0034                     sprintf@c:
  6270                           
  6271                           ; 1 bytes @ 0x14
  6272  0034                     	ds	1
  6273  0035                     ??_menuLCD_ISR:
  6274                           
  6275                           ; 1 bytes @ 0x15
  6276  0035                     	ds	2
  6277  0037                     menuLCD_ISR@str:
  6278                           
  6279                           ; 8 bytes @ 0x17
  6280  0037                     	ds	8
  6281  003F                     menuLCD_ISR@tt:
  6282                           
  6283                           ; 4 bytes @ 0x1F
  6284  003F                     	ds	4
  6285  0043                     menuLCD_ISR@l:
  6286                           
  6287                           ; 3 bytes @ 0x23
  6288  0043                     	ds	3
  6289                           
  6290                           	psect	maintext
  6291  0520                     __pmaintext:	
  6292 ;;
  6293 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  6294 ;;
  6295 ;; *************** function _main *****************
  6296 ;; Defined at:
  6297 ;;		line 268 in file "main.c"
  6298 ;; Parameters:    Size  Location     Type
  6299 ;;		None
  6300 ;; Auto vars:     Size  Location     Type
  6301 ;;  buf            17    0        unsigned char [17]
  6302 ;;  aux             4   30[BANK1 ] float 
  6303 ;;  a               2   34[BANK1 ] int 
  6304 ;;  c2              1    0        unsigned char 
  6305 ;;  c1              1    0        unsigned char 
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		wreg, status,2, status,0, pclath, cstack
  6310 ;; Tracked objects:
  6311 ;;		On entry : B1F/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6318 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6319 ;;Total ram usage:       10 bytes
  6320 ;; Hardware stack levels required when called:   10
  6321 ;; This function calls:
  6322 ;;		_LCDinit
  6323 ;;		_SYSTEM_Initialize
  6324 ;;		_TMR1_SetInterruptHandler
  6325 ;;		_TMR3_SetInterruptHandler
  6326 ;;		___fleq
  6327 ;;		___xxtofl
  6328 ;;		_i2c1_driver_open
  6329 ;; This function is called by:
  6330 ;;		Startup code after reset
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           
  6335                           ;psect for function _main
  6336  0520                     _main:
  6337  0520                     l4083:	
  6338                           ;incstack = 0
  6339                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  6340                           
  6341                           
  6342                           ;main.c: 272: unsigned char c1;;main.c: 273: unsigned char c2;;main.c: 274: unsigned cha
      +                          r buf[17];;main.c: 277: SYSTEM_Initialize();
  6343  0520  318D  25A7  3185   	fcall	_SYSTEM_Initialize
  6344                           
  6345                           ;main.c: 279: TMR1_SetInterruptHandler(Clock_ISR);
  6346  0523  30F8               	movlw	low _Clock_ISR
  6347  0524  0021               	movlb	1	; select bank1
  6348  0525  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  6349  0526  3006               	movlw	high _Clock_ISR
  6350  0527  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6351  0528  318D  2543  3185   	fcall	_TMR1_SetInterruptHandler
  6352                           
  6353                           ;main.c: 281: TMR3_SetInterruptHandler(menuLCD_ISR);
  6354  052B  3099               	movlw	low _menuLCD_ISR
  6355  052C  0021               	movlb	1	; select bank1
  6356  052D  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  6357  052E  3006               	movlw	high _menuLCD_ISR
  6358  052F  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6359  0530  318D  254C  3185   	fcall	_TMR3_SetInterruptHandler
  6360                           
  6361                           ;main.c: 283: i2c1_driver_open();
  6362  0533  318D  2555  3185   	fcall	_i2c1_driver_open
  6363  0536                     l4085:
  6364                           
  6365                           ;main.c: 284: TRISCbits.TRISC3 = 1;
  6366  0536  0020               	movlb	0	; select bank0
  6367  0537  1593               	bsf	19,3	;volatile
  6368  0538                     l4087:
  6369                           
  6370                           ;main.c: 285: TRISCbits.TRISC4 = 1;
  6371  0538  1613               	bsf	19,4	;volatile
  6372  0539                     l4089:
  6373                           
  6374                           ;main.c: 286: WPUC3 = 1;
  6375  0539  003E               	movlb	30	; select bank30
  6376  053A  15CF               	bsf	79,3	;volatile
  6377  053B                     l4091:
  6378                           
  6379                           ;main.c: 287: WPUC4 = 1;
  6380  053B  164F               	bsf	79,4	;volatile
  6381                           
  6382                           ;main.c: 288: LCDinit();
  6383  053C  3185  25C3  3185   	fcall	_LCDinit
  6384  053F                     l4093:
  6385                           
  6386                           ;main.c: 291: (INTCONbits.GIE = 1);
  6387  053F  178B               	bsf	11,7	;volatile
  6388  0540                     l4095:
  6389                           
  6390                           ;main.c: 294: (INTCONbits.PEIE = 1);
  6391  0540  170B               	bsf	11,6	;volatile
  6392  0541                     l4097:
  6393  0541  0020               	movlb	0	; select bank0
  6394  0542  1616               	bsf	22,4	;volatile
  6395  0543                     l770:
  6396                           
  6397                           ;main.c: 297: float aux = PORTBbits.RB4;
  6398  0543  0E0D               	swapf	13,w	;volatile
  6399  0544  3901               	andlw	1
  6400  0545  0021               	movlb	1	; select bank1
  6401  0546  00BA               	movwf	??_main^(0+128)
  6402  0547  01BB               	clrf	(??_main^(0+128)+1)
  6403  0548  01BC               	clrf	(??_main^(0+128)+2)
  6404  0549  01BD               	clrf	(??_main^(0+128)+3)
  6405  054A  083D               	movf	(??_main+3)^(0+128),w
  6406  054B  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  6407  054C  083C               	movf	(??_main+2)^(0+128),w
  6408  054D  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  6409  054E  083B               	movf	(??_main+1)^(0+128),w
  6410  054F  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  6411  0550  083A               	movf	??_main^(0+128),w
  6412  0551  00A0               	movwf	___xxtofl@val^(0+128)
  6413  0552  3000               	movlw	0
  6414  0553  3184  2473  3185   	fcall	___xxtofl
  6415  0556  0021               	movlb	1	; select bank1
  6416  0557  0823               	movf	(?___xxtofl+3)^(0+128),w
  6417  0558  00C1               	movwf	(main@aux+3)^(0+128)
  6418  0559  0822               	movf	(?___xxtofl+2)^(0+128),w
  6419  055A  00C0               	movwf	(main@aux+2)^(0+128)
  6420  055B  0821               	movf	(?___xxtofl+1)^(0+128),w
  6421  055C  00BF               	movwf	(main@aux+1)^(0+128)
  6422  055D  0820               	movf	?___xxtofl^(0+128),w
  6423  055E  00BE               	movwf	main@aux^(0+128)
  6424  055F                     l4099:
  6425                           
  6426                           ;main.c: 298: int a = 1;
  6427  055F  3001               	movlw	1
  6428  0560  00C2               	movwf	main@a^(0+128)
  6429  0561  3000               	movlw	0
  6430  0562  00C3               	movwf	(main@a^(0+128)+1)
  6431  0563                     l4101:
  6432                           
  6433                           ;main.c: 301: {;main.c: 302: if(PORTBbits.RB4 != aux){
  6434  0563  0020               	movlb	0	; select bank0
  6435  0564  0E0D               	swapf	13,w	;volatile
  6436  0565  3901               	andlw	1
  6437  0566  0021               	movlb	1	; select bank1
  6438  0567  00BA               	movwf	??_main^(0+128)
  6439  0568  01BB               	clrf	(??_main^(0+128)+1)
  6440  0569  01BC               	clrf	(??_main^(0+128)+2)
  6441  056A  01BD               	clrf	(??_main^(0+128)+3)
  6442  056B  083D               	movf	(??_main+3)^(0+128),w
  6443  056C  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  6444  056D  083C               	movf	(??_main+2)^(0+128),w
  6445  056E  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  6446  056F  083B               	movf	(??_main+1)^(0+128),w
  6447  0570  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  6448  0571  083A               	movf	??_main^(0+128),w
  6449  0572  00A0               	movwf	___xxtofl@val^(0+128)
  6450  0573  3000               	movlw	0
  6451  0574  3184  2473  3185   	fcall	___xxtofl
  6452  0577  0021               	movlb	1	; select bank1
  6453  0578  0823               	movf	(?___xxtofl+3)^(0+128),w
  6454  0579  00B1               	movwf	(___fleq@ff1+3)^(0+128)
  6455  057A  0822               	movf	(?___xxtofl+2)^(0+128),w
  6456  057B  00B0               	movwf	(___fleq@ff1+2)^(0+128)
  6457  057C  0821               	movf	(?___xxtofl+1)^(0+128),w
  6458  057D  00AF               	movwf	(___fleq@ff1+1)^(0+128)
  6459  057E  0820               	movf	?___xxtofl^(0+128),w
  6460  057F  00AE               	movwf	___fleq@ff1^(0+128)
  6461  0580  0841               	movf	(main@aux+3)^(0+128),w
  6462  0581  00B5               	movwf	(___fleq@ff2+3)^(0+128)
  6463  0582  0840               	movf	(main@aux+2)^(0+128),w
  6464  0583  00B4               	movwf	(___fleq@ff2+2)^(0+128)
  6465  0584  083F               	movf	(main@aux+1)^(0+128),w
  6466  0585  00B3               	movwf	(___fleq@ff2+1)^(0+128)
  6467  0586  083E               	movf	main@aux^(0+128),w
  6468  0587  00B2               	movwf	___fleq@ff2^(0+128)
  6469  0588  3187  27B0  3185   	fcall	___fleq
  6470  058B  1803               	btfsc	3,0
  6471  058C  2D8E               	goto	u4471
  6472  058D  2D8F               	goto	u4470
  6473  058E                     u4471:
  6474  058E  2D63               	goto	l4101
  6475  058F                     u4470:
  6476  058F                     l4103:
  6477                           
  6478                           ;main.c: 303: if(a==1){
  6479  058F  0021               	movlb	1	; select bank1
  6480  0590  0342               	decf	main@a^(0+128),w
  6481  0591  0443               	iorwf	(main@a+1)^(0+128),w
  6482  0592  1D03               	btfss	3,2
  6483  0593  2D95               	goto	u4481
  6484  0594  2D96               	goto	u4480
  6485  0595                     u4481:
  6486  0595  2D9C               	goto	l777
  6487  0596                     u4480:
  6488  0596                     l774:	
  6489                           ;main.c: 304: do { LATAbits.LATA4 = 0; } while(0);
  6490                           
  6491  0596  0020               	movlb	0	; select bank0
  6492  0597  1216               	bcf	22,4	;volatile
  6493  0598                     l4105:
  6494                           
  6495                           ;main.c: 305: a=0;
  6496  0598  0021               	movlb	1	; select bank1
  6497  0599  01C2               	clrf	main@a^(0+128)
  6498  059A  01C3               	clrf	(main@a+1)^(0+128)
  6499                           
  6500                           ;main.c: 306: } else{
  6501  059B  2DA3               	goto	l4109
  6502  059C                     l777:	
  6503                           ;main.c: 307: do { LATAbits.LATA4 = 1; } while(0);
  6504                           
  6505  059C  0020               	movlb	0	; select bank0
  6506  059D  1616               	bsf	22,4	;volatile
  6507  059E                     l4107:
  6508                           
  6509                           ;main.c: 308: a=1;
  6510  059E  3001               	movlw	1
  6511  059F  0021               	movlb	1	; select bank1
  6512  05A0  00C2               	movwf	main@a^(0+128)
  6513  05A1  3000               	movlw	0
  6514  05A2  00C3               	movwf	(main@a^(0+128)+1)
  6515  05A3                     l4109:
  6516                           
  6517                           ;main.c: 309: };main.c: 310: aux = PORTBbits.RB4;
  6518  05A3  0020               	movlb	0	; select bank0
  6519  05A4  0E0D               	swapf	13,w	;volatile
  6520  05A5  3901               	andlw	1
  6521  05A6  0021               	movlb	1	; select bank1
  6522  05A7  00BA               	movwf	??_main^(0+128)
  6523  05A8  01BB               	clrf	(??_main^(0+128)+1)
  6524  05A9  01BC               	clrf	(??_main^(0+128)+2)
  6525  05AA  01BD               	clrf	(??_main^(0+128)+3)
  6526  05AB  083D               	movf	(??_main+3)^(0+128),w
  6527  05AC  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  6528  05AD  083C               	movf	(??_main+2)^(0+128),w
  6529  05AE  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  6530  05AF  083B               	movf	(??_main+1)^(0+128),w
  6531  05B0  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  6532  05B1  083A               	movf	??_main^(0+128),w
  6533  05B2  00A0               	movwf	___xxtofl@val^(0+128)
  6534  05B3  3000               	movlw	0
  6535  05B4  3184  2473  3185   	fcall	___xxtofl
  6536  05B7  0021               	movlb	1	; select bank1
  6537  05B8  0823               	movf	(?___xxtofl+3)^(0+128),w
  6538  05B9  00C1               	movwf	(main@aux+3)^(0+128)
  6539  05BA  0822               	movf	(?___xxtofl+2)^(0+128),w
  6540  05BB  00C0               	movwf	(main@aux+2)^(0+128)
  6541  05BC  0821               	movf	(?___xxtofl+1)^(0+128),w
  6542  05BD  00BF               	movwf	(main@aux+1)^(0+128)
  6543  05BE  0820               	movf	?___xxtofl^(0+128),w
  6544  05BF  00BE               	movwf	main@aux^(0+128)
  6545  05C0  2D63               	goto	l4101
  6546  05C1  3180  2834         	ljmp	start
  6547  05C3                     __end_of_main:
  6548                           
  6549                           	psect	text1
  6550  0D55                     __ptext1:	
  6551 ;; *************** function _i2c1_driver_open *****************
  6552 ;; Defined at:
  6553 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;		None
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;		None               void
  6560 ;; Registers used:
  6561 ;;		wreg, status,2
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6571 ;;Total ram usage:        0 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    7
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_main
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           
  6582                           ;psect for function _i2c1_driver_open
  6583  0D55                     _i2c1_driver_open:
  6584  0D55                     l3923:	
  6585                           ;incstack = 0
  6586                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  6587                           
  6588                           
  6589                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  6590  0D55  0023               	movlb	3	; select bank3
  6591  0D56  1A90               	btfsc	16,5	;volatile
  6592  0D57  2D59               	goto	u4051
  6593  0D58  2D5A               	goto	u4050
  6594  0D59                     u4051:
  6595  0D59  2D60               	goto	l231
  6596  0D5A                     u4050:
  6597  0D5A                     l3925:
  6598                           
  6599                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  6600  0D5A  018F               	clrf	15	;volatile
  6601  0D5B                     l3927:
  6602                           
  6603                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  6604  0D5B  3028               	movlw	40
  6605  0D5C  0090               	movwf	16	;volatile
  6606  0D5D                     l3929:
  6607                           
  6608                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  6609  0D5D  0191               	clrf	17	;volatile
  6610                           
  6611                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  6612  0D5E  3003               	movlw	3
  6613  0D5F  008D               	movwf	13	;volatile
  6614  0D60                     l231:
  6615  0D60  0008               	return
  6616  0D61                     __end_of_i2c1_driver_open:
  6617                           
  6618                           	psect	text2
  6619  0473                     __ptext2:	
  6620 ;; *************** function ___xxtofl *****************
  6621 ;; Defined at:
  6622 ;;		line 10 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\xxtofl.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  sign            1    wreg     unsigned char 
  6625 ;;  val             4    0[BANK1 ] long 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  sign            1    8[BANK1 ] unsigned char 
  6628 ;;  arg             4   10[BANK1 ] unsigned long 
  6629 ;;  exp             1    9[BANK1 ] unsigned char 
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  4    0[BANK1 ] unsigned char 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, status,0
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6639 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6642 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;Total ram usage:       14 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    7
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_main
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           
  6654                           ;psect for function ___xxtofl
  6655  0473                     ___xxtofl:
  6656                           
  6657                           ;incstack = 0
  6658                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6659                           ;___xxtofl@sign stored from wreg
  6660  0473  0021               	movlb	1	; select bank1
  6661  0474  00A8               	movwf	___xxtofl@sign^(0+128)
  6662  0475                     l4035:
  6663  0475  0828               	movf	___xxtofl@sign^(0+128),w
  6664  0476  1903               	btfsc	3,2
  6665  0477  2C79               	goto	u4331
  6666  0478  2C7A               	goto	u4330
  6667  0479                     u4331:
  6668  0479  2C8E               	goto	l4041
  6669  047A                     u4330:
  6670  047A                     l4037:
  6671  047A  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  6672  047B  2C7D               	goto	u4341
  6673  047C  2C7E               	goto	u4340
  6674  047D                     u4341:
  6675  047D  2C8E               	goto	l4041
  6676  047E                     u4340:
  6677  047E                     l4039:
  6678  047E  0920               	comf	___xxtofl@val^(0+128),w
  6679  047F  00AA               	movwf	___xxtofl@arg^(0+128)
  6680  0480  0921               	comf	(___xxtofl@val^(0+128)+1),w
  6681  0481  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  6682  0482  0922               	comf	(___xxtofl@val^(0+128)+2),w
  6683  0483  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  6684  0484  0923               	comf	(___xxtofl@val^(0+128)+3),w
  6685  0485  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  6686  0486  0AAA               	incf	___xxtofl@arg^(0+128),f
  6687  0487  1903               	skipnz
  6688  0488  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
  6689  0489  1903               	skipnz
  6690  048A  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
  6691  048B  1903               	skipnz
  6692  048C  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
  6693  048D  2C96               	goto	l1577
  6694  048E                     l4041:
  6695  048E  0823               	movf	(___xxtofl@val+3)^(0+128),w
  6696  048F  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  6697  0490  0822               	movf	(___xxtofl@val+2)^(0+128),w
  6698  0491  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  6699  0492  0821               	movf	(___xxtofl@val+1)^(0+128),w
  6700  0493  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  6701  0494  0820               	movf	___xxtofl@val^(0+128),w
  6702  0495  00AA               	movwf	___xxtofl@arg^(0+128)
  6703  0496                     l1577:
  6704  0496  0823               	movf	(___xxtofl@val+3)^(0+128),w
  6705  0497  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
  6706  0498  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
  6707  0499  0420               	iorwf	___xxtofl@val^(0+128),w
  6708  049A  1D03               	skipz
  6709  049B  2C9D               	goto	u4351
  6710  049C  2C9E               	goto	u4350
  6711  049D                     u4351:
  6712  049D  2CA7               	goto	l4047
  6713  049E                     u4350:
  6714  049E                     l4043:
  6715  049E  3000               	movlw	0
  6716  049F  00A3               	movwf	(?___xxtofl+3)^(0+128)
  6717  04A0  3000               	movlw	0
  6718  04A1  00A2               	movwf	(?___xxtofl+2)^(0+128)
  6719  04A2  3000               	movlw	0
  6720  04A3  00A1               	movwf	(?___xxtofl+1)^(0+128)
  6721  04A4  3000               	movlw	0
  6722  04A5  00A0               	movwf	?___xxtofl^(0+128)
  6723  04A6  2D1F               	goto	l1579
  6724  04A7                     l4047:
  6725  04A7  3096               	movlw	150
  6726  04A8  00A4               	movwf	??___xxtofl^(0+128)
  6727  04A9  0824               	movf	??___xxtofl^(0+128),w
  6728  04AA  00A9               	movwf	___xxtofl@exp^(0+128)
  6729  04AB  2CB7               	goto	l4051
  6730  04AC                     l4049:
  6731  04AC  3001               	movlw	1
  6732  04AD  00A4               	movwf	??___xxtofl^(0+128)
  6733  04AE  0824               	movf	??___xxtofl^(0+128),w
  6734  04AF  07A9               	addwf	___xxtofl@exp^(0+128),f
  6735  04B0  3001               	movlw	1
  6736  04B1                     u4365:
  6737  04B1  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  6738  04B2  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  6739  04B3  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  6740  04B4  0CAA               	rrf	___xxtofl@arg^(0+128),f
  6741  04B5  0B89               	decfsz	9,f
  6742  04B6  2CB1               	goto	u4365
  6743  04B7                     l4051:
  6744  04B7  30FE               	movlw	254
  6745  04B8  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  6746  04B9  1D03               	btfss	3,2
  6747  04BA  2CBC               	goto	u4371
  6748  04BB  2CBD               	goto	u4370
  6749  04BC                     u4371:
  6750  04BC  2CAC               	goto	l4049
  6751  04BD                     u4370:
  6752  04BD  2CD1               	goto	l1583
  6753  04BE                     l4053:
  6754  04BE  3001               	movlw	1
  6755  04BF  00A4               	movwf	??___xxtofl^(0+128)
  6756  04C0  0824               	movf	??___xxtofl^(0+128),w
  6757  04C1  07A9               	addwf	___xxtofl@exp^(0+128),f
  6758  04C2                     l4055:
  6759  04C2  3001               	movlw	1
  6760  04C3  07AA               	addwf	___xxtofl@arg^(0+128),f
  6761  04C4  3000               	movlw	0
  6762  04C5  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
  6763  04C6  3000               	movlw	0
  6764  04C7  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
  6765  04C8  3000               	movlw	0
  6766  04C9  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
  6767  04CA                     l4057:
  6768  04CA  3001               	movlw	1
  6769  04CB                     u4385:
  6770  04CB  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  6771  04CC  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  6772  04CD  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  6773  04CE  0CAA               	rrf	___xxtofl@arg^(0+128),f
  6774  04CF  0B89               	decfsz	9,f
  6775  04D0  2CCB               	goto	u4385
  6776  04D1                     l1583:
  6777  04D1  30FF               	movlw	255
  6778  04D2  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  6779  04D3  1D03               	btfss	3,2
  6780  04D4  2CD6               	goto	u4391
  6781  04D5  2CD7               	goto	u4390
  6782  04D6                     u4391:
  6783  04D6  2CBE               	goto	l4053
  6784  04D7                     u4390:
  6785  04D7  2CE1               	goto	l4061
  6786  04D8                     l4059:
  6787  04D8  3001               	movlw	1
  6788  04D9  02A9               	subwf	___xxtofl@exp^(0+128),f
  6789  04DA  3001               	movlw	1
  6790  04DB                     u4405:
  6791  04DB  35AA               	lslf	___xxtofl@arg^(0+128),f
  6792  04DC  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
  6793  04DD  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
  6794  04DE  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
  6795  04DF  0B89               	decfsz	9,f
  6796  04E0  2CDB               	goto	u4405
  6797  04E1                     l4061:
  6798  04E1  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
  6799  04E2  2CE4               	goto	u4411
  6800  04E3  2CE5               	goto	u4410
  6801  04E4                     u4411:
  6802  04E4  2CEB               	goto	l1590
  6803  04E5                     u4410:
  6804  04E5                     l4063:
  6805  04E5  3002               	movlw	2
  6806  04E6  0229               	subwf	___xxtofl@exp^(0+128),w
  6807  04E7  1803               	skipnc
  6808  04E8  2CEA               	goto	u4421
  6809  04E9  2CEB               	goto	u4420
  6810  04EA                     u4421:
  6811  04EA  2CD8               	goto	l4059
  6812  04EB                     u4420:
  6813  04EB                     l1590:
  6814  04EB  1829               	btfsc	___xxtofl@exp^(0+128),0
  6815  04EC  2CEE               	goto	u4431
  6816  04ED  2CEF               	goto	u4430
  6817  04EE                     u4431:
  6818  04EE  2CF7               	goto	l1591
  6819  04EF                     u4430:
  6820  04EF                     l4065:
  6821  04EF  30FF               	movlw	255
  6822  04F0  05AA               	andwf	___xxtofl@arg^(0+128),f
  6823  04F1  30FF               	movlw	255
  6824  04F2  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
  6825  04F3  307F               	movlw	127
  6826  04F4  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
  6827  04F5  30FF               	movlw	255
  6828  04F6  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
  6829  04F7                     l1591:
  6830  04F7  1003               	clrc
  6831  04F8  0CA9               	rrf	___xxtofl@exp^(0+128),f
  6832  04F9                     l4067:
  6833  04F9  0829               	movf	___xxtofl@exp^(0+128),w
  6834  04FA  00A4               	movwf	??___xxtofl^(0+128)
  6835  04FB  01A5               	clrf	(??___xxtofl^(0+128)+1)
  6836  04FC  01A6               	clrf	(??___xxtofl^(0+128)+2)
  6837  04FD  01A7               	clrf	(??___xxtofl^(0+128)+3)
  6838  04FE  3018               	movlw	24
  6839  04FF                     u4445:
  6840  04FF  35A4               	lslf	??___xxtofl^(0+128),f
  6841  0500  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
  6842  0501  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
  6843  0502  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
  6844  0503                     u4440:
  6845  0503  0B89               	decfsz	9,f
  6846  0504  2CFF               	goto	u4445
  6847  0505  0824               	movf	??___xxtofl^(0+128),w
  6848  0506  04AA               	iorwf	___xxtofl@arg^(0+128),f
  6849  0507  0825               	movf	(??___xxtofl+1)^(0+128),w
  6850  0508  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
  6851  0509  0826               	movf	(??___xxtofl+2)^(0+128),w
  6852  050A  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
  6853  050B  0827               	movf	(??___xxtofl+3)^(0+128),w
  6854  050C  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
  6855  050D                     l4069:
  6856  050D  0828               	movf	___xxtofl@sign^(0+128),w
  6857  050E  1903               	btfsc	3,2
  6858  050F  2D11               	goto	u4451
  6859  0510  2D12               	goto	u4450
  6860  0511                     u4451:
  6861  0511  2D17               	goto	l4075
  6862  0512                     u4450:
  6863  0512                     l4071:
  6864  0512  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  6865  0513  2D15               	goto	u4461
  6866  0514  2D16               	goto	u4460
  6867  0515                     u4461:
  6868  0515  2D17               	goto	l4075
  6869  0516                     u4460:
  6870  0516                     l4073:
  6871  0516  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
  6872  0517                     l4075:
  6873  0517  082D               	movf	(___xxtofl@arg+3)^(0+128),w
  6874  0518  00A3               	movwf	(?___xxtofl+3)^(0+128)
  6875  0519  082C               	movf	(___xxtofl@arg+2)^(0+128),w
  6876  051A  00A2               	movwf	(?___xxtofl+2)^(0+128)
  6877  051B  082B               	movf	(___xxtofl@arg+1)^(0+128),w
  6878  051C  00A1               	movwf	(?___xxtofl+1)^(0+128)
  6879  051D  082A               	movf	___xxtofl@arg^(0+128),w
  6880  051E  00A0               	movwf	?___xxtofl^(0+128)
  6881  051F                     l1579:
  6882  051F  0008               	return
  6883  0520                     __end_of___xxtofl:
  6884                           
  6885                           	psect	text3
  6886  07B0                     __ptext3:	
  6887 ;; *************** function ___fleq *****************
  6888 ;; Defined at:
  6889 ;;		line 4 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\fleq.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;  ff1             4   14[BANK1 ] unsigned char 
  6892 ;;  ff2             4   18[BANK1 ] unsigned char 
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;		None
  6895 ;; Return value:  Size  Location     Type
  6896 ;;		None               void
  6897 ;; Registers used:
  6898 ;;		wreg, status,2, status,0
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6904 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6906 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6907 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  6908 ;;Total ram usage:       12 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    7
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		_main
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           
  6919                           ;psect for function ___fleq
  6920  07B0                     ___fleq:
  6921  07B0                     l3603:	
  6922                           ;incstack = 0
  6923                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6924                           
  6925  07B0  3000               	movlw	0
  6926  07B1  0021               	movlb	1	; select bank1
  6927  07B2  052E               	andwf	___fleq@ff1^(0+128),w
  6928  07B3  00B6               	movwf	??___fleq^(0+128)
  6929  07B4  3000               	movlw	0
  6930  07B5  052F               	andwf	(___fleq@ff1+1)^(0+128),w
  6931  07B6  00B7               	movwf	(??___fleq^(0+128)+1)
  6932  07B7  3080               	movlw	128
  6933  07B8  0530               	andwf	(___fleq@ff1+2)^(0+128),w
  6934  07B9  00B8               	movwf	(??___fleq^(0+128)+2)
  6935  07BA  307F               	movlw	127
  6936  07BB  0531               	andwf	(___fleq@ff1+3)^(0+128),w
  6937  07BC  00B9               	movwf	(??___fleq^(0+128)+3)
  6938  07BD  0839               	movf	(??___fleq+3)^(0+128),w
  6939  07BE  0438               	iorwf	(??___fleq+2)^(0+128),w
  6940  07BF  0437               	iorwf	(??___fleq+1)^(0+128),w
  6941  07C0  0436               	iorwf	??___fleq^(0+128),w
  6942  07C1  1D03               	skipz
  6943  07C2  2FC4               	goto	u3511
  6944  07C3  2FC5               	goto	u3510
  6945  07C4                     u3511:
  6946  07C4  2FCD               	goto	l1313
  6947  07C5                     u3510:
  6948  07C5                     l3605:
  6949  07C5  3000               	movlw	0
  6950  07C6  00B1               	movwf	(___fleq@ff1+3)^(0+128)
  6951  07C7  3000               	movlw	0
  6952  07C8  00B0               	movwf	(___fleq@ff1+2)^(0+128)
  6953  07C9  3000               	movlw	0
  6954  07CA  00AF               	movwf	(___fleq@ff1+1)^(0+128)
  6955  07CB  3000               	movlw	0
  6956  07CC  00AE               	movwf	___fleq@ff1^(0+128)
  6957  07CD                     l1313:
  6958  07CD  3000               	movlw	0
  6959  07CE  0532               	andwf	___fleq@ff2^(0+128),w
  6960  07CF  00B6               	movwf	??___fleq^(0+128)
  6961  07D0  3000               	movlw	0
  6962  07D1  0533               	andwf	(___fleq@ff2+1)^(0+128),w
  6963  07D2  00B7               	movwf	(??___fleq^(0+128)+1)
  6964  07D3  3080               	movlw	128
  6965  07D4  0534               	andwf	(___fleq@ff2+2)^(0+128),w
  6966  07D5  00B8               	movwf	(??___fleq^(0+128)+2)
  6967  07D6  307F               	movlw	127
  6968  07D7  0535               	andwf	(___fleq@ff2+3)^(0+128),w
  6969  07D8  00B9               	movwf	(??___fleq^(0+128)+3)
  6970  07D9  0839               	movf	(??___fleq+3)^(0+128),w
  6971  07DA  0438               	iorwf	(??___fleq+2)^(0+128),w
  6972  07DB  0437               	iorwf	(??___fleq+1)^(0+128),w
  6973  07DC  0436               	iorwf	??___fleq^(0+128),w
  6974  07DD  1D03               	skipz
  6975  07DE  2FE0               	goto	u3521
  6976  07DF  2FE1               	goto	u3520
  6977  07E0                     u3521:
  6978  07E0  2FE9               	goto	l1314
  6979  07E1                     u3520:
  6980  07E1                     l3607:
  6981  07E1  3000               	movlw	0
  6982  07E2  00B5               	movwf	(___fleq@ff2+3)^(0+128)
  6983  07E3  3000               	movlw	0
  6984  07E4  00B4               	movwf	(___fleq@ff2+2)^(0+128)
  6985  07E5  3000               	movlw	0
  6986  07E6  00B3               	movwf	(___fleq@ff2+1)^(0+128)
  6987  07E7  3000               	movlw	0
  6988  07E8  00B2               	movwf	___fleq@ff2^(0+128)
  6989  07E9                     l1314:
  6990  07E9  0835               	movf	(___fleq@ff2+3)^(0+128),w
  6991  07EA  0631               	xorwf	(___fleq@ff1+3)^(0+128),w
  6992  07EB  1D03               	skipz
  6993  07EC  2FF7               	goto	u3535
  6994  07ED  0834               	movf	(___fleq@ff2+2)^(0+128),w
  6995  07EE  0630               	xorwf	(___fleq@ff1+2)^(0+128),w
  6996  07EF  1D03               	skipz
  6997  07F0  2FF7               	goto	u3535
  6998  07F1  0833               	movf	(___fleq@ff2+1)^(0+128),w
  6999  07F2  062F               	xorwf	(___fleq@ff1+1)^(0+128),w
  7000  07F3  1D03               	skipz
  7001  07F4  2FF7               	goto	u3535
  7002  07F5  0832               	movf	___fleq@ff2^(0+128),w
  7003  07F6  062E               	xorwf	___fleq@ff1^(0+128),w
  7004  07F7                     u3535:
  7005  07F7  1903               	skipnz
  7006  07F8  2FFA               	goto	u3531
  7007  07F9  2FFB               	goto	u3530
  7008  07FA                     u3531:
  7009  07FA  2FFD               	goto	l3611
  7010  07FB                     u3530:
  7011  07FB                     l3609:
  7012  07FB  1003               	clrc
  7013  07FC  2FFE               	goto	l1315
  7014  07FD                     l3611:
  7015  07FD  1403               	setc
  7016  07FE                     l1315:
  7017  07FE  0008               	return
  7018  07FF                     __end_of___fleq:
  7019                           
  7020                           	psect	text4
  7021  0DA7                     __ptext4:	
  7022 ;; *************** function _SYSTEM_Initialize *****************
  7023 ;; Defined at:
  7024 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;		None
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;		None
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  1    wreg      void 
  7031 ;; Registers used:
  7032 ;;		wreg, status,2, status,0, pclath, cstack
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;Total ram usage:        0 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; Hardware stack levels required when called:    9
  7045 ;; This function calls:
  7046 ;;		_ADCC_Initialize
  7047 ;;		_OSCILLATOR_Initialize
  7048 ;;		_PIN_MANAGER_Initialize
  7049 ;;		_PMD_Initialize
  7050 ;;		_TMR1_Initialize
  7051 ;;		_TMR3_Initialize
  7052 ;; This function is called by:
  7053 ;;		_main
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           
  7058                           ;psect for function _SYSTEM_Initialize
  7059  0DA7                     _SYSTEM_Initialize:
  7060  0DA7                     l3911:	
  7061                           ;incstack = 0
  7062                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7063                           
  7064                           
  7065                           ;mcc.c: 52: PMD_Initialize();
  7066  0DA7  318D  2532  318D   	fcall	_PMD_Initialize
  7067  0DAA                     l3913:
  7068                           
  7069                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  7070  0DAA  318F  2726  318D   	fcall	_PIN_MANAGER_Initialize
  7071  0DAD                     l3915:
  7072                           
  7073                           ;mcc.c: 54: OSCILLATOR_Initialize();
  7074  0DAD  318D  253A  318D   	fcall	_OSCILLATOR_Initialize
  7075  0DB0                     l3917:
  7076                           
  7077                           ;mcc.c: 55: ADCC_Initialize();
  7078  0DB0  318D  25E8  318D   	fcall	_ADCC_Initialize
  7079  0DB3                     l3919:
  7080                           
  7081                           ;mcc.c: 56: TMR3_Initialize();
  7082  0DB3  318E  2672  318D   	fcall	_TMR3_Initialize
  7083  0DB6                     l3921:
  7084                           
  7085                           ;mcc.c: 57: TMR1_Initialize();
  7086  0DB6  318E  2653  318D   	fcall	_TMR1_Initialize
  7087  0DB9                     l164:
  7088  0DB9  0008               	return
  7089  0DBA                     __end_of_SYSTEM_Initialize:
  7090                           
  7091                           	psect	text5
  7092  0E72                     __ptext5:	
  7093 ;; *************** function _TMR3_Initialize *****************
  7094 ;; Defined at:
  7095 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;		None
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;		None
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  1    wreg      void 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0, pclath, cstack
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;Total ram usage:        0 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    8
  7116 ;; This function calls:
  7117 ;;		_TMR3_SetInterruptHandler
  7118 ;; This function is called by:
  7119 ;;		_SYSTEM_Initialize
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           
  7124                           ;psect for function _TMR3_Initialize
  7125  0E72                     _TMR3_Initialize:
  7126  0E72                     l3823:	
  7127                           ;incstack = 0
  7128                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7129                           
  7130                           
  7131                           ;tmr3.c: 69: T3GCON = 0x00;
  7132  0E72  0024               	movlb	4	; select bank4
  7133  0E73  0195               	clrf	21	;volatile
  7134                           
  7135                           ;tmr3.c: 72: T3GATE = 0x00;
  7136  0E74  0196               	clrf	22	;volatile
  7137  0E75                     l3825:
  7138                           
  7139                           ;tmr3.c: 75: T3CLK = 0x04;
  7140  0E75  3004               	movlw	4
  7141  0E76  0097               	movwf	23	;volatile
  7142  0E77                     l3827:
  7143                           
  7144                           ;tmr3.c: 78: TMR3H = 0xE7;
  7145  0E77  30E7               	movlw	231
  7146  0E78  0093               	movwf	19	;volatile
  7147  0E79                     l3829:
  7148                           
  7149                           ;tmr3.c: 81: TMR3L = 0xC8;
  7150  0E79  30C8               	movlw	200
  7151  0E7A  0092               	movwf	18	;volatile
  7152  0E7B                     l3831:
  7153                           
  7154                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  7155  0E7B  0813               	movf	19,w	;volatile
  7156  0E7C  0020               	movlb	0	; select bank0
  7157  0E7D  00D6               	movwf	_timer3ReloadVal+1	;volatile
  7158  0E7E  0024               	movlb	4	; select bank4
  7159  0E7F  0812               	movf	18,w	;volatile
  7160  0E80  0020               	movlb	0	; select bank0
  7161  0E81  00D5               	movwf	_timer3ReloadVal	;volatile
  7162  0E82                     l3833:
  7163                           
  7164                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
  7165  0E82  002E               	movlb	14	; select bank14
  7166  0E83  1110               	bcf	16,2	;volatile
  7167  0E84                     l3835:
  7168                           
  7169                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
  7170  0E84  151A               	bsf	26,2	;volatile
  7171  0E85                     l3837:
  7172                           
  7173                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  7174  0E85  30FF               	movlw	low _TMR3_DefaultInterruptHandler
  7175  0E86  0021               	movlb	1	; select bank1
  7176  0E87  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  7177  0E88  3007               	movlw	high _TMR3_DefaultInterruptHandler
  7178  0E89  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7179  0E8A  318D  254C  318E   	fcall	_TMR3_SetInterruptHandler
  7180  0E8D                     l3839:
  7181                           
  7182                           ;tmr3.c: 96: T3CON = 0x01;
  7183  0E8D  3001               	movlw	1
  7184  0E8E  0024               	movlb	4	; select bank4
  7185  0E8F  0094               	movwf	20	;volatile
  7186  0E90                     l439:
  7187  0E90  0008               	return
  7188  0E91                     __end_of_TMR3_Initialize:
  7189                           
  7190                           	psect	text6
  7191  0D4C                     __ptext6:	
  7192 ;; *************** function _TMR3_SetInterruptHandler *****************
  7193 ;; Defined at:
  7194 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7197 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;		None
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  1    wreg      void 
  7202 ;; Registers used:
  7203 ;;		wreg
  7204 ;; Tracked objects:
  7205 ;;		On entry : 0/0
  7206 ;;		On exit  : 0/0
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7209 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7213 ;;Total ram usage:        2 bytes
  7214 ;; Hardware stack levels used:    1
  7215 ;; Hardware stack levels required when called:    7
  7216 ;; This function calls:
  7217 ;;		Nothing
  7218 ;; This function is called by:
  7219 ;;		_TMR3_Initialize
  7220 ;;		_main
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224                           
  7225                           ;psect for function _TMR3_SetInterruptHandler
  7226  0D4C                     _TMR3_SetInterruptHandler:
  7227  0D4C                     l3751:	
  7228                           ;incstack = 0
  7229                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
  7230                           
  7231                           
  7232                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
  7233  0D4C  0021               	movlb	1	; select bank1
  7234  0D4D  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7235  0D4E  0020               	movlb	0	; select bank0
  7236  0D4F  00D4               	movwf	_TMR3_InterruptHandler+1
  7237  0D50  0021               	movlb	1	; select bank1
  7238  0D51  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
  7239  0D52  0020               	movlb	0	; select bank0
  7240  0D53  00D3               	movwf	_TMR3_InterruptHandler
  7241  0D54                     l469:
  7242  0D54  0008               	return
  7243  0D55                     __end_of_TMR3_SetInterruptHandler:
  7244                           
  7245                           	psect	text7
  7246  0E53                     __ptext7:	
  7247 ;; *************** function _TMR1_Initialize *****************
  7248 ;; Defined at:
  7249 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;		None
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;		None
  7254 ;; Return value:  Size  Location     Type
  7255 ;;                  1    wreg      void 
  7256 ;; Registers used:
  7257 ;;		wreg, status,2, status,0, pclath, cstack
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;Total ram usage:        0 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; Hardware stack levels required when called:    8
  7270 ;; This function calls:
  7271 ;;		_TMR1_SetInterruptHandler
  7272 ;; This function is called by:
  7273 ;;		_SYSTEM_Initialize
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277                           
  7278                           ;psect for function _TMR1_Initialize
  7279  0E53                     _TMR1_Initialize:
  7280  0E53                     l3841:	
  7281                           ;incstack = 0
  7282                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7283                           
  7284                           
  7285                           ;tmr1.c: 69: T1GCON = 0x00;
  7286  0E53  0024               	movlb	4	; select bank4
  7287  0E54  018F               	clrf	15	;volatile
  7288                           
  7289                           ;tmr1.c: 72: T1GATE = 0x00;
  7290  0E55  0190               	clrf	16	;volatile
  7291  0E56                     l3843:
  7292                           
  7293                           ;tmr1.c: 75: T1CLK = 0x04;
  7294  0E56  3004               	movlw	4
  7295  0E57  0091               	movwf	17	;volatile
  7296  0E58                     l3845:
  7297                           
  7298                           ;tmr1.c: 78: TMR1H = 0x86;
  7299  0E58  3086               	movlw	134
  7300  0E59  008D               	movwf	13	;volatile
  7301  0E5A                     l3847:
  7302                           
  7303                           ;tmr1.c: 81: TMR1L = 0xE8;
  7304  0E5A  30E8               	movlw	232
  7305  0E5B  008C               	movwf	12	;volatile
  7306  0E5C                     l3849:
  7307                           
  7308                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7309  0E5C  080D               	movf	13,w	;volatile
  7310  0E5D  0020               	movlb	0	; select bank0
  7311  0E5E  00DA               	movwf	_timer1ReloadVal+1	;volatile
  7312  0E5F  0024               	movlb	4	; select bank4
  7313  0E60  080C               	movf	12,w	;volatile
  7314  0E61  0020               	movlb	0	; select bank0
  7315  0E62  00D9               	movwf	_timer1ReloadVal	;volatile
  7316  0E63                     l3851:
  7317                           
  7318                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
  7319  0E63  002E               	movlb	14	; select bank14
  7320  0E64  1010               	bcf	16,0	;volatile
  7321  0E65                     l3853:
  7322                           
  7323                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
  7324  0E65  141A               	bsf	26,0	;volatile
  7325  0E66                     l3855:
  7326                           
  7327                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  7328  0E66  3003               	movlw	low _TMR1_DefaultInterruptHandler
  7329  0E67  0021               	movlb	1	; select bank1
  7330  0E68  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  7331  0E69  3000               	movlw	high _TMR1_DefaultInterruptHandler
  7332  0E6A  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7333  0E6B  318D  2543  318E   	fcall	_TMR1_SetInterruptHandler
  7334  0E6E                     l3857:
  7335                           
  7336                           ;tmr1.c: 96: T1CON = 0x01;
  7337  0E6E  3001               	movlw	1
  7338  0E6F  0024               	movlb	4	; select bank4
  7339  0E70  008E               	movwf	14	;volatile
  7340  0E71                     l375:
  7341  0E71  0008               	return
  7342  0E72                     __end_of_TMR1_Initialize:
  7343                           
  7344                           	psect	text8
  7345  0D43                     __ptext8:	
  7346 ;; *************** function _TMR1_SetInterruptHandler *****************
  7347 ;; Defined at:
  7348 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7351 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  1    wreg      void 
  7356 ;; Registers used:
  7357 ;;		wreg
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7363 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7366 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;Total ram usage:        2 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    7
  7370 ;; This function calls:
  7371 ;;		Nothing
  7372 ;; This function is called by:
  7373 ;;		_TMR1_Initialize
  7374 ;;		_main
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           
  7379                           ;psect for function _TMR1_SetInterruptHandler
  7380  0D43                     _TMR1_SetInterruptHandler:
  7381  0D43                     l3749:	
  7382                           ;incstack = 0
  7383                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  7384                           
  7385                           
  7386                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
  7387  0D43  0021               	movlb	1	; select bank1
  7388  0D44  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7389  0D45  0020               	movlb	0	; select bank0
  7390  0D46  00D8               	movwf	_TMR1_InterruptHandler+1
  7391  0D47  0021               	movlb	1	; select bank1
  7392  0D48  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  7393  0D49  0020               	movlb	0	; select bank0
  7394  0D4A  00D7               	movwf	_TMR1_InterruptHandler
  7395  0D4B                     l405:
  7396  0D4B  0008               	return
  7397  0D4C                     __end_of_TMR1_SetInterruptHandler:
  7398                           
  7399                           	psect	text9
  7400  0D32                     __ptext9:	
  7401 ;; *************** function _PMD_Initialize *****************
  7402 ;; Defined at:
  7403 ;;		line 74 in file "mcc_generated_files/mcc.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;		None
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      void 
  7410 ;; Registers used:
  7411 ;;		status,2
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;Total ram usage:        0 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    7
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_SYSTEM_Initialize
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           
  7432                           ;psect for function _PMD_Initialize
  7433  0D32                     _PMD_Initialize:
  7434  0D32                     l3807:	
  7435                           ;incstack = 0
  7436                           ; Regs used in _PMD_Initialize: [status,2]
  7437                           
  7438                           
  7439                           ;mcc.c: 77: PMD0 = 0x00;
  7440  0D32  002F               	movlb	15	; select bank15
  7441  0D33  0196               	clrf	22	;volatile
  7442                           
  7443                           ;mcc.c: 79: PMD1 = 0x00;
  7444  0D34  0197               	clrf	23	;volatile
  7445                           
  7446                           ;mcc.c: 81: PMD2 = 0x00;
  7447  0D35  0198               	clrf	24	;volatile
  7448                           
  7449                           ;mcc.c: 83: PMD3 = 0x00;
  7450  0D36  0199               	clrf	25	;volatile
  7451                           
  7452                           ;mcc.c: 85: PMD4 = 0x00;
  7453  0D37  019A               	clrf	26	;volatile
  7454                           
  7455                           ;mcc.c: 87: PMD5 = 0x00;
  7456  0D38  019B               	clrf	27	;volatile
  7457  0D39                     l170:
  7458  0D39  0008               	return
  7459  0D3A                     __end_of_PMD_Initialize:
  7460                           
  7461                           	psect	text10
  7462  0F26                     __ptext10:	
  7463 ;; *************** function _PIN_MANAGER_Initialize *****************
  7464 ;; Defined at:
  7465 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;		None
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;		None
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  1    wreg      void 
  7472 ;; Registers used:
  7473 ;;		wreg, status,2
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;Total ram usage:        0 bytes
  7484 ;; Hardware stack levels used:    1
  7485 ;; Hardware stack levels required when called:    7
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_SYSTEM_Initialize
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           
  7494                           ;psect for function _PIN_MANAGER_Initialize
  7495  0F26                     _PIN_MANAGER_Initialize:
  7496  0F26                     l3753:	
  7497                           ;incstack = 0
  7498                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7499                           
  7500                           
  7501                           ;pin_manager.c: 62: LATE = 0x00;
  7502  0F26  0020               	movlb	0	; select bank0
  7503  0F27  019A               	clrf	26	;volatile
  7504                           
  7505                           ;pin_manager.c: 63: LATD = 0x00;
  7506  0F28  0199               	clrf	25	;volatile
  7507                           
  7508                           ;pin_manager.c: 64: LATA = 0x00;
  7509  0F29  0196               	clrf	22	;volatile
  7510                           
  7511                           ;pin_manager.c: 65: LATB = 0x00;
  7512  0F2A  0197               	clrf	23	;volatile
  7513                           
  7514                           ;pin_manager.c: 66: LATC = 0x00;
  7515  0F2B  0198               	clrf	24	;volatile
  7516  0F2C                     l3755:
  7517                           
  7518                           ;pin_manager.c: 71: TRISE = 0x07;
  7519  0F2C  3007               	movlw	7
  7520  0F2D  0095               	movwf	21	;volatile
  7521  0F2E                     l3757:
  7522                           
  7523                           ;pin_manager.c: 72: TRISA = 0xEF;
  7524  0F2E  30EF               	movlw	239
  7525  0F2F  0091               	movwf	17	;volatile
  7526  0F30                     l3759:
  7527                           
  7528                           ;pin_manager.c: 73: TRISB = 0xFF;
  7529  0F30  30FF               	movlw	255
  7530  0F31  0092               	movwf	18	;volatile
  7531  0F32                     l3761:
  7532                           
  7533                           ;pin_manager.c: 74: TRISC = 0xFF;
  7534  0F32  30FF               	movlw	255
  7535  0F33  0093               	movwf	19	;volatile
  7536  0F34                     l3763:
  7537                           
  7538                           ;pin_manager.c: 75: TRISD = 0xFF;
  7539  0F34  30FF               	movlw	255
  7540  0F35  0094               	movwf	20	;volatile
  7541  0F36                     l3765:
  7542                           
  7543                           ;pin_manager.c: 80: ANSELD = 0xFF;
  7544  0F36  30FF               	movlw	255
  7545  0F37  003E               	movlb	30	; select bank30
  7546  0F38  00D9               	movwf	89	;volatile
  7547  0F39                     l3767:
  7548                           
  7549                           ;pin_manager.c: 81: ANSELC = 0xE7;
  7550  0F39  30E7               	movlw	231
  7551  0F3A  00CE               	movwf	78	;volatile
  7552  0F3B                     l3769:
  7553                           
  7554                           ;pin_manager.c: 82: ANSELB = 0xEF;
  7555  0F3B  30EF               	movlw	239
  7556  0F3C  00C3               	movwf	67	;volatile
  7557  0F3D                     l3771:
  7558                           
  7559                           ;pin_manager.c: 83: ANSELE = 0x07;
  7560  0F3D  3007               	movlw	7
  7561  0F3E  00E4               	movwf	100	;volatile
  7562  0F3F                     l3773:
  7563                           
  7564                           ;pin_manager.c: 84: ANSELA = 0xEF;
  7565  0F3F  30EF               	movlw	239
  7566  0F40  00B8               	movwf	56	;volatile
  7567                           
  7568                           ;pin_manager.c: 89: WPUD = 0x00;
  7569  0F41  01DA               	clrf	90	;volatile
  7570                           
  7571                           ;pin_manager.c: 90: WPUE = 0x00;
  7572  0F42  01E5               	clrf	101	;volatile
  7573                           
  7574                           ;pin_manager.c: 91: WPUB = 0x00;
  7575  0F43  01C4               	clrf	68	;volatile
  7576  0F44                     l3775:
  7577                           
  7578                           ;pin_manager.c: 92: WPUA = 0x01;
  7579  0F44  3001               	movlw	1
  7580  0F45  00B9               	movwf	57	;volatile
  7581  0F46                     l3777:
  7582                           
  7583                           ;pin_manager.c: 93: WPUC = 0x00;
  7584  0F46  01CF               	clrf	79	;volatile
  7585  0F47                     l3779:
  7586                           
  7587                           ;pin_manager.c: 98: ODCONE = 0x00;
  7588  0F47  01E6               	clrf	102	;volatile
  7589  0F48                     l3781:
  7590                           
  7591                           ;pin_manager.c: 99: ODCONA = 0x00;
  7592  0F48  01BA               	clrf	58	;volatile
  7593  0F49                     l3783:
  7594                           
  7595                           ;pin_manager.c: 100: ODCONB = 0x00;
  7596  0F49  01C5               	clrf	69	;volatile
  7597  0F4A                     l3785:
  7598                           
  7599                           ;pin_manager.c: 101: ODCONC = 0x00;
  7600  0F4A  01D0               	clrf	80	;volatile
  7601  0F4B                     l3787:
  7602                           
  7603                           ;pin_manager.c: 102: ODCOND = 0x00;
  7604  0F4B  01DB               	clrf	91	;volatile
  7605  0F4C                     l3789:
  7606                           
  7607                           ;pin_manager.c: 107: SLRCONA = 0xFF;
  7608  0F4C  30FF               	movlw	255
  7609  0F4D  00BB               	movwf	59	;volatile
  7610  0F4E                     l3791:
  7611                           
  7612                           ;pin_manager.c: 108: SLRCONB = 0xFF;
  7613  0F4E  30FF               	movlw	255
  7614  0F4F  00C6               	movwf	70	;volatile
  7615  0F50                     l3793:
  7616                           
  7617                           ;pin_manager.c: 109: SLRCONC = 0xFF;
  7618  0F50  30FF               	movlw	255
  7619  0F51  00D1               	movwf	81	;volatile
  7620  0F52                     l3795:
  7621                           
  7622                           ;pin_manager.c: 110: SLRCOND = 0xFF;
  7623  0F52  30FF               	movlw	255
  7624  0F53  00DC               	movwf	92	;volatile
  7625  0F54                     l3797:
  7626                           
  7627                           ;pin_manager.c: 111: SLRCONE = 0x07;
  7628  0F54  3007               	movlw	7
  7629  0F55  00E7               	movwf	103	;volatile
  7630  0F56                     l3799:
  7631                           
  7632                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
  7633  0F56  3013               	movlw	19
  7634  0F57  003D               	movlb	29	; select bank29
  7635  0F58  00C5               	movwf	69	;volatile
  7636  0F59                     l3801:
  7637                           
  7638                           ;pin_manager.c: 121: RC3PPS = 0x14;
  7639  0F59  3014               	movlw	20
  7640  0F5A  003E               	movlb	30	; select bank30
  7641  0F5B  00A3               	movwf	35	;volatile
  7642  0F5C                     l3803:
  7643                           
  7644                           ;pin_manager.c: 122: RC4PPS = 0x15;
  7645  0F5C  3015               	movlw	21
  7646  0F5D  00A4               	movwf	36	;volatile
  7647  0F5E                     l3805:
  7648                           
  7649                           ;pin_manager.c: 123: SSP1DATPPS = 0x14;
  7650  0F5E  3014               	movlw	20
  7651  0F5F  003D               	movlb	29	; select bank29
  7652  0F60  00C6               	movwf	70	;volatile
  7653  0F61                     l120:
  7654  0F61  0008               	return
  7655  0F62                     __end_of_PIN_MANAGER_Initialize:
  7656                           
  7657                           	psect	text11
  7658  0D3A                     __ptext11:	
  7659 ;; *************** function _OSCILLATOR_Initialize *****************
  7660 ;; Defined at:
  7661 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;Total ram usage:        0 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:    7
  7682 ;; This function calls:
  7683 ;;		Nothing
  7684 ;; This function is called by:
  7685 ;;		_SYSTEM_Initialize
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           
  7690                           ;psect for function _OSCILLATOR_Initialize
  7691  0D3A                     _OSCILLATOR_Initialize:
  7692  0D3A                     l3809:	
  7693                           ;incstack = 0
  7694                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7695                           
  7696                           
  7697                           ;mcc.c: 63: OSCCON1 = 0x62;
  7698  0D3A  3062               	movlw	98
  7699  0D3B  0031               	movlb	17	; select bank17
  7700  0D3C  008D               	movwf	13	;volatile
  7701  0D3D                     l3811:
  7702                           
  7703                           ;mcc.c: 65: OSCCON3 = 0x00;
  7704  0D3D  018F               	clrf	15	;volatile
  7705  0D3E                     l3813:
  7706                           
  7707                           ;mcc.c: 67: OSCEN = 0x00;
  7708  0D3E  0191               	clrf	17	;volatile
  7709                           
  7710                           ;mcc.c: 69: OSCFRQ = 0x02;
  7711  0D3F  3002               	movlw	2
  7712  0D40  0093               	movwf	19	;volatile
  7713  0D41                     l3815:
  7714                           
  7715                           ;mcc.c: 71: OSCTUNE = 0x00;
  7716  0D41  0192               	clrf	18	;volatile
  7717  0D42                     l167:
  7718  0D42  0008               	return
  7719  0D43                     __end_of_OSCILLATOR_Initialize:
  7720                           
  7721                           	psect	text12
  7722  0DE8                     __ptext12:	
  7723 ;; *************** function _ADCC_Initialize *****************
  7724 ;; Defined at:
  7725 ;;		line 63 in file "mcc_generated_files/adcc.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;		None
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;		None
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  1    wreg      void 
  7732 ;; Registers used:
  7733 ;;		wreg, status,2
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/0
  7736 ;;		On exit  : 0/0
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;Total ram usage:        0 bytes
  7744 ;; Hardware stack levels used:    1
  7745 ;; Hardware stack levels required when called:    7
  7746 ;; This function calls:
  7747 ;;		Nothing
  7748 ;; This function is called by:
  7749 ;;		_SYSTEM_Initialize
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753                           
  7754                           ;psect for function _ADCC_Initialize
  7755  0DE8                     _ADCC_Initialize:
  7756  0DE8                     l3817:	
  7757                           ;incstack = 0
  7758                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  7759                           
  7760                           
  7761                           ;adcc.c: 67: ADLTHL = 0x00;
  7762  0DE8  0022               	movlb	2	; select bank2
  7763  0DE9  018E               	clrf	14	;volatile
  7764                           
  7765                           ;adcc.c: 69: ADLTHH = 0x00;
  7766  0DEA  018F               	clrf	15	;volatile
  7767                           
  7768                           ;adcc.c: 71: ADUTHL = 0x00;
  7769  0DEB  0190               	clrf	16	;volatile
  7770                           
  7771                           ;adcc.c: 73: ADUTHH = 0x00;
  7772  0DEC  0191               	clrf	17	;volatile
  7773                           
  7774                           ;adcc.c: 75: ADSTPTL = 0x00;
  7775  0DED  0192               	clrf	18	;volatile
  7776                           
  7777                           ;adcc.c: 77: ADSTPTH = 0x00;
  7778  0DEE  0193               	clrf	19	;volatile
  7779                           
  7780                           ;adcc.c: 79: ADRPT = 0x00;
  7781  0DEF  018D               	clrf	13	;volatile
  7782                           
  7783                           ;adcc.c: 81: ADPCH = 0x00;
  7784  0DF0  0021               	movlb	1	; select bank1
  7785  0DF1  019E               	clrf	30	;volatile
  7786                           
  7787                           ;adcc.c: 83: ADCAP = 0x00;
  7788  0DF2  019B               	clrf	27	;volatile
  7789                           
  7790                           ;adcc.c: 85: ADCON1 = 0x00;
  7791  0DF3  0194               	clrf	20	;volatile
  7792                           
  7793                           ;adcc.c: 87: ADCON2 = 0x00;
  7794  0DF4  0195               	clrf	21	;volatile
  7795                           
  7796                           ;adcc.c: 89: ADCON3 = 0x00;
  7797  0DF5  0196               	clrf	22	;volatile
  7798                           
  7799                           ;adcc.c: 91: ADSTAT = 0x00;
  7800  0DF6  0197               	clrf	23	;volatile
  7801                           
  7802                           ;adcc.c: 93: ADREF = 0x00;
  7803  0DF7  019A               	clrf	26	;volatile
  7804                           
  7805                           ;adcc.c: 95: ADACT = 0x00;
  7806  0DF8  0199               	clrf	25	;volatile
  7807                           
  7808                           ;adcc.c: 97: ADCLK = 0x00;
  7809  0DF9  0198               	clrf	24	;volatile
  7810  0DFA                     l3819:
  7811                           
  7812                           ;adcc.c: 99: ADCON0 = 0x80;
  7813  0DFA  3080               	movlw	128
  7814  0DFB  0093               	movwf	19	;volatile
  7815  0DFC                     l3821:
  7816                           
  7817                           ;adcc.c: 101: ADACQ = 0xFF;
  7818  0DFC  30FF               	movlw	255
  7819  0DFD  009D               	movwf	29	;volatile
  7820  0DFE                     l860:
  7821  0DFE  0008               	return
  7822  0DFF                     __end_of_ADCC_Initialize:
  7823                           
  7824                           	psect	text13
  7825  05C3                     __ptext13:	
  7826 ;; *************** function _LCDinit *****************
  7827 ;; Defined at:
  7828 ;;		line 150 in file "main.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;		None
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;		None
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  1    wreg      void 
  7835 ;; Registers used:
  7836 ;;		wreg, status,2, status,0, pclath, cstack
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7844 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7845 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7846 ;;Total ram usage:        1 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; Hardware stack levels required when called:    9
  7849 ;; This function calls:
  7850 ;;		_LCDsend
  7851 ;;		_LCDsend2x4
  7852 ;; This function is called by:
  7853 ;;		_main
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           
  7858                           ;psect for function _LCDinit
  7859  05C3                     _LCDinit:
  7860  05C3                     l4001:	
  7861                           ;incstack = 0
  7862                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
  7863                           
  7864                           
  7865                           ;main.c: 152: _delay((unsigned long)((50)*(1000000/4000.0)));
  7866  05C3  3011               	movlw	17
  7867  05C4  0021               	movlb	1	; select bank1
  7868  05C5  00A8               	movwf	??_LCDinit^(0+128)
  7869  05C6  303A               	movlw	58
  7870  05C7                     u4497:
  7871  05C7  0B89               	decfsz	9,f
  7872  05C8  2DC7               	goto	u4497
  7873  05C9  0BA8               	decfsz	??_LCDinit^(0+128),f
  7874  05CA  2DC7               	goto	u4497
  7875  05CB  0000               	nop
  7876  05CC                     l4003:
  7877                           
  7878                           ;main.c: 153: LCDsend(0x30);
  7879  05CC  3030               	movlw	48
  7880  05CD  318F  27AD  3185   	fcall	_LCDsend
  7881  05D0                     l4005:
  7882                           
  7883                           ;main.c: 154: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7884  05D0  3034               	movlw	52
  7885  05D1  318F  27AD  3185   	fcall	_LCDsend
  7886  05D4  3029               	movlw	41
  7887  05D5                     u4507:
  7888  05D5  0B89               	decfsz	9,f
  7889  05D6  2DD5               	goto	u4507
  7890  05D7  3200               	nop2
  7891  05D8                     l4007:
  7892  05D8  3030               	movlw	48
  7893  05D9  318F  27AD  3185   	fcall	_LCDsend
  7894  05DC                     l4009:
  7895                           
  7896                           ;main.c: 155: _delay((unsigned long)((5)*(1000000/4000.0)));
  7897  05DC  30FA               	movlw	250
  7898  05DD                     u4517:
  7899  05DD  3200               	nop2
  7900  05DE  0B89               	decfsz	9,f
  7901  05DF  2DDD               	goto	u4517
  7902                           
  7903                           ;main.c: 156: LCDsend(0x30);
  7904  05E0  3030               	movlw	48
  7905  05E1  318F  27AD  3185   	fcall	_LCDsend
  7906                           
  7907                           ;main.c: 157: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7908  05E4  3034               	movlw	52
  7909  05E5  318F  27AD  3185   	fcall	_LCDsend
  7910  05E8                     l4011:
  7911  05E8  3029               	movlw	41
  7912  05E9                     u4527:
  7913  05E9  0B89               	decfsz	9,f
  7914  05EA  2DE9               	goto	u4527
  7915  05EB  3200               	nop2
  7916  05EC                     l4013:
  7917  05EC  3030               	movlw	48
  7918  05ED  318F  27AD  3185   	fcall	_LCDsend
  7919                           
  7920                           ;main.c: 158: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7921  05F0  3008               	movlw	8
  7922  05F1                     u4537:
  7923  05F1  0B89               	decfsz	9,f
  7924  05F2  2DF1               	goto	u4537
  7925  05F3  0000               	nop
  7926  05F4                     l4015:
  7927                           
  7928                           ;main.c: 159: LCDsend(0x30);
  7929  05F4  3030               	movlw	48
  7930  05F5  318F  27AD  3185   	fcall	_LCDsend
  7931  05F8                     l4017:
  7932                           
  7933                           ;main.c: 160: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7934  05F8  3034               	movlw	52
  7935  05F9  318F  27AD  3185   	fcall	_LCDsend
  7936  05FC  3029               	movlw	41
  7937  05FD                     u4547:
  7938  05FD  0B89               	decfsz	9,f
  7939  05FE  2DFD               	goto	u4547
  7940  05FF  3200               	nop2
  7941  0600                     l4019:
  7942  0600  3030               	movlw	48
  7943  0601  318F  27AD  3185   	fcall	_LCDsend
  7944  0604                     l4021:
  7945                           
  7946                           ;main.c: 161: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7947  0604  3008               	movlw	8
  7948  0605                     u4557:
  7949  0605  0B89               	decfsz	9,f
  7950  0606  2E05               	goto	u4557
  7951  0607  0000               	nop
  7952                           
  7953                           ;main.c: 162: LCDsend(0x20);
  7954  0608  3020               	movlw	32
  7955  0609  318F  27AD  3185   	fcall	_LCDsend
  7956                           
  7957                           ;main.c: 163: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
  7958  060C  3024               	movlw	36
  7959  060D  318F  27AD  3185   	fcall	_LCDsend
  7960  0610                     l4023:
  7961  0610  3029               	movlw	41
  7962  0611                     u4567:
  7963  0611  0B89               	decfsz	9,f
  7964  0612  2E11               	goto	u4567
  7965  0613  3200               	nop2
  7966  0614                     l4025:
  7967  0614  3020               	movlw	32
  7968  0615  318F  27AD  3185   	fcall	_LCDsend
  7969                           
  7970                           ;main.c: 164: _delay((unsigned long)((5)*(1000000/4000.0)));
  7971  0618  30FA               	movlw	250
  7972  0619                     u4577:
  7973  0619  3200               	nop2
  7974  061A  0B89               	decfsz	9,f
  7975  061B  2E19               	goto	u4577
  7976  061C                     l4027:
  7977                           
  7978                           ;main.c: 166: LCDsend2x4(0x28, 0);
  7979  061C  0021               	movlb	1	; select bank1
  7980  061D  01A2               	clrf	LCDsend2x4@mode^(0+128)
  7981  061E  3028               	movlw	40
  7982  061F  3182  22EC  3185   	fcall	_LCDsend2x4
  7983  0622                     l4029:
  7984                           
  7985                           ;main.c: 167: LCDsend2x4(0x06, 0);
  7986  0622  0021               	movlb	1	; select bank1
  7987  0623  01A2               	clrf	LCDsend2x4@mode^(0+128)
  7988  0624  3006               	movlw	6
  7989  0625  3182  22EC  3185   	fcall	_LCDsend2x4
  7990  0628                     l4031:
  7991                           
  7992                           ;main.c: 168: LCDsend2x4(0x0f, 0);
  7993  0628  0021               	movlb	1	; select bank1
  7994  0629  01A2               	clrf	LCDsend2x4@mode^(0+128)
  7995  062A  300F               	movlw	15
  7996  062B  3182  22EC  3185   	fcall	_LCDsend2x4
  7997  062E                     l4033:
  7998                           
  7999                           ;main.c: 169: LCDsend2x4(0x01, 0);
  8000  062E  0021               	movlb	1	; select bank1
  8001  062F  01A2               	clrf	LCDsend2x4@mode^(0+128)
  8002  0630  3001               	movlw	1
  8003  0631  3182  22EC  3185   	fcall	_LCDsend2x4
  8004                           
  8005                           ;main.c: 170: _delay((unsigned long)((2)*(1000000/4000.0)));
  8006  0634  30A6               	movlw	166
  8007  0635                     u4587:
  8008  0635  0B89               	decfsz	9,f
  8009  0636  2E35               	goto	u4587
  8010  0637  3200               	nop2
  8011  0638                     l730:
  8012  0638  0008               	return
  8013  0639                     __end_of_LCDinit:
  8014                           
  8015                           	psect	text14
  8016  02EC                     __ptext14:	
  8017 ;; *************** function _LCDsend2x4 *****************
  8018 ;; Defined at:
  8019 ;;		line 127 in file "main.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  c               1    wreg     unsigned char 
  8022 ;;  mode            1    2[BANK1 ] unsigned char 
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;  c               1    5[BANK1 ] unsigned char 
  8025 ;;  lc              1    7[BANK1 ] unsigned char 
  8026 ;;  hc              1    6[BANK1 ] unsigned char 
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  1    wreg      void 
  8029 ;; Registers used:
  8030 ;;		wreg, status,2, status,0, pclath, cstack
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8036 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;Total ram usage:        6 bytes
  8041 ;; Hardware stack levels used:    1
  8042 ;; Hardware stack levels required when called:    8
  8043 ;; This function calls:
  8044 ;;		_WriteI2C
  8045 ;; This function is called by:
  8046 ;;		_LCDinit
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           
  8051                           ;psect for function _LCDsend2x4
  8052  02EC                     _LCDsend2x4:
  8053                           
  8054                           ;incstack = 0
  8055                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
  8056                           ;LCDsend2x4@c stored from wreg
  8057  02EC  0021               	movlb	1	; select bank1
  8058  02ED  00A5               	movwf	LCDsend2x4@c^(0+128)
  8059  02EE                     l3873:
  8060                           
  8061                           ;main.c: 129: unsigned char hc;;main.c: 130: unsigned char lc;;main.c: 132: hc = c & 0xf
      +                          0;
  8062  02EE  0825               	movf	LCDsend2x4@c^(0+128),w
  8063  02EF  39F0               	andlw	240
  8064  02F0  00A3               	movwf	??_LCDsend2x4^(0+128)
  8065  02F1  0823               	movf	??_LCDsend2x4^(0+128),w
  8066  02F2  00A6               	movwf	LCDsend2x4@hc^(0+128)
  8067  02F3                     l3875:
  8068                           
  8069                           ;main.c: 133: lc = (c << 4) & 0xf0;
  8070  02F3  0825               	movf	LCDsend2x4@c^(0+128),w
  8071  02F4  00A3               	movwf	??_LCDsend2x4^(0+128)
  8072  02F5  3003               	movlw	3
  8073  02F6                     u3935:
  8074  02F6  35A3               	lslf	??_LCDsend2x4^(0+128),f
  8075  02F7  3EFF               	addlw	-1
  8076  02F8  1D03               	skipz
  8077  02F9  2AF6               	goto	u3935
  8078  02FA  3523               	lslf	??_LCDsend2x4^(0+128),w
  8079  02FB  39F0               	andlw	240
  8080  02FC  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
  8081  02FD  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
  8082  02FE  00A7               	movwf	LCDsend2x4@lc^(0+128)
  8083  02FF                     l3877:	
  8084                           ;main.c: 135: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8085                           
  8086  02FF  0023               	movlb	3	; select bank3
  8087  0300  0C0F               	rrf	15,w	;volatile
  8088  0301  0C89               	rrf	9,f
  8089  0302  3901               	andlw	1
  8090  0303  0021               	movlb	1	; select bank1
  8091  0304  00A3               	movwf	??_LCDsend2x4^(0+128)
  8092  0305  0023               	movlb	3	; select bank3
  8093  0306  0811               	movf	17,w	;volatile
  8094  0307  391F               	andlw	31
  8095  0308  0021               	movlb	1	; select bank1
  8096  0309  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8097  030A  1D03               	btfss	3,2
  8098  030B  2B0D               	goto	u3941
  8099  030C  2B0E               	goto	u3940
  8100  030D                     u3941:
  8101  030D  2AFF               	goto	l3877
  8102  030E                     u3940:
  8103  030E                     l696:
  8104                           
  8105                           ;main.c: 136: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  8106  030E  0023               	movlb	3	; select bank3
  8107  030F  1411               	bsf	17,0	;volatile
  8108  0310                     l697:
  8109  0310  1811               	btfsc	17,0	;volatile
  8110  0311  2B13               	goto	u3951
  8111  0312  2B14               	goto	u3950
  8112  0313                     u3951:
  8113  0313  2B10               	goto	l697
  8114  0314                     u3950:
  8115  0314                     l3879:
  8116  0314  0023               	movlb	3	; select bank3
  8117  0315  0C0F               	rrf	15,w	;volatile
  8118  0316  0C89               	rrf	9,f
  8119  0317  3901               	andlw	1
  8120  0318  0021               	movlb	1	; select bank1
  8121  0319  00A3               	movwf	??_LCDsend2x4^(0+128)
  8122  031A  0023               	movlb	3	; select bank3
  8123  031B  0811               	movf	17,w	;volatile
  8124  031C  391F               	andlw	31
  8125  031D  0021               	movlb	1	; select bank1
  8126  031E  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8127  031F  1D03               	btfss	3,2
  8128  0320  2B22               	goto	u3961
  8129  0321  2B23               	goto	u3960
  8130  0322                     u3961:
  8131  0322  2B14               	goto	l3879
  8132  0323                     u3960:
  8133  0323                     l3881:
  8134                           
  8135                           ;main.c: 137: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8136  0323  304E               	movlw	78
  8137  0324  3187  2756  3182   	fcall	_WriteI2C
  8138  0327                     l3883:
  8139  0327  0023               	movlb	3	; select bank3
  8140  0328  0C0F               	rrf	15,w	;volatile
  8141  0329  0C89               	rrf	9,f
  8142  032A  3901               	andlw	1
  8143  032B  0021               	movlb	1	; select bank1
  8144  032C  00A3               	movwf	??_LCDsend2x4^(0+128)
  8145  032D  0023               	movlb	3	; select bank3
  8146  032E  0811               	movf	17,w	;volatile
  8147  032F  391F               	andlw	31
  8148  0330  0021               	movlb	1	; select bank1
  8149  0331  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8150  0332  1D03               	btfss	3,2
  8151  0333  2B35               	goto	u3971
  8152  0334  2B36               	goto	u3970
  8153  0335                     u3971:
  8154  0335  2B27               	goto	l3883
  8155  0336                     u3970:
  8156  0336                     l3885:
  8157                           
  8158                           ;main.c: 138: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8159  0336  0826               	movf	LCDsend2x4@hc^(0+128),w
  8160  0337  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  8161  0338  3808               	iorlw	8
  8162  0339  3187  2756  3182   	fcall	_WriteI2C
  8163  033C                     l3887:
  8164  033C  0023               	movlb	3	; select bank3
  8165  033D  0C0F               	rrf	15,w	;volatile
  8166  033E  0C89               	rrf	9,f
  8167  033F  3901               	andlw	1
  8168  0340  0021               	movlb	1	; select bank1
  8169  0341  00A3               	movwf	??_LCDsend2x4^(0+128)
  8170  0342  0023               	movlb	3	; select bank3
  8171  0343  0811               	movf	17,w	;volatile
  8172  0344  391F               	andlw	31
  8173  0345  0021               	movlb	1	; select bank1
  8174  0346  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8175  0347  1D03               	btfss	3,2
  8176  0348  2B4A               	goto	u3981
  8177  0349  2B4B               	goto	u3980
  8178  034A                     u3981:
  8179  034A  2B3C               	goto	l3887
  8180  034B                     u3980:
  8181  034B                     l3889:
  8182                           
  8183                           ;main.c: 139: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  8184  034B  0826               	movf	LCDsend2x4@hc^(0+128),w
  8185  034C  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  8186  034D  380C               	iorlw	12
  8187  034E  3187  2756  3182   	fcall	_WriteI2C
  8188  0351                     l3891:
  8189  0351  0023               	movlb	3	; select bank3
  8190  0352  0C0F               	rrf	15,w	;volatile
  8191  0353  0C89               	rrf	9,f
  8192  0354  3901               	andlw	1
  8193  0355  0021               	movlb	1	; select bank1
  8194  0356  00A3               	movwf	??_LCDsend2x4^(0+128)
  8195  0357  0023               	movlb	3	; select bank3
  8196  0358  0811               	movf	17,w	;volatile
  8197  0359  391F               	andlw	31
  8198  035A  0021               	movlb	1	; select bank1
  8199  035B  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8200  035C  1D03               	btfss	3,2
  8201  035D  2B5F               	goto	u3991
  8202  035E  2B60               	goto	u3990
  8203  035F                     u3991:
  8204  035F  2B51               	goto	l3891
  8205  0360                     u3990:
  8206  0360                     l711:
  8207  0360                     l3893:	
  8208                           ;main.c: 140: _delay((unsigned long)((1)*(1000000/4000000.0)));
  8209                           
  8210                           
  8211                           ;main.c: 141: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8212  0360  0021               	movlb	1	; select bank1
  8213  0361  0826               	movf	LCDsend2x4@hc^(0+128),w
  8214  0362  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  8215  0363  3808               	iorlw	8
  8216  0364  3187  2756  3182   	fcall	_WriteI2C
  8217  0367                     l3895:
  8218  0367  0023               	movlb	3	; select bank3
  8219  0368  0C0F               	rrf	15,w	;volatile
  8220  0369  0C89               	rrf	9,f
  8221  036A  3901               	andlw	1
  8222  036B  0021               	movlb	1	; select bank1
  8223  036C  00A3               	movwf	??_LCDsend2x4^(0+128)
  8224  036D  0023               	movlb	3	; select bank3
  8225  036E  0811               	movf	17,w	;volatile
  8226  036F  391F               	andlw	31
  8227  0370  0021               	movlb	1	; select bank1
  8228  0371  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8229  0372  1D03               	btfss	3,2
  8230  0373  2B75               	goto	u4001
  8231  0374  2B76               	goto	u4000
  8232  0375                     u4001:
  8233  0375  2B67               	goto	l3895
  8234  0376                     u4000:
  8235  0376                     l3897:
  8236                           
  8237                           ;main.c: 142: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8238  0376  0827               	movf	LCDsend2x4@lc^(0+128),w
  8239  0377  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  8240  0378  3808               	iorlw	8
  8241  0379  3187  2756  3182   	fcall	_WriteI2C
  8242  037C                     l3899:
  8243  037C  0023               	movlb	3	; select bank3
  8244  037D  0C0F               	rrf	15,w	;volatile
  8245  037E  0C89               	rrf	9,f
  8246  037F  3901               	andlw	1
  8247  0380  0021               	movlb	1	; select bank1
  8248  0381  00A3               	movwf	??_LCDsend2x4^(0+128)
  8249  0382  0023               	movlb	3	; select bank3
  8250  0383  0811               	movf	17,w	;volatile
  8251  0384  391F               	andlw	31
  8252  0385  0021               	movlb	1	; select bank1
  8253  0386  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8254  0387  1D03               	btfss	3,2
  8255  0388  2B8A               	goto	u4011
  8256  0389  2B8B               	goto	u4010
  8257  038A                     u4011:
  8258  038A  2B7C               	goto	l3899
  8259  038B                     u4010:
  8260  038B                     l3901:
  8261                           
  8262                           ;main.c: 143: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  8263  038B  0827               	movf	LCDsend2x4@lc^(0+128),w
  8264  038C  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  8265  038D  380C               	iorlw	12
  8266  038E  3187  2756  3182   	fcall	_WriteI2C
  8267  0391                     l3903:
  8268  0391  0023               	movlb	3	; select bank3
  8269  0392  0C0F               	rrf	15,w	;volatile
  8270  0393  0C89               	rrf	9,f
  8271  0394  3901               	andlw	1
  8272  0395  0021               	movlb	1	; select bank1
  8273  0396  00A3               	movwf	??_LCDsend2x4^(0+128)
  8274  0397  0023               	movlb	3	; select bank3
  8275  0398  0811               	movf	17,w	;volatile
  8276  0399  391F               	andlw	31
  8277  039A  0021               	movlb	1	; select bank1
  8278  039B  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8279  039C  1D03               	btfss	3,2
  8280  039D  2B9F               	goto	u4021
  8281  039E  2BA0               	goto	u4020
  8282  039F                     u4021:
  8283  039F  2B91               	goto	l3903
  8284  03A0                     u4020:
  8285  03A0                     l720:
  8286  03A0                     l3905:	
  8287                           ;main.c: 144: _delay((unsigned long)((1)*(1000000/4000000.0)));
  8288                           
  8289                           
  8290                           ;main.c: 145: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8291  03A0  0021               	movlb	1	; select bank1
  8292  03A1  0827               	movf	LCDsend2x4@lc^(0+128),w
  8293  03A2  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  8294  03A3  3808               	iorlw	8
  8295  03A4  3187  2756  3182   	fcall	_WriteI2C
  8296  03A7                     l3907:
  8297  03A7  0023               	movlb	3	; select bank3
  8298  03A8  0C0F               	rrf	15,w	;volatile
  8299  03A9  0C89               	rrf	9,f
  8300  03AA  3901               	andlw	1
  8301  03AB  0021               	movlb	1	; select bank1
  8302  03AC  00A3               	movwf	??_LCDsend2x4^(0+128)
  8303  03AD  0023               	movlb	3	; select bank3
  8304  03AE  0811               	movf	17,w	;volatile
  8305  03AF  391F               	andlw	31
  8306  03B0  0021               	movlb	1	; select bank1
  8307  03B1  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8308  03B2  1D03               	btfss	3,2
  8309  03B3  2BB5               	goto	u4031
  8310  03B4  2BB6               	goto	u4030
  8311  03B5                     u4031:
  8312  03B5  2BA7               	goto	l3907
  8313  03B6                     u4030:
  8314  03B6                     l723:
  8315                           
  8316                           ;main.c: 146: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  8317  03B6  0023               	movlb	3	; select bank3
  8318  03B7  1511               	bsf	17,2	;volatile
  8319  03B8                     l724:
  8320  03B8  1911               	btfsc	17,2	;volatile
  8321  03B9  2BBB               	goto	u4041
  8322  03BA  2BBC               	goto	u4040
  8323  03BB                     u4041:
  8324  03BB  2BB8               	goto	l724
  8325  03BC                     u4040:
  8326  03BC                     l3909:
  8327                           
  8328                           ;main.c: 147: _delay((unsigned long)((50)*(1000000/4000000.0)));
  8329  03BC  3004               	movlw	4
  8330  03BD                     u4597:
  8331  03BD  0B89               	decfsz	9,f
  8332  03BE  2BBD               	goto	u4597
  8333  03BF                     l727:
  8334  03BF  0008               	return
  8335  03C0                     __end_of_LCDsend2x4:
  8336                           
  8337                           	psect	text15
  8338  0FAD                     __ptext15:	
  8339 ;; *************** function _LCDsend *****************
  8340 ;; Defined at:
  8341 ;;		line 88 in file "main.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;  c               1    wreg     unsigned char 
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;  c               1    3[BANK1 ] unsigned char 
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  1    wreg      void 
  8348 ;; Registers used:
  8349 ;;		wreg, status,2, status,0, pclath, cstack
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8356 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8357 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8358 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;Total ram usage:        2 bytes
  8360 ;; Hardware stack levels used:    1
  8361 ;; Hardware stack levels required when called:    8
  8362 ;; This function calls:
  8363 ;;		_WriteI2C
  8364 ;; This function is called by:
  8365 ;;		_LCDinit
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           
  8370                           ;psect for function _LCDsend
  8371  0FAD                     _LCDsend:
  8372                           
  8373                           ;incstack = 0
  8374                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
  8375                           ;LCDsend@c stored from wreg
  8376  0FAD  0021               	movlb	1	; select bank1
  8377  0FAE  00A3               	movwf	LCDsend@c^(0+128)
  8378  0FAF                     l3859:
  8379  0FAF                     l3861:	
  8380                           ;main.c: 90: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8381                           
  8382  0FAF  0023               	movlb	3	; select bank3
  8383  0FB0  0C0F               	rrf	15,w	;volatile
  8384  0FB1  0C89               	rrf	9,f
  8385  0FB2  3901               	andlw	1
  8386  0FB3  0021               	movlb	1	; select bank1
  8387  0FB4  00A2               	movwf	??_LCDsend^(0+128)
  8388  0FB5  0023               	movlb	3	; select bank3
  8389  0FB6  0811               	movf	17,w	;volatile
  8390  0FB7  391F               	andlw	31
  8391  0FB8  0021               	movlb	1	; select bank1
  8392  0FB9  0422               	iorwf	??_LCDsend^(0+128),w
  8393  0FBA  1D03               	btfss	3,2
  8394  0FBB  2FBD               	goto	u3871
  8395  0FBC  2FBE               	goto	u3870
  8396  0FBD                     u3871:
  8397  0FBD  2FAF               	goto	l3861
  8398  0FBE                     u3870:
  8399  0FBE                     l594:
  8400                           
  8401                           ;main.c: 91: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  8402  0FBE  0023               	movlb	3	; select bank3
  8403  0FBF  1411               	bsf	17,0	;volatile
  8404  0FC0                     l595:
  8405  0FC0  1811               	btfsc	17,0	;volatile
  8406  0FC1  2FC3               	goto	u3881
  8407  0FC2  2FC4               	goto	u3880
  8408  0FC3                     u3881:
  8409  0FC3  2FC0               	goto	l595
  8410  0FC4                     u3880:
  8411  0FC4                     l3863:
  8412  0FC4  0023               	movlb	3	; select bank3
  8413  0FC5  0C0F               	rrf	15,w	;volatile
  8414  0FC6  0C89               	rrf	9,f
  8415  0FC7  3901               	andlw	1
  8416  0FC8  0021               	movlb	1	; select bank1
  8417  0FC9  00A2               	movwf	??_LCDsend^(0+128)
  8418  0FCA  0023               	movlb	3	; select bank3
  8419  0FCB  0811               	movf	17,w	;volatile
  8420  0FCC  391F               	andlw	31
  8421  0FCD  0021               	movlb	1	; select bank1
  8422  0FCE  0422               	iorwf	??_LCDsend^(0+128),w
  8423  0FCF  1D03               	btfss	3,2
  8424  0FD0  2FD2               	goto	u3891
  8425  0FD1  2FD3               	goto	u3890
  8426  0FD2                     u3891:
  8427  0FD2  2FC4               	goto	l3863
  8428  0FD3                     u3890:
  8429  0FD3                     l3865:
  8430                           
  8431                           ;main.c: 92: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8432  0FD3  304E               	movlw	78
  8433  0FD4  3187  2756  318F   	fcall	_WriteI2C
  8434  0FD7                     l3867:
  8435  0FD7  0023               	movlb	3	; select bank3
  8436  0FD8  0C0F               	rrf	15,w	;volatile
  8437  0FD9  0C89               	rrf	9,f
  8438  0FDA  3901               	andlw	1
  8439  0FDB  0021               	movlb	1	; select bank1
  8440  0FDC  00A2               	movwf	??_LCDsend^(0+128)
  8441  0FDD  0023               	movlb	3	; select bank3
  8442  0FDE  0811               	movf	17,w	;volatile
  8443  0FDF  391F               	andlw	31
  8444  0FE0  0021               	movlb	1	; select bank1
  8445  0FE1  0422               	iorwf	??_LCDsend^(0+128),w
  8446  0FE2  1D03               	btfss	3,2
  8447  0FE3  2FE5               	goto	u3901
  8448  0FE4  2FE6               	goto	u3900
  8449  0FE5                     u3901:
  8450  0FE5  2FD7               	goto	l3867
  8451  0FE6                     u3900:
  8452  0FE6                     l3869:
  8453                           
  8454                           ;main.c: 93: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8455  0FE6  0823               	movf	LCDsend@c^(0+128),w
  8456  0FE7  3187  2756  318F   	fcall	_WriteI2C
  8457  0FEA                     l3871:
  8458  0FEA  0023               	movlb	3	; select bank3
  8459  0FEB  0C0F               	rrf	15,w	;volatile
  8460  0FEC  0C89               	rrf	9,f
  8461  0FED  3901               	andlw	1
  8462  0FEE  0021               	movlb	1	; select bank1
  8463  0FEF  00A2               	movwf	??_LCDsend^(0+128)
  8464  0FF0  0023               	movlb	3	; select bank3
  8465  0FF1  0811               	movf	17,w	;volatile
  8466  0FF2  391F               	andlw	31
  8467  0FF3  0021               	movlb	1	; select bank1
  8468  0FF4  0422               	iorwf	??_LCDsend^(0+128),w
  8469  0FF5  1D03               	btfss	3,2
  8470  0FF6  2FF8               	goto	u3911
  8471  0FF7  2FF9               	goto	u3910
  8472  0FF8                     u3911:
  8473  0FF8  2FEA               	goto	l3871
  8474  0FF9                     u3910:
  8475  0FF9                     l606:
  8476                           
  8477                           ;main.c: 94: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  8478  0FF9  0023               	movlb	3	; select bank3
  8479  0FFA  1511               	bsf	17,2	;volatile
  8480  0FFB                     l607:
  8481  0FFB  1911               	btfsc	17,2	;volatile
  8482  0FFC  2FFE               	goto	u3921
  8483  0FFD  2FFF               	goto	u3920
  8484  0FFE                     u3921:
  8485  0FFE  2FFB               	goto	l607
  8486  0FFF                     u3920:
  8487  0FFF                     l610:
  8488  0FFF  0008               	return
  8489  1000                     __end_of_LCDsend:
  8490                           
  8491                           	psect	text16
  8492  0756                     __ptext16:	
  8493 ;; *************** function _WriteI2C *****************
  8494 ;; Defined at:
  8495 ;;		line 47 in file "I2C/i2c.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  data_out        1    wreg     unsigned char 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;  data_out        1    1[BANK1 ] unsigned char 
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      char 
  8502 ;; Registers used:
  8503 ;;		wreg, status,2, status,0
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;Total ram usage:        2 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; Hardware stack levels required when called:    7
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_LCDsend
  8520 ;;		_LCDsend2x4
  8521 ;;		_LCDrecv
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           
  8526                           ;psect for function _WriteI2C
  8527  0756                     _WriteI2C:
  8528                           
  8529                           ;incstack = 0
  8530                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
  8531                           ;WriteI2C@data_out stored from wreg
  8532  0756  0021               	movlb	1	; select bank1
  8533  0757  00A1               	movwf	WriteI2C@data_out^(0+128)
  8534  0758                     l3719:
  8535                           
  8536                           ;i2c.c: 49: SSP1BUF = data_out;
  8537  0758  0821               	movf	WriteI2C@data_out^(0+128),w
  8538  0759  0023               	movlb	3	; select bank3
  8539  075A  008C               	movwf	12	;volatile
  8540  075B                     l3721:
  8541                           
  8542                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
  8543  075B  1F90               	btfss	16,7	;volatile
  8544  075C  2F5E               	goto	u3781
  8545  075D  2F5F               	goto	u3780
  8546  075E                     u3781:
  8547  075E  2F60               	goto	l3727
  8548  075F                     u3780:
  8549  075F  2FAF               	goto	l30
  8550  0760                     l3727:
  8551                           
  8552                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
  8553  0760  300F               	movlw	15
  8554  0761  0510               	andwf	16,w	;volatile
  8555  0762  0021               	movlb	1	; select bank1
  8556  0763  00A0               	movwf	??_WriteI2C^(0+128)
  8557  0764  3008               	movlw	8
  8558  0765  0620               	xorwf	??_WriteI2C^(0+128),w
  8559  0766  1903               	btfsc	3,2
  8560  0767  2F69               	goto	u3791
  8561  0768  2F6A               	goto	u3790
  8562  0769                     u3791:
  8563  0769  2F83               	goto	l3739
  8564  076A                     u3790:
  8565  076A                     l3729:
  8566  076A  300F               	movlw	15
  8567  076B  0023               	movlb	3	; select bank3
  8568  076C  0510               	andwf	16,w	;volatile
  8569  076D  0021               	movlb	1	; select bank1
  8570  076E  00A0               	movwf	??_WriteI2C^(0+128)
  8571  076F  300B               	movlw	11
  8572  0770  0620               	xorwf	??_WriteI2C^(0+128),w
  8573  0771  1903               	btfsc	3,2
  8574  0772  2F74               	goto	u3801
  8575  0773  2F75               	goto	u3800
  8576  0774                     u3801:
  8577  0774  2F83               	goto	l3739
  8578  0775                     u3800:
  8579  0775                     l3731:
  8580                           
  8581                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
  8582  0775  0023               	movlb	3	; select bank3
  8583  0776  1610               	bsf	16,4	;volatile
  8584  0777                     l33:	
  8585                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
  8586                           
  8587  0777  002E               	movlb	14	; select bank14
  8588  0778  1C0F               	btfss	15,0	;volatile
  8589  0779  2F7B               	goto	u3811
  8590  077A  2F7C               	goto	u3810
  8591  077B                     u3811:
  8592  077B  2F77               	goto	l33
  8593  077C                     u3810:
  8594  077C                     l35:
  8595                           
  8596                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
  8597  077C  0023               	movlb	3	; select bank3
  8598  077D  190F               	btfsc	15,2	;volatile
  8599  077E  2F80               	goto	u3821
  8600  077F  2F81               	goto	u3820
  8601  0780                     u3821:
  8602  0780  2FAF               	goto	l30
  8603  0781                     u3820:
  8604  0781                     l3733:
  8605  0781  080F               	movf	15,w	;volatile
  8606  0782  2FAF               	goto	l30
  8607  0783                     l3739:
  8608                           
  8609                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  8610  0783  300F               	movlw	15
  8611  0784  0023               	movlb	3	; select bank3
  8612  0785  0510               	andwf	16,w	;volatile
  8613  0786  0021               	movlb	1	; select bank1
  8614  0787  00A0               	movwf	??_WriteI2C^(0+128)
  8615  0788  3008               	movlw	8
  8616  0789  0620               	xorwf	??_WriteI2C^(0+128),w
  8617  078A  1903               	btfsc	3,2
  8618  078B  2F8D               	goto	u3831
  8619  078C  2F8E               	goto	u3830
  8620  078D                     u3831:
  8621  078D  2F99               	goto	l42
  8622  078E                     u3830:
  8623  078E                     l3741:
  8624  078E  300F               	movlw	15
  8625  078F  0023               	movlb	3	; select bank3
  8626  0790  0510               	andwf	16,w	;volatile
  8627  0791  0021               	movlb	1	; select bank1
  8628  0792  00A0               	movwf	??_WriteI2C^(0+128)
  8629  0793  300B               	movlw	11
  8630  0794  0620               	xorwf	??_WriteI2C^(0+128),w
  8631  0795  1D03               	btfss	3,2
  8632  0796  2F98               	goto	u3841
  8633  0797  2F99               	goto	u3840
  8634  0798                     u3841:
  8635  0798  2FAF               	goto	l30
  8636  0799                     u3840:
  8637  0799                     l42:
  8638  0799  0023               	movlb	3	; select bank3
  8639  079A  180F               	btfsc	15,0	;volatile
  8640  079B  2F9D               	goto	u3851
  8641  079C  2F9E               	goto	u3850
  8642  079D                     u3851:
  8643  079D  2F99               	goto	l42
  8644  079E                     u3850:
  8645  079E                     l3743:
  8646  079E  0023               	movlb	3	; select bank3
  8647  079F  0C0F               	rrf	15,w	;volatile
  8648  07A0  0C89               	rrf	9,f
  8649  07A1  3901               	andlw	1
  8650  07A2  0021               	movlb	1	; select bank1
  8651  07A3  00A0               	movwf	??_WriteI2C^(0+128)
  8652  07A4  0023               	movlb	3	; select bank3
  8653  07A5  0811               	movf	17,w	;volatile
  8654  07A6  391F               	andlw	31
  8655  07A7  0021               	movlb	1	; select bank1
  8656  07A8  0420               	iorwf	??_WriteI2C^(0+128),w
  8657  07A9  1D03               	btfss	3,2
  8658  07AA  2FAC               	goto	u3861
  8659  07AB  2FAD               	goto	u3860
  8660  07AC                     u3861:
  8661  07AC  2F9E               	goto	l3743
  8662  07AD                     u3860:
  8663  07AD                     l47:
  8664                           
  8665                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
  8666  07AD  0023               	movlb	3	; select bank3
  8667  07AE  0811               	movf	17,w	;volatile
  8668  07AF                     l30:
  8669  07AF  0008               	return
  8670  07B0                     __end_of_WriteI2C:
  8671                           
  8672                           	psect	intentry
  8673  0004                     __pintentry:	
  8674 ;; *************** function _INTERRUPT_InterruptManager *****************
  8675 ;; Defined at:
  8676 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;		None
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8694 ;;Total ram usage:        0 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:    6
  8697 ;; This function calls:
  8698 ;;		_TMR1_ISR
  8699 ;;		_TMR3_ISR
  8700 ;; This function is called by:
  8701 ;;		Interrupt level 1
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705  0004                     _INTERRUPT_InterruptManager:
  8706                           
  8707                           ;incstack = 0
  8708  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8709                           
  8710                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8711  0005  3180               	pagesel	$
  8712  0006                     i1l3663:
  8713                           
  8714                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  8715  0006  1F0B               	btfss	11,6	;volatile
  8716  0007  2809               	goto	u368_21
  8717  0008  280A               	goto	u368_20
  8718  0009                     u368_21:
  8719  0009  2832               	goto	i1l344
  8720  000A                     u368_20:
  8721  000A                     i1l3665:
  8722                           
  8723                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE4bits.TMR3IE == 1 && PIR4bits
      +                          .TMR3IF == 1)
  8724  000A  002E               	movlb	14	; select bank14
  8725  000B  1D1A               	btfss	26,2	;volatile
  8726  000C  280E               	goto	u369_21
  8727  000D  280F               	goto	u369_20
  8728  000E                     u369_21:
  8729  000E  2817               	goto	i1l335
  8730  000F                     u369_20:
  8731  000F                     i1l3667:
  8732  000F  1D10               	btfss	16,2	;volatile
  8733  0010  2812               	goto	u370_21
  8734  0011  2813               	goto	u370_20
  8735  0012                     u370_21:
  8736  0012  2817               	goto	i1l335
  8737  0013                     u370_20:
  8738  0013                     i1l3669:
  8739                           
  8740                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR3_ISR();
  8741  0013  318D  25D1  3180   	fcall	_TMR3_ISR
  8742                           
  8743                           ;interrupt_manager.c: 60: }
  8744  0016  2832               	goto	i1l344
  8745  0017                     i1l335:
  8746                           
  8747                           ;interrupt_manager.c: 61: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
  8748  0017  1C1A               	btfss	26,0	;volatile
  8749  0018  281A               	goto	u371_21
  8750  0019  281B               	goto	u371_20
  8751  001A                     u371_21:
  8752  001A  2823               	goto	i1l337
  8753  001B                     u371_20:
  8754  001B                     i1l3671:
  8755  001B  1C10               	btfss	16,0	;volatile
  8756  001C  281E               	goto	u372_21
  8757  001D  281F               	goto	u372_20
  8758  001E                     u372_21:
  8759  001E  2823               	goto	i1l337
  8760  001F                     u372_20:
  8761  001F                     i1l3673:
  8762                           
  8763                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR1_ISR();
  8764  001F  318D  25BA  3180   	fcall	_TMR1_ISR
  8765                           
  8766                           ;interrupt_manager.c: 64: }
  8767  0022  2832               	goto	i1l344
  8768  0023                     i1l337:
  8769                           
  8770                           ;interrupt_manager.c: 65: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  8771  0023  1C99               	btfss	25,1	;volatile
  8772  0024  2826               	goto	u373_21
  8773  0025  2827               	goto	u373_20
  8774  0026                     u373_21:
  8775  0026  282C               	goto	i1l339
  8776  0027                     u373_20:
  8777  0027                     i1l3675:
  8778                           
  8779                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: i2c1_driver_busCollisionISR();
  8780  0027  1C8F               	btfss	15,1	;volatile
  8781  0028  282A               	goto	u374_21
  8782  0029  282B               	goto	u374_20
  8783  002A                     u374_21:
  8784  002A  282C               	goto	i1l339
  8785  002B                     u374_20:
  8786  002B  2832               	goto	i1l344
  8787  002C                     i1l339:
  8788                           
  8789                           ;interrupt_manager.c: 69: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  8790  002C  1C19               	btfss	25,0	;volatile
  8791  002D  282F               	goto	u375_21
  8792  002E  2830               	goto	u375_20
  8793  002F                     u375_21:
  8794  002F  2832               	goto	i1l338
  8795  0030                     u375_20:
  8796  0030                     i1l3679:
  8797                           
  8798                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_i2cISR();
  8799  0030  080F               	movf	15,w	;volatile
  8800  0031  2832               	goto	i1l344
  8801  0032                     i1l338:
  8802  0032                     i1l344:
  8803  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8804  0033  0009               	retfie
  8805  0034                     __end_of_INTERRUPT_InterruptManager:
  8806                           
  8807                           	psect	text18
  8808  0DD1                     __ptext18:	
  8809 ;; *************** function _TMR3_ISR *****************
  8810 ;; Defined at:
  8811 ;;		line 164 in file "mcc_generated_files/tmr3.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;		None
  8814 ;; Auto vars:     Size  Location     Type
  8815 ;;		None
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  1    wreg      void 
  8818 ;; Registers used:
  8819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/0
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8829 ;;Total ram usage:        0 bytes
  8830 ;; Hardware stack levels used:    1
  8831 ;; Hardware stack levels required when called:    5
  8832 ;; This function calls:
  8833 ;;		Absolute function
  8834 ;;		_TMR3_DefaultInterruptHandler
  8835 ;;		_TMR3_WriteTimer
  8836 ;;		_menuLCD_ISR
  8837 ;; This function is called by:
  8838 ;;		_INTERRUPT_InterruptManager
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           
  8843                           ;psect for function _TMR3_ISR
  8844  0DD1                     _TMR3_ISR:
  8845  0DD1                     i1l3487:	
  8846                           ;incstack = 0
  8847                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8848                           
  8849                           
  8850                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
  8851  0DD1  002E               	movlb	14	; select bank14
  8852  0DD2  1110               	bcf	16,2	;volatile
  8853  0DD3                     i1l3489:
  8854                           
  8855                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
  8856  0DD3  0020               	movlb	0	; select bank0
  8857  0DD4  0856               	movf	_timer3ReloadVal+1,w	;volatile
  8858  0DD5  00F1               	movwf	TMR3_WriteTimer@timerVal+1
  8859  0DD6  0855               	movf	_timer3ReloadVal,w	;volatile
  8860  0DD7  00F0               	movwf	TMR3_WriteTimer@timerVal
  8861  0DD8  318D  2572  318D   	fcall	_TMR3_WriteTimer
  8862  0DDB                     i1l3491:
  8863                           
  8864                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
  8865  0DDB  0020               	movlb	0	; select bank0
  8866  0DDC  0853               	movf	_TMR3_InterruptHandler,w
  8867  0DDD  0454               	iorwf	_TMR3_InterruptHandler+1,w
  8868  0DDE  1903               	btfsc	3,2
  8869  0DDF  2DE1               	goto	u322_21
  8870  0DE0  2DE2               	goto	u322_20
  8871  0DE1                     u322_21:
  8872  0DE1  2DE7               	goto	i1l466
  8873  0DE2                     u322_20:
  8874  0DE2                     i1l3493:
  8875                           
  8876                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
  8877  0DE2  0854               	movf	_TMR3_InterruptHandler+1,w
  8878  0DE3  008A               	movwf	10
  8879  0DE4  0853               	movf	_TMR3_InterruptHandler,w
  8880  0DE5  000A               	callw
  8881  0DE6  318D               	pagesel	$
  8882  0DE7                     i1l466:
  8883  0DE7  0008               	return
  8884  0DE8                     __end_of_TMR3_ISR:
  8885                           
  8886                           	psect	text19
  8887  07FF                     __ptext19:	
  8888 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  8889 ;; Defined at:
  8890 ;;		line 182 in file "mcc_generated_files/tmr3.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;		None
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;		None
  8895 ;; Return value:  Size  Location     Type
  8896 ;;                  1    wreg      void 
  8897 ;; Registers used:
  8898 ;;		None
  8899 ;; Tracked objects:
  8900 ;;		On entry : 0/0
  8901 ;;		On exit  : 0/0
  8902 ;;		Unchanged: 0/0
  8903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;Total ram usage:        0 bytes
  8909 ;; Hardware stack levels used:    1
  8910 ;; This function calls:
  8911 ;;		Nothing
  8912 ;; This function is called by:
  8913 ;;		_TMR3_Initialize
  8914 ;;		_TMR3_ISR
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           
  8919                           ;psect for function _TMR3_DefaultInterruptHandler
  8920  07FF                     _TMR3_DefaultInterruptHandler:
  8921  07FF                     i1l472:	
  8922                           ;incstack = 0
  8923                           ; Regs used in _TMR3_DefaultInterruptHandler: []
  8924                           
  8925  07FF  0008               	return
  8926  0800                     __end_of_TMR3_DefaultInterruptHandler:
  8927                           
  8928                           	psect	text20
  8929  0699                     __ptext20:	
  8930 ;; *************** function _menuLCD_ISR *****************
  8931 ;; Defined at:
  8932 ;;		line 247 in file "main.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;		None
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;  str             8   23[BANK0 ] unsigned char [8]
  8937 ;;  tt              4   31[BANK0 ] unsigned char [4]
  8938 ;;  l               3   35[BANK0 ] unsigned char [3]
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8949 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8950 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;Total ram usage:       17 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:    4
  8955 ;; This function calls:
  8956 ;;		_LCDcmd
  8957 ;;		_LCDstr
  8958 ;;		_sprintf
  8959 ;; This function is called by:
  8960 ;;		_main
  8961 ;;		_TMR3_ISR
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           
  8966                           ;psect for function _menuLCD_ISR
  8967  0699                     _menuLCD_ISR:
  8968  0699                     i1l3441:	
  8969                           ;incstack = 0
  8970                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8971                           
  8972                           
  8973                           ;main.c: 248: char str[8];;main.c: 249: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
  8974  0699  3000               	movlw	low (STR_1| (0+32768))
  8975  069A  0020               	movlb	0	; select bank0
  8976  069B  00A0               	movwf	sprintf@f
  8977  069C  3090               	movlw	high (STR_1| (0+32768))
  8978  069D  00A1               	movwf	sprintf@f+1
  8979  069E  0847               	movf	_t+1,w
  8980  069F  00A3               	movwf	?_sprintf+3
  8981  06A0  0846               	movf	_t,w
  8982  06A1  00A2               	movwf	?_sprintf+2
  8983  06A2  0849               	movf	_t+3,w
  8984  06A3  00A5               	movwf	?_sprintf+5
  8985  06A4  0848               	movf	_t+2,w
  8986  06A5  00A4               	movwf	?_sprintf+4
  8987  06A6  084B               	movf	_t+5,w
  8988  06A7  00A7               	movwf	?_sprintf+7
  8989  06A8  084A               	movf	_t+4,w
  8990  06A9  00A6               	movwf	?_sprintf+6
  8991  06AA  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
  8992  06AB  3180  2042  3186   	fcall	_sprintf
  8993  06AE                     i1l3443:
  8994                           
  8995                           ;main.c: 251: LCDcmd(0x80);
  8996  06AE  3080               	movlw	128
  8997  06AF  318D  2523  3186   	fcall	_LCDcmd
  8998  06B2                     i1l3445:
  8999                           
  9000                           ;main.c: 252: LCDstr(str);
  9001  06B2  3037               	movlw	low menuLCD_ISR@str
  9002  06B3  00F9               	movwf	LCDstr@p
  9003  06B4  3000               	movlw	high menuLCD_ISR@str
  9004  06B5  00FA               	movwf	LCDstr@p+1
  9005  06B6  318E  2619  3186   	fcall	_LCDstr
  9006  06B9                     i1l3447:
  9007                           
  9008                           ;main.c: 254: LCDcmd(0x8B);
  9009  06B9  308B               	movlw	139
  9010  06BA  318D  2523  3186   	fcall	_LCDcmd
  9011  06BD                     i1l3449:
  9012                           
  9013                           ;main.c: 255: LCDstr("CTL ?");
  9014  06BD  3020               	movlw	low (STR_2| (0+32768))
  9015  06BE  00F9               	movwf	LCDstr@p
  9016  06BF  3090               	movlw	high (STR_2| (0+32768))
  9017  06C0  00FA               	movwf	LCDstr@p+1
  9018  06C1  318E  2619  3186   	fcall	_LCDstr
  9019  06C4                     i1l3451:
  9020                           
  9021                           ;main.c: 257: LCDcmd(0xc0);
  9022  06C4  30C0               	movlw	192
  9023  06C5  318D  2523  3186   	fcall	_LCDcmd
  9024  06C8                     i1l3453:
  9025                           
  9026                           ;main.c: 258: char tt[4];;main.c: 259: sprintf(tt, "%02d C", c);
  9027  06C8  3019               	movlw	low (STR_3| (0+32768))
  9028  06C9  0020               	movlb	0	; select bank0
  9029  06CA  00A0               	movwf	sprintf@f
  9030  06CB  3090               	movlw	high (STR_3| (0+32768))
  9031  06CC  00A1               	movwf	sprintf@f+1
  9032  06CD  0852               	movf	_c,w
  9033  06CE  00B5               	movwf	??_menuLCD_ISR
  9034  06CF  01B6               	clrf	??_menuLCD_ISR+1
  9035  06D0  0835               	movf	??_menuLCD_ISR,w
  9036  06D1  00A2               	movwf	?_sprintf+2
  9037  06D2  0836               	movf	??_menuLCD_ISR+1,w
  9038  06D3  00A3               	movwf	?_sprintf+3
  9039  06D4  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
  9040  06D5  3180  2042  3186   	fcall	_sprintf
  9041  06D8                     i1l3455:
  9042                           
  9043                           ;main.c: 260: LCDstr(tt);
  9044  06D8  303F               	movlw	low menuLCD_ISR@tt
  9045  06D9  00F9               	movwf	LCDstr@p
  9046  06DA  3000               	movlw	high menuLCD_ISR@tt
  9047  06DB  00FA               	movwf	LCDstr@p+1
  9048  06DC  318E  2619  3186   	fcall	_LCDstr
  9049  06DF                     i1l3457:
  9050                           
  9051                           ;main.c: 262: LCDcmd(0xcd);
  9052  06DF  30CD               	movlw	205
  9053  06E0  318D  2523  3186   	fcall	_LCDcmd
  9054  06E3                     i1l3459:
  9055                           
  9056                           ;main.c: 263: char l[3];;main.c: 264: sprintf(l, "L %d", lumLevel);
  9057  06E3  3026               	movlw	low (STR_4| (0+32768))
  9058  06E4  0020               	movlb	0	; select bank0
  9059  06E5  00A0               	movwf	sprintf@f
  9060  06E6  3090               	movlw	high (STR_4| (0+32768))
  9061  06E7  00A1               	movwf	sprintf@f+1
  9062  06E8  084D               	movf	_lumLevel+1,w
  9063  06E9  00A3               	movwf	?_sprintf+3
  9064  06EA  084C               	movf	_lumLevel,w
  9065  06EB  00A2               	movwf	?_sprintf+2
  9066  06EC  3043               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
  9067  06ED  3180  2042  3186   	fcall	_sprintf
  9068  06F0                     i1l3461:
  9069                           
  9070                           ;main.c: 265: LCDstr(l);
  9071  06F0  3043               	movlw	low menuLCD_ISR@l
  9072  06F1  00F9               	movwf	LCDstr@p
  9073  06F2  3000               	movlw	high menuLCD_ISR@l
  9074  06F3  00FA               	movwf	LCDstr@p+1
  9075  06F4  318E  2619  3186   	fcall	_LCDstr
  9076  06F7                     i1l764:
  9077  06F7  0008               	return
  9078  06F8                     __end_of_menuLCD_ISR:
  9079                           
  9080                           	psect	text21
  9081  0042                     __ptext21:	
  9082 ;; *************** function _sprintf *****************
  9083 ;; Defined at:
  9084 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  9085 ;; Parameters:    Size  Location     Type
  9086 ;;  sp              1    wreg     PTR unsigned char 
  9087 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
  9088 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  9089 ;;		 -> STR_4(5), STR_3(7), STR_1(15), 
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  9092 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
  9093 ;;  tmpval          4    0        struct .
  9094 ;;  width           2   17[BANK0 ] int 
  9095 ;;  val             2   14[BANK0 ] unsigned int 
  9096 ;;  cp              2    0        PTR const unsigned char 
  9097 ;;  len             2    0        unsigned int 
  9098 ;;  c               1   20[BANK0 ] unsigned char 
  9099 ;;  flag            1   16[BANK0 ] unsigned char 
  9100 ;;  prec            1   13[BANK0 ] char 
  9101 ;;  ap              1   12[BANK0 ] PTR void [1]
  9102 ;;		 -> ?_sprintf(2), 
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  2    0[BANK0 ] int 
  9105 ;; Registers used:
  9106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9112 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9113 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;Total ram usage:       21 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; Hardware stack levels required when called:    1
  9119 ;; This function calls:
  9120 ;;		___lwdiv
  9121 ;;		___lwmod
  9122 ;;		___wmul
  9123 ;;		_isdigit
  9124 ;; This function is called by:
  9125 ;;		_menuLCD_ISR
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           
  9130                           ;psect for function _sprintf
  9131  0042                     _sprintf:
  9132                           
  9133                           ;incstack = 0
  9134                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9135                           ;sprintf@sp stored from wreg
  9136  0042  0020               	movlb	0	; select bank0
  9137  0043  00B3               	movwf	sprintf@sp
  9138  0044                     i1l3125:
  9139                           
  9140                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  9141  0044  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  9142  0045  00A8               	movwf	??_sprintf
  9143  0046  0828               	movf	??_sprintf,w
  9144  0047  00AC               	movwf	sprintf@ap
  9145                           
  9146                           ;doprnt.c: 553: while((c = *f++)) {
  9147  0048  29C6               	goto	i1l3229
  9148  0049                     i1l3127:
  9149                           
  9150                           ;doprnt.c: 555: if(c != '%')
  9151  0049  3025               	movlw	37
  9152  004A  0634               	xorwf	sprintf@c,w
  9153  004B  1903               	btfsc	3,2
  9154  004C  284E               	goto	u280_21
  9155  004D  284F               	goto	u280_20
  9156  004E                     u280_21:
  9157  004E  285B               	goto	i1l3133
  9158  004F                     u280_20:
  9159  004F                     i1l3129:
  9160                           
  9161                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  9162  004F  0834               	movf	sprintf@c,w
  9163  0050  00A8               	movwf	??_sprintf
  9164  0051  0833               	movf	sprintf@sp,w
  9165  0052  0086               	movwf	6
  9166  0053  0187               	clrf	7
  9167  0054  0828               	movf	??_sprintf,w
  9168  0055  0081               	movwf	1
  9169  0056                     i1l3131:
  9170  0056  3001               	movlw	1
  9171  0057  00A8               	movwf	??_sprintf
  9172  0058  0828               	movf	??_sprintf,w
  9173  0059  07B3               	addwf	sprintf@sp,f
  9174                           
  9175                           ;doprnt.c: 559: continue;
  9176  005A  29C6               	goto	i1l3229
  9177  005B                     i1l3133:
  9178                           
  9179                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  9180  005B  01B1               	clrf	sprintf@width
  9181  005C  01B2               	clrf	sprintf@width+1
  9182                           
  9183                           ;doprnt.c: 565: flag = 0;
  9184  005D  01B0               	clrf	sprintf@flag
  9185  005E  2864               	goto	i1l3139
  9186  005F                     i1l1105:	
  9187                           ;doprnt.c: 596: case '0':
  9188                           
  9189                           
  9190                           ;doprnt.c: 597: flag |= 0x04;
  9191  005F  1530               	bsf	sprintf@flag,2
  9192  0060                     i1l3135:
  9193                           
  9194                           ;doprnt.c: 598: f++;
  9195  0060  3001               	movlw	1
  9196  0061  07A0               	addwf	sprintf@f,f
  9197  0062  3000               	movlw	0
  9198  0063  3DA1               	addwfc	sprintf@f+1,f
  9199  0064                     i1l3139:	
  9200                           ;doprnt.c: 599: continue;
  9201                           
  9202  0064  0820               	movf	sprintf@f,w
  9203  0065  0084               	movwf	4
  9204  0066  0821               	movf	sprintf@f+1,w
  9205  0067  0085               	movwf	5
  9206  0068  0800               	movf	0,w	;code access
  9207                           
  9208                           ; Switch size 1, requested type "simple"
  9209                           ; Number of cases is 1, Range of values is 48 to 48
  9210                           ; switch strategies available:
  9211                           ; Name         Instructions Cycles
  9212                           ; simple_byte            4     3 (average)
  9213                           ; direct_byte           11     9 (fixed)
  9214                           ; jumptable            263     9 (fixed)
  9215                           ;	Chosen strategy is simple_byte
  9216  0069  3A30               	xorlw	48	; case 48
  9217  006A  1903               	skipnz
  9218  006B  285F               	goto	i1l1105
  9219  006C  286D               	goto	i1l3141
  9220  006D                     i1l3141:
  9221                           
  9222                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  9223  006D  0820               	movf	sprintf@f,w
  9224  006E  0084               	movwf	4
  9225  006F  0821               	movf	sprintf@f+1,w
  9226  0070  0085               	movwf	5
  9227  0071  0800               	movf	0,w	;code access
  9228  0072  318D  2595  3180   	fcall	_isdigit
  9229  0075  1C03               	btfss	3,0
  9230  0076  2878               	goto	u281_21
  9231  0077  2879               	goto	u281_20
  9232  0078                     u281_21:
  9233  0078  28AC               	goto	i1l3155
  9234  0079                     u281_20:
  9235  0079                     i1l3143:
  9236                           
  9237                           ;doprnt.c: 615: width = 0;
  9238  0079  0020               	movlb	0	; select bank0
  9239  007A  01B1               	clrf	sprintf@width
  9240  007B  01B2               	clrf	sprintf@width+1
  9241  007C                     i1l3145:
  9242                           
  9243                           ;doprnt.c: 617: width *= 10;
  9244  007C  300A               	movlw	10
  9245  007D  00F0               	movwf	___wmul@multiplier
  9246  007E  3000               	movlw	0
  9247  007F  00F1               	movwf	___wmul@multiplier+1
  9248  0080  0020               	movlb	0	; select bank0
  9249  0081  0832               	movf	sprintf@width+1,w
  9250  0082  00F3               	movwf	___wmul@multiplicand+1
  9251  0083  0831               	movf	sprintf@width,w
  9252  0084  00F2               	movwf	___wmul@multiplicand
  9253  0085  318E  2634  3180   	fcall	___wmul
  9254  0088  0871               	movf	?___wmul+1,w
  9255  0089  0020               	movlb	0	; select bank0
  9256  008A  00B2               	movwf	sprintf@width+1
  9257  008B  0870               	movf	?___wmul,w
  9258  008C  00B1               	movwf	sprintf@width
  9259  008D                     i1l3147:
  9260                           
  9261                           ;doprnt.c: 618: width += *f++ - '0';
  9262  008D  0820               	movf	sprintf@f,w
  9263  008E  0084               	movwf	4
  9264  008F  0821               	movf	sprintf@f+1,w
  9265  0090  0085               	movwf	5
  9266  0091  0800               	movf	0,w	;code access
  9267  0092  3ED0               	addlw	208
  9268  0093  00A8               	movwf	??_sprintf
  9269  0094  30FF               	movlw	255
  9270  0095  1803               	skipnc
  9271  0096  3000               	movlw	0
  9272  0097  00A9               	movwf	??_sprintf+1
  9273  0098  0828               	movf	??_sprintf,w
  9274  0099  07B1               	addwf	sprintf@width,f
  9275  009A  0829               	movf	??_sprintf+1,w
  9276  009B  3DB2               	addwfc	sprintf@width+1,f
  9277  009C                     i1l3149:
  9278  009C  3001               	movlw	1
  9279  009D  07A0               	addwf	sprintf@f,f
  9280  009E  3000               	movlw	0
  9281  009F  3DA1               	addwfc	sprintf@f+1,f
  9282  00A0                     i1l3151:
  9283                           
  9284                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  9285  00A0  0820               	movf	sprintf@f,w
  9286  00A1  0084               	movwf	4
  9287  00A2  0821               	movf	sprintf@f+1,w
  9288  00A3  0085               	movwf	5
  9289  00A4  0800               	movf	0,w	;code access
  9290  00A5  318D  2595  3180   	fcall	_isdigit
  9291  00A8  1803               	btfsc	3,0
  9292  00A9  28AB               	goto	u282_21
  9293  00AA  28AC               	goto	u282_20
  9294  00AB                     u282_21:
  9295  00AB  287C               	goto	i1l3145
  9296  00AC                     u282_20:
  9297  00AC                     i1l3155:
  9298  00AC  0020               	movlb	0	; select bank0
  9299  00AD  0821               	movf	sprintf@f+1,w
  9300  00AE  00A9               	movwf	??_sprintf+1
  9301  00AF  0820               	movf	sprintf@f,w
  9302  00B0  00A8               	movwf	??_sprintf
  9303  00B1  0AA0               	incf	sprintf@f,f
  9304  00B2  1903               	skipnz
  9305  00B3  0AA1               	incf	sprintf@f+1,f
  9306  00B4  0828               	movf	??_sprintf,w
  9307  00B5  0084               	movwf	4
  9308  00B6  0829               	movf	??_sprintf+1,w
  9309  00B7  0085               	movwf	5
  9310  00B8  0800               	movf	0,w	;code access
  9311  00B9  00B4               	movwf	sprintf@c
  9312                           
  9313                           ; Switch size 1, requested type "simple"
  9314                           ; Number of cases is 3, Range of values is 0 to 105
  9315                           ; switch strategies available:
  9316                           ; Name         Instructions Cycles
  9317                           ; simple_byte           10     6 (average)
  9318                           ; direct_byte          218     6 (fixed)
  9319                           ; jumptable            260     6 (fixed)
  9320                           ;	Chosen strategy is simple_byte
  9321  00BA  3A00               	xorlw	0	; case 0
  9322  00BB  1903               	skipnz
  9323  00BC  29DA               	goto	i1l3231
  9324  00BD  3A64               	xorlw	100	; case 100
  9325  00BE  1903               	skipnz
  9326  00BF  28C4               	goto	i1l3157
  9327  00C0  3A0D               	xorlw	13	; case 105
  9328  00C1  1903               	skipnz
  9329  00C2  28C4               	goto	i1l3157
  9330  00C3  29C6               	goto	i1l3229
  9331  00C4                     i1l3157:
  9332                           
  9333                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  9334  00C4  082C               	movf	sprintf@ap,w
  9335  00C5  0086               	movwf	6
  9336  00C6  0187               	clrf	7
  9337  00C7  3F40               	moviw [0]fsr1
  9338  00C8  00AE               	movwf	sprintf@val
  9339  00C9  3F41               	moviw [1]fsr1
  9340  00CA  00AF               	movwf	sprintf@val+1
  9341  00CB                     i1l3159:
  9342  00CB  3002               	movlw	2
  9343  00CC  00A8               	movwf	??_sprintf
  9344  00CD  0828               	movf	??_sprintf,w
  9345  00CE  07AC               	addwf	sprintf@ap,f
  9346  00CF                     i1l3161:
  9347                           
  9348                           ;doprnt.c: 1287: if((int)val < 0) {
  9349  00CF  1FAF               	btfss	sprintf@val+1,7
  9350  00D0  28D2               	goto	u283_21
  9351  00D1  28D3               	goto	u283_20
  9352  00D2                     u283_21:
  9353  00D2  28DC               	goto	i1l3167
  9354  00D3                     u283_20:
  9355  00D3                     i1l3163:
  9356                           
  9357                           ;doprnt.c: 1288: flag |= 0x03;
  9358  00D3  3003               	movlw	3
  9359  00D4  00A8               	movwf	??_sprintf
  9360  00D5  0828               	movf	??_sprintf,w
  9361  00D6  04B0               	iorwf	sprintf@flag,f
  9362  00D7                     i1l3165:
  9363                           
  9364                           ;doprnt.c: 1289: val = -val;
  9365  00D7  09AE               	comf	sprintf@val,f
  9366  00D8  09AF               	comf	sprintf@val+1,f
  9367  00D9  0AAE               	incf	sprintf@val,f
  9368  00DA  1903               	skipnz
  9369  00DB  0AAF               	incf	sprintf@val+1,f
  9370  00DC                     i1l3167:
  9371                           
  9372                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  9373  00DC  01B4               	clrf	sprintf@c
  9374  00DD  0AB4               	incf	sprintf@c,f
  9375  00DE                     i1l3173:
  9376                           
  9377                           ;doprnt.c: 1332: if(val < dpowers[c])
  9378  00DE  0834               	movf	sprintf@c,w
  9379  00DF  00A8               	movwf	??_sprintf
  9380  00E0  01A9               	clrf	??_sprintf+1
  9381  00E1  35A8               	lslf	??_sprintf,f
  9382  00E2  0DA9               	rlf	??_sprintf+1,f
  9383  00E3  300F               	movlw	low (_dpowers| (0+32768))
  9384  00E4  0728               	addwf	??_sprintf,w
  9385  00E5  0084               	movwf	4
  9386  00E6  3090               	movlw	high (_dpowers| (0+32768))
  9387  00E7  3D29               	addwfc	??_sprintf+1,w
  9388  00E8  0085               	movwf	5
  9389  00E9  3F00               	moviw [0]fsr0
  9390  00EA  00AA               	movwf	??_sprintf+2
  9391  00EB  3F01               	moviw [1]fsr0
  9392  00EC  00AB               	movwf	??_sprintf+3
  9393  00ED  082B               	movf	??_sprintf+3,w
  9394  00EE  022F               	subwf	sprintf@val+1,w
  9395  00EF  1D03               	skipz
  9396  00F0  28F3               	goto	u284_25
  9397  00F1  082A               	movf	??_sprintf+2,w
  9398  00F2  022E               	subwf	sprintf@val,w
  9399  00F3                     u284_25:
  9400  00F3  1803               	skipnc
  9401  00F4  28F6               	goto	u284_21
  9402  00F5  28F7               	goto	u284_20
  9403  00F6                     u284_21:
  9404  00F6  28F8               	goto	i1l3177
  9405  00F7                     u284_20:
  9406  00F7  2902               	goto	i1l3179
  9407  00F8                     i1l3177:
  9408  00F8  3001               	movlw	1
  9409  00F9  00A8               	movwf	??_sprintf
  9410  00FA  0828               	movf	??_sprintf,w
  9411  00FB  07B4               	addwf	sprintf@c,f
  9412  00FC  3005               	movlw	5
  9413  00FD  0634               	xorwf	sprintf@c,w
  9414  00FE  1D03               	btfss	3,2
  9415  00FF  2901               	goto	u285_21
  9416  0100  2902               	goto	u285_20
  9417  0101                     u285_21:
  9418  0101  28DE               	goto	i1l3173
  9419  0102                     u285_20:
  9420  0102                     i1l3179:
  9421                           
  9422                           ;doprnt.c: 1371: if(width && flag & 0x03)
  9423  0102  0831               	movf	sprintf@width,w
  9424  0103  0432               	iorwf	sprintf@width+1,w
  9425  0104  1903               	btfsc	3,2
  9426  0105  2907               	goto	u286_21
  9427  0106  2908               	goto	u286_20
  9428  0107                     u286_21:
  9429  0107  2912               	goto	i1l1123
  9430  0108                     u286_20:
  9431  0108                     i1l3181:
  9432  0108  0830               	movf	sprintf@flag,w
  9433  0109  3903               	andlw	3
  9434  010A  1903               	btfsc	3,2
  9435  010B  290D               	goto	u287_21
  9436  010C  290E               	goto	u287_20
  9437  010D                     u287_21:
  9438  010D  2912               	goto	i1l1123
  9439  010E                     u287_20:
  9440  010E                     i1l3183:
  9441                           
  9442                           ;doprnt.c: 1372: width--;
  9443  010E  30FF               	movlw	255
  9444  010F  07B1               	addwf	sprintf@width,f
  9445  0110  30FF               	movlw	255
  9446  0111  3DB2               	addwfc	sprintf@width+1,f
  9447  0112                     i1l1123:
  9448                           
  9449                           ;doprnt.c: 1407: if(width > c)
  9450  0112  0832               	movf	sprintf@width+1,w
  9451  0113  3A80               	xorlw	128
  9452  0114  3C80               	sublw	128
  9453  0115  1D03               	skipz
  9454  0116  2919               	goto	u288_25
  9455  0117  0831               	movf	sprintf@width,w
  9456  0118  0234               	subwf	sprintf@c,w
  9457  0119                     u288_25:
  9458  0119  1803               	skipnc
  9459  011A  291C               	goto	u288_21
  9460  011B  291D               	goto	u288_20
  9461  011C                     u288_21:
  9462  011C  2926               	goto	i1l3187
  9463  011D                     u288_20:
  9464  011D                     i1l3185:
  9465                           
  9466                           ;doprnt.c: 1408: width -= c;
  9467  011D  0020               	movlb	0	; select bank0
  9468  011E  0834               	movf	sprintf@c,w
  9469  011F  00A8               	movwf	??_sprintf
  9470  0120  01A9               	clrf	??_sprintf+1
  9471  0121  0828               	movf	??_sprintf,w
  9472  0122  02B1               	subwf	sprintf@width,f
  9473  0123  0829               	movf	??_sprintf+1,w
  9474  0124  3BB2               	subwfb	sprintf@width+1,f
  9475  0125  2929               	goto	i1l3189
  9476  0126                     i1l3187:
  9477                           
  9478                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  9479  0126  0020               	movlb	0	; select bank0
  9480  0127  01B1               	clrf	sprintf@width
  9481  0128  01B2               	clrf	sprintf@width+1
  9482  0129                     i1l3189:
  9483                           
  9484                           ;doprnt.c: 1413: if(flag & 0x04) {
  9485  0129  1D30               	btfss	sprintf@flag,2
  9486  012A  292C               	goto	u289_21
  9487  012B  292D               	goto	u289_20
  9488  012C                     u289_21:
  9489  012C  295A               	goto	i1l3205
  9490  012D                     u289_20:
  9491  012D                     i1l3191:
  9492                           
  9493                           ;doprnt.c: 1418: if(flag & 0x03)
  9494  012D  0830               	movf	sprintf@flag,w
  9495  012E  3903               	andlw	3
  9496  012F  1903               	btfsc	3,2
  9497  0130  2932               	goto	u290_21
  9498  0131  2933               	goto	u290_20
  9499  0132                     u290_21:
  9500  0132  293E               	goto	i1l3197
  9501  0133                     u290_20:
  9502  0133                     i1l3193:
  9503                           
  9504                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  9505  0133  302D               	movlw	45
  9506  0134  00A8               	movwf	??_sprintf
  9507  0135  0833               	movf	sprintf@sp,w
  9508  0136  0086               	movwf	6
  9509  0137  0187               	clrf	7
  9510  0138  0828               	movf	??_sprintf,w
  9511  0139  0081               	movwf	1
  9512  013A                     i1l3195:
  9513  013A  3001               	movlw	1
  9514  013B  00A8               	movwf	??_sprintf
  9515  013C  0828               	movf	??_sprintf,w
  9516  013D  07B3               	addwf	sprintf@sp,f
  9517  013E                     i1l3197:
  9518                           
  9519                           ;doprnt.c: 1441: if(width)
  9520  013E  0831               	movf	sprintf@width,w
  9521  013F  0432               	iorwf	sprintf@width+1,w
  9522  0140  1903               	btfsc	3,2
  9523  0141  2943               	goto	u291_21
  9524  0142  2944               	goto	u291_20
  9525  0143                     u291_21:
  9526  0143  2986               	goto	i1l3219
  9527  0144                     u291_20:
  9528  0144                     i1l3199:
  9529                           
  9530                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  9531  0144  3030               	movlw	48
  9532  0145  00A8               	movwf	??_sprintf
  9533  0146  0833               	movf	sprintf@sp,w
  9534  0147  0086               	movwf	6
  9535  0148  0187               	clrf	7
  9536  0149  0828               	movf	??_sprintf,w
  9537  014A  0081               	movwf	1
  9538  014B                     i1l3201:
  9539  014B  3001               	movlw	1
  9540  014C  00A8               	movwf	??_sprintf
  9541  014D  0828               	movf	??_sprintf,w
  9542  014E  07B3               	addwf	sprintf@sp,f
  9543  014F                     i1l3203:
  9544                           
  9545                           ;doprnt.c: 1444: while(--width);
  9546  014F  30FF               	movlw	255
  9547  0150  07B1               	addwf	sprintf@width,f
  9548  0151  30FF               	movlw	255
  9549  0152  3DB2               	addwfc	sprintf@width+1,f
  9550  0153  0831               	movf	sprintf@width,w
  9551  0154  0432               	iorwf	sprintf@width+1,w
  9552  0155  1D03               	btfss	3,2
  9553  0156  2958               	goto	u292_21
  9554  0157  2959               	goto	u292_20
  9555  0158                     u292_21:
  9556  0158  2944               	goto	i1l3199
  9557  0159                     u292_20:
  9558  0159  2986               	goto	i1l3219
  9559  015A                     i1l3205:
  9560                           
  9561                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  9562  015A  0831               	movf	sprintf@width,w
  9563  015B  0432               	iorwf	sprintf@width+1,w
  9564  015C  1903               	btfsc	3,2
  9565  015D  295F               	goto	u293_21
  9566  015E  2960               	goto	u293_20
  9567  015F                     u293_21:
  9568  015F  2975               	goto	i1l3213
  9569  0160                     u293_20:
  9570  0160                     i1l3207:
  9571                           
  9572                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  9573  0160  3020               	movlw	32
  9574  0161  00A8               	movwf	??_sprintf
  9575  0162  0833               	movf	sprintf@sp,w
  9576  0163  0086               	movwf	6
  9577  0164  0187               	clrf	7
  9578  0165  0828               	movf	??_sprintf,w
  9579  0166  0081               	movwf	1
  9580  0167                     i1l3209:
  9581  0167  3001               	movlw	1
  9582  0168  00A8               	movwf	??_sprintf
  9583  0169  0828               	movf	??_sprintf,w
  9584  016A  07B3               	addwf	sprintf@sp,f
  9585  016B                     i1l3211:
  9586                           
  9587                           ;doprnt.c: 1457: while(--width);
  9588  016B  30FF               	movlw	255
  9589  016C  07B1               	addwf	sprintf@width,f
  9590  016D  30FF               	movlw	255
  9591  016E  3DB2               	addwfc	sprintf@width+1,f
  9592  016F  0831               	movf	sprintf@width,w
  9593  0170  0432               	iorwf	sprintf@width+1,w
  9594  0171  1D03               	btfss	3,2
  9595  0172  2974               	goto	u294_21
  9596  0173  2975               	goto	u294_20
  9597  0174                     u294_21:
  9598  0174  2960               	goto	i1l3207
  9599  0175                     u294_20:
  9600  0175                     i1l3213:
  9601                           
  9602                           ;doprnt.c: 1464: if(flag & 0x03)
  9603  0175  0830               	movf	sprintf@flag,w
  9604  0176  3903               	andlw	3
  9605  0177  1903               	btfsc	3,2
  9606  0178  297A               	goto	u295_21
  9607  0179  297B               	goto	u295_20
  9608  017A                     u295_21:
  9609  017A  2986               	goto	i1l3219
  9610  017B                     u295_20:
  9611  017B                     i1l3215:
  9612                           
  9613                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  9614  017B  302D               	movlw	45
  9615  017C  00A8               	movwf	??_sprintf
  9616  017D  0833               	movf	sprintf@sp,w
  9617  017E  0086               	movwf	6
  9618  017F  0187               	clrf	7
  9619  0180  0828               	movf	??_sprintf,w
  9620  0181  0081               	movwf	1
  9621  0182                     i1l3217:
  9622  0182  3001               	movlw	1
  9623  0183  00A8               	movwf	??_sprintf
  9624  0184  0828               	movf	??_sprintf,w
  9625  0185  07B3               	addwf	sprintf@sp,f
  9626  0186                     i1l3219:
  9627                           
  9628                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  9629  0186  0834               	movf	sprintf@c,w
  9630  0187  00A8               	movwf	??_sprintf
  9631  0188  0828               	movf	??_sprintf,w
  9632  0189  00AD               	movwf	sprintf@prec
  9633                           
  9634                           ;doprnt.c: 1500: while(prec--) {
  9635  018A  29BD               	goto	i1l3227
  9636  018B                     i1l3221:
  9637                           
  9638                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  9639  018B  300A               	movlw	10
  9640  018C  00F8               	movwf	___lwmod@divisor
  9641  018D  3000               	movlw	0
  9642  018E  00F9               	movwf	___lwmod@divisor+1
  9643  018F  082D               	movf	sprintf@prec,w
  9644  0190  00A8               	movwf	??_sprintf
  9645  0191  01A9               	clrf	??_sprintf+1
  9646  0192  35A8               	lslf	??_sprintf,f
  9647  0193  0DA9               	rlf	??_sprintf+1,f
  9648  0194  300F               	movlw	low (_dpowers| (0+32768))
  9649  0195  0728               	addwf	??_sprintf,w
  9650  0196  0084               	movwf	4
  9651  0197  3090               	movlw	high (_dpowers| (0+32768))
  9652  0198  3D29               	addwfc	??_sprintf+1,w
  9653  0199  0085               	movwf	5
  9654  019A  3F00               	moviw [0]fsr0
  9655  019B  00F0               	movwf	___lwdiv@divisor
  9656  019C  3F01               	moviw [1]fsr0
  9657  019D  00F1               	movwf	___lwdiv@divisor+1
  9658  019E  082F               	movf	sprintf@val+1,w
  9659  019F  00F3               	movwf	___lwdiv@dividend+1
  9660  01A0  082E               	movf	sprintf@val,w
  9661  01A1  00F2               	movwf	___lwdiv@dividend
  9662  01A2  318E  26EA  3180   	fcall	___lwdiv
  9663  01A5  0871               	movf	?___lwdiv+1,w
  9664  01A6  00FB               	movwf	___lwmod@dividend+1
  9665  01A7  0870               	movf	?___lwdiv,w
  9666  01A8  00FA               	movwf	___lwmod@dividend
  9667  01A9  318E  26B6  3180   	fcall	___lwmod
  9668  01AC  0878               	movf	?___lwmod,w
  9669  01AD  3E30               	addlw	48
  9670  01AE  0020               	movlb	0	; select bank0
  9671  01AF  00AA               	movwf	??_sprintf+2
  9672  01B0  082A               	movf	??_sprintf+2,w
  9673  01B1  00B4               	movwf	sprintf@c
  9674  01B2                     i1l3223:
  9675                           
  9676                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  9677  01B2  0834               	movf	sprintf@c,w
  9678  01B3  00A8               	movwf	??_sprintf
  9679  01B4  0833               	movf	sprintf@sp,w
  9680  01B5  0086               	movwf	6
  9681  01B6  0187               	clrf	7
  9682  01B7  0828               	movf	??_sprintf,w
  9683  01B8  0081               	movwf	1
  9684  01B9                     i1l3225:
  9685  01B9  3001               	movlw	1
  9686  01BA  00A8               	movwf	??_sprintf
  9687  01BB  0828               	movf	??_sprintf,w
  9688  01BC  07B3               	addwf	sprintf@sp,f
  9689  01BD                     i1l3227:
  9690  01BD  30FF               	movlw	255
  9691  01BE  00A8               	movwf	??_sprintf
  9692  01BF  0828               	movf	??_sprintf,w
  9693  01C0  07AD               	addwf	sprintf@prec,f
  9694  01C1  0A2D               	incf	sprintf@prec,w
  9695  01C2  1D03               	btfss	3,2
  9696  01C3  29C5               	goto	u296_21
  9697  01C4  29C6               	goto	u296_20
  9698  01C5                     u296_21:
  9699  01C5  298B               	goto	i1l3221
  9700  01C6                     u296_20:
  9701  01C6                     i1l3229:
  9702  01C6  0821               	movf	sprintf@f+1,w
  9703  01C7  00A9               	movwf	??_sprintf+1
  9704  01C8  0820               	movf	sprintf@f,w
  9705  01C9  00A8               	movwf	??_sprintf
  9706  01CA  0AA0               	incf	sprintf@f,f
  9707  01CB  1903               	skipnz
  9708  01CC  0AA1               	incf	sprintf@f+1,f
  9709  01CD  0828               	movf	??_sprintf,w
  9710  01CE  0084               	movwf	4
  9711  01CF  0829               	movf	??_sprintf+1,w
  9712  01D0  0085               	movwf	5
  9713  01D1  0800               	movf	0,w	;code access
  9714  01D2  00AA               	movwf	??_sprintf+2
  9715  01D3  082A               	movf	??_sprintf+2,w
  9716  01D4  00B4               	movwf	sprintf@c
  9717  01D5  0834               	movf	sprintf@c,w
  9718  01D6  1D03               	btfss	3,2
  9719  01D7  29D9               	goto	u297_21
  9720  01D8  29DA               	goto	u297_20
  9721  01D9                     u297_21:
  9722  01D9  2849               	goto	i1l3127
  9723  01DA                     u297_20:
  9724  01DA                     i1l3231:
  9725                           
  9726                           ;doprnt.c: 1564: *sp = 0;
  9727  01DA  0833               	movf	sprintf@sp,w
  9728  01DB  0086               	movwf	6
  9729  01DC  0187               	clrf	7
  9730  01DD  0181               	clrf	1
  9731  01DE                     i1l1140:
  9732  01DE  0008               	return
  9733  01DF                     __end_of_sprintf:
  9734                           
  9735                           	psect	text22
  9736  0D95                     __ptext22:	
  9737 ;; *************** function _isdigit *****************
  9738 ;; Defined at:
  9739 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;  c               1    wreg     unsigned char 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;  c               1    1[COMMON] unsigned char 
  9744 ;; Return value:  Size  Location     Type
  9745 ;;		None               void
  9746 ;; Registers used:
  9747 ;;		wreg, status,2, status,0
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;Total ram usage:        2 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; This function calls:
  9760 ;;		Nothing
  9761 ;; This function is called by:
  9762 ;;		_sprintf
  9763 ;; This function uses a non-reentrant model
  9764 ;;
  9765                           
  9766                           
  9767                           ;psect for function _isdigit
  9768  0D95                     _isdigit:
  9769                           
  9770                           ;incstack = 0
  9771                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9772                           ;isdigit@c stored from wreg
  9773  0D95  00F1               	movwf	isdigit@c
  9774  0D96                     i1l2895:
  9775  0D96  01F0               	clrf	_isdigit$2263
  9776  0D97                     i1l2897:
  9777  0D97  303A               	movlw	58
  9778  0D98  0271               	subwf	isdigit@c,w
  9779  0D99  1803               	skipnc
  9780  0D9A  2D9C               	goto	u215_21
  9781  0D9B  2D9D               	goto	u215_20
  9782  0D9C                     u215_21:
  9783  0D9C  2DA5               	goto	i1l2903
  9784  0D9D                     u215_20:
  9785  0D9D                     i1l2899:
  9786  0D9D  3030               	movlw	48
  9787  0D9E  0271               	subwf	isdigit@c,w
  9788  0D9F  1C03               	skipc
  9789  0DA0  2DA2               	goto	u216_21
  9790  0DA1  2DA3               	goto	u216_20
  9791  0DA2                     u216_21:
  9792  0DA2  2DA5               	goto	i1l2903
  9793  0DA3                     u216_20:
  9794  0DA3                     i1l2901:
  9795  0DA3  01F0               	clrf	_isdigit$2263
  9796  0DA4  0AF0               	incf	_isdigit$2263,f
  9797  0DA5                     i1l2903:
  9798  0DA5  0C70               	rrf	_isdigit$2263,w
  9799  0DA6                     i1l1597:
  9800  0DA6  0008               	return
  9801  0DA7                     __end_of_isdigit:
  9802                           
  9803                           	psect	text23
  9804  0EB6                     __ptext23:	
  9805 ;; *************** function ___lwmod *****************
  9806 ;; Defined at:
  9807 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  9808 ;; Parameters:    Size  Location     Type
  9809 ;;  divisor         2    8[COMMON] unsigned int 
  9810 ;;  dividend        2   10[COMMON] unsigned int 
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;  counter         1   13[COMMON] unsigned char 
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  2    8[COMMON] unsigned int 
  9815 ;; Registers used:
  9816 ;;		wreg, status,2, status,0
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9822 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;Total ram usage:        6 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; This function calls:
  9829 ;;		Nothing
  9830 ;; This function is called by:
  9831 ;;		_sprintf
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           
  9836                           ;psect for function ___lwmod
  9837  0EB6                     ___lwmod:
  9838  0EB6                     i1l2991:	
  9839                           ;incstack = 0
  9840                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9841                           
  9842  0EB6  0878               	movf	___lwmod@divisor,w
  9843  0EB7  0479               	iorwf	___lwmod@divisor+1,w
  9844  0EB8  1903               	btfsc	3,2
  9845  0EB9  2EBB               	goto	u238_21
  9846  0EBA  2EBC               	goto	u238_20
  9847  0EBB                     u238_21:
  9848  0EBB  2EE5               	goto	i1l3009
  9849  0EBC                     u238_20:
  9850  0EBC                     i1l2993:
  9851  0EBC  01FD               	clrf	___lwmod@counter
  9852  0EBD  0AFD               	incf	___lwmod@counter,f
  9853  0EBE  2EC8               	goto	i1l2999
  9854  0EBF                     i1l2995:
  9855  0EBF  3001               	movlw	1
  9856  0EC0                     u239_25:
  9857  0EC0  35F8               	lslf	___lwmod@divisor,f
  9858  0EC1  0DF9               	rlf	___lwmod@divisor+1,f
  9859  0EC2  0B89               	decfsz	9,f
  9860  0EC3  2EC0               	goto	u239_25
  9861  0EC4                     i1l2997:
  9862  0EC4  3001               	movlw	1
  9863  0EC5  00FC               	movwf	??___lwmod
  9864  0EC6  087C               	movf	??___lwmod,w
  9865  0EC7  07FD               	addwf	___lwmod@counter,f
  9866  0EC8                     i1l2999:
  9867  0EC8  1FF9               	btfss	___lwmod@divisor+1,7
  9868  0EC9  2ECB               	goto	u240_21
  9869  0ECA  2ECC               	goto	u240_20
  9870  0ECB                     u240_21:
  9871  0ECB  2EBF               	goto	i1l2995
  9872  0ECC                     u240_20:
  9873  0ECC                     i1l3001:
  9874  0ECC  0879               	movf	___lwmod@divisor+1,w
  9875  0ECD  027B               	subwf	___lwmod@dividend+1,w
  9876  0ECE  1D03               	skipz
  9877  0ECF  2ED2               	goto	u241_25
  9878  0ED0  0878               	movf	___lwmod@divisor,w
  9879  0ED1  027A               	subwf	___lwmod@dividend,w
  9880  0ED2                     u241_25:
  9881  0ED2  1C03               	skipc
  9882  0ED3  2ED5               	goto	u241_21
  9883  0ED4  2ED6               	goto	u241_20
  9884  0ED5                     u241_21:
  9885  0ED5  2EDA               	goto	i1l3005
  9886  0ED6                     u241_20:
  9887  0ED6                     i1l3003:
  9888  0ED6  0878               	movf	___lwmod@divisor,w
  9889  0ED7  02FA               	subwf	___lwmod@dividend,f
  9890  0ED8  0879               	movf	___lwmod@divisor+1,w
  9891  0ED9  3BFB               	subwfb	___lwmod@dividend+1,f
  9892  0EDA                     i1l3005:
  9893  0EDA  3001               	movlw	1
  9894  0EDB                     u242_25:
  9895  0EDB  36F9               	lsrf	___lwmod@divisor+1,f
  9896  0EDC  0CF8               	rrf	___lwmod@divisor,f
  9897  0EDD  0B89               	decfsz	9,f
  9898  0EDE  2EDB               	goto	u242_25
  9899  0EDF                     i1l3007:
  9900  0EDF  3001               	movlw	1
  9901  0EE0  02FD               	subwf	___lwmod@counter,f
  9902  0EE1  1D03               	btfss	3,2
  9903  0EE2  2EE4               	goto	u243_21
  9904  0EE3  2EE5               	goto	u243_20
  9905  0EE4                     u243_21:
  9906  0EE4  2ECC               	goto	i1l3001
  9907  0EE5                     u243_20:
  9908  0EE5                     i1l3009:
  9909  0EE5  087B               	movf	___lwmod@dividend+1,w
  9910  0EE6  00F9               	movwf	?___lwmod+1
  9911  0EE7  087A               	movf	___lwmod@dividend,w
  9912  0EE8  00F8               	movwf	?___lwmod
  9913  0EE9                     i1l1426:
  9914  0EE9  0008               	return
  9915  0EEA                     __end_of___lwmod:
  9916                           
  9917                           	psect	text24
  9918  0EEA                     __ptext24:	
  9919 ;; *************** function ___lwdiv *****************
  9920 ;; Defined at:
  9921 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;  divisor         2    0[COMMON] unsigned int 
  9924 ;;  dividend        2    2[COMMON] unsigned int 
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;  quotient        2    5[COMMON] unsigned int 
  9927 ;;  counter         1    7[COMMON] unsigned char 
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  2    0[COMMON] unsigned int 
  9930 ;; Registers used:
  9931 ;;		wreg, status,2, status,0
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9938 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;Total ram usage:        8 bytes
  9942 ;; Hardware stack levels used:    1
  9943 ;; This function calls:
  9944 ;;		Nothing
  9945 ;; This function is called by:
  9946 ;;		_sprintf
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           
  9951                           ;psect for function ___lwdiv
  9952  0EEA                     ___lwdiv:
  9953  0EEA                     i1l2965:	
  9954                           ;incstack = 0
  9955                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9956                           
  9957  0EEA  01F5               	clrf	___lwdiv@quotient
  9958  0EEB  01F6               	clrf	___lwdiv@quotient+1
  9959  0EEC                     i1l2967:
  9960  0EEC  0870               	movf	___lwdiv@divisor,w
  9961  0EED  0471               	iorwf	___lwdiv@divisor+1,w
  9962  0EEE  1903               	btfsc	3,2
  9963  0EEF  2EF1               	goto	u231_21
  9964  0EF0  2EF2               	goto	u231_20
  9965  0EF1                     u231_21:
  9966  0EF1  2F21               	goto	i1l2987
  9967  0EF2                     u231_20:
  9968  0EF2                     i1l2969:
  9969  0EF2  01F7               	clrf	___lwdiv@counter
  9970  0EF3  0AF7               	incf	___lwdiv@counter,f
  9971  0EF4  2EFE               	goto	i1l2975
  9972  0EF5                     i1l2971:
  9973  0EF5  3001               	movlw	1
  9974  0EF6                     u232_25:
  9975  0EF6  35F0               	lslf	___lwdiv@divisor,f
  9976  0EF7  0DF1               	rlf	___lwdiv@divisor+1,f
  9977  0EF8  0B89               	decfsz	9,f
  9978  0EF9  2EF6               	goto	u232_25
  9979  0EFA                     i1l2973:
  9980  0EFA  3001               	movlw	1
  9981  0EFB  00F4               	movwf	??___lwdiv
  9982  0EFC  0874               	movf	??___lwdiv,w
  9983  0EFD  07F7               	addwf	___lwdiv@counter,f
  9984  0EFE                     i1l2975:
  9985  0EFE  1FF1               	btfss	___lwdiv@divisor+1,7
  9986  0EFF  2F01               	goto	u233_21
  9987  0F00  2F02               	goto	u233_20
  9988  0F01                     u233_21:
  9989  0F01  2EF5               	goto	i1l2971
  9990  0F02                     u233_20:
  9991  0F02                     i1l2977:
  9992  0F02  3001               	movlw	1
  9993  0F03                     u234_25:
  9994  0F03  35F5               	lslf	___lwdiv@quotient,f
  9995  0F04  0DF6               	rlf	___lwdiv@quotient+1,f
  9996  0F05  0B89               	decfsz	9,f
  9997  0F06  2F03               	goto	u234_25
  9998  0F07  0871               	movf	___lwdiv@divisor+1,w
  9999  0F08  0273               	subwf	___lwdiv@dividend+1,w
 10000  0F09  1D03               	skipz
 10001  0F0A  2F0D               	goto	u235_25
 10002  0F0B  0870               	movf	___lwdiv@divisor,w
 10003  0F0C  0272               	subwf	___lwdiv@dividend,w
 10004  0F0D                     u235_25:
 10005  0F0D  1C03               	skipc
 10006  0F0E  2F10               	goto	u235_21
 10007  0F0F  2F11               	goto	u235_20
 10008  0F10                     u235_21:
 10009  0F10  2F16               	goto	i1l2983
 10010  0F11                     u235_20:
 10011  0F11                     i1l2979:
 10012  0F11  0870               	movf	___lwdiv@divisor,w
 10013  0F12  02F2               	subwf	___lwdiv@dividend,f
 10014  0F13  0871               	movf	___lwdiv@divisor+1,w
 10015  0F14  3BF3               	subwfb	___lwdiv@dividend+1,f
 10016  0F15                     i1l2981:
 10017  0F15  1475               	bsf	___lwdiv@quotient,0
 10018  0F16                     i1l2983:
 10019  0F16  3001               	movlw	1
 10020  0F17                     u236_25:
 10021  0F17  36F1               	lsrf	___lwdiv@divisor+1,f
 10022  0F18  0CF0               	rrf	___lwdiv@divisor,f
 10023  0F19  0B89               	decfsz	9,f
 10024  0F1A  2F17               	goto	u236_25
 10025  0F1B                     i1l2985:
 10026  0F1B  3001               	movlw	1
 10027  0F1C  02F7               	subwf	___lwdiv@counter,f
 10028  0F1D  1D03               	btfss	3,2
 10029  0F1E  2F20               	goto	u237_21
 10030  0F1F  2F21               	goto	u237_20
 10031  0F20                     u237_21:
 10032  0F20  2F02               	goto	i1l2977
 10033  0F21                     u237_20:
 10034  0F21                     i1l2987:
 10035  0F21  0876               	movf	___lwdiv@quotient+1,w
 10036  0F22  00F1               	movwf	?___lwdiv+1
 10037  0F23  0875               	movf	___lwdiv@quotient,w
 10038  0F24  00F0               	movwf	?___lwdiv
 10039  0F25                     i1l1416:
 10040  0F25  0008               	return
 10041  0F26                     __end_of___lwdiv:
 10042                           
 10043                           	psect	text25
 10044  0E19                     __ptext25:	
 10045 ;; *************** function _LCDstr *****************
 10046 ;; Defined at:
 10047 ;;		line 183 in file "main.c"
 10048 ;; Parameters:    Size  Location     Type
 10049 ;;  p               2    9[COMMON] PTR unsigned char 
 10050 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), STR_2(6), menuLCD_ISR@str(8), 
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;  c               1    0[BANK0 ] unsigned char 
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10063 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10064 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10065 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10066 ;;Total ram usage:        6 bytes
 10067 ;; Hardware stack levels used:    1
 10068 ;; Hardware stack levels required when called:    3
 10069 ;; This function calls:
 10070 ;;		_LCDchar
 10071 ;; This function is called by:
 10072 ;;		_menuLCD_ISR
 10073 ;; This function uses a non-reentrant model
 10074 ;;
 10075                           
 10076                           
 10077                           ;psect for function _LCDstr
 10078  0E19                     _LCDstr:
 10079  0E19                     i1l3101:	
 10080                           ;incstack = 0
 10081                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10082                           
 10083                           
 10084                           ;main.c: 185: unsigned char c;;main.c: 187: while((c = *p++)) LCDchar(c);
 10085  0E19  2E1E               	goto	i1l3105
 10086  0E1A                     i1l3103:
 10087  0E1A  0820               	movf	LCDstr@c,w
 10088  0E1B  318D  252A  318E   	fcall	_LCDchar
 10089  0E1E                     i1l3105:
 10090  0E1E  087A               	movf	LCDstr@p+1,w
 10091  0E1F  00FC               	movwf	??_LCDstr+1
 10092  0E20  0879               	movf	LCDstr@p,w
 10093  0E21  00FB               	movwf	??_LCDstr
 10094  0E22  0AF9               	incf	LCDstr@p,f
 10095  0E23  1903               	skipnz
 10096  0E24  0AFA               	incf	LCDstr@p+1,f
 10097  0E25  087B               	movf	??_LCDstr,w
 10098  0E26  0084               	movwf	4
 10099  0E27  087C               	movf	??_LCDstr+1,w
 10100  0E28  0085               	movwf	5
 10101  0E29  0800               	movf	0,w	;code access
 10102  0E2A  00FD               	movwf	??_LCDstr+2
 10103  0E2B  087D               	movf	??_LCDstr+2,w
 10104  0E2C  0020               	movlb	0	; select bank0
 10105  0E2D  00A0               	movwf	LCDstr@c
 10106  0E2E  0820               	movf	LCDstr@c,w
 10107  0E2F  1D03               	btfss	3,2
 10108  0E30  2E32               	goto	u278_21
 10109  0E31  2E33               	goto	u278_20
 10110  0E32                     u278_21:
 10111  0E32  2E1A               	goto	i1l3103
 10112  0E33                     u278_20:
 10113  0E33                     i1l742:
 10114  0E33  0008               	return
 10115  0E34                     __end_of_LCDstr:
 10116                           
 10117                           	psect	text26
 10118  0D2A                     __ptext26:	
 10119 ;; *************** function _LCDchar *****************
 10120 ;; Defined at:
 10121 ;;		line 178 in file "main.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;  c               1    wreg     unsigned char 
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;  c               1    8[COMMON] unsigned char 
 10126 ;; Return value:  Size  Location     Type
 10127 ;;                  1    wreg      void 
 10128 ;; Registers used:
 10129 ;;		wreg, status,2, status,0, pclath, cstack
 10130 ;; Tracked objects:
 10131 ;;		On entry : 0/0
 10132 ;;		On exit  : 0/0
 10133 ;;		Unchanged: 0/0
 10134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;Total ram usage:        1 bytes
 10140 ;; Hardware stack levels used:    1
 10141 ;; Hardware stack levels required when called:    2
 10142 ;; This function calls:
 10143 ;;		i1_LCDsend2x4
 10144 ;; This function is called by:
 10145 ;;		_LCDstr
 10146 ;; This function uses a non-reentrant model
 10147 ;;
 10148                           
 10149                           
 10150                           ;psect for function _LCDchar
 10151  0D2A                     _LCDchar:
 10152                           
 10153                           ;incstack = 0
 10154                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 10155                           ;LCDchar@c stored from wreg
 10156  0D2A  00F8               	movwf	LCDchar@c
 10157  0D2B                     i1l2893:
 10158                           
 10159                           ;main.c: 180: LCDsend2x4(c, 0x01);
 10160  0D2B  01F2               	clrf	i1LCDsend2x4@mode
 10161  0D2C  0AF2               	incf	i1LCDsend2x4@mode,f
 10162  0D2D  0878               	movf	LCDchar@c,w
 10163  0D2E  3183  23C0  318D   	fcall	i1_LCDsend2x4
 10164  0D31                     i1l736:
 10165  0D31  0008               	return
 10166  0D32                     __end_of_LCDchar:
 10167                           
 10168                           	psect	text27
 10169  0D23                     __ptext27:	
 10170 ;; *************** function _LCDcmd *****************
 10171 ;; Defined at:
 10172 ;;		line 173 in file "main.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;  c               1    wreg     unsigned char 
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;  c               1    8[COMMON] unsigned char 
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  1    wreg      void 
 10179 ;; Registers used:
 10180 ;;		wreg, status,2, status,0, pclath, cstack
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10189 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10190 ;;Total ram usage:        1 bytes
 10191 ;; Hardware stack levels used:    1
 10192 ;; Hardware stack levels required when called:    2
 10193 ;; This function calls:
 10194 ;;		i1_LCDsend2x4
 10195 ;; This function is called by:
 10196 ;;		_menuLCD_ISR
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           
 10200                           
 10201                           ;psect for function _LCDcmd
 10202  0D23                     _LCDcmd:
 10203                           
 10204                           ;incstack = 0
 10205                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 10206                           ;LCDcmd@c stored from wreg
 10207  0D23  00F8               	movwf	LCDcmd@c
 10208  0D24                     i1l3099:
 10209                           
 10210                           ;main.c: 175: LCDsend2x4(c, 0);
 10211  0D24  01F2               	clrf	i1LCDsend2x4@mode
 10212  0D25  0878               	movf	LCDcmd@c,w
 10213  0D26  3183  23C0  318D   	fcall	i1_LCDsend2x4
 10214  0D29                     i1l733:
 10215  0D29  0008               	return
 10216  0D2A                     __end_of_LCDcmd:
 10217                           
 10218                           	psect	text28
 10219  03C0                     __ptext28:	
 10220 ;; *************** function i1_LCDsend2x4 *****************
 10221 ;; Defined at:
 10222 ;;		line 127 in file "main.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;  c               1    wreg     unsigned char 
 10225 ;;  mode            1    2[COMMON] unsigned char 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;  c               1    5[COMMON] unsigned char 
 10228 ;;  lc              1    7[COMMON] unsigned char 
 10229 ;;  hc              1    6[COMMON] unsigned char 
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      void 
 10232 ;; Registers used:
 10233 ;;		wreg, status,2, status,0, pclath, cstack
 10234 ;; Tracked objects:
 10235 ;;		On entry : 0/0
 10236 ;;		On exit  : 0/0
 10237 ;;		Unchanged: 0/0
 10238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10239 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10242 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10243 ;;Total ram usage:        6 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; Hardware stack levels required when called:    1
 10246 ;; This function calls:
 10247 ;;		i1_WriteI2C
 10248 ;; This function is called by:
 10249 ;;		_LCDcmd
 10250 ;;		_LCDchar
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           
 10255                           ;psect for function i1_LCDsend2x4
 10256  03C0                     i1_LCDsend2x4:
 10257                           
 10258                           ;incstack = 0
 10259                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 10260                           ;i1LCDsend2x4@c stored from wreg
 10261  03C0  00F5               	movwf	i1LCDsend2x4@c
 10262  03C1                     i1l2847:
 10263                           
 10264                           ;main.c: 129: unsigned char hc;;main.c: 130: unsigned char lc;;main.c: 132: hc = c & 0xf
      +                          0;
 10265  03C1  0875               	movf	i1LCDsend2x4@c,w
 10266  03C2  39F0               	andlw	240
 10267  03C3  00F3               	movwf	??i1_LCDsend2x4
 10268  03C4  0873               	movf	??i1_LCDsend2x4,w
 10269  03C5  00F6               	movwf	i1LCDsend2x4@hc
 10270  03C6                     i1l2849:
 10271                           
 10272                           ;main.c: 133: lc = (c << 4) & 0xf0;
 10273  03C6  0875               	movf	i1LCDsend2x4@c,w
 10274  03C7  00F3               	movwf	??i1_LCDsend2x4
 10275  03C8  3003               	movlw	3
 10276  03C9                     u200_25:
 10277  03C9  35F3               	lslf	??i1_LCDsend2x4,f
 10278  03CA  3EFF               	addlw	-1
 10279  03CB  1D03               	skipz
 10280  03CC  2BC9               	goto	u200_25
 10281  03CD  3573               	lslf	??i1_LCDsend2x4,w
 10282  03CE  39F0               	andlw	240
 10283  03CF  00F4               	movwf	??i1_LCDsend2x4+1
 10284  03D0  0874               	movf	??i1_LCDsend2x4+1,w
 10285  03D1  00F7               	movwf	i1LCDsend2x4@lc
 10286  03D2                     i1l2851:	
 10287                           ;main.c: 135: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10288                           
 10289  03D2  0023               	movlb	3	; select bank3
 10290  03D3  0C0F               	rrf	15,w	;volatile
 10291  03D4  0C89               	rrf	9,f
 10292  03D5  3901               	andlw	1
 10293  03D6  00F3               	movwf	??i1_LCDsend2x4
 10294  03D7  0811               	movf	17,w	;volatile
 10295  03D8  391F               	andlw	31
 10296  03D9  0473               	iorwf	??i1_LCDsend2x4,w
 10297  03DA  1D03               	btfss	3,2
 10298  03DB  2BDD               	goto	u201_21
 10299  03DC  2BDE               	goto	u201_20
 10300  03DD                     u201_21:
 10301  03DD  2BD2               	goto	i1l2851
 10302  03DE                     u201_20:
 10303  03DE                     i1l696:
 10304                           
 10305                           ;main.c: 136: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 10306  03DE  1411               	bsf	17,0	;volatile
 10307  03DF                     i1l697:
 10308  03DF  1811               	btfsc	17,0	;volatile
 10309  03E0  2BE2               	goto	u202_21
 10310  03E1  2BE3               	goto	u202_20
 10311  03E2                     u202_21:
 10312  03E2  2BDF               	goto	i1l697
 10313  03E3                     u202_20:
 10314  03E3                     i1l2853:
 10315  03E3  0C0F               	rrf	15,w	;volatile
 10316  03E4  0C89               	rrf	9,f
 10317  03E5  3901               	andlw	1
 10318  03E6  00F3               	movwf	??i1_LCDsend2x4
 10319  03E7  0811               	movf	17,w	;volatile
 10320  03E8  391F               	andlw	31
 10321  03E9  0473               	iorwf	??i1_LCDsend2x4,w
 10322  03EA  1D03               	btfss	3,2
 10323  03EB  2BED               	goto	u203_21
 10324  03EC  2BEE               	goto	u203_20
 10325  03ED                     u203_21:
 10326  03ED  2BE3               	goto	i1l2853
 10327  03EE                     u203_20:
 10328  03EE                     i1l2855:
 10329                           
 10330                           ;main.c: 137: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10331  03EE  304E               	movlw	78
 10332  03EF  318F  2762  3183   	fcall	i1_WriteI2C
 10333  03F2                     i1l2857:
 10334  03F2  0023               	movlb	3	; select bank3
 10335  03F3  0C0F               	rrf	15,w	;volatile
 10336  03F4  0C89               	rrf	9,f
 10337  03F5  3901               	andlw	1
 10338  03F6  00F3               	movwf	??i1_LCDsend2x4
 10339  03F7  0811               	movf	17,w	;volatile
 10340  03F8  391F               	andlw	31
 10341  03F9  0473               	iorwf	??i1_LCDsend2x4,w
 10342  03FA  1D03               	btfss	3,2
 10343  03FB  2BFD               	goto	u204_21
 10344  03FC  2BFE               	goto	u204_20
 10345  03FD                     u204_21:
 10346  03FD  2BF2               	goto	i1l2857
 10347  03FE                     u204_20:
 10348  03FE                     i1l2859:
 10349                           
 10350                           ;main.c: 138: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10351  03FE  0876               	movf	i1LCDsend2x4@hc,w
 10352  03FF  0472               	iorwf	i1LCDsend2x4@mode,w
 10353  0400  3808               	iorlw	8
 10354  0401  318F  2762  3183   	fcall	i1_WriteI2C
 10355  0404                     i1l2861:
 10356  0404  0023               	movlb	3	; select bank3
 10357  0405  0C0F               	rrf	15,w	;volatile
 10358  0406  0C89               	rrf	9,f
 10359  0407  3901               	andlw	1
 10360  0408  00F3               	movwf	??i1_LCDsend2x4
 10361  0409  0811               	movf	17,w	;volatile
 10362  040A  391F               	andlw	31
 10363  040B  0473               	iorwf	??i1_LCDsend2x4,w
 10364  040C  1D03               	btfss	3,2
 10365  040D  2C0F               	goto	u205_21
 10366  040E  2C10               	goto	u205_20
 10367  040F                     u205_21:
 10368  040F  2C04               	goto	i1l2861
 10369  0410                     u205_20:
 10370  0410                     i1l2863:
 10371                           
 10372                           ;main.c: 139: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 10373  0410  0876               	movf	i1LCDsend2x4@hc,w
 10374  0411  0472               	iorwf	i1LCDsend2x4@mode,w
 10375  0412  380C               	iorlw	12
 10376  0413  318F  2762  3183   	fcall	i1_WriteI2C
 10377  0416                     i1l2865:
 10378  0416  0023               	movlb	3	; select bank3
 10379  0417  0C0F               	rrf	15,w	;volatile
 10380  0418  0C89               	rrf	9,f
 10381  0419  3901               	andlw	1
 10382  041A  00F3               	movwf	??i1_LCDsend2x4
 10383  041B  0811               	movf	17,w	;volatile
 10384  041C  391F               	andlw	31
 10385  041D  0473               	iorwf	??i1_LCDsend2x4,w
 10386  041E  1D03               	btfss	3,2
 10387  041F  2C21               	goto	u206_21
 10388  0420  2C22               	goto	u206_20
 10389  0421                     u206_21:
 10390  0421  2C16               	goto	i1l2865
 10391  0422                     u206_20:
 10392  0422                     i1l711:
 10393  0422                     i1l2867:	
 10394                           ;main.c: 140: _delay((unsigned long)((1)*(1000000/4000000.0)));
 10395                           
 10396                           
 10397                           ;main.c: 141: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10398  0422  0876               	movf	i1LCDsend2x4@hc,w
 10399  0423  0472               	iorwf	i1LCDsend2x4@mode,w
 10400  0424  3808               	iorlw	8
 10401  0425  318F  2762  3183   	fcall	i1_WriteI2C
 10402  0428                     i1l2869:
 10403  0428  0023               	movlb	3	; select bank3
 10404  0429  0C0F               	rrf	15,w	;volatile
 10405  042A  0C89               	rrf	9,f
 10406  042B  3901               	andlw	1
 10407  042C  00F3               	movwf	??i1_LCDsend2x4
 10408  042D  0811               	movf	17,w	;volatile
 10409  042E  391F               	andlw	31
 10410  042F  0473               	iorwf	??i1_LCDsend2x4,w
 10411  0430  1D03               	btfss	3,2
 10412  0431  2C33               	goto	u207_21
 10413  0432  2C34               	goto	u207_20
 10414  0433                     u207_21:
 10415  0433  2C28               	goto	i1l2869
 10416  0434                     u207_20:
 10417  0434                     i1l2871:
 10418                           
 10419                           ;main.c: 142: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10420  0434  0877               	movf	i1LCDsend2x4@lc,w
 10421  0435  0472               	iorwf	i1LCDsend2x4@mode,w
 10422  0436  3808               	iorlw	8
 10423  0437  318F  2762  3183   	fcall	i1_WriteI2C
 10424  043A                     i1l2873:
 10425  043A  0023               	movlb	3	; select bank3
 10426  043B  0C0F               	rrf	15,w	;volatile
 10427  043C  0C89               	rrf	9,f
 10428  043D  3901               	andlw	1
 10429  043E  00F3               	movwf	??i1_LCDsend2x4
 10430  043F  0811               	movf	17,w	;volatile
 10431  0440  391F               	andlw	31
 10432  0441  0473               	iorwf	??i1_LCDsend2x4,w
 10433  0442  1D03               	btfss	3,2
 10434  0443  2C45               	goto	u208_21
 10435  0444  2C46               	goto	u208_20
 10436  0445                     u208_21:
 10437  0445  2C3A               	goto	i1l2873
 10438  0446                     u208_20:
 10439  0446                     i1l2875:
 10440                           
 10441                           ;main.c: 143: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 10442  0446  0877               	movf	i1LCDsend2x4@lc,w
 10443  0447  0472               	iorwf	i1LCDsend2x4@mode,w
 10444  0448  380C               	iorlw	12
 10445  0449  318F  2762  3183   	fcall	i1_WriteI2C
 10446  044C                     i1l2877:
 10447  044C  0023               	movlb	3	; select bank3
 10448  044D  0C0F               	rrf	15,w	;volatile
 10449  044E  0C89               	rrf	9,f
 10450  044F  3901               	andlw	1
 10451  0450  00F3               	movwf	??i1_LCDsend2x4
 10452  0451  0811               	movf	17,w	;volatile
 10453  0452  391F               	andlw	31
 10454  0453  0473               	iorwf	??i1_LCDsend2x4,w
 10455  0454  1D03               	btfss	3,2
 10456  0455  2C57               	goto	u209_21
 10457  0456  2C58               	goto	u209_20
 10458  0457                     u209_21:
 10459  0457  2C4C               	goto	i1l2877
 10460  0458                     u209_20:
 10461  0458                     i1l720:
 10462  0458                     i1l2879:	
 10463                           ;main.c: 144: _delay((unsigned long)((1)*(1000000/4000000.0)));
 10464                           
 10465                           
 10466                           ;main.c: 145: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10467  0458  0877               	movf	i1LCDsend2x4@lc,w
 10468  0459  0472               	iorwf	i1LCDsend2x4@mode,w
 10469  045A  3808               	iorlw	8
 10470  045B  318F  2762  3183   	fcall	i1_WriteI2C
 10471  045E                     i1l2881:
 10472  045E  0023               	movlb	3	; select bank3
 10473  045F  0C0F               	rrf	15,w	;volatile
 10474  0460  0C89               	rrf	9,f
 10475  0461  3901               	andlw	1
 10476  0462  00F3               	movwf	??i1_LCDsend2x4
 10477  0463  0811               	movf	17,w	;volatile
 10478  0464  391F               	andlw	31
 10479  0465  0473               	iorwf	??i1_LCDsend2x4,w
 10480  0466  1D03               	btfss	3,2
 10481  0467  2C69               	goto	u210_21
 10482  0468  2C6A               	goto	u210_20
 10483  0469                     u210_21:
 10484  0469  2C5E               	goto	i1l2881
 10485  046A                     u210_20:
 10486  046A                     i1l723:
 10487                           
 10488                           ;main.c: 146: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 10489  046A  1511               	bsf	17,2	;volatile
 10490  046B                     i1l724:
 10491  046B  1911               	btfsc	17,2	;volatile
 10492  046C  2C6E               	goto	u211_21
 10493  046D  2C6F               	goto	u211_20
 10494  046E                     u211_21:
 10495  046E  2C6B               	goto	i1l724
 10496  046F                     u211_20:
 10497  046F                     i1l2883:
 10498                           
 10499                           ;main.c: 147: _delay((unsigned long)((50)*(1000000/4000000.0)));
 10500  046F  3004               	movlw	4
 10501  0470                     u460_27:
 10502  0470  0B89               	decfsz	9,f
 10503  0471  2C70               	goto	u460_27
 10504  0472                     i1l727:
 10505  0472  0008               	return
 10506  0473                     __end_ofi1_LCDsend2x4:
 10507                           
 10508                           	psect	text29
 10509  0D72                     __ptext29:	
 10510 ;; *************** function _TMR3_WriteTimer *****************
 10511 ;; Defined at:
 10512 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;  timerVal        2    0[COMMON] unsigned int 
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;		None
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  1    wreg      void 
 10519 ;; Registers used:
 10520 ;;		wreg, status,2
 10521 ;; Tracked objects:
 10522 ;;		On entry : 0/0
 10523 ;;		On exit  : 0/0
 10524 ;;		Unchanged: 0/0
 10525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10530 ;;Total ram usage:        2 bytes
 10531 ;; Hardware stack levels used:    1
 10532 ;; This function calls:
 10533 ;;		Nothing
 10534 ;; This function is called by:
 10535 ;;		_TMR3_ISR
 10536 ;;		_TMR3_Reload
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           
 10541                           ;psect for function _TMR3_WriteTimer
 10542  0D72                     _TMR3_WriteTimer:
 10543  0D72                     i1l3355:	
 10544                           ;incstack = 0
 10545                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 10546                           
 10547                           
 10548                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 10549  0D72  0024               	movlb	4	; select bank4
 10550  0D73  1D14               	btfss	20,2	;volatile
 10551  0D74  2D76               	goto	u299_21
 10552  0D75  2D77               	goto	u299_20
 10553  0D76                     u299_21:
 10554  0D76  2D7E               	goto	i1l3365
 10555  0D77                     u299_20:
 10556  0D77                     i1l3357:
 10557                           
 10558                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 10559  0D77  1014               	bcf	20,0	;volatile
 10560  0D78                     i1l3359:
 10561                           
 10562                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 10563  0D78  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 10564  0D79  0093               	movwf	19	;volatile
 10565  0D7A                     i1l3361:
 10566                           
 10567                           ;tmr3.c: 136: TMR3L = timerVal;
 10568  0D7A  0870               	movf	TMR3_WriteTimer@timerVal,w
 10569  0D7B  0092               	movwf	18	;volatile
 10570  0D7C                     i1l3363:
 10571                           
 10572                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 10573  0D7C  1414               	bsf	20,0	;volatile
 10574                           
 10575                           ;tmr3.c: 140: }
 10576  0D7D  2D82               	goto	i1l453
 10577  0D7E                     i1l3365:
 10578                           
 10579                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 10580  0D7E  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 10581  0D7F  0093               	movwf	19	;volatile
 10582  0D80                     i1l3367:
 10583                           
 10584                           ;tmr3.c: 145: TMR3L = timerVal;
 10585  0D80  0870               	movf	TMR3_WriteTimer@timerVal,w
 10586  0D81  0092               	movwf	18	;volatile
 10587  0D82                     i1l453:
 10588  0D82  0008               	return
 10589  0D83                     __end_of_TMR3_WriteTimer:
 10590                           
 10591                           	psect	text30
 10592  0DBA                     __ptext30:	
 10593 ;; *************** function _TMR1_ISR *****************
 10594 ;; Defined at:
 10595 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;		None
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;		None
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  1    wreg      void 
 10602 ;; Registers used:
 10603 ;;		wreg, status,2, status,0, pclath, cstack
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10613 ;;Total ram usage:        0 bytes
 10614 ;; Hardware stack levels used:    1
 10615 ;; Hardware stack levels required when called:    3
 10616 ;; This function calls:
 10617 ;;		Absolute function
 10618 ;;		_Clock_ISR
 10619 ;;		_TMR1_DefaultInterruptHandler
 10620 ;;		_TMR1_WriteTimer
 10621 ;; This function is called by:
 10622 ;;		_INTERRUPT_InterruptManager
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626                           
 10627                           ;psect for function _TMR1_ISR
 10628  0DBA                     _TMR1_ISR:
 10629  0DBA                     i1l3495:	
 10630                           ;incstack = 0
 10631                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 10632                           
 10633                           
 10634                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 10635  0DBA  002E               	movlb	14	; select bank14
 10636  0DBB  1010               	bcf	16,0	;volatile
 10637  0DBC                     i1l3497:
 10638                           
 10639                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 10640  0DBC  0020               	movlb	0	; select bank0
 10641  0DBD  085A               	movf	_timer1ReloadVal+1,w	;volatile
 10642  0DBE  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 10643  0DBF  0859               	movf	_timer1ReloadVal,w	;volatile
 10644  0DC0  00F0               	movwf	TMR1_WriteTimer@timerVal
 10645  0DC1  318D  2561  318D   	fcall	_TMR1_WriteTimer
 10646  0DC4                     i1l3499:
 10647                           
 10648                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 10649  0DC4  0020               	movlb	0	; select bank0
 10650  0DC5  0857               	movf	_TMR1_InterruptHandler,w
 10651  0DC6  0458               	iorwf	_TMR1_InterruptHandler+1,w
 10652  0DC7  1903               	btfsc	3,2
 10653  0DC8  2DCA               	goto	u323_21
 10654  0DC9  2DCB               	goto	u323_20
 10655  0DCA                     u323_21:
 10656  0DCA  2DD0               	goto	i1l402
 10657  0DCB                     u323_20:
 10658  0DCB                     i1l3501:
 10659                           
 10660                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 10661  0DCB  0858               	movf	_TMR1_InterruptHandler+1,w
 10662  0DCC  008A               	movwf	10
 10663  0DCD  0857               	movf	_TMR1_InterruptHandler,w
 10664  0DCE  000A               	callw
 10665  0DCF  318D               	pagesel	$
 10666  0DD0                     i1l402:
 10667  0DD0  0008               	return
 10668  0DD1                     __end_of_TMR1_ISR:
 10669                           
 10670                           	psect	text31
 10671  0D61                     __ptext31:	
 10672 ;; *************** function _TMR1_WriteTimer *****************
 10673 ;; Defined at:
 10674 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;  timerVal        2    0[COMMON] unsigned int 
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;		None
 10679 ;; Return value:  Size  Location     Type
 10680 ;;                  1    wreg      void 
 10681 ;; Registers used:
 10682 ;;		wreg, status,2
 10683 ;; Tracked objects:
 10684 ;;		On entry : 0/0
 10685 ;;		On exit  : 0/0
 10686 ;;		Unchanged: 0/0
 10687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10691 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10692 ;;Total ram usage:        2 bytes
 10693 ;; Hardware stack levels used:    1
 10694 ;; This function calls:
 10695 ;;		Nothing
 10696 ;; This function is called by:
 10697 ;;		_TMR1_ISR
 10698 ;;		_TMR1_Reload
 10699 ;; This function uses a non-reentrant model
 10700 ;;
 10701                           
 10702                           
 10703                           ;psect for function _TMR1_WriteTimer
 10704  0D61                     _TMR1_WriteTimer:
 10705  0D61                     i1l3341:	
 10706                           ;incstack = 0
 10707                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 10708                           
 10709                           
 10710                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 10711  0D61  0024               	movlb	4	; select bank4
 10712  0D62  1D0E               	btfss	14,2	;volatile
 10713  0D63  2D65               	goto	u298_21
 10714  0D64  2D66               	goto	u298_20
 10715  0D65                     u298_21:
 10716  0D65  2D6D               	goto	i1l3351
 10717  0D66                     u298_20:
 10718  0D66                     i1l3343:
 10719                           
 10720                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 10721  0D66  100E               	bcf	14,0	;volatile
 10722  0D67                     i1l3345:
 10723                           
 10724                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 10725  0D67  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10726  0D68  008D               	movwf	13	;volatile
 10727  0D69                     i1l3347:
 10728                           
 10729                           ;tmr1.c: 136: TMR1L = timerVal;
 10730  0D69  0870               	movf	TMR1_WriteTimer@timerVal,w
 10731  0D6A  008C               	movwf	12	;volatile
 10732  0D6B                     i1l3349:
 10733                           
 10734                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 10735  0D6B  140E               	bsf	14,0	;volatile
 10736                           
 10737                           ;tmr1.c: 140: }
 10738  0D6C  2D71               	goto	i1l389
 10739  0D6D                     i1l3351:
 10740                           
 10741                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 10742  0D6D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10743  0D6E  008D               	movwf	13	;volatile
 10744  0D6F                     i1l3353:
 10745                           
 10746                           ;tmr1.c: 145: TMR1L = timerVal;
 10747  0D6F  0870               	movf	TMR1_WriteTimer@timerVal,w
 10748  0D70  008C               	movwf	12	;volatile
 10749  0D71                     i1l389:
 10750  0D71  0008               	return
 10751  0D72                     __end_of_TMR1_WriteTimer:
 10752                           
 10753                           	psect	text32
 10754  06F8                     __ptext32:	
 10755 ;; *************** function _Clock_ISR *****************
 10756 ;; Defined at:
 10757 ;;		line 224 in file "main.c"
 10758 ;; Parameters:    Size  Location     Type
 10759 ;;		None
 10760 ;; Auto vars:     Size  Location     Type
 10761 ;;  lum             1   14[BANK0 ] unsigned char 
 10762 ;; Return value:  Size  Location     Type
 10763 ;;                  1    wreg      void 
 10764 ;; Registers used:
 10765 ;;		wreg, status,2, status,0, pclath, cstack
 10766 ;; Tracked objects:
 10767 ;;		On entry : 0/0
 10768 ;;		On exit  : 0/0
 10769 ;;		Unchanged: 0/0
 10770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10772 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10773 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10774 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10775 ;;Total ram usage:        4 bytes
 10776 ;; Hardware stack levels used:    1
 10777 ;; Hardware stack levels required when called:    2
 10778 ;; This function calls:
 10779 ;;		_ADCC_GetSingleConversion
 10780 ;;		_map
 10781 ;;		_tsttc
 10782 ;; This function is called by:
 10783 ;;		_main
 10784 ;;		_TMR1_ISR
 10785 ;; This function uses a non-reentrant model
 10786 ;;
 10787                           
 10788                           
 10789                           ;psect for function _Clock_ISR
 10790  06F8                     _Clock_ISR:
 10791  06F8                     i1l3421:	
 10792                           ;incstack = 0
 10793                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0+pclath+cstack]
 10794                           
 10795                           
 10796                           ;main.c: 226: c = tsttc();
 10797  06F8  3181  21DF  3186   	fcall	_tsttc
 10798  06FB  00FB               	movwf	??_Clock_ISR
 10799  06FC  087B               	movf	??_Clock_ISR,w
 10800  06FD  0020               	movlb	0	; select bank0
 10801  06FE  00D2               	movwf	_c
 10802                           
 10803                           ;main.c: 228: uint8_t lum = ADCC_GetSingleConversion(channel_ANA0) >> 12;
 10804  06FF  3000               	movlw	0
 10805  0700  318D  2583  3186   	fcall	_ADCC_GetSingleConversion
 10806  0703  0870               	movf	?_ADCC_GetSingleConversion,w
 10807  0704  00FB               	movwf	??_Clock_ISR
 10808  0705  0871               	movf	?_ADCC_GetSingleConversion+1,w
 10809  0706  00FC               	movwf	??_Clock_ISR+1
 10810  0707  0E7C               	swapf	??_Clock_ISR+1,w
 10811  0708  390F               	andlw	15
 10812  0709  00FB               	movwf	??_Clock_ISR
 10813  070A  01FC               	clrf	??_Clock_ISR+1
 10814  070B  087B               	movf	??_Clock_ISR,w
 10815  070C  00FD               	movwf	??_Clock_ISR+2
 10816  070D  087D               	movf	??_Clock_ISR+2,w
 10817  070E  0020               	movlb	0	; select bank0
 10818  070F  00AE               	movwf	Clock_ISR@lum
 10819                           
 10820                           ;main.c: 230: lumLevel = map(lum,1,15,0,7);
 10821  0710  082E               	movf	Clock_ISR@lum,w
 10822  0711  00FB               	movwf	??_Clock_ISR
 10823  0712  01FC               	clrf	??_Clock_ISR+1
 10824  0713  087B               	movf	??_Clock_ISR,w
 10825  0714  00A4               	movwf	map@x
 10826  0715  087C               	movf	??_Clock_ISR+1,w
 10827  0716  00A5               	movwf	map@x+1
 10828  0717  3001               	movlw	1
 10829  0718  00A6               	movwf	map@in_min
 10830  0719  3000               	movlw	0
 10831  071A  00A7               	movwf	map@in_min+1
 10832  071B  300F               	movlw	15
 10833  071C  00A8               	movwf	map@in_max
 10834  071D  3000               	movlw	0
 10835  071E  00A9               	movwf	map@in_max+1
 10836  071F  3000               	movlw	0
 10837  0720  00AA               	movwf	map@out_min
 10838  0721  00AB               	movwf	map@out_min+1
 10839  0722  3007               	movlw	7
 10840  0723  00AC               	movwf	map@out_max
 10841  0724  3000               	movlw	0
 10842  0725  00AD               	movwf	map@out_max+1
 10843  0726  318E  2691  3186   	fcall	_map
 10844  0729  0020               	movlb	0	; select bank0
 10845  072A  0825               	movf	?_map+1,w
 10846  072B  00CD               	movwf	_lumLevel+1
 10847  072C  0824               	movf	?_map,w
 10848  072D  00CC               	movwf	_lumLevel
 10849  072E                     i1l3423:
 10850                           
 10851                           ;main.c: 232: t.s++;
 10852  072E  3001               	movlw	1
 10853  072F  07CA               	addwf	_t+4,f
 10854  0730  3000               	movlw	0
 10855  0731  3DCB               	addwfc	_t+5,f
 10856  0732                     i1l3425:
 10857                           
 10858                           ;main.c: 234: if(t.s==60){
 10859  0732  303C               	movlw	60
 10860  0733  064A               	xorwf	_t+4,w
 10861  0734  044B               	iorwf	_t+5,w
 10862  0735  1D03               	btfss	3,2
 10863  0736  2F38               	goto	u318_21
 10864  0737  2F39               	goto	u318_20
 10865  0738                     u318_21:
 10866  0738  2F3F               	goto	i1l3431
 10867  0739                     u318_20:
 10868  0739                     i1l3427:
 10869                           
 10870                           ;main.c: 235: t.m++;
 10871  0739  3001               	movlw	1
 10872  073A  07C8               	addwf	_t+2,f
 10873  073B  3000               	movlw	0
 10874  073C  3DC9               	addwfc	_t+3,f
 10875  073D                     i1l3429:
 10876                           
 10877                           ;main.c: 236: t.s=0;
 10878  073D  01CA               	clrf	_t+4
 10879  073E  01CB               	clrf	_t+5
 10880  073F                     i1l3431:
 10881                           
 10882                           ;main.c: 237: };main.c: 238: if(t.m==60){
 10883  073F  303C               	movlw	60
 10884  0740  0648               	xorwf	_t+2,w
 10885  0741  0449               	iorwf	_t+3,w
 10886  0742  1D03               	btfss	3,2
 10887  0743  2F45               	goto	u319_21
 10888  0744  2F46               	goto	u319_20
 10889  0745                     u319_21:
 10890  0745  2F4C               	goto	i1l3437
 10891  0746                     u319_20:
 10892  0746                     i1l3433:
 10893                           
 10894                           ;main.c: 239: t.h++;
 10895  0746  3001               	movlw	1
 10896  0747  07C6               	addwf	_t,f
 10897  0748  3000               	movlw	0
 10898  0749  3DC7               	addwfc	_t+1,f
 10899  074A                     i1l3435:
 10900                           
 10901                           ;main.c: 240: t.m=0;
 10902  074A  01C8               	clrf	_t+2
 10903  074B  01C9               	clrf	_t+3
 10904  074C                     i1l3437:
 10905                           
 10906                           ;main.c: 241: };main.c: 242: if(t.h==24){
 10907  074C  3018               	movlw	24
 10908  074D  0646               	xorwf	_t,w
 10909  074E  0447               	iorwf	_t+1,w
 10910  074F  1D03               	btfss	3,2
 10911  0750  2F52               	goto	u320_21
 10912  0751  2F53               	goto	u320_20
 10913  0752                     u320_21:
 10914  0752  2F55               	goto	i1l761
 10915  0753                     u320_20:
 10916  0753                     i1l3439:
 10917                           
 10918                           ;main.c: 243: t.h=0;
 10919  0753  01C6               	clrf	_t
 10920  0754  01C7               	clrf	_t+1
 10921  0755                     i1l761:
 10922  0755  0008               	return
 10923  0756                     __end_of_Clock_ISR:
 10924                           
 10925                           	psect	text33
 10926  0003                     __ptext33:	
 10927 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 10928 ;; Defined at:
 10929 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 10930 ;; Parameters:    Size  Location     Type
 10931 ;;		None
 10932 ;; Auto vars:     Size  Location     Type
 10933 ;;		None
 10934 ;; Return value:  Size  Location     Type
 10935 ;;                  1    wreg      void 
 10936 ;; Registers used:
 10937 ;;		None
 10938 ;; Tracked objects:
 10939 ;;		On entry : 0/0
 10940 ;;		On exit  : 0/0
 10941 ;;		Unchanged: 0/0
 10942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;Total ram usage:        0 bytes
 10948 ;; Hardware stack levels used:    1
 10949 ;; This function calls:
 10950 ;;		Nothing
 10951 ;; This function is called by:
 10952 ;;		_TMR1_Initialize
 10953 ;;		_TMR1_ISR
 10954 ;; This function uses a non-reentrant model
 10955 ;;
 10956                           
 10957                           
 10958                           ;psect for function _TMR1_DefaultInterruptHandler
 10959  0003                     _TMR1_DefaultInterruptHandler:
 10960  0003                     i1l408:	
 10961                           ;incstack = 0
 10962                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 10963                           
 10964  0003  0008               	return
 10965  0004                     __end_of_TMR1_DefaultInterruptHandler:
 10966                           
 10967                           	psect	text34
 10968  01DF                     __ptext34:	
 10969 ;; *************** function _tsttc *****************
 10970 ;; Defined at:
 10971 ;;		line 53 in file "main.c"
 10972 ;; Parameters:    Size  Location     Type
 10973 ;;		None
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;  value           1    3[COMMON] unsigned char 
 10976 ;; Return value:  Size  Location     Type
 10977 ;;                  1    wreg      unsigned char 
 10978 ;; Registers used:
 10979 ;;		wreg, status,2, status,0, pclath, cstack
 10980 ;; Tracked objects:
 10981 ;;		On entry : 0/0
 10982 ;;		On exit  : 0/0
 10983 ;;		Unchanged: 0/0
 10984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10989 ;;Total ram usage:        2 bytes
 10990 ;; Hardware stack levels used:    1
 10991 ;; Hardware stack levels required when called:    1
 10992 ;; This function calls:
 10993 ;;		_ReadI2C
 10994 ;;		i1_WriteI2C
 10995 ;; This function is called by:
 10996 ;;		_Clock_ISR
 10997 ;; This function uses a non-reentrant model
 10998 ;;
 10999                           
 11000                           
 11001                           ;psect for function _tsttc
 11002  01DF                     _tsttc:
 11003  01DF                     i1l515:	
 11004                           ;incstack = 0
 11005                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 11006                           ;main.c: 55: unsigned char value;;main.c: 56: do{
 11007                           
 11008  01DF                     i1l3047:	
 11009                           ;main.c: 57: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11010                           
 11011  01DF  0023               	movlb	3	; select bank3
 11012  01E0  0C0F               	rrf	15,w	;volatile
 11013  01E1  0C89               	rrf	9,f
 11014  01E2  3901               	andlw	1
 11015  01E3  00F2               	movwf	??_tsttc
 11016  01E4  0811               	movf	17,w	;volatile
 11017  01E5  391F               	andlw	31
 11018  01E6  0472               	iorwf	??_tsttc,w
 11019  01E7  1D03               	btfss	3,2
 11020  01E8  29EA               	goto	u253_21
 11021  01E9  29EB               	goto	u253_20
 11022  01EA                     u253_21:
 11023  01EA  29DF               	goto	i1l3047
 11024  01EB                     u253_20:
 11025  01EB                     i1l518:
 11026                           
 11027                           ;main.c: 58: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11028  01EB  1411               	bsf	17,0	;volatile
 11029  01EC                     i1l519:
 11030  01EC  1811               	btfsc	17,0	;volatile
 11031  01ED  29EF               	goto	u254_21
 11032  01EE  29F0               	goto	u254_20
 11033  01EF                     u254_21:
 11034  01EF  29EC               	goto	i1l519
 11035  01F0                     u254_20:
 11036  01F0                     i1l3049:
 11037  01F0  0C0F               	rrf	15,w	;volatile
 11038  01F1  0C89               	rrf	9,f
 11039  01F2  3901               	andlw	1
 11040  01F3  00F2               	movwf	??_tsttc
 11041  01F4  0811               	movf	17,w	;volatile
 11042  01F5  391F               	andlw	31
 11043  01F6  0472               	iorwf	??_tsttc,w
 11044  01F7  1D03               	btfss	3,2
 11045  01F8  29FA               	goto	u255_21
 11046  01F9  29FB               	goto	u255_20
 11047  01FA                     u255_21:
 11048  01FA  29F0               	goto	i1l3049
 11049  01FB                     u255_20:
 11050  01FB                     i1l3051:
 11051                           
 11052                           ;main.c: 60: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11053  01FB  309A               	movlw	154
 11054  01FC  318F  2762  3181   	fcall	i1_WriteI2C
 11055  01FF                     i1l3053:
 11056  01FF  0023               	movlb	3	; select bank3
 11057  0200  0C0F               	rrf	15,w	;volatile
 11058  0201  0C89               	rrf	9,f
 11059  0202  3901               	andlw	1
 11060  0203  00F2               	movwf	??_tsttc
 11061  0204  0811               	movf	17,w	;volatile
 11062  0205  391F               	andlw	31
 11063  0206  0472               	iorwf	??_tsttc,w
 11064  0207  1D03               	btfss	3,2
 11065  0208  2A0A               	goto	u256_21
 11066  0209  2A0B               	goto	u256_20
 11067  020A                     u256_21:
 11068  020A  29FF               	goto	i1l3053
 11069  020B                     u256_20:
 11070  020B                     i1l3055:
 11071                           
 11072                           ;main.c: 61: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11073  020B  3001               	movlw	1
 11074  020C  318F  2762  3181   	fcall	i1_WriteI2C
 11075  020F                     i1l3057:
 11076  020F  0023               	movlb	3	; select bank3
 11077  0210  0C0F               	rrf	15,w	;volatile
 11078  0211  0C89               	rrf	9,f
 11079  0212  3901               	andlw	1
 11080  0213  00F2               	movwf	??_tsttc
 11081  0214  0811               	movf	17,w	;volatile
 11082  0215  391F               	andlw	31
 11083  0216  0472               	iorwf	??_tsttc,w
 11084  0217  1D03               	btfss	3,2
 11085  0218  2A1A               	goto	u257_21
 11086  0219  2A1B               	goto	u257_20
 11087  021A                     u257_21:
 11088  021A  2A0F               	goto	i1l3057
 11089  021B                     u257_20:
 11090  021B                     i1l530:
 11091                           
 11092                           ;main.c: 62: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 11093  021B  1491               	bsf	17,1	;volatile
 11094  021C                     i1l531:
 11095  021C  1891               	btfsc	17,1	;volatile
 11096  021D  2A1F               	goto	u258_21
 11097  021E  2A20               	goto	u258_20
 11098  021F                     u258_21:
 11099  021F  2A1C               	goto	i1l531
 11100  0220                     u258_20:
 11101  0220                     i1l3059:
 11102  0220  0C0F               	rrf	15,w	;volatile
 11103  0221  0C89               	rrf	9,f
 11104  0222  3901               	andlw	1
 11105  0223  00F2               	movwf	??_tsttc
 11106  0224  0811               	movf	17,w	;volatile
 11107  0225  391F               	andlw	31
 11108  0226  0472               	iorwf	??_tsttc,w
 11109  0227  1D03               	btfss	3,2
 11110  0228  2A2A               	goto	u259_21
 11111  0229  2A2B               	goto	u259_20
 11112  022A                     u259_21:
 11113  022A  2A20               	goto	i1l3059
 11114  022B                     u259_20:
 11115  022B                     i1l3061:
 11116                           
 11117                           ;main.c: 63: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11118  022B  309B               	movlw	155
 11119  022C  318F  2762  3181   	fcall	i1_WriteI2C
 11120  022F                     i1l3063:
 11121  022F  0023               	movlb	3	; select bank3
 11122  0230  0C0F               	rrf	15,w	;volatile
 11123  0231  0C89               	rrf	9,f
 11124  0232  3901               	andlw	1
 11125  0233  00F2               	movwf	??_tsttc
 11126  0234  0811               	movf	17,w	;volatile
 11127  0235  391F               	andlw	31
 11128  0236  0472               	iorwf	??_tsttc,w
 11129  0237  1D03               	btfss	3,2
 11130  0238  2A3A               	goto	u260_21
 11131  0239  2A3B               	goto	u260_20
 11132  023A                     u260_21:
 11133  023A  2A2F               	goto	i1l3063
 11134  023B                     u260_20:
 11135  023B                     i1l3065:
 11136                           
 11137                           ;main.c: 64: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11138  023B  318D  25FF  3181   	fcall	_ReadI2C
 11139  023E  00F2               	movwf	??_tsttc
 11140  023F  0872               	movf	??_tsttc,w
 11141  0240  00F3               	movwf	tsttc@value
 11142  0241                     i1l3067:
 11143  0241  0023               	movlb	3	; select bank3
 11144  0242  0C0F               	rrf	15,w	;volatile
 11145  0243  0C89               	rrf	9,f
 11146  0244  3901               	andlw	1
 11147  0245  00F2               	movwf	??_tsttc
 11148  0246  0811               	movf	17,w	;volatile
 11149  0247  391F               	andlw	31
 11150  0248  0472               	iorwf	??_tsttc,w
 11151  0249  1D03               	btfss	3,2
 11152  024A  2A4C               	goto	u261_21
 11153  024B  2A4D               	goto	u261_20
 11154  024C                     u261_21:
 11155  024C  2A41               	goto	i1l3067
 11156  024D                     u261_20:
 11157  024D                     i1l542:
 11158                           
 11159                           ;main.c: 65: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11160  024D  1691               	bsf	17,5	;volatile
 11161  024E  1611               	bsf	17,4	;volatile
 11162  024F                     i1l543:
 11163  024F  1A11               	btfsc	17,4	;volatile
 11164  0250  2A52               	goto	u262_21
 11165  0251  2A53               	goto	u262_20
 11166  0252                     u262_21:
 11167  0252  2A4F               	goto	i1l543
 11168  0253                     u262_20:
 11169  0253                     i1l3069:
 11170  0253  0C0F               	rrf	15,w	;volatile
 11171  0254  0C89               	rrf	9,f
 11172  0255  3901               	andlw	1
 11173  0256  00F2               	movwf	??_tsttc
 11174  0257  0811               	movf	17,w	;volatile
 11175  0258  391F               	andlw	31
 11176  0259  0472               	iorwf	??_tsttc,w
 11177  025A  1D03               	btfss	3,2
 11178  025B  2A5D               	goto	u263_21
 11179  025C  2A5E               	goto	u263_20
 11180  025D                     u263_21:
 11181  025D  2A53               	goto	i1l3069
 11182  025E                     u263_20:
 11183  025E                     i1l548:
 11184                           
 11185                           ;main.c: 66: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11186  025E  1511               	bsf	17,2	;volatile
 11187  025F                     i1l549:
 11188  025F  1911               	btfsc	17,2	;volatile
 11189  0260  2A62               	goto	u264_21
 11190  0261  2A63               	goto	u264_20
 11191  0262                     u264_21:
 11192  0262  2A5F               	goto	i1l549
 11193  0263                     u264_20:
 11194  0263                     i1l551:
 11195                           
 11196                           ;main.c: 67: } while (!(value & 0x40));
 11197  0263  1F73               	btfss	tsttc@value,6
 11198  0264  2A66               	goto	u265_21
 11199  0265  2A67               	goto	u265_20
 11200  0266                     u265_21:
 11201  0266  29DF               	goto	i1l515
 11202  0267                     u265_20:
 11203  0267                     i1l3071:
 11204  0267  0C0F               	rrf	15,w	;volatile
 11205  0268  0C89               	rrf	9,f
 11206  0269  3901               	andlw	1
 11207  026A  00F2               	movwf	??_tsttc
 11208  026B  0811               	movf	17,w	;volatile
 11209  026C  391F               	andlw	31
 11210  026D  0472               	iorwf	??_tsttc,w
 11211  026E  1D03               	btfss	3,2
 11212  026F  2A71               	goto	u266_21
 11213  0270  2A72               	goto	u266_20
 11214  0271                     u266_21:
 11215  0271  2A67               	goto	i1l3071
 11216  0272                     u266_20:
 11217  0272                     i1l555:
 11218                           
 11219                           ;main.c: 70: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11220  0272  1411               	bsf	17,0	;volatile
 11221  0273                     i1l556:
 11222  0273  1811               	btfsc	17,0	;volatile
 11223  0274  2A76               	goto	u267_21
 11224  0275  2A77               	goto	u267_20
 11225  0276                     u267_21:
 11226  0276  2A73               	goto	i1l556
 11227  0277                     u267_20:
 11228  0277                     i1l3073:
 11229  0277  0C0F               	rrf	15,w	;volatile
 11230  0278  0C89               	rrf	9,f
 11231  0279  3901               	andlw	1
 11232  027A  00F2               	movwf	??_tsttc
 11233  027B  0811               	movf	17,w	;volatile
 11234  027C  391F               	andlw	31
 11235  027D  0472               	iorwf	??_tsttc,w
 11236  027E  1D03               	btfss	3,2
 11237  027F  2A81               	goto	u268_21
 11238  0280  2A82               	goto	u268_20
 11239  0281                     u268_21:
 11240  0281  2A77               	goto	i1l3073
 11241  0282                     u268_20:
 11242  0282                     i1l3075:
 11243                           
 11244                           ;main.c: 71: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11245  0282  309A               	movlw	154
 11246  0283  318F  2762  3181   	fcall	i1_WriteI2C
 11247  0286                     i1l3077:
 11248  0286  0023               	movlb	3	; select bank3
 11249  0287  0C0F               	rrf	15,w	;volatile
 11250  0288  0C89               	rrf	9,f
 11251  0289  3901               	andlw	1
 11252  028A  00F2               	movwf	??_tsttc
 11253  028B  0811               	movf	17,w	;volatile
 11254  028C  391F               	andlw	31
 11255  028D  0472               	iorwf	??_tsttc,w
 11256  028E  1D03               	btfss	3,2
 11257  028F  2A91               	goto	u269_21
 11258  0290  2A92               	goto	u269_20
 11259  0291                     u269_21:
 11260  0291  2A86               	goto	i1l3077
 11261  0292                     u269_20:
 11262  0292                     i1l3079:
 11263                           
 11264                           ;main.c: 72: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11265  0292  3000               	movlw	0
 11266  0293  318F  2762  3181   	fcall	i1_WriteI2C
 11267  0296                     i1l3081:
 11268  0296  0023               	movlb	3	; select bank3
 11269  0297  0C0F               	rrf	15,w	;volatile
 11270  0298  0C89               	rrf	9,f
 11271  0299  3901               	andlw	1
 11272  029A  00F2               	movwf	??_tsttc
 11273  029B  0811               	movf	17,w	;volatile
 11274  029C  391F               	andlw	31
 11275  029D  0472               	iorwf	??_tsttc,w
 11276  029E  1D03               	btfss	3,2
 11277  029F  2AA1               	goto	u270_21
 11278  02A0  2AA2               	goto	u270_20
 11279  02A1                     u270_21:
 11280  02A1  2A96               	goto	i1l3081
 11281  02A2                     u270_20:
 11282  02A2                     i1l567:
 11283                           
 11284                           ;main.c: 73: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 11285  02A2  1491               	bsf	17,1	;volatile
 11286  02A3                     i1l568:
 11287  02A3  1891               	btfsc	17,1	;volatile
 11288  02A4  2AA6               	goto	u271_21
 11289  02A5  2AA7               	goto	u271_20
 11290  02A6                     u271_21:
 11291  02A6  2AA3               	goto	i1l568
 11292  02A7                     u271_20:
 11293  02A7                     i1l3083:
 11294  02A7  0C0F               	rrf	15,w	;volatile
 11295  02A8  0C89               	rrf	9,f
 11296  02A9  3901               	andlw	1
 11297  02AA  00F2               	movwf	??_tsttc
 11298  02AB  0811               	movf	17,w	;volatile
 11299  02AC  391F               	andlw	31
 11300  02AD  0472               	iorwf	??_tsttc,w
 11301  02AE  1D03               	btfss	3,2
 11302  02AF  2AB1               	goto	u272_21
 11303  02B0  2AB2               	goto	u272_20
 11304  02B1                     u272_21:
 11305  02B1  2AA7               	goto	i1l3083
 11306  02B2                     u272_20:
 11307  02B2                     i1l3085:
 11308                           
 11309                           ;main.c: 74: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11310  02B2  309B               	movlw	155
 11311  02B3  318F  2762  3181   	fcall	i1_WriteI2C
 11312  02B6                     i1l3087:
 11313  02B6  0023               	movlb	3	; select bank3
 11314  02B7  0C0F               	rrf	15,w	;volatile
 11315  02B8  0C89               	rrf	9,f
 11316  02B9  3901               	andlw	1
 11317  02BA  00F2               	movwf	??_tsttc
 11318  02BB  0811               	movf	17,w	;volatile
 11319  02BC  391F               	andlw	31
 11320  02BD  0472               	iorwf	??_tsttc,w
 11321  02BE  1D03               	btfss	3,2
 11322  02BF  2AC1               	goto	u273_21
 11323  02C0  2AC2               	goto	u273_20
 11324  02C1                     u273_21:
 11325  02C1  2AB6               	goto	i1l3087
 11326  02C2                     u273_20:
 11327  02C2                     i1l3089:
 11328                           
 11329                           ;main.c: 75: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11330  02C2  318D  25FF  3181   	fcall	_ReadI2C
 11331  02C5  00F2               	movwf	??_tsttc
 11332  02C6  0872               	movf	??_tsttc,w
 11333  02C7  00F3               	movwf	tsttc@value
 11334  02C8                     i1l3091:
 11335  02C8  0023               	movlb	3	; select bank3
 11336  02C9  0C0F               	rrf	15,w	;volatile
 11337  02CA  0C89               	rrf	9,f
 11338  02CB  3901               	andlw	1
 11339  02CC  00F2               	movwf	??_tsttc
 11340  02CD  0811               	movf	17,w	;volatile
 11341  02CE  391F               	andlw	31
 11342  02CF  0472               	iorwf	??_tsttc,w
 11343  02D0  1D03               	btfss	3,2
 11344  02D1  2AD3               	goto	u274_21
 11345  02D2  2AD4               	goto	u274_20
 11346  02D3                     u274_21:
 11347  02D3  2AC8               	goto	i1l3091
 11348  02D4                     u274_20:
 11349  02D4                     i1l579:
 11350                           
 11351                           ;main.c: 76: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11352  02D4  1691               	bsf	17,5	;volatile
 11353  02D5  1611               	bsf	17,4	;volatile
 11354  02D6                     i1l580:
 11355  02D6  1A11               	btfsc	17,4	;volatile
 11356  02D7  2AD9               	goto	u275_21
 11357  02D8  2ADA               	goto	u275_20
 11358  02D9                     u275_21:
 11359  02D9  2AD6               	goto	i1l580
 11360  02DA                     u275_20:
 11361  02DA                     i1l3093:
 11362  02DA  0C0F               	rrf	15,w	;volatile
 11363  02DB  0C89               	rrf	9,f
 11364  02DC  3901               	andlw	1
 11365  02DD  00F2               	movwf	??_tsttc
 11366  02DE  0811               	movf	17,w	;volatile
 11367  02DF  391F               	andlw	31
 11368  02E0  0472               	iorwf	??_tsttc,w
 11369  02E1  1D03               	btfss	3,2
 11370  02E2  2AE4               	goto	u276_21
 11371  02E3  2AE5               	goto	u276_20
 11372  02E4                     u276_21:
 11373  02E4  2ADA               	goto	i1l3093
 11374  02E5                     u276_20:
 11375  02E5                     i1l585:
 11376                           
 11377                           ;main.c: 77: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11378  02E5  1511               	bsf	17,2	;volatile
 11379  02E6                     i1l586:
 11380  02E6  1911               	btfsc	17,2	;volatile
 11381  02E7  2AE9               	goto	u277_21
 11382  02E8  2AEA               	goto	u277_20
 11383  02E9                     u277_21:
 11384  02E9  2AE6               	goto	i1l586
 11385  02EA                     u277_20:
 11386  02EA                     i1l3095:
 11387                           
 11388                           ;main.c: 79: return value;
 11389  02EA  0873               	movf	tsttc@value,w
 11390  02EB                     i1l589:
 11391  02EB  0008               	return
 11392  02EC                     __end_of_tsttc:
 11393                           
 11394                           	psect	text35
 11395  0F62                     __ptext35:	
 11396 ;; *************** function i1_WriteI2C *****************
 11397 ;; Defined at:
 11398 ;;		line 47 in file "I2C/i2c.c"
 11399 ;; Parameters:    Size  Location     Type
 11400 ;;  data_out        1    wreg     unsigned char 
 11401 ;; Auto vars:     Size  Location     Type
 11402 ;;  data_out        1    1[COMMON] unsigned char 
 11403 ;; Return value:  Size  Location     Type
 11404 ;;                  1    wreg      char 
 11405 ;; Registers used:
 11406 ;;		wreg, status,2, status,0
 11407 ;; Tracked objects:
 11408 ;;		On entry : 0/0
 11409 ;;		On exit  : 0/0
 11410 ;;		Unchanged: 0/0
 11411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11416 ;;Total ram usage:        2 bytes
 11417 ;; Hardware stack levels used:    1
 11418 ;; This function calls:
 11419 ;;		Nothing
 11420 ;; This function is called by:
 11421 ;;		_tsttc
 11422 ;;		i1_LCDsend2x4
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           
 11427                           ;psect for function i1_WriteI2C
 11428  0F62                     i1_WriteI2C:
 11429                           
 11430                           ;incstack = 0
 11431                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 11432                           ;i1WriteI2C@data_out stored from wreg
 11433  0F62  00F1               	movwf	i1WriteI2C@data_out
 11434  0F63                     i1l2817:
 11435                           
 11436                           ;i2c.c: 49: SSP1BUF = data_out;
 11437  0F63  0871               	movf	i1WriteI2C@data_out,w
 11438  0F64  0023               	movlb	3	; select bank3
 11439  0F65  008C               	movwf	12	;volatile
 11440  0F66                     i1l2819:
 11441                           
 11442                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 11443  0F66  1F90               	btfss	16,7	;volatile
 11444  0F67  2F69               	goto	u191_21
 11445  0F68  2F6A               	goto	u191_20
 11446  0F69                     u191_21:
 11447  0F69  2F6B               	goto	i1l2825
 11448  0F6A                     u191_20:
 11449  0F6A  2FAC               	goto	i1l30
 11450  0F6B                     i1l2825:
 11451                           
 11452                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 11453  0F6B  300F               	movlw	15
 11454  0F6C  0510               	andwf	16,w	;volatile
 11455  0F6D  00F0               	movwf	??i1_WriteI2C
 11456  0F6E  3008               	movlw	8
 11457  0F6F  0670               	xorwf	??i1_WriteI2C,w
 11458  0F70  1903               	btfsc	3,2
 11459  0F71  2F73               	goto	u192_21
 11460  0F72  2F74               	goto	u192_20
 11461  0F73                     u192_21:
 11462  0F73  2F8A               	goto	i1l2837
 11463  0F74                     u192_20:
 11464  0F74                     i1l2827:
 11465  0F74  300F               	movlw	15
 11466  0F75  0510               	andwf	16,w	;volatile
 11467  0F76  00F0               	movwf	??i1_WriteI2C
 11468  0F77  300B               	movlw	11
 11469  0F78  0670               	xorwf	??i1_WriteI2C,w
 11470  0F79  1903               	btfsc	3,2
 11471  0F7A  2F7C               	goto	u193_21
 11472  0F7B  2F7D               	goto	u193_20
 11473  0F7C                     u193_21:
 11474  0F7C  2F8A               	goto	i1l2837
 11475  0F7D                     u193_20:
 11476  0F7D                     i1l2829:
 11477                           
 11478                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 11479  0F7D  1610               	bsf	16,4	;volatile
 11480  0F7E                     i1l33:	
 11481                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 11482                           
 11483  0F7E  002E               	movlb	14	; select bank14
 11484  0F7F  1C0F               	btfss	15,0	;volatile
 11485  0F80  2F82               	goto	u194_21
 11486  0F81  2F83               	goto	u194_20
 11487  0F82                     u194_21:
 11488  0F82  2F7E               	goto	i1l33
 11489  0F83                     u194_20:
 11490  0F83                     i1l35:
 11491                           
 11492                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11493  0F83  0023               	movlb	3	; select bank3
 11494  0F84  190F               	btfsc	15,2	;volatile
 11495  0F85  2F87               	goto	u195_21
 11496  0F86  2F88               	goto	u195_20
 11497  0F87                     u195_21:
 11498  0F87  2FAC               	goto	i1l30
 11499  0F88                     u195_20:
 11500  0F88                     i1l2831:
 11501  0F88  080F               	movf	15,w	;volatile
 11502  0F89  2FAC               	goto	i1l30
 11503  0F8A                     i1l2837:
 11504                           
 11505                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11506  0F8A  300F               	movlw	15
 11507  0F8B  0510               	andwf	16,w	;volatile
 11508  0F8C  00F0               	movwf	??i1_WriteI2C
 11509  0F8D  3008               	movlw	8
 11510  0F8E  0670               	xorwf	??i1_WriteI2C,w
 11511  0F8F  1903               	btfsc	3,2
 11512  0F90  2F92               	goto	u196_21
 11513  0F91  2F93               	goto	u196_20
 11514  0F92                     u196_21:
 11515  0F92  2F9C               	goto	i1l42
 11516  0F93                     u196_20:
 11517  0F93                     i1l2839:
 11518  0F93  300F               	movlw	15
 11519  0F94  0510               	andwf	16,w	;volatile
 11520  0F95  00F0               	movwf	??i1_WriteI2C
 11521  0F96  300B               	movlw	11
 11522  0F97  0670               	xorwf	??i1_WriteI2C,w
 11523  0F98  1D03               	btfss	3,2
 11524  0F99  2F9B               	goto	u197_21
 11525  0F9A  2F9C               	goto	u197_20
 11526  0F9B                     u197_21:
 11527  0F9B  2FAC               	goto	i1l30
 11528  0F9C                     u197_20:
 11529  0F9C                     i1l42:
 11530  0F9C  180F               	btfsc	15,0	;volatile
 11531  0F9D  2F9F               	goto	u198_21
 11532  0F9E  2FA0               	goto	u198_20
 11533  0F9F                     u198_21:
 11534  0F9F  2F9C               	goto	i1l42
 11535  0FA0                     u198_20:
 11536  0FA0                     i1l2841:
 11537  0FA0  0C0F               	rrf	15,w	;volatile
 11538  0FA1  0C89               	rrf	9,f
 11539  0FA2  3901               	andlw	1
 11540  0FA3  00F0               	movwf	??i1_WriteI2C
 11541  0FA4  0811               	movf	17,w	;volatile
 11542  0FA5  391F               	andlw	31
 11543  0FA6  0470               	iorwf	??i1_WriteI2C,w
 11544  0FA7  1D03               	btfss	3,2
 11545  0FA8  2FAA               	goto	u199_21
 11546  0FA9  2FAB               	goto	u199_20
 11547  0FAA                     u199_21:
 11548  0FAA  2FA0               	goto	i1l2841
 11549  0FAB                     u199_20:
 11550  0FAB                     i1l47:
 11551                           
 11552                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 11553  0FAB  0811               	movf	17,w	;volatile
 11554  0FAC                     i1l30:
 11555  0FAC  0008               	return
 11556  0FAD                     __end_ofi1_WriteI2C:
 11557                           
 11558                           	psect	text36
 11559  0DFF                     __ptext36:	
 11560 ;; *************** function _ReadI2C *****************
 11561 ;; Defined at:
 11562 ;;		line 32 in file "I2C/i2c.c"
 11563 ;; Parameters:    Size  Location     Type
 11564 ;;		None
 11565 ;; Auto vars:     Size  Location     Type
 11566 ;;		None
 11567 ;; Return value:  Size  Location     Type
 11568 ;;                  1    wreg      unsigned char 
 11569 ;; Registers used:
 11570 ;;		wreg, status,2, status,0
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11578 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11580 ;;Total ram usage:        1 bytes
 11581 ;; Hardware stack levels used:    1
 11582 ;; This function calls:
 11583 ;;		Nothing
 11584 ;; This function is called by:
 11585 ;;		_tsttc
 11586 ;;		_LCDrecv
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           
 11590                           
 11591                           ;psect for function _ReadI2C
 11592  0DFF                     _ReadI2C:
 11593  0DFF                     i1l2885:	
 11594                           ;incstack = 0
 11595                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11596                           
 11597                           
 11598                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11599  0DFF  300F               	movlw	15
 11600  0E00  0023               	movlb	3	; select bank3
 11601  0E01  0510               	andwf	16,w	;volatile
 11602  0E02  00F0               	movwf	??_ReadI2C
 11603  0E03  3008               	movlw	8
 11604  0E04  0670               	xorwf	??_ReadI2C,w
 11605  0E05  1903               	btfsc	3,2
 11606  0E06  2E08               	goto	u212_21
 11607  0E07  2E09               	goto	u212_20
 11608  0E08                     u212_21:
 11609  0E08  2E12               	goto	i1l22
 11610  0E09                     u212_20:
 11611  0E09                     i1l2887:
 11612  0E09  300F               	movlw	15
 11613  0E0A  0510               	andwf	16,w	;volatile
 11614  0E0B  00F0               	movwf	??_ReadI2C
 11615  0E0C  300B               	movlw	11
 11616  0E0D  0670               	xorwf	??_ReadI2C,w
 11617  0E0E  1D03               	btfss	3,2
 11618  0E0F  2E11               	goto	u213_21
 11619  0E10  2E12               	goto	u213_20
 11620  0E11                     u213_21:
 11621  0E11  2E13               	goto	i1l23
 11622  0E12                     u213_20:
 11623  0E12                     i1l22:
 11624                           
 11625                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 11626  0E12  1591               	bsf	17,3	;volatile
 11627  0E13                     i1l23:
 11628  0E13  1C0F               	btfss	15,0	;volatile
 11629  0E14  2E16               	goto	u214_21
 11630  0E15  2E17               	goto	u214_20
 11631  0E16                     u214_21:
 11632  0E16  2E13               	goto	i1l23
 11633  0E17                     u214_20:
 11634  0E17                     i1l2889:
 11635                           
 11636                           ;i2c.c: 37: return ( SSP1BUF );
 11637  0E17  080C               	movf	12,w	;volatile
 11638  0E18                     i1l26:
 11639  0E18  0008               	return
 11640  0E19                     __end_of_ReadI2C:
 11641                           
 11642                           	psect	text37
 11643  0E91                     __ptext37:	
 11644 ;; *************** function _map *****************
 11645 ;; Defined at:
 11646 ;;		line 210 in file "main.c"
 11647 ;; Parameters:    Size  Location     Type
 11648 ;;  x               2    4[BANK0 ] int 
 11649 ;;  in_min          2    6[BANK0 ] int 
 11650 ;;  in_max          2    8[BANK0 ] int 
 11651 ;;  out_min         2   10[BANK0 ] int 
 11652 ;;  out_max         2   12[BANK0 ] int 
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;		None
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  2    4[BANK0 ] int 
 11657 ;; Registers used:
 11658 ;;		wreg, status,2, status,0, pclath, cstack
 11659 ;; Tracked objects:
 11660 ;;		On entry : 0/0
 11661 ;;		On exit  : 0/0
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11664 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11668 ;;Total ram usage:       10 bytes
 11669 ;; Hardware stack levels used:    1
 11670 ;; Hardware stack levels required when called:    1
 11671 ;; This function calls:
 11672 ;;		___awdiv
 11673 ;;		___wmul
 11674 ;; This function is called by:
 11675 ;;		_Clock_ISR
 11676 ;; This function uses a non-reentrant model
 11677 ;;
 11678                           
 11679                           
 11680                           ;psect for function _map
 11681  0E91                     _map:
 11682  0E91                     i1l3107:	
 11683                           ;incstack = 0
 11684                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
 11685                           
 11686                           
 11687                           ;main.c: 211: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 11688  0E91  0020               	movlb	0	; select bank0
 11689  0E92  0826               	movf	map@in_min,w
 11690  0E93  0228               	subwf	map@in_max,w
 11691  0E94  00F6               	movwf	___awdiv@divisor
 11692  0E95  0827               	movf	map@in_min+1,w
 11693  0E96  3B29               	subwfb	map@in_max+1,w
 11694  0E97  00F7               	movwf	___awdiv@divisor+1
 11695  0E98  0826               	movf	map@in_min,w
 11696  0E99  0224               	subwf	map@x,w
 11697  0E9A  00F0               	movwf	___wmul@multiplier
 11698  0E9B  0827               	movf	map@in_min+1,w
 11699  0E9C  3B25               	subwfb	map@x+1,w
 11700  0E9D  00F1               	movwf	___wmul@multiplier+1
 11701  0E9E  082A               	movf	map@out_min,w
 11702  0E9F  022C               	subwf	map@out_max,w
 11703  0EA0  00F2               	movwf	___wmul@multiplicand
 11704  0EA1  082B               	movf	map@out_min+1,w
 11705  0EA2  3B2D               	subwfb	map@out_max+1,w
 11706  0EA3  00F3               	movwf	___wmul@multiplicand+1
 11707  0EA4  318E  2634  318E   	fcall	___wmul
 11708  0EA7  0871               	movf	?___wmul+1,w
 11709  0EA8  00F9               	movwf	___awdiv@dividend+1
 11710  0EA9  0870               	movf	?___wmul,w
 11711  0EAA  00F8               	movwf	___awdiv@dividend
 11712  0EAB  3186  2639  318E   	fcall	___awdiv
 11713  0EAE  0020               	movlb	0	; select bank0
 11714  0EAF  082A               	movf	map@out_min,w
 11715  0EB0  0776               	addwf	?___awdiv,w
 11716  0EB1  00A4               	movwf	?_map
 11717  0EB2  082B               	movf	map@out_min+1,w
 11718  0EB3  3D77               	addwfc	?___awdiv+1,w
 11719  0EB4  00A5               	movwf	?_map+1
 11720  0EB5                     i1l749:
 11721  0EB5  0008               	return
 11722  0EB6                     __end_of_map:
 11723                           
 11724                           	psect	text38
 11725  0E34                     __ptext38:	
 11726 ;; *************** function ___wmul *****************
 11727 ;; Defined at:
 11728 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 11729 ;; Parameters:    Size  Location     Type
 11730 ;;  multiplier      2    0[COMMON] unsigned int 
 11731 ;;  multiplicand    2    2[COMMON] unsigned int 
 11732 ;; Auto vars:     Size  Location     Type
 11733 ;;  product         2    4[COMMON] unsigned int 
 11734 ;; Return value:  Size  Location     Type
 11735 ;;                  2    0[COMMON] unsigned int 
 11736 ;; Registers used:
 11737 ;;		wreg, status,2, status,0
 11738 ;; Tracked objects:
 11739 ;;		On entry : 0/0
 11740 ;;		On exit  : 0/0
 11741 ;;		Unchanged: 0/0
 11742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11743 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11746 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11747 ;;Total ram usage:        6 bytes
 11748 ;; Hardware stack levels used:    1
 11749 ;; This function calls:
 11750 ;;		Nothing
 11751 ;; This function is called by:
 11752 ;;		_map
 11753 ;;		_sprintf
 11754 ;; This function uses a non-reentrant model
 11755 ;;
 11756                           
 11757                           
 11758                           ;psect for function ___wmul
 11759  0E34                     ___wmul:
 11760  0E34                     i1l2907:	
 11761                           ;incstack = 0
 11762                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11763                           
 11764  0E34  01F4               	clrf	___wmul@product
 11765  0E35  01F5               	clrf	___wmul@product+1
 11766  0E36                     i1l2909:
 11767  0E36  1C70               	btfss	___wmul@multiplier,0
 11768  0E37  2E39               	goto	u217_21
 11769  0E38  2E3A               	goto	u217_20
 11770  0E39                     u217_21:
 11771  0E39  2E3E               	goto	i1l1144
 11772  0E3A                     u217_20:
 11773  0E3A                     i1l2911:
 11774  0E3A  0872               	movf	___wmul@multiplicand,w
 11775  0E3B  07F4               	addwf	___wmul@product,f
 11776  0E3C  0873               	movf	___wmul@multiplicand+1,w
 11777  0E3D  3DF5               	addwfc	___wmul@product+1,f
 11778  0E3E                     i1l1144:
 11779  0E3E  3001               	movlw	1
 11780  0E3F                     u218_25:
 11781  0E3F  35F2               	lslf	___wmul@multiplicand,f
 11782  0E40  0DF3               	rlf	___wmul@multiplicand+1,f
 11783  0E41  0B89               	decfsz	9,f
 11784  0E42  2E3F               	goto	u218_25
 11785  0E43                     i1l2913:
 11786  0E43  3001               	movlw	1
 11787  0E44                     u219_25:
 11788  0E44  36F1               	lsrf	___wmul@multiplier+1,f
 11789  0E45  0CF0               	rrf	___wmul@multiplier,f
 11790  0E46  0B89               	decfsz	9,f
 11791  0E47  2E44               	goto	u219_25
 11792  0E48                     i1l2915:
 11793  0E48  0870               	movf	___wmul@multiplier,w
 11794  0E49  0471               	iorwf	___wmul@multiplier+1,w
 11795  0E4A  1D03               	btfss	3,2
 11796  0E4B  2E4D               	goto	u220_21
 11797  0E4C  2E4E               	goto	u220_20
 11798  0E4D                     u220_21:
 11799  0E4D  2E36               	goto	i1l2909
 11800  0E4E                     u220_20:
 11801  0E4E                     i1l2917:
 11802  0E4E  0875               	movf	___wmul@product+1,w
 11803  0E4F  00F1               	movwf	?___wmul+1
 11804  0E50  0874               	movf	___wmul@product,w
 11805  0E51  00F0               	movwf	?___wmul
 11806  0E52                     i1l1146:
 11807  0E52  0008               	return
 11808  0E53                     __end_of___wmul:
 11809                           
 11810                           	psect	text39
 11811  0639                     __ptext39:	
 11812 ;; *************** function ___awdiv *****************
 11813 ;; Defined at:
 11814 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;  divisor         2    6[COMMON] int 
 11817 ;;  dividend        2    8[COMMON] int 
 11818 ;; Auto vars:     Size  Location     Type
 11819 ;;  quotient        2    2[BANK0 ] int 
 11820 ;;  sign            1    1[BANK0 ] unsigned char 
 11821 ;;  counter         1    0[BANK0 ] unsigned char 
 11822 ;; Return value:  Size  Location     Type
 11823 ;;                  2    6[COMMON] int 
 11824 ;; Registers used:
 11825 ;;		wreg, status,2, status,0
 11826 ;; Tracked objects:
 11827 ;;		On entry : 0/0
 11828 ;;		On exit  : 0/0
 11829 ;;		Unchanged: 0/0
 11830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11831 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11832 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11834 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11835 ;;Total ram usage:        9 bytes
 11836 ;; Hardware stack levels used:    1
 11837 ;; This function calls:
 11838 ;;		Nothing
 11839 ;; This function is called by:
 11840 ;;		_map
 11841 ;; This function uses a non-reentrant model
 11842 ;;
 11843                           
 11844                           
 11845                           ;psect for function ___awdiv
 11846  0639                     ___awdiv:
 11847  0639                     i1l2921:	
 11848                           ;incstack = 0
 11849                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11850                           
 11851  0639  0020               	movlb	0	; select bank0
 11852  063A  01A1               	clrf	___awdiv@sign
 11853  063B                     i1l2923:
 11854  063B  1FF7               	btfss	___awdiv@divisor+1,7
 11855  063C  2E3E               	goto	u221_21
 11856  063D  2E3F               	goto	u221_20
 11857  063E                     u221_21:
 11858  063E  2E46               	goto	i1l2929
 11859  063F                     u221_20:
 11860  063F                     i1l2925:
 11861  063F  09F6               	comf	___awdiv@divisor,f
 11862  0640  09F7               	comf	___awdiv@divisor+1,f
 11863  0641  0AF6               	incf	___awdiv@divisor,f
 11864  0642  1903               	skipnz
 11865  0643  0AF7               	incf	___awdiv@divisor+1,f
 11866  0644                     i1l2927:
 11867  0644  01A1               	clrf	___awdiv@sign
 11868  0645  0AA1               	incf	___awdiv@sign,f
 11869  0646                     i1l2929:
 11870  0646  1FF9               	btfss	___awdiv@dividend+1,7
 11871  0647  2E49               	goto	u222_21
 11872  0648  2E4A               	goto	u222_20
 11873  0649                     u222_21:
 11874  0649  2E53               	goto	i1l2935
 11875  064A                     u222_20:
 11876  064A                     i1l2931:
 11877  064A  09F8               	comf	___awdiv@dividend,f
 11878  064B  09F9               	comf	___awdiv@dividend+1,f
 11879  064C  0AF8               	incf	___awdiv@dividend,f
 11880  064D  1903               	skipnz
 11881  064E  0AF9               	incf	___awdiv@dividend+1,f
 11882  064F                     i1l2933:
 11883  064F  3001               	movlw	1
 11884  0650  00FA               	movwf	??___awdiv
 11885  0651  087A               	movf	??___awdiv,w
 11886  0652  06A1               	xorwf	___awdiv@sign,f
 11887  0653                     i1l2935:
 11888  0653  01A2               	clrf	___awdiv@quotient
 11889  0654  01A3               	clrf	___awdiv@quotient+1
 11890  0655                     i1l2937:
 11891  0655  0876               	movf	___awdiv@divisor,w
 11892  0656  0477               	iorwf	___awdiv@divisor+1,w
 11893  0657  1903               	btfsc	3,2
 11894  0658  2E5A               	goto	u223_21
 11895  0659  2E5B               	goto	u223_20
 11896  065A                     u223_21:
 11897  065A  2E8A               	goto	i1l2957
 11898  065B                     u223_20:
 11899  065B                     i1l2939:
 11900  065B  01A0               	clrf	___awdiv@counter
 11901  065C  0AA0               	incf	___awdiv@counter,f
 11902  065D  2E67               	goto	i1l2945
 11903  065E                     i1l2941:
 11904  065E  3001               	movlw	1
 11905  065F                     u224_25:
 11906  065F  35F6               	lslf	___awdiv@divisor,f
 11907  0660  0DF7               	rlf	___awdiv@divisor+1,f
 11908  0661  0B89               	decfsz	9,f
 11909  0662  2E5F               	goto	u224_25
 11910  0663                     i1l2943:
 11911  0663  3001               	movlw	1
 11912  0664  00FA               	movwf	??___awdiv
 11913  0665  087A               	movf	??___awdiv,w
 11914  0666  07A0               	addwf	___awdiv@counter,f
 11915  0667                     i1l2945:
 11916  0667  1FF7               	btfss	___awdiv@divisor+1,7
 11917  0668  2E6A               	goto	u225_21
 11918  0669  2E6B               	goto	u225_20
 11919  066A                     u225_21:
 11920  066A  2E5E               	goto	i1l2941
 11921  066B                     u225_20:
 11922  066B                     i1l2947:
 11923  066B  3001               	movlw	1
 11924  066C                     u226_25:
 11925  066C  35A2               	lslf	___awdiv@quotient,f
 11926  066D  0DA3               	rlf	___awdiv@quotient+1,f
 11927  066E  0B89               	decfsz	9,f
 11928  066F  2E6C               	goto	u226_25
 11929  0670  0877               	movf	___awdiv@divisor+1,w
 11930  0671  0279               	subwf	___awdiv@dividend+1,w
 11931  0672  1D03               	skipz
 11932  0673  2E76               	goto	u227_25
 11933  0674  0876               	movf	___awdiv@divisor,w
 11934  0675  0278               	subwf	___awdiv@dividend,w
 11935  0676                     u227_25:
 11936  0676  1C03               	skipc
 11937  0677  2E79               	goto	u227_21
 11938  0678  2E7A               	goto	u227_20
 11939  0679                     u227_21:
 11940  0679  2E7F               	goto	i1l2953
 11941  067A                     u227_20:
 11942  067A                     i1l2949:
 11943  067A  0876               	movf	___awdiv@divisor,w
 11944  067B  02F8               	subwf	___awdiv@dividend,f
 11945  067C  0877               	movf	___awdiv@divisor+1,w
 11946  067D  3BF9               	subwfb	___awdiv@dividend+1,f
 11947  067E                     i1l2951:
 11948  067E  1422               	bsf	___awdiv@quotient,0
 11949  067F                     i1l2953:
 11950  067F  3001               	movlw	1
 11951  0680                     u228_25:
 11952  0680  36F7               	lsrf	___awdiv@divisor+1,f
 11953  0681  0CF6               	rrf	___awdiv@divisor,f
 11954  0682  0B89               	decfsz	9,f
 11955  0683  2E80               	goto	u228_25
 11956  0684                     i1l2955:
 11957  0684  3001               	movlw	1
 11958  0685  02A0               	subwf	___awdiv@counter,f
 11959  0686  1D03               	btfss	3,2
 11960  0687  2E89               	goto	u229_21
 11961  0688  2E8A               	goto	u229_20
 11962  0689                     u229_21:
 11963  0689  2E6B               	goto	i1l2947
 11964  068A                     u229_20:
 11965  068A                     i1l2957:
 11966  068A  0821               	movf	___awdiv@sign,w
 11967  068B  1903               	btfsc	3,2
 11968  068C  2E8E               	goto	u230_21
 11969  068D  2E8F               	goto	u230_20
 11970  068E                     u230_21:
 11971  068E  2E94               	goto	i1l2961
 11972  068F                     u230_20:
 11973  068F                     i1l2959:
 11974  068F  09A2               	comf	___awdiv@quotient,f
 11975  0690  09A3               	comf	___awdiv@quotient+1,f
 11976  0691  0AA2               	incf	___awdiv@quotient,f
 11977  0692  1903               	skipnz
 11978  0693  0AA3               	incf	___awdiv@quotient+1,f
 11979  0694                     i1l2961:
 11980  0694  0823               	movf	___awdiv@quotient+1,w
 11981  0695  00F7               	movwf	?___awdiv+1
 11982  0696  0822               	movf	___awdiv@quotient,w
 11983  0697  00F6               	movwf	?___awdiv
 11984  0698                     i1l1297:
 11985  0698  0008               	return
 11986  0699                     __end_of___awdiv:
 11987                           
 11988                           	psect	text40
 11989  0D83                     __ptext40:	
 11990 ;; *************** function _ADCC_GetSingleConversion *****************
 11991 ;; Defined at:
 11992 ;;		line 130 in file "mcc_generated_files/adcc.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;  channel         1    wreg     enum E12086
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;  channel         1    3[COMMON] enum E12086
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  2    0[COMMON] unsigned int 
 11999 ;; Registers used:
 12000 ;;		wreg
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/0
 12003 ;;		On exit  : 0/0
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12006 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12009 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12010 ;;Total ram usage:        4 bytes
 12011 ;; Hardware stack levels used:    1
 12012 ;; This function calls:
 12013 ;;		Nothing
 12014 ;; This function is called by:
 12015 ;;		_Clock_ISR
 12016 ;; This function uses a non-reentrant model
 12017 ;;
 12018                           
 12019                           
 12020                           ;psect for function _ADCC_GetSingleConversion
 12021  0D83                     _ADCC_GetSingleConversion:
 12022                           
 12023                           ;incstack = 0
 12024                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 12025                           ;ADCC_GetSingleConversion@channel stored from wreg
 12026  0D83  00F3               	movwf	ADCC_GetSingleConversion@channel
 12027  0D84                     i1l3111:
 12028                           
 12029                           ;adcc.c: 133: ADPCH = channel;
 12030  0D84  0873               	movf	ADCC_GetSingleConversion@channel,w
 12031  0D85  0021               	movlb	1	; select bank1
 12032  0D86  009E               	movwf	30	;volatile
 12033  0D87                     i1l3113:
 12034                           
 12035                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 12036  0D87  1793               	bsf	19,7	;volatile
 12037  0D88                     i1l3115:
 12038                           
 12039                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 12040  0D88  1313               	bcf	19,6	;volatile
 12041  0D89                     i1l3117:
 12042                           
 12043                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 12044  0D89  1413               	bsf	19,0	;volatile
 12045  0D8A                     i1l3119:
 12046                           
 12047                           ;adcc.c: 145: __nop();
 12048  0D8A  0000               	nop
 12049  0D8B                     i1l872:	
 12050                           ;adcc.c: 149: {
 12051                           
 12052  0D8B  0021               	movlb	1	; select bank1
 12053  0D8C  1813               	btfsc	19,0	;volatile
 12054  0D8D  2D8F               	goto	u279_21
 12055  0D8E  2D90               	goto	u279_20
 12056  0D8F                     u279_21:
 12057  0D8F  2D8B               	goto	i1l872
 12058  0D90                     u279_20:
 12059  0D90                     i1l3121:
 12060                           
 12061                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12062  0D90  080D               	movf	13,w	;volatile
 12063  0D91  00F1               	movwf	?_ADCC_GetSingleConversion+1
 12064  0D92  080C               	movf	12,w	;volatile
 12065  0D93  00F0               	movwf	?_ADCC_GetSingleConversion
 12066  0D94                     i1l875:
 12067  0D94  0008               	return
 12068  0D95                     __end_of_ADCC_GetSingleConversion:
 12069  007E                     btemp	set	126	;btemp
 12070  007E                     int$flags	set	126
 12071  007E                     wtemp0	set	126
 12072                           
 12073                           	psect	config
 12074                           
 12075                           ;Config register CONFIG1 @ 0x8007
 12076                           ;	External Oscillator mode selection bits
 12077                           ;	FEXTOSC = OFF, Oscillator not enabled
 12078                           ;	Power-up default value for COSC bits
 12079                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 12080                           ;	Clock Out Enable bit
 12081                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 12082                           ;	Clock Switch Enable bit
 12083                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12084                           ;	Fail-Safe Clock Monitor Enable bit
 12085                           ;	FCMEN = ON, FSCM timer enabled
 12086  8007                     	org	32775
 12087  8007  3FEC               	dw	16364
 12088                           
 12089                           ;Config register CONFIG2 @ 0x8008
 12090                           ;	Master Clear Enable bit
 12091                           ;	MCLRE = ON, MCLR pin is Master Clear function
 12092                           ;	Power-up Timer Enable bit
 12093                           ;	PWRTE = OFF, PWRT disabled
 12094                           ;	Low-Power BOR enable bit
 12095                           ;	LPBOREN = OFF, ULPBOR disabled
 12096                           ;	Brown-out reset enable bits
 12097                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 12098                           ;	Brown-out Reset Voltage Selection
 12099                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 12100                           ;	Zero-cross detect disable
 12101                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 12102                           ;	Peripheral Pin Select one-way control
 12103                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 12104                           ;	Stack Overflow/Underflow Reset Enable bit
 12105                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 12106                           ;	Background Debugger
 12107                           ;	DEBUG = OFF, Background Debugger disabled
 12108  8008                     	org	32776
 12109  8008  3FFF               	dw	16383
 12110                           
 12111                           ;Config register CONFIG3 @ 0x8009
 12112                           ;	WDT Period Select bits
 12113                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12114                           ;	WDT operating mode
 12115                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 12116                           ;	WDT Window Select bits
 12117                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12118                           ;	WDT input clock selector
 12119                           ;	WDTCCS = SC, Software Control
 12120  8009                     	org	32777
 12121  8009  3F9F               	dw	16287
 12122                           
 12123                           ;Config register CONFIG4 @ 0x800A
 12124                           ;	UserNVM self-write protection bits
 12125                           ;	WRT = OFF, Write protection off
 12126                           ;	Scanner Enable bit
 12127                           ;	SCANE = available, Scanner module is available for use
 12128                           ;	Low Voltage Programming Enable bit
 12129                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 12130  800A                     	org	32778
 12131  800A  3FFF               	dw	16383
 12132                           
 12133                           ;Config register CONFIG5 @ 0x800B
 12134                           ;	UserNVM Program memory code protection bit
 12135                           ;	CP = OFF, Program Memory code protection disabled
 12136                           ;	DataNVM code protection bit
 12137                           ;	CPD = OFF, Data EEPROM code protection disabled
 12138  800B                     	org	32779
 12139  800B  3FFF               	dw	16383

Data Sizes:
    Strings     33
    Constant    10
    Data        0
    BSS         13
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      59
    BANK1            80     36      36
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[5]), STR_3(CODE[7]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), STR_2(CODE[6]), menuLCD_ISR@str(BANK0[8]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _menuLCD_ISR->_LCDstr
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_Clock_ISR
    _tsttc->i1_WriteI2C
    _map->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf
    _TMR1_ISR->_Clock_ISR
    _Clock_ISR->_map
    _map->___awdiv

Critical Paths under _main in BANK1

    _main->___fleq
    ___fleq->___xxtofl
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0    2912
                                             26 BANK1     10    10      0
                            _LCDinit
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
           _TMR3_SetInterruptHandler
                             ___fleq
                           ___xxtofl
                   _i2c1_driver_open
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     746
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fleq                                              12     4      8     242
                                             14 BANK1     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     422
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     211
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0    1003
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     941
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      62
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    5637
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    3902
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         17    17      0    3662
                                             21 BANK0     17    17      0
                             _LCDcmd
                             _LCDstr
                            _sprintf
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    2324
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               6     4      2     755
                                              9 COMMON     5     3      2
                                              0 BANK0      1     1      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    1735
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            4     4      0    1495
                                             11 COMMON     3     3      0
                                             14 BANK0      1     1      0
           _ADCC_GetSingleConversion
                                _map
                              _tsttc
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (10) i1_WriteI2C                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _map                                                 10     0     10    1382
                                              4 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR3_SetInterruptHandler
   ___fleq
     ___xxtofl (ARG)
   ___xxtofl
   _i2c1_driver_open

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
       _ADCC_GetSingleConversion
       _map
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _tsttc
         _ReadI2C
         i1_WriteI2C
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      3B       5       73.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     24      24       7       45.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      6D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      6D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Oct 20 17:31:20 2020

                                       _c 0052                                         _t 0046  
                              i1_WriteI2C 0F62                                        l30 07AF  
                                      l33 0777                                        l42 0799  
                                      l35 077C                                        l47 07AD  
                            ___awdiv@sign 0021                       ___wmul@multiplicand 0072  
                                     l120 0F61                                       l231 0D60  
                                     l170 0D39                                       l164 0DB9  
                                     l405 0D4B                                       l167 0D42  
                                     l610 0FFF                                       l606 0FF9  
                                     l607 0FFB                                       l711 0360  
                                     l375 0E71                                       l439 0E90  
                                     l720 03A0                                       l730 0638  
                                     l723 03B6                                       l724 03B8  
                                     l469 0D54                                       l727 03BF  
                                     l594 0FBE                                       l770 0543  
                                     l595 0FC0                                       l860 0DFE  
                                     l774 0596                                       l696 030E  
                                     l697 0310                                       l777 059C  
                         _timer1ReloadVal 0059                                       _map 0E91  
                 __size_of_PMD_Initialize 0008                                       wreg 0009  
                             ?_LCDsend2x4 00A2                           __end_of_LCDchar 0D32  
                                    l1313 07CD                                      l1314 07E9  
                                    l1315 07FE                                      l4001 05C3  
                                    l4011 05E8                                      l4003 05CC  
                         _timer3ReloadVal 0055                                      l4021 0604  
                                    l4013 05EC                                      l4005 05D0  
                                    l4101 0563                                      l4031 0628  
                                    l4023 0610                                      l4015 05F4  
                                    l4007 05D8                                      l4103 058F  
                                    l4033 062E                                      l4025 0614  
                                    l4017 05F8                                      l4009 05DC  
                                    l4041 048E                                      l4105 0598  
                                    l4027 061C                                      l4019 0600  
                                    l4051 04B7                                      l4043 049E  
                                    l4035 0475                                      l4107 059E  
                                    l4029 0622                                      l4061 04E1  
                                    l4053 04BE                                      l4037 047A  
                                    l4109 05A3                                      l1590 04EB  
                                    l4071 0512                                      l1591 04F7  
                                    l4063 04E5                                      l4055 04C2  
                                    l1583 04D1                                      l4047 04A7  
                                    l4039 047E                                      l4073 0516  
                                    l4065 04EF                                      l4057 04CA  
                                    l4049 04AC                                      l1577 0496  
                                    l3611 07FD                                      l3603 07B0  
                                    l4075 0517                                      l4067 04F9  
                                    l4059 04D8                                      l1579 051F  
                                    l4091 053B                                      l4083 0520  
                                    l3605 07C5                                      l4069 050D  
                                    l4093 053F                                      l4085 0536  
                                    l3607 07E1                                      l4095 0540  
                                    l4087 0538                                      l3721 075B  
                                    l3801 0F59                                      l3609 07FB  
                                    l4097 0541                                      l4089 0539  
                                    l3731 0775                                      l3811 0D3D  
                                    l3803 0F5C                                      l4099 055F  
                                    l3741 078E                                      l3733 0781  
                                    l3901 038B                                      l3821 0DFC  
                                    l3813 0D3E                                      l3805 0F5E  
                                    ?_map 0024                                      l3743 079E  
                                    l3727 0760                                      l3719 0758  
                                    l3903 0391                                      l3815 0D41  
                                    l3807 0D32                                      l3751 0D4C  
                                    l3831 0E7B                                      l3823 0E72  
                                    l3911 0DA7                                      l3729 076A  
                                    l3905 03A0                           __end_of_LCDinit 0639  
                                    l3817 0DE8                                      l3809 0D3A  
                                    l3761 0F32                                      l3753 0F26  
                                    l3841 0E53                                      l3833 0E82  
                                    l3825 0E75                                      l3921 0DB6  
                                    l3913 0DAA                                      l3739 0783  
                                    l3907 03A7                                      l3819 0DFA  
                                    l3771 0F3D                                      l3763 0F34  
                                    l3755 0F2C                                      l3851 0E63  
                                    l3843 0E56                                      l3835 0E84  
                                    l3827 0E77                                      l3915 0DAD  
                                    l3923 0D55                                      l3861 0FAF  
                                    l3909 03BC                                      l3781 0F48  
                                    l3773 0F3F                                      l3765 0F36  
                                    l3757 0F2E                                      l3749 0D43  
                                    l3853 0E65                                      l3845 0E58  
                                    l3837 0E85                                      l3829 0E79  
                                    l3917 0DB0                                      l3925 0D5A  
                                    l3871 0FEA                                      l3863 0FC4  
                                    l3791 0F4E                                      l3783 0F49  
                                    l3775 0F44                                      l3767 0F39  
                                    l3759 0F30                                      l3855 0E66  
                                    l3847 0E5A                                      l3839 0E8D  
                                    l3919 0DB3                                      l3927 0D5B  
                                    l3865 0FD3                                      l3881 0323  
                                    l3873 02EE                                      l3793 0F50  
                                    l3785 0F4A                                      l3777 0F46  
                                    l3769 0F3B                                      l3857 0E6E  
                                    l3849 0E5C                                      l3929 0D5D  
                                    l3867 0FD7                                      l3859 0FAF  
                                    l3891 0351                                      l3883 0327  
                                    l3875 02F3                                      l3795 0F52  
                                    l3787 0F4B                                      l3779 0F47  
                                    l3869 0FE6                                      l3893 0360  
                                    l3885 0336                                      l3877 02FF  
                                    l3797 0F54                                      l3789 0F4C  
                                    l3895 0367                                      l3887 033C  
                                    l3879 0314                                      l3799 0F56  
                                    l3897 0376                                      l3889 034B  
                                    l3899 037C                           __end_of_LCDsend 1000  
                                    STR_1 1000                                      STR_2 1020  
                                    STR_3 1019                                      STR_4 1026  
                                    _LATA 0016                                      _LATB 0017  
                                    _LATC 0018                                      u4000 0376  
                                    _LATD 0019                                      u4001 0375  
                                    _LATE 001A                                      u4010 038B  
                                    u4011 038A                                      u4020 03A0  
                                    u4021 039F                                      u4030 03B6  
                                    u4031 03B5                                      u4040 03BC  
                                    u4041 03BB                                      u4050 0D5A  
                                    u4051 0D59                                      u3510 07C5  
                                    u3511 07C4                                      u3520 07E1  
                                    u3521 07E0                                      u3530 07FB  
                                    u4410 04E5                                      u4330 047A  
                                    u3531 07FA                                      u4411 04E4  
                                    u4331 0479                                      u4420 04EB  
                                    u4340 047E                                      u4421 04EA  
                                    u4405 04DB                                      u4341 047D  
                                    u4430 04EF                                      u4350 049E  
                                    u3535 07F7                                      u4431 04EE  
                                    u4351 049D                                      u3800 0775  
                                    u4440 0503                                      u3801 0774  
                                    u3810 077C                                      u4450 0512  
                                    u4370 04BD                                      u3811 077B  
                                    u4507 05D5                                      u4451 0511  
                                    u4371 04BC                                      u3820 0781  
                                    u3900 0FE6                                      u4460 0516  
                                    _PMD0 0796                                      u3821 0780  
                                    u3901 0FE5                                      u4517 05DD  
                                    u4461 0515                                      u4445 04FF  
                                    u4365 04B1                                      _PMD1 0797  
                                    i1l22 0E12                                      i1l30 0FAC  
                                    u3830 078E                                      u3910 0FF9  
                                    u4390 04D7                                      u4470 058F  
                                    _PMD2 0798                                      i1l23 0E13  
                                    u3831 078D                                      u3911 0FF8  
                                    u4527 05E9                                      u4391 04D6  
                                    u4471 058E                                      _PMD3 0799  
                                    u3840 0799                                      u3920 0FFF  
                                    u4480 0596                                      _PMD4 079A  
                                    i1l33 0F7E                                      u3841 0798  
                                    u3921 0FFE                                      u4537 05F1  
                                    u4385 04CB                                      u4481 0595  
                                    _PMD5 079B                                      i1l26 0E18  
                                    i1l42 0F9C                                      u3850 079E  
                                    i1l35 0F83                                      u3851 079D  
                                    u4547 05FD                                      u3860 07AD  
                                    u3780 075F                                      u3940 030E  
                                    u3861 07AC                                      u3781 075E  
                                    u3941 030D                                      u4557 0605  
                                    u3790 076A                                      u3870 0FBE  
                                    u3950 0314                                      i1l47 0FAB  
                                    u3791 0769                                      u3871 0FBD  
                                    u3951 0313                                      u3935 02F6  
                                    u4567 0611                                      u3880 0FC4  
                                    u3960 0323                                      u3881 0FC3  
                                    u3961 0322                                      u4577 0619  
                                    u4497 05C7                                      u3890 0FD3  
                                    u3970 0336                                      u3891 0FD2  
                                    u3971 0335                                      u4587 0635  
                                    u3980 034B                                      u4597 03BD  
                                    u3981 034A                                      u3990 0360  
                                    u3991 035F                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                            ?_menuLCD_ISR 0070                                      _main 0520  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    map@x 0024                                      btemp 007E  
                                    start 0034                           _TMR3_Initialize 0E72  
              ??_TMR1_SetInterruptHandler 00A2                           __end_of_ReadI2C 0E19  
                                   ??_map 007B            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0D43                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 0D61                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                         __end_of___awdiv 0699                                     _ADPRE 009C  
                                   _ADRPT 010D                                     _T1CLK 0211  
                         ___awdiv@divisor 0076                                     _T1CON 020E  
                                   _T3CLK 0217                                     _T3CON 0214  
                         __end_of___lwdiv 0F26                                     i1l402 0DD0  
                                   i1l335 0017                                     i1l408 0003  
                                   i1l344 0032                           __end_of___lwmod 0EEA  
                                   i1l337 0023                                     i1l530 021B  
                                   i1l338 0032                                     i1l531 021C  
                                   i1l515 01DF                                     i1l339 002C  
                                   i1l453 0D82                                     i1l542 024D  
                                   i1l518 01EB                                     i1l551 0263  
                                   i1l543 024F                                     i1l519 01EC  
                                   i1l711 0422                                     i1l720 0458  
                                   i1l472 07FF                                     i1l466 0DE7  
                                   i1l555 0272                                     i1l723 046A  
                                   i1l580 02D6                                     i1l556 0273  
                                   i1l548 025E                                     i1l724 046B  
                                   i1l549 025F                                     i1l389 0D71  
                                   i1l733 0D29                                     i1l742 0E33  
                                   i1l567 02A2                                     i1l727 0472  
                                   i1l568 02A3                                     i1l736 0D31  
                                   i1l585 02E5                                     i1l761 0755  
                                   i1l586 02E6                                     i1l579 02D4  
                                   i1l764 06F7                                     i1l749 0EB5  
                                   i1l589 02EB                                     i1l872 0D8B  
                                   i1l696 03DE                                     i1l697 03DF  
                                   i1l875 0D94                           ___awdiv@counter 0020  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TMR3H 0213  
                                   _TMR3L 0212                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR3_SetInterruptHandler 0009                 ?_TMR3_SetInterruptHandler 00A0  
                        __end_of_TMR1_ISR 0DD1                          __end_of_TMR3_ISR 0DE8  
          ??_TMR3_DefaultInterruptHandler 0070                           __end_of_dpowers 1019  
                         __end_of_isdigit 0DA7                                     main@a 00C2  
                                   _tsttc 01DF                   __end_of_TMR1_Initialize 0E72  
                                   pclath 000A                            menuLCD_ISR@str 0037  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 01DF                           _TMR1_WriteTimer 0D61  
                         __initialization 0036                              __end_of_main 05C3  
                             ?i1_WriteI2C 0070                       __size_of_LCDsend2x4 00D4  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00BA  
                      __size_of_Clock_ISR 005E                     _TMR3_InterruptHandler 0053  
                               ??_LCDchar 0078                                 ??_LCDinit 00A8  
                               ??_LCDsend 00A2                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                          ___awdiv@dividend 0078  
                                  _ADUTHL 0110                          __end_of_WriteI2C 07B0  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T1GATE 0210  
                                  _T1GCON 020F                                    ?_tsttc 0070  
                                  _T3GATE 0216                                    _T3GCON 0215  
                                  _RC3PPS 0F23                                    i1l1105 005F  
                 TMR1_WriteTimer@timerVal 0070                                    i1l1123 0112  
                                  _RC4PPS 0F24                                    i1l1140 01DE  
                                  i1l1144 0E3E                                    i1l3001 0ECC  
                                  i1l1146 0E52                                    i1l3003 0ED6  
                                  i1l3101 0E19                                    i1l3005 0EDA  
                                  i1l3111 0D84                                    i1l3103 0E1A  
                                  i1l3007 0EDF                                    i1l1416 0F25  
                                  i1l3121 0D90                                    i1l3113 0D87  
                                  i1l3105 0E1E                                    i1l3009 0EE5  
                                  i1l3201 014B                                    _ODCONA 0F3A  
                                  i1l1426 0EE9                                    _ODCONB 0F45  
                                  i1l3115 0D88                                    i1l3107 0E91  
                                  i1l3051 01FB                                    i1l3211 016B  
                                  i1l3203 014F                                    i1l3131 0056  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  i1l3117 0D89                                    i1l3061 022B  
                                  i1l3053 01FF                                    u200_25 03C9  
                                  i1l3221 018B                                    i1l3213 0175  
                                  i1l3205 015A                                    i1l3141 006D  
                                  i1l3133 005B                                    i1l3125 0044  
                                  _ODCONE 0F66                                    i1l3119 0D8A  
                                  i1l3071 0267                                    i1l3063 022F  
                                  i1l3055 020B                                    i1l3047 01DF  
                                  i1l3223 01B2                                    i1l3215 017B  
                                  i1l3207 0160                                    i1l3231 01DA  
                                  i1l3151 00A0                                    i1l3143 0079  
                                  i1l3135 0060                                    i1l3127 0049  
                                  u201_20 03DE                                    i1l1297 0698  
                                  i1l3081 0296                                    i1l3073 0277  
                                  i1l3065 023B                                    i1l3057 020F  
                                  i1l3049 01F0                                    u201_21 03DD  
                                  i1l3225 01B9                                    i1l3217 0182  
                                  i1l3209 0167                                    i1l3161 00CF  
                                  i1l3145 007C                                    i1l3129 004F  
                                  i1l3091 02C8                                    i1l3083 02A7  
                                  i1l3075 0282                                    i1l3067 0241  
                                  i1l3059 0220                                    i1l3227 01BD  
                                  i1l3219 0186                                    i1l3163 00D3  
                                  i1l3147 008D                                    i1l3155 00AC  
                                  i1l3139 0064                                    i1l3093 02DA  
                                  i1l3085 02B2                                    i1l3077 0286  
                                  i1l3069 0253                                    i1l3421 06F8  
                                  i1l3341 0D61                                    i1l3501 0DCB  
                                  i1l3181 0108                                    i1l3173 00DE  
                                  i1l3165 00D7                                    i1l3157 00C4  
                                  i1l3149 009C                                    i1l3229 01C6  
                                  i1l3095 02EA                                    i1l3087 02B6  
                                  i1l3079 0292                                    i1l3431 073F  
                                  i1l3423 072E                                    i1l3343 0D66  
                                  i1l3351 0D6D                                    i1l3191 012D  
                                  i1l3183 010E                                    i1l3167 00DC  
                                  i1l3159 00CB                                    u210_20 046A  
                                  u202_20 03E3                                    i1l3089 02C2  
                                  i1l3433 0746                                    i1l3425 0732  
                                  i1l3353 0D6F                                    i1l3345 0D67  
                                  i1l3361 0D7A                                    u210_21 0469  
                                  u202_21 03E2                                    i1l3193 0133  
                                  i1l3185 011D                                    i1l3177 00F8  
                                  i1l3441 0699                                    i1l3435 074A  
                                  i1l3427 0739                                    i1l3347 0D69  
                                  i1l3363 0D7C                                    i1l3355 0D72  
                                  i1l3099 0D24                                    i1l3195 013A  
                                  i1l3187 0126                                    i1l3179 0102  
                                  i1l3451 06C4                                    i1l3443 06AE  
                 __end_of_TMR3_Initialize 0E91                                    i1l3437 074C  
                                  i1l3429 073D                                    i1l3349 0D6B  
                                  i1l3357 0D77                                    i1l3365 0D7E  
                                  i1l1597 0DA6                                    i1l2901 0DA3  
                                  i1l3197 013E                                    i1l3189 0129  
                                  i1l3461 06F0                                    i1l3453 06C8  
                                  i1l3445 06B2                                    i1l2911 0E3A  
                                  i1l2831 0F88                                    i1l3439 0753  
                                  i1l3367 0D80                                    i1l3359 0D78  
                                  i1l2903 0DA5                                    i1l3199 0144  
                                  i1l3455 06D8                                    i1l3447 06B9  
                                  u211_20 046F                                    u203_20 03EE  
                                  i1l2921 0639                                    i1l2913 0E43  
                                  i1l2841 0FA0                                    i1l2825 0F6B  
                                  i1l2817 0F63                                    u211_21 046E  
                                  u203_21 03ED                                    i1l3457 06DF  
                                  i1l3449 06BD                                    i1l2931 064A  
                                  i1l2923 063B                                    i1l2915 0E48  
                                  i1l2907 0E34                                    i1l2827 0F74  
                                  i1l2819 0F66                                    i1l2851 03D2  
                                  i1l3459 06E3                                    i1l3491 0DDB  
                                  i1l2941 065E                                    i1l2933 064F  
                                  i1l2925 063F                                    i1l2917 0E4E  
                                  i1l2909 0E36                                    i1l2829 0F7D  
                                  i1l2837 0F8A                                    i1l2861 0404  
                                  i1l2853 03E3                                    i1l3493 0DE2  
                                  i1l2951 067E                                    i1l2943 0663  
                                  i1l2935 0653                                    i1l2927 0644  
                                  i1l2839 0F93                                    i1l3495 0DBA  
                                  i1l2871 0434                                    i1l2863 0410  
                                  i1l2855 03EE                                    i1l2847 03C1  
                                  i1l3487 0DD1                                    i1l3671 001B  
                                  i1l3663 0006                                    u220_20 0E4E  
                                  u212_20 0E09                                    u204_20 03FE  
                                  i1l2961 0694                                    i1l2953 067F  
                                  i1l2945 0667                                    i1l2937 0655  
                                  i1l2929 0646                                    u220_21 0E4D  
                                  u212_21 0E08                                    i1l3497 0DBC  
                                  i1l2881 045E                                    i1l2873 043A  
                                  i1l2865 0416                                    u204_21 03FD  
                                  i1l2857 03F2                                    i1l2849 03C6  
                                  i1l3489 0DD3                                    i1l3673 001F  
                                  i1l3665 000A                                    i1l2955 0684  
                                  i1l2947 066B                                    i1l2939 065B  
                                  i1l3499 0DC4                                    i1l2883 046F  
                                  i1l2875 0446                                    i1l2867 0422  
                                  i1l2859 03FE                                    i1l2971 0EF5  
                                  i1l3675 0027                                    i1l3667 000F  
                                  i1l2949 067A                                    i1l2957 068A  
                                  i1l2885 0DFF                                    i1l2877 044C  
                                  i1l2869 0428                                    i1l2893 0D2B  
                                  i1l2981 0F15                                    i1l2973 0EFA  
                                  i1l2965 0EEA                                    i1l3669 0013  
                                  i1l2959 068F                                    i1l2887 0E09  
                                  i1l2879 0458                                    i1l2983 0F16  
                                  i1l2975 0EFE                                    i1l2967 0EEC  
                                  i1l2991 0EB6                                    i1l2895 0D96  
                                  i1l3679 0030                                    u221_20 063F  
                                  u213_20 0E12                                    u205_20 0410  
                                  u221_21 063E                                    i1l2889 0E17  
                                  u213_21 0E11                                    u205_21 040F  
                                  i1l2985 0F1B                                    i1l2977 0F02  
                                  i1l2969 0EF2                                    i1l2993 0EBC  
                                  i1l2897 0D97                                    i1l2979 0F11  
                                  i1l2987 0F21                                    i1l2995 0EBF  
                                  i1l2899 0D9D                                    i1l2997 0EC4  
                                  i1l2999 0EC8                                    u230_20 068F  
                                  u222_20 064A                                    u214_20 0E17  
                                  u206_20 0422                                    u230_21 068E  
                                  u222_21 0649                                    u214_21 0E16  
                                  u206_21 0421                                    u223_20 065B  
                                  u207_20 0434                                    u231_20 0EF2  
                                  u215_20 0D9D                                    u223_21 065A  
                                  u207_21 0433                                    u231_21 0EF1  
                                  u215_21 0D9C                                    u320_20 0753  
                                  u208_20 0446                                    u240_20 0ECC  
                                  u216_20 0DA3                                    u320_21 0752  
                                  u208_21 0445                                    u240_21 0ECB  
                                  u216_21 0DA2                                    u224_25 065F  
                                  u232_25 0EF6                                    u225_20 066B  
                                  u217_20 0E3A                                    u209_20 0458  
                                  u233_20 0F02                                    u241_20 0ED6  
                                  u225_21 066A                                    u217_21 0E39  
                                  u209_21 0457                                    u233_21 0F01  
                                  u241_21 0ED5                                    _LCDcmd 0D23  
                                  u241_25 0ED2                                    u322_20 0DE2  
                                  u322_21 0DE1                                    u226_25 066C  
                                  u218_25 0E3F                                    u234_25 0F03  
                                  u242_25 0EDB                                    u227_20 067A  
                                  u323_20 0DCB                                    u235_20 0F11  
                                  u243_20 0EE5                                    u227_21 0679  
                                  u323_21 0DCA                                    u235_21 0F10  
                                  u243_21 0EE4                                    u227_25 0676  
                                  u219_25 0E44                                    u235_25 0F0D  
                                  u260_20 023B                                    u260_21 023A  
                                  u228_25 0680                                    u236_25 0F17  
                                  u229_20 068A                                    u261_20 024D  
                                  u253_20 01EB                                    u237_20 0F21  
                                  u229_21 0689                                    u261_21 024C  
                                  u253_21 01EA                                    u237_21 0F20  
                                  u270_20 02A2                                    u262_20 0253  
                                  u254_20 01F0                                    u318_20 0739  
                                  u238_20 0EBC                                    u270_21 02A1  
                                  u262_21 0252                                    u254_21 01EF  
                                  u318_21 0738                                    u238_21 0EBB  
                                  u191_20 0F6A                                    u271_20 02A7  
                                  u263_20 025E                                    u255_20 01FB  
                                  u319_20 0746                                    u191_21 0F69  
                                  u271_21 02A6                                    u263_21 025D  
                                  u255_21 01FA                                    u319_21 0745  
                                  u239_25 0EC0                                    u192_20 0F74  
                                  u272_20 02B2                                    u264_20 0263  
                                  u256_20 020B                                    u280_20 004F  
                                  u192_21 0F73                                    u272_21 02B1  
                                  u264_21 0262                                    u256_21 020A  
                                  u280_21 004E                                    u193_20 0F7D  
                                  u273_20 02C2                                    u265_20 0267  
                                  u257_20 021B                                    u281_20 0079  
                                  u193_21 0F7C                                    u273_21 02C1  
                                  u265_21 0266                                    u257_21 021A  
                                  u281_21 0078                                    u194_20 0F83  
                                  u274_20 02D4                                    u266_20 0272  
                                  u258_20 0220                                    u290_20 0133  
                                  u282_20 00AC                                    u370_20 0013  
                                  u194_21 0F82                                    u274_21 02D3  
                                  u266_21 0271                                    u258_21 021F  
                                  u290_21 0132                                    u282_21 00AB  
                                  u370_21 0012                                    u195_20 0F88  
                                  u275_20 02DA                                    u267_20 0277  
                                  u259_20 022B                                    u291_20 0144  
                                  u283_20 00D3                                    u371_20 001B  
                                  u195_21 0F87                                    u275_21 02D9  
                                  u267_21 0276                                    u259_21 022A  
                                  u291_21 0143                                    u283_21 00D2  
                                  u371_21 001A                                    u196_20 0F93  
                                  u276_20 02E5                                    u268_20 0282  
                                  u292_20 0159                                    u284_20 00F7  
                                  u372_20 001F                                    u196_21 0F92  
                                  u276_21 02E4                                    u268_21 0281  
                                  u292_21 0158                                    u284_21 00F6  
                                  u372_21 001E                                    u284_25 00F3  
                                  _LCDstr 0E19                                    u460_27 0470  
                                  u197_20 0F9C                                    u277_20 02EA  
                                  u269_20 0292                                    u293_20 0160  
                                  u285_20 0102                                    u373_20 0027  
                                  u197_21 0F9B                                    u277_21 02E9  
                                  u269_21 0291                                    u293_21 015F  
                                  u285_21 0101                                    u373_21 0026  
                                  u198_20 0FA0                                    u278_20 0E33  
                                  u294_20 0175                                    u286_20 0108  
                                  u374_20 002B                                    u198_21 0F9F  
                                  u278_21 0E32                                    u294_21 0174  
                                  u286_21 0107                                    u374_21 002A  
                                  u279_20 0D90                                    u199_20 0FAB  
                                  u295_20 017B                                    u287_20 010E  
                                  u375_20 0030                                    u279_21 0D8F  
                                  u199_21 0FAA                                    u295_21 017A  
                                  u287_21 010D                                    u375_21 002F  
                                  u296_20 01C6                                    u288_20 011D  
                                  u368_20 000A                                    u296_21 01C5  
                                  u288_21 011C                                    u368_21 0009  
                                  u288_25 0119                                    u297_20 01DA  
                                  u289_20 012D                                    u369_20 000F  
                                  u297_21 01D9                                    u289_21 012C  
                                  u369_21 000E                                    u298_20 0D66  
                                  u298_21 0D65                                    u299_20 0D77  
                                  u299_21 0D76                                    _OSCFRQ 0893  
                        __end_of___xxtofl 0520                                 ??_ReadI2C 0070  
                             LCDsend2x4@c 00A5                           _TMR3_WriteTimer 0D72  
    __end_of_TMR1_DefaultInterruptHandler 0004     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0003                                    ___fleq 07B0  
                           ?i1_LCDsend2x4 0072                                    ___wmul 0E34  
                               ??___awdiv 007A                                 ??___lwdiv 0074  
                               ??___lwmod 007C                          ___awdiv@quotient 0022  
                         _ADCC_Initialize 0DE8                            _PMD_Initialize 0D32  
                               ??_isdigit 0070         __size_of_ADCC_GetSingleConversion 0012  
               ?_ADCC_GetSingleConversion 0070  TMR3_SetInterruptHandler@InterruptHandler 00A0  
TMR1_SetInterruptHandler@InterruptHandler 00A0                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 0D72                       __size_ofi1_WriteI2C 004B  
                        ?_TMR1_Initialize 0070                              ___xxtofl@arg 00AA  
                            ___xxtofl@exp 00A9                         _SYSTEM_Initialize 0DA7  
                            ___xxtofl@val 00A0                                ___fleq@ff1 00AE  
                              ___fleq@ff2 00B2                   __end_of__initialization 003E  
                      ?_SYSTEM_Initialize 0070                         __end_of_Clock_ISR 0756  
                    __size_of_menuLCD_ISR 005F                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                       ??_SYSTEM_Initialize 00A2  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                               ?_TMR3_ISR 0070                              menuLCD_ISR@l 0043  
                           __end_of_tsttc 02EC                    __end_of_PMD_Initialize 0D3A  
                            ??_LCDsend2x4 00A3                 __end_of_SYSTEM_Initialize 0DBA  
                            sprintf@width 0031                   __end_of_TMR3_WriteTimer 0D83  
                                 ??_tsttc 0072                                __pbssBANK0 0046  
                                 ?_LCDcmd 0070                          ?_TMR3_Initialize 0070  
                                 ?_LCDstr 0079                                   LCDcmd@c 0078  
                                 LCDstr@c 0020                                   LCDstr@p 0079  
                              __pmaintext 0520                                   ?___fleq 00AE  
        __end_of_TMR3_SetInterruptHandler 0D55                                   ?___wmul 0070  
                              ??_TMR1_ISR 007E                                ??_TMR3_ISR 007E  
                 __end_of_ADCC_Initialize 0DFF                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                      __end_of_LCDsend2x4 03C0                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070                         ?_i2c1_driver_open 0070  
                               ?___xxtofl 00A0                                   _LCDchar 0D2A  
                                 _LCDinit 05C3                                   _LCDsend 0FAD  
                      ??_i2c1_driver_open 00A0                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                   _OSCTUNE 0892  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                                   _SSP1MSK 018E  
                        ?_TMR1_WriteTimer 0070                              LCDsend2x4@hc 00A6  
                            LCDsend2x4@lc 00A7                           __size_of_LCDcmd 0007  
                      _i2c1_driver_i2cISR 004E                           __size_of_LCDstr 001B  
                                 _ReadI2C 0DFF                           __size_of___fleq 004F  
                            ??i1_WriteI2C 0070                                   ___awdiv 0639  
                         __size_of___wmul 001F                                   ___lwdiv 0EEA  
                                 ___lwmod 0EB6                                ??_WriteI2C 00A0  
                                 __ptext1 0D55                                   __ptext2 0473  
                                 __ptext3 07B0                                   __ptext4 0DA7  
                                 __ptext5 0E72                                   __ptext6 0D4C  
                                 __ptext7 0E53                                   __ptext8 0D43  
                                 __ptext9 0D32            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                                   _dpowers 100F  
                   _OSCILLATOR_Initialize 0D3A                              __size_of_map 0025  
                                 _isdigit 0D95                                ??___xxtofl 00A4  
                               _T3CONbits 0214         __size_of_TMR1_SetInterruptHandler 0009  
                ??_PIN_MANAGER_Initialize 00A0                 ?_TMR1_SetInterruptHandler 00A0  
                    __end_ofi1_LCDsend2x4 0473                __size_of_SYSTEM_Initialize 0013  
                                 main@aux 00BE                                   _sprintf 0042  
                                 clrloop0 0D1E                      end_of_initialization 003E  
                        ?_TMR3_WriteTimer 0070                        __end_ofi1_WriteI2C 0FAD  
                          i1LCDsend2x4@hc 0076                            i1LCDsend2x4@lc 0077  
                        ?_ADCC_Initialize 0070          __end_of_ADCC_GetSingleConversion 0D95  
                               _PORTBbits 000D                  _TMR3_SetInterruptHandler 0D4C  
                           ___xxtofl@sign 00A8                                 _TRISCbits 0013  
                              map@out_max 002C                                map@out_min 002A  
                          __end_of_LCDcmd 0D2A                            __end_of_LCDstr 0E34  
                          LCDsend2x4@mode 00A2                                 _Clock_ISR 06F8  
                          __end_of___fleq 07FF                            __end_of___wmul 0E53  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR3_ISR 0017  
                  ?_OSCILLATOR_Initialize 0070                             menuLCD_ISR@tt 003F  
                     start_initialization 0036           __size_of_PIN_MANAGER_Initialize 003C  
                             __end_of_map 0EB6                          WriteI2C@data_out 00A1  
                                ??_LCDcmd 0078                                  ??_LCDstr 007B  
                           ??_menuLCD_ISR 0035                  __size_of_TMR1_Initialize 001F  
                                ??___fleq 00B6                          ??_PMD_Initialize 00A0  
                              ?_Clock_ISR 0070                                  ??___wmul 0074  
                       __size_of_WriteI2C 005A                     __size_ofi1_LCDsend2x4 00B3  
                _ADCC_GetSingleConversion 0D83                                  ?_LCDchar 0070  
                                ?_LCDinit 0070                                  ?_LCDsend 0070  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                         __size_of___xxtofl 00AD  
                            _isdigit$2263 0070                                  LCDchar@c 0078  
                                LCDsend@c 00A3                               sprintf@flag 0030  
               __size_of_i2c1_driver_open 000C                               sprintf@prec 002D  
                                ?_ReadI2C 0070                                 __pnvBANK0 0053  
                        ___lwdiv@dividend 0072                    _PIN_MANAGER_Initialize 0F26  
                __size_of_TMR3_Initialize 001F                       __end_of_menuLCD_ISR 06F8  
        __end_of_TMR1_SetInterruptHandler 0D4C           ADCC_GetSingleConversion@channel 0073  
                                ?___awdiv 0076                              i1_LCDsend2x4 03C0  
                                ?___lwdiv 0070                                  ?___lwmod 0078  
             _i2c1_driver_busCollisionISR 0050              ??_INTERRUPT_InterruptManager 007E  
                                ?_isdigit 0070                          ___lwdiv@quotient 0075  
                                ?_sprintf 0020                            __size_of_tsttc 010D  
                          ___wmul@product 0074                                  _LATAbits 0016  
                               clear_ram0 0D1D                                  _PIE3bits 0719  
                                _PIE4bits 071A                             i1LCDsend2x4@c 0075  
                            Clock_ISR@lum 002E                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0030                                  _PIR3bits 070F  
                                _PIR4bits 0710                ??_TMR3_SetInterruptHandler 00A2  
                             ??_Clock_ISR 007B                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 0DBA  
                                _TMR3_ISR 0DD1                                  _SSP1STAT 018F  
                               map@in_max 0028                                 map@in_min 0026  
                       ??_TMR1_Initialize 00A2                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                         ___wmul@multiplier 0070  
                      i1WriteI2C@data_out 0071                          __size_of_LCDchar 0008  
                        __size_of_LCDinit 0076                          __size_of_LCDsend 0053  
                             _menuLCD_ISR 0699                          __size_of_ReadI2C 001A  
                              _ADSTATbits 0097                  __size_of_TMR3_WriteTimer 0011  
                 ??_OSCILLATOR_Initialize 00A0                          __size_of___awdiv 0060  
                        __size_of___lwdiv 003C                          __size_of___lwmod 0034  
                                _WriteI2C 0756                         ??_TMR3_Initialize 00A2  
                _TMR1_SetInterruptHandler 0D43                          i1LCDsend2x4@mode 0072  
                   _TMR1_InterruptHandler 0057                                sprintf@val 002E  
                                ___xxtofl 0473                  __size_of_ADCC_Initialize 0017  
                        __size_of_isdigit 0012                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                                  __ptext10 0F26  
                                __ptext11 0D3A                                  __ptext20 0699  
                                __ptext12 0DE8                                  __ptext21 0042  
                                __ptext13 05C3                                _T1GCONbits 020F  
                                __ptext30 0DBA                                  __ptext22 0D95  
                                __ptext14 02EC                                  __ptext31 0D61  
                                __ptext23 0EB6                                  __ptext15 0FAD  
                                __ptext40 0D83                                  __ptext32 06F8  
                                __ptext24 0EEA                                  __ptext16 0756  
                                __ptext33 0003                                  __ptext25 0E19  
                                __ptext34 01DF                                  __ptext26 0D2A  
                                __ptext18 0DD1                                  __ptext35 0F62  
                                __ptext27 0D23                                  __ptext19 07FF  
                                __ptext36 0DFF                                  __ptext28 03C0  
                                __ptext37 0E91                                  __ptext29 0D72  
                                __ptext38 0E34                                  __ptext39 0639  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
                        __size_of_sprintf 019D                                _T3GCONbits 0215  
                 TMR3_WriteTimer@timerVal 0070                          _i2c1_driver_open 0D55  
                           __size_of_main 00A3                                  _lumLevel 004C  
                              tsttc@value 0073                ??_ADCC_GetSingleConversion 0073  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0034  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072      __end_of_TMR3_DefaultInterruptHandler 0800  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 07FF  
                              _INTCONbits 000B                                  isdigit@c 0071  
                              _LCDsend2x4 02EC                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0033  
                        ___lwmod@dividend 007A                   ?_PIN_MANAGER_Initialize 0070  
                       ??_TMR3_WriteTimer 0072                             __pstringtext1 100F  
                           __pstringtext2 1000                             __pstringtext3 1019  
                           __pstringtext4 1020                             __pstringtext5 1026  
                           __pstringtext6 0000                                  sprintf@c 0034  
                                sprintf@f 0020             ?_TMR3_DefaultInterruptHandler 0070  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         ___lwmod@divisor 0078                           ___lwmod@counter 007D  
          __end_of_PIN_MANAGER_Initialize 0F62                         ??_ADCC_Initialize 00A0  
                         _TMR1_Initialize 0E53  
