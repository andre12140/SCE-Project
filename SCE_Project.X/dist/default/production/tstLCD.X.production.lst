

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Oct 19 23:47:11 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.30
    59                           ; Generated 15/09/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F18875 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001C                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001D                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  008C                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0110                     	;# 
   153  0110                     	;# 
   154  0111                     	;# 
   155  0112                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0116                     	;# 
   163  0117                     	;# 
   164  0119                     	;# 
   165  0119                     	;# 
   166  0119                     	;# 
   167  011A                     	;# 
   168  011A                     	;# 
   169  011A                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011C                     	;# 
   176  011C                     	;# 
   177  011C                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  011D                     	;# 
   181  011E                     	;# 
   182  011E                     	;# 
   183  011E                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  018E                     	;# 
   192  018F                     	;# 
   193  0190                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0196                     	;# 
   197  0197                     	;# 
   198  0198                     	;# 
   199  0199                     	;# 
   200  019A                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  020C                     	;# 
   204  020C                     	;# 
   205  020D                     	;# 
   206  020E                     	;# 
   207  020F                     	;# 
   208  020F                     	;# 
   209  0210                     	;# 
   210  0210                     	;# 
   211  0211                     	;# 
   212  0211                     	;# 
   213  0212                     	;# 
   214  0212                     	;# 
   215  0213                     	;# 
   216  0214                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0216                     	;# 
   220  0216                     	;# 
   221  0217                     	;# 
   222  0217                     	;# 
   223  0218                     	;# 
   224  0218                     	;# 
   225  0219                     	;# 
   226  021A                     	;# 
   227  021B                     	;# 
   228  021B                     	;# 
   229  021C                     	;# 
   230  021C                     	;# 
   231  021D                     	;# 
   232  021D                     	;# 
   233  021E                     	;# 
   234  021F                     	;# 
   235  028C                     	;# 
   236  028C                     	;# 
   237  028D                     	;# 
   238  028D                     	;# 
   239  028E                     	;# 
   240  028F                     	;# 
   241  0290                     	;# 
   242  0290                     	;# 
   243  0291                     	;# 
   244  0292                     	;# 
   245  0292                     	;# 
   246  0293                     	;# 
   247  0293                     	;# 
   248  0294                     	;# 
   249  0295                     	;# 
   250  0296                     	;# 
   251  0296                     	;# 
   252  0297                     	;# 
   253  0298                     	;# 
   254  0298                     	;# 
   255  0299                     	;# 
   256  0299                     	;# 
   257  029A                     	;# 
   258  029B                     	;# 
   259  029C                     	;# 
   260  029C                     	;# 
   261  029D                     	;# 
   262  030C                     	;# 
   263  030C                     	;# 
   264  030D                     	;# 
   265  030E                     	;# 
   266  030F                     	;# 
   267  0310                     	;# 
   268  0310                     	;# 
   269  0311                     	;# 
   270  0312                     	;# 
   271  0313                     	;# 
   272  0314                     	;# 
   273  0314                     	;# 
   274  0315                     	;# 
   275  0316                     	;# 
   276  0317                     	;# 
   277  0318                     	;# 
   278  0318                     	;# 
   279  0319                     	;# 
   280  031A                     	;# 
   281  031B                     	;# 
   282  031C                     	;# 
   283  031C                     	;# 
   284  031D                     	;# 
   285  031E                     	;# 
   286  031F                     	;# 
   287  038C                     	;# 
   288  038C                     	;# 
   289  038D                     	;# 
   290  038E                     	;# 
   291  0390                     	;# 
   292  0390                     	;# 
   293  0391                     	;# 
   294  0392                     	;# 
   295  040C                     	;# 
   296  040D                     	;# 
   297  040E                     	;# 
   298  040F                     	;# 
   299  0410                     	;# 
   300  0411                     	;# 
   301  0416                     	;# 
   302  0416                     	;# 
   303  0417                     	;# 
   304  0418                     	;# 
   305  0418                     	;# 
   306  0419                     	;# 
   307  041A                     	;# 
   308  041A                     	;# 
   309  041B                     	;# 
   310  041C                     	;# 
   311  041C                     	;# 
   312  041D                     	;# 
   313  041E                     	;# 
   314  041F                     	;# 
   315  048C                     	;# 
   316  048C                     	;# 
   317  048D                     	;# 
   318  048E                     	;# 
   319  048F                     	;# 
   320  048F                     	;# 
   321  0490                     	;# 
   322  0491                     	;# 
   323  0492                     	;# 
   324  0492                     	;# 
   325  0493                     	;# 
   326  0494                     	;# 
   327  0495                     	;# 
   328  0495                     	;# 
   329  0496                     	;# 
   330  0497                     	;# 
   331  0498                     	;# 
   332  0499                     	;# 
   333  049A                     	;# 
   334  049B                     	;# 
   335  049C                     	;# 
   336  049D                     	;# 
   337  050C                     	;# 
   338  050C                     	;# 
   339  050D                     	;# 
   340  050E                     	;# 
   341  050F                     	;# 
   342  050F                     	;# 
   343  0510                     	;# 
   344  0511                     	;# 
   345  0512                     	;# 
   346  0512                     	;# 
   347  0513                     	;# 
   348  0514                     	;# 
   349  0515                     	;# 
   350  0515                     	;# 
   351  0516                     	;# 
   352  0517                     	;# 
   353  0518                     	;# 
   354  0519                     	;# 
   355  051A                     	;# 
   356  051B                     	;# 
   357  051C                     	;# 
   358  051D                     	;# 
   359  058C                     	;# 
   360  058C                     	;# 
   361  058D                     	;# 
   362  058E                     	;# 
   363  058F                     	;# 
   364  058F                     	;# 
   365  0590                     	;# 
   366  0591                     	;# 
   367  0592                     	;# 
   368  0593                     	;# 
   369  060C                     	;# 
   370  060D                     	;# 
   371  060E                     	;# 
   372  060F                     	;# 
   373  0610                     	;# 
   374  0611                     	;# 
   375  0612                     	;# 
   376  0613                     	;# 
   377  0614                     	;# 
   378  0616                     	;# 
   379  0617                     	;# 
   380  0618                     	;# 
   381  0619                     	;# 
   382  061A                     	;# 
   383  061B                     	;# 
   384  061C                     	;# 
   385  061D                     	;# 
   386  061E                     	;# 
   387  068C                     	;# 
   388  068D                     	;# 
   389  068E                     	;# 
   390  068F                     	;# 
   391  0690                     	;# 
   392  0691                     	;# 
   393  0692                     	;# 
   394  0693                     	;# 
   395  0694                     	;# 
   396  070C                     	;# 
   397  070D                     	;# 
   398  070E                     	;# 
   399  070F                     	;# 
   400  0710                     	;# 
   401  0711                     	;# 
   402  0712                     	;# 
   403  0713                     	;# 
   404  0714                     	;# 
   405  0716                     	;# 
   406  0717                     	;# 
   407  0718                     	;# 
   408  0719                     	;# 
   409  071A                     	;# 
   410  071B                     	;# 
   411  071C                     	;# 
   412  071D                     	;# 
   413  071E                     	;# 
   414  0796                     	;# 
   415  0797                     	;# 
   416  0798                     	;# 
   417  0799                     	;# 
   418  079A                     	;# 
   419  079B                     	;# 
   420  080C                     	;# 
   421  080D                     	;# 
   422  080E                     	;# 
   423  080F                     	;# 
   424  0810                     	;# 
   425  0811                     	;# 
   426  0812                     	;# 
   427  0813                     	;# 
   428  0814                     	;# 
   429  081A                     	;# 
   430  081B                     	;# 
   431  081C                     	;# 
   432  081D                     	;# 
   433  081E                     	;# 
   434  081F                     	;# 
   435  088C                     	;# 
   436  088D                     	;# 
   437  088E                     	;# 
   438  088F                     	;# 
   439  0890                     	;# 
   440  0891                     	;# 
   441  0892                     	;# 
   442  0893                     	;# 
   443  0895                     	;# 
   444  0896                     	;# 
   445  0897                     	;# 
   446  0898                     	;# 
   447  0899                     	;# 
   448  089A                     	;# 
   449  089B                     	;# 
   450  090C                     	;# 
   451  090E                     	;# 
   452  090F                     	;# 
   453  091F                     	;# 
   454  091F                     	;# 
   455  098F                     	;# 
   456  098F                     	;# 
   457  0990                     	;# 
   458  0991                     	;# 
   459  0992                     	;# 
   460  0993                     	;# 
   461  0994                     	;# 
   462  0995                     	;# 
   463  0996                     	;# 
   464  0997                     	;# 
   465  0E0F                     	;# 
   466  0E10                     	;# 
   467  0E11                     	;# 
   468  0E12                     	;# 
   469  0E13                     	;# 
   470  0E14                     	;# 
   471  0E15                     	;# 
   472  0E16                     	;# 
   473  0E17                     	;# 
   474  0E18                     	;# 
   475  0E19                     	;# 
   476  0E1A                     	;# 
   477  0E1B                     	;# 
   478  0E1C                     	;# 
   479  0E1D                     	;# 
   480  0E1E                     	;# 
   481  0E1F                     	;# 
   482  0E20                     	;# 
   483  0E21                     	;# 
   484  0E22                     	;# 
   485  0E23                     	;# 
   486  0E24                     	;# 
   487  0E25                     	;# 
   488  0E26                     	;# 
   489  0E27                     	;# 
   490  0E28                     	;# 
   491  0E29                     	;# 
   492  0E2A                     	;# 
   493  0E2B                     	;# 
   494  0E2C                     	;# 
   495  0E2D                     	;# 
   496  0E2E                     	;# 
   497  0E2F                     	;# 
   498  0E30                     	;# 
   499  0E31                     	;# 
   500  0E32                     	;# 
   501  0E33                     	;# 
   502  0E34                     	;# 
   503  0E35                     	;# 
   504  0E36                     	;# 
   505  0E37                     	;# 
   506  0E8F                     	;# 
   507  0E90                     	;# 
   508  0E91                     	;# 
   509  0E92                     	;# 
   510  0E93                     	;# 
   511  0E94                     	;# 
   512  0E95                     	;# 
   513  0E96                     	;# 
   514  0E97                     	;# 
   515  0E9C                     	;# 
   516  0E9D                     	;# 
   517  0E9E                     	;# 
   518  0EA1                     	;# 
   519  0EA2                     	;# 
   520  0EA3                     	;# 
   521  0EA4                     	;# 
   522  0EA5                     	;# 
   523  0EA9                     	;# 
   524  0EAA                     	;# 
   525  0EAB                     	;# 
   526  0EAC                     	;# 
   527  0EB1                     	;# 
   528  0EB2                     	;# 
   529  0EB3                     	;# 
   530  0EB8                     	;# 
   531  0EB9                     	;# 
   532  0EBA                     	;# 
   533  0EBB                     	;# 
   534  0EBC                     	;# 
   535  0EBD                     	;# 
   536  0EBE                     	;# 
   537  0EC3                     	;# 
   538  0EC5                     	;# 
   539  0EC6                     	;# 
   540  0EC7                     	;# 
   541  0EC8                     	;# 
   542  0EC9                     	;# 
   543  0ECA                     	;# 
   544  0ECB                     	;# 
   545  0ECC                     	;# 
   546  0F10                     	;# 
   547  0F11                     	;# 
   548  0F12                     	;# 
   549  0F13                     	;# 
   550  0F14                     	;# 
   551  0F15                     	;# 
   552  0F16                     	;# 
   553  0F17                     	;# 
   554  0F18                     	;# 
   555  0F19                     	;# 
   556  0F1A                     	;# 
   557  0F1B                     	;# 
   558  0F1C                     	;# 
   559  0F1D                     	;# 
   560  0F1E                     	;# 
   561  0F1F                     	;# 
   562  0F20                     	;# 
   563  0F21                     	;# 
   564  0F22                     	;# 
   565  0F23                     	;# 
   566  0F24                     	;# 
   567  0F25                     	;# 
   568  0F26                     	;# 
   569  0F27                     	;# 
   570  0F28                     	;# 
   571  0F29                     	;# 
   572  0F2A                     	;# 
   573  0F2B                     	;# 
   574  0F2C                     	;# 
   575  0F2D                     	;# 
   576  0F2E                     	;# 
   577  0F2F                     	;# 
   578  0F30                     	;# 
   579  0F31                     	;# 
   580  0F32                     	;# 
   581  0F38                     	;# 
   582  0F39                     	;# 
   583  0F3A                     	;# 
   584  0F3B                     	;# 
   585  0F3C                     	;# 
   586  0F3D                     	;# 
   587  0F3E                     	;# 
   588  0F3F                     	;# 
   589  0F40                     	;# 
   590  0F41                     	;# 
   591  0F43                     	;# 
   592  0F44                     	;# 
   593  0F45                     	;# 
   594  0F46                     	;# 
   595  0F47                     	;# 
   596  0F48                     	;# 
   597  0F49                     	;# 
   598  0F4A                     	;# 
   599  0F4B                     	;# 
   600  0F4C                     	;# 
   601  0F4E                     	;# 
   602  0F4F                     	;# 
   603  0F50                     	;# 
   604  0F51                     	;# 
   605  0F52                     	;# 
   606  0F53                     	;# 
   607  0F54                     	;# 
   608  0F55                     	;# 
   609  0F56                     	;# 
   610  0F57                     	;# 
   611  0F59                     	;# 
   612  0F5A                     	;# 
   613  0F5B                     	;# 
   614  0F5C                     	;# 
   615  0F5D                     	;# 
   616  0F61                     	;# 
   617  0F62                     	;# 
   618  0F64                     	;# 
   619  0F65                     	;# 
   620  0F66                     	;# 
   621  0F67                     	;# 
   622  0F68                     	;# 
   623  0F69                     	;# 
   624  0F6A                     	;# 
   625  0F6B                     	;# 
   626  0F6C                     	;# 
   627  0F6D                     	;# 
   628  0FE4                     	;# 
   629  0FE5                     	;# 
   630  0FE6                     	;# 
   631  0FE7                     	;# 
   632  0FE8                     	;# 
   633  0FE9                     	;# 
   634  0FEA                     	;# 
   635  0FEB                     	;# 
   636  0FED                     	;# 
   637  0FEE                     	;# 
   638  0FEF                     	;# 
   639  0000                     	;# 
   640  0001                     	;# 
   641  0002                     	;# 
   642  0003                     	;# 
   643  0004                     	;# 
   644  0005                     	;# 
   645  0006                     	;# 
   646  0007                     	;# 
   647  0008                     	;# 
   648  0009                     	;# 
   649  000A                     	;# 
   650  000B                     	;# 
   651  000C                     	;# 
   652  000D                     	;# 
   653  000E                     	;# 
   654  000F                     	;# 
   655  0010                     	;# 
   656  0011                     	;# 
   657  0012                     	;# 
   658  0013                     	;# 
   659  0014                     	;# 
   660  0015                     	;# 
   661  0016                     	;# 
   662  0017                     	;# 
   663  0018                     	;# 
   664  0019                     	;# 
   665  001A                     	;# 
   666  001C                     	;# 
   667  001C                     	;# 
   668  001D                     	;# 
   669  001D                     	;# 
   670  001E                     	;# 
   671  001F                     	;# 
   672  008C                     	;# 
   673  008C                     	;# 
   674  008D                     	;# 
   675  008E                     	;# 
   676  008E                     	;# 
   677  008F                     	;# 
   678  0090                     	;# 
   679  0090                     	;# 
   680  0091                     	;# 
   681  0093                     	;# 
   682  0094                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0097                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009A                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  010C                     	;# 
   694  010D                     	;# 
   695  010E                     	;# 
   696  010E                     	;# 
   697  010F                     	;# 
   698  0110                     	;# 
   699  0110                     	;# 
   700  0111                     	;# 
   701  0112                     	;# 
   702  0112                     	;# 
   703  0113                     	;# 
   704  0114                     	;# 
   705  0114                     	;# 
   706  0115                     	;# 
   707  0116                     	;# 
   708  0116                     	;# 
   709  0117                     	;# 
   710  0119                     	;# 
   711  0119                     	;# 
   712  0119                     	;# 
   713  011A                     	;# 
   714  011A                     	;# 
   715  011A                     	;# 
   716  011B                     	;# 
   717  011B                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011B                     	;# 
   721  011C                     	;# 
   722  011C                     	;# 
   723  011C                     	;# 
   724  011D                     	;# 
   725  011D                     	;# 
   726  011D                     	;# 
   727  011E                     	;# 
   728  011E                     	;# 
   729  011E                     	;# 
   730  011F                     	;# 
   731  011F                     	;# 
   732  011F                     	;# 
   733  011F                     	;# 
   734  011F                     	;# 
   735  018C                     	;# 
   736  018D                     	;# 
   737  018E                     	;# 
   738  018F                     	;# 
   739  0190                     	;# 
   740  0191                     	;# 
   741  0192                     	;# 
   742  0196                     	;# 
   743  0197                     	;# 
   744  0198                     	;# 
   745  0199                     	;# 
   746  019A                     	;# 
   747  019B                     	;# 
   748  019C                     	;# 
   749  020C                     	;# 
   750  020C                     	;# 
   751  020D                     	;# 
   752  020E                     	;# 
   753  020F                     	;# 
   754  020F                     	;# 
   755  0210                     	;# 
   756  0210                     	;# 
   757  0211                     	;# 
   758  0211                     	;# 
   759  0212                     	;# 
   760  0212                     	;# 
   761  0213                     	;# 
   762  0214                     	;# 
   763  0215                     	;# 
   764  0215                     	;# 
   765  0216                     	;# 
   766  0216                     	;# 
   767  0217                     	;# 
   768  0217                     	;# 
   769  0218                     	;# 
   770  0218                     	;# 
   771  0219                     	;# 
   772  021A                     	;# 
   773  021B                     	;# 
   774  021B                     	;# 
   775  021C                     	;# 
   776  021C                     	;# 
   777  021D                     	;# 
   778  021D                     	;# 
   779  021E                     	;# 
   780  021F                     	;# 
   781  028C                     	;# 
   782  028C                     	;# 
   783  028D                     	;# 
   784  028D                     	;# 
   785  028E                     	;# 
   786  028F                     	;# 
   787  0290                     	;# 
   788  0290                     	;# 
   789  0291                     	;# 
   790  0292                     	;# 
   791  0292                     	;# 
   792  0293                     	;# 
   793  0293                     	;# 
   794  0294                     	;# 
   795  0295                     	;# 
   796  0296                     	;# 
   797  0296                     	;# 
   798  0297                     	;# 
   799  0298                     	;# 
   800  0298                     	;# 
   801  0299                     	;# 
   802  0299                     	;# 
   803  029A                     	;# 
   804  029B                     	;# 
   805  029C                     	;# 
   806  029C                     	;# 
   807  029D                     	;# 
   808  030C                     	;# 
   809  030C                     	;# 
   810  030D                     	;# 
   811  030E                     	;# 
   812  030F                     	;# 
   813  0310                     	;# 
   814  0310                     	;# 
   815  0311                     	;# 
   816  0312                     	;# 
   817  0313                     	;# 
   818  0314                     	;# 
   819  0314                     	;# 
   820  0315                     	;# 
   821  0316                     	;# 
   822  0317                     	;# 
   823  0318                     	;# 
   824  0318                     	;# 
   825  0319                     	;# 
   826  031A                     	;# 
   827  031B                     	;# 
   828  031C                     	;# 
   829  031C                     	;# 
   830  031D                     	;# 
   831  031E                     	;# 
   832  031F                     	;# 
   833  038C                     	;# 
   834  038C                     	;# 
   835  038D                     	;# 
   836  038E                     	;# 
   837  0390                     	;# 
   838  0390                     	;# 
   839  0391                     	;# 
   840  0392                     	;# 
   841  040C                     	;# 
   842  040D                     	;# 
   843  040E                     	;# 
   844  040F                     	;# 
   845  0410                     	;# 
   846  0411                     	;# 
   847  0416                     	;# 
   848  0416                     	;# 
   849  0417                     	;# 
   850  0418                     	;# 
   851  0418                     	;# 
   852  0419                     	;# 
   853  041A                     	;# 
   854  041A                     	;# 
   855  041B                     	;# 
   856  041C                     	;# 
   857  041C                     	;# 
   858  041D                     	;# 
   859  041E                     	;# 
   860  041F                     	;# 
   861  048C                     	;# 
   862  048C                     	;# 
   863  048D                     	;# 
   864  048E                     	;# 
   865  048F                     	;# 
   866  048F                     	;# 
   867  0490                     	;# 
   868  0491                     	;# 
   869  0492                     	;# 
   870  0492                     	;# 
   871  0493                     	;# 
   872  0494                     	;# 
   873  0495                     	;# 
   874  0495                     	;# 
   875  0496                     	;# 
   876  0497                     	;# 
   877  0498                     	;# 
   878  0499                     	;# 
   879  049A                     	;# 
   880  049B                     	;# 
   881  049C                     	;# 
   882  049D                     	;# 
   883  050C                     	;# 
   884  050C                     	;# 
   885  050D                     	;# 
   886  050E                     	;# 
   887  050F                     	;# 
   888  050F                     	;# 
   889  0510                     	;# 
   890  0511                     	;# 
   891  0512                     	;# 
   892  0512                     	;# 
   893  0513                     	;# 
   894  0514                     	;# 
   895  0515                     	;# 
   896  0515                     	;# 
   897  0516                     	;# 
   898  0517                     	;# 
   899  0518                     	;# 
   900  0519                     	;# 
   901  051A                     	;# 
   902  051B                     	;# 
   903  051C                     	;# 
   904  051D                     	;# 
   905  058C                     	;# 
   906  058C                     	;# 
   907  058D                     	;# 
   908  058E                     	;# 
   909  058F                     	;# 
   910  058F                     	;# 
   911  0590                     	;# 
   912  0591                     	;# 
   913  0592                     	;# 
   914  0593                     	;# 
   915  060C                     	;# 
   916  060D                     	;# 
   917  060E                     	;# 
   918  060F                     	;# 
   919  0610                     	;# 
   920  0611                     	;# 
   921  0612                     	;# 
   922  0613                     	;# 
   923  0614                     	;# 
   924  0616                     	;# 
   925  0617                     	;# 
   926  0618                     	;# 
   927  0619                     	;# 
   928  061A                     	;# 
   929  061B                     	;# 
   930  061C                     	;# 
   931  061D                     	;# 
   932  061E                     	;# 
   933  068C                     	;# 
   934  068D                     	;# 
   935  068E                     	;# 
   936  068F                     	;# 
   937  0690                     	;# 
   938  0691                     	;# 
   939  0692                     	;# 
   940  0693                     	;# 
   941  0694                     	;# 
   942  070C                     	;# 
   943  070D                     	;# 
   944  070E                     	;# 
   945  070F                     	;# 
   946  0710                     	;# 
   947  0711                     	;# 
   948  0712                     	;# 
   949  0713                     	;# 
   950  0714                     	;# 
   951  0716                     	;# 
   952  0717                     	;# 
   953  0718                     	;# 
   954  0719                     	;# 
   955  071A                     	;# 
   956  071B                     	;# 
   957  071C                     	;# 
   958  071D                     	;# 
   959  071E                     	;# 
   960  0796                     	;# 
   961  0797                     	;# 
   962  0798                     	;# 
   963  0799                     	;# 
   964  079A                     	;# 
   965  079B                     	;# 
   966  080C                     	;# 
   967  080D                     	;# 
   968  080E                     	;# 
   969  080F                     	;# 
   970  0810                     	;# 
   971  0811                     	;# 
   972  0812                     	;# 
   973  0813                     	;# 
   974  0814                     	;# 
   975  081A                     	;# 
   976  081B                     	;# 
   977  081C                     	;# 
   978  081D                     	;# 
   979  081E                     	;# 
   980  081F                     	;# 
   981  088C                     	;# 
   982  088D                     	;# 
   983  088E                     	;# 
   984  088F                     	;# 
   985  0890                     	;# 
   986  0891                     	;# 
   987  0892                     	;# 
   988  0893                     	;# 
   989  0895                     	;# 
   990  0896                     	;# 
   991  0897                     	;# 
   992  0898                     	;# 
   993  0899                     	;# 
   994  089A                     	;# 
   995  089B                     	;# 
   996  090C                     	;# 
   997  090E                     	;# 
   998  090F                     	;# 
   999  091F                     	;# 
  1000  091F                     	;# 
  1001  098F                     	;# 
  1002  098F                     	;# 
  1003  0990                     	;# 
  1004  0991                     	;# 
  1005  0992                     	;# 
  1006  0993                     	;# 
  1007  0994                     	;# 
  1008  0995                     	;# 
  1009  0996                     	;# 
  1010  0997                     	;# 
  1011  0E0F                     	;# 
  1012  0E10                     	;# 
  1013  0E11                     	;# 
  1014  0E12                     	;# 
  1015  0E13                     	;# 
  1016  0E14                     	;# 
  1017  0E15                     	;# 
  1018  0E16                     	;# 
  1019  0E17                     	;# 
  1020  0E18                     	;# 
  1021  0E19                     	;# 
  1022  0E1A                     	;# 
  1023  0E1B                     	;# 
  1024  0E1C                     	;# 
  1025  0E1D                     	;# 
  1026  0E1E                     	;# 
  1027  0E1F                     	;# 
  1028  0E20                     	;# 
  1029  0E21                     	;# 
  1030  0E22                     	;# 
  1031  0E23                     	;# 
  1032  0E24                     	;# 
  1033  0E25                     	;# 
  1034  0E26                     	;# 
  1035  0E27                     	;# 
  1036  0E28                     	;# 
  1037  0E29                     	;# 
  1038  0E2A                     	;# 
  1039  0E2B                     	;# 
  1040  0E2C                     	;# 
  1041  0E2D                     	;# 
  1042  0E2E                     	;# 
  1043  0E2F                     	;# 
  1044  0E30                     	;# 
  1045  0E31                     	;# 
  1046  0E32                     	;# 
  1047  0E33                     	;# 
  1048  0E34                     	;# 
  1049  0E35                     	;# 
  1050  0E36                     	;# 
  1051  0E37                     	;# 
  1052  0E8F                     	;# 
  1053  0E90                     	;# 
  1054  0E91                     	;# 
  1055  0E92                     	;# 
  1056  0E93                     	;# 
  1057  0E94                     	;# 
  1058  0E95                     	;# 
  1059  0E96                     	;# 
  1060  0E97                     	;# 
  1061  0E9C                     	;# 
  1062  0E9D                     	;# 
  1063  0E9E                     	;# 
  1064  0EA1                     	;# 
  1065  0EA2                     	;# 
  1066  0EA3                     	;# 
  1067  0EA4                     	;# 
  1068  0EA5                     	;# 
  1069  0EA9                     	;# 
  1070  0EAA                     	;# 
  1071  0EAB                     	;# 
  1072  0EAC                     	;# 
  1073  0EB1                     	;# 
  1074  0EB2                     	;# 
  1075  0EB3                     	;# 
  1076  0EB8                     	;# 
  1077  0EB9                     	;# 
  1078  0EBA                     	;# 
  1079  0EBB                     	;# 
  1080  0EBC                     	;# 
  1081  0EBD                     	;# 
  1082  0EBE                     	;# 
  1083  0EC3                     	;# 
  1084  0EC5                     	;# 
  1085  0EC6                     	;# 
  1086  0EC7                     	;# 
  1087  0EC8                     	;# 
  1088  0EC9                     	;# 
  1089  0ECA                     	;# 
  1090  0ECB                     	;# 
  1091  0ECC                     	;# 
  1092  0F10                     	;# 
  1093  0F11                     	;# 
  1094  0F12                     	;# 
  1095  0F13                     	;# 
  1096  0F14                     	;# 
  1097  0F15                     	;# 
  1098  0F16                     	;# 
  1099  0F17                     	;# 
  1100  0F18                     	;# 
  1101  0F19                     	;# 
  1102  0F1A                     	;# 
  1103  0F1B                     	;# 
  1104  0F1C                     	;# 
  1105  0F1D                     	;# 
  1106  0F1E                     	;# 
  1107  0F1F                     	;# 
  1108  0F20                     	;# 
  1109  0F21                     	;# 
  1110  0F22                     	;# 
  1111  0F23                     	;# 
  1112  0F24                     	;# 
  1113  0F25                     	;# 
  1114  0F26                     	;# 
  1115  0F27                     	;# 
  1116  0F28                     	;# 
  1117  0F29                     	;# 
  1118  0F2A                     	;# 
  1119  0F2B                     	;# 
  1120  0F2C                     	;# 
  1121  0F2D                     	;# 
  1122  0F2E                     	;# 
  1123  0F2F                     	;# 
  1124  0F30                     	;# 
  1125  0F31                     	;# 
  1126  0F32                     	;# 
  1127  0F38                     	;# 
  1128  0F39                     	;# 
  1129  0F3A                     	;# 
  1130  0F3B                     	;# 
  1131  0F3C                     	;# 
  1132  0F3D                     	;# 
  1133  0F3E                     	;# 
  1134  0F3F                     	;# 
  1135  0F40                     	;# 
  1136  0F41                     	;# 
  1137  0F43                     	;# 
  1138  0F44                     	;# 
  1139  0F45                     	;# 
  1140  0F46                     	;# 
  1141  0F47                     	;# 
  1142  0F48                     	;# 
  1143  0F49                     	;# 
  1144  0F4A                     	;# 
  1145  0F4B                     	;# 
  1146  0F4C                     	;# 
  1147  0F4E                     	;# 
  1148  0F4F                     	;# 
  1149  0F50                     	;# 
  1150  0F51                     	;# 
  1151  0F52                     	;# 
  1152  0F53                     	;# 
  1153  0F54                     	;# 
  1154  0F55                     	;# 
  1155  0F56                     	;# 
  1156  0F57                     	;# 
  1157  0F59                     	;# 
  1158  0F5A                     	;# 
  1159  0F5B                     	;# 
  1160  0F5C                     	;# 
  1161  0F5D                     	;# 
  1162  0F61                     	;# 
  1163  0F62                     	;# 
  1164  0F64                     	;# 
  1165  0F65                     	;# 
  1166  0F66                     	;# 
  1167  0F67                     	;# 
  1168  0F68                     	;# 
  1169  0F69                     	;# 
  1170  0F6A                     	;# 
  1171  0F6B                     	;# 
  1172  0F6C                     	;# 
  1173  0F6D                     	;# 
  1174  0FE4                     	;# 
  1175  0FE5                     	;# 
  1176  0FE6                     	;# 
  1177  0FE7                     	;# 
  1178  0FE8                     	;# 
  1179  0FE9                     	;# 
  1180  0FEA                     	;# 
  1181  0FEB                     	;# 
  1182  0FED                     	;# 
  1183  0FEE                     	;# 
  1184  0FEF                     	;# 
  1185  0000                     	;# 
  1186  0001                     	;# 
  1187  0002                     	;# 
  1188  0003                     	;# 
  1189  0004                     	;# 
  1190  0005                     	;# 
  1191  0006                     	;# 
  1192  0007                     	;# 
  1193  0008                     	;# 
  1194  0009                     	;# 
  1195  000A                     	;# 
  1196  000B                     	;# 
  1197  000C                     	;# 
  1198  000D                     	;# 
  1199  000E                     	;# 
  1200  000F                     	;# 
  1201  0010                     	;# 
  1202  0011                     	;# 
  1203  0012                     	;# 
  1204  0013                     	;# 
  1205  0014                     	;# 
  1206  0015                     	;# 
  1207  0016                     	;# 
  1208  0017                     	;# 
  1209  0018                     	;# 
  1210  0019                     	;# 
  1211  001A                     	;# 
  1212  001C                     	;# 
  1213  001C                     	;# 
  1214  001D                     	;# 
  1215  001D                     	;# 
  1216  001E                     	;# 
  1217  001F                     	;# 
  1218  008C                     	;# 
  1219  008C                     	;# 
  1220  008D                     	;# 
  1221  008E                     	;# 
  1222  008E                     	;# 
  1223  008F                     	;# 
  1224  0090                     	;# 
  1225  0090                     	;# 
  1226  0091                     	;# 
  1227  0093                     	;# 
  1228  0094                     	;# 
  1229  0095                     	;# 
  1230  0096                     	;# 
  1231  0097                     	;# 
  1232  0098                     	;# 
  1233  0099                     	;# 
  1234  009A                     	;# 
  1235  009B                     	;# 
  1236  009C                     	;# 
  1237  009D                     	;# 
  1238  009E                     	;# 
  1239  010C                     	;# 
  1240  010D                     	;# 
  1241  010E                     	;# 
  1242  010E                     	;# 
  1243  010F                     	;# 
  1244  0110                     	;# 
  1245  0110                     	;# 
  1246  0111                     	;# 
  1247  0112                     	;# 
  1248  0112                     	;# 
  1249  0113                     	;# 
  1250  0114                     	;# 
  1251  0114                     	;# 
  1252  0115                     	;# 
  1253  0116                     	;# 
  1254  0116                     	;# 
  1255  0117                     	;# 
  1256  0119                     	;# 
  1257  0119                     	;# 
  1258  0119                     	;# 
  1259  011A                     	;# 
  1260  011A                     	;# 
  1261  011A                     	;# 
  1262  011B                     	;# 
  1263  011B                     	;# 
  1264  011B                     	;# 
  1265  011B                     	;# 
  1266  011B                     	;# 
  1267  011C                     	;# 
  1268  011C                     	;# 
  1269  011C                     	;# 
  1270  011D                     	;# 
  1271  011D                     	;# 
  1272  011D                     	;# 
  1273  011E                     	;# 
  1274  011E                     	;# 
  1275  011E                     	;# 
  1276  011F                     	;# 
  1277  011F                     	;# 
  1278  011F                     	;# 
  1279  011F                     	;# 
  1280  011F                     	;# 
  1281  018C                     	;# 
  1282  018D                     	;# 
  1283  018E                     	;# 
  1284  018F                     	;# 
  1285  0190                     	;# 
  1286  0191                     	;# 
  1287  0192                     	;# 
  1288  0196                     	;# 
  1289  0197                     	;# 
  1290  0198                     	;# 
  1291  0199                     	;# 
  1292  019A                     	;# 
  1293  019B                     	;# 
  1294  019C                     	;# 
  1295  020C                     	;# 
  1296  020C                     	;# 
  1297  020D                     	;# 
  1298  020E                     	;# 
  1299  020F                     	;# 
  1300  020F                     	;# 
  1301  0210                     	;# 
  1302  0210                     	;# 
  1303  0211                     	;# 
  1304  0211                     	;# 
  1305  0212                     	;# 
  1306  0212                     	;# 
  1307  0213                     	;# 
  1308  0214                     	;# 
  1309  0215                     	;# 
  1310  0215                     	;# 
  1311  0216                     	;# 
  1312  0216                     	;# 
  1313  0217                     	;# 
  1314  0217                     	;# 
  1315  0218                     	;# 
  1316  0218                     	;# 
  1317  0219                     	;# 
  1318  021A                     	;# 
  1319  021B                     	;# 
  1320  021B                     	;# 
  1321  021C                     	;# 
  1322  021C                     	;# 
  1323  021D                     	;# 
  1324  021D                     	;# 
  1325  021E                     	;# 
  1326  021F                     	;# 
  1327  028C                     	;# 
  1328  028C                     	;# 
  1329  028D                     	;# 
  1330  028D                     	;# 
  1331  028E                     	;# 
  1332  028F                     	;# 
  1333  0290                     	;# 
  1334  0290                     	;# 
  1335  0291                     	;# 
  1336  0292                     	;# 
  1337  0292                     	;# 
  1338  0293                     	;# 
  1339  0293                     	;# 
  1340  0294                     	;# 
  1341  0295                     	;# 
  1342  0296                     	;# 
  1343  0296                     	;# 
  1344  0297                     	;# 
  1345  0298                     	;# 
  1346  0298                     	;# 
  1347  0299                     	;# 
  1348  0299                     	;# 
  1349  029A                     	;# 
  1350  029B                     	;# 
  1351  029C                     	;# 
  1352  029C                     	;# 
  1353  029D                     	;# 
  1354  030C                     	;# 
  1355  030C                     	;# 
  1356  030D                     	;# 
  1357  030E                     	;# 
  1358  030F                     	;# 
  1359  0310                     	;# 
  1360  0310                     	;# 
  1361  0311                     	;# 
  1362  0312                     	;# 
  1363  0313                     	;# 
  1364  0314                     	;# 
  1365  0314                     	;# 
  1366  0315                     	;# 
  1367  0316                     	;# 
  1368  0317                     	;# 
  1369  0318                     	;# 
  1370  0318                     	;# 
  1371  0319                     	;# 
  1372  031A                     	;# 
  1373  031B                     	;# 
  1374  031C                     	;# 
  1375  031C                     	;# 
  1376  031D                     	;# 
  1377  031E                     	;# 
  1378  031F                     	;# 
  1379  038C                     	;# 
  1380  038C                     	;# 
  1381  038D                     	;# 
  1382  038E                     	;# 
  1383  0390                     	;# 
  1384  0390                     	;# 
  1385  0391                     	;# 
  1386  0392                     	;# 
  1387  040C                     	;# 
  1388  040D                     	;# 
  1389  040E                     	;# 
  1390  040F                     	;# 
  1391  0410                     	;# 
  1392  0411                     	;# 
  1393  0416                     	;# 
  1394  0416                     	;# 
  1395  0417                     	;# 
  1396  0418                     	;# 
  1397  0418                     	;# 
  1398  0419                     	;# 
  1399  041A                     	;# 
  1400  041A                     	;# 
  1401  041B                     	;# 
  1402  041C                     	;# 
  1403  041C                     	;# 
  1404  041D                     	;# 
  1405  041E                     	;# 
  1406  041F                     	;# 
  1407  048C                     	;# 
  1408  048C                     	;# 
  1409  048D                     	;# 
  1410  048E                     	;# 
  1411  048F                     	;# 
  1412  048F                     	;# 
  1413  0490                     	;# 
  1414  0491                     	;# 
  1415  0492                     	;# 
  1416  0492                     	;# 
  1417  0493                     	;# 
  1418  0494                     	;# 
  1419  0495                     	;# 
  1420  0495                     	;# 
  1421  0496                     	;# 
  1422  0497                     	;# 
  1423  0498                     	;# 
  1424  0499                     	;# 
  1425  049A                     	;# 
  1426  049B                     	;# 
  1427  049C                     	;# 
  1428  049D                     	;# 
  1429  050C                     	;# 
  1430  050C                     	;# 
  1431  050D                     	;# 
  1432  050E                     	;# 
  1433  050F                     	;# 
  1434  050F                     	;# 
  1435  0510                     	;# 
  1436  0511                     	;# 
  1437  0512                     	;# 
  1438  0512                     	;# 
  1439  0513                     	;# 
  1440  0514                     	;# 
  1441  0515                     	;# 
  1442  0515                     	;# 
  1443  0516                     	;# 
  1444  0517                     	;# 
  1445  0518                     	;# 
  1446  0519                     	;# 
  1447  051A                     	;# 
  1448  051B                     	;# 
  1449  051C                     	;# 
  1450  051D                     	;# 
  1451  058C                     	;# 
  1452  058C                     	;# 
  1453  058D                     	;# 
  1454  058E                     	;# 
  1455  058F                     	;# 
  1456  058F                     	;# 
  1457  0590                     	;# 
  1458  0591                     	;# 
  1459  0592                     	;# 
  1460  0593                     	;# 
  1461  060C                     	;# 
  1462  060D                     	;# 
  1463  060E                     	;# 
  1464  060F                     	;# 
  1465  0610                     	;# 
  1466  0611                     	;# 
  1467  0612                     	;# 
  1468  0613                     	;# 
  1469  0614                     	;# 
  1470  0616                     	;# 
  1471  0617                     	;# 
  1472  0618                     	;# 
  1473  0619                     	;# 
  1474  061A                     	;# 
  1475  061B                     	;# 
  1476  061C                     	;# 
  1477  061D                     	;# 
  1478  061E                     	;# 
  1479  068C                     	;# 
  1480  068D                     	;# 
  1481  068E                     	;# 
  1482  068F                     	;# 
  1483  0690                     	;# 
  1484  0691                     	;# 
  1485  0692                     	;# 
  1486  0693                     	;# 
  1487  0694                     	;# 
  1488  070C                     	;# 
  1489  070D                     	;# 
  1490  070E                     	;# 
  1491  070F                     	;# 
  1492  0710                     	;# 
  1493  0711                     	;# 
  1494  0712                     	;# 
  1495  0713                     	;# 
  1496  0714                     	;# 
  1497  0716                     	;# 
  1498  0717                     	;# 
  1499  0718                     	;# 
  1500  0719                     	;# 
  1501  071A                     	;# 
  1502  071B                     	;# 
  1503  071C                     	;# 
  1504  071D                     	;# 
  1505  071E                     	;# 
  1506  0796                     	;# 
  1507  0797                     	;# 
  1508  0798                     	;# 
  1509  0799                     	;# 
  1510  079A                     	;# 
  1511  079B                     	;# 
  1512  080C                     	;# 
  1513  080D                     	;# 
  1514  080E                     	;# 
  1515  080F                     	;# 
  1516  0810                     	;# 
  1517  0811                     	;# 
  1518  0812                     	;# 
  1519  0813                     	;# 
  1520  0814                     	;# 
  1521  081A                     	;# 
  1522  081B                     	;# 
  1523  081C                     	;# 
  1524  081D                     	;# 
  1525  081E                     	;# 
  1526  081F                     	;# 
  1527  088C                     	;# 
  1528  088D                     	;# 
  1529  088E                     	;# 
  1530  088F                     	;# 
  1531  0890                     	;# 
  1532  0891                     	;# 
  1533  0892                     	;# 
  1534  0893                     	;# 
  1535  0895                     	;# 
  1536  0896                     	;# 
  1537  0897                     	;# 
  1538  0898                     	;# 
  1539  0899                     	;# 
  1540  089A                     	;# 
  1541  089B                     	;# 
  1542  090C                     	;# 
  1543  090E                     	;# 
  1544  090F                     	;# 
  1545  091F                     	;# 
  1546  091F                     	;# 
  1547  098F                     	;# 
  1548  098F                     	;# 
  1549  0990                     	;# 
  1550  0991                     	;# 
  1551  0992                     	;# 
  1552  0993                     	;# 
  1553  0994                     	;# 
  1554  0995                     	;# 
  1555  0996                     	;# 
  1556  0997                     	;# 
  1557  0E0F                     	;# 
  1558  0E10                     	;# 
  1559  0E11                     	;# 
  1560  0E12                     	;# 
  1561  0E13                     	;# 
  1562  0E14                     	;# 
  1563  0E15                     	;# 
  1564  0E16                     	;# 
  1565  0E17                     	;# 
  1566  0E18                     	;# 
  1567  0E19                     	;# 
  1568  0E1A                     	;# 
  1569  0E1B                     	;# 
  1570  0E1C                     	;# 
  1571  0E1D                     	;# 
  1572  0E1E                     	;# 
  1573  0E1F                     	;# 
  1574  0E20                     	;# 
  1575  0E21                     	;# 
  1576  0E22                     	;# 
  1577  0E23                     	;# 
  1578  0E24                     	;# 
  1579  0E25                     	;# 
  1580  0E26                     	;# 
  1581  0E27                     	;# 
  1582  0E28                     	;# 
  1583  0E29                     	;# 
  1584  0E2A                     	;# 
  1585  0E2B                     	;# 
  1586  0E2C                     	;# 
  1587  0E2D                     	;# 
  1588  0E2E                     	;# 
  1589  0E2F                     	;# 
  1590  0E30                     	;# 
  1591  0E31                     	;# 
  1592  0E32                     	;# 
  1593  0E33                     	;# 
  1594  0E34                     	;# 
  1595  0E35                     	;# 
  1596  0E36                     	;# 
  1597  0E37                     	;# 
  1598  0E8F                     	;# 
  1599  0E90                     	;# 
  1600  0E91                     	;# 
  1601  0E92                     	;# 
  1602  0E93                     	;# 
  1603  0E94                     	;# 
  1604  0E95                     	;# 
  1605  0E96                     	;# 
  1606  0E97                     	;# 
  1607  0E9C                     	;# 
  1608  0E9D                     	;# 
  1609  0E9E                     	;# 
  1610  0EA1                     	;# 
  1611  0EA2                     	;# 
  1612  0EA3                     	;# 
  1613  0EA4                     	;# 
  1614  0EA5                     	;# 
  1615  0EA9                     	;# 
  1616  0EAA                     	;# 
  1617  0EAB                     	;# 
  1618  0EAC                     	;# 
  1619  0EB1                     	;# 
  1620  0EB2                     	;# 
  1621  0EB3                     	;# 
  1622  0EB8                     	;# 
  1623  0EB9                     	;# 
  1624  0EBA                     	;# 
  1625  0EBB                     	;# 
  1626  0EBC                     	;# 
  1627  0EBD                     	;# 
  1628  0EBE                     	;# 
  1629  0EC3                     	;# 
  1630  0EC5                     	;# 
  1631  0EC6                     	;# 
  1632  0EC7                     	;# 
  1633  0EC8                     	;# 
  1634  0EC9                     	;# 
  1635  0ECA                     	;# 
  1636  0ECB                     	;# 
  1637  0ECC                     	;# 
  1638  0F10                     	;# 
  1639  0F11                     	;# 
  1640  0F12                     	;# 
  1641  0F13                     	;# 
  1642  0F14                     	;# 
  1643  0F15                     	;# 
  1644  0F16                     	;# 
  1645  0F17                     	;# 
  1646  0F18                     	;# 
  1647  0F19                     	;# 
  1648  0F1A                     	;# 
  1649  0F1B                     	;# 
  1650  0F1C                     	;# 
  1651  0F1D                     	;# 
  1652  0F1E                     	;# 
  1653  0F1F                     	;# 
  1654  0F20                     	;# 
  1655  0F21                     	;# 
  1656  0F22                     	;# 
  1657  0F23                     	;# 
  1658  0F24                     	;# 
  1659  0F25                     	;# 
  1660  0F26                     	;# 
  1661  0F27                     	;# 
  1662  0F28                     	;# 
  1663  0F29                     	;# 
  1664  0F2A                     	;# 
  1665  0F2B                     	;# 
  1666  0F2C                     	;# 
  1667  0F2D                     	;# 
  1668  0F2E                     	;# 
  1669  0F2F                     	;# 
  1670  0F30                     	;# 
  1671  0F31                     	;# 
  1672  0F32                     	;# 
  1673  0F38                     	;# 
  1674  0F39                     	;# 
  1675  0F3A                     	;# 
  1676  0F3B                     	;# 
  1677  0F3C                     	;# 
  1678  0F3D                     	;# 
  1679  0F3E                     	;# 
  1680  0F3F                     	;# 
  1681  0F40                     	;# 
  1682  0F41                     	;# 
  1683  0F43                     	;# 
  1684  0F44                     	;# 
  1685  0F45                     	;# 
  1686  0F46                     	;# 
  1687  0F47                     	;# 
  1688  0F48                     	;# 
  1689  0F49                     	;# 
  1690  0F4A                     	;# 
  1691  0F4B                     	;# 
  1692  0F4C                     	;# 
  1693  0F4E                     	;# 
  1694  0F4F                     	;# 
  1695  0F50                     	;# 
  1696  0F51                     	;# 
  1697  0F52                     	;# 
  1698  0F53                     	;# 
  1699  0F54                     	;# 
  1700  0F55                     	;# 
  1701  0F56                     	;# 
  1702  0F57                     	;# 
  1703  0F59                     	;# 
  1704  0F5A                     	;# 
  1705  0F5B                     	;# 
  1706  0F5C                     	;# 
  1707  0F5D                     	;# 
  1708  0F61                     	;# 
  1709  0F62                     	;# 
  1710  0F64                     	;# 
  1711  0F65                     	;# 
  1712  0F66                     	;# 
  1713  0F67                     	;# 
  1714  0F68                     	;# 
  1715  0F69                     	;# 
  1716  0F6A                     	;# 
  1717  0F6B                     	;# 
  1718  0F6C                     	;# 
  1719  0F6D                     	;# 
  1720  0FE4                     	;# 
  1721  0FE5                     	;# 
  1722  0FE6                     	;# 
  1723  0FE7                     	;# 
  1724  0FE8                     	;# 
  1725  0FE9                     	;# 
  1726  0FEA                     	;# 
  1727  0FEB                     	;# 
  1728  0FED                     	;# 
  1729  0FEE                     	;# 
  1730  0FEF                     	;# 
  1731  0000                     	;# 
  1732  0001                     	;# 
  1733  0002                     	;# 
  1734  0003                     	;# 
  1735  0004                     	;# 
  1736  0005                     	;# 
  1737  0006                     	;# 
  1738  0007                     	;# 
  1739  0008                     	;# 
  1740  0009                     	;# 
  1741  000A                     	;# 
  1742  000B                     	;# 
  1743  000C                     	;# 
  1744  000D                     	;# 
  1745  000E                     	;# 
  1746  000F                     	;# 
  1747  0010                     	;# 
  1748  0011                     	;# 
  1749  0012                     	;# 
  1750  0013                     	;# 
  1751  0014                     	;# 
  1752  0015                     	;# 
  1753  0016                     	;# 
  1754  0017                     	;# 
  1755  0018                     	;# 
  1756  0019                     	;# 
  1757  001A                     	;# 
  1758  001C                     	;# 
  1759  001C                     	;# 
  1760  001D                     	;# 
  1761  001D                     	;# 
  1762  001E                     	;# 
  1763  001F                     	;# 
  1764  008C                     	;# 
  1765  008C                     	;# 
  1766  008D                     	;# 
  1767  008E                     	;# 
  1768  008E                     	;# 
  1769  008F                     	;# 
  1770  0090                     	;# 
  1771  0090                     	;# 
  1772  0091                     	;# 
  1773  0093                     	;# 
  1774  0094                     	;# 
  1775  0095                     	;# 
  1776  0096                     	;# 
  1777  0097                     	;# 
  1778  0098                     	;# 
  1779  0099                     	;# 
  1780  009A                     	;# 
  1781  009B                     	;# 
  1782  009C                     	;# 
  1783  009D                     	;# 
  1784  009E                     	;# 
  1785  010C                     	;# 
  1786  010D                     	;# 
  1787  010E                     	;# 
  1788  010E                     	;# 
  1789  010F                     	;# 
  1790  0110                     	;# 
  1791  0110                     	;# 
  1792  0111                     	;# 
  1793  0112                     	;# 
  1794  0112                     	;# 
  1795  0113                     	;# 
  1796  0114                     	;# 
  1797  0114                     	;# 
  1798  0115                     	;# 
  1799  0116                     	;# 
  1800  0116                     	;# 
  1801  0117                     	;# 
  1802  0119                     	;# 
  1803  0119                     	;# 
  1804  0119                     	;# 
  1805  011A                     	;# 
  1806  011A                     	;# 
  1807  011A                     	;# 
  1808  011B                     	;# 
  1809  011B                     	;# 
  1810  011B                     	;# 
  1811  011B                     	;# 
  1812  011B                     	;# 
  1813  011C                     	;# 
  1814  011C                     	;# 
  1815  011C                     	;# 
  1816  011D                     	;# 
  1817  011D                     	;# 
  1818  011D                     	;# 
  1819  011E                     	;# 
  1820  011E                     	;# 
  1821  011E                     	;# 
  1822  011F                     	;# 
  1823  011F                     	;# 
  1824  011F                     	;# 
  1825  011F                     	;# 
  1826  011F                     	;# 
  1827  018C                     	;# 
  1828  018D                     	;# 
  1829  018E                     	;# 
  1830  018F                     	;# 
  1831  0190                     	;# 
  1832  0191                     	;# 
  1833  0192                     	;# 
  1834  0196                     	;# 
  1835  0197                     	;# 
  1836  0198                     	;# 
  1837  0199                     	;# 
  1838  019A                     	;# 
  1839  019B                     	;# 
  1840  019C                     	;# 
  1841  020C                     	;# 
  1842  020C                     	;# 
  1843  020D                     	;# 
  1844  020E                     	;# 
  1845  020F                     	;# 
  1846  020F                     	;# 
  1847  0210                     	;# 
  1848  0210                     	;# 
  1849  0211                     	;# 
  1850  0211                     	;# 
  1851  0212                     	;# 
  1852  0212                     	;# 
  1853  0213                     	;# 
  1854  0214                     	;# 
  1855  0215                     	;# 
  1856  0215                     	;# 
  1857  0216                     	;# 
  1858  0216                     	;# 
  1859  0217                     	;# 
  1860  0217                     	;# 
  1861  0218                     	;# 
  1862  0218                     	;# 
  1863  0219                     	;# 
  1864  021A                     	;# 
  1865  021B                     	;# 
  1866  021B                     	;# 
  1867  021C                     	;# 
  1868  021C                     	;# 
  1869  021D                     	;# 
  1870  021D                     	;# 
  1871  021E                     	;# 
  1872  021F                     	;# 
  1873  028C                     	;# 
  1874  028C                     	;# 
  1875  028D                     	;# 
  1876  028D                     	;# 
  1877  028E                     	;# 
  1878  028F                     	;# 
  1879  0290                     	;# 
  1880  0290                     	;# 
  1881  0291                     	;# 
  1882  0292                     	;# 
  1883  0292                     	;# 
  1884  0293                     	;# 
  1885  0293                     	;# 
  1886  0294                     	;# 
  1887  0295                     	;# 
  1888  0296                     	;# 
  1889  0296                     	;# 
  1890  0297                     	;# 
  1891  0298                     	;# 
  1892  0298                     	;# 
  1893  0299                     	;# 
  1894  0299                     	;# 
  1895  029A                     	;# 
  1896  029B                     	;# 
  1897  029C                     	;# 
  1898  029C                     	;# 
  1899  029D                     	;# 
  1900  030C                     	;# 
  1901  030C                     	;# 
  1902  030D                     	;# 
  1903  030E                     	;# 
  1904  030F                     	;# 
  1905  0310                     	;# 
  1906  0310                     	;# 
  1907  0311                     	;# 
  1908  0312                     	;# 
  1909  0313                     	;# 
  1910  0314                     	;# 
  1911  0314                     	;# 
  1912  0315                     	;# 
  1913  0316                     	;# 
  1914  0317                     	;# 
  1915  0318                     	;# 
  1916  0318                     	;# 
  1917  0319                     	;# 
  1918  031A                     	;# 
  1919  031B                     	;# 
  1920  031C                     	;# 
  1921  031C                     	;# 
  1922  031D                     	;# 
  1923  031E                     	;# 
  1924  031F                     	;# 
  1925  038C                     	;# 
  1926  038C                     	;# 
  1927  038D                     	;# 
  1928  038E                     	;# 
  1929  0390                     	;# 
  1930  0390                     	;# 
  1931  0391                     	;# 
  1932  0392                     	;# 
  1933  040C                     	;# 
  1934  040D                     	;# 
  1935  040E                     	;# 
  1936  040F                     	;# 
  1937  0410                     	;# 
  1938  0411                     	;# 
  1939  0416                     	;# 
  1940  0416                     	;# 
  1941  0417                     	;# 
  1942  0418                     	;# 
  1943  0418                     	;# 
  1944  0419                     	;# 
  1945  041A                     	;# 
  1946  041A                     	;# 
  1947  041B                     	;# 
  1948  041C                     	;# 
  1949  041C                     	;# 
  1950  041D                     	;# 
  1951  041E                     	;# 
  1952  041F                     	;# 
  1953  048C                     	;# 
  1954  048C                     	;# 
  1955  048D                     	;# 
  1956  048E                     	;# 
  1957  048F                     	;# 
  1958  048F                     	;# 
  1959  0490                     	;# 
  1960  0491                     	;# 
  1961  0492                     	;# 
  1962  0492                     	;# 
  1963  0493                     	;# 
  1964  0494                     	;# 
  1965  0495                     	;# 
  1966  0495                     	;# 
  1967  0496                     	;# 
  1968  0497                     	;# 
  1969  0498                     	;# 
  1970  0499                     	;# 
  1971  049A                     	;# 
  1972  049B                     	;# 
  1973  049C                     	;# 
  1974  049D                     	;# 
  1975  050C                     	;# 
  1976  050C                     	;# 
  1977  050D                     	;# 
  1978  050E                     	;# 
  1979  050F                     	;# 
  1980  050F                     	;# 
  1981  0510                     	;# 
  1982  0511                     	;# 
  1983  0512                     	;# 
  1984  0512                     	;# 
  1985  0513                     	;# 
  1986  0514                     	;# 
  1987  0515                     	;# 
  1988  0515                     	;# 
  1989  0516                     	;# 
  1990  0517                     	;# 
  1991  0518                     	;# 
  1992  0519                     	;# 
  1993  051A                     	;# 
  1994  051B                     	;# 
  1995  051C                     	;# 
  1996  051D                     	;# 
  1997  058C                     	;# 
  1998  058C                     	;# 
  1999  058D                     	;# 
  2000  058E                     	;# 
  2001  058F                     	;# 
  2002  058F                     	;# 
  2003  0590                     	;# 
  2004  0591                     	;# 
  2005  0592                     	;# 
  2006  0593                     	;# 
  2007  060C                     	;# 
  2008  060D                     	;# 
  2009  060E                     	;# 
  2010  060F                     	;# 
  2011  0610                     	;# 
  2012  0611                     	;# 
  2013  0612                     	;# 
  2014  0613                     	;# 
  2015  0614                     	;# 
  2016  0616                     	;# 
  2017  0617                     	;# 
  2018  0618                     	;# 
  2019  0619                     	;# 
  2020  061A                     	;# 
  2021  061B                     	;# 
  2022  061C                     	;# 
  2023  061D                     	;# 
  2024  061E                     	;# 
  2025  068C                     	;# 
  2026  068D                     	;# 
  2027  068E                     	;# 
  2028  068F                     	;# 
  2029  0690                     	;# 
  2030  0691                     	;# 
  2031  0692                     	;# 
  2032  0693                     	;# 
  2033  0694                     	;# 
  2034  070C                     	;# 
  2035  070D                     	;# 
  2036  070E                     	;# 
  2037  070F                     	;# 
  2038  0710                     	;# 
  2039  0711                     	;# 
  2040  0712                     	;# 
  2041  0713                     	;# 
  2042  0714                     	;# 
  2043  0716                     	;# 
  2044  0717                     	;# 
  2045  0718                     	;# 
  2046  0719                     	;# 
  2047  071A                     	;# 
  2048  071B                     	;# 
  2049  071C                     	;# 
  2050  071D                     	;# 
  2051  071E                     	;# 
  2052  0796                     	;# 
  2053  0797                     	;# 
  2054  0798                     	;# 
  2055  0799                     	;# 
  2056  079A                     	;# 
  2057  079B                     	;# 
  2058  080C                     	;# 
  2059  080D                     	;# 
  2060  080E                     	;# 
  2061  080F                     	;# 
  2062  0810                     	;# 
  2063  0811                     	;# 
  2064  0812                     	;# 
  2065  0813                     	;# 
  2066  0814                     	;# 
  2067  081A                     	;# 
  2068  081B                     	;# 
  2069  081C                     	;# 
  2070  081D                     	;# 
  2071  081E                     	;# 
  2072  081F                     	;# 
  2073  088C                     	;# 
  2074  088D                     	;# 
  2075  088E                     	;# 
  2076  088F                     	;# 
  2077  0890                     	;# 
  2078  0891                     	;# 
  2079  0892                     	;# 
  2080  0893                     	;# 
  2081  0895                     	;# 
  2082  0896                     	;# 
  2083  0897                     	;# 
  2084  0898                     	;# 
  2085  0899                     	;# 
  2086  089A                     	;# 
  2087  089B                     	;# 
  2088  090C                     	;# 
  2089  090E                     	;# 
  2090  090F                     	;# 
  2091  091F                     	;# 
  2092  091F                     	;# 
  2093  098F                     	;# 
  2094  098F                     	;# 
  2095  0990                     	;# 
  2096  0991                     	;# 
  2097  0992                     	;# 
  2098  0993                     	;# 
  2099  0994                     	;# 
  2100  0995                     	;# 
  2101  0996                     	;# 
  2102  0997                     	;# 
  2103  0E0F                     	;# 
  2104  0E10                     	;# 
  2105  0E11                     	;# 
  2106  0E12                     	;# 
  2107  0E13                     	;# 
  2108  0E14                     	;# 
  2109  0E15                     	;# 
  2110  0E16                     	;# 
  2111  0E17                     	;# 
  2112  0E18                     	;# 
  2113  0E19                     	;# 
  2114  0E1A                     	;# 
  2115  0E1B                     	;# 
  2116  0E1C                     	;# 
  2117  0E1D                     	;# 
  2118  0E1E                     	;# 
  2119  0E1F                     	;# 
  2120  0E20                     	;# 
  2121  0E21                     	;# 
  2122  0E22                     	;# 
  2123  0E23                     	;# 
  2124  0E24                     	;# 
  2125  0E25                     	;# 
  2126  0E26                     	;# 
  2127  0E27                     	;# 
  2128  0E28                     	;# 
  2129  0E29                     	;# 
  2130  0E2A                     	;# 
  2131  0E2B                     	;# 
  2132  0E2C                     	;# 
  2133  0E2D                     	;# 
  2134  0E2E                     	;# 
  2135  0E2F                     	;# 
  2136  0E30                     	;# 
  2137  0E31                     	;# 
  2138  0E32                     	;# 
  2139  0E33                     	;# 
  2140  0E34                     	;# 
  2141  0E35                     	;# 
  2142  0E36                     	;# 
  2143  0E37                     	;# 
  2144  0E8F                     	;# 
  2145  0E90                     	;# 
  2146  0E91                     	;# 
  2147  0E92                     	;# 
  2148  0E93                     	;# 
  2149  0E94                     	;# 
  2150  0E95                     	;# 
  2151  0E96                     	;# 
  2152  0E97                     	;# 
  2153  0E9C                     	;# 
  2154  0E9D                     	;# 
  2155  0E9E                     	;# 
  2156  0EA1                     	;# 
  2157  0EA2                     	;# 
  2158  0EA3                     	;# 
  2159  0EA4                     	;# 
  2160  0EA5                     	;# 
  2161  0EA9                     	;# 
  2162  0EAA                     	;# 
  2163  0EAB                     	;# 
  2164  0EAC                     	;# 
  2165  0EB1                     	;# 
  2166  0EB2                     	;# 
  2167  0EB3                     	;# 
  2168  0EB8                     	;# 
  2169  0EB9                     	;# 
  2170  0EBA                     	;# 
  2171  0EBB                     	;# 
  2172  0EBC                     	;# 
  2173  0EBD                     	;# 
  2174  0EBE                     	;# 
  2175  0EC3                     	;# 
  2176  0EC5                     	;# 
  2177  0EC6                     	;# 
  2178  0EC7                     	;# 
  2179  0EC8                     	;# 
  2180  0EC9                     	;# 
  2181  0ECA                     	;# 
  2182  0ECB                     	;# 
  2183  0ECC                     	;# 
  2184  0F10                     	;# 
  2185  0F11                     	;# 
  2186  0F12                     	;# 
  2187  0F13                     	;# 
  2188  0F14                     	;# 
  2189  0F15                     	;# 
  2190  0F16                     	;# 
  2191  0F17                     	;# 
  2192  0F18                     	;# 
  2193  0F19                     	;# 
  2194  0F1A                     	;# 
  2195  0F1B                     	;# 
  2196  0F1C                     	;# 
  2197  0F1D                     	;# 
  2198  0F1E                     	;# 
  2199  0F1F                     	;# 
  2200  0F20                     	;# 
  2201  0F21                     	;# 
  2202  0F22                     	;# 
  2203  0F23                     	;# 
  2204  0F24                     	;# 
  2205  0F25                     	;# 
  2206  0F26                     	;# 
  2207  0F27                     	;# 
  2208  0F28                     	;# 
  2209  0F29                     	;# 
  2210  0F2A                     	;# 
  2211  0F2B                     	;# 
  2212  0F2C                     	;# 
  2213  0F2D                     	;# 
  2214  0F2E                     	;# 
  2215  0F2F                     	;# 
  2216  0F30                     	;# 
  2217  0F31                     	;# 
  2218  0F32                     	;# 
  2219  0F38                     	;# 
  2220  0F39                     	;# 
  2221  0F3A                     	;# 
  2222  0F3B                     	;# 
  2223  0F3C                     	;# 
  2224  0F3D                     	;# 
  2225  0F3E                     	;# 
  2226  0F3F                     	;# 
  2227  0F40                     	;# 
  2228  0F41                     	;# 
  2229  0F43                     	;# 
  2230  0F44                     	;# 
  2231  0F45                     	;# 
  2232  0F46                     	;# 
  2233  0F47                     	;# 
  2234  0F48                     	;# 
  2235  0F49                     	;# 
  2236  0F4A                     	;# 
  2237  0F4B                     	;# 
  2238  0F4C                     	;# 
  2239  0F4E                     	;# 
  2240  0F4F                     	;# 
  2241  0F50                     	;# 
  2242  0F51                     	;# 
  2243  0F52                     	;# 
  2244  0F53                     	;# 
  2245  0F54                     	;# 
  2246  0F55                     	;# 
  2247  0F56                     	;# 
  2248  0F57                     	;# 
  2249  0F59                     	;# 
  2250  0F5A                     	;# 
  2251  0F5B                     	;# 
  2252  0F5C                     	;# 
  2253  0F5D                     	;# 
  2254  0F61                     	;# 
  2255  0F62                     	;# 
  2256  0F64                     	;# 
  2257  0F65                     	;# 
  2258  0F66                     	;# 
  2259  0F67                     	;# 
  2260  0F68                     	;# 
  2261  0F69                     	;# 
  2262  0F6A                     	;# 
  2263  0F6B                     	;# 
  2264  0F6C                     	;# 
  2265  0F6D                     	;# 
  2266  0FE4                     	;# 
  2267  0FE5                     	;# 
  2268  0FE6                     	;# 
  2269  0FE7                     	;# 
  2270  0FE8                     	;# 
  2271  0FE9                     	;# 
  2272  0FEA                     	;# 
  2273  0FEB                     	;# 
  2274  0FED                     	;# 
  2275  0FEE                     	;# 
  2276  0FEF                     	;# 
  2277  0000                     	;# 
  2278  0001                     	;# 
  2279  0002                     	;# 
  2280  0003                     	;# 
  2281  0004                     	;# 
  2282  0005                     	;# 
  2283  0006                     	;# 
  2284  0007                     	;# 
  2285  0008                     	;# 
  2286  0009                     	;# 
  2287  000A                     	;# 
  2288  000B                     	;# 
  2289  000C                     	;# 
  2290  000D                     	;# 
  2291  000E                     	;# 
  2292  000F                     	;# 
  2293  0010                     	;# 
  2294  0011                     	;# 
  2295  0012                     	;# 
  2296  0013                     	;# 
  2297  0014                     	;# 
  2298  0015                     	;# 
  2299  0016                     	;# 
  2300  0017                     	;# 
  2301  0018                     	;# 
  2302  0019                     	;# 
  2303  001A                     	;# 
  2304  001C                     	;# 
  2305  001C                     	;# 
  2306  001D                     	;# 
  2307  001D                     	;# 
  2308  001E                     	;# 
  2309  001F                     	;# 
  2310  008C                     	;# 
  2311  008C                     	;# 
  2312  008D                     	;# 
  2313  008E                     	;# 
  2314  008E                     	;# 
  2315  008F                     	;# 
  2316  0090                     	;# 
  2317  0090                     	;# 
  2318  0091                     	;# 
  2319  0093                     	;# 
  2320  0094                     	;# 
  2321  0095                     	;# 
  2322  0096                     	;# 
  2323  0097                     	;# 
  2324  0098                     	;# 
  2325  0099                     	;# 
  2326  009A                     	;# 
  2327  009B                     	;# 
  2328  009C                     	;# 
  2329  009D                     	;# 
  2330  009E                     	;# 
  2331  010C                     	;# 
  2332  010D                     	;# 
  2333  010E                     	;# 
  2334  010E                     	;# 
  2335  010F                     	;# 
  2336  0110                     	;# 
  2337  0110                     	;# 
  2338  0111                     	;# 
  2339  0112                     	;# 
  2340  0112                     	;# 
  2341  0113                     	;# 
  2342  0114                     	;# 
  2343  0114                     	;# 
  2344  0115                     	;# 
  2345  0116                     	;# 
  2346  0116                     	;# 
  2347  0117                     	;# 
  2348  0119                     	;# 
  2349  0119                     	;# 
  2350  0119                     	;# 
  2351  011A                     	;# 
  2352  011A                     	;# 
  2353  011A                     	;# 
  2354  011B                     	;# 
  2355  011B                     	;# 
  2356  011B                     	;# 
  2357  011B                     	;# 
  2358  011B                     	;# 
  2359  011C                     	;# 
  2360  011C                     	;# 
  2361  011C                     	;# 
  2362  011D                     	;# 
  2363  011D                     	;# 
  2364  011D                     	;# 
  2365  011E                     	;# 
  2366  011E                     	;# 
  2367  011E                     	;# 
  2368  011F                     	;# 
  2369  011F                     	;# 
  2370  011F                     	;# 
  2371  011F                     	;# 
  2372  011F                     	;# 
  2373  018C                     	;# 
  2374  018D                     	;# 
  2375  018E                     	;# 
  2376  018F                     	;# 
  2377  0190                     	;# 
  2378  0191                     	;# 
  2379  0192                     	;# 
  2380  0196                     	;# 
  2381  0197                     	;# 
  2382  0198                     	;# 
  2383  0199                     	;# 
  2384  019A                     	;# 
  2385  019B                     	;# 
  2386  019C                     	;# 
  2387  020C                     	;# 
  2388  020C                     	;# 
  2389  020D                     	;# 
  2390  020E                     	;# 
  2391  020F                     	;# 
  2392  020F                     	;# 
  2393  0210                     	;# 
  2394  0210                     	;# 
  2395  0211                     	;# 
  2396  0211                     	;# 
  2397  0212                     	;# 
  2398  0212                     	;# 
  2399  0213                     	;# 
  2400  0214                     	;# 
  2401  0215                     	;# 
  2402  0215                     	;# 
  2403  0216                     	;# 
  2404  0216                     	;# 
  2405  0217                     	;# 
  2406  0217                     	;# 
  2407  0218                     	;# 
  2408  0218                     	;# 
  2409  0219                     	;# 
  2410  021A                     	;# 
  2411  021B                     	;# 
  2412  021B                     	;# 
  2413  021C                     	;# 
  2414  021C                     	;# 
  2415  021D                     	;# 
  2416  021D                     	;# 
  2417  021E                     	;# 
  2418  021F                     	;# 
  2419  028C                     	;# 
  2420  028C                     	;# 
  2421  028D                     	;# 
  2422  028D                     	;# 
  2423  028E                     	;# 
  2424  028F                     	;# 
  2425  0290                     	;# 
  2426  0290                     	;# 
  2427  0291                     	;# 
  2428  0292                     	;# 
  2429  0292                     	;# 
  2430  0293                     	;# 
  2431  0293                     	;# 
  2432  0294                     	;# 
  2433  0295                     	;# 
  2434  0296                     	;# 
  2435  0296                     	;# 
  2436  0297                     	;# 
  2437  0298                     	;# 
  2438  0298                     	;# 
  2439  0299                     	;# 
  2440  0299                     	;# 
  2441  029A                     	;# 
  2442  029B                     	;# 
  2443  029C                     	;# 
  2444  029C                     	;# 
  2445  029D                     	;# 
  2446  030C                     	;# 
  2447  030C                     	;# 
  2448  030D                     	;# 
  2449  030E                     	;# 
  2450  030F                     	;# 
  2451  0310                     	;# 
  2452  0310                     	;# 
  2453  0311                     	;# 
  2454  0312                     	;# 
  2455  0313                     	;# 
  2456  0314                     	;# 
  2457  0314                     	;# 
  2458  0315                     	;# 
  2459  0316                     	;# 
  2460  0317                     	;# 
  2461  0318                     	;# 
  2462  0318                     	;# 
  2463  0319                     	;# 
  2464  031A                     	;# 
  2465  031B                     	;# 
  2466  031C                     	;# 
  2467  031C                     	;# 
  2468  031D                     	;# 
  2469  031E                     	;# 
  2470  031F                     	;# 
  2471  038C                     	;# 
  2472  038C                     	;# 
  2473  038D                     	;# 
  2474  038E                     	;# 
  2475  0390                     	;# 
  2476  0390                     	;# 
  2477  0391                     	;# 
  2478  0392                     	;# 
  2479  040C                     	;# 
  2480  040D                     	;# 
  2481  040E                     	;# 
  2482  040F                     	;# 
  2483  0410                     	;# 
  2484  0411                     	;# 
  2485  0416                     	;# 
  2486  0416                     	;# 
  2487  0417                     	;# 
  2488  0418                     	;# 
  2489  0418                     	;# 
  2490  0419                     	;# 
  2491  041A                     	;# 
  2492  041A                     	;# 
  2493  041B                     	;# 
  2494  041C                     	;# 
  2495  041C                     	;# 
  2496  041D                     	;# 
  2497  041E                     	;# 
  2498  041F                     	;# 
  2499  048C                     	;# 
  2500  048C                     	;# 
  2501  048D                     	;# 
  2502  048E                     	;# 
  2503  048F                     	;# 
  2504  048F                     	;# 
  2505  0490                     	;# 
  2506  0491                     	;# 
  2507  0492                     	;# 
  2508  0492                     	;# 
  2509  0493                     	;# 
  2510  0494                     	;# 
  2511  0495                     	;# 
  2512  0495                     	;# 
  2513  0496                     	;# 
  2514  0497                     	;# 
  2515  0498                     	;# 
  2516  0499                     	;# 
  2517  049A                     	;# 
  2518  049B                     	;# 
  2519  049C                     	;# 
  2520  049D                     	;# 
  2521  050C                     	;# 
  2522  050C                     	;# 
  2523  050D                     	;# 
  2524  050E                     	;# 
  2525  050F                     	;# 
  2526  050F                     	;# 
  2527  0510                     	;# 
  2528  0511                     	;# 
  2529  0512                     	;# 
  2530  0512                     	;# 
  2531  0513                     	;# 
  2532  0514                     	;# 
  2533  0515                     	;# 
  2534  0515                     	;# 
  2535  0516                     	;# 
  2536  0517                     	;# 
  2537  0518                     	;# 
  2538  0519                     	;# 
  2539  051A                     	;# 
  2540  051B                     	;# 
  2541  051C                     	;# 
  2542  051D                     	;# 
  2543  058C                     	;# 
  2544  058C                     	;# 
  2545  058D                     	;# 
  2546  058E                     	;# 
  2547  058F                     	;# 
  2548  058F                     	;# 
  2549  0590                     	;# 
  2550  0591                     	;# 
  2551  0592                     	;# 
  2552  0593                     	;# 
  2553  060C                     	;# 
  2554  060D                     	;# 
  2555  060E                     	;# 
  2556  060F                     	;# 
  2557  0610                     	;# 
  2558  0611                     	;# 
  2559  0612                     	;# 
  2560  0613                     	;# 
  2561  0614                     	;# 
  2562  0616                     	;# 
  2563  0617                     	;# 
  2564  0618                     	;# 
  2565  0619                     	;# 
  2566  061A                     	;# 
  2567  061B                     	;# 
  2568  061C                     	;# 
  2569  061D                     	;# 
  2570  061E                     	;# 
  2571  068C                     	;# 
  2572  068D                     	;# 
  2573  068E                     	;# 
  2574  068F                     	;# 
  2575  0690                     	;# 
  2576  0691                     	;# 
  2577  0692                     	;# 
  2578  0693                     	;# 
  2579  0694                     	;# 
  2580  070C                     	;# 
  2581  070D                     	;# 
  2582  070E                     	;# 
  2583  070F                     	;# 
  2584  0710                     	;# 
  2585  0711                     	;# 
  2586  0712                     	;# 
  2587  0713                     	;# 
  2588  0714                     	;# 
  2589  0716                     	;# 
  2590  0717                     	;# 
  2591  0718                     	;# 
  2592  0719                     	;# 
  2593  071A                     	;# 
  2594  071B                     	;# 
  2595  071C                     	;# 
  2596  071D                     	;# 
  2597  071E                     	;# 
  2598  0796                     	;# 
  2599  0797                     	;# 
  2600  0798                     	;# 
  2601  0799                     	;# 
  2602  079A                     	;# 
  2603  079B                     	;# 
  2604  080C                     	;# 
  2605  080D                     	;# 
  2606  080E                     	;# 
  2607  080F                     	;# 
  2608  0810                     	;# 
  2609  0811                     	;# 
  2610  0812                     	;# 
  2611  0813                     	;# 
  2612  0814                     	;# 
  2613  081A                     	;# 
  2614  081B                     	;# 
  2615  081C                     	;# 
  2616  081D                     	;# 
  2617  081E                     	;# 
  2618  081F                     	;# 
  2619  088C                     	;# 
  2620  088D                     	;# 
  2621  088E                     	;# 
  2622  088F                     	;# 
  2623  0890                     	;# 
  2624  0891                     	;# 
  2625  0892                     	;# 
  2626  0893                     	;# 
  2627  0895                     	;# 
  2628  0896                     	;# 
  2629  0897                     	;# 
  2630  0898                     	;# 
  2631  0899                     	;# 
  2632  089A                     	;# 
  2633  089B                     	;# 
  2634  090C                     	;# 
  2635  090E                     	;# 
  2636  090F                     	;# 
  2637  091F                     	;# 
  2638  091F                     	;# 
  2639  098F                     	;# 
  2640  098F                     	;# 
  2641  0990                     	;# 
  2642  0991                     	;# 
  2643  0992                     	;# 
  2644  0993                     	;# 
  2645  0994                     	;# 
  2646  0995                     	;# 
  2647  0996                     	;# 
  2648  0997                     	;# 
  2649  0E0F                     	;# 
  2650  0E10                     	;# 
  2651  0E11                     	;# 
  2652  0E12                     	;# 
  2653  0E13                     	;# 
  2654  0E14                     	;# 
  2655  0E15                     	;# 
  2656  0E16                     	;# 
  2657  0E17                     	;# 
  2658  0E18                     	;# 
  2659  0E19                     	;# 
  2660  0E1A                     	;# 
  2661  0E1B                     	;# 
  2662  0E1C                     	;# 
  2663  0E1D                     	;# 
  2664  0E1E                     	;# 
  2665  0E1F                     	;# 
  2666  0E20                     	;# 
  2667  0E21                     	;# 
  2668  0E22                     	;# 
  2669  0E23                     	;# 
  2670  0E24                     	;# 
  2671  0E25                     	;# 
  2672  0E26                     	;# 
  2673  0E27                     	;# 
  2674  0E28                     	;# 
  2675  0E29                     	;# 
  2676  0E2A                     	;# 
  2677  0E2B                     	;# 
  2678  0E2C                     	;# 
  2679  0E2D                     	;# 
  2680  0E2E                     	;# 
  2681  0E2F                     	;# 
  2682  0E30                     	;# 
  2683  0E31                     	;# 
  2684  0E32                     	;# 
  2685  0E33                     	;# 
  2686  0E34                     	;# 
  2687  0E35                     	;# 
  2688  0E36                     	;# 
  2689  0E37                     	;# 
  2690  0E8F                     	;# 
  2691  0E90                     	;# 
  2692  0E91                     	;# 
  2693  0E92                     	;# 
  2694  0E93                     	;# 
  2695  0E94                     	;# 
  2696  0E95                     	;# 
  2697  0E96                     	;# 
  2698  0E97                     	;# 
  2699  0E9C                     	;# 
  2700  0E9D                     	;# 
  2701  0E9E                     	;# 
  2702  0EA1                     	;# 
  2703  0EA2                     	;# 
  2704  0EA3                     	;# 
  2705  0EA4                     	;# 
  2706  0EA5                     	;# 
  2707  0EA9                     	;# 
  2708  0EAA                     	;# 
  2709  0EAB                     	;# 
  2710  0EAC                     	;# 
  2711  0EB1                     	;# 
  2712  0EB2                     	;# 
  2713  0EB3                     	;# 
  2714  0EB8                     	;# 
  2715  0EB9                     	;# 
  2716  0EBA                     	;# 
  2717  0EBB                     	;# 
  2718  0EBC                     	;# 
  2719  0EBD                     	;# 
  2720  0EBE                     	;# 
  2721  0EC3                     	;# 
  2722  0EC5                     	;# 
  2723  0EC6                     	;# 
  2724  0EC7                     	;# 
  2725  0EC8                     	;# 
  2726  0EC9                     	;# 
  2727  0ECA                     	;# 
  2728  0ECB                     	;# 
  2729  0ECC                     	;# 
  2730  0F10                     	;# 
  2731  0F11                     	;# 
  2732  0F12                     	;# 
  2733  0F13                     	;# 
  2734  0F14                     	;# 
  2735  0F15                     	;# 
  2736  0F16                     	;# 
  2737  0F17                     	;# 
  2738  0F18                     	;# 
  2739  0F19                     	;# 
  2740  0F1A                     	;# 
  2741  0F1B                     	;# 
  2742  0F1C                     	;# 
  2743  0F1D                     	;# 
  2744  0F1E                     	;# 
  2745  0F1F                     	;# 
  2746  0F20                     	;# 
  2747  0F21                     	;# 
  2748  0F22                     	;# 
  2749  0F23                     	;# 
  2750  0F24                     	;# 
  2751  0F25                     	;# 
  2752  0F26                     	;# 
  2753  0F27                     	;# 
  2754  0F28                     	;# 
  2755  0F29                     	;# 
  2756  0F2A                     	;# 
  2757  0F2B                     	;# 
  2758  0F2C                     	;# 
  2759  0F2D                     	;# 
  2760  0F2E                     	;# 
  2761  0F2F                     	;# 
  2762  0F30                     	;# 
  2763  0F31                     	;# 
  2764  0F32                     	;# 
  2765  0F38                     	;# 
  2766  0F39                     	;# 
  2767  0F3A                     	;# 
  2768  0F3B                     	;# 
  2769  0F3C                     	;# 
  2770  0F3D                     	;# 
  2771  0F3E                     	;# 
  2772  0F3F                     	;# 
  2773  0F40                     	;# 
  2774  0F41                     	;# 
  2775  0F43                     	;# 
  2776  0F44                     	;# 
  2777  0F45                     	;# 
  2778  0F46                     	;# 
  2779  0F47                     	;# 
  2780  0F48                     	;# 
  2781  0F49                     	;# 
  2782  0F4A                     	;# 
  2783  0F4B                     	;# 
  2784  0F4C                     	;# 
  2785  0F4E                     	;# 
  2786  0F4F                     	;# 
  2787  0F50                     	;# 
  2788  0F51                     	;# 
  2789  0F52                     	;# 
  2790  0F53                     	;# 
  2791  0F54                     	;# 
  2792  0F55                     	;# 
  2793  0F56                     	;# 
  2794  0F57                     	;# 
  2795  0F59                     	;# 
  2796  0F5A                     	;# 
  2797  0F5B                     	;# 
  2798  0F5C                     	;# 
  2799  0F5D                     	;# 
  2800  0F61                     	;# 
  2801  0F62                     	;# 
  2802  0F64                     	;# 
  2803  0F65                     	;# 
  2804  0F66                     	;# 
  2805  0F67                     	;# 
  2806  0F68                     	;# 
  2807  0F69                     	;# 
  2808  0F6A                     	;# 
  2809  0F6B                     	;# 
  2810  0F6C                     	;# 
  2811  0F6D                     	;# 
  2812  0FE4                     	;# 
  2813  0FE5                     	;# 
  2814  0FE6                     	;# 
  2815  0FE7                     	;# 
  2816  0FE8                     	;# 
  2817  0FE9                     	;# 
  2818  0FEA                     	;# 
  2819  0FEB                     	;# 
  2820  0FED                     	;# 
  2821  0FEE                     	;# 
  2822  0FEF                     	;# 
  2823  0000                     	;# 
  2824  0001                     	;# 
  2825  0002                     	;# 
  2826  0003                     	;# 
  2827  0004                     	;# 
  2828  0005                     	;# 
  2829  0006                     	;# 
  2830  0007                     	;# 
  2831  0008                     	;# 
  2832  0009                     	;# 
  2833  000A                     	;# 
  2834  000B                     	;# 
  2835  000C                     	;# 
  2836  000D                     	;# 
  2837  000E                     	;# 
  2838  000F                     	;# 
  2839  0010                     	;# 
  2840  0011                     	;# 
  2841  0012                     	;# 
  2842  0013                     	;# 
  2843  0014                     	;# 
  2844  0015                     	;# 
  2845  0016                     	;# 
  2846  0017                     	;# 
  2847  0018                     	;# 
  2848  0019                     	;# 
  2849  001A                     	;# 
  2850  001C                     	;# 
  2851  001C                     	;# 
  2852  001D                     	;# 
  2853  001D                     	;# 
  2854  001E                     	;# 
  2855  001F                     	;# 
  2856  008C                     	;# 
  2857  008C                     	;# 
  2858  008D                     	;# 
  2859  008E                     	;# 
  2860  008E                     	;# 
  2861  008F                     	;# 
  2862  0090                     	;# 
  2863  0090                     	;# 
  2864  0091                     	;# 
  2865  0093                     	;# 
  2866  0094                     	;# 
  2867  0095                     	;# 
  2868  0096                     	;# 
  2869  0097                     	;# 
  2870  0098                     	;# 
  2871  0099                     	;# 
  2872  009A                     	;# 
  2873  009B                     	;# 
  2874  009C                     	;# 
  2875  009D                     	;# 
  2876  009E                     	;# 
  2877  010C                     	;# 
  2878  010D                     	;# 
  2879  010E                     	;# 
  2880  010E                     	;# 
  2881  010F                     	;# 
  2882  0110                     	;# 
  2883  0110                     	;# 
  2884  0111                     	;# 
  2885  0112                     	;# 
  2886  0112                     	;# 
  2887  0113                     	;# 
  2888  0114                     	;# 
  2889  0114                     	;# 
  2890  0115                     	;# 
  2891  0116                     	;# 
  2892  0116                     	;# 
  2893  0117                     	;# 
  2894  0119                     	;# 
  2895  0119                     	;# 
  2896  0119                     	;# 
  2897  011A                     	;# 
  2898  011A                     	;# 
  2899  011A                     	;# 
  2900  011B                     	;# 
  2901  011B                     	;# 
  2902  011B                     	;# 
  2903  011B                     	;# 
  2904  011B                     	;# 
  2905  011C                     	;# 
  2906  011C                     	;# 
  2907  011C                     	;# 
  2908  011D                     	;# 
  2909  011D                     	;# 
  2910  011D                     	;# 
  2911  011E                     	;# 
  2912  011E                     	;# 
  2913  011E                     	;# 
  2914  011F                     	;# 
  2915  011F                     	;# 
  2916  011F                     	;# 
  2917  011F                     	;# 
  2918  011F                     	;# 
  2919  018C                     	;# 
  2920  018D                     	;# 
  2921  018E                     	;# 
  2922  018F                     	;# 
  2923  0190                     	;# 
  2924  0191                     	;# 
  2925  0192                     	;# 
  2926  0196                     	;# 
  2927  0197                     	;# 
  2928  0198                     	;# 
  2929  0199                     	;# 
  2930  019A                     	;# 
  2931  019B                     	;# 
  2932  019C                     	;# 
  2933  020C                     	;# 
  2934  020C                     	;# 
  2935  020D                     	;# 
  2936  020E                     	;# 
  2937  020F                     	;# 
  2938  020F                     	;# 
  2939  0210                     	;# 
  2940  0210                     	;# 
  2941  0211                     	;# 
  2942  0211                     	;# 
  2943  0212                     	;# 
  2944  0212                     	;# 
  2945  0213                     	;# 
  2946  0214                     	;# 
  2947  0215                     	;# 
  2948  0215                     	;# 
  2949  0216                     	;# 
  2950  0216                     	;# 
  2951  0217                     	;# 
  2952  0217                     	;# 
  2953  0218                     	;# 
  2954  0218                     	;# 
  2955  0219                     	;# 
  2956  021A                     	;# 
  2957  021B                     	;# 
  2958  021B                     	;# 
  2959  021C                     	;# 
  2960  021C                     	;# 
  2961  021D                     	;# 
  2962  021D                     	;# 
  2963  021E                     	;# 
  2964  021F                     	;# 
  2965  028C                     	;# 
  2966  028C                     	;# 
  2967  028D                     	;# 
  2968  028D                     	;# 
  2969  028E                     	;# 
  2970  028F                     	;# 
  2971  0290                     	;# 
  2972  0290                     	;# 
  2973  0291                     	;# 
  2974  0292                     	;# 
  2975  0292                     	;# 
  2976  0293                     	;# 
  2977  0293                     	;# 
  2978  0294                     	;# 
  2979  0295                     	;# 
  2980  0296                     	;# 
  2981  0296                     	;# 
  2982  0297                     	;# 
  2983  0298                     	;# 
  2984  0298                     	;# 
  2985  0299                     	;# 
  2986  0299                     	;# 
  2987  029A                     	;# 
  2988  029B                     	;# 
  2989  029C                     	;# 
  2990  029C                     	;# 
  2991  029D                     	;# 
  2992  030C                     	;# 
  2993  030C                     	;# 
  2994  030D                     	;# 
  2995  030E                     	;# 
  2996  030F                     	;# 
  2997  0310                     	;# 
  2998  0310                     	;# 
  2999  0311                     	;# 
  3000  0312                     	;# 
  3001  0313                     	;# 
  3002  0314                     	;# 
  3003  0314                     	;# 
  3004  0315                     	;# 
  3005  0316                     	;# 
  3006  0317                     	;# 
  3007  0318                     	;# 
  3008  0318                     	;# 
  3009  0319                     	;# 
  3010  031A                     	;# 
  3011  031B                     	;# 
  3012  031C                     	;# 
  3013  031C                     	;# 
  3014  031D                     	;# 
  3015  031E                     	;# 
  3016  031F                     	;# 
  3017  038C                     	;# 
  3018  038C                     	;# 
  3019  038D                     	;# 
  3020  038E                     	;# 
  3021  0390                     	;# 
  3022  0390                     	;# 
  3023  0391                     	;# 
  3024  0392                     	;# 
  3025  040C                     	;# 
  3026  040D                     	;# 
  3027  040E                     	;# 
  3028  040F                     	;# 
  3029  0410                     	;# 
  3030  0411                     	;# 
  3031  0416                     	;# 
  3032  0416                     	;# 
  3033  0417                     	;# 
  3034  0418                     	;# 
  3035  0418                     	;# 
  3036  0419                     	;# 
  3037  041A                     	;# 
  3038  041A                     	;# 
  3039  041B                     	;# 
  3040  041C                     	;# 
  3041  041C                     	;# 
  3042  041D                     	;# 
  3043  041E                     	;# 
  3044  041F                     	;# 
  3045  048C                     	;# 
  3046  048C                     	;# 
  3047  048D                     	;# 
  3048  048E                     	;# 
  3049  048F                     	;# 
  3050  048F                     	;# 
  3051  0490                     	;# 
  3052  0491                     	;# 
  3053  0492                     	;# 
  3054  0492                     	;# 
  3055  0493                     	;# 
  3056  0494                     	;# 
  3057  0495                     	;# 
  3058  0495                     	;# 
  3059  0496                     	;# 
  3060  0497                     	;# 
  3061  0498                     	;# 
  3062  0499                     	;# 
  3063  049A                     	;# 
  3064  049B                     	;# 
  3065  049C                     	;# 
  3066  049D                     	;# 
  3067  050C                     	;# 
  3068  050C                     	;# 
  3069  050D                     	;# 
  3070  050E                     	;# 
  3071  050F                     	;# 
  3072  050F                     	;# 
  3073  0510                     	;# 
  3074  0511                     	;# 
  3075  0512                     	;# 
  3076  0512                     	;# 
  3077  0513                     	;# 
  3078  0514                     	;# 
  3079  0515                     	;# 
  3080  0515                     	;# 
  3081  0516                     	;# 
  3082  0517                     	;# 
  3083  0518                     	;# 
  3084  0519                     	;# 
  3085  051A                     	;# 
  3086  051B                     	;# 
  3087  051C                     	;# 
  3088  051D                     	;# 
  3089  058C                     	;# 
  3090  058C                     	;# 
  3091  058D                     	;# 
  3092  058E                     	;# 
  3093  058F                     	;# 
  3094  058F                     	;# 
  3095  0590                     	;# 
  3096  0591                     	;# 
  3097  0592                     	;# 
  3098  0593                     	;# 
  3099  060C                     	;# 
  3100  060D                     	;# 
  3101  060E                     	;# 
  3102  060F                     	;# 
  3103  0610                     	;# 
  3104  0611                     	;# 
  3105  0612                     	;# 
  3106  0613                     	;# 
  3107  0614                     	;# 
  3108  0616                     	;# 
  3109  0617                     	;# 
  3110  0618                     	;# 
  3111  0619                     	;# 
  3112  061A                     	;# 
  3113  061B                     	;# 
  3114  061C                     	;# 
  3115  061D                     	;# 
  3116  061E                     	;# 
  3117  068C                     	;# 
  3118  068D                     	;# 
  3119  068E                     	;# 
  3120  068F                     	;# 
  3121  0690                     	;# 
  3122  0691                     	;# 
  3123  0692                     	;# 
  3124  0693                     	;# 
  3125  0694                     	;# 
  3126  070C                     	;# 
  3127  070D                     	;# 
  3128  070E                     	;# 
  3129  070F                     	;# 
  3130  0710                     	;# 
  3131  0711                     	;# 
  3132  0712                     	;# 
  3133  0713                     	;# 
  3134  0714                     	;# 
  3135  0716                     	;# 
  3136  0717                     	;# 
  3137  0718                     	;# 
  3138  0719                     	;# 
  3139  071A                     	;# 
  3140  071B                     	;# 
  3141  071C                     	;# 
  3142  071D                     	;# 
  3143  071E                     	;# 
  3144  0796                     	;# 
  3145  0797                     	;# 
  3146  0798                     	;# 
  3147  0799                     	;# 
  3148  079A                     	;# 
  3149  079B                     	;# 
  3150  080C                     	;# 
  3151  080D                     	;# 
  3152  080E                     	;# 
  3153  080F                     	;# 
  3154  0810                     	;# 
  3155  0811                     	;# 
  3156  0812                     	;# 
  3157  0813                     	;# 
  3158  0814                     	;# 
  3159  081A                     	;# 
  3160  081B                     	;# 
  3161  081C                     	;# 
  3162  081D                     	;# 
  3163  081E                     	;# 
  3164  081F                     	;# 
  3165  088C                     	;# 
  3166  088D                     	;# 
  3167  088E                     	;# 
  3168  088F                     	;# 
  3169  0890                     	;# 
  3170  0891                     	;# 
  3171  0892                     	;# 
  3172  0893                     	;# 
  3173  0895                     	;# 
  3174  0896                     	;# 
  3175  0897                     	;# 
  3176  0898                     	;# 
  3177  0899                     	;# 
  3178  089A                     	;# 
  3179  089B                     	;# 
  3180  090C                     	;# 
  3181  090E                     	;# 
  3182  090F                     	;# 
  3183  091F                     	;# 
  3184  091F                     	;# 
  3185  098F                     	;# 
  3186  098F                     	;# 
  3187  0990                     	;# 
  3188  0991                     	;# 
  3189  0992                     	;# 
  3190  0993                     	;# 
  3191  0994                     	;# 
  3192  0995                     	;# 
  3193  0996                     	;# 
  3194  0997                     	;# 
  3195  0E0F                     	;# 
  3196  0E10                     	;# 
  3197  0E11                     	;# 
  3198  0E12                     	;# 
  3199  0E13                     	;# 
  3200  0E14                     	;# 
  3201  0E15                     	;# 
  3202  0E16                     	;# 
  3203  0E17                     	;# 
  3204  0E18                     	;# 
  3205  0E19                     	;# 
  3206  0E1A                     	;# 
  3207  0E1B                     	;# 
  3208  0E1C                     	;# 
  3209  0E1D                     	;# 
  3210  0E1E                     	;# 
  3211  0E1F                     	;# 
  3212  0E20                     	;# 
  3213  0E21                     	;# 
  3214  0E22                     	;# 
  3215  0E23                     	;# 
  3216  0E24                     	;# 
  3217  0E25                     	;# 
  3218  0E26                     	;# 
  3219  0E27                     	;# 
  3220  0E28                     	;# 
  3221  0E29                     	;# 
  3222  0E2A                     	;# 
  3223  0E2B                     	;# 
  3224  0E2C                     	;# 
  3225  0E2D                     	;# 
  3226  0E2E                     	;# 
  3227  0E2F                     	;# 
  3228  0E30                     	;# 
  3229  0E31                     	;# 
  3230  0E32                     	;# 
  3231  0E33                     	;# 
  3232  0E34                     	;# 
  3233  0E35                     	;# 
  3234  0E36                     	;# 
  3235  0E37                     	;# 
  3236  0E8F                     	;# 
  3237  0E90                     	;# 
  3238  0E91                     	;# 
  3239  0E92                     	;# 
  3240  0E93                     	;# 
  3241  0E94                     	;# 
  3242  0E95                     	;# 
  3243  0E96                     	;# 
  3244  0E97                     	;# 
  3245  0E9C                     	;# 
  3246  0E9D                     	;# 
  3247  0E9E                     	;# 
  3248  0EA1                     	;# 
  3249  0EA2                     	;# 
  3250  0EA3                     	;# 
  3251  0EA4                     	;# 
  3252  0EA5                     	;# 
  3253  0EA9                     	;# 
  3254  0EAA                     	;# 
  3255  0EAB                     	;# 
  3256  0EAC                     	;# 
  3257  0EB1                     	;# 
  3258  0EB2                     	;# 
  3259  0EB3                     	;# 
  3260  0EB8                     	;# 
  3261  0EB9                     	;# 
  3262  0EBA                     	;# 
  3263  0EBB                     	;# 
  3264  0EBC                     	;# 
  3265  0EBD                     	;# 
  3266  0EBE                     	;# 
  3267  0EC3                     	;# 
  3268  0EC5                     	;# 
  3269  0EC6                     	;# 
  3270  0EC7                     	;# 
  3271  0EC8                     	;# 
  3272  0EC9                     	;# 
  3273  0ECA                     	;# 
  3274  0ECB                     	;# 
  3275  0ECC                     	;# 
  3276  0F10                     	;# 
  3277  0F11                     	;# 
  3278  0F12                     	;# 
  3279  0F13                     	;# 
  3280  0F14                     	;# 
  3281  0F15                     	;# 
  3282  0F16                     	;# 
  3283  0F17                     	;# 
  3284  0F18                     	;# 
  3285  0F19                     	;# 
  3286  0F1A                     	;# 
  3287  0F1B                     	;# 
  3288  0F1C                     	;# 
  3289  0F1D                     	;# 
  3290  0F1E                     	;# 
  3291  0F1F                     	;# 
  3292  0F20                     	;# 
  3293  0F21                     	;# 
  3294  0F22                     	;# 
  3295  0F23                     	;# 
  3296  0F24                     	;# 
  3297  0F25                     	;# 
  3298  0F26                     	;# 
  3299  0F27                     	;# 
  3300  0F28                     	;# 
  3301  0F29                     	;# 
  3302  0F2A                     	;# 
  3303  0F2B                     	;# 
  3304  0F2C                     	;# 
  3305  0F2D                     	;# 
  3306  0F2E                     	;# 
  3307  0F2F                     	;# 
  3308  0F30                     	;# 
  3309  0F31                     	;# 
  3310  0F32                     	;# 
  3311  0F38                     	;# 
  3312  0F39                     	;# 
  3313  0F3A                     	;# 
  3314  0F3B                     	;# 
  3315  0F3C                     	;# 
  3316  0F3D                     	;# 
  3317  0F3E                     	;# 
  3318  0F3F                     	;# 
  3319  0F40                     	;# 
  3320  0F41                     	;# 
  3321  0F43                     	;# 
  3322  0F44                     	;# 
  3323  0F45                     	;# 
  3324  0F46                     	;# 
  3325  0F47                     	;# 
  3326  0F48                     	;# 
  3327  0F49                     	;# 
  3328  0F4A                     	;# 
  3329  0F4B                     	;# 
  3330  0F4C                     	;# 
  3331  0F4E                     	;# 
  3332  0F4F                     	;# 
  3333  0F50                     	;# 
  3334  0F51                     	;# 
  3335  0F52                     	;# 
  3336  0F53                     	;# 
  3337  0F54                     	;# 
  3338  0F55                     	;# 
  3339  0F56                     	;# 
  3340  0F57                     	;# 
  3341  0F59                     	;# 
  3342  0F5A                     	;# 
  3343  0F5B                     	;# 
  3344  0F5C                     	;# 
  3345  0F5D                     	;# 
  3346  0F61                     	;# 
  3347  0F62                     	;# 
  3348  0F64                     	;# 
  3349  0F65                     	;# 
  3350  0F66                     	;# 
  3351  0F67                     	;# 
  3352  0F68                     	;# 
  3353  0F69                     	;# 
  3354  0F6A                     	;# 
  3355  0F6B                     	;# 
  3356  0F6C                     	;# 
  3357  0F6D                     	;# 
  3358  0FE4                     	;# 
  3359  0FE5                     	;# 
  3360  0FE6                     	;# 
  3361  0FE7                     	;# 
  3362  0FE8                     	;# 
  3363  0FE9                     	;# 
  3364  0FEA                     	;# 
  3365  0FEB                     	;# 
  3366  0FED                     	;# 
  3367  0FEE                     	;# 
  3368  0FEF                     	;# 
  3369  0000                     	;# 
  3370  0001                     	;# 
  3371  0002                     	;# 
  3372  0003                     	;# 
  3373  0004                     	;# 
  3374  0005                     	;# 
  3375  0006                     	;# 
  3376  0007                     	;# 
  3377  0008                     	;# 
  3378  0009                     	;# 
  3379  000A                     	;# 
  3380  000B                     	;# 
  3381  000C                     	;# 
  3382  000D                     	;# 
  3383  000E                     	;# 
  3384  000F                     	;# 
  3385  0010                     	;# 
  3386  0011                     	;# 
  3387  0012                     	;# 
  3388  0013                     	;# 
  3389  0014                     	;# 
  3390  0015                     	;# 
  3391  0016                     	;# 
  3392  0017                     	;# 
  3393  0018                     	;# 
  3394  0019                     	;# 
  3395  001A                     	;# 
  3396  001C                     	;# 
  3397  001C                     	;# 
  3398  001D                     	;# 
  3399  001D                     	;# 
  3400  001E                     	;# 
  3401  001F                     	;# 
  3402  008C                     	;# 
  3403  008C                     	;# 
  3404  008D                     	;# 
  3405  008E                     	;# 
  3406  008E                     	;# 
  3407  008F                     	;# 
  3408  0090                     	;# 
  3409  0090                     	;# 
  3410  0091                     	;# 
  3411  0093                     	;# 
  3412  0094                     	;# 
  3413  0095                     	;# 
  3414  0096                     	;# 
  3415  0097                     	;# 
  3416  0098                     	;# 
  3417  0099                     	;# 
  3418  009A                     	;# 
  3419  009B                     	;# 
  3420  009C                     	;# 
  3421  009D                     	;# 
  3422  009E                     	;# 
  3423  010C                     	;# 
  3424  010D                     	;# 
  3425  010E                     	;# 
  3426  010E                     	;# 
  3427  010F                     	;# 
  3428  0110                     	;# 
  3429  0110                     	;# 
  3430  0111                     	;# 
  3431  0112                     	;# 
  3432  0112                     	;# 
  3433  0113                     	;# 
  3434  0114                     	;# 
  3435  0114                     	;# 
  3436  0115                     	;# 
  3437  0116                     	;# 
  3438  0116                     	;# 
  3439  0117                     	;# 
  3440  0119                     	;# 
  3441  0119                     	;# 
  3442  0119                     	;# 
  3443  011A                     	;# 
  3444  011A                     	;# 
  3445  011A                     	;# 
  3446  011B                     	;# 
  3447  011B                     	;# 
  3448  011B                     	;# 
  3449  011B                     	;# 
  3450  011B                     	;# 
  3451  011C                     	;# 
  3452  011C                     	;# 
  3453  011C                     	;# 
  3454  011D                     	;# 
  3455  011D                     	;# 
  3456  011D                     	;# 
  3457  011E                     	;# 
  3458  011E                     	;# 
  3459  011E                     	;# 
  3460  011F                     	;# 
  3461  011F                     	;# 
  3462  011F                     	;# 
  3463  011F                     	;# 
  3464  011F                     	;# 
  3465  018C                     	;# 
  3466  018D                     	;# 
  3467  018E                     	;# 
  3468  018F                     	;# 
  3469  0190                     	;# 
  3470  0191                     	;# 
  3471  0192                     	;# 
  3472  0196                     	;# 
  3473  0197                     	;# 
  3474  0198                     	;# 
  3475  0199                     	;# 
  3476  019A                     	;# 
  3477  019B                     	;# 
  3478  019C                     	;# 
  3479  020C                     	;# 
  3480  020C                     	;# 
  3481  020D                     	;# 
  3482  020E                     	;# 
  3483  020F                     	;# 
  3484  020F                     	;# 
  3485  0210                     	;# 
  3486  0210                     	;# 
  3487  0211                     	;# 
  3488  0211                     	;# 
  3489  0212                     	;# 
  3490  0212                     	;# 
  3491  0213                     	;# 
  3492  0214                     	;# 
  3493  0215                     	;# 
  3494  0215                     	;# 
  3495  0216                     	;# 
  3496  0216                     	;# 
  3497  0217                     	;# 
  3498  0217                     	;# 
  3499  0218                     	;# 
  3500  0218                     	;# 
  3501  0219                     	;# 
  3502  021A                     	;# 
  3503  021B                     	;# 
  3504  021B                     	;# 
  3505  021C                     	;# 
  3506  021C                     	;# 
  3507  021D                     	;# 
  3508  021D                     	;# 
  3509  021E                     	;# 
  3510  021F                     	;# 
  3511  028C                     	;# 
  3512  028C                     	;# 
  3513  028D                     	;# 
  3514  028D                     	;# 
  3515  028E                     	;# 
  3516  028F                     	;# 
  3517  0290                     	;# 
  3518  0290                     	;# 
  3519  0291                     	;# 
  3520  0292                     	;# 
  3521  0292                     	;# 
  3522  0293                     	;# 
  3523  0293                     	;# 
  3524  0294                     	;# 
  3525  0295                     	;# 
  3526  0296                     	;# 
  3527  0296                     	;# 
  3528  0297                     	;# 
  3529  0298                     	;# 
  3530  0298                     	;# 
  3531  0299                     	;# 
  3532  0299                     	;# 
  3533  029A                     	;# 
  3534  029B                     	;# 
  3535  029C                     	;# 
  3536  029C                     	;# 
  3537  029D                     	;# 
  3538  030C                     	;# 
  3539  030C                     	;# 
  3540  030D                     	;# 
  3541  030E                     	;# 
  3542  030F                     	;# 
  3543  0310                     	;# 
  3544  0310                     	;# 
  3545  0311                     	;# 
  3546  0312                     	;# 
  3547  0313                     	;# 
  3548  0314                     	;# 
  3549  0314                     	;# 
  3550  0315                     	;# 
  3551  0316                     	;# 
  3552  0317                     	;# 
  3553  0318                     	;# 
  3554  0318                     	;# 
  3555  0319                     	;# 
  3556  031A                     	;# 
  3557  031B                     	;# 
  3558  031C                     	;# 
  3559  031C                     	;# 
  3560  031D                     	;# 
  3561  031E                     	;# 
  3562  031F                     	;# 
  3563  038C                     	;# 
  3564  038C                     	;# 
  3565  038D                     	;# 
  3566  038E                     	;# 
  3567  0390                     	;# 
  3568  0390                     	;# 
  3569  0391                     	;# 
  3570  0392                     	;# 
  3571  040C                     	;# 
  3572  040D                     	;# 
  3573  040E                     	;# 
  3574  040F                     	;# 
  3575  0410                     	;# 
  3576  0411                     	;# 
  3577  0416                     	;# 
  3578  0416                     	;# 
  3579  0417                     	;# 
  3580  0418                     	;# 
  3581  0418                     	;# 
  3582  0419                     	;# 
  3583  041A                     	;# 
  3584  041A                     	;# 
  3585  041B                     	;# 
  3586  041C                     	;# 
  3587  041C                     	;# 
  3588  041D                     	;# 
  3589  041E                     	;# 
  3590  041F                     	;# 
  3591  048C                     	;# 
  3592  048C                     	;# 
  3593  048D                     	;# 
  3594  048E                     	;# 
  3595  048F                     	;# 
  3596  048F                     	;# 
  3597  0490                     	;# 
  3598  0491                     	;# 
  3599  0492                     	;# 
  3600  0492                     	;# 
  3601  0493                     	;# 
  3602  0494                     	;# 
  3603  0495                     	;# 
  3604  0495                     	;# 
  3605  0496                     	;# 
  3606  0497                     	;# 
  3607  0498                     	;# 
  3608  0499                     	;# 
  3609  049A                     	;# 
  3610  049B                     	;# 
  3611  049C                     	;# 
  3612  049D                     	;# 
  3613  050C                     	;# 
  3614  050C                     	;# 
  3615  050D                     	;# 
  3616  050E                     	;# 
  3617  050F                     	;# 
  3618  050F                     	;# 
  3619  0510                     	;# 
  3620  0511                     	;# 
  3621  0512                     	;# 
  3622  0512                     	;# 
  3623  0513                     	;# 
  3624  0514                     	;# 
  3625  0515                     	;# 
  3626  0515                     	;# 
  3627  0516                     	;# 
  3628  0517                     	;# 
  3629  0518                     	;# 
  3630  0519                     	;# 
  3631  051A                     	;# 
  3632  051B                     	;# 
  3633  051C                     	;# 
  3634  051D                     	;# 
  3635  058C                     	;# 
  3636  058C                     	;# 
  3637  058D                     	;# 
  3638  058E                     	;# 
  3639  058F                     	;# 
  3640  058F                     	;# 
  3641  0590                     	;# 
  3642  0591                     	;# 
  3643  0592                     	;# 
  3644  0593                     	;# 
  3645  060C                     	;# 
  3646  060D                     	;# 
  3647  060E                     	;# 
  3648  060F                     	;# 
  3649  0610                     	;# 
  3650  0611                     	;# 
  3651  0612                     	;# 
  3652  0613                     	;# 
  3653  0614                     	;# 
  3654  0616                     	;# 
  3655  0617                     	;# 
  3656  0618                     	;# 
  3657  0619                     	;# 
  3658  061A                     	;# 
  3659  061B                     	;# 
  3660  061C                     	;# 
  3661  061D                     	;# 
  3662  061E                     	;# 
  3663  068C                     	;# 
  3664  068D                     	;# 
  3665  068E                     	;# 
  3666  068F                     	;# 
  3667  0690                     	;# 
  3668  0691                     	;# 
  3669  0692                     	;# 
  3670  0693                     	;# 
  3671  0694                     	;# 
  3672  070C                     	;# 
  3673  070D                     	;# 
  3674  070E                     	;# 
  3675  070F                     	;# 
  3676  0710                     	;# 
  3677  0711                     	;# 
  3678  0712                     	;# 
  3679  0713                     	;# 
  3680  0714                     	;# 
  3681  0716                     	;# 
  3682  0717                     	;# 
  3683  0718                     	;# 
  3684  0719                     	;# 
  3685  071A                     	;# 
  3686  071B                     	;# 
  3687  071C                     	;# 
  3688  071D                     	;# 
  3689  071E                     	;# 
  3690  0796                     	;# 
  3691  0797                     	;# 
  3692  0798                     	;# 
  3693  0799                     	;# 
  3694  079A                     	;# 
  3695  079B                     	;# 
  3696  080C                     	;# 
  3697  080D                     	;# 
  3698  080E                     	;# 
  3699  080F                     	;# 
  3700  0810                     	;# 
  3701  0811                     	;# 
  3702  0812                     	;# 
  3703  0813                     	;# 
  3704  0814                     	;# 
  3705  081A                     	;# 
  3706  081B                     	;# 
  3707  081C                     	;# 
  3708  081D                     	;# 
  3709  081E                     	;# 
  3710  081F                     	;# 
  3711  088C                     	;# 
  3712  088D                     	;# 
  3713  088E                     	;# 
  3714  088F                     	;# 
  3715  0890                     	;# 
  3716  0891                     	;# 
  3717  0892                     	;# 
  3718  0893                     	;# 
  3719  0895                     	;# 
  3720  0896                     	;# 
  3721  0897                     	;# 
  3722  0898                     	;# 
  3723  0899                     	;# 
  3724  089A                     	;# 
  3725  089B                     	;# 
  3726  090C                     	;# 
  3727  090E                     	;# 
  3728  090F                     	;# 
  3729  091F                     	;# 
  3730  091F                     	;# 
  3731  098F                     	;# 
  3732  098F                     	;# 
  3733  0990                     	;# 
  3734  0991                     	;# 
  3735  0992                     	;# 
  3736  0993                     	;# 
  3737  0994                     	;# 
  3738  0995                     	;# 
  3739  0996                     	;# 
  3740  0997                     	;# 
  3741  0E0F                     	;# 
  3742  0E10                     	;# 
  3743  0E11                     	;# 
  3744  0E12                     	;# 
  3745  0E13                     	;# 
  3746  0E14                     	;# 
  3747  0E15                     	;# 
  3748  0E16                     	;# 
  3749  0E17                     	;# 
  3750  0E18                     	;# 
  3751  0E19                     	;# 
  3752  0E1A                     	;# 
  3753  0E1B                     	;# 
  3754  0E1C                     	;# 
  3755  0E1D                     	;# 
  3756  0E1E                     	;# 
  3757  0E1F                     	;# 
  3758  0E20                     	;# 
  3759  0E21                     	;# 
  3760  0E22                     	;# 
  3761  0E23                     	;# 
  3762  0E24                     	;# 
  3763  0E25                     	;# 
  3764  0E26                     	;# 
  3765  0E27                     	;# 
  3766  0E28                     	;# 
  3767  0E29                     	;# 
  3768  0E2A                     	;# 
  3769  0E2B                     	;# 
  3770  0E2C                     	;# 
  3771  0E2D                     	;# 
  3772  0E2E                     	;# 
  3773  0E2F                     	;# 
  3774  0E30                     	;# 
  3775  0E31                     	;# 
  3776  0E32                     	;# 
  3777  0E33                     	;# 
  3778  0E34                     	;# 
  3779  0E35                     	;# 
  3780  0E36                     	;# 
  3781  0E37                     	;# 
  3782  0E8F                     	;# 
  3783  0E90                     	;# 
  3784  0E91                     	;# 
  3785  0E92                     	;# 
  3786  0E93                     	;# 
  3787  0E94                     	;# 
  3788  0E95                     	;# 
  3789  0E96                     	;# 
  3790  0E97                     	;# 
  3791  0E9C                     	;# 
  3792  0E9D                     	;# 
  3793  0E9E                     	;# 
  3794  0EA1                     	;# 
  3795  0EA2                     	;# 
  3796  0EA3                     	;# 
  3797  0EA4                     	;# 
  3798  0EA5                     	;# 
  3799  0EA9                     	;# 
  3800  0EAA                     	;# 
  3801  0EAB                     	;# 
  3802  0EAC                     	;# 
  3803  0EB1                     	;# 
  3804  0EB2                     	;# 
  3805  0EB3                     	;# 
  3806  0EB8                     	;# 
  3807  0EB9                     	;# 
  3808  0EBA                     	;# 
  3809  0EBB                     	;# 
  3810  0EBC                     	;# 
  3811  0EBD                     	;# 
  3812  0EBE                     	;# 
  3813  0EC3                     	;# 
  3814  0EC5                     	;# 
  3815  0EC6                     	;# 
  3816  0EC7                     	;# 
  3817  0EC8                     	;# 
  3818  0EC9                     	;# 
  3819  0ECA                     	;# 
  3820  0ECB                     	;# 
  3821  0ECC                     	;# 
  3822  0F10                     	;# 
  3823  0F11                     	;# 
  3824  0F12                     	;# 
  3825  0F13                     	;# 
  3826  0F14                     	;# 
  3827  0F15                     	;# 
  3828  0F16                     	;# 
  3829  0F17                     	;# 
  3830  0F18                     	;# 
  3831  0F19                     	;# 
  3832  0F1A                     	;# 
  3833  0F1B                     	;# 
  3834  0F1C                     	;# 
  3835  0F1D                     	;# 
  3836  0F1E                     	;# 
  3837  0F1F                     	;# 
  3838  0F20                     	;# 
  3839  0F21                     	;# 
  3840  0F22                     	;# 
  3841  0F23                     	;# 
  3842  0F24                     	;# 
  3843  0F25                     	;# 
  3844  0F26                     	;# 
  3845  0F27                     	;# 
  3846  0F28                     	;# 
  3847  0F29                     	;# 
  3848  0F2A                     	;# 
  3849  0F2B                     	;# 
  3850  0F2C                     	;# 
  3851  0F2D                     	;# 
  3852  0F2E                     	;# 
  3853  0F2F                     	;# 
  3854  0F30                     	;# 
  3855  0F31                     	;# 
  3856  0F32                     	;# 
  3857  0F38                     	;# 
  3858  0F39                     	;# 
  3859  0F3A                     	;# 
  3860  0F3B                     	;# 
  3861  0F3C                     	;# 
  3862  0F3D                     	;# 
  3863  0F3E                     	;# 
  3864  0F3F                     	;# 
  3865  0F40                     	;# 
  3866  0F41                     	;# 
  3867  0F43                     	;# 
  3868  0F44                     	;# 
  3869  0F45                     	;# 
  3870  0F46                     	;# 
  3871  0F47                     	;# 
  3872  0F48                     	;# 
  3873  0F49                     	;# 
  3874  0F4A                     	;# 
  3875  0F4B                     	;# 
  3876  0F4C                     	;# 
  3877  0F4E                     	;# 
  3878  0F4F                     	;# 
  3879  0F50                     	;# 
  3880  0F51                     	;# 
  3881  0F52                     	;# 
  3882  0F53                     	;# 
  3883  0F54                     	;# 
  3884  0F55                     	;# 
  3885  0F56                     	;# 
  3886  0F57                     	;# 
  3887  0F59                     	;# 
  3888  0F5A                     	;# 
  3889  0F5B                     	;# 
  3890  0F5C                     	;# 
  3891  0F5D                     	;# 
  3892  0F61                     	;# 
  3893  0F62                     	;# 
  3894  0F64                     	;# 
  3895  0F65                     	;# 
  3896  0F66                     	;# 
  3897  0F67                     	;# 
  3898  0F68                     	;# 
  3899  0F69                     	;# 
  3900  0F6A                     	;# 
  3901  0F6B                     	;# 
  3902  0F6C                     	;# 
  3903  0F6D                     	;# 
  3904  0FE4                     	;# 
  3905  0FE5                     	;# 
  3906  0FE6                     	;# 
  3907  0FE7                     	;# 
  3908  0FE8                     	;# 
  3909  0FE9                     	;# 
  3910  0FEA                     	;# 
  3911  0FEB                     	;# 
  3912  0FED                     	;# 
  3913  0FEE                     	;# 
  3914  0FEF                     	;# 
  3915  0000                     	;# 
  3916  0001                     	;# 
  3917  0002                     	;# 
  3918  0003                     	;# 
  3919  0004                     	;# 
  3920  0005                     	;# 
  3921  0006                     	;# 
  3922  0007                     	;# 
  3923  0008                     	;# 
  3924  0009                     	;# 
  3925  000A                     	;# 
  3926  000B                     	;# 
  3927  000C                     	;# 
  3928  000D                     	;# 
  3929  000E                     	;# 
  3930  000F                     	;# 
  3931  0010                     	;# 
  3932  0011                     	;# 
  3933  0012                     	;# 
  3934  0013                     	;# 
  3935  0014                     	;# 
  3936  0015                     	;# 
  3937  0016                     	;# 
  3938  0017                     	;# 
  3939  0018                     	;# 
  3940  0019                     	;# 
  3941  001A                     	;# 
  3942  001C                     	;# 
  3943  001C                     	;# 
  3944  001D                     	;# 
  3945  001D                     	;# 
  3946  001E                     	;# 
  3947  001F                     	;# 
  3948  008C                     	;# 
  3949  008C                     	;# 
  3950  008D                     	;# 
  3951  008E                     	;# 
  3952  008E                     	;# 
  3953  008F                     	;# 
  3954  0090                     	;# 
  3955  0090                     	;# 
  3956  0091                     	;# 
  3957  0093                     	;# 
  3958  0094                     	;# 
  3959  0095                     	;# 
  3960  0096                     	;# 
  3961  0097                     	;# 
  3962  0098                     	;# 
  3963  0099                     	;# 
  3964  009A                     	;# 
  3965  009B                     	;# 
  3966  009C                     	;# 
  3967  009D                     	;# 
  3968  009E                     	;# 
  3969  010C                     	;# 
  3970  010D                     	;# 
  3971  010E                     	;# 
  3972  010E                     	;# 
  3973  010F                     	;# 
  3974  0110                     	;# 
  3975  0110                     	;# 
  3976  0111                     	;# 
  3977  0112                     	;# 
  3978  0112                     	;# 
  3979  0113                     	;# 
  3980  0114                     	;# 
  3981  0114                     	;# 
  3982  0115                     	;# 
  3983  0116                     	;# 
  3984  0116                     	;# 
  3985  0117                     	;# 
  3986  0119                     	;# 
  3987  0119                     	;# 
  3988  0119                     	;# 
  3989  011A                     	;# 
  3990  011A                     	;# 
  3991  011A                     	;# 
  3992  011B                     	;# 
  3993  011B                     	;# 
  3994  011B                     	;# 
  3995  011B                     	;# 
  3996  011B                     	;# 
  3997  011C                     	;# 
  3998  011C                     	;# 
  3999  011C                     	;# 
  4000  011D                     	;# 
  4001  011D                     	;# 
  4002  011D                     	;# 
  4003  011E                     	;# 
  4004  011E                     	;# 
  4005  011E                     	;# 
  4006  011F                     	;# 
  4007  011F                     	;# 
  4008  011F                     	;# 
  4009  011F                     	;# 
  4010  011F                     	;# 
  4011  018C                     	;# 
  4012  018D                     	;# 
  4013  018E                     	;# 
  4014  018F                     	;# 
  4015  0190                     	;# 
  4016  0191                     	;# 
  4017  0192                     	;# 
  4018  0196                     	;# 
  4019  0197                     	;# 
  4020  0198                     	;# 
  4021  0199                     	;# 
  4022  019A                     	;# 
  4023  019B                     	;# 
  4024  019C                     	;# 
  4025  020C                     	;# 
  4026  020C                     	;# 
  4027  020D                     	;# 
  4028  020E                     	;# 
  4029  020F                     	;# 
  4030  020F                     	;# 
  4031  0210                     	;# 
  4032  0210                     	;# 
  4033  0211                     	;# 
  4034  0211                     	;# 
  4035  0212                     	;# 
  4036  0212                     	;# 
  4037  0213                     	;# 
  4038  0214                     	;# 
  4039  0215                     	;# 
  4040  0215                     	;# 
  4041  0216                     	;# 
  4042  0216                     	;# 
  4043  0217                     	;# 
  4044  0217                     	;# 
  4045  0218                     	;# 
  4046  0218                     	;# 
  4047  0219                     	;# 
  4048  021A                     	;# 
  4049  021B                     	;# 
  4050  021B                     	;# 
  4051  021C                     	;# 
  4052  021C                     	;# 
  4053  021D                     	;# 
  4054  021D                     	;# 
  4055  021E                     	;# 
  4056  021F                     	;# 
  4057  028C                     	;# 
  4058  028C                     	;# 
  4059  028D                     	;# 
  4060  028D                     	;# 
  4061  028E                     	;# 
  4062  028F                     	;# 
  4063  0290                     	;# 
  4064  0290                     	;# 
  4065  0291                     	;# 
  4066  0292                     	;# 
  4067  0292                     	;# 
  4068  0293                     	;# 
  4069  0293                     	;# 
  4070  0294                     	;# 
  4071  0295                     	;# 
  4072  0296                     	;# 
  4073  0296                     	;# 
  4074  0297                     	;# 
  4075  0298                     	;# 
  4076  0298                     	;# 
  4077  0299                     	;# 
  4078  0299                     	;# 
  4079  029A                     	;# 
  4080  029B                     	;# 
  4081  029C                     	;# 
  4082  029C                     	;# 
  4083  029D                     	;# 
  4084  030C                     	;# 
  4085  030C                     	;# 
  4086  030D                     	;# 
  4087  030E                     	;# 
  4088  030F                     	;# 
  4089  0310                     	;# 
  4090  0310                     	;# 
  4091  0311                     	;# 
  4092  0312                     	;# 
  4093  0313                     	;# 
  4094  0314                     	;# 
  4095  0314                     	;# 
  4096  0315                     	;# 
  4097  0316                     	;# 
  4098  0317                     	;# 
  4099  0318                     	;# 
  4100  0318                     	;# 
  4101  0319                     	;# 
  4102  031A                     	;# 
  4103  031B                     	;# 
  4104  031C                     	;# 
  4105  031C                     	;# 
  4106  031D                     	;# 
  4107  031E                     	;# 
  4108  031F                     	;# 
  4109  038C                     	;# 
  4110  038C                     	;# 
  4111  038D                     	;# 
  4112  038E                     	;# 
  4113  0390                     	;# 
  4114  0390                     	;# 
  4115  0391                     	;# 
  4116  0392                     	;# 
  4117  040C                     	;# 
  4118  040D                     	;# 
  4119  040E                     	;# 
  4120  040F                     	;# 
  4121  0410                     	;# 
  4122  0411                     	;# 
  4123  0416                     	;# 
  4124  0416                     	;# 
  4125  0417                     	;# 
  4126  0418                     	;# 
  4127  0418                     	;# 
  4128  0419                     	;# 
  4129  041A                     	;# 
  4130  041A                     	;# 
  4131  041B                     	;# 
  4132  041C                     	;# 
  4133  041C                     	;# 
  4134  041D                     	;# 
  4135  041E                     	;# 
  4136  041F                     	;# 
  4137  048C                     	;# 
  4138  048C                     	;# 
  4139  048D                     	;# 
  4140  048E                     	;# 
  4141  048F                     	;# 
  4142  048F                     	;# 
  4143  0490                     	;# 
  4144  0491                     	;# 
  4145  0492                     	;# 
  4146  0492                     	;# 
  4147  0493                     	;# 
  4148  0494                     	;# 
  4149  0495                     	;# 
  4150  0495                     	;# 
  4151  0496                     	;# 
  4152  0497                     	;# 
  4153  0498                     	;# 
  4154  0499                     	;# 
  4155  049A                     	;# 
  4156  049B                     	;# 
  4157  049C                     	;# 
  4158  049D                     	;# 
  4159  050C                     	;# 
  4160  050C                     	;# 
  4161  050D                     	;# 
  4162  050E                     	;# 
  4163  050F                     	;# 
  4164  050F                     	;# 
  4165  0510                     	;# 
  4166  0511                     	;# 
  4167  0512                     	;# 
  4168  0512                     	;# 
  4169  0513                     	;# 
  4170  0514                     	;# 
  4171  0515                     	;# 
  4172  0515                     	;# 
  4173  0516                     	;# 
  4174  0517                     	;# 
  4175  0518                     	;# 
  4176  0519                     	;# 
  4177  051A                     	;# 
  4178  051B                     	;# 
  4179  051C                     	;# 
  4180  051D                     	;# 
  4181  058C                     	;# 
  4182  058C                     	;# 
  4183  058D                     	;# 
  4184  058E                     	;# 
  4185  058F                     	;# 
  4186  058F                     	;# 
  4187  0590                     	;# 
  4188  0591                     	;# 
  4189  0592                     	;# 
  4190  0593                     	;# 
  4191  060C                     	;# 
  4192  060D                     	;# 
  4193  060E                     	;# 
  4194  060F                     	;# 
  4195  0610                     	;# 
  4196  0611                     	;# 
  4197  0612                     	;# 
  4198  0613                     	;# 
  4199  0614                     	;# 
  4200  0616                     	;# 
  4201  0617                     	;# 
  4202  0618                     	;# 
  4203  0619                     	;# 
  4204  061A                     	;# 
  4205  061B                     	;# 
  4206  061C                     	;# 
  4207  061D                     	;# 
  4208  061E                     	;# 
  4209  068C                     	;# 
  4210  068D                     	;# 
  4211  068E                     	;# 
  4212  068F                     	;# 
  4213  0690                     	;# 
  4214  0691                     	;# 
  4215  0692                     	;# 
  4216  0693                     	;# 
  4217  0694                     	;# 
  4218  070C                     	;# 
  4219  070D                     	;# 
  4220  070E                     	;# 
  4221  070F                     	;# 
  4222  0710                     	;# 
  4223  0711                     	;# 
  4224  0712                     	;# 
  4225  0713                     	;# 
  4226  0714                     	;# 
  4227  0716                     	;# 
  4228  0717                     	;# 
  4229  0718                     	;# 
  4230  0719                     	;# 
  4231  071A                     	;# 
  4232  071B                     	;# 
  4233  071C                     	;# 
  4234  071D                     	;# 
  4235  071E                     	;# 
  4236  0796                     	;# 
  4237  0797                     	;# 
  4238  0798                     	;# 
  4239  0799                     	;# 
  4240  079A                     	;# 
  4241  079B                     	;# 
  4242  080C                     	;# 
  4243  080D                     	;# 
  4244  080E                     	;# 
  4245  080F                     	;# 
  4246  0810                     	;# 
  4247  0811                     	;# 
  4248  0812                     	;# 
  4249  0813                     	;# 
  4250  0814                     	;# 
  4251  081A                     	;# 
  4252  081B                     	;# 
  4253  081C                     	;# 
  4254  081D                     	;# 
  4255  081E                     	;# 
  4256  081F                     	;# 
  4257  088C                     	;# 
  4258  088D                     	;# 
  4259  088E                     	;# 
  4260  088F                     	;# 
  4261  0890                     	;# 
  4262  0891                     	;# 
  4263  0892                     	;# 
  4264  0893                     	;# 
  4265  0895                     	;# 
  4266  0896                     	;# 
  4267  0897                     	;# 
  4268  0898                     	;# 
  4269  0899                     	;# 
  4270  089A                     	;# 
  4271  089B                     	;# 
  4272  090C                     	;# 
  4273  090E                     	;# 
  4274  090F                     	;# 
  4275  091F                     	;# 
  4276  091F                     	;# 
  4277  098F                     	;# 
  4278  098F                     	;# 
  4279  0990                     	;# 
  4280  0991                     	;# 
  4281  0992                     	;# 
  4282  0993                     	;# 
  4283  0994                     	;# 
  4284  0995                     	;# 
  4285  0996                     	;# 
  4286  0997                     	;# 
  4287  0E0F                     	;# 
  4288  0E10                     	;# 
  4289  0E11                     	;# 
  4290  0E12                     	;# 
  4291  0E13                     	;# 
  4292  0E14                     	;# 
  4293  0E15                     	;# 
  4294  0E16                     	;# 
  4295  0E17                     	;# 
  4296  0E18                     	;# 
  4297  0E19                     	;# 
  4298  0E1A                     	;# 
  4299  0E1B                     	;# 
  4300  0E1C                     	;# 
  4301  0E1D                     	;# 
  4302  0E1E                     	;# 
  4303  0E1F                     	;# 
  4304  0E20                     	;# 
  4305  0E21                     	;# 
  4306  0E22                     	;# 
  4307  0E23                     	;# 
  4308  0E24                     	;# 
  4309  0E25                     	;# 
  4310  0E26                     	;# 
  4311  0E27                     	;# 
  4312  0E28                     	;# 
  4313  0E29                     	;# 
  4314  0E2A                     	;# 
  4315  0E2B                     	;# 
  4316  0E2C                     	;# 
  4317  0E2D                     	;# 
  4318  0E2E                     	;# 
  4319  0E2F                     	;# 
  4320  0E30                     	;# 
  4321  0E31                     	;# 
  4322  0E32                     	;# 
  4323  0E33                     	;# 
  4324  0E34                     	;# 
  4325  0E35                     	;# 
  4326  0E36                     	;# 
  4327  0E37                     	;# 
  4328  0E8F                     	;# 
  4329  0E90                     	;# 
  4330  0E91                     	;# 
  4331  0E92                     	;# 
  4332  0E93                     	;# 
  4333  0E94                     	;# 
  4334  0E95                     	;# 
  4335  0E96                     	;# 
  4336  0E97                     	;# 
  4337  0E9C                     	;# 
  4338  0E9D                     	;# 
  4339  0E9E                     	;# 
  4340  0EA1                     	;# 
  4341  0EA2                     	;# 
  4342  0EA3                     	;# 
  4343  0EA4                     	;# 
  4344  0EA5                     	;# 
  4345  0EA9                     	;# 
  4346  0EAA                     	;# 
  4347  0EAB                     	;# 
  4348  0EAC                     	;# 
  4349  0EB1                     	;# 
  4350  0EB2                     	;# 
  4351  0EB3                     	;# 
  4352  0EB8                     	;# 
  4353  0EB9                     	;# 
  4354  0EBA                     	;# 
  4355  0EBB                     	;# 
  4356  0EBC                     	;# 
  4357  0EBD                     	;# 
  4358  0EBE                     	;# 
  4359  0EC3                     	;# 
  4360  0EC5                     	;# 
  4361  0EC6                     	;# 
  4362  0EC7                     	;# 
  4363  0EC8                     	;# 
  4364  0EC9                     	;# 
  4365  0ECA                     	;# 
  4366  0ECB                     	;# 
  4367  0ECC                     	;# 
  4368  0F10                     	;# 
  4369  0F11                     	;# 
  4370  0F12                     	;# 
  4371  0F13                     	;# 
  4372  0F14                     	;# 
  4373  0F15                     	;# 
  4374  0F16                     	;# 
  4375  0F17                     	;# 
  4376  0F18                     	;# 
  4377  0F19                     	;# 
  4378  0F1A                     	;# 
  4379  0F1B                     	;# 
  4380  0F1C                     	;# 
  4381  0F1D                     	;# 
  4382  0F1E                     	;# 
  4383  0F1F                     	;# 
  4384  0F20                     	;# 
  4385  0F21                     	;# 
  4386  0F22                     	;# 
  4387  0F23                     	;# 
  4388  0F24                     	;# 
  4389  0F25                     	;# 
  4390  0F26                     	;# 
  4391  0F27                     	;# 
  4392  0F28                     	;# 
  4393  0F29                     	;# 
  4394  0F2A                     	;# 
  4395  0F2B                     	;# 
  4396  0F2C                     	;# 
  4397  0F2D                     	;# 
  4398  0F2E                     	;# 
  4399  0F2F                     	;# 
  4400  0F30                     	;# 
  4401  0F31                     	;# 
  4402  0F32                     	;# 
  4403  0F38                     	;# 
  4404  0F39                     	;# 
  4405  0F3A                     	;# 
  4406  0F3B                     	;# 
  4407  0F3C                     	;# 
  4408  0F3D                     	;# 
  4409  0F3E                     	;# 
  4410  0F3F                     	;# 
  4411  0F40                     	;# 
  4412  0F41                     	;# 
  4413  0F43                     	;# 
  4414  0F44                     	;# 
  4415  0F45                     	;# 
  4416  0F46                     	;# 
  4417  0F47                     	;# 
  4418  0F48                     	;# 
  4419  0F49                     	;# 
  4420  0F4A                     	;# 
  4421  0F4B                     	;# 
  4422  0F4C                     	;# 
  4423  0F4E                     	;# 
  4424  0F4F                     	;# 
  4425  0F50                     	;# 
  4426  0F51                     	;# 
  4427  0F52                     	;# 
  4428  0F53                     	;# 
  4429  0F54                     	;# 
  4430  0F55                     	;# 
  4431  0F56                     	;# 
  4432  0F57                     	;# 
  4433  0F59                     	;# 
  4434  0F5A                     	;# 
  4435  0F5B                     	;# 
  4436  0F5C                     	;# 
  4437  0F5D                     	;# 
  4438  0F61                     	;# 
  4439  0F62                     	;# 
  4440  0F64                     	;# 
  4441  0F65                     	;# 
  4442  0F66                     	;# 
  4443  0F67                     	;# 
  4444  0F68                     	;# 
  4445  0F69                     	;# 
  4446  0F6A                     	;# 
  4447  0F6B                     	;# 
  4448  0F6C                     	;# 
  4449  0F6D                     	;# 
  4450  0FE4                     	;# 
  4451  0FE5                     	;# 
  4452  0FE6                     	;# 
  4453  0FE7                     	;# 
  4454  0FE8                     	;# 
  4455  0FE9                     	;# 
  4456  0FEA                     	;# 
  4457  0FEB                     	;# 
  4458  0FED                     	;# 
  4459  0FEE                     	;# 
  4460  0FEF                     	;# 
  4461  0000                     	;# 
  4462  0001                     	;# 
  4463  0002                     	;# 
  4464  0003                     	;# 
  4465  0004                     	;# 
  4466  0005                     	;# 
  4467  0006                     	;# 
  4468  0007                     	;# 
  4469  0008                     	;# 
  4470  0009                     	;# 
  4471  000A                     	;# 
  4472  000B                     	;# 
  4473  000C                     	;# 
  4474  000D                     	;# 
  4475  000E                     	;# 
  4476  000F                     	;# 
  4477  0010                     	;# 
  4478  0011                     	;# 
  4479  0012                     	;# 
  4480  0013                     	;# 
  4481  0014                     	;# 
  4482  0015                     	;# 
  4483  0016                     	;# 
  4484  0017                     	;# 
  4485  0018                     	;# 
  4486  0019                     	;# 
  4487  001A                     	;# 
  4488  001C                     	;# 
  4489  001C                     	;# 
  4490  001D                     	;# 
  4491  001D                     	;# 
  4492  001E                     	;# 
  4493  001F                     	;# 
  4494  008C                     	;# 
  4495  008C                     	;# 
  4496  008D                     	;# 
  4497  008E                     	;# 
  4498  008E                     	;# 
  4499  008F                     	;# 
  4500  0090                     	;# 
  4501  0090                     	;# 
  4502  0091                     	;# 
  4503  0093                     	;# 
  4504  0094                     	;# 
  4505  0095                     	;# 
  4506  0096                     	;# 
  4507  0097                     	;# 
  4508  0098                     	;# 
  4509  0099                     	;# 
  4510  009A                     	;# 
  4511  009B                     	;# 
  4512  009C                     	;# 
  4513  009D                     	;# 
  4514  009E                     	;# 
  4515  010C                     	;# 
  4516  010D                     	;# 
  4517  010E                     	;# 
  4518  010E                     	;# 
  4519  010F                     	;# 
  4520  0110                     	;# 
  4521  0110                     	;# 
  4522  0111                     	;# 
  4523  0112                     	;# 
  4524  0112                     	;# 
  4525  0113                     	;# 
  4526  0114                     	;# 
  4527  0114                     	;# 
  4528  0115                     	;# 
  4529  0116                     	;# 
  4530  0116                     	;# 
  4531  0117                     	;# 
  4532  0119                     	;# 
  4533  0119                     	;# 
  4534  0119                     	;# 
  4535  011A                     	;# 
  4536  011A                     	;# 
  4537  011A                     	;# 
  4538  011B                     	;# 
  4539  011B                     	;# 
  4540  011B                     	;# 
  4541  011B                     	;# 
  4542  011B                     	;# 
  4543  011C                     	;# 
  4544  011C                     	;# 
  4545  011C                     	;# 
  4546  011D                     	;# 
  4547  011D                     	;# 
  4548  011D                     	;# 
  4549  011E                     	;# 
  4550  011E                     	;# 
  4551  011E                     	;# 
  4552  011F                     	;# 
  4553  011F                     	;# 
  4554  011F                     	;# 
  4555  011F                     	;# 
  4556  011F                     	;# 
  4557  018C                     	;# 
  4558  018D                     	;# 
  4559  018E                     	;# 
  4560  018F                     	;# 
  4561  0190                     	;# 
  4562  0191                     	;# 
  4563  0192                     	;# 
  4564  0196                     	;# 
  4565  0197                     	;# 
  4566  0198                     	;# 
  4567  0199                     	;# 
  4568  019A                     	;# 
  4569  019B                     	;# 
  4570  019C                     	;# 
  4571  020C                     	;# 
  4572  020C                     	;# 
  4573  020D                     	;# 
  4574  020E                     	;# 
  4575  020F                     	;# 
  4576  020F                     	;# 
  4577  0210                     	;# 
  4578  0210                     	;# 
  4579  0211                     	;# 
  4580  0211                     	;# 
  4581  0212                     	;# 
  4582  0212                     	;# 
  4583  0213                     	;# 
  4584  0214                     	;# 
  4585  0215                     	;# 
  4586  0215                     	;# 
  4587  0216                     	;# 
  4588  0216                     	;# 
  4589  0217                     	;# 
  4590  0217                     	;# 
  4591  0218                     	;# 
  4592  0218                     	;# 
  4593  0219                     	;# 
  4594  021A                     	;# 
  4595  021B                     	;# 
  4596  021B                     	;# 
  4597  021C                     	;# 
  4598  021C                     	;# 
  4599  021D                     	;# 
  4600  021D                     	;# 
  4601  021E                     	;# 
  4602  021F                     	;# 
  4603  028C                     	;# 
  4604  028C                     	;# 
  4605  028D                     	;# 
  4606  028D                     	;# 
  4607  028E                     	;# 
  4608  028F                     	;# 
  4609  0290                     	;# 
  4610  0290                     	;# 
  4611  0291                     	;# 
  4612  0292                     	;# 
  4613  0292                     	;# 
  4614  0293                     	;# 
  4615  0293                     	;# 
  4616  0294                     	;# 
  4617  0295                     	;# 
  4618  0296                     	;# 
  4619  0296                     	;# 
  4620  0297                     	;# 
  4621  0298                     	;# 
  4622  0298                     	;# 
  4623  0299                     	;# 
  4624  0299                     	;# 
  4625  029A                     	;# 
  4626  029B                     	;# 
  4627  029C                     	;# 
  4628  029C                     	;# 
  4629  029D                     	;# 
  4630  030C                     	;# 
  4631  030C                     	;# 
  4632  030D                     	;# 
  4633  030E                     	;# 
  4634  030F                     	;# 
  4635  0310                     	;# 
  4636  0310                     	;# 
  4637  0311                     	;# 
  4638  0312                     	;# 
  4639  0313                     	;# 
  4640  0314                     	;# 
  4641  0314                     	;# 
  4642  0315                     	;# 
  4643  0316                     	;# 
  4644  0317                     	;# 
  4645  0318                     	;# 
  4646  0318                     	;# 
  4647  0319                     	;# 
  4648  031A                     	;# 
  4649  031B                     	;# 
  4650  031C                     	;# 
  4651  031C                     	;# 
  4652  031D                     	;# 
  4653  031E                     	;# 
  4654  031F                     	;# 
  4655  038C                     	;# 
  4656  038C                     	;# 
  4657  038D                     	;# 
  4658  038E                     	;# 
  4659  0390                     	;# 
  4660  0390                     	;# 
  4661  0391                     	;# 
  4662  0392                     	;# 
  4663  040C                     	;# 
  4664  040D                     	;# 
  4665  040E                     	;# 
  4666  040F                     	;# 
  4667  0410                     	;# 
  4668  0411                     	;# 
  4669  0416                     	;# 
  4670  0416                     	;# 
  4671  0417                     	;# 
  4672  0418                     	;# 
  4673  0418                     	;# 
  4674  0419                     	;# 
  4675  041A                     	;# 
  4676  041A                     	;# 
  4677  041B                     	;# 
  4678  041C                     	;# 
  4679  041C                     	;# 
  4680  041D                     	;# 
  4681  041E                     	;# 
  4682  041F                     	;# 
  4683  048C                     	;# 
  4684  048C                     	;# 
  4685  048D                     	;# 
  4686  048E                     	;# 
  4687  048F                     	;# 
  4688  048F                     	;# 
  4689  0490                     	;# 
  4690  0491                     	;# 
  4691  0492                     	;# 
  4692  0492                     	;# 
  4693  0493                     	;# 
  4694  0494                     	;# 
  4695  0495                     	;# 
  4696  0495                     	;# 
  4697  0496                     	;# 
  4698  0497                     	;# 
  4699  0498                     	;# 
  4700  0499                     	;# 
  4701  049A                     	;# 
  4702  049B                     	;# 
  4703  049C                     	;# 
  4704  049D                     	;# 
  4705  050C                     	;# 
  4706  050C                     	;# 
  4707  050D                     	;# 
  4708  050E                     	;# 
  4709  050F                     	;# 
  4710  050F                     	;# 
  4711  0510                     	;# 
  4712  0511                     	;# 
  4713  0512                     	;# 
  4714  0512                     	;# 
  4715  0513                     	;# 
  4716  0514                     	;# 
  4717  0515                     	;# 
  4718  0515                     	;# 
  4719  0516                     	;# 
  4720  0517                     	;# 
  4721  0518                     	;# 
  4722  0519                     	;# 
  4723  051A                     	;# 
  4724  051B                     	;# 
  4725  051C                     	;# 
  4726  051D                     	;# 
  4727  058C                     	;# 
  4728  058C                     	;# 
  4729  058D                     	;# 
  4730  058E                     	;# 
  4731  058F                     	;# 
  4732  058F                     	;# 
  4733  0590                     	;# 
  4734  0591                     	;# 
  4735  0592                     	;# 
  4736  0593                     	;# 
  4737  060C                     	;# 
  4738  060D                     	;# 
  4739  060E                     	;# 
  4740  060F                     	;# 
  4741  0610                     	;# 
  4742  0611                     	;# 
  4743  0612                     	;# 
  4744  0613                     	;# 
  4745  0614                     	;# 
  4746  0616                     	;# 
  4747  0617                     	;# 
  4748  0618                     	;# 
  4749  0619                     	;# 
  4750  061A                     	;# 
  4751  061B                     	;# 
  4752  061C                     	;# 
  4753  061D                     	;# 
  4754  061E                     	;# 
  4755  068C                     	;# 
  4756  068D                     	;# 
  4757  068E                     	;# 
  4758  068F                     	;# 
  4759  0690                     	;# 
  4760  0691                     	;# 
  4761  0692                     	;# 
  4762  0693                     	;# 
  4763  0694                     	;# 
  4764  070C                     	;# 
  4765  070D                     	;# 
  4766  070E                     	;# 
  4767  070F                     	;# 
  4768  0710                     	;# 
  4769  0711                     	;# 
  4770  0712                     	;# 
  4771  0713                     	;# 
  4772  0714                     	;# 
  4773  0716                     	;# 
  4774  0717                     	;# 
  4775  0718                     	;# 
  4776  0719                     	;# 
  4777  071A                     	;# 
  4778  071B                     	;# 
  4779  071C                     	;# 
  4780  071D                     	;# 
  4781  071E                     	;# 
  4782  0796                     	;# 
  4783  0797                     	;# 
  4784  0798                     	;# 
  4785  0799                     	;# 
  4786  079A                     	;# 
  4787  079B                     	;# 
  4788  080C                     	;# 
  4789  080D                     	;# 
  4790  080E                     	;# 
  4791  080F                     	;# 
  4792  0810                     	;# 
  4793  0811                     	;# 
  4794  0812                     	;# 
  4795  0813                     	;# 
  4796  0814                     	;# 
  4797  081A                     	;# 
  4798  081B                     	;# 
  4799  081C                     	;# 
  4800  081D                     	;# 
  4801  081E                     	;# 
  4802  081F                     	;# 
  4803  088C                     	;# 
  4804  088D                     	;# 
  4805  088E                     	;# 
  4806  088F                     	;# 
  4807  0890                     	;# 
  4808  0891                     	;# 
  4809  0892                     	;# 
  4810  0893                     	;# 
  4811  0895                     	;# 
  4812  0896                     	;# 
  4813  0897                     	;# 
  4814  0898                     	;# 
  4815  0899                     	;# 
  4816  089A                     	;# 
  4817  089B                     	;# 
  4818  090C                     	;# 
  4819  090E                     	;# 
  4820  090F                     	;# 
  4821  091F                     	;# 
  4822  091F                     	;# 
  4823  098F                     	;# 
  4824  098F                     	;# 
  4825  0990                     	;# 
  4826  0991                     	;# 
  4827  0992                     	;# 
  4828  0993                     	;# 
  4829  0994                     	;# 
  4830  0995                     	;# 
  4831  0996                     	;# 
  4832  0997                     	;# 
  4833  0E0F                     	;# 
  4834  0E10                     	;# 
  4835  0E11                     	;# 
  4836  0E12                     	;# 
  4837  0E13                     	;# 
  4838  0E14                     	;# 
  4839  0E15                     	;# 
  4840  0E16                     	;# 
  4841  0E17                     	;# 
  4842  0E18                     	;# 
  4843  0E19                     	;# 
  4844  0E1A                     	;# 
  4845  0E1B                     	;# 
  4846  0E1C                     	;# 
  4847  0E1D                     	;# 
  4848  0E1E                     	;# 
  4849  0E1F                     	;# 
  4850  0E20                     	;# 
  4851  0E21                     	;# 
  4852  0E22                     	;# 
  4853  0E23                     	;# 
  4854  0E24                     	;# 
  4855  0E25                     	;# 
  4856  0E26                     	;# 
  4857  0E27                     	;# 
  4858  0E28                     	;# 
  4859  0E29                     	;# 
  4860  0E2A                     	;# 
  4861  0E2B                     	;# 
  4862  0E2C                     	;# 
  4863  0E2D                     	;# 
  4864  0E2E                     	;# 
  4865  0E2F                     	;# 
  4866  0E30                     	;# 
  4867  0E31                     	;# 
  4868  0E32                     	;# 
  4869  0E33                     	;# 
  4870  0E34                     	;# 
  4871  0E35                     	;# 
  4872  0E36                     	;# 
  4873  0E37                     	;# 
  4874  0E8F                     	;# 
  4875  0E90                     	;# 
  4876  0E91                     	;# 
  4877  0E92                     	;# 
  4878  0E93                     	;# 
  4879  0E94                     	;# 
  4880  0E95                     	;# 
  4881  0E96                     	;# 
  4882  0E97                     	;# 
  4883  0E9C                     	;# 
  4884  0E9D                     	;# 
  4885  0E9E                     	;# 
  4886  0EA1                     	;# 
  4887  0EA2                     	;# 
  4888  0EA3                     	;# 
  4889  0EA4                     	;# 
  4890  0EA5                     	;# 
  4891  0EA9                     	;# 
  4892  0EAA                     	;# 
  4893  0EAB                     	;# 
  4894  0EAC                     	;# 
  4895  0EB1                     	;# 
  4896  0EB2                     	;# 
  4897  0EB3                     	;# 
  4898  0EB8                     	;# 
  4899  0EB9                     	;# 
  4900  0EBA                     	;# 
  4901  0EBB                     	;# 
  4902  0EBC                     	;# 
  4903  0EBD                     	;# 
  4904  0EBE                     	;# 
  4905  0EC3                     	;# 
  4906  0EC5                     	;# 
  4907  0EC6                     	;# 
  4908  0EC7                     	;# 
  4909  0EC8                     	;# 
  4910  0EC9                     	;# 
  4911  0ECA                     	;# 
  4912  0ECB                     	;# 
  4913  0ECC                     	;# 
  4914  0F10                     	;# 
  4915  0F11                     	;# 
  4916  0F12                     	;# 
  4917  0F13                     	;# 
  4918  0F14                     	;# 
  4919  0F15                     	;# 
  4920  0F16                     	;# 
  4921  0F17                     	;# 
  4922  0F18                     	;# 
  4923  0F19                     	;# 
  4924  0F1A                     	;# 
  4925  0F1B                     	;# 
  4926  0F1C                     	;# 
  4927  0F1D                     	;# 
  4928  0F1E                     	;# 
  4929  0F1F                     	;# 
  4930  0F20                     	;# 
  4931  0F21                     	;# 
  4932  0F22                     	;# 
  4933  0F23                     	;# 
  4934  0F24                     	;# 
  4935  0F25                     	;# 
  4936  0F26                     	;# 
  4937  0F27                     	;# 
  4938  0F28                     	;# 
  4939  0F29                     	;# 
  4940  0F2A                     	;# 
  4941  0F2B                     	;# 
  4942  0F2C                     	;# 
  4943  0F2D                     	;# 
  4944  0F2E                     	;# 
  4945  0F2F                     	;# 
  4946  0F30                     	;# 
  4947  0F31                     	;# 
  4948  0F32                     	;# 
  4949  0F38                     	;# 
  4950  0F39                     	;# 
  4951  0F3A                     	;# 
  4952  0F3B                     	;# 
  4953  0F3C                     	;# 
  4954  0F3D                     	;# 
  4955  0F3E                     	;# 
  4956  0F3F                     	;# 
  4957  0F40                     	;# 
  4958  0F41                     	;# 
  4959  0F43                     	;# 
  4960  0F44                     	;# 
  4961  0F45                     	;# 
  4962  0F46                     	;# 
  4963  0F47                     	;# 
  4964  0F48                     	;# 
  4965  0F49                     	;# 
  4966  0F4A                     	;# 
  4967  0F4B                     	;# 
  4968  0F4C                     	;# 
  4969  0F4E                     	;# 
  4970  0F4F                     	;# 
  4971  0F50                     	;# 
  4972  0F51                     	;# 
  4973  0F52                     	;# 
  4974  0F53                     	;# 
  4975  0F54                     	;# 
  4976  0F55                     	;# 
  4977  0F56                     	;# 
  4978  0F57                     	;# 
  4979  0F59                     	;# 
  4980  0F5A                     	;# 
  4981  0F5B                     	;# 
  4982  0F5C                     	;# 
  4983  0F5D                     	;# 
  4984  0F61                     	;# 
  4985  0F62                     	;# 
  4986  0F64                     	;# 
  4987  0F65                     	;# 
  4988  0F66                     	;# 
  4989  0F67                     	;# 
  4990  0F68                     	;# 
  4991  0F69                     	;# 
  4992  0F6A                     	;# 
  4993  0F6B                     	;# 
  4994  0F6C                     	;# 
  4995  0F6D                     	;# 
  4996  0FE4                     	;# 
  4997  0FE5                     	;# 
  4998  0FE6                     	;# 
  4999  0FE7                     	;# 
  5000  0FE8                     	;# 
  5001  0FE9                     	;# 
  5002  0FEA                     	;# 
  5003  0FEB                     	;# 
  5004  0FED                     	;# 
  5005  0FEE                     	;# 
  5006  0FEF                     	;# 
  5007                           
  5008                           	psect	idataBANK0
  5009  0EE4                     __pidataBANK0:
  5010                           
  5011                           ;initializer for menuLCD_ISR@F12473
  5012  0EE4  3432               	retlw	50
  5013  0EE5  3430               	retlw	48
  5014  0EE6  3400               	retlw	0
  5015  0EE7  3400               	retlw	0
  5016                           
  5017                           ;initializer for menuLCD_ISR@F12477
  5018  0EE8  344C               	retlw	76
  5019  0EE9  3420               	retlw	32
  5020  0EEA  3400               	retlw	0
  5021                           
  5022                           	psect	stringtext1
  5023  100F                     __pstringtext1:
  5024  100F                     _dpowers:
  5025  100F  3401               	retlw	1
  5026  1010  3400               	retlw	0
  5027  1011  340A               	retlw	10
  5028  1012  3400               	retlw	0
  5029  1013  3464               	retlw	100
  5030  1014  3400               	retlw	0
  5031  1015  34E8               	retlw	232
  5032  1016  3403               	retlw	3
  5033  1017  3410               	retlw	16
  5034  1018  3427               	retlw	39
  5035  1019                     __end_of_dpowers:
  5036                           
  5037                           	psect	nvBANK0
  5038  0051                     __pnvBANK0:
  5039  0051                     _TMR3_InterruptHandler:
  5040  0051                     	ds	2
  5041  0053                     _timer3ReloadVal:
  5042  0053                     	ds	2
  5043  0055                     _TMR1_InterruptHandler:
  5044  0055                     	ds	2
  5045  0057                     _timer1ReloadVal:
  5046  0057                     	ds	2
  5047  000D                     _PORTBbits	set	13
  5048  0016                     _LATAbits	set	22
  5049  0013                     _TRISCbits	set	19
  5050  000B                     _INTCONbits	set	11
  5051  0014                     _TRISD	set	20
  5052  0013                     _TRISC	set	19
  5053  0012                     _TRISB	set	18
  5054  0011                     _TRISA	set	17
  5055  0015                     _TRISE	set	21
  5056  0018                     _LATC	set	24
  5057  0017                     _LATB	set	23
  5058  0016                     _LATA	set	22
  5059  0019                     _LATD	set	25
  5060  001A                     _LATE	set	26
  5061  018E                     _SSP1MSK	set	398
  5062  018D                     _SSP1ADD	set	397
  5063  018F                     _SSP1STAT	set	399
  5064  0191                     _SSP1CON2	set	401
  5065  0190                     _SSP1CON1bits	set	400
  5066  018C                     _SSP1BUF	set	396
  5067  018F                     _SSP1STATbits	set	399
  5068  0191                     _SSP1CON2bits	set	401
  5069  0190                     _SSP1CON1	set	400
  5070  0215                     _T3GCONbits	set	533
  5071  0214                     _T3CONbits	set	532
  5072  0214                     _T3CON	set	532
  5073  0212                     _TMR3L	set	530
  5074  0213                     _TMR3H	set	531
  5075  0217                     _T3CLK	set	535
  5076  0216                     _T3GATE	set	534
  5077  0215                     _T3GCON	set	533
  5078  020F                     _T1GCONbits	set	527
  5079  020E                     _T1CONbits	set	526
  5080  020E                     _T1CON	set	526
  5081  020C                     _TMR1L	set	524
  5082  020D                     _TMR1H	set	525
  5083  0211                     _T1CLK	set	529
  5084  0210                     _T1GATE	set	528
  5085  020F                     _T1GCON	set	527
  5086  0710                     _PIR4bits	set	1808
  5087  071A                     _PIE4bits	set	1818
  5088  0719                     _PIE3bits	set	1817
  5089  070F                     _PIR3bits	set	1807
  5090  079B                     _PMD5	set	1947
  5091  079A                     _PMD4	set	1946
  5092  0799                     _PMD3	set	1945
  5093  0798                     _PMD2	set	1944
  5094  0797                     _PMD1	set	1943
  5095  0796                     _PMD0	set	1942
  5096  0892                     _OSCTUNE	set	2194
  5097  0893                     _OSCFRQ	set	2195
  5098  0891                     _OSCEN	set	2193
  5099  088F                     _OSCCON3	set	2191
  5100  088D                     _OSCCON1	set	2189
  5101  0EC6                     _SSP1DATPPS	set	3782
  5102  0EC5                     _SSP1CLKPPS	set	3781
  5103  0F24                     _RC4PPS	set	3876
  5104  0F23                     _RC3PPS	set	3875
  5105  0F67                     _SLRCONE	set	3943
  5106  0F5C                     _SLRCOND	set	3932
  5107  0F51                     _SLRCONC	set	3921
  5108  0F46                     _SLRCONB	set	3910
  5109  0F3B                     _SLRCONA	set	3899
  5110  0F5B                     _ODCOND	set	3931
  5111  0F50                     _ODCONC	set	3920
  5112  0F45                     _ODCONB	set	3909
  5113  0F3A                     _ODCONA	set	3898
  5114  0F66                     _ODCONE	set	3942
  5115  0F4F                     _WPUC	set	3919
  5116  0F39                     _WPUA	set	3897
  5117  0F44                     _WPUB	set	3908
  5118  0F65                     _WPUE	set	3941
  5119  0F5A                     _WPUD	set	3930
  5120  0F38                     _ANSELA	set	3896
  5121  0F64                     _ANSELE	set	3940
  5122  0F43                     _ANSELB	set	3907
  5123  0F4E                     _ANSELC	set	3918
  5124  0F59                     _ANSELD	set	3929
  5125  7A7C                     _WPUC4	set	31356
  5126  7A7B                     _WPUC3	set	31355
  5127                           
  5128                           	psect	stringtext2
  5129  1000                     __pstringtext2:
  5130  1000                     STR_1:
  5131  1000  3425               	retlw	37	;'%'
  5132  1001  3430               	retlw	48	;'0'
  5133  1002  3432               	retlw	50	;'2'
  5134  1003  3464               	retlw	100	;'d'
  5135  1004  343A               	retlw	58	;':'
  5136  1005  3425               	retlw	37	;'%'
  5137  1006  3430               	retlw	48	;'0'
  5138  1007  3432               	retlw	50	;'2'
  5139  1008  3464               	retlw	100	;'d'
  5140  1009  343A               	retlw	58	;':'
  5141  100A  3425               	retlw	37	;'%'
  5142  100B  3430               	retlw	48	;'0'
  5143  100C  3432               	retlw	50	;'2'
  5144  100D  3464               	retlw	100	;'d'
  5145  100E  3400               	retlw	0
  5146                           
  5147                           	psect	stringtext3
  5148  1019                     __pstringtext3:
  5149  1019                     STR_2:
  5150  1019  3443               	retlw	67	;'C'
  5151  101A  3454               	retlw	84	;'T'
  5152  101B  344C               	retlw	76	;'L'
  5153  101C  3420               	retlw	32	;' '
  5154  101D  343F               	retlw	63	;'?'
  5155  101E  3400               	retlw	0
  5156                           
  5157                           	psect	stringtext4
  5158  101F                     __pstringtext4:
  5159  101F                     STR_3:
  5160  101F  3420               	retlw	32	;' '
  5161  1020  3443               	retlw	67	;'C'
  5162  1021  3400               	retlw	0
  5163                           
  5164                           	psect	stringtext5
  5165  1022                     __pstringtext5:
  5166  1022                     STR_4:
  5167  1022  3425               	retlw	37	;'%'
  5168  1023  3464               	retlw	100	;'d'
  5169  1024  3400               	retlw	0
  5170                           
  5171                           	psect	stringtext6
  5172  0000                     __pstringtext6:
  5173                           
  5174                           	psect	cinit
  5175  0036                     start_initialization:	
  5176                           ; #config settings
  5177                           
  5178  0036                     __initialization:
  5179                           
  5180                           ; Initialize objects allocated to BANK0
  5181  0036  30E4               	movlw	low __pidataBANK0
  5182  0037  0084               	movwf	4
  5183  0038  308E               	movlw	(high __pidataBANK0)| (0+128)
  5184  0039  0085               	movwf	5
  5185  003A  3059               	movlw	low __pdataBANK0
  5186  003B  0086               	movwf	6
  5187  003C  3000               	movlw	high __pdataBANK0
  5188  003D  0087               	movwf	7
  5189  003E  3007               	movlw	7
  5190  003F  318E  26D7  3180   	fcall	init_ram
  5191                           
  5192                           ; Clear objects allocated to BANK0
  5193  0042  01C7               	clrf	__pbssBANK0& (0+127)
  5194  0043  01C8               	clrf	(__pbssBANK0+1)& (0+127)
  5195  0044  01C9               	clrf	(__pbssBANK0+2)& (0+127)
  5196  0045  01CA               	clrf	(__pbssBANK0+3)& (0+127)
  5197  0046  01CB               	clrf	(__pbssBANK0+4)& (0+127)
  5198  0047  01CC               	clrf	(__pbssBANK0+5)& (0+127)
  5199  0048  01CD               	clrf	(__pbssBANK0+6)& (0+127)
  5200  0049  01CE               	clrf	(__pbssBANK0+7)& (0+127)
  5201  004A  01CF               	clrf	(__pbssBANK0+8)& (0+127)
  5202  004B  01D0               	clrf	(__pbssBANK0+9)& (0+127)
  5203  004C                     end_of_initialization:	
  5204                           ;End of C runtime variable initialization code
  5205                           
  5206  004C                     __end_of__initialization:
  5207  004C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5208  004D  0020               	movlb	0
  5209  004E  3184  2C21         	ljmp	_main	;jump to C main() function
  5210                           
  5211                           	psect	bssBANK0
  5212  0047                     __pbssBANK0:
  5213  0047                     _t:
  5214  0047                     	ds	6
  5215  004D                     _i2c1_driver_i2cISR:
  5216  004D                     	ds	2
  5217  004F                     _i2c1_driver_busCollisionISR:
  5218  004F                     	ds	2
  5219                           
  5220                           	psect	dataBANK0
  5221  0059                     __pdataBANK0:
  5222  0059                     menuLCD_ISR@F12473:
  5223  0059                     	ds	4
  5224  005D                     menuLCD_ISR@F12477:
  5225  005D                     	ds	3
  5226                           
  5227                           	psect	inittext
  5228  0ED7                     init_ram:
  5229  0ED7  00FE               	movwf	btemp
  5230  0ED8                     initloop:
  5231  0ED8  0012               	moviw fsr0++
  5232  0ED9  001E               	movwi fsr1++
  5233  0EDA  0BFE               	decfsz	btemp,f
  5234  0EDB  2ED8               	goto	initloop
  5235  0EDC  3400               	retlw	0
  5236                           
  5237                           	psect	cstackBANK1
  5238  00A0                     __pcstackBANK1:
  5239  00A0                     ??_PMD_Initialize:
  5240  00A0                     ??_OSCILLATOR_Initialize:	
  5241                           ; 1 bytes @ 0x0
  5242                           
  5243  00A0                     ?_TMR1_SetInterruptHandler:	
  5244                           ; 1 bytes @ 0x0
  5245                           
  5246  00A0                     ?_TMR3_SetInterruptHandler:	
  5247                           ; 1 bytes @ 0x0
  5248                           
  5249  00A0                     ??_WriteI2C:	
  5250                           ; 1 bytes @ 0x0
  5251                           
  5252  00A0                     ??_PIN_MANAGER_Initialize:	
  5253                           ; 1 bytes @ 0x0
  5254                           
  5255  00A0                     ??_i2c1_driver_open:	
  5256                           ; 1 bytes @ 0x0
  5257                           
  5258  00A0                     ?___xxtofl:	
  5259                           ; 1 bytes @ 0x0
  5260                           
  5261  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  5262                           ; 4 bytes @ 0x0
  5263                           
  5264  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  5265                           ; 2 bytes @ 0x0
  5266                           
  5267  00A0                     ___xxtofl@val:	
  5268                           ; 2 bytes @ 0x0
  5269                           
  5270                           
  5271                           ; 4 bytes @ 0x0
  5272  00A0                     	ds	1
  5273  00A1                     WriteI2C@data_out:
  5274                           
  5275                           ; 1 bytes @ 0x1
  5276  00A1                     	ds	1
  5277  00A2                     ??_TMR3_Initialize:
  5278  00A2                     ??_TMR1_Initialize:	
  5279                           ; 1 bytes @ 0x2
  5280                           
  5281  00A2                     ??_TMR1_SetInterruptHandler:	
  5282                           ; 1 bytes @ 0x2
  5283                           
  5284  00A2                     ??_TMR3_SetInterruptHandler:	
  5285                           ; 1 bytes @ 0x2
  5286                           
  5287  00A2                     ??_SYSTEM_Initialize:	
  5288                           ; 1 bytes @ 0x2
  5289                           
  5290  00A2                     ??_LCDsend:	
  5291                           ; 1 bytes @ 0x2
  5292                           
  5293  00A2                     ?_LCDsend2x4:	
  5294                           ; 1 bytes @ 0x2
  5295                           
  5296  00A2                     LCDsend2x4@mode:	
  5297                           ; 1 bytes @ 0x2
  5298                           
  5299                           
  5300                           ; 1 bytes @ 0x2
  5301  00A2                     	ds	1
  5302  00A3                     ??_LCDsend2x4:
  5303  00A3                     LCDsend@c:	
  5304                           ; 1 bytes @ 0x3
  5305                           
  5306                           
  5307                           ; 1 bytes @ 0x3
  5308  00A3                     	ds	1
  5309  00A4                     ??___xxtofl:
  5310                           
  5311                           ; 1 bytes @ 0x4
  5312  00A4                     	ds	1
  5313  00A5                     LCDsend2x4@c:
  5314                           
  5315                           ; 1 bytes @ 0x5
  5316  00A5                     	ds	1
  5317  00A6                     LCDsend2x4@hc:
  5318                           
  5319                           ; 1 bytes @ 0x6
  5320  00A6                     	ds	1
  5321  00A7                     LCDsend2x4@lc:
  5322                           
  5323                           ; 1 bytes @ 0x7
  5324  00A7                     	ds	1
  5325  00A8                     ??_LCDinit:
  5326  00A8                     ___xxtofl@sign:	
  5327                           ; 1 bytes @ 0x8
  5328                           
  5329                           
  5330                           ; 1 bytes @ 0x8
  5331  00A8                     	ds	1
  5332  00A9                     ___xxtofl@exp:
  5333                           
  5334                           ; 1 bytes @ 0x9
  5335  00A9                     	ds	1
  5336  00AA                     ___xxtofl@arg:
  5337                           
  5338                           ; 4 bytes @ 0xA
  5339  00AA                     	ds	4
  5340  00AE                     ?___fleq:
  5341  00AE                     ___fleq@ff1:	
  5342                           ; 1 bit 
  5343                           
  5344                           
  5345                           ; 4 bytes @ 0xE
  5346  00AE                     	ds	4
  5347  00B2                     ___fleq@ff2:
  5348                           
  5349                           ; 4 bytes @ 0x12
  5350  00B2                     	ds	4
  5351  00B6                     ??___fleq:
  5352                           
  5353                           ; 1 bytes @ 0x16
  5354  00B6                     	ds	4
  5355  00BA                     ??_main:
  5356                           
  5357                           ; 1 bytes @ 0x1A
  5358  00BA                     	ds	4
  5359  00BE                     main@aux:
  5360                           
  5361                           ; 4 bytes @ 0x1E
  5362  00BE                     	ds	4
  5363  00C2                     main@a:
  5364                           
  5365                           ; 2 bytes @ 0x22
  5366  00C2                     	ds	2
  5367                           
  5368                           	psect	cstackCOMMON
  5369  0070                     __pcstackCOMMON:
  5370  0070                     ?_isdigit:
  5371  0070                     ?_i2c1_driver_open:	
  5372                           ; 1 bit 
  5373                           
  5374  0070                     ?_PMD_Initialize:	
  5375                           ; 1 bit 
  5376                           
  5377  0070                     ?_OSCILLATOR_Initialize:	
  5378                           ; 1 bytes @ 0x0
  5379                           
  5380  0070                     ?_TMR3_Initialize:	
  5381                           ; 1 bytes @ 0x0
  5382                           
  5383  0070                     ?_TMR1_Initialize:	
  5384                           ; 1 bytes @ 0x0
  5385                           
  5386  0070                     ?_TMR3_ISR:	
  5387                           ; 1 bytes @ 0x0
  5388                           
  5389  0070                     ?_TMR1_ISR:	
  5390                           ; 1 bytes @ 0x0
  5391                           
  5392  0070                     ?_strcat:	
  5393                           ; 1 bytes @ 0x0
  5394                           
  5395  0070                     ?_TMR1_DefaultInterruptHandler:	
  5396                           ; 1 bytes @ 0x0
  5397                           
  5398  0070                     ??_TMR1_DefaultInterruptHandler:	
  5399                           ; 1 bytes @ 0x0
  5400                           
  5401  0070                     ?_TMR3_DefaultInterruptHandler:	
  5402                           ; 1 bytes @ 0x0
  5403                           
  5404  0070                     ??_TMR3_DefaultInterruptHandler:	
  5405                           ; 1 bytes @ 0x0
  5406                           
  5407  0070                     ??_isdigit:	
  5408                           ; 1 bytes @ 0x0
  5409                           
  5410  0070                     ?_WriteI2C:	
  5411                           ; 1 bytes @ 0x0
  5412                           
  5413  0070                     ?_PIN_MANAGER_Initialize:	
  5414                           ; 1 bytes @ 0x0
  5415                           
  5416  0070                     ?_SYSTEM_Initialize:	
  5417                           ; 1 bytes @ 0x0
  5418                           
  5419  0070                     ?_INTERRUPT_InterruptManager:	
  5420                           ; 1 bytes @ 0x0
  5421                           
  5422  0070                     ?_LCDsend:	
  5423                           ; 1 bytes @ 0x0
  5424                           
  5425  0070                     ?_LCDinit:	
  5426                           ; 1 bytes @ 0x0
  5427                           
  5428  0070                     ?_LCDcmd:	
  5429                           ; 1 bytes @ 0x0
  5430                           
  5431  0070                     ?_LCDchar:	
  5432                           ; 1 bytes @ 0x0
  5433                           
  5434  0070                     ?_Clock_ISR:	
  5435                           ; 1 bytes @ 0x0
  5436                           
  5437  0070                     ??_Clock_ISR:	
  5438                           ; 1 bytes @ 0x0
  5439                           
  5440  0070                     ?_menuLCD_ISR:	
  5441                           ; 1 bytes @ 0x0
  5442                           
  5443  0070                     ?_main:	
  5444                           ; 1 bytes @ 0x0
  5445                           
  5446  0070                     ?_TMR1_WriteTimer:	
  5447                           ; 1 bytes @ 0x0
  5448                           
  5449  0070                     ?_TMR3_WriteTimer:	
  5450                           ; 1 bytes @ 0x0
  5451                           
  5452  0070                     ?i1_WriteI2C:	
  5453                           ; 1 bytes @ 0x0
  5454                           
  5455  0070                     ??i1_WriteI2C:	
  5456                           ; 1 bytes @ 0x0
  5457                           
  5458  0070                     ?___wmul:	
  5459                           ; 1 bytes @ 0x0
  5460                           
  5461  0070                     ?___lwdiv:	
  5462                           ; 2 bytes @ 0x0
  5463                           
  5464  0070                     _isdigit$1992:	
  5465                           ; 2 bytes @ 0x0
  5466                           
  5467  0070                     TMR1_WriteTimer@timerVal:	
  5468                           ; 1 bytes @ 0x0
  5469                           
  5470  0070                     TMR3_WriteTimer@timerVal:	
  5471                           ; 2 bytes @ 0x0
  5472                           
  5473  0070                     ___wmul@multiplier:	
  5474                           ; 2 bytes @ 0x0
  5475                           
  5476  0070                     ___lwdiv@divisor:	
  5477                           ; 2 bytes @ 0x0
  5478                           
  5479  0070                     strcat@from:	
  5480                           ; 2 bytes @ 0x0
  5481                           
  5482                           
  5483                           ; 2 bytes @ 0x0
  5484  0070                     	ds	1
  5485  0071                     isdigit@c:
  5486  0071                     i1WriteI2C@data_out:	
  5487                           ; 1 bytes @ 0x1
  5488                           
  5489                           
  5490                           ; 1 bytes @ 0x1
  5491  0071                     	ds	1
  5492  0072                     ??_TMR1_ISR:
  5493  0072                     ??_strcat:	
  5494                           ; 1 bytes @ 0x2
  5495                           
  5496  0072                     ??_TMR1_WriteTimer:	
  5497                           ; 1 bytes @ 0x2
  5498                           
  5499  0072                     ??_TMR3_WriteTimer:	
  5500                           ; 1 bytes @ 0x2
  5501                           
  5502  0072                     ?i1_LCDsend2x4:	
  5503                           ; 1 bytes @ 0x2
  5504                           
  5505  0072                     i1LCDsend2x4@mode:	
  5506                           ; 1 bytes @ 0x2
  5507                           
  5508  0072                     ___wmul@multiplicand:	
  5509                           ; 1 bytes @ 0x2
  5510                           
  5511  0072                     ___lwdiv@dividend:	
  5512                           ; 2 bytes @ 0x2
  5513                           
  5514                           
  5515                           ; 2 bytes @ 0x2
  5516  0072                     	ds	1
  5517  0073                     ??i1_LCDsend2x4:
  5518  0073                     strcat@to:	
  5519                           ; 1 bytes @ 0x3
  5520                           
  5521                           
  5522                           ; 1 bytes @ 0x3
  5523  0073                     	ds	1
  5524  0074                     ??___wmul:
  5525  0074                     ??___lwdiv:	
  5526                           ; 1 bytes @ 0x4
  5527                           
  5528  0074                     strcat@cp:	
  5529                           ; 1 bytes @ 0x4
  5530                           
  5531  0074                     ___wmul@product:	
  5532                           ; 1 bytes @ 0x4
  5533                           
  5534                           
  5535                           ; 2 bytes @ 0x4
  5536  0074                     	ds	1
  5537  0075                     i1LCDsend2x4@c:
  5538  0075                     ___lwdiv@quotient:	
  5539                           ; 1 bytes @ 0x5
  5540                           
  5541                           
  5542                           ; 2 bytes @ 0x5
  5543  0075                     	ds	1
  5544  0076                     i1LCDsend2x4@hc:
  5545                           
  5546                           ; 1 bytes @ 0x6
  5547  0076                     	ds	1
  5548  0077                     ___lwdiv@counter:
  5549  0077                     i1LCDsend2x4@lc:	
  5550                           ; 1 bytes @ 0x7
  5551                           
  5552                           
  5553                           ; 1 bytes @ 0x7
  5554  0077                     	ds	1
  5555  0078                     ??_LCDcmd:
  5556  0078                     ??_LCDchar:	
  5557                           ; 1 bytes @ 0x8
  5558                           
  5559  0078                     ?___lwmod:	
  5560                           ; 1 bytes @ 0x8
  5561                           
  5562  0078                     LCDcmd@c:	
  5563                           ; 2 bytes @ 0x8
  5564                           
  5565  0078                     LCDchar@c:	
  5566                           ; 1 bytes @ 0x8
  5567                           
  5568  0078                     ___lwmod@divisor:	
  5569                           ; 1 bytes @ 0x8
  5570                           
  5571                           
  5572                           ; 2 bytes @ 0x8
  5573  0078                     	ds	1
  5574  0079                     ?_LCDstr:
  5575  0079                     LCDstr@p:	
  5576                           ; 1 bytes @ 0x9
  5577                           
  5578                           
  5579                           ; 2 bytes @ 0x9
  5580  0079                     	ds	1
  5581  007A                     ___lwmod@dividend:
  5582                           
  5583                           ; 2 bytes @ 0xA
  5584  007A                     	ds	1
  5585  007B                     ??_LCDstr:
  5586                           
  5587                           ; 1 bytes @ 0xB
  5588  007B                     	ds	1
  5589  007C                     ??___lwmod:
  5590                           
  5591                           ; 1 bytes @ 0xC
  5592  007C                     	ds	1
  5593  007D                     ___lwmod@counter:
  5594                           
  5595                           ; 1 bytes @ 0xD
  5596  007D                     	ds	1
  5597  007E                     ??_TMR3_ISR:
  5598  007E                     ??_INTERRUPT_InterruptManager:	
  5599                           ; 1 bytes @ 0xE
  5600                           
  5601  007E                     ??_menuLCD_ISR:	
  5602                           ; 1 bytes @ 0xE
  5603                           
  5604                           
  5605                           	psect	cstackBANK0
  5606  0020                     __pcstackBANK0:	
  5607                           ; 1 bytes @ 0xE
  5608                           
  5609  0020                     ?_sprintf:
  5610  0020                     LCDstr@c:	
  5611                           ; 2 bytes @ 0x0
  5612                           
  5613  0020                     sprintf@f:	
  5614                           ; 1 bytes @ 0x0
  5615                           
  5616                           
  5617                           ; 2 bytes @ 0x0
  5618  0020                     	ds	8
  5619  0028                     ??_sprintf:
  5620                           
  5621                           ; 1 bytes @ 0x8
  5622  0028                     	ds	4
  5623  002C                     sprintf@ap:
  5624                           
  5625                           ; 1 bytes @ 0xC
  5626  002C                     	ds	1
  5627  002D                     sprintf@prec:
  5628                           
  5629                           ; 1 bytes @ 0xD
  5630  002D                     	ds	1
  5631  002E                     sprintf@val:
  5632                           
  5633                           ; 2 bytes @ 0xE
  5634  002E                     	ds	2
  5635  0030                     sprintf@flag:
  5636                           
  5637                           ; 1 bytes @ 0x10
  5638  0030                     	ds	1
  5639  0031                     sprintf@width:
  5640                           
  5641                           ; 2 bytes @ 0x11
  5642  0031                     	ds	2
  5643  0033                     sprintf@sp:
  5644                           
  5645                           ; 1 bytes @ 0x13
  5646  0033                     	ds	1
  5647  0034                     sprintf@c:
  5648                           
  5649                           ; 1 bytes @ 0x14
  5650  0034                     	ds	1
  5651  0035                     menuLCD_ISR@str:
  5652                           
  5653                           ; 8 bytes @ 0x15
  5654  0035                     	ds	8
  5655  003D                     menuLCD_ISR@tt:
  5656                           
  5657                           ; 4 bytes @ 0x1D
  5658  003D                     	ds	4
  5659  0041                     menuLCD_ISR@ll:
  5660                           
  5661                           ; 3 bytes @ 0x21
  5662  0041                     	ds	5
  5663  0046                     menuLCD_ISR@l:
  5664                           
  5665                           ; 1 bytes @ 0x26
  5666  0046                     	ds	1
  5667                           
  5668                           	psect	maintext
  5669  0421                     __pmaintext:	
  5670 ;;
  5671 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5672 ;;
  5673 ;; *************** function _main *****************
  5674 ;; Defined at:
  5675 ;;		line 262 in file "main.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;		None
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;  buf            17    0        unsigned char [17]
  5680 ;;  aux             4   30[BANK1 ] float 
  5681 ;;  a               2   34[BANK1 ] int 
  5682 ;;  c2              1    0        unsigned char 
  5683 ;;  c1              1    0        unsigned char 
  5684 ;;  lc              1    0        unsigned char 
  5685 ;;  hc              1    0        unsigned char 
  5686 ;;  c               1    0        unsigned char 
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  1    wreg      void 
  5689 ;; Registers used:
  5690 ;;		wreg, status,2, status,0, pclath, cstack
  5691 ;; Tracked objects:
  5692 ;;		On entry : B1F/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5698 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5700 ;;Total ram usage:       10 bytes
  5701 ;; Hardware stack levels required when called:   10
  5702 ;; This function calls:
  5703 ;;		_LCDinit
  5704 ;;		_SYSTEM_Initialize
  5705 ;;		_TMR1_SetInterruptHandler
  5706 ;;		_TMR3_SetInterruptHandler
  5707 ;;		___fleq
  5708 ;;		___xxtofl
  5709 ;;		_i2c1_driver_open
  5710 ;; This function is called by:
  5711 ;;		Startup code after reset
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           
  5716                           ;psect for function _main
  5717  0421                     _main:
  5718  0421                     l3683:	
  5719                           ;incstack = 0
  5720                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  5721                           
  5722                           
  5723                           ;main.c: 264: unsigned char c;;main.c: 265: unsigned char hc;;main.c: 266: unsigned char
      +                           lc;;main.c: 267: unsigned char c1;;main.c: 268: unsigned char c2;;main.c: 269: unsigned
      +                           char buf[17];;main.c: 272: SYSTEM_Initialize();
  5724  0421  318F  2716  3184   	fcall	_SYSTEM_Initialize
  5725                           
  5726                           ;main.c: 274: TMR1_SetInterruptHandler(Clock_ISR);
  5727  0424  30C9               	movlw	low _Clock_ISR
  5728  0425  0021               	movlb	1	; select bank1
  5729  0426  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  5730  0427  3007               	movlw	high _Clock_ISR
  5731  0428  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5732  0429  318F  2704  3184   	fcall	_TMR1_SetInterruptHandler
  5733                           
  5734                           ;main.c: 276: TMR3_SetInterruptHandler(menuLCD_ISR);
  5735  042C  303A               	movlw	low _menuLCD_ISR
  5736  042D  0021               	movlb	1	; select bank1
  5737  042E  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  5738  042F  3005               	movlw	high _menuLCD_ISR
  5739  0430  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5740  0431  318F  270D  3184   	fcall	_TMR3_SetInterruptHandler
  5741                           
  5742                           ;main.c: 278: i2c1_driver_open();
  5743  0434  3187  27F2  3184   	fcall	_i2c1_driver_open
  5744  0437                     l3685:
  5745                           
  5746                           ;main.c: 279: TRISCbits.TRISC3 = 1;
  5747  0437  0020               	movlb	0	; select bank0
  5748  0438  1593               	bsf	19,3	;volatile
  5749  0439                     l3687:
  5750                           
  5751                           ;main.c: 280: TRISCbits.TRISC4 = 1;
  5752  0439  1613               	bsf	19,4	;volatile
  5753  043A                     l3689:
  5754                           
  5755                           ;main.c: 281: WPUC3 = 1;
  5756  043A  003E               	movlb	30	; select bank30
  5757  043B  15CF               	bsf	79,3	;volatile
  5758  043C                     l3691:
  5759                           
  5760                           ;main.c: 282: WPUC4 = 1;
  5761  043C  164F               	bsf	79,4	;volatile
  5762                           
  5763                           ;main.c: 283: LCDinit();
  5764  043D  3184  24C4  3184   	fcall	_LCDinit
  5765  0440                     l3693:
  5766                           
  5767                           ;main.c: 286: (INTCONbits.GIE = 1);
  5768  0440  178B               	bsf	11,7	;volatile
  5769  0441                     l3695:
  5770                           
  5771                           ;main.c: 289: (INTCONbits.PEIE = 1);
  5772  0441  170B               	bsf	11,6	;volatile
  5773  0442                     l3697:
  5774  0442  0020               	movlb	0	; select bank0
  5775  0443  1616               	bsf	22,4	;volatile
  5776  0444                     l637:
  5777                           
  5778                           ;main.c: 292: float aux = PORTBbits.RB4;
  5779  0444  0E0D               	swapf	13,w	;volatile
  5780  0445  3901               	andlw	1
  5781  0446  0021               	movlb	1	; select bank1
  5782  0447  00BA               	movwf	??_main^(0+128)
  5783  0448  01BB               	clrf	(??_main^(0+128)+1)
  5784  0449  01BC               	clrf	(??_main^(0+128)+2)
  5785  044A  01BD               	clrf	(??_main^(0+128)+3)
  5786  044B  083D               	movf	(??_main+3)^(0+128),w
  5787  044C  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  5788  044D  083C               	movf	(??_main+2)^(0+128),w
  5789  044E  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  5790  044F  083B               	movf	(??_main+1)^(0+128),w
  5791  0450  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  5792  0451  083A               	movf	??_main^(0+128),w
  5793  0452  00A0               	movwf	___xxtofl@val^(0+128)
  5794  0453  3000               	movlw	0
  5795  0454  3183  2374  3184   	fcall	___xxtofl
  5796  0457  0021               	movlb	1	; select bank1
  5797  0458  0823               	movf	(?___xxtofl+3)^(0+128),w
  5798  0459  00C1               	movwf	(main@aux+3)^(0+128)
  5799  045A  0822               	movf	(?___xxtofl+2)^(0+128),w
  5800  045B  00C0               	movwf	(main@aux+2)^(0+128)
  5801  045C  0821               	movf	(?___xxtofl+1)^(0+128),w
  5802  045D  00BF               	movwf	(main@aux+1)^(0+128)
  5803  045E  0820               	movf	?___xxtofl^(0+128),w
  5804  045F  00BE               	movwf	main@aux^(0+128)
  5805  0460                     l3699:
  5806                           
  5807                           ;main.c: 293: int a = 1;
  5808  0460  3001               	movlw	1
  5809  0461  00C2               	movwf	main@a^(0+128)
  5810  0462  3000               	movlw	0
  5811  0463  00C3               	movwf	(main@a^(0+128)+1)
  5812  0464                     l3701:
  5813                           
  5814                           ;main.c: 296: {;main.c: 297: if(PORTBbits.RB4 != aux){
  5815  0464  0020               	movlb	0	; select bank0
  5816  0465  0E0D               	swapf	13,w	;volatile
  5817  0466  3901               	andlw	1
  5818  0467  0021               	movlb	1	; select bank1
  5819  0468  00BA               	movwf	??_main^(0+128)
  5820  0469  01BB               	clrf	(??_main^(0+128)+1)
  5821  046A  01BC               	clrf	(??_main^(0+128)+2)
  5822  046B  01BD               	clrf	(??_main^(0+128)+3)
  5823  046C  083D               	movf	(??_main+3)^(0+128),w
  5824  046D  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  5825  046E  083C               	movf	(??_main+2)^(0+128),w
  5826  046F  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  5827  0470  083B               	movf	(??_main+1)^(0+128),w
  5828  0471  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  5829  0472  083A               	movf	??_main^(0+128),w
  5830  0473  00A0               	movwf	___xxtofl@val^(0+128)
  5831  0474  3000               	movlw	0
  5832  0475  3183  2374  3184   	fcall	___xxtofl
  5833  0478  0021               	movlb	1	; select bank1
  5834  0479  0823               	movf	(?___xxtofl+3)^(0+128),w
  5835  047A  00B1               	movwf	(___fleq@ff1+3)^(0+128)
  5836  047B  0822               	movf	(?___xxtofl+2)^(0+128),w
  5837  047C  00B0               	movwf	(___fleq@ff1+2)^(0+128)
  5838  047D  0821               	movf	(?___xxtofl+1)^(0+128),w
  5839  047E  00AF               	movwf	(___fleq@ff1+1)^(0+128)
  5840  047F  0820               	movf	?___xxtofl^(0+128),w
  5841  0480  00AE               	movwf	___fleq@ff1^(0+128)
  5842  0481  0841               	movf	(main@aux+3)^(0+128),w
  5843  0482  00B5               	movwf	(___fleq@ff2+3)^(0+128)
  5844  0483  0840               	movf	(main@aux+2)^(0+128),w
  5845  0484  00B4               	movwf	(___fleq@ff2+2)^(0+128)
  5846  0485  083F               	movf	(main@aux+1)^(0+128),w
  5847  0486  00B3               	movwf	(___fleq@ff2+1)^(0+128)
  5848  0487  083E               	movf	main@aux^(0+128),w
  5849  0488  00B2               	movwf	___fleq@ff2^(0+128)
  5850  0489  3186  265A  3184   	fcall	___fleq
  5851  048C  1803               	btfsc	3,0
  5852  048D  2C8F               	goto	u4371
  5853  048E  2C90               	goto	u4370
  5854  048F                     u4371:
  5855  048F  2C64               	goto	l3701
  5856  0490                     u4370:
  5857  0490                     l3703:
  5858                           
  5859                           ;main.c: 298: if(a==1){
  5860  0490  0021               	movlb	1	; select bank1
  5861  0491  0342               	decf	main@a^(0+128),w
  5862  0492  0443               	iorwf	(main@a+1)^(0+128),w
  5863  0493  1D03               	btfss	3,2
  5864  0494  2C96               	goto	u4381
  5865  0495  2C97               	goto	u4380
  5866  0496                     u4381:
  5867  0496  2C9D               	goto	l644
  5868  0497                     u4380:
  5869  0497                     l641:	
  5870                           ;main.c: 299: do { LATAbits.LATA4 = 0; } while(0);
  5871                           
  5872  0497  0020               	movlb	0	; select bank0
  5873  0498  1216               	bcf	22,4	;volatile
  5874  0499                     l3705:
  5875                           
  5876                           ;main.c: 300: a=0;
  5877  0499  0021               	movlb	1	; select bank1
  5878  049A  01C2               	clrf	main@a^(0+128)
  5879  049B  01C3               	clrf	(main@a+1)^(0+128)
  5880                           
  5881                           ;main.c: 301: } else{
  5882  049C  2CA4               	goto	l3709
  5883  049D                     l644:	
  5884                           ;main.c: 302: do { LATAbits.LATA4 = 1; } while(0);
  5885                           
  5886  049D  0020               	movlb	0	; select bank0
  5887  049E  1616               	bsf	22,4	;volatile
  5888  049F                     l3707:
  5889                           
  5890                           ;main.c: 303: a=1;
  5891  049F  3001               	movlw	1
  5892  04A0  0021               	movlb	1	; select bank1
  5893  04A1  00C2               	movwf	main@a^(0+128)
  5894  04A2  3000               	movlw	0
  5895  04A3  00C3               	movwf	(main@a^(0+128)+1)
  5896  04A4                     l3709:
  5897                           
  5898                           ;main.c: 304: };main.c: 305: aux = PORTBbits.RB4;
  5899  04A4  0020               	movlb	0	; select bank0
  5900  04A5  0E0D               	swapf	13,w	;volatile
  5901  04A6  3901               	andlw	1
  5902  04A7  0021               	movlb	1	; select bank1
  5903  04A8  00BA               	movwf	??_main^(0+128)
  5904  04A9  01BB               	clrf	(??_main^(0+128)+1)
  5905  04AA  01BC               	clrf	(??_main^(0+128)+2)
  5906  04AB  01BD               	clrf	(??_main^(0+128)+3)
  5907  04AC  083D               	movf	(??_main+3)^(0+128),w
  5908  04AD  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  5909  04AE  083C               	movf	(??_main+2)^(0+128),w
  5910  04AF  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  5911  04B0  083B               	movf	(??_main+1)^(0+128),w
  5912  04B1  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  5913  04B2  083A               	movf	??_main^(0+128),w
  5914  04B3  00A0               	movwf	___xxtofl@val^(0+128)
  5915  04B4  3000               	movlw	0
  5916  04B5  3183  2374  3184   	fcall	___xxtofl
  5917  04B8  0021               	movlb	1	; select bank1
  5918  04B9  0823               	movf	(?___xxtofl+3)^(0+128),w
  5919  04BA  00C1               	movwf	(main@aux+3)^(0+128)
  5920  04BB  0822               	movf	(?___xxtofl+2)^(0+128),w
  5921  04BC  00C0               	movwf	(main@aux+2)^(0+128)
  5922  04BD  0821               	movf	(?___xxtofl+1)^(0+128),w
  5923  04BE  00BF               	movwf	(main@aux+1)^(0+128)
  5924  04BF  0820               	movf	?___xxtofl^(0+128),w
  5925  04C0  00BE               	movwf	main@aux^(0+128)
  5926  04C1  2C64               	goto	l3701
  5927  04C2  3180  2834         	ljmp	start
  5928  04C4                     __end_of_main:
  5929                           
  5930                           	psect	text1
  5931  07F2                     __ptext1:	
  5932 ;; *************** function _i2c1_driver_open *****************
  5933 ;; Defined at:
  5934 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;		None
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;		None               void
  5941 ;; Registers used:
  5942 ;;		wreg, status,2
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;Total ram usage:        0 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:    7
  5955 ;; This function calls:
  5956 ;;		Nothing
  5957 ;; This function is called by:
  5958 ;;		_main
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           
  5963                           ;psect for function _i2c1_driver_open
  5964  07F2                     _i2c1_driver_open:
  5965  07F2                     l3519:	
  5966                           ;incstack = 0
  5967                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  5968                           
  5969                           
  5970                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  5971  07F2  0023               	movlb	3	; select bank3
  5972  07F3  1A90               	btfsc	16,5	;volatile
  5973  07F4  2FF6               	goto	u3841
  5974  07F5  2FF7               	goto	u3840
  5975  07F6                     u3841:
  5976  07F6  2FFD               	goto	l229
  5977  07F7                     u3840:
  5978  07F7                     l3521:
  5979                           
  5980                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  5981  07F7  018F               	clrf	15	;volatile
  5982  07F8                     l3523:
  5983                           
  5984                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  5985  07F8  3028               	movlw	40
  5986  07F9  0090               	movwf	16	;volatile
  5987  07FA                     l3525:
  5988                           
  5989                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  5990  07FA  0191               	clrf	17	;volatile
  5991                           
  5992                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  5993  07FB  3003               	movlw	3
  5994  07FC  008D               	movwf	13	;volatile
  5995  07FD                     l229:
  5996  07FD  0008               	return
  5997  07FE                     __end_of_i2c1_driver_open:
  5998                           
  5999                           	psect	text2
  6000  0374                     __ptext2:	
  6001 ;; *************** function ___xxtofl *****************
  6002 ;; Defined at:
  6003 ;;		line 10 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\xxtofl.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  sign            1    wreg     unsigned char 
  6006 ;;  val             4    0[BANK1 ] long 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  sign            1    8[BANK1 ] unsigned char 
  6009 ;;  arg             4   10[BANK1 ] unsigned long 
  6010 ;;  exp             1    9[BANK1 ] unsigned char 
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  4    0[BANK1 ] unsigned char 
  6013 ;; Registers used:
  6014 ;;		wreg, status,2, status,0
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 0/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6020 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6021 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;Total ram usage:       14 bytes
  6025 ;; Hardware stack levels used:    1
  6026 ;; Hardware stack levels required when called:    7
  6027 ;; This function calls:
  6028 ;;		Nothing
  6029 ;; This function is called by:
  6030 ;;		_main
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           
  6035                           ;psect for function ___xxtofl
  6036  0374                     ___xxtofl:
  6037                           
  6038                           ;incstack = 0
  6039                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6040                           ;___xxtofl@sign stored from wreg
  6041  0374  0021               	movlb	1	; select bank1
  6042  0375  00A8               	movwf	___xxtofl@sign^(0+128)
  6043  0376                     l3185:
  6044  0376  0828               	movf	___xxtofl@sign^(0+128),w
  6045  0377  1903               	btfsc	3,2
  6046  0378  2B7A               	goto	u3081
  6047  0379  2B7B               	goto	u3080
  6048  037A                     u3081:
  6049  037A  2B8F               	goto	l3191
  6050  037B                     u3080:
  6051  037B                     l3187:
  6052  037B  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  6053  037C  2B7E               	goto	u3091
  6054  037D  2B7F               	goto	u3090
  6055  037E                     u3091:
  6056  037E  2B8F               	goto	l3191
  6057  037F                     u3090:
  6058  037F                     l3189:
  6059  037F  0920               	comf	___xxtofl@val^(0+128),w
  6060  0380  00AA               	movwf	___xxtofl@arg^(0+128)
  6061  0381  0921               	comf	(___xxtofl@val^(0+128)+1),w
  6062  0382  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  6063  0383  0922               	comf	(___xxtofl@val^(0+128)+2),w
  6064  0384  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  6065  0385  0923               	comf	(___xxtofl@val^(0+128)+3),w
  6066  0386  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  6067  0387  0AAA               	incf	___xxtofl@arg^(0+128),f
  6068  0388  1903               	skipnz
  6069  0389  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
  6070  038A  1903               	skipnz
  6071  038B  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
  6072  038C  1903               	skipnz
  6073  038D  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
  6074  038E  2B97               	goto	l1412
  6075  038F                     l3191:
  6076  038F  0823               	movf	(___xxtofl@val+3)^(0+128),w
  6077  0390  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  6078  0391  0822               	movf	(___xxtofl@val+2)^(0+128),w
  6079  0392  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  6080  0393  0821               	movf	(___xxtofl@val+1)^(0+128),w
  6081  0394  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  6082  0395  0820               	movf	___xxtofl@val^(0+128),w
  6083  0396  00AA               	movwf	___xxtofl@arg^(0+128)
  6084  0397                     l1412:
  6085  0397  0823               	movf	(___xxtofl@val+3)^(0+128),w
  6086  0398  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
  6087  0399  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
  6088  039A  0420               	iorwf	___xxtofl@val^(0+128),w
  6089  039B  1D03               	skipz
  6090  039C  2B9E               	goto	u3101
  6091  039D  2B9F               	goto	u3100
  6092  039E                     u3101:
  6093  039E  2BA8               	goto	l3197
  6094  039F                     u3100:
  6095  039F                     l3193:
  6096  039F  3000               	movlw	0
  6097  03A0  00A3               	movwf	(?___xxtofl+3)^(0+128)
  6098  03A1  3000               	movlw	0
  6099  03A2  00A2               	movwf	(?___xxtofl+2)^(0+128)
  6100  03A3  3000               	movlw	0
  6101  03A4  00A1               	movwf	(?___xxtofl+1)^(0+128)
  6102  03A5  3000               	movlw	0
  6103  03A6  00A0               	movwf	?___xxtofl^(0+128)
  6104  03A7  2C20               	goto	l1414
  6105  03A8                     l3197:
  6106  03A8  3096               	movlw	150
  6107  03A9  00A4               	movwf	??___xxtofl^(0+128)
  6108  03AA  0824               	movf	??___xxtofl^(0+128),w
  6109  03AB  00A9               	movwf	___xxtofl@exp^(0+128)
  6110  03AC  2BB8               	goto	l3201
  6111  03AD                     l3199:
  6112  03AD  3001               	movlw	1
  6113  03AE  00A4               	movwf	??___xxtofl^(0+128)
  6114  03AF  0824               	movf	??___xxtofl^(0+128),w
  6115  03B0  07A9               	addwf	___xxtofl@exp^(0+128),f
  6116  03B1  3001               	movlw	1
  6117  03B2                     u3115:
  6118  03B2  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  6119  03B3  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  6120  03B4  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  6121  03B5  0CAA               	rrf	___xxtofl@arg^(0+128),f
  6122  03B6  0B89               	decfsz	9,f
  6123  03B7  2BB2               	goto	u3115
  6124  03B8                     l3201:
  6125  03B8  30FE               	movlw	254
  6126  03B9  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  6127  03BA  1D03               	btfss	3,2
  6128  03BB  2BBD               	goto	u3121
  6129  03BC  2BBE               	goto	u3120
  6130  03BD                     u3121:
  6131  03BD  2BAD               	goto	l3199
  6132  03BE                     u3120:
  6133  03BE  2BD2               	goto	l1418
  6134  03BF                     l3203:
  6135  03BF  3001               	movlw	1
  6136  03C0  00A4               	movwf	??___xxtofl^(0+128)
  6137  03C1  0824               	movf	??___xxtofl^(0+128),w
  6138  03C2  07A9               	addwf	___xxtofl@exp^(0+128),f
  6139  03C3                     l3205:
  6140  03C3  3001               	movlw	1
  6141  03C4  07AA               	addwf	___xxtofl@arg^(0+128),f
  6142  03C5  3000               	movlw	0
  6143  03C6  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
  6144  03C7  3000               	movlw	0
  6145  03C8  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
  6146  03C9  3000               	movlw	0
  6147  03CA  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
  6148  03CB                     l3207:
  6149  03CB  3001               	movlw	1
  6150  03CC                     u3135:
  6151  03CC  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  6152  03CD  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  6153  03CE  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  6154  03CF  0CAA               	rrf	___xxtofl@arg^(0+128),f
  6155  03D0  0B89               	decfsz	9,f
  6156  03D1  2BCC               	goto	u3135
  6157  03D2                     l1418:
  6158  03D2  30FF               	movlw	255
  6159  03D3  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  6160  03D4  1D03               	btfss	3,2
  6161  03D5  2BD7               	goto	u3141
  6162  03D6  2BD8               	goto	u3140
  6163  03D7                     u3141:
  6164  03D7  2BBF               	goto	l3203
  6165  03D8                     u3140:
  6166  03D8  2BE2               	goto	l3211
  6167  03D9                     l3209:
  6168  03D9  3001               	movlw	1
  6169  03DA  02A9               	subwf	___xxtofl@exp^(0+128),f
  6170  03DB  3001               	movlw	1
  6171  03DC                     u3155:
  6172  03DC  35AA               	lslf	___xxtofl@arg^(0+128),f
  6173  03DD  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
  6174  03DE  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
  6175  03DF  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
  6176  03E0  0B89               	decfsz	9,f
  6177  03E1  2BDC               	goto	u3155
  6178  03E2                     l3211:
  6179  03E2  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
  6180  03E3  2BE5               	goto	u3161
  6181  03E4  2BE6               	goto	u3160
  6182  03E5                     u3161:
  6183  03E5  2BEC               	goto	l1425
  6184  03E6                     u3160:
  6185  03E6                     l3213:
  6186  03E6  3002               	movlw	2
  6187  03E7  0229               	subwf	___xxtofl@exp^(0+128),w
  6188  03E8  1803               	skipnc
  6189  03E9  2BEB               	goto	u3171
  6190  03EA  2BEC               	goto	u3170
  6191  03EB                     u3171:
  6192  03EB  2BD9               	goto	l3209
  6193  03EC                     u3170:
  6194  03EC                     l1425:
  6195  03EC  1829               	btfsc	___xxtofl@exp^(0+128),0
  6196  03ED  2BEF               	goto	u3181
  6197  03EE  2BF0               	goto	u3180
  6198  03EF                     u3181:
  6199  03EF  2BF8               	goto	l1426
  6200  03F0                     u3180:
  6201  03F0                     l3215:
  6202  03F0  30FF               	movlw	255
  6203  03F1  05AA               	andwf	___xxtofl@arg^(0+128),f
  6204  03F2  30FF               	movlw	255
  6205  03F3  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
  6206  03F4  307F               	movlw	127
  6207  03F5  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
  6208  03F6  30FF               	movlw	255
  6209  03F7  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
  6210  03F8                     l1426:
  6211  03F8  1003               	clrc
  6212  03F9  0CA9               	rrf	___xxtofl@exp^(0+128),f
  6213  03FA                     l3217:
  6214  03FA  0829               	movf	___xxtofl@exp^(0+128),w
  6215  03FB  00A4               	movwf	??___xxtofl^(0+128)
  6216  03FC  01A5               	clrf	(??___xxtofl^(0+128)+1)
  6217  03FD  01A6               	clrf	(??___xxtofl^(0+128)+2)
  6218  03FE  01A7               	clrf	(??___xxtofl^(0+128)+3)
  6219  03FF  3018               	movlw	24
  6220  0400                     u3195:
  6221  0400  35A4               	lslf	??___xxtofl^(0+128),f
  6222  0401  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
  6223  0402  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
  6224  0403  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
  6225  0404                     u3190:
  6226  0404  0B89               	decfsz	9,f
  6227  0405  2C00               	goto	u3195
  6228  0406  0824               	movf	??___xxtofl^(0+128),w
  6229  0407  04AA               	iorwf	___xxtofl@arg^(0+128),f
  6230  0408  0825               	movf	(??___xxtofl+1)^(0+128),w
  6231  0409  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
  6232  040A  0826               	movf	(??___xxtofl+2)^(0+128),w
  6233  040B  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
  6234  040C  0827               	movf	(??___xxtofl+3)^(0+128),w
  6235  040D  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
  6236  040E                     l3219:
  6237  040E  0828               	movf	___xxtofl@sign^(0+128),w
  6238  040F  1903               	btfsc	3,2
  6239  0410  2C12               	goto	u3201
  6240  0411  2C13               	goto	u3200
  6241  0412                     u3201:
  6242  0412  2C18               	goto	l3225
  6243  0413                     u3200:
  6244  0413                     l3221:
  6245  0413  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  6246  0414  2C16               	goto	u3211
  6247  0415  2C17               	goto	u3210
  6248  0416                     u3211:
  6249  0416  2C18               	goto	l3225
  6250  0417                     u3210:
  6251  0417                     l3223:
  6252  0417  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
  6253  0418                     l3225:
  6254  0418  082D               	movf	(___xxtofl@arg+3)^(0+128),w
  6255  0419  00A3               	movwf	(?___xxtofl+3)^(0+128)
  6256  041A  082C               	movf	(___xxtofl@arg+2)^(0+128),w
  6257  041B  00A2               	movwf	(?___xxtofl+2)^(0+128)
  6258  041C  082B               	movf	(___xxtofl@arg+1)^(0+128),w
  6259  041D  00A1               	movwf	(?___xxtofl+1)^(0+128)
  6260  041E  082A               	movf	___xxtofl@arg^(0+128),w
  6261  041F  00A0               	movwf	?___xxtofl^(0+128)
  6262  0420                     l1414:
  6263  0420  0008               	return
  6264  0421                     __end_of___xxtofl:
  6265                           
  6266                           	psect	text3
  6267  065A                     __ptext3:	
  6268 ;; *************** function ___fleq *****************
  6269 ;; Defined at:
  6270 ;;		line 4 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\fleq.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  ff1             4   14[BANK1 ] unsigned char 
  6273 ;;  ff2             4   18[BANK1 ] unsigned char 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;		None               void
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6285 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;Total ram usage:       12 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    7
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_main
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           
  6300                           ;psect for function ___fleq
  6301  065A                     ___fleq:
  6302  065A                     l3173:	
  6303                           ;incstack = 0
  6304                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6305                           
  6306  065A  3000               	movlw	0
  6307  065B  0021               	movlb	1	; select bank1
  6308  065C  052E               	andwf	___fleq@ff1^(0+128),w
  6309  065D  00B6               	movwf	??___fleq^(0+128)
  6310  065E  3000               	movlw	0
  6311  065F  052F               	andwf	(___fleq@ff1+1)^(0+128),w
  6312  0660  00B7               	movwf	(??___fleq^(0+128)+1)
  6313  0661  3080               	movlw	128
  6314  0662  0530               	andwf	(___fleq@ff1+2)^(0+128),w
  6315  0663  00B8               	movwf	(??___fleq^(0+128)+2)
  6316  0664  307F               	movlw	127
  6317  0665  0531               	andwf	(___fleq@ff1+3)^(0+128),w
  6318  0666  00B9               	movwf	(??___fleq^(0+128)+3)
  6319  0667  0839               	movf	(??___fleq+3)^(0+128),w
  6320  0668  0438               	iorwf	(??___fleq+2)^(0+128),w
  6321  0669  0437               	iorwf	(??___fleq+1)^(0+128),w
  6322  066A  0436               	iorwf	??___fleq^(0+128),w
  6323  066B  1D03               	skipz
  6324  066C  2E6E               	goto	u3051
  6325  066D  2E6F               	goto	u3050
  6326  066E                     u3051:
  6327  066E  2E77               	goto	l1148
  6328  066F                     u3050:
  6329  066F                     l3175:
  6330  066F  3000               	movlw	0
  6331  0670  00B1               	movwf	(___fleq@ff1+3)^(0+128)
  6332  0671  3000               	movlw	0
  6333  0672  00B0               	movwf	(___fleq@ff1+2)^(0+128)
  6334  0673  3000               	movlw	0
  6335  0674  00AF               	movwf	(___fleq@ff1+1)^(0+128)
  6336  0675  3000               	movlw	0
  6337  0676  00AE               	movwf	___fleq@ff1^(0+128)
  6338  0677                     l1148:
  6339  0677  3000               	movlw	0
  6340  0678  0532               	andwf	___fleq@ff2^(0+128),w
  6341  0679  00B6               	movwf	??___fleq^(0+128)
  6342  067A  3000               	movlw	0
  6343  067B  0533               	andwf	(___fleq@ff2+1)^(0+128),w
  6344  067C  00B7               	movwf	(??___fleq^(0+128)+1)
  6345  067D  3080               	movlw	128
  6346  067E  0534               	andwf	(___fleq@ff2+2)^(0+128),w
  6347  067F  00B8               	movwf	(??___fleq^(0+128)+2)
  6348  0680  307F               	movlw	127
  6349  0681  0535               	andwf	(___fleq@ff2+3)^(0+128),w
  6350  0682  00B9               	movwf	(??___fleq^(0+128)+3)
  6351  0683  0839               	movf	(??___fleq+3)^(0+128),w
  6352  0684  0438               	iorwf	(??___fleq+2)^(0+128),w
  6353  0685  0437               	iorwf	(??___fleq+1)^(0+128),w
  6354  0686  0436               	iorwf	??___fleq^(0+128),w
  6355  0687  1D03               	skipz
  6356  0688  2E8A               	goto	u3061
  6357  0689  2E8B               	goto	u3060
  6358  068A                     u3061:
  6359  068A  2E93               	goto	l1149
  6360  068B                     u3060:
  6361  068B                     l3177:
  6362  068B  3000               	movlw	0
  6363  068C  00B5               	movwf	(___fleq@ff2+3)^(0+128)
  6364  068D  3000               	movlw	0
  6365  068E  00B4               	movwf	(___fleq@ff2+2)^(0+128)
  6366  068F  3000               	movlw	0
  6367  0690  00B3               	movwf	(___fleq@ff2+1)^(0+128)
  6368  0691  3000               	movlw	0
  6369  0692  00B2               	movwf	___fleq@ff2^(0+128)
  6370  0693                     l1149:
  6371  0693  0835               	movf	(___fleq@ff2+3)^(0+128),w
  6372  0694  0631               	xorwf	(___fleq@ff1+3)^(0+128),w
  6373  0695  1D03               	skipz
  6374  0696  2EA1               	goto	u3075
  6375  0697  0834               	movf	(___fleq@ff2+2)^(0+128),w
  6376  0698  0630               	xorwf	(___fleq@ff1+2)^(0+128),w
  6377  0699  1D03               	skipz
  6378  069A  2EA1               	goto	u3075
  6379  069B  0833               	movf	(___fleq@ff2+1)^(0+128),w
  6380  069C  062F               	xorwf	(___fleq@ff1+1)^(0+128),w
  6381  069D  1D03               	skipz
  6382  069E  2EA1               	goto	u3075
  6383  069F  0832               	movf	___fleq@ff2^(0+128),w
  6384  06A0  062E               	xorwf	___fleq@ff1^(0+128),w
  6385  06A1                     u3075:
  6386  06A1  1903               	skipnz
  6387  06A2  2EA4               	goto	u3071
  6388  06A3  2EA5               	goto	u3070
  6389  06A4                     u3071:
  6390  06A4  2EA7               	goto	l3181
  6391  06A5                     u3070:
  6392  06A5                     l3179:
  6393  06A5  1003               	clrc
  6394  06A6  2EA8               	goto	l1150
  6395  06A7                     l3181:
  6396  06A7  1403               	setc
  6397  06A8                     l1150:
  6398  06A8  0008               	return
  6399  06A9                     __end_of___fleq:
  6400                           
  6401                           	psect	text4
  6402  0F16                     __ptext4:	
  6403 ;; *************** function _SYSTEM_Initialize *****************
  6404 ;; Defined at:
  6405 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;		None
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;		None
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      void 
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0, pclath, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6423 ;;Total ram usage:        0 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:    9
  6426 ;; This function calls:
  6427 ;;		_OSCILLATOR_Initialize
  6428 ;;		_PIN_MANAGER_Initialize
  6429 ;;		_PMD_Initialize
  6430 ;;		_TMR1_Initialize
  6431 ;;		_TMR3_Initialize
  6432 ;; This function is called by:
  6433 ;;		_main
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           
  6438                           ;psect for function _SYSTEM_Initialize
  6439  0F16                     _SYSTEM_Initialize:
  6440  0F16                     l3509:	
  6441                           ;incstack = 0
  6442                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6443                           
  6444                           
  6445                           ;mcc.c: 52: PMD_Initialize();
  6446  0F16  318E  26F3  318F   	fcall	_PMD_Initialize
  6447  0F19                     l3511:
  6448                           
  6449                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  6450  0F19  3187  2730  318F   	fcall	_PIN_MANAGER_Initialize
  6451  0F1C                     l3513:
  6452                           
  6453                           ;mcc.c: 54: OSCILLATOR_Initialize();
  6454  0F1C  318E  26FB  318F   	fcall	_OSCILLATOR_Initialize
  6455  0F1F                     l3515:
  6456                           
  6457                           ;mcc.c: 55: TMR3_Initialize();
  6458  0F1F  318F  27E1  318F   	fcall	_TMR3_Initialize
  6459  0F22                     l3517:
  6460                           
  6461                           ;mcc.c: 56: TMR1_Initialize();
  6462  0F22  318F  27C2  318F   	fcall	_TMR1_Initialize
  6463  0F25                     l162:
  6464  0F25  0008               	return
  6465  0F26                     __end_of_SYSTEM_Initialize:
  6466                           
  6467                           	psect	text5
  6468  0FE1                     __ptext5:	
  6469 ;; *************** function _TMR3_Initialize *****************
  6470 ;; Defined at:
  6471 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;		None
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;		None
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  1    wreg      void 
  6478 ;; Registers used:
  6479 ;;		wreg, status,2, status,0, pclath, cstack
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;Total ram usage:        0 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    8
  6492 ;; This function calls:
  6493 ;;		_TMR3_SetInterruptHandler
  6494 ;; This function is called by:
  6495 ;;		_SYSTEM_Initialize
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           
  6500                           ;psect for function _TMR3_Initialize
  6501  0FE1                     _TMR3_Initialize:
  6502  0FE1                     l3421:	
  6503                           ;incstack = 0
  6504                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6505                           
  6506                           
  6507                           ;tmr3.c: 69: T3GCON = 0x00;
  6508  0FE1  0024               	movlb	4	; select bank4
  6509  0FE2  0195               	clrf	21	;volatile
  6510                           
  6511                           ;tmr3.c: 72: T3GATE = 0x00;
  6512  0FE3  0196               	clrf	22	;volatile
  6513  0FE4                     l3423:
  6514                           
  6515                           ;tmr3.c: 75: T3CLK = 0x04;
  6516  0FE4  3004               	movlw	4
  6517  0FE5  0097               	movwf	23	;volatile
  6518  0FE6                     l3425:
  6519                           
  6520                           ;tmr3.c: 78: TMR3H = 0xE7;
  6521  0FE6  30E7               	movlw	231
  6522  0FE7  0093               	movwf	19	;volatile
  6523  0FE8                     l3427:
  6524                           
  6525                           ;tmr3.c: 81: TMR3L = 0xC8;
  6526  0FE8  30C8               	movlw	200
  6527  0FE9  0092               	movwf	18	;volatile
  6528  0FEA                     l3429:
  6529                           
  6530                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  6531  0FEA  0813               	movf	19,w	;volatile
  6532  0FEB  0020               	movlb	0	; select bank0
  6533  0FEC  00D4               	movwf	_timer3ReloadVal+1	;volatile
  6534  0FED  0024               	movlb	4	; select bank4
  6535  0FEE  0812               	movf	18,w	;volatile
  6536  0FEF  0020               	movlb	0	; select bank0
  6537  0FF0  00D3               	movwf	_timer3ReloadVal	;volatile
  6538  0FF1                     l3431:
  6539                           
  6540                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
  6541  0FF1  002E               	movlb	14	; select bank14
  6542  0FF2  1110               	bcf	16,2	;volatile
  6543  0FF3                     l3433:
  6544                           
  6545                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
  6546  0FF3  151A               	bsf	26,2	;volatile
  6547  0FF4                     l3435:
  6548                           
  6549                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  6550  0FF4  30FE               	movlw	low _TMR3_DefaultInterruptHandler
  6551  0FF5  0021               	movlb	1	; select bank1
  6552  0FF6  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  6553  0FF7  3007               	movlw	high _TMR3_DefaultInterruptHandler
  6554  0FF8  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6555  0FF9  318F  270D  318F   	fcall	_TMR3_SetInterruptHandler
  6556  0FFC                     l3437:
  6557                           
  6558                           ;tmr3.c: 96: T3CON = 0x01;
  6559  0FFC  3001               	movlw	1
  6560  0FFD  0024               	movlb	4	; select bank4
  6561  0FFE  0094               	movwf	20	;volatile
  6562  0FFF                     l743:
  6563  0FFF  0008               	return
  6564  1000                     __end_of_TMR3_Initialize:
  6565                           
  6566                           	psect	text6
  6567  0F0D                     __ptext6:	
  6568 ;; *************** function _TMR3_SetInterruptHandler *****************
  6569 ;; Defined at:
  6570 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6573 ;;		 -> TMR3_DefaultInterruptHandler(1), menuLCD_ISR(1), 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;		None
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      void 
  6578 ;; Registers used:
  6579 ;;		wreg
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6585 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;Total ram usage:        2 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    7
  6592 ;; This function calls:
  6593 ;;		Nothing
  6594 ;; This function is called by:
  6595 ;;		_main
  6596 ;;		_TMR3_Initialize
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           
  6601                           ;psect for function _TMR3_SetInterruptHandler
  6602  0F0D                     _TMR3_SetInterruptHandler:
  6603  0F0D                     l3369:	
  6604                           ;incstack = 0
  6605                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
  6606                           
  6607                           
  6608                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
  6609  0F0D  0021               	movlb	1	; select bank1
  6610  0F0E  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6611  0F0F  0020               	movlb	0	; select bank0
  6612  0F10  00D2               	movwf	_TMR3_InterruptHandler+1
  6613  0F11  0021               	movlb	1	; select bank1
  6614  0F12  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
  6615  0F13  0020               	movlb	0	; select bank0
  6616  0F14  00D1               	movwf	_TMR3_InterruptHandler
  6617  0F15                     l773:
  6618  0F15  0008               	return
  6619  0F16                     __end_of_TMR3_SetInterruptHandler:
  6620                           
  6621                           	psect	text7
  6622  0FC2                     __ptext7:	
  6623 ;; *************** function _TMR1_Initialize *****************
  6624 ;; Defined at:
  6625 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, status,0, pclath, cstack
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;Total ram usage:        0 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    8
  6646 ;; This function calls:
  6647 ;;		_TMR1_SetInterruptHandler
  6648 ;; This function is called by:
  6649 ;;		_SYSTEM_Initialize
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           
  6654                           ;psect for function _TMR1_Initialize
  6655  0FC2                     _TMR1_Initialize:
  6656  0FC2                     l3439:	
  6657                           ;incstack = 0
  6658                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6659                           
  6660                           
  6661                           ;tmr1.c: 69: T1GCON = 0x00;
  6662  0FC2  0024               	movlb	4	; select bank4
  6663  0FC3  018F               	clrf	15	;volatile
  6664                           
  6665                           ;tmr1.c: 72: T1GATE = 0x00;
  6666  0FC4  0190               	clrf	16	;volatile
  6667  0FC5                     l3441:
  6668                           
  6669                           ;tmr1.c: 75: T1CLK = 0x04;
  6670  0FC5  3004               	movlw	4
  6671  0FC6  0091               	movwf	17	;volatile
  6672  0FC7                     l3443:
  6673                           
  6674                           ;tmr1.c: 78: TMR1H = 0x86;
  6675  0FC7  3086               	movlw	134
  6676  0FC8  008D               	movwf	13	;volatile
  6677  0FC9                     l3445:
  6678                           
  6679                           ;tmr1.c: 81: TMR1L = 0xE8;
  6680  0FC9  30E8               	movlw	232
  6681  0FCA  008C               	movwf	12	;volatile
  6682  0FCB                     l3447:
  6683                           
  6684                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6685  0FCB  080D               	movf	13,w	;volatile
  6686  0FCC  0020               	movlb	0	; select bank0
  6687  0FCD  00D8               	movwf	_timer1ReloadVal+1	;volatile
  6688  0FCE  0024               	movlb	4	; select bank4
  6689  0FCF  080C               	movf	12,w	;volatile
  6690  0FD0  0020               	movlb	0	; select bank0
  6691  0FD1  00D7               	movwf	_timer1ReloadVal	;volatile
  6692  0FD2                     l3449:
  6693                           
  6694                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
  6695  0FD2  002E               	movlb	14	; select bank14
  6696  0FD3  1010               	bcf	16,0	;volatile
  6697  0FD4                     l3451:
  6698                           
  6699                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
  6700  0FD4  141A               	bsf	26,0	;volatile
  6701  0FD5                     l3453:
  6702                           
  6703                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  6704  0FD5  30FF               	movlw	low _TMR1_DefaultInterruptHandler
  6705  0FD6  0021               	movlb	1	; select bank1
  6706  0FD7  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  6707  0FD8  3007               	movlw	high _TMR1_DefaultInterruptHandler
  6708  0FD9  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6709  0FDA  318F  2704  318F   	fcall	_TMR1_SetInterruptHandler
  6710  0FDD                     l3455:
  6711                           
  6712                           ;tmr1.c: 96: T1CON = 0x01;
  6713  0FDD  3001               	movlw	1
  6714  0FDE  0024               	movlb	4	; select bank4
  6715  0FDF  008E               	movwf	14	;volatile
  6716  0FE0                     l679:
  6717  0FE0  0008               	return
  6718  0FE1                     __end_of_TMR1_Initialize:
  6719                           
  6720                           	psect	text8
  6721  0F04                     __ptext8:	
  6722 ;; *************** function _TMR1_SetInterruptHandler *****************
  6723 ;; Defined at:
  6724 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6727 ;;		 -> TMR1_DefaultInterruptHandler(1), Clock_ISR(1), 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1    wreg      void 
  6732 ;; Registers used:
  6733 ;;		wreg
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6739 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6742 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6743 ;;Total ram usage:        2 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    7
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_main
  6750 ;;		_TMR1_Initialize
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           
  6755                           ;psect for function _TMR1_SetInterruptHandler
  6756  0F04                     _TMR1_SetInterruptHandler:
  6757  0F04                     l3367:	
  6758                           ;incstack = 0
  6759                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6760                           
  6761                           
  6762                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
  6763  0F04  0021               	movlb	1	; select bank1
  6764  0F05  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6765  0F06  0020               	movlb	0	; select bank0
  6766  0F07  00D6               	movwf	_TMR1_InterruptHandler+1
  6767  0F08  0021               	movlb	1	; select bank1
  6768  0F09  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  6769  0F0A  0020               	movlb	0	; select bank0
  6770  0F0B  00D5               	movwf	_TMR1_InterruptHandler
  6771  0F0C                     l709:
  6772  0F0C  0008               	return
  6773  0F0D                     __end_of_TMR1_SetInterruptHandler:
  6774                           
  6775                           	psect	text9
  6776  0EF3                     __ptext9:	
  6777 ;; *************** function _PMD_Initialize *****************
  6778 ;; Defined at:
  6779 ;;		line 73 in file "mcc_generated_files/mcc.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;		None
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;		None
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  1    wreg      void 
  6786 ;; Registers used:
  6787 ;;		status,2
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6797 ;;Total ram usage:        0 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; Hardware stack levels required when called:    7
  6800 ;; This function calls:
  6801 ;;		Nothing
  6802 ;; This function is called by:
  6803 ;;		_SYSTEM_Initialize
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           
  6808                           ;psect for function _PMD_Initialize
  6809  0EF3                     _PMD_Initialize:
  6810  0EF3                     l3411:	
  6811                           ;incstack = 0
  6812                           ; Regs used in _PMD_Initialize: [status,2]
  6813                           
  6814                           
  6815                           ;mcc.c: 76: PMD0 = 0x00;
  6816  0EF3  002F               	movlb	15	; select bank15
  6817  0EF4  0196               	clrf	22	;volatile
  6818                           
  6819                           ;mcc.c: 78: PMD1 = 0x00;
  6820  0EF5  0197               	clrf	23	;volatile
  6821                           
  6822                           ;mcc.c: 80: PMD2 = 0x00;
  6823  0EF6  0198               	clrf	24	;volatile
  6824                           
  6825                           ;mcc.c: 82: PMD3 = 0x00;
  6826  0EF7  0199               	clrf	25	;volatile
  6827                           
  6828                           ;mcc.c: 84: PMD4 = 0x00;
  6829  0EF8  019A               	clrf	26	;volatile
  6830                           
  6831                           ;mcc.c: 86: PMD5 = 0x00;
  6832  0EF9  019B               	clrf	27	;volatile
  6833  0EFA                     l168:
  6834  0EFA  0008               	return
  6835  0EFB                     __end_of_PMD_Initialize:
  6836                           
  6837                           	psect	text10
  6838  0730                     __ptext10:	
  6839 ;; *************** function _PIN_MANAGER_Initialize *****************
  6840 ;; Defined at:
  6841 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;		None
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      void 
  6848 ;; Registers used:
  6849 ;;		wreg, status,2
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6859 ;;Total ram usage:        0 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    7
  6862 ;; This function calls:
  6863 ;;		Nothing
  6864 ;; This function is called by:
  6865 ;;		_SYSTEM_Initialize
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           
  6870                           ;psect for function _PIN_MANAGER_Initialize
  6871  0730                     _PIN_MANAGER_Initialize:
  6872  0730                     l3371:	
  6873                           ;incstack = 0
  6874                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6875                           
  6876                           
  6877                           ;pin_manager.c: 62: LATE = 0x00;
  6878  0730  0020               	movlb	0	; select bank0
  6879  0731  019A               	clrf	26	;volatile
  6880                           
  6881                           ;pin_manager.c: 63: LATD = 0x00;
  6882  0732  0199               	clrf	25	;volatile
  6883                           
  6884                           ;pin_manager.c: 64: LATA = 0x00;
  6885  0733  0196               	clrf	22	;volatile
  6886                           
  6887                           ;pin_manager.c: 65: LATB = 0x00;
  6888  0734  0197               	clrf	23	;volatile
  6889                           
  6890                           ;pin_manager.c: 66: LATC = 0x00;
  6891  0735  0198               	clrf	24	;volatile
  6892  0736                     l3373:
  6893                           
  6894                           ;pin_manager.c: 71: TRISE = 0x07;
  6895  0736  3007               	movlw	7
  6896  0737  0095               	movwf	21	;volatile
  6897  0738                     l3375:
  6898                           
  6899                           ;pin_manager.c: 72: TRISA = 0xEF;
  6900  0738  30EF               	movlw	239
  6901  0739  0091               	movwf	17	;volatile
  6902  073A                     l3377:
  6903                           
  6904                           ;pin_manager.c: 73: TRISB = 0xFF;
  6905  073A  30FF               	movlw	255
  6906  073B  0092               	movwf	18	;volatile
  6907  073C                     l3379:
  6908                           
  6909                           ;pin_manager.c: 74: TRISC = 0xFF;
  6910  073C  30FF               	movlw	255
  6911  073D  0093               	movwf	19	;volatile
  6912  073E                     l3381:
  6913                           
  6914                           ;pin_manager.c: 75: TRISD = 0xFF;
  6915  073E  30FF               	movlw	255
  6916  073F  0094               	movwf	20	;volatile
  6917  0740                     l3383:
  6918                           
  6919                           ;pin_manager.c: 80: ANSELD = 0xFF;
  6920  0740  30FF               	movlw	255
  6921  0741  003E               	movlb	30	; select bank30
  6922  0742  00D9               	movwf	89	;volatile
  6923  0743                     l3385:
  6924                           
  6925                           ;pin_manager.c: 81: ANSELC = 0xE7;
  6926  0743  30E7               	movlw	231
  6927  0744  00CE               	movwf	78	;volatile
  6928  0745                     l3387:
  6929                           
  6930                           ;pin_manager.c: 82: ANSELB = 0xEF;
  6931  0745  30EF               	movlw	239
  6932  0746  00C3               	movwf	67	;volatile
  6933  0747                     l3389:
  6934                           
  6935                           ;pin_manager.c: 83: ANSELE = 0x07;
  6936  0747  3007               	movlw	7
  6937  0748  00E4               	movwf	100	;volatile
  6938  0749                     l3391:
  6939                           
  6940                           ;pin_manager.c: 84: ANSELA = 0xEF;
  6941  0749  30EF               	movlw	239
  6942  074A  00B8               	movwf	56	;volatile
  6943                           
  6944                           ;pin_manager.c: 89: WPUD = 0x00;
  6945  074B  01DA               	clrf	90	;volatile
  6946                           
  6947                           ;pin_manager.c: 90: WPUE = 0x00;
  6948  074C  01E5               	clrf	101	;volatile
  6949                           
  6950                           ;pin_manager.c: 91: WPUB = 0x00;
  6951  074D  01C4               	clrf	68	;volatile
  6952                           
  6953                           ;pin_manager.c: 92: WPUA = 0x00;
  6954  074E  01B9               	clrf	57	;volatile
  6955                           
  6956                           ;pin_manager.c: 93: WPUC = 0x00;
  6957  074F  01CF               	clrf	79	;volatile
  6958                           
  6959                           ;pin_manager.c: 98: ODCONE = 0x00;
  6960  0750  01E6               	clrf	102	;volatile
  6961                           
  6962                           ;pin_manager.c: 99: ODCONA = 0x00;
  6963  0751  01BA               	clrf	58	;volatile
  6964                           
  6965                           ;pin_manager.c: 100: ODCONB = 0x00;
  6966  0752  01C5               	clrf	69	;volatile
  6967                           
  6968                           ;pin_manager.c: 101: ODCONC = 0x00;
  6969  0753  01D0               	clrf	80	;volatile
  6970                           
  6971                           ;pin_manager.c: 102: ODCOND = 0x00;
  6972  0754  01DB               	clrf	91	;volatile
  6973  0755                     l3393:
  6974                           
  6975                           ;pin_manager.c: 107: SLRCONA = 0xFF;
  6976  0755  30FF               	movlw	255
  6977  0756  00BB               	movwf	59	;volatile
  6978  0757                     l3395:
  6979                           
  6980                           ;pin_manager.c: 108: SLRCONB = 0xFF;
  6981  0757  30FF               	movlw	255
  6982  0758  00C6               	movwf	70	;volatile
  6983  0759                     l3397:
  6984                           
  6985                           ;pin_manager.c: 109: SLRCONC = 0xFF;
  6986  0759  30FF               	movlw	255
  6987  075A  00D1               	movwf	81	;volatile
  6988  075B                     l3399:
  6989                           
  6990                           ;pin_manager.c: 110: SLRCOND = 0xFF;
  6991  075B  30FF               	movlw	255
  6992  075C  00DC               	movwf	92	;volatile
  6993  075D                     l3401:
  6994                           
  6995                           ;pin_manager.c: 111: SLRCONE = 0x07;
  6996  075D  3007               	movlw	7
  6997  075E  00E7               	movwf	103	;volatile
  6998  075F                     l3403:
  6999                           
  7000                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
  7001  075F  3013               	movlw	19
  7002  0760  003D               	movlb	29	; select bank29
  7003  0761  00C5               	movwf	69	;volatile
  7004  0762                     l3405:
  7005                           
  7006                           ;pin_manager.c: 121: RC3PPS = 0x14;
  7007  0762  3014               	movlw	20
  7008  0763  003E               	movlb	30	; select bank30
  7009  0764  00A3               	movwf	35	;volatile
  7010  0765                     l3407:
  7011                           
  7012                           ;pin_manager.c: 122: RC4PPS = 0x15;
  7013  0765  3015               	movlw	21
  7014  0766  00A4               	movwf	36	;volatile
  7015  0767                     l3409:
  7016                           
  7017                           ;pin_manager.c: 123: SSP1DATPPS = 0x14;
  7018  0767  3014               	movlw	20
  7019  0768  003D               	movlb	29	; select bank29
  7020  0769  00C6               	movwf	70	;volatile
  7021  076A                     l120:
  7022  076A  0008               	return
  7023  076B                     __end_of_PIN_MANAGER_Initialize:
  7024                           
  7025                           	psect	text11
  7026  0EFB                     __ptext11:	
  7027 ;; *************** function _OSCILLATOR_Initialize *****************
  7028 ;; Defined at:
  7029 ;;		line 59 in file "mcc_generated_files/mcc.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;		None
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;		None
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7047 ;;Total ram usage:        0 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; Hardware stack levels required when called:    7
  7050 ;; This function calls:
  7051 ;;		Nothing
  7052 ;; This function is called by:
  7053 ;;		_SYSTEM_Initialize
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           
  7058                           ;psect for function _OSCILLATOR_Initialize
  7059  0EFB                     _OSCILLATOR_Initialize:
  7060  0EFB                     l3413:	
  7061                           ;incstack = 0
  7062                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7063                           
  7064                           
  7065                           ;mcc.c: 62: OSCCON1 = 0x62;
  7066  0EFB  3062               	movlw	98
  7067  0EFC  0031               	movlb	17	; select bank17
  7068  0EFD  008D               	movwf	13	;volatile
  7069  0EFE                     l3415:
  7070                           
  7071                           ;mcc.c: 64: OSCCON3 = 0x00;
  7072  0EFE  018F               	clrf	15	;volatile
  7073  0EFF                     l3417:
  7074                           
  7075                           ;mcc.c: 66: OSCEN = 0x00;
  7076  0EFF  0191               	clrf	17	;volatile
  7077                           
  7078                           ;mcc.c: 68: OSCFRQ = 0x02;
  7079  0F00  3002               	movlw	2
  7080  0F01  0093               	movwf	19	;volatile
  7081  0F02                     l3419:
  7082                           
  7083                           ;mcc.c: 70: OSCTUNE = 0x00;
  7084  0F02  0192               	clrf	18	;volatile
  7085  0F03                     l165:
  7086  0F03  0008               	return
  7087  0F04                     __end_of_OSCILLATOR_Initialize:
  7088                           
  7089                           	psect	text12
  7090  04C4                     __ptext12:	
  7091 ;; *************** function _LCDinit *****************
  7092 ;; Defined at:
  7093 ;;		line 150 in file "main.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;		None
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;		None
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  1    wreg      void 
  7100 ;; Registers used:
  7101 ;;		wreg, status,2, status,0, pclath, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;Total ram usage:        1 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; Hardware stack levels required when called:    9
  7114 ;; This function calls:
  7115 ;;		_LCDsend
  7116 ;;		_LCDsend2x4
  7117 ;; This function is called by:
  7118 ;;		_main
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           
  7123                           ;psect for function _LCDinit
  7124  04C4                     _LCDinit:
  7125  04C4                     l3597:	
  7126                           ;incstack = 0
  7127                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
  7128                           
  7129                           
  7130                           ;main.c: 152: _delay((unsigned long)((50)*(1000000/4000.0)));
  7131  04C4  3011               	movlw	17
  7132  04C5  0021               	movlb	1	; select bank1
  7133  04C6  00A8               	movwf	??_LCDinit^(0+128)
  7134  04C7  303A               	movlw	58
  7135  04C8                     u4397:
  7136  04C8  0B89               	decfsz	9,f
  7137  04C9  2CC8               	goto	u4397
  7138  04CA  0BA8               	decfsz	??_LCDinit^(0+128),f
  7139  04CB  2CC8               	goto	u4397
  7140  04CC  0000               	nop
  7141  04CD                     l3599:
  7142                           
  7143                           ;main.c: 153: LCDsend(0x30);
  7144  04CD  3030               	movlw	48
  7145  04CE  3186  2607  3184   	fcall	_LCDsend
  7146  04D1                     l3601:
  7147                           
  7148                           ;main.c: 154: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7149  04D1  3034               	movlw	52
  7150  04D2  3186  2607  3184   	fcall	_LCDsend
  7151  04D5  3029               	movlw	41
  7152  04D6                     u4407:
  7153  04D6  0B89               	decfsz	9,f
  7154  04D7  2CD6               	goto	u4407
  7155  04D8  3200               	nop2
  7156  04D9                     l3603:
  7157  04D9  3030               	movlw	48
  7158  04DA  3186  2607  3184   	fcall	_LCDsend
  7159  04DD                     l3605:
  7160                           
  7161                           ;main.c: 155: _delay((unsigned long)((5)*(1000000/4000.0)));
  7162  04DD  30FA               	movlw	250
  7163  04DE                     u4417:
  7164  04DE  3200               	nop2
  7165  04DF  0B89               	decfsz	9,f
  7166  04E0  2CDE               	goto	u4417
  7167                           
  7168                           ;main.c: 156: LCDsend(0x30);
  7169  04E1  3030               	movlw	48
  7170  04E2  3186  2607  3184   	fcall	_LCDsend
  7171                           
  7172                           ;main.c: 157: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7173  04E5  3034               	movlw	52
  7174  04E6  3186  2607  3184   	fcall	_LCDsend
  7175  04E9                     l3607:
  7176  04E9  3029               	movlw	41
  7177  04EA                     u4427:
  7178  04EA  0B89               	decfsz	9,f
  7179  04EB  2CEA               	goto	u4427
  7180  04EC  3200               	nop2
  7181  04ED                     l3609:
  7182  04ED  3030               	movlw	48
  7183  04EE  3186  2607  3184   	fcall	_LCDsend
  7184                           
  7185                           ;main.c: 158: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7186  04F1  3008               	movlw	8
  7187  04F2                     u4437:
  7188  04F2  0B89               	decfsz	9,f
  7189  04F3  2CF2               	goto	u4437
  7190  04F4  0000               	nop
  7191  04F5                     l3611:
  7192                           
  7193                           ;main.c: 159: LCDsend(0x30);
  7194  04F5  3030               	movlw	48
  7195  04F6  3186  2607  3184   	fcall	_LCDsend
  7196  04F9                     l3613:
  7197                           
  7198                           ;main.c: 160: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7199  04F9  3034               	movlw	52
  7200  04FA  3186  2607  3184   	fcall	_LCDsend
  7201  04FD  3029               	movlw	41
  7202  04FE                     u4447:
  7203  04FE  0B89               	decfsz	9,f
  7204  04FF  2CFE               	goto	u4447
  7205  0500  3200               	nop2
  7206  0501                     l3615:
  7207  0501  3030               	movlw	48
  7208  0502  3186  2607  3184   	fcall	_LCDsend
  7209  0505                     l3617:
  7210                           
  7211                           ;main.c: 161: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7212  0505  3008               	movlw	8
  7213  0506                     u4457:
  7214  0506  0B89               	decfsz	9,f
  7215  0507  2D06               	goto	u4457
  7216  0508  0000               	nop
  7217                           
  7218                           ;main.c: 162: LCDsend(0x20);
  7219  0509  3020               	movlw	32
  7220  050A  3186  2607  3184   	fcall	_LCDsend
  7221                           
  7222                           ;main.c: 163: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
  7223  050D  3024               	movlw	36
  7224  050E  3186  2607  3184   	fcall	_LCDsend
  7225  0511                     l3619:
  7226  0511  3029               	movlw	41
  7227  0512                     u4467:
  7228  0512  0B89               	decfsz	9,f
  7229  0513  2D12               	goto	u4467
  7230  0514  3200               	nop2
  7231  0515                     l3621:
  7232  0515  3020               	movlw	32
  7233  0516  3186  2607  3184   	fcall	_LCDsend
  7234                           
  7235                           ;main.c: 164: _delay((unsigned long)((5)*(1000000/4000.0)));
  7236  0519  30FA               	movlw	250
  7237  051A                     u4477:
  7238  051A  3200               	nop2
  7239  051B  0B89               	decfsz	9,f
  7240  051C  2D1A               	goto	u4477
  7241  051D                     l3623:
  7242                           
  7243                           ;main.c: 166: LCDsend2x4(0x28, 0);
  7244  051D  0021               	movlb	1	; select bank1
  7245  051E  01A2               	clrf	LCDsend2x4@mode^(0+128)
  7246  051F  3028               	movlw	40
  7247  0520  3181  21ED  3184   	fcall	_LCDsend2x4
  7248  0523                     l3625:
  7249                           
  7250                           ;main.c: 167: LCDsend2x4(0x06, 0);
  7251  0523  0021               	movlb	1	; select bank1
  7252  0524  01A2               	clrf	LCDsend2x4@mode^(0+128)
  7253  0525  3006               	movlw	6
  7254  0526  3181  21ED  3184   	fcall	_LCDsend2x4
  7255  0529                     l3627:
  7256                           
  7257                           ;main.c: 168: LCDsend2x4(0x0f, 0);
  7258  0529  0021               	movlb	1	; select bank1
  7259  052A  01A2               	clrf	LCDsend2x4@mode^(0+128)
  7260  052B  300F               	movlw	15
  7261  052C  3181  21ED  3184   	fcall	_LCDsend2x4
  7262  052F                     l3629:
  7263                           
  7264                           ;main.c: 169: LCDsend2x4(0x01, 0);
  7265  052F  0021               	movlb	1	; select bank1
  7266  0530  01A2               	clrf	LCDsend2x4@mode^(0+128)
  7267  0531  3001               	movlw	1
  7268  0532  3181  21ED  3184   	fcall	_LCDsend2x4
  7269                           
  7270                           ;main.c: 170: _delay((unsigned long)((2)*(1000000/4000.0)));
  7271  0535  30A6               	movlw	166
  7272  0536                     u4487:
  7273  0536  0B89               	decfsz	9,f
  7274  0537  2D36               	goto	u4487
  7275  0538  3200               	nop2
  7276  0539                     l600:
  7277  0539  0008               	return
  7278  053A                     __end_of_LCDinit:
  7279                           
  7280                           	psect	text13
  7281  01ED                     __ptext13:	
  7282 ;; *************** function _LCDsend2x4 *****************
  7283 ;; Defined at:
  7284 ;;		line 127 in file "main.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;  c               1    wreg     unsigned char 
  7287 ;;  mode            1    2[BANK1 ] unsigned char 
  7288 ;; Auto vars:     Size  Location     Type
  7289 ;;  c               1    5[BANK1 ] unsigned char 
  7290 ;;  lc              1    7[BANK1 ] unsigned char 
  7291 ;;  hc              1    6[BANK1 ] unsigned char 
  7292 ;; Return value:  Size  Location     Type
  7293 ;;                  1    wreg      void 
  7294 ;; Registers used:
  7295 ;;		wreg, status,2, status,0, pclath, cstack
  7296 ;; Tracked objects:
  7297 ;;		On entry : 0/0
  7298 ;;		On exit  : 0/0
  7299 ;;		Unchanged: 0/0
  7300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7301 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7302 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7303 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7304 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;Total ram usage:        6 bytes
  7306 ;; Hardware stack levels used:    1
  7307 ;; Hardware stack levels required when called:    8
  7308 ;; This function calls:
  7309 ;;		_WriteI2C
  7310 ;; This function is called by:
  7311 ;;		_LCDinit
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           
  7316                           ;psect for function _LCDsend2x4
  7317  01ED                     _LCDsend2x4:
  7318                           
  7319                           ;incstack = 0
  7320                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
  7321                           ;LCDsend2x4@c stored from wreg
  7322  01ED  0021               	movlb	1	; select bank1
  7323  01EE  00A5               	movwf	LCDsend2x4@c^(0+128)
  7324  01EF                     l3471:
  7325                           
  7326                           ;main.c: 129: unsigned char hc;;main.c: 130: unsigned char lc;;main.c: 132: hc = c & 0xf
      +                          0;
  7327  01EF  0825               	movf	LCDsend2x4@c^(0+128),w
  7328  01F0  39F0               	andlw	240
  7329  01F1  00A3               	movwf	??_LCDsend2x4^(0+128)
  7330  01F2  0823               	movf	??_LCDsend2x4^(0+128),w
  7331  01F3  00A6               	movwf	LCDsend2x4@hc^(0+128)
  7332  01F4                     l3473:
  7333                           
  7334                           ;main.c: 133: lc = (c << 4) & 0xf0;
  7335  01F4  0825               	movf	LCDsend2x4@c^(0+128),w
  7336  01F5  00A3               	movwf	??_LCDsend2x4^(0+128)
  7337  01F6  3003               	movlw	3
  7338  01F7                     u3725:
  7339  01F7  35A3               	lslf	??_LCDsend2x4^(0+128),f
  7340  01F8  3EFF               	addlw	-1
  7341  01F9  1D03               	skipz
  7342  01FA  29F7               	goto	u3725
  7343  01FB  3523               	lslf	??_LCDsend2x4^(0+128),w
  7344  01FC  39F0               	andlw	240
  7345  01FD  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
  7346  01FE  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
  7347  01FF  00A7               	movwf	LCDsend2x4@lc^(0+128)
  7348  0200                     l3475:	
  7349                           ;main.c: 135: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7350                           
  7351  0200  0023               	movlb	3	; select bank3
  7352  0201  0C0F               	rrf	15,w	;volatile
  7353  0202  0C89               	rrf	9,f
  7354  0203  3901               	andlw	1
  7355  0204  0021               	movlb	1	; select bank1
  7356  0205  00A3               	movwf	??_LCDsend2x4^(0+128)
  7357  0206  0023               	movlb	3	; select bank3
  7358  0207  0811               	movf	17,w	;volatile
  7359  0208  391F               	andlw	31
  7360  0209  0021               	movlb	1	; select bank1
  7361  020A  0423               	iorwf	??_LCDsend2x4^(0+128),w
  7362  020B  1D03               	btfss	3,2
  7363  020C  2A0E               	goto	u3731
  7364  020D  2A0F               	goto	u3730
  7365  020E                     u3731:
  7366  020E  2A00               	goto	l3475
  7367  020F                     u3730:
  7368  020F                     l566:
  7369                           
  7370                           ;main.c: 136: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  7371  020F  0023               	movlb	3	; select bank3
  7372  0210  1411               	bsf	17,0	;volatile
  7373  0211                     l567:
  7374  0211  1811               	btfsc	17,0	;volatile
  7375  0212  2A14               	goto	u3741
  7376  0213  2A15               	goto	u3740
  7377  0214                     u3741:
  7378  0214  2A11               	goto	l567
  7379  0215                     u3740:
  7380  0215                     l3477:
  7381  0215  0023               	movlb	3	; select bank3
  7382  0216  0C0F               	rrf	15,w	;volatile
  7383  0217  0C89               	rrf	9,f
  7384  0218  3901               	andlw	1
  7385  0219  0021               	movlb	1	; select bank1
  7386  021A  00A3               	movwf	??_LCDsend2x4^(0+128)
  7387  021B  0023               	movlb	3	; select bank3
  7388  021C  0811               	movf	17,w	;volatile
  7389  021D  391F               	andlw	31
  7390  021E  0021               	movlb	1	; select bank1
  7391  021F  0423               	iorwf	??_LCDsend2x4^(0+128),w
  7392  0220  1D03               	btfss	3,2
  7393  0221  2A23               	goto	u3751
  7394  0222  2A24               	goto	u3750
  7395  0223                     u3751:
  7396  0223  2A15               	goto	l3477
  7397  0224                     u3750:
  7398  0224                     l3479:
  7399                           
  7400                           ;main.c: 137: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7401  0224  304E               	movlw	78
  7402  0225  3185  25AD  3181   	fcall	_WriteI2C
  7403  0228                     l3481:
  7404  0228  0023               	movlb	3	; select bank3
  7405  0229  0C0F               	rrf	15,w	;volatile
  7406  022A  0C89               	rrf	9,f
  7407  022B  3901               	andlw	1
  7408  022C  0021               	movlb	1	; select bank1
  7409  022D  00A3               	movwf	??_LCDsend2x4^(0+128)
  7410  022E  0023               	movlb	3	; select bank3
  7411  022F  0811               	movf	17,w	;volatile
  7412  0230  391F               	andlw	31
  7413  0231  0021               	movlb	1	; select bank1
  7414  0232  0423               	iorwf	??_LCDsend2x4^(0+128),w
  7415  0233  1D03               	btfss	3,2
  7416  0234  2A36               	goto	u3761
  7417  0235  2A37               	goto	u3760
  7418  0236                     u3761:
  7419  0236  2A28               	goto	l3481
  7420  0237                     u3760:
  7421  0237                     l3483:
  7422                           
  7423                           ;main.c: 138: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7424  0237  0826               	movf	LCDsend2x4@hc^(0+128),w
  7425  0238  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  7426  0239  3808               	iorlw	8
  7427  023A  3185  25AD  3181   	fcall	_WriteI2C
  7428  023D                     l3485:
  7429  023D  0023               	movlb	3	; select bank3
  7430  023E  0C0F               	rrf	15,w	;volatile
  7431  023F  0C89               	rrf	9,f
  7432  0240  3901               	andlw	1
  7433  0241  0021               	movlb	1	; select bank1
  7434  0242  00A3               	movwf	??_LCDsend2x4^(0+128)
  7435  0243  0023               	movlb	3	; select bank3
  7436  0244  0811               	movf	17,w	;volatile
  7437  0245  391F               	andlw	31
  7438  0246  0021               	movlb	1	; select bank1
  7439  0247  0423               	iorwf	??_LCDsend2x4^(0+128),w
  7440  0248  1D03               	btfss	3,2
  7441  0249  2A4B               	goto	u3771
  7442  024A  2A4C               	goto	u3770
  7443  024B                     u3771:
  7444  024B  2A3D               	goto	l3485
  7445  024C                     u3770:
  7446  024C                     l3487:
  7447                           
  7448                           ;main.c: 139: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  7449  024C  0826               	movf	LCDsend2x4@hc^(0+128),w
  7450  024D  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  7451  024E  380C               	iorlw	12
  7452  024F  3185  25AD  3181   	fcall	_WriteI2C
  7453  0252                     l3489:
  7454  0252  0023               	movlb	3	; select bank3
  7455  0253  0C0F               	rrf	15,w	;volatile
  7456  0254  0C89               	rrf	9,f
  7457  0255  3901               	andlw	1
  7458  0256  0021               	movlb	1	; select bank1
  7459  0257  00A3               	movwf	??_LCDsend2x4^(0+128)
  7460  0258  0023               	movlb	3	; select bank3
  7461  0259  0811               	movf	17,w	;volatile
  7462  025A  391F               	andlw	31
  7463  025B  0021               	movlb	1	; select bank1
  7464  025C  0423               	iorwf	??_LCDsend2x4^(0+128),w
  7465  025D  1D03               	btfss	3,2
  7466  025E  2A60               	goto	u3781
  7467  025F  2A61               	goto	u3780
  7468  0260                     u3781:
  7469  0260  2A52               	goto	l3489
  7470  0261                     u3780:
  7471  0261                     l581:
  7472  0261                     l3491:	
  7473                           ;main.c: 140: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7474                           
  7475                           
  7476                           ;main.c: 141: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7477  0261  0021               	movlb	1	; select bank1
  7478  0262  0826               	movf	LCDsend2x4@hc^(0+128),w
  7479  0263  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  7480  0264  3808               	iorlw	8
  7481  0265  3185  25AD  3181   	fcall	_WriteI2C
  7482  0268                     l3493:
  7483  0268  0023               	movlb	3	; select bank3
  7484  0269  0C0F               	rrf	15,w	;volatile
  7485  026A  0C89               	rrf	9,f
  7486  026B  3901               	andlw	1
  7487  026C  0021               	movlb	1	; select bank1
  7488  026D  00A3               	movwf	??_LCDsend2x4^(0+128)
  7489  026E  0023               	movlb	3	; select bank3
  7490  026F  0811               	movf	17,w	;volatile
  7491  0270  391F               	andlw	31
  7492  0271  0021               	movlb	1	; select bank1
  7493  0272  0423               	iorwf	??_LCDsend2x4^(0+128),w
  7494  0273  1D03               	btfss	3,2
  7495  0274  2A76               	goto	u3791
  7496  0275  2A77               	goto	u3790
  7497  0276                     u3791:
  7498  0276  2A68               	goto	l3493
  7499  0277                     u3790:
  7500  0277                     l3495:
  7501                           
  7502                           ;main.c: 142: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7503  0277  0827               	movf	LCDsend2x4@lc^(0+128),w
  7504  0278  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  7505  0279  3808               	iorlw	8
  7506  027A  3185  25AD  3181   	fcall	_WriteI2C
  7507  027D                     l3497:
  7508  027D  0023               	movlb	3	; select bank3
  7509  027E  0C0F               	rrf	15,w	;volatile
  7510  027F  0C89               	rrf	9,f
  7511  0280  3901               	andlw	1
  7512  0281  0021               	movlb	1	; select bank1
  7513  0282  00A3               	movwf	??_LCDsend2x4^(0+128)
  7514  0283  0023               	movlb	3	; select bank3
  7515  0284  0811               	movf	17,w	;volatile
  7516  0285  391F               	andlw	31
  7517  0286  0021               	movlb	1	; select bank1
  7518  0287  0423               	iorwf	??_LCDsend2x4^(0+128),w
  7519  0288  1D03               	btfss	3,2
  7520  0289  2A8B               	goto	u3801
  7521  028A  2A8C               	goto	u3800
  7522  028B                     u3801:
  7523  028B  2A7D               	goto	l3497
  7524  028C                     u3800:
  7525  028C                     l3499:
  7526                           
  7527                           ;main.c: 143: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  7528  028C  0827               	movf	LCDsend2x4@lc^(0+128),w
  7529  028D  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  7530  028E  380C               	iorlw	12
  7531  028F  3185  25AD  3181   	fcall	_WriteI2C
  7532  0292                     l3501:
  7533  0292  0023               	movlb	3	; select bank3
  7534  0293  0C0F               	rrf	15,w	;volatile
  7535  0294  0C89               	rrf	9,f
  7536  0295  3901               	andlw	1
  7537  0296  0021               	movlb	1	; select bank1
  7538  0297  00A3               	movwf	??_LCDsend2x4^(0+128)
  7539  0298  0023               	movlb	3	; select bank3
  7540  0299  0811               	movf	17,w	;volatile
  7541  029A  391F               	andlw	31
  7542  029B  0021               	movlb	1	; select bank1
  7543  029C  0423               	iorwf	??_LCDsend2x4^(0+128),w
  7544  029D  1D03               	btfss	3,2
  7545  029E  2AA0               	goto	u3811
  7546  029F  2AA1               	goto	u3810
  7547  02A0                     u3811:
  7548  02A0  2A92               	goto	l3501
  7549  02A1                     u3810:
  7550  02A1                     l590:
  7551  02A1                     l3503:	
  7552                           ;main.c: 144: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7553                           
  7554                           
  7555                           ;main.c: 145: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7556  02A1  0021               	movlb	1	; select bank1
  7557  02A2  0827               	movf	LCDsend2x4@lc^(0+128),w
  7558  02A3  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  7559  02A4  3808               	iorlw	8
  7560  02A5  3185  25AD  3181   	fcall	_WriteI2C
  7561  02A8                     l3505:
  7562  02A8  0023               	movlb	3	; select bank3
  7563  02A9  0C0F               	rrf	15,w	;volatile
  7564  02AA  0C89               	rrf	9,f
  7565  02AB  3901               	andlw	1
  7566  02AC  0021               	movlb	1	; select bank1
  7567  02AD  00A3               	movwf	??_LCDsend2x4^(0+128)
  7568  02AE  0023               	movlb	3	; select bank3
  7569  02AF  0811               	movf	17,w	;volatile
  7570  02B0  391F               	andlw	31
  7571  02B1  0021               	movlb	1	; select bank1
  7572  02B2  0423               	iorwf	??_LCDsend2x4^(0+128),w
  7573  02B3  1D03               	btfss	3,2
  7574  02B4  2AB6               	goto	u3821
  7575  02B5  2AB7               	goto	u3820
  7576  02B6                     u3821:
  7577  02B6  2AA8               	goto	l3505
  7578  02B7                     u3820:
  7579  02B7                     l593:
  7580                           
  7581                           ;main.c: 146: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  7582  02B7  0023               	movlb	3	; select bank3
  7583  02B8  1511               	bsf	17,2	;volatile
  7584  02B9                     l594:
  7585  02B9  1911               	btfsc	17,2	;volatile
  7586  02BA  2ABC               	goto	u3831
  7587  02BB  2ABD               	goto	u3830
  7588  02BC                     u3831:
  7589  02BC  2AB9               	goto	l594
  7590  02BD                     u3830:
  7591  02BD                     l3507:
  7592                           
  7593                           ;main.c: 147: _delay((unsigned long)((50)*(1000000/4000000.0)));
  7594  02BD  3004               	movlw	4
  7595  02BE                     u4497:
  7596  02BE  0B89               	decfsz	9,f
  7597  02BF  2ABE               	goto	u4497
  7598  02C0                     l597:
  7599  02C0  0008               	return
  7600  02C1                     __end_of_LCDsend2x4:
  7601                           
  7602                           	psect	text14
  7603  0607                     __ptext14:	
  7604 ;; *************** function _LCDsend *****************
  7605 ;; Defined at:
  7606 ;;		line 88 in file "main.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;  c               1    wreg     unsigned char 
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;  c               1    3[BANK1 ] unsigned char 
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  1    wreg      void 
  7613 ;; Registers used:
  7614 ;;		wreg, status,2, status,0, pclath, cstack
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;Total ram usage:        2 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:    8
  7627 ;; This function calls:
  7628 ;;		_WriteI2C
  7629 ;; This function is called by:
  7630 ;;		_LCDinit
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           
  7635                           ;psect for function _LCDsend
  7636  0607                     _LCDsend:
  7637                           
  7638                           ;incstack = 0
  7639                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
  7640                           ;LCDsend@c stored from wreg
  7641  0607  0021               	movlb	1	; select bank1
  7642  0608  00A3               	movwf	LCDsend@c^(0+128)
  7643  0609                     l3457:
  7644  0609                     l3459:	
  7645                           ;main.c: 90: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7646                           
  7647  0609  0023               	movlb	3	; select bank3
  7648  060A  0C0F               	rrf	15,w	;volatile
  7649  060B  0C89               	rrf	9,f
  7650  060C  3901               	andlw	1
  7651  060D  0021               	movlb	1	; select bank1
  7652  060E  00A2               	movwf	??_LCDsend^(0+128)
  7653  060F  0023               	movlb	3	; select bank3
  7654  0610  0811               	movf	17,w	;volatile
  7655  0611  391F               	andlw	31
  7656  0612  0021               	movlb	1	; select bank1
  7657  0613  0422               	iorwf	??_LCDsend^(0+128),w
  7658  0614  1D03               	btfss	3,2
  7659  0615  2E17               	goto	u3661
  7660  0616  2E18               	goto	u3660
  7661  0617                     u3661:
  7662  0617  2E09               	goto	l3459
  7663  0618                     u3660:
  7664  0618                     l464:
  7665                           
  7666                           ;main.c: 91: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  7667  0618  0023               	movlb	3	; select bank3
  7668  0619  1411               	bsf	17,0	;volatile
  7669  061A                     l465:
  7670  061A  1811               	btfsc	17,0	;volatile
  7671  061B  2E1D               	goto	u3671
  7672  061C  2E1E               	goto	u3670
  7673  061D                     u3671:
  7674  061D  2E1A               	goto	l465
  7675  061E                     u3670:
  7676  061E                     l3461:
  7677  061E  0023               	movlb	3	; select bank3
  7678  061F  0C0F               	rrf	15,w	;volatile
  7679  0620  0C89               	rrf	9,f
  7680  0621  3901               	andlw	1
  7681  0622  0021               	movlb	1	; select bank1
  7682  0623  00A2               	movwf	??_LCDsend^(0+128)
  7683  0624  0023               	movlb	3	; select bank3
  7684  0625  0811               	movf	17,w	;volatile
  7685  0626  391F               	andlw	31
  7686  0627  0021               	movlb	1	; select bank1
  7687  0628  0422               	iorwf	??_LCDsend^(0+128),w
  7688  0629  1D03               	btfss	3,2
  7689  062A  2E2C               	goto	u3681
  7690  062B  2E2D               	goto	u3680
  7691  062C                     u3681:
  7692  062C  2E1E               	goto	l3461
  7693  062D                     u3680:
  7694  062D                     l3463:
  7695                           
  7696                           ;main.c: 92: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7697  062D  304E               	movlw	78
  7698  062E  3185  25AD  3186   	fcall	_WriteI2C
  7699  0631                     l3465:
  7700  0631  0023               	movlb	3	; select bank3
  7701  0632  0C0F               	rrf	15,w	;volatile
  7702  0633  0C89               	rrf	9,f
  7703  0634  3901               	andlw	1
  7704  0635  0021               	movlb	1	; select bank1
  7705  0636  00A2               	movwf	??_LCDsend^(0+128)
  7706  0637  0023               	movlb	3	; select bank3
  7707  0638  0811               	movf	17,w	;volatile
  7708  0639  391F               	andlw	31
  7709  063A  0021               	movlb	1	; select bank1
  7710  063B  0422               	iorwf	??_LCDsend^(0+128),w
  7711  063C  1D03               	btfss	3,2
  7712  063D  2E3F               	goto	u3691
  7713  063E  2E40               	goto	u3690
  7714  063F                     u3691:
  7715  063F  2E31               	goto	l3465
  7716  0640                     u3690:
  7717  0640                     l3467:
  7718                           
  7719                           ;main.c: 93: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7720  0640  0823               	movf	LCDsend@c^(0+128),w
  7721  0641  3185  25AD  3186   	fcall	_WriteI2C
  7722  0644                     l3469:
  7723  0644  0023               	movlb	3	; select bank3
  7724  0645  0C0F               	rrf	15,w	;volatile
  7725  0646  0C89               	rrf	9,f
  7726  0647  3901               	andlw	1
  7727  0648  0021               	movlb	1	; select bank1
  7728  0649  00A2               	movwf	??_LCDsend^(0+128)
  7729  064A  0023               	movlb	3	; select bank3
  7730  064B  0811               	movf	17,w	;volatile
  7731  064C  391F               	andlw	31
  7732  064D  0021               	movlb	1	; select bank1
  7733  064E  0422               	iorwf	??_LCDsend^(0+128),w
  7734  064F  1D03               	btfss	3,2
  7735  0650  2E52               	goto	u3701
  7736  0651  2E53               	goto	u3700
  7737  0652                     u3701:
  7738  0652  2E44               	goto	l3469
  7739  0653                     u3700:
  7740  0653                     l476:
  7741                           
  7742                           ;main.c: 94: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  7743  0653  0023               	movlb	3	; select bank3
  7744  0654  1511               	bsf	17,2	;volatile
  7745  0655                     l477:
  7746  0655  1911               	btfsc	17,2	;volatile
  7747  0656  2E58               	goto	u3711
  7748  0657  2E59               	goto	u3710
  7749  0658                     u3711:
  7750  0658  2E55               	goto	l477
  7751  0659                     u3710:
  7752  0659                     l480:
  7753  0659  0008               	return
  7754  065A                     __end_of_LCDsend:
  7755                           
  7756                           	psect	text15
  7757  05AD                     __ptext15:	
  7758 ;; *************** function _WriteI2C *****************
  7759 ;; Defined at:
  7760 ;;		line 47 in file "I2C/i2c.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  data_out        1    wreg     unsigned char 
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;  data_out        1    1[BANK1 ] unsigned char 
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  1    wreg      char 
  7767 ;; Registers used:
  7768 ;;		wreg, status,2, status,0
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7775 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7776 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7777 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;Total ram usage:        2 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; Hardware stack levels required when called:    7
  7781 ;; This function calls:
  7782 ;;		Nothing
  7783 ;; This function is called by:
  7784 ;;		_LCDsend
  7785 ;;		_LCDsend2x4
  7786 ;;		_tsttc
  7787 ;;		_LCDrecv
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           
  7792                           ;psect for function _WriteI2C
  7793  05AD                     _WriteI2C:
  7794                           
  7795                           ;incstack = 0
  7796                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
  7797                           ;WriteI2C@data_out stored from wreg
  7798  05AD  0021               	movlb	1	; select bank1
  7799  05AE  00A1               	movwf	WriteI2C@data_out^(0+128)
  7800  05AF                     l3337:
  7801                           
  7802                           ;i2c.c: 49: SSP1BUF = data_out;
  7803  05AF  0821               	movf	WriteI2C@data_out^(0+128),w
  7804  05B0  0023               	movlb	3	; select bank3
  7805  05B1  008C               	movwf	12	;volatile
  7806  05B2                     l3339:
  7807                           
  7808                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
  7809  05B2  1F90               	btfss	16,7	;volatile
  7810  05B3  2DB5               	goto	u3571
  7811  05B4  2DB6               	goto	u3570
  7812  05B5                     u3571:
  7813  05B5  2DB7               	goto	l3345
  7814  05B6                     u3570:
  7815  05B6  2E06               	goto	l30
  7816  05B7                     l3345:
  7817                           
  7818                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
  7819  05B7  300F               	movlw	15
  7820  05B8  0510               	andwf	16,w	;volatile
  7821  05B9  0021               	movlb	1	; select bank1
  7822  05BA  00A0               	movwf	??_WriteI2C^(0+128)
  7823  05BB  3008               	movlw	8
  7824  05BC  0620               	xorwf	??_WriteI2C^(0+128),w
  7825  05BD  1903               	btfsc	3,2
  7826  05BE  2DC0               	goto	u3581
  7827  05BF  2DC1               	goto	u3580
  7828  05C0                     u3581:
  7829  05C0  2DDA               	goto	l3357
  7830  05C1                     u3580:
  7831  05C1                     l3347:
  7832  05C1  300F               	movlw	15
  7833  05C2  0023               	movlb	3	; select bank3
  7834  05C3  0510               	andwf	16,w	;volatile
  7835  05C4  0021               	movlb	1	; select bank1
  7836  05C5  00A0               	movwf	??_WriteI2C^(0+128)
  7837  05C6  300B               	movlw	11
  7838  05C7  0620               	xorwf	??_WriteI2C^(0+128),w
  7839  05C8  1903               	btfsc	3,2
  7840  05C9  2DCB               	goto	u3591
  7841  05CA  2DCC               	goto	u3590
  7842  05CB                     u3591:
  7843  05CB  2DDA               	goto	l3357
  7844  05CC                     u3590:
  7845  05CC                     l3349:
  7846                           
  7847                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
  7848  05CC  0023               	movlb	3	; select bank3
  7849  05CD  1610               	bsf	16,4	;volatile
  7850  05CE                     l33:	
  7851                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
  7852                           
  7853  05CE  002E               	movlb	14	; select bank14
  7854  05CF  1C0F               	btfss	15,0	;volatile
  7855  05D0  2DD2               	goto	u3601
  7856  05D1  2DD3               	goto	u3600
  7857  05D2                     u3601:
  7858  05D2  2DCE               	goto	l33
  7859  05D3                     u3600:
  7860  05D3                     l35:
  7861                           
  7862                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
  7863  05D3  0023               	movlb	3	; select bank3
  7864  05D4  190F               	btfsc	15,2	;volatile
  7865  05D5  2DD7               	goto	u3611
  7866  05D6  2DD8               	goto	u3610
  7867  05D7                     u3611:
  7868  05D7  2E06               	goto	l30
  7869  05D8                     u3610:
  7870  05D8                     l3351:
  7871  05D8  080F               	movf	15,w	;volatile
  7872  05D9  2E06               	goto	l30
  7873  05DA                     l3357:
  7874                           
  7875                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  7876  05DA  300F               	movlw	15
  7877  05DB  0023               	movlb	3	; select bank3
  7878  05DC  0510               	andwf	16,w	;volatile
  7879  05DD  0021               	movlb	1	; select bank1
  7880  05DE  00A0               	movwf	??_WriteI2C^(0+128)
  7881  05DF  3008               	movlw	8
  7882  05E0  0620               	xorwf	??_WriteI2C^(0+128),w
  7883  05E1  1903               	btfsc	3,2
  7884  05E2  2DE4               	goto	u3621
  7885  05E3  2DE5               	goto	u3620
  7886  05E4                     u3621:
  7887  05E4  2DF0               	goto	l42
  7888  05E5                     u3620:
  7889  05E5                     l3359:
  7890  05E5  300F               	movlw	15
  7891  05E6  0023               	movlb	3	; select bank3
  7892  05E7  0510               	andwf	16,w	;volatile
  7893  05E8  0021               	movlb	1	; select bank1
  7894  05E9  00A0               	movwf	??_WriteI2C^(0+128)
  7895  05EA  300B               	movlw	11
  7896  05EB  0620               	xorwf	??_WriteI2C^(0+128),w
  7897  05EC  1D03               	btfss	3,2
  7898  05ED  2DEF               	goto	u3631
  7899  05EE  2DF0               	goto	u3630
  7900  05EF                     u3631:
  7901  05EF  2E06               	goto	l30
  7902  05F0                     u3630:
  7903  05F0                     l42:
  7904  05F0  0023               	movlb	3	; select bank3
  7905  05F1  180F               	btfsc	15,0	;volatile
  7906  05F2  2DF4               	goto	u3641
  7907  05F3  2DF5               	goto	u3640
  7908  05F4                     u3641:
  7909  05F4  2DF0               	goto	l42
  7910  05F5                     u3640:
  7911  05F5                     l3361:
  7912  05F5  0023               	movlb	3	; select bank3
  7913  05F6  0C0F               	rrf	15,w	;volatile
  7914  05F7  0C89               	rrf	9,f
  7915  05F8  3901               	andlw	1
  7916  05F9  0021               	movlb	1	; select bank1
  7917  05FA  00A0               	movwf	??_WriteI2C^(0+128)
  7918  05FB  0023               	movlb	3	; select bank3
  7919  05FC  0811               	movf	17,w	;volatile
  7920  05FD  391F               	andlw	31
  7921  05FE  0021               	movlb	1	; select bank1
  7922  05FF  0420               	iorwf	??_WriteI2C^(0+128),w
  7923  0600  1D03               	btfss	3,2
  7924  0601  2E03               	goto	u3651
  7925  0602  2E04               	goto	u3650
  7926  0603                     u3651:
  7927  0603  2DF5               	goto	l3361
  7928  0604                     u3650:
  7929  0604                     l47:
  7930                           
  7931                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
  7932  0604  0023               	movlb	3	; select bank3
  7933  0605  0811               	movf	17,w	;volatile
  7934  0606                     l30:
  7935  0606  0008               	return
  7936  0607                     __end_of_WriteI2C:
  7937                           
  7938                           	psect	intentry
  7939  0004                     __pintentry:	
  7940 ;; *************** function _INTERRUPT_InterruptManager *****************
  7941 ;; Defined at:
  7942 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;		None
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;		None
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  1    wreg      void 
  7949 ;; Registers used:
  7950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7960 ;;Total ram usage:        0 bytes
  7961 ;; Hardware stack levels used:    1
  7962 ;; Hardware stack levels required when called:    6
  7963 ;; This function calls:
  7964 ;;		_TMR1_ISR
  7965 ;;		_TMR3_ISR
  7966 ;; This function is called by:
  7967 ;;		Interrupt level 1
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971  0004                     _INTERRUPT_InterruptManager:
  7972                           
  7973                           ;incstack = 0
  7974  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7975                           
  7976                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7977  0005  3180               	pagesel	$
  7978  0006                     i1l3233:
  7979                           
  7980                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  7981  0006  1F0B               	btfss	11,6	;volatile
  7982  0007  2809               	goto	u322_21
  7983  0008  280A               	goto	u322_20
  7984  0009                     u322_21:
  7985  0009  2832               	goto	i1l342
  7986  000A                     u322_20:
  7987  000A                     i1l3235:
  7988                           
  7989                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE4bits.TMR3IE == 1 && PIR4bits
      +                          .TMR3IF == 1)
  7990  000A  002E               	movlb	14	; select bank14
  7991  000B  1D1A               	btfss	26,2	;volatile
  7992  000C  280E               	goto	u323_21
  7993  000D  280F               	goto	u323_20
  7994  000E                     u323_21:
  7995  000E  2817               	goto	i1l333
  7996  000F                     u323_20:
  7997  000F                     i1l3237:
  7998  000F  1D10               	btfss	16,2	;volatile
  7999  0010  2812               	goto	u324_21
  8000  0011  2813               	goto	u324_20
  8001  0012                     u324_21:
  8002  0012  2817               	goto	i1l333
  8003  0013                     u324_20:
  8004  0013                     i1l3239:
  8005                           
  8006                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR3_ISR();
  8007  0013  318F  2771  3180   	fcall	_TMR3_ISR
  8008                           
  8009                           ;interrupt_manager.c: 60: }
  8010  0016  2832               	goto	i1l342
  8011  0017                     i1l333:
  8012                           
  8013                           ;interrupt_manager.c: 61: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
  8014  0017  1C1A               	btfss	26,0	;volatile
  8015  0018  281A               	goto	u325_21
  8016  0019  281B               	goto	u325_20
  8017  001A                     u325_21:
  8018  001A  2823               	goto	i1l335
  8019  001B                     u325_20:
  8020  001B                     i1l3241:
  8021  001B  1C10               	btfss	16,0	;volatile
  8022  001C  281E               	goto	u326_21
  8023  001D  281F               	goto	u326_20
  8024  001E                     u326_21:
  8025  001E  2823               	goto	i1l335
  8026  001F                     u326_20:
  8027  001F                     i1l3243:
  8028                           
  8029                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR1_ISR();
  8030  001F  318F  275A  3180   	fcall	_TMR1_ISR
  8031                           
  8032                           ;interrupt_manager.c: 64: }
  8033  0022  2832               	goto	i1l342
  8034  0023                     i1l335:
  8035                           
  8036                           ;interrupt_manager.c: 65: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  8037  0023  1C99               	btfss	25,1	;volatile
  8038  0024  2826               	goto	u327_21
  8039  0025  2827               	goto	u327_20
  8040  0026                     u327_21:
  8041  0026  282C               	goto	i1l337
  8042  0027                     u327_20:
  8043  0027                     i1l3245:
  8044                           
  8045                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: i2c1_driver_busCollisionISR();
  8046  0027  1C8F               	btfss	15,1	;volatile
  8047  0028  282A               	goto	u328_21
  8048  0029  282B               	goto	u328_20
  8049  002A                     u328_21:
  8050  002A  282C               	goto	i1l337
  8051  002B                     u328_20:
  8052  002B  2832               	goto	i1l342
  8053  002C                     i1l337:
  8054                           
  8055                           ;interrupt_manager.c: 69: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  8056  002C  1C19               	btfss	25,0	;volatile
  8057  002D  282F               	goto	u329_21
  8058  002E  2830               	goto	u329_20
  8059  002F                     u329_21:
  8060  002F  2832               	goto	i1l336
  8061  0030                     u329_20:
  8062  0030                     i1l3249:
  8063                           
  8064                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_i2cISR();
  8065  0030  080F               	movf	15,w	;volatile
  8066  0031  2832               	goto	i1l342
  8067  0032                     i1l336:
  8068  0032                     i1l342:
  8069  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8070  0033  0009               	retfie
  8071  0034                     __end_of_INTERRUPT_InterruptManager:
  8072                           
  8073                           	psect	text17
  8074  0F71                     __ptext17:	
  8075 ;; *************** function _TMR3_ISR *****************
  8076 ;; Defined at:
  8077 ;;		line 164 in file "mcc_generated_files/tmr3.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;		None
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;		None
  8082 ;; Return value:  Size  Location     Type
  8083 ;;                  1    wreg      void 
  8084 ;; Registers used:
  8085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8086 ;; Tracked objects:
  8087 ;;		On entry : 0/0
  8088 ;;		On exit  : 0/0
  8089 ;;		Unchanged: 0/0
  8090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8095 ;;Total ram usage:        0 bytes
  8096 ;; Hardware stack levels used:    1
  8097 ;; Hardware stack levels required when called:    5
  8098 ;; This function calls:
  8099 ;;		Absolute function
  8100 ;;		_TMR3_DefaultInterruptHandler
  8101 ;;		_TMR3_WriteTimer
  8102 ;;		_menuLCD_ISR
  8103 ;; This function is called by:
  8104 ;;		_INTERRUPT_InterruptManager
  8105 ;; This function uses a non-reentrant model
  8106 ;;
  8107                           
  8108                           
  8109                           ;psect for function _TMR3_ISR
  8110  0F71                     _TMR3_ISR:
  8111  0F71                     i1l3057:	
  8112                           ;incstack = 0
  8113                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8114                           
  8115                           
  8116                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
  8117  0F71  002E               	movlb	14	; select bank14
  8118  0F72  1110               	bcf	16,2	;volatile
  8119  0F73                     i1l3059:
  8120                           
  8121                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
  8122  0F73  0020               	movlb	0	; select bank0
  8123  0F74  0854               	movf	_timer3ReloadVal+1,w	;volatile
  8124  0F75  00F1               	movwf	TMR3_WriteTimer@timerVal+1
  8125  0F76  0853               	movf	_timer3ReloadVal,w	;volatile
  8126  0F77  00F0               	movwf	TMR3_WriteTimer@timerVal
  8127  0F78  318F  2737  318F   	fcall	_TMR3_WriteTimer
  8128  0F7B                     i1l3061:
  8129                           
  8130                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
  8131  0F7B  0020               	movlb	0	; select bank0
  8132  0F7C  0851               	movf	_TMR3_InterruptHandler,w
  8133  0F7D  0452               	iorwf	_TMR3_InterruptHandler+1,w
  8134  0F7E  1903               	btfsc	3,2
  8135  0F7F  2F81               	goto	u276_21
  8136  0F80  2F82               	goto	u276_20
  8137  0F81                     u276_21:
  8138  0F81  2F87               	goto	i1l770
  8139  0F82                     u276_20:
  8140  0F82                     i1l3063:
  8141                           
  8142                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
  8143  0F82  0852               	movf	_TMR3_InterruptHandler+1,w
  8144  0F83  008A               	movwf	10
  8145  0F84  0851               	movf	_TMR3_InterruptHandler,w
  8146  0F85  000A               	callw
  8147  0F86  318F               	pagesel	$
  8148  0F87                     i1l770:
  8149  0F87  0008               	return
  8150  0F88                     __end_of_TMR3_ISR:
  8151                           
  8152                           	psect	text18
  8153  07FE                     __ptext18:	
  8154 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  8155 ;; Defined at:
  8156 ;;		line 182 in file "mcc_generated_files/tmr3.c"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;		None
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;		None
  8161 ;; Return value:  Size  Location     Type
  8162 ;;                  1    wreg      void 
  8163 ;; Registers used:
  8164 ;;		None
  8165 ;; Tracked objects:
  8166 ;;		On entry : 0/0
  8167 ;;		On exit  : 0/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8174 ;;Total ram usage:        0 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; This function calls:
  8177 ;;		Nothing
  8178 ;; This function is called by:
  8179 ;;		_TMR3_Initialize
  8180 ;;		_TMR3_ISR
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           
  8185                           ;psect for function _TMR3_DefaultInterruptHandler
  8186  07FE                     _TMR3_DefaultInterruptHandler:
  8187  07FE                     i1l776:	
  8188                           ;incstack = 0
  8189                           ; Regs used in _TMR3_DefaultInterruptHandler: []
  8190                           
  8191  07FE  0008               	return
  8192  07FF                     __end_of_TMR3_DefaultInterruptHandler:
  8193                           
  8194                           	psect	text19
  8195  053A                     __ptext19:	
  8196 ;; *************** function _menuLCD_ISR *****************
  8197 ;; Defined at:
  8198 ;;		line 235 in file "main.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;		None
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;  str             8   21[BANK0 ] unsigned char [8]
  8203 ;;  tt              4   29[BANK0 ] unsigned char [4]
  8204 ;;  ll              3   33[BANK0 ] unsigned char [3]
  8205 ;;  aux             2    0        int 
  8206 ;;  l               1   38[BANK0 ] unsigned char [1]
  8207 ;; Return value:  Size  Location     Type
  8208 ;;                  1    wreg      void 
  8209 ;; Registers used:
  8210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8217 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8220 ;;Total ram usage:       18 bytes
  8221 ;; Hardware stack levels used:    1
  8222 ;; Hardware stack levels required when called:    4
  8223 ;; This function calls:
  8224 ;;		_LCDcmd
  8225 ;;		_LCDstr
  8226 ;;		_sprintf
  8227 ;;		_strcat
  8228 ;; This function is called by:
  8229 ;;		_main
  8230 ;;		_TMR3_ISR
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           
  8235                           ;psect for function _menuLCD_ISR
  8236  053A                     _menuLCD_ISR:
  8237  053A                     i1l2975:	
  8238                           ;incstack = 0
  8239                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8240                           
  8241                           
  8242                           ;main.c: 236: char str[8];;main.c: 237: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
  8243  053A  3000               	movlw	low (STR_1| (0+32768))
  8244  053B  0020               	movlb	0	; select bank0
  8245  053C  00A0               	movwf	sprintf@f
  8246  053D  3090               	movlw	high (STR_1| (0+32768))
  8247  053E  00A1               	movwf	sprintf@f+1
  8248  053F  0848               	movf	_t+1,w
  8249  0540  00A3               	movwf	?_sprintf+3
  8250  0541  0847               	movf	_t,w
  8251  0542  00A2               	movwf	?_sprintf+2
  8252  0543  084A               	movf	_t+3,w
  8253  0544  00A5               	movwf	?_sprintf+5
  8254  0545  0849               	movf	_t+2,w
  8255  0546  00A4               	movwf	?_sprintf+4
  8256  0547  084C               	movf	_t+5,w
  8257  0548  00A7               	movwf	?_sprintf+7
  8258  0549  084B               	movf	_t+4,w
  8259  054A  00A6               	movwf	?_sprintf+6
  8260  054B  3035               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
  8261  054C  3180  2050  3185   	fcall	_sprintf
  8262  054F                     i1l2977:
  8263                           
  8264                           ;main.c: 239: LCDcmd(0x80);
  8265  054F  3080               	movlw	128
  8266  0550  318E  26DD  3185   	fcall	_LCDcmd
  8267  0553                     i1l2979:
  8268                           
  8269                           ;main.c: 240: LCDstr(str);
  8270  0553  3035               	movlw	low menuLCD_ISR@str
  8271  0554  00F9               	movwf	LCDstr@p
  8272  0555  3000               	movlw	high menuLCD_ISR@str
  8273  0556  00FA               	movwf	LCDstr@p+1
  8274  0557  318F  2788  3185   	fcall	_LCDstr
  8275  055A                     i1l2981:
  8276                           
  8277                           ;main.c: 242: LCDcmd(0x8B);
  8278  055A  308B               	movlw	139
  8279  055B  318E  26DD  3185   	fcall	_LCDcmd
  8280  055E                     i1l2983:
  8281                           
  8282                           ;main.c: 243: LCDstr("CTL ?");
  8283  055E  3019               	movlw	low (STR_2| (0+32768))
  8284  055F  00F9               	movwf	LCDstr@p
  8285  0560  3090               	movlw	high (STR_2| (0+32768))
  8286  0561  00FA               	movwf	LCDstr@p+1
  8287  0562  318F  2788  3185   	fcall	_LCDstr
  8288  0565                     i1l2985:
  8289                           
  8290                           ;main.c: 245: LCDcmd(0xc0);
  8291  0565  30C0               	movlw	192
  8292  0566  318E  26DD  3185   	fcall	_LCDcmd
  8293  0569                     i1l2987:
  8294                           
  8295                           ;main.c: 246: char tt[4] = "20";
  8296  0569  0020               	movlb	0	; select bank0
  8297  056A  085C               	movf	menuLCD_ISR@F12473+3,w
  8298  056B  00C0               	movwf	menuLCD_ISR@tt+3
  8299  056C  085B               	movf	menuLCD_ISR@F12473+2,w
  8300  056D  00BF               	movwf	menuLCD_ISR@tt+2
  8301  056E  085A               	movf	menuLCD_ISR@F12473+1,w
  8302  056F  00BE               	movwf	menuLCD_ISR@tt+1
  8303  0570  0859               	movf	menuLCD_ISR@F12473,w
  8304  0571  00BD               	movwf	menuLCD_ISR@tt
  8305  0572                     i1l2989:
  8306                           
  8307                           ;main.c: 247: strcat(tt," C");
  8308  0572  301F               	movlw	low (STR_3| (0+32768))
  8309  0573  00F0               	movwf	strcat@from
  8310  0574  3090               	movlw	high (STR_3| (0+32768))
  8311  0575  00F1               	movwf	strcat@from+1
  8312  0576  303D               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
  8313  0577  3187  279F  3185   	fcall	_strcat
  8314  057A                     i1l2991:
  8315                           
  8316                           ;main.c: 248: LCDstr(tt);
  8317  057A  303D               	movlw	low menuLCD_ISR@tt
  8318  057B  00F9               	movwf	LCDstr@p
  8319  057C  3000               	movlw	high menuLCD_ISR@tt
  8320  057D  00FA               	movwf	LCDstr@p+1
  8321  057E  318F  2788  3185   	fcall	_LCDstr
  8322  0581                     i1l2993:
  8323                           
  8324                           ;main.c: 250: LCDcmd(0xcd);
  8325  0581  30CD               	movlw	205
  8326  0582  318E  26DD  3185   	fcall	_LCDcmd
  8327  0585                     i1l2995:
  8328  0585                     i1l2997:
  8329                           
  8330                           ;main.c: 252: char l[1];;main.c: 253: sprintf(l, "%d", aux);
  8331  0585  3022               	movlw	low (STR_4| (0+32768))
  8332  0586  0020               	movlb	0	; select bank0
  8333  0587  00A0               	movwf	sprintf@f
  8334  0588  3090               	movlw	high (STR_4| (0+32768))
  8335  0589  00A1               	movwf	sprintf@f+1
  8336  058A  3007               	movlw	7
  8337  058B  00A2               	movwf	?_sprintf+2
  8338  058C  3000               	movlw	0
  8339  058D  00A3               	movwf	?_sprintf+3
  8340  058E  3046               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
  8341  058F  3180  2050  3185   	fcall	_sprintf
  8342  0592                     i1l2999:
  8343                           
  8344                           ;main.c: 255: char ll[3] = "L ";
  8345  0592  0020               	movlb	0	; select bank0
  8346  0593  085D               	movf	menuLCD_ISR@F12477,w
  8347  0594  00C1               	movwf	menuLCD_ISR@ll
  8348  0595  085E               	movf	menuLCD_ISR@F12477+1,w
  8349  0596  00C2               	movwf	menuLCD_ISR@ll+1
  8350  0597  085F               	movf	menuLCD_ISR@F12477+2,w
  8351  0598  00C3               	movwf	menuLCD_ISR@ll+2
  8352  0599                     i1l3001:
  8353                           
  8354                           ;main.c: 256: strcat(ll, l);
  8355  0599  3046               	movlw	low menuLCD_ISR@l
  8356  059A  00F0               	movwf	strcat@from
  8357  059B  3000               	movlw	high menuLCD_ISR@l
  8358  059C  00F1               	movwf	strcat@from+1
  8359  059D  3041               	movlw	(low (menuLCD_ISR@ll| 0))& (0+255)
  8360  059E  3187  279F  3185   	fcall	_strcat
  8361  05A1                     i1l3003:
  8362                           
  8363                           ;main.c: 257: LCDstr(ll);
  8364  05A1  3041               	movlw	low menuLCD_ISR@ll
  8365  05A2  00F9               	movwf	LCDstr@p
  8366  05A3  3000               	movlw	high menuLCD_ISR@ll
  8367  05A4  00FA               	movwf	LCDstr@p+1
  8368  05A5  318F  2788  3185   	fcall	_LCDstr
  8369  05A8                     i1l3005:
  8370                           
  8371                           ;main.c: 259: LCDcmd(0x80);
  8372  05A8  3080               	movlw	128
  8373  05A9  318E  26DD  3185   	fcall	_LCDcmd
  8374  05AC                     i1l631:
  8375  05AC  0008               	return
  8376  05AD                     __end_of_menuLCD_ISR:
  8377                           
  8378                           	psect	text20
  8379  079F                     __ptext20:	
  8380 ;; *************** function _strcat *****************
  8381 ;; Defined at:
  8382 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\strcat.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  to              1    wreg     PTR unsigned char 
  8385 ;;		 -> menuLCD_ISR@ll(3), menuLCD_ISR@tt(4), 
  8386 ;;  from            2    0[COMMON] PTR const unsigned char 
  8387 ;;		 -> menuLCD_ISR@l(1), STR_3(3), 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;  to              1    3[COMMON] PTR unsigned char 
  8390 ;;		 -> menuLCD_ISR@ll(3), menuLCD_ISR@tt(4), 
  8391 ;;  cp              1    4[COMMON] PTR unsigned char 
  8392 ;;		 -> menuLCD_ISR@ll(3), menuLCD_ISR@tt(4), 
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  1    wreg      PTR unsigned char 
  8395 ;; Registers used:
  8396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8404 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;Total ram usage:        5 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; This function calls:
  8409 ;;		Nothing
  8410 ;; This function is called by:
  8411 ;;		_menuLCD_ISR
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           
  8416                           ;psect for function _strcat
  8417  079F                     _strcat:
  8418                           
  8419                           ;incstack = 0
  8420                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath]
  8421                           ;strcat@to stored from wreg
  8422  079F  00F3               	movwf	strcat@to
  8423  07A0                     i1l2803:
  8424  07A0  0873               	movf	strcat@to,w
  8425  07A1  00F2               	movwf	??_strcat
  8426  07A2  0872               	movf	??_strcat,w
  8427  07A3  00F4               	movwf	strcat@cp
  8428  07A4  2FA9               	goto	i1l2807
  8429  07A5                     i1l2805:
  8430  07A5  3001               	movlw	1
  8431  07A6  00F2               	movwf	??_strcat
  8432  07A7  0872               	movf	??_strcat,w
  8433  07A8  07F4               	addwf	strcat@cp,f
  8434  07A9                     i1l2807:
  8435  07A9  0874               	movf	strcat@cp,w
  8436  07AA  0086               	movwf	6
  8437  07AB  0187               	clrf	7
  8438  07AC  0801               	movf	1,w
  8439  07AD  1D03               	btfss	3,2
  8440  07AE  2FB0               	goto	u250_21
  8441  07AF  2FB1               	goto	u250_20
  8442  07B0                     u250_21:
  8443  07B0  2FA5               	goto	i1l2805
  8444  07B1                     u250_20:
  8445  07B1  2FBA               	goto	i1l2813
  8446  07B2                     i1l2809:
  8447  07B2  3001               	movlw	1
  8448  07B3  00F2               	movwf	??_strcat
  8449  07B4  0872               	movf	??_strcat,w
  8450  07B5  07F4               	addwf	strcat@cp,f
  8451  07B6                     i1l2811:
  8452  07B6  3001               	movlw	1
  8453  07B7  07F0               	addwf	strcat@from,f
  8454  07B8  3000               	movlw	0
  8455  07B9  3DF1               	addwfc	strcat@from+1,f
  8456  07BA                     i1l2813:
  8457  07BA  0874               	movf	strcat@cp,w
  8458  07BB  0086               	movwf	6
  8459  07BC  0187               	clrf	7
  8460  07BD  0870               	movf	strcat@from,w
  8461  07BE  0084               	movwf	4
  8462  07BF  0871               	movf	strcat@from+1,w
  8463  07C0  0085               	movwf	5
  8464  07C1  0800               	movf	0,w	;code access
  8465  07C2  3FC0               	movwi [0]fsr1
  8466  07C3  0889               	movf	9,f
  8467  07C4  1D03               	btfss	3,2
  8468  07C5  2FC7               	goto	u251_21
  8469  07C6  2FC8               	goto	u251_20
  8470  07C7                     u251_21:
  8471  07C7  2FB2               	goto	i1l2809
  8472  07C8                     u251_20:
  8473  07C8                     i1l1441:
  8474  07C8  0008               	return
  8475  07C9                     __end_of_strcat:
  8476                           
  8477                           	psect	text21
  8478  0050                     __ptext21:	
  8479 ;; *************** function _sprintf *****************
  8480 ;; Defined at:
  8481 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  sp              1    wreg     PTR unsigned char 
  8484 ;;		 -> menuLCD_ISR@l(1), menuLCD_ISR@str(8), 
  8485 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  8486 ;;		 -> STR_4(3), STR_1(15), 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  8489 ;;		 -> menuLCD_ISR@l(1), menuLCD_ISR@str(8), 
  8490 ;;  tmpval          4    0        struct .
  8491 ;;  width           2   17[BANK0 ] int 
  8492 ;;  val             2   14[BANK0 ] unsigned int 
  8493 ;;  cp              2    0        PTR const unsigned char 
  8494 ;;  len             2    0        unsigned int 
  8495 ;;  c               1   20[BANK0 ] unsigned char 
  8496 ;;  flag            1   16[BANK0 ] unsigned char 
  8497 ;;  prec            1   13[BANK0 ] char 
  8498 ;;  ap              1   12[BANK0 ] PTR void [1]
  8499 ;;		 -> ?_sprintf(2), 
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  2    0[BANK0 ] int 
  8502 ;; Registers used:
  8503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8509 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;Total ram usage:       21 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; Hardware stack levels required when called:    1
  8516 ;; This function calls:
  8517 ;;		___lwdiv
  8518 ;;		___lwmod
  8519 ;;		___wmul
  8520 ;;		_isdigit
  8521 ;; This function is called by:
  8522 ;;		_menuLCD_ISR
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526                           
  8527                           ;psect for function _sprintf
  8528  0050                     _sprintf:
  8529                           
  8530                           ;incstack = 0
  8531                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8532                           ;sprintf@sp stored from wreg
  8533  0050  0020               	movlb	0	; select bank0
  8534  0051  00B3               	movwf	sprintf@sp
  8535  0052                     i1l2693:
  8536                           
  8537                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  8538  0052  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  8539  0053  00A8               	movwf	??_sprintf
  8540  0054  0828               	movf	??_sprintf,w
  8541  0055  00AC               	movwf	sprintf@ap
  8542                           
  8543                           ;doprnt.c: 553: while((c = *f++)) {
  8544  0056  29D4               	goto	i1l2797
  8545  0057                     i1l2695:
  8546                           
  8547                           ;doprnt.c: 555: if(c != '%')
  8548  0057  3025               	movlw	37
  8549  0058  0634               	xorwf	sprintf@c,w
  8550  0059  1903               	btfsc	3,2
  8551  005A  285C               	goto	u232_21
  8552  005B  285D               	goto	u232_20
  8553  005C                     u232_21:
  8554  005C  2869               	goto	i1l2701
  8555  005D                     u232_20:
  8556  005D                     i1l2697:
  8557                           
  8558                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  8559  005D  0834               	movf	sprintf@c,w
  8560  005E  00A8               	movwf	??_sprintf
  8561  005F  0833               	movf	sprintf@sp,w
  8562  0060  0086               	movwf	6
  8563  0061  0187               	clrf	7
  8564  0062  0828               	movf	??_sprintf,w
  8565  0063  0081               	movwf	1
  8566  0064                     i1l2699:
  8567  0064  3001               	movlw	1
  8568  0065  00A8               	movwf	??_sprintf
  8569  0066  0828               	movf	??_sprintf,w
  8570  0067  07B3               	addwf	sprintf@sp,f
  8571                           
  8572                           ;doprnt.c: 559: continue;
  8573  0068  29D4               	goto	i1l2797
  8574  0069                     i1l2701:
  8575                           
  8576                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  8577  0069  01B1               	clrf	sprintf@width
  8578  006A  01B2               	clrf	sprintf@width+1
  8579                           
  8580                           ;doprnt.c: 565: flag = 0;
  8581  006B  01B0               	clrf	sprintf@flag
  8582  006C  2872               	goto	i1l2707
  8583  006D                     i1l940:	
  8584                           ;doprnt.c: 596: case '0':
  8585                           
  8586                           
  8587                           ;doprnt.c: 597: flag |= 0x04;
  8588  006D  1530               	bsf	sprintf@flag,2
  8589  006E                     i1l2703:
  8590                           
  8591                           ;doprnt.c: 598: f++;
  8592  006E  3001               	movlw	1
  8593  006F  07A0               	addwf	sprintf@f,f
  8594  0070  3000               	movlw	0
  8595  0071  3DA1               	addwfc	sprintf@f+1,f
  8596  0072                     i1l2707:	
  8597                           ;doprnt.c: 599: continue;
  8598                           
  8599  0072  0820               	movf	sprintf@f,w
  8600  0073  0084               	movwf	4
  8601  0074  0821               	movf	sprintf@f+1,w
  8602  0075  0085               	movwf	5
  8603  0076  0800               	movf	0,w	;code access
  8604                           
  8605                           ; Switch size 1, requested type "simple"
  8606                           ; Number of cases is 1, Range of values is 48 to 48
  8607                           ; switch strategies available:
  8608                           ; Name         Instructions Cycles
  8609                           ; simple_byte            4     3 (average)
  8610                           ; direct_byte           11     9 (fixed)
  8611                           ; jumptable            263     9 (fixed)
  8612                           ;	Chosen strategy is simple_byte
  8613  0077  3A30               	xorlw	48	; case 48
  8614  0078  1903               	skipnz
  8615  0079  286D               	goto	i1l940
  8616  007A  287B               	goto	i1l2709
  8617  007B                     i1l2709:
  8618                           
  8619                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  8620  007B  0820               	movf	sprintf@f,w
  8621  007C  0084               	movwf	4
  8622  007D  0821               	movf	sprintf@f+1,w
  8623  007E  0085               	movwf	5
  8624  007F  0800               	movf	0,w	;code access
  8625  0080  318F  2748  3180   	fcall	_isdigit
  8626  0083  1C03               	btfss	3,0
  8627  0084  2886               	goto	u233_21
  8628  0085  2887               	goto	u233_20
  8629  0086                     u233_21:
  8630  0086  28BA               	goto	i1l2723
  8631  0087                     u233_20:
  8632  0087                     i1l2711:
  8633                           
  8634                           ;doprnt.c: 615: width = 0;
  8635  0087  0020               	movlb	0	; select bank0
  8636  0088  01B1               	clrf	sprintf@width
  8637  0089  01B2               	clrf	sprintf@width+1
  8638  008A                     i1l2713:
  8639                           
  8640                           ;doprnt.c: 617: width *= 10;
  8641  008A  300A               	movlw	10
  8642  008B  00F0               	movwf	___wmul@multiplier
  8643  008C  3000               	movlw	0
  8644  008D  00F1               	movwf	___wmul@multiplier+1
  8645  008E  0020               	movlb	0	; select bank0
  8646  008F  0832               	movf	sprintf@width+1,w
  8647  0090  00F3               	movwf	___wmul@multiplicand+1
  8648  0091  0831               	movf	sprintf@width,w
  8649  0092  00F2               	movwf	___wmul@multiplicand
  8650  0093  318F  27A3  3180   	fcall	___wmul
  8651  0096  0871               	movf	?___wmul+1,w
  8652  0097  0020               	movlb	0	; select bank0
  8653  0098  00B2               	movwf	sprintf@width+1
  8654  0099  0870               	movf	?___wmul,w
  8655  009A  00B1               	movwf	sprintf@width
  8656  009B                     i1l2715:
  8657                           
  8658                           ;doprnt.c: 618: width += *f++ - '0';
  8659  009B  0820               	movf	sprintf@f,w
  8660  009C  0084               	movwf	4
  8661  009D  0821               	movf	sprintf@f+1,w
  8662  009E  0085               	movwf	5
  8663  009F  0800               	movf	0,w	;code access
  8664  00A0  3ED0               	addlw	208
  8665  00A1  00A8               	movwf	??_sprintf
  8666  00A2  30FF               	movlw	255
  8667  00A3  1803               	skipnc
  8668  00A4  3000               	movlw	0
  8669  00A5  00A9               	movwf	??_sprintf+1
  8670  00A6  0828               	movf	??_sprintf,w
  8671  00A7  07B1               	addwf	sprintf@width,f
  8672  00A8  0829               	movf	??_sprintf+1,w
  8673  00A9  3DB2               	addwfc	sprintf@width+1,f
  8674  00AA                     i1l2717:
  8675  00AA  3001               	movlw	1
  8676  00AB  07A0               	addwf	sprintf@f,f
  8677  00AC  3000               	movlw	0
  8678  00AD  3DA1               	addwfc	sprintf@f+1,f
  8679  00AE                     i1l2719:
  8680                           
  8681                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  8682  00AE  0820               	movf	sprintf@f,w
  8683  00AF  0084               	movwf	4
  8684  00B0  0821               	movf	sprintf@f+1,w
  8685  00B1  0085               	movwf	5
  8686  00B2  0800               	movf	0,w	;code access
  8687  00B3  318F  2748  3180   	fcall	_isdigit
  8688  00B6  1803               	btfsc	3,0
  8689  00B7  28B9               	goto	u234_21
  8690  00B8  28BA               	goto	u234_20
  8691  00B9                     u234_21:
  8692  00B9  288A               	goto	i1l2713
  8693  00BA                     u234_20:
  8694  00BA                     i1l2723:
  8695  00BA  0020               	movlb	0	; select bank0
  8696  00BB  0821               	movf	sprintf@f+1,w
  8697  00BC  00A9               	movwf	??_sprintf+1
  8698  00BD  0820               	movf	sprintf@f,w
  8699  00BE  00A8               	movwf	??_sprintf
  8700  00BF  0AA0               	incf	sprintf@f,f
  8701  00C0  1903               	skipnz
  8702  00C1  0AA1               	incf	sprintf@f+1,f
  8703  00C2  0828               	movf	??_sprintf,w
  8704  00C3  0084               	movwf	4
  8705  00C4  0829               	movf	??_sprintf+1,w
  8706  00C5  0085               	movwf	5
  8707  00C6  0800               	movf	0,w	;code access
  8708  00C7  00B4               	movwf	sprintf@c
  8709                           
  8710                           ; Switch size 1, requested type "simple"
  8711                           ; Number of cases is 3, Range of values is 0 to 105
  8712                           ; switch strategies available:
  8713                           ; Name         Instructions Cycles
  8714                           ; simple_byte           10     6 (average)
  8715                           ; direct_byte          218     6 (fixed)
  8716                           ; jumptable            260     6 (fixed)
  8717                           ;	Chosen strategy is simple_byte
  8718  00C8  3A00               	xorlw	0	; case 0
  8719  00C9  1903               	skipnz
  8720  00CA  29E8               	goto	i1l2799
  8721  00CB  3A64               	xorlw	100	; case 100
  8722  00CC  1903               	skipnz
  8723  00CD  28D2               	goto	i1l2725
  8724  00CE  3A0D               	xorlw	13	; case 105
  8725  00CF  1903               	skipnz
  8726  00D0  28D2               	goto	i1l2725
  8727  00D1  29D4               	goto	i1l2797
  8728  00D2                     i1l2725:
  8729                           
  8730                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  8731  00D2  082C               	movf	sprintf@ap,w
  8732  00D3  0086               	movwf	6
  8733  00D4  0187               	clrf	7
  8734  00D5  3F40               	moviw [0]fsr1
  8735  00D6  00AE               	movwf	sprintf@val
  8736  00D7  3F41               	moviw [1]fsr1
  8737  00D8  00AF               	movwf	sprintf@val+1
  8738  00D9                     i1l2727:
  8739  00D9  3002               	movlw	2
  8740  00DA  00A8               	movwf	??_sprintf
  8741  00DB  0828               	movf	??_sprintf,w
  8742  00DC  07AC               	addwf	sprintf@ap,f
  8743  00DD                     i1l2729:
  8744                           
  8745                           ;doprnt.c: 1287: if((int)val < 0) {
  8746  00DD  1FAF               	btfss	sprintf@val+1,7
  8747  00DE  28E0               	goto	u235_21
  8748  00DF  28E1               	goto	u235_20
  8749  00E0                     u235_21:
  8750  00E0  28EA               	goto	i1l2735
  8751  00E1                     u235_20:
  8752  00E1                     i1l2731:
  8753                           
  8754                           ;doprnt.c: 1288: flag |= 0x03;
  8755  00E1  3003               	movlw	3
  8756  00E2  00A8               	movwf	??_sprintf
  8757  00E3  0828               	movf	??_sprintf,w
  8758  00E4  04B0               	iorwf	sprintf@flag,f
  8759  00E5                     i1l2733:
  8760                           
  8761                           ;doprnt.c: 1289: val = -val;
  8762  00E5  09AE               	comf	sprintf@val,f
  8763  00E6  09AF               	comf	sprintf@val+1,f
  8764  00E7  0AAE               	incf	sprintf@val,f
  8765  00E8  1903               	skipnz
  8766  00E9  0AAF               	incf	sprintf@val+1,f
  8767  00EA                     i1l2735:
  8768                           
  8769                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  8770  00EA  01B4               	clrf	sprintf@c
  8771  00EB  0AB4               	incf	sprintf@c,f
  8772  00EC                     i1l2741:
  8773                           
  8774                           ;doprnt.c: 1332: if(val < dpowers[c])
  8775  00EC  0834               	movf	sprintf@c,w
  8776  00ED  00A8               	movwf	??_sprintf
  8777  00EE  01A9               	clrf	??_sprintf+1
  8778  00EF  35A8               	lslf	??_sprintf,f
  8779  00F0  0DA9               	rlf	??_sprintf+1,f
  8780  00F1  300F               	movlw	low (_dpowers| (0+32768))
  8781  00F2  0728               	addwf	??_sprintf,w
  8782  00F3  0084               	movwf	4
  8783  00F4  3090               	movlw	high (_dpowers| (0+32768))
  8784  00F5  3D29               	addwfc	??_sprintf+1,w
  8785  00F6  0085               	movwf	5
  8786  00F7  3F00               	moviw [0]fsr0
  8787  00F8  00AA               	movwf	??_sprintf+2
  8788  00F9  3F01               	moviw [1]fsr0
  8789  00FA  00AB               	movwf	??_sprintf+3
  8790  00FB  082B               	movf	??_sprintf+3,w
  8791  00FC  022F               	subwf	sprintf@val+1,w
  8792  00FD  1D03               	skipz
  8793  00FE  2901               	goto	u236_25
  8794  00FF  082A               	movf	??_sprintf+2,w
  8795  0100  022E               	subwf	sprintf@val,w
  8796  0101                     u236_25:
  8797  0101  1803               	skipnc
  8798  0102  2904               	goto	u236_21
  8799  0103  2905               	goto	u236_20
  8800  0104                     u236_21:
  8801  0104  2906               	goto	i1l2745
  8802  0105                     u236_20:
  8803  0105  2910               	goto	i1l2747
  8804  0106                     i1l2745:
  8805  0106  3001               	movlw	1
  8806  0107  00A8               	movwf	??_sprintf
  8807  0108  0828               	movf	??_sprintf,w
  8808  0109  07B4               	addwf	sprintf@c,f
  8809  010A  3005               	movlw	5
  8810  010B  0634               	xorwf	sprintf@c,w
  8811  010C  1D03               	btfss	3,2
  8812  010D  290F               	goto	u237_21
  8813  010E  2910               	goto	u237_20
  8814  010F                     u237_21:
  8815  010F  28EC               	goto	i1l2741
  8816  0110                     u237_20:
  8817  0110                     i1l2747:
  8818                           
  8819                           ;doprnt.c: 1371: if(width && flag & 0x03)
  8820  0110  0831               	movf	sprintf@width,w
  8821  0111  0432               	iorwf	sprintf@width+1,w
  8822  0112  1903               	btfsc	3,2
  8823  0113  2915               	goto	u238_21
  8824  0114  2916               	goto	u238_20
  8825  0115                     u238_21:
  8826  0115  2920               	goto	i1l958
  8827  0116                     u238_20:
  8828  0116                     i1l2749:
  8829  0116  0830               	movf	sprintf@flag,w
  8830  0117  3903               	andlw	3
  8831  0118  1903               	btfsc	3,2
  8832  0119  291B               	goto	u239_21
  8833  011A  291C               	goto	u239_20
  8834  011B                     u239_21:
  8835  011B  2920               	goto	i1l958
  8836  011C                     u239_20:
  8837  011C                     i1l2751:
  8838                           
  8839                           ;doprnt.c: 1372: width--;
  8840  011C  30FF               	movlw	255
  8841  011D  07B1               	addwf	sprintf@width,f
  8842  011E  30FF               	movlw	255
  8843  011F  3DB2               	addwfc	sprintf@width+1,f
  8844  0120                     i1l958:
  8845                           
  8846                           ;doprnt.c: 1407: if(width > c)
  8847  0120  0832               	movf	sprintf@width+1,w
  8848  0121  3A80               	xorlw	128
  8849  0122  3C80               	sublw	128
  8850  0123  1D03               	skipz
  8851  0124  2927               	goto	u240_25
  8852  0125  0831               	movf	sprintf@width,w
  8853  0126  0234               	subwf	sprintf@c,w
  8854  0127                     u240_25:
  8855  0127  1803               	skipnc
  8856  0128  292A               	goto	u240_21
  8857  0129  292B               	goto	u240_20
  8858  012A                     u240_21:
  8859  012A  2934               	goto	i1l2755
  8860  012B                     u240_20:
  8861  012B                     i1l2753:
  8862                           
  8863                           ;doprnt.c: 1408: width -= c;
  8864  012B  0020               	movlb	0	; select bank0
  8865  012C  0834               	movf	sprintf@c,w
  8866  012D  00A8               	movwf	??_sprintf
  8867  012E  01A9               	clrf	??_sprintf+1
  8868  012F  0828               	movf	??_sprintf,w
  8869  0130  02B1               	subwf	sprintf@width,f
  8870  0131  0829               	movf	??_sprintf+1,w
  8871  0132  3BB2               	subwfb	sprintf@width+1,f
  8872  0133  2937               	goto	i1l2757
  8873  0134                     i1l2755:
  8874                           
  8875                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  8876  0134  0020               	movlb	0	; select bank0
  8877  0135  01B1               	clrf	sprintf@width
  8878  0136  01B2               	clrf	sprintf@width+1
  8879  0137                     i1l2757:
  8880                           
  8881                           ;doprnt.c: 1413: if(flag & 0x04) {
  8882  0137  1D30               	btfss	sprintf@flag,2
  8883  0138  293A               	goto	u241_21
  8884  0139  293B               	goto	u241_20
  8885  013A                     u241_21:
  8886  013A  2968               	goto	i1l2773
  8887  013B                     u241_20:
  8888  013B                     i1l2759:
  8889                           
  8890                           ;doprnt.c: 1418: if(flag & 0x03)
  8891  013B  0830               	movf	sprintf@flag,w
  8892  013C  3903               	andlw	3
  8893  013D  1903               	btfsc	3,2
  8894  013E  2940               	goto	u242_21
  8895  013F  2941               	goto	u242_20
  8896  0140                     u242_21:
  8897  0140  294C               	goto	i1l2765
  8898  0141                     u242_20:
  8899  0141                     i1l2761:
  8900                           
  8901                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  8902  0141  302D               	movlw	45
  8903  0142  00A8               	movwf	??_sprintf
  8904  0143  0833               	movf	sprintf@sp,w
  8905  0144  0086               	movwf	6
  8906  0145  0187               	clrf	7
  8907  0146  0828               	movf	??_sprintf,w
  8908  0147  0081               	movwf	1
  8909  0148                     i1l2763:
  8910  0148  3001               	movlw	1
  8911  0149  00A8               	movwf	??_sprintf
  8912  014A  0828               	movf	??_sprintf,w
  8913  014B  07B3               	addwf	sprintf@sp,f
  8914  014C                     i1l2765:
  8915                           
  8916                           ;doprnt.c: 1441: if(width)
  8917  014C  0831               	movf	sprintf@width,w
  8918  014D  0432               	iorwf	sprintf@width+1,w
  8919  014E  1903               	btfsc	3,2
  8920  014F  2951               	goto	u243_21
  8921  0150  2952               	goto	u243_20
  8922  0151                     u243_21:
  8923  0151  2994               	goto	i1l2787
  8924  0152                     u243_20:
  8925  0152                     i1l2767:
  8926                           
  8927                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  8928  0152  3030               	movlw	48
  8929  0153  00A8               	movwf	??_sprintf
  8930  0154  0833               	movf	sprintf@sp,w
  8931  0155  0086               	movwf	6
  8932  0156  0187               	clrf	7
  8933  0157  0828               	movf	??_sprintf,w
  8934  0158  0081               	movwf	1
  8935  0159                     i1l2769:
  8936  0159  3001               	movlw	1
  8937  015A  00A8               	movwf	??_sprintf
  8938  015B  0828               	movf	??_sprintf,w
  8939  015C  07B3               	addwf	sprintf@sp,f
  8940  015D                     i1l2771:
  8941                           
  8942                           ;doprnt.c: 1444: while(--width);
  8943  015D  30FF               	movlw	255
  8944  015E  07B1               	addwf	sprintf@width,f
  8945  015F  30FF               	movlw	255
  8946  0160  3DB2               	addwfc	sprintf@width+1,f
  8947  0161  0831               	movf	sprintf@width,w
  8948  0162  0432               	iorwf	sprintf@width+1,w
  8949  0163  1D03               	btfss	3,2
  8950  0164  2966               	goto	u244_21
  8951  0165  2967               	goto	u244_20
  8952  0166                     u244_21:
  8953  0166  2952               	goto	i1l2767
  8954  0167                     u244_20:
  8955  0167  2994               	goto	i1l2787
  8956  0168                     i1l2773:
  8957                           
  8958                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  8959  0168  0831               	movf	sprintf@width,w
  8960  0169  0432               	iorwf	sprintf@width+1,w
  8961  016A  1903               	btfsc	3,2
  8962  016B  296D               	goto	u245_21
  8963  016C  296E               	goto	u245_20
  8964  016D                     u245_21:
  8965  016D  2983               	goto	i1l2781
  8966  016E                     u245_20:
  8967  016E                     i1l2775:
  8968                           
  8969                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  8970  016E  3020               	movlw	32
  8971  016F  00A8               	movwf	??_sprintf
  8972  0170  0833               	movf	sprintf@sp,w
  8973  0171  0086               	movwf	6
  8974  0172  0187               	clrf	7
  8975  0173  0828               	movf	??_sprintf,w
  8976  0174  0081               	movwf	1
  8977  0175                     i1l2777:
  8978  0175  3001               	movlw	1
  8979  0176  00A8               	movwf	??_sprintf
  8980  0177  0828               	movf	??_sprintf,w
  8981  0178  07B3               	addwf	sprintf@sp,f
  8982  0179                     i1l2779:
  8983                           
  8984                           ;doprnt.c: 1457: while(--width);
  8985  0179  30FF               	movlw	255
  8986  017A  07B1               	addwf	sprintf@width,f
  8987  017B  30FF               	movlw	255
  8988  017C  3DB2               	addwfc	sprintf@width+1,f
  8989  017D  0831               	movf	sprintf@width,w
  8990  017E  0432               	iorwf	sprintf@width+1,w
  8991  017F  1D03               	btfss	3,2
  8992  0180  2982               	goto	u246_21
  8993  0181  2983               	goto	u246_20
  8994  0182                     u246_21:
  8995  0182  296E               	goto	i1l2775
  8996  0183                     u246_20:
  8997  0183                     i1l2781:
  8998                           
  8999                           ;doprnt.c: 1464: if(flag & 0x03)
  9000  0183  0830               	movf	sprintf@flag,w
  9001  0184  3903               	andlw	3
  9002  0185  1903               	btfsc	3,2
  9003  0186  2988               	goto	u247_21
  9004  0187  2989               	goto	u247_20
  9005  0188                     u247_21:
  9006  0188  2994               	goto	i1l2787
  9007  0189                     u247_20:
  9008  0189                     i1l2783:
  9009                           
  9010                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  9011  0189  302D               	movlw	45
  9012  018A  00A8               	movwf	??_sprintf
  9013  018B  0833               	movf	sprintf@sp,w
  9014  018C  0086               	movwf	6
  9015  018D  0187               	clrf	7
  9016  018E  0828               	movf	??_sprintf,w
  9017  018F  0081               	movwf	1
  9018  0190                     i1l2785:
  9019  0190  3001               	movlw	1
  9020  0191  00A8               	movwf	??_sprintf
  9021  0192  0828               	movf	??_sprintf,w
  9022  0193  07B3               	addwf	sprintf@sp,f
  9023  0194                     i1l2787:
  9024                           
  9025                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  9026  0194  0834               	movf	sprintf@c,w
  9027  0195  00A8               	movwf	??_sprintf
  9028  0196  0828               	movf	??_sprintf,w
  9029  0197  00AD               	movwf	sprintf@prec
  9030                           
  9031                           ;doprnt.c: 1500: while(prec--) {
  9032  0198  29CB               	goto	i1l2795
  9033  0199                     i1l2789:
  9034                           
  9035                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  9036  0199  300A               	movlw	10
  9037  019A  00F8               	movwf	___lwmod@divisor
  9038  019B  3000               	movlw	0
  9039  019C  00F9               	movwf	___lwmod@divisor+1
  9040  019D  082D               	movf	sprintf@prec,w
  9041  019E  00A8               	movwf	??_sprintf
  9042  019F  01A9               	clrf	??_sprintf+1
  9043  01A0  35A8               	lslf	??_sprintf,f
  9044  01A1  0DA9               	rlf	??_sprintf+1,f
  9045  01A2  300F               	movlw	low (_dpowers| (0+32768))
  9046  01A3  0728               	addwf	??_sprintf,w
  9047  01A4  0084               	movwf	4
  9048  01A5  3090               	movlw	high (_dpowers| (0+32768))
  9049  01A6  3D29               	addwfc	??_sprintf+1,w
  9050  01A7  0085               	movwf	5
  9051  01A8  3F00               	moviw [0]fsr0
  9052  01A9  00F0               	movwf	___lwdiv@divisor
  9053  01AA  3F01               	moviw [1]fsr0
  9054  01AB  00F1               	movwf	___lwdiv@divisor+1
  9055  01AC  082F               	movf	sprintf@val+1,w
  9056  01AD  00F3               	movwf	___lwdiv@dividend+1
  9057  01AE  082E               	movf	sprintf@val,w
  9058  01AF  00F2               	movwf	___lwdiv@dividend
  9059  01B0  3186  26F4  3180   	fcall	___lwdiv
  9060  01B3  0871               	movf	?___lwdiv+1,w
  9061  01B4  00FB               	movwf	___lwmod@dividend+1
  9062  01B5  0870               	movf	?___lwdiv,w
  9063  01B6  00FA               	movwf	___lwmod@dividend
  9064  01B7  3187  276B  3180   	fcall	___lwmod
  9065  01BA  0878               	movf	?___lwmod,w
  9066  01BB  3E30               	addlw	48
  9067  01BC  0020               	movlb	0	; select bank0
  9068  01BD  00AA               	movwf	??_sprintf+2
  9069  01BE  082A               	movf	??_sprintf+2,w
  9070  01BF  00B4               	movwf	sprintf@c
  9071  01C0                     i1l2791:
  9072                           
  9073                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  9074  01C0  0834               	movf	sprintf@c,w
  9075  01C1  00A8               	movwf	??_sprintf
  9076  01C2  0833               	movf	sprintf@sp,w
  9077  01C3  0086               	movwf	6
  9078  01C4  0187               	clrf	7
  9079  01C5  0828               	movf	??_sprintf,w
  9080  01C6  0081               	movwf	1
  9081  01C7                     i1l2793:
  9082  01C7  3001               	movlw	1
  9083  01C8  00A8               	movwf	??_sprintf
  9084  01C9  0828               	movf	??_sprintf,w
  9085  01CA  07B3               	addwf	sprintf@sp,f
  9086  01CB                     i1l2795:
  9087  01CB  30FF               	movlw	255
  9088  01CC  00A8               	movwf	??_sprintf
  9089  01CD  0828               	movf	??_sprintf,w
  9090  01CE  07AD               	addwf	sprintf@prec,f
  9091  01CF  0A2D               	incf	sprintf@prec,w
  9092  01D0  1D03               	btfss	3,2
  9093  01D1  29D3               	goto	u248_21
  9094  01D2  29D4               	goto	u248_20
  9095  01D3                     u248_21:
  9096  01D3  2999               	goto	i1l2789
  9097  01D4                     u248_20:
  9098  01D4                     i1l2797:
  9099  01D4  0821               	movf	sprintf@f+1,w
  9100  01D5  00A9               	movwf	??_sprintf+1
  9101  01D6  0820               	movf	sprintf@f,w
  9102  01D7  00A8               	movwf	??_sprintf
  9103  01D8  0AA0               	incf	sprintf@f,f
  9104  01D9  1903               	skipnz
  9105  01DA  0AA1               	incf	sprintf@f+1,f
  9106  01DB  0828               	movf	??_sprintf,w
  9107  01DC  0084               	movwf	4
  9108  01DD  0829               	movf	??_sprintf+1,w
  9109  01DE  0085               	movwf	5
  9110  01DF  0800               	movf	0,w	;code access
  9111  01E0  00AA               	movwf	??_sprintf+2
  9112  01E1  082A               	movf	??_sprintf+2,w
  9113  01E2  00B4               	movwf	sprintf@c
  9114  01E3  0834               	movf	sprintf@c,w
  9115  01E4  1D03               	btfss	3,2
  9116  01E5  29E7               	goto	u249_21
  9117  01E6  29E8               	goto	u249_20
  9118  01E7                     u249_21:
  9119  01E7  2857               	goto	i1l2695
  9120  01E8                     u249_20:
  9121  01E8                     i1l2799:
  9122                           
  9123                           ;doprnt.c: 1564: *sp = 0;
  9124  01E8  0833               	movf	sprintf@sp,w
  9125  01E9  0086               	movwf	6
  9126  01EA  0187               	clrf	7
  9127  01EB  0181               	clrf	1
  9128  01EC                     i1l975:
  9129  01EC  0008               	return
  9130  01ED                     __end_of_sprintf:
  9131                           
  9132                           	psect	text22
  9133  0F48                     __ptext22:	
  9134 ;; *************** function _isdigit *****************
  9135 ;; Defined at:
  9136 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;  c               1    wreg     unsigned char 
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;  c               1    1[COMMON] unsigned char 
  9141 ;; Return value:  Size  Location     Type
  9142 ;;		None               void
  9143 ;; Registers used:
  9144 ;;		wreg, status,2, status,0
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9154 ;;Total ram usage:        2 bytes
  9155 ;; Hardware stack levels used:    1
  9156 ;; This function calls:
  9157 ;;		Nothing
  9158 ;; This function is called by:
  9159 ;;		_sprintf
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           
  9164                           ;psect for function _isdigit
  9165  0F48                     _isdigit:
  9166                           
  9167                           ;incstack = 0
  9168                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9169                           ;isdigit@c stored from wreg
  9170  0F48  00F1               	movwf	isdigit@c
  9171  0F49                     i1l2581:
  9172  0F49  01F0               	clrf	_isdigit$1992
  9173  0F4A                     i1l2583:
  9174  0F4A  303A               	movlw	58
  9175  0F4B  0271               	subwf	isdigit@c,w
  9176  0F4C  1803               	skipnc
  9177  0F4D  2F4F               	goto	u203_21
  9178  0F4E  2F50               	goto	u203_20
  9179  0F4F                     u203_21:
  9180  0F4F  2F58               	goto	i1l2589
  9181  0F50                     u203_20:
  9182  0F50                     i1l2585:
  9183  0F50  3030               	movlw	48
  9184  0F51  0271               	subwf	isdigit@c,w
  9185  0F52  1C03               	skipc
  9186  0F53  2F55               	goto	u204_21
  9187  0F54  2F56               	goto	u204_20
  9188  0F55                     u204_21:
  9189  0F55  2F58               	goto	i1l2589
  9190  0F56                     u204_20:
  9191  0F56                     i1l2587:
  9192  0F56  01F0               	clrf	_isdigit$1992
  9193  0F57  0AF0               	incf	_isdigit$1992,f
  9194  0F58                     i1l2589:
  9195  0F58  0C70               	rrf	_isdigit$1992,w
  9196  0F59                     i1l1432:
  9197  0F59  0008               	return
  9198  0F5A                     __end_of_isdigit:
  9199                           
  9200                           	psect	text23
  9201  0FA3                     __ptext23:	
  9202 ;; *************** function ___wmul *****************
  9203 ;; Defined at:
  9204 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;  multiplier      2    0[COMMON] unsigned int 
  9207 ;;  multiplicand    2    2[COMMON] unsigned int 
  9208 ;; Auto vars:     Size  Location     Type
  9209 ;;  product         2    4[COMMON] unsigned int 
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  2    0[COMMON] unsigned int 
  9212 ;; Registers used:
  9213 ;;		wreg, status,2, status,0
  9214 ;; Tracked objects:
  9215 ;;		On entry : 0/0
  9216 ;;		On exit  : 0/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9222 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9223 ;;Total ram usage:        6 bytes
  9224 ;; Hardware stack levels used:    1
  9225 ;; This function calls:
  9226 ;;		Nothing
  9227 ;; This function is called by:
  9228 ;;		_sprintf
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           
  9233                           ;psect for function ___wmul
  9234  0FA3                     ___wmul:
  9235  0FA3                     i1l2593:	
  9236                           ;incstack = 0
  9237                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9238                           
  9239  0FA3  01F4               	clrf	___wmul@product
  9240  0FA4  01F5               	clrf	___wmul@product+1
  9241  0FA5                     i1l2595:
  9242  0FA5  1C70               	btfss	___wmul@multiplier,0
  9243  0FA6  2FA8               	goto	u205_21
  9244  0FA7  2FA9               	goto	u205_20
  9245  0FA8                     u205_21:
  9246  0FA8  2FAD               	goto	i1l979
  9247  0FA9                     u205_20:
  9248  0FA9                     i1l2597:
  9249  0FA9  0872               	movf	___wmul@multiplicand,w
  9250  0FAA  07F4               	addwf	___wmul@product,f
  9251  0FAB  0873               	movf	___wmul@multiplicand+1,w
  9252  0FAC  3DF5               	addwfc	___wmul@product+1,f
  9253  0FAD                     i1l979:
  9254  0FAD  3001               	movlw	1
  9255  0FAE                     u206_25:
  9256  0FAE  35F2               	lslf	___wmul@multiplicand,f
  9257  0FAF  0DF3               	rlf	___wmul@multiplicand+1,f
  9258  0FB0  0B89               	decfsz	9,f
  9259  0FB1  2FAE               	goto	u206_25
  9260  0FB2                     i1l2599:
  9261  0FB2  3001               	movlw	1
  9262  0FB3                     u207_25:
  9263  0FB3  36F1               	lsrf	___wmul@multiplier+1,f
  9264  0FB4  0CF0               	rrf	___wmul@multiplier,f
  9265  0FB5  0B89               	decfsz	9,f
  9266  0FB6  2FB3               	goto	u207_25
  9267  0FB7                     i1l2601:
  9268  0FB7  0870               	movf	___wmul@multiplier,w
  9269  0FB8  0471               	iorwf	___wmul@multiplier+1,w
  9270  0FB9  1D03               	btfss	3,2
  9271  0FBA  2FBC               	goto	u208_21
  9272  0FBB  2FBD               	goto	u208_20
  9273  0FBC                     u208_21:
  9274  0FBC  2FA5               	goto	i1l2595
  9275  0FBD                     u208_20:
  9276  0FBD                     i1l2603:
  9277  0FBD  0875               	movf	___wmul@product+1,w
  9278  0FBE  00F1               	movwf	?___wmul+1
  9279  0FBF  0874               	movf	___wmul@product,w
  9280  0FC0  00F0               	movwf	?___wmul
  9281  0FC1                     i1l981:
  9282  0FC1  0008               	return
  9283  0FC2                     __end_of___wmul:
  9284                           
  9285                           	psect	text24
  9286  076B                     __ptext24:	
  9287 ;; *************** function ___lwmod *****************
  9288 ;; Defined at:
  9289 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;  divisor         2    8[COMMON] unsigned int 
  9292 ;;  dividend        2   10[COMMON] unsigned int 
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;  counter         1   13[COMMON] unsigned char 
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  2    8[COMMON] unsigned int 
  9297 ;; Registers used:
  9298 ;;		wreg, status,2, status,0
  9299 ;; Tracked objects:
  9300 ;;		On entry : 0/0
  9301 ;;		On exit  : 0/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9306 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9307 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9308 ;;Total ram usage:        6 bytes
  9309 ;; Hardware stack levels used:    1
  9310 ;; This function calls:
  9311 ;;		Nothing
  9312 ;; This function is called by:
  9313 ;;		_sprintf
  9314 ;; This function uses a non-reentrant model
  9315 ;;
  9316                           
  9317                           
  9318                           ;psect for function ___lwmod
  9319  076B                     ___lwmod:
  9320  076B                     i1l2633:	
  9321                           ;incstack = 0
  9322                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9323                           
  9324  076B  0878               	movf	___lwmod@divisor,w
  9325  076C  0479               	iorwf	___lwmod@divisor+1,w
  9326  076D  1903               	btfsc	3,2
  9327  076E  2F70               	goto	u216_21
  9328  076F  2F71               	goto	u216_20
  9329  0770                     u216_21:
  9330  0770  2F9A               	goto	i1l2651
  9331  0771                     u216_20:
  9332  0771                     i1l2635:
  9333  0771  01FD               	clrf	___lwmod@counter
  9334  0772  0AFD               	incf	___lwmod@counter,f
  9335  0773  2F7D               	goto	i1l2641
  9336  0774                     i1l2637:
  9337  0774  3001               	movlw	1
  9338  0775                     u217_25:
  9339  0775  35F8               	lslf	___lwmod@divisor,f
  9340  0776  0DF9               	rlf	___lwmod@divisor+1,f
  9341  0777  0B89               	decfsz	9,f
  9342  0778  2F75               	goto	u217_25
  9343  0779                     i1l2639:
  9344  0779  3001               	movlw	1
  9345  077A  00FC               	movwf	??___lwmod
  9346  077B  087C               	movf	??___lwmod,w
  9347  077C  07FD               	addwf	___lwmod@counter,f
  9348  077D                     i1l2641:
  9349  077D  1FF9               	btfss	___lwmod@divisor+1,7
  9350  077E  2F80               	goto	u218_21
  9351  077F  2F81               	goto	u218_20
  9352  0780                     u218_21:
  9353  0780  2F74               	goto	i1l2637
  9354  0781                     u218_20:
  9355  0781                     i1l2643:
  9356  0781  0879               	movf	___lwmod@divisor+1,w
  9357  0782  027B               	subwf	___lwmod@dividend+1,w
  9358  0783  1D03               	skipz
  9359  0784  2F87               	goto	u219_25
  9360  0785  0878               	movf	___lwmod@divisor,w
  9361  0786  027A               	subwf	___lwmod@dividend,w
  9362  0787                     u219_25:
  9363  0787  1C03               	skipc
  9364  0788  2F8A               	goto	u219_21
  9365  0789  2F8B               	goto	u219_20
  9366  078A                     u219_21:
  9367  078A  2F8F               	goto	i1l2647
  9368  078B                     u219_20:
  9369  078B                     i1l2645:
  9370  078B  0878               	movf	___lwmod@divisor,w
  9371  078C  02FA               	subwf	___lwmod@dividend,f
  9372  078D  0879               	movf	___lwmod@divisor+1,w
  9373  078E  3BFB               	subwfb	___lwmod@dividend+1,f
  9374  078F                     i1l2647:
  9375  078F  3001               	movlw	1
  9376  0790                     u220_25:
  9377  0790  36F9               	lsrf	___lwmod@divisor+1,f
  9378  0791  0CF8               	rrf	___lwmod@divisor,f
  9379  0792  0B89               	decfsz	9,f
  9380  0793  2F90               	goto	u220_25
  9381  0794                     i1l2649:
  9382  0794  3001               	movlw	1
  9383  0795  02FD               	subwf	___lwmod@counter,f
  9384  0796  1D03               	btfss	3,2
  9385  0797  2F99               	goto	u221_21
  9386  0798  2F9A               	goto	u221_20
  9387  0799                     u221_21:
  9388  0799  2F81               	goto	i1l2643
  9389  079A                     u221_20:
  9390  079A                     i1l2651:
  9391  079A  087B               	movf	___lwmod@dividend+1,w
  9392  079B  00F9               	movwf	?___lwmod+1
  9393  079C  087A               	movf	___lwmod@dividend,w
  9394  079D  00F8               	movwf	?___lwmod
  9395  079E                     i1l1261:
  9396  079E  0008               	return
  9397  079F                     __end_of___lwmod:
  9398                           
  9399                           	psect	text25
  9400  06F4                     __ptext25:	
  9401 ;; *************** function ___lwdiv *****************
  9402 ;; Defined at:
  9403 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;  divisor         2    0[COMMON] unsigned int 
  9406 ;;  dividend        2    2[COMMON] unsigned int 
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;  quotient        2    5[COMMON] unsigned int 
  9409 ;;  counter         1    7[COMMON] unsigned char 
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  2    0[COMMON] unsigned int 
  9412 ;; Registers used:
  9413 ;;		wreg, status,2, status,0
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9422 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9423 ;;Total ram usage:        8 bytes
  9424 ;; Hardware stack levels used:    1
  9425 ;; This function calls:
  9426 ;;		Nothing
  9427 ;; This function is called by:
  9428 ;;		_sprintf
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           
  9433                           ;psect for function ___lwdiv
  9434  06F4                     ___lwdiv:
  9435  06F4                     i1l2607:	
  9436                           ;incstack = 0
  9437                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9438                           
  9439  06F4  01F5               	clrf	___lwdiv@quotient
  9440  06F5  01F6               	clrf	___lwdiv@quotient+1
  9441  06F6                     i1l2609:
  9442  06F6  0870               	movf	___lwdiv@divisor,w
  9443  06F7  0471               	iorwf	___lwdiv@divisor+1,w
  9444  06F8  1903               	btfsc	3,2
  9445  06F9  2EFB               	goto	u209_21
  9446  06FA  2EFC               	goto	u209_20
  9447  06FB                     u209_21:
  9448  06FB  2F2B               	goto	i1l2629
  9449  06FC                     u209_20:
  9450  06FC                     i1l2611:
  9451  06FC  01F7               	clrf	___lwdiv@counter
  9452  06FD  0AF7               	incf	___lwdiv@counter,f
  9453  06FE  2F08               	goto	i1l2617
  9454  06FF                     i1l2613:
  9455  06FF  3001               	movlw	1
  9456  0700                     u210_25:
  9457  0700  35F0               	lslf	___lwdiv@divisor,f
  9458  0701  0DF1               	rlf	___lwdiv@divisor+1,f
  9459  0702  0B89               	decfsz	9,f
  9460  0703  2F00               	goto	u210_25
  9461  0704                     i1l2615:
  9462  0704  3001               	movlw	1
  9463  0705  00F4               	movwf	??___lwdiv
  9464  0706  0874               	movf	??___lwdiv,w
  9465  0707  07F7               	addwf	___lwdiv@counter,f
  9466  0708                     i1l2617:
  9467  0708  1FF1               	btfss	___lwdiv@divisor+1,7
  9468  0709  2F0B               	goto	u211_21
  9469  070A  2F0C               	goto	u211_20
  9470  070B                     u211_21:
  9471  070B  2EFF               	goto	i1l2613
  9472  070C                     u211_20:
  9473  070C                     i1l2619:
  9474  070C  3001               	movlw	1
  9475  070D                     u212_25:
  9476  070D  35F5               	lslf	___lwdiv@quotient,f
  9477  070E  0DF6               	rlf	___lwdiv@quotient+1,f
  9478  070F  0B89               	decfsz	9,f
  9479  0710  2F0D               	goto	u212_25
  9480  0711  0871               	movf	___lwdiv@divisor+1,w
  9481  0712  0273               	subwf	___lwdiv@dividend+1,w
  9482  0713  1D03               	skipz
  9483  0714  2F17               	goto	u213_25
  9484  0715  0870               	movf	___lwdiv@divisor,w
  9485  0716  0272               	subwf	___lwdiv@dividend,w
  9486  0717                     u213_25:
  9487  0717  1C03               	skipc
  9488  0718  2F1A               	goto	u213_21
  9489  0719  2F1B               	goto	u213_20
  9490  071A                     u213_21:
  9491  071A  2F20               	goto	i1l2625
  9492  071B                     u213_20:
  9493  071B                     i1l2621:
  9494  071B  0870               	movf	___lwdiv@divisor,w
  9495  071C  02F2               	subwf	___lwdiv@dividend,f
  9496  071D  0871               	movf	___lwdiv@divisor+1,w
  9497  071E  3BF3               	subwfb	___lwdiv@dividend+1,f
  9498  071F                     i1l2623:
  9499  071F  1475               	bsf	___lwdiv@quotient,0
  9500  0720                     i1l2625:
  9501  0720  3001               	movlw	1
  9502  0721                     u214_25:
  9503  0721  36F1               	lsrf	___lwdiv@divisor+1,f
  9504  0722  0CF0               	rrf	___lwdiv@divisor,f
  9505  0723  0B89               	decfsz	9,f
  9506  0724  2F21               	goto	u214_25
  9507  0725                     i1l2627:
  9508  0725  3001               	movlw	1
  9509  0726  02F7               	subwf	___lwdiv@counter,f
  9510  0727  1D03               	btfss	3,2
  9511  0728  2F2A               	goto	u215_21
  9512  0729  2F2B               	goto	u215_20
  9513  072A                     u215_21:
  9514  072A  2F0C               	goto	i1l2619
  9515  072B                     u215_20:
  9516  072B                     i1l2629:
  9517  072B  0876               	movf	___lwdiv@quotient+1,w
  9518  072C  00F1               	movwf	?___lwdiv+1
  9519  072D  0875               	movf	___lwdiv@quotient,w
  9520  072E  00F0               	movwf	?___lwdiv
  9521  072F                     i1l1251:
  9522  072F  0008               	return
  9523  0730                     __end_of___lwdiv:
  9524                           
  9525                           	psect	text26
  9526  0F88                     __ptext26:	
  9527 ;; *************** function _LCDstr *****************
  9528 ;; Defined at:
  9529 ;;		line 183 in file "main.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;  p               2    9[COMMON] PTR unsigned char 
  9532 ;;		 -> menuLCD_ISR@ll(3), menuLCD_ISR@tt(4), STR_2(6), menuLCD_ISR@str(8), 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  c               1    0[BANK0 ] unsigned char 
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      void 
  9537 ;; Registers used:
  9538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9547 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9548 ;;Total ram usage:        6 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:    3
  9551 ;; This function calls:
  9552 ;;		_LCDchar
  9553 ;; This function is called by:
  9554 ;;		_menuLCD_ISR
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           
  9559                           ;psect for function _LCDstr
  9560  0F88                     _LCDstr:
  9561  0F88                     i1l2687:	
  9562                           ;incstack = 0
  9563                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9564                           
  9565                           
  9566                           ;main.c: 185: unsigned char c;;main.c: 187: while((c = *p++)) LCDchar(c);
  9567  0F88  2F8D               	goto	i1l2691
  9568  0F89                     i1l2689:
  9569  0F89  0820               	movf	LCDstr@c,w
  9570  0F8A  318E  26EB  318F   	fcall	_LCDchar
  9571  0F8D                     i1l2691:
  9572  0F8D  087A               	movf	LCDstr@p+1,w
  9573  0F8E  00FC               	movwf	??_LCDstr+1
  9574  0F8F  0879               	movf	LCDstr@p,w
  9575  0F90  00FB               	movwf	??_LCDstr
  9576  0F91  0AF9               	incf	LCDstr@p,f
  9577  0F92  1903               	skipnz
  9578  0F93  0AFA               	incf	LCDstr@p+1,f
  9579  0F94  087B               	movf	??_LCDstr,w
  9580  0F95  0084               	movwf	4
  9581  0F96  087C               	movf	??_LCDstr+1,w
  9582  0F97  0085               	movwf	5
  9583  0F98  0800               	movf	0,w	;code access
  9584  0F99  00FD               	movwf	??_LCDstr+2
  9585  0F9A  087D               	movf	??_LCDstr+2,w
  9586  0F9B  0020               	movlb	0	; select bank0
  9587  0F9C  00A0               	movwf	LCDstr@c
  9588  0F9D  0820               	movf	LCDstr@c,w
  9589  0F9E  1D03               	btfss	3,2
  9590  0F9F  2FA1               	goto	u231_21
  9591  0FA0  2FA2               	goto	u231_20
  9592  0FA1                     u231_21:
  9593  0FA1  2F89               	goto	i1l2689
  9594  0FA2                     u231_20:
  9595  0FA2                     i1l612:
  9596  0FA2  0008               	return
  9597  0FA3                     __end_of_LCDstr:
  9598                           
  9599                           	psect	text27
  9600  0EEB                     __ptext27:	
  9601 ;; *************** function _LCDchar *****************
  9602 ;; Defined at:
  9603 ;;		line 178 in file "main.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  c               1    wreg     unsigned char 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  c               1    8[COMMON] unsigned char 
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg, status,2, status,0, pclath, cstack
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9621 ;;Total ram usage:        1 bytes
  9622 ;; Hardware stack levels used:    1
  9623 ;; Hardware stack levels required when called:    2
  9624 ;; This function calls:
  9625 ;;		i1_LCDsend2x4
  9626 ;; This function is called by:
  9627 ;;		_LCDstr
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           
  9632                           ;psect for function _LCDchar
  9633  0EEB                     _LCDchar:
  9634                           
  9635                           ;incstack = 0
  9636                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
  9637                           ;LCDchar@c stored from wreg
  9638  0EEB  00F8               	movwf	LCDchar@c
  9639  0EEC                     i1l2579:
  9640                           
  9641                           ;main.c: 180: LCDsend2x4(c, 0x01);
  9642  0EEC  01F2               	clrf	i1LCDsend2x4@mode
  9643  0EED  0AF2               	incf	i1LCDsend2x4@mode,f
  9644  0EEE  0878               	movf	LCDchar@c,w
  9645  0EEF  3182  22C1  318E   	fcall	i1_LCDsend2x4
  9646  0EF2                     i1l606:
  9647  0EF2  0008               	return
  9648  0EF3                     __end_of_LCDchar:
  9649                           
  9650                           	psect	text28
  9651  0EDD                     __ptext28:	
  9652 ;; *************** function _LCDcmd *****************
  9653 ;; Defined at:
  9654 ;;		line 173 in file "main.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  c               1    wreg     unsigned char 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;  c               1    8[COMMON] unsigned char 
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  1    wreg      void 
  9661 ;; Registers used:
  9662 ;;		wreg, status,2, status,0, pclath, cstack
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9672 ;;Total ram usage:        1 bytes
  9673 ;; Hardware stack levels used:    1
  9674 ;; Hardware stack levels required when called:    2
  9675 ;; This function calls:
  9676 ;;		i1_LCDsend2x4
  9677 ;; This function is called by:
  9678 ;;		_menuLCD_ISR
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           
  9683                           ;psect for function _LCDcmd
  9684  0EDD                     _LCDcmd:
  9685                           
  9686                           ;incstack = 0
  9687                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
  9688                           ;LCDcmd@c stored from wreg
  9689  0EDD  00F8               	movwf	LCDcmd@c
  9690  0EDE                     i1l2685:
  9691                           
  9692                           ;main.c: 175: LCDsend2x4(c, 0);
  9693  0EDE  01F2               	clrf	i1LCDsend2x4@mode
  9694  0EDF  0878               	movf	LCDcmd@c,w
  9695  0EE0  3182  22C1  318E   	fcall	i1_LCDsend2x4
  9696  0EE3                     i1l603:
  9697  0EE3  0008               	return
  9698  0EE4                     __end_of_LCDcmd:
  9699                           
  9700                           	psect	text29
  9701  02C1                     __ptext29:	
  9702 ;; *************** function i1_LCDsend2x4 *****************
  9703 ;; Defined at:
  9704 ;;		line 127 in file "main.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;  c               1    wreg     unsigned char 
  9707 ;;  mode            1    2[COMMON] unsigned char 
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;  c               1    5[COMMON] unsigned char 
  9710 ;;  lc              1    7[COMMON] unsigned char 
  9711 ;;  hc              1    6[COMMON] unsigned char 
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  1    wreg      void 
  9714 ;; Registers used:
  9715 ;;		wreg, status,2, status,0, pclath, cstack
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9721 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9722 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;Total ram usage:        6 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:    1
  9728 ;; This function calls:
  9729 ;;		i1_WriteI2C
  9730 ;; This function is called by:
  9731 ;;		_LCDcmd
  9732 ;;		_LCDchar
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           
  9737                           ;psect for function i1_LCDsend2x4
  9738  02C1                     i1_LCDsend2x4:
  9739                           
  9740                           ;incstack = 0
  9741                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
  9742                           ;i1LCDsend2x4@c stored from wreg
  9743  02C1  00F5               	movwf	i1LCDsend2x4@c
  9744  02C2                     i1l2541:
  9745                           
  9746                           ;main.c: 129: unsigned char hc;;main.c: 130: unsigned char lc;;main.c: 132: hc = c & 0xf
      +                          0;
  9747  02C2  0875               	movf	i1LCDsend2x4@c,w
  9748  02C3  39F0               	andlw	240
  9749  02C4  00F3               	movwf	??i1_LCDsend2x4
  9750  02C5  0873               	movf	??i1_LCDsend2x4,w
  9751  02C6  00F6               	movwf	i1LCDsend2x4@hc
  9752  02C7                     i1l2543:
  9753                           
  9754                           ;main.c: 133: lc = (c << 4) & 0xf0;
  9755  02C7  0875               	movf	i1LCDsend2x4@c,w
  9756  02C8  00F3               	movwf	??i1_LCDsend2x4
  9757  02C9  3003               	movlw	3
  9758  02CA                     u191_25:
  9759  02CA  35F3               	lslf	??i1_LCDsend2x4,f
  9760  02CB  3EFF               	addlw	-1
  9761  02CC  1D03               	skipz
  9762  02CD  2ACA               	goto	u191_25
  9763  02CE  3573               	lslf	??i1_LCDsend2x4,w
  9764  02CF  39F0               	andlw	240
  9765  02D0  00F4               	movwf	??i1_LCDsend2x4+1
  9766  02D1  0874               	movf	??i1_LCDsend2x4+1,w
  9767  02D2  00F7               	movwf	i1LCDsend2x4@lc
  9768  02D3                     i1l2545:	
  9769                           ;main.c: 135: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9770                           
  9771  02D3  0023               	movlb	3	; select bank3
  9772  02D4  0C0F               	rrf	15,w	;volatile
  9773  02D5  0C89               	rrf	9,f
  9774  02D6  3901               	andlw	1
  9775  02D7  00F3               	movwf	??i1_LCDsend2x4
  9776  02D8  0811               	movf	17,w	;volatile
  9777  02D9  391F               	andlw	31
  9778  02DA  0473               	iorwf	??i1_LCDsend2x4,w
  9779  02DB  1D03               	btfss	3,2
  9780  02DC  2ADE               	goto	u192_21
  9781  02DD  2ADF               	goto	u192_20
  9782  02DE                     u192_21:
  9783  02DE  2AD3               	goto	i1l2545
  9784  02DF                     u192_20:
  9785  02DF                     i1l566:
  9786                           
  9787                           ;main.c: 136: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  9788  02DF  1411               	bsf	17,0	;volatile
  9789  02E0                     i1l567:
  9790  02E0  1811               	btfsc	17,0	;volatile
  9791  02E1  2AE3               	goto	u193_21
  9792  02E2  2AE4               	goto	u193_20
  9793  02E3                     u193_21:
  9794  02E3  2AE0               	goto	i1l567
  9795  02E4                     u193_20:
  9796  02E4                     i1l2547:
  9797  02E4  0C0F               	rrf	15,w	;volatile
  9798  02E5  0C89               	rrf	9,f
  9799  02E6  3901               	andlw	1
  9800  02E7  00F3               	movwf	??i1_LCDsend2x4
  9801  02E8  0811               	movf	17,w	;volatile
  9802  02E9  391F               	andlw	31
  9803  02EA  0473               	iorwf	??i1_LCDsend2x4,w
  9804  02EB  1D03               	btfss	3,2
  9805  02EC  2AEE               	goto	u194_21
  9806  02ED  2AEF               	goto	u194_20
  9807  02EE                     u194_21:
  9808  02EE  2AE4               	goto	i1l2547
  9809  02EF                     u194_20:
  9810  02EF                     i1l2549:
  9811                           
  9812                           ;main.c: 137: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9813  02EF  304E               	movlw	78
  9814  02F0  3186  26A9  3182   	fcall	i1_WriteI2C
  9815  02F3                     i1l2551:
  9816  02F3  0023               	movlb	3	; select bank3
  9817  02F4  0C0F               	rrf	15,w	;volatile
  9818  02F5  0C89               	rrf	9,f
  9819  02F6  3901               	andlw	1
  9820  02F7  00F3               	movwf	??i1_LCDsend2x4
  9821  02F8  0811               	movf	17,w	;volatile
  9822  02F9  391F               	andlw	31
  9823  02FA  0473               	iorwf	??i1_LCDsend2x4,w
  9824  02FB  1D03               	btfss	3,2
  9825  02FC  2AFE               	goto	u195_21
  9826  02FD  2AFF               	goto	u195_20
  9827  02FE                     u195_21:
  9828  02FE  2AF3               	goto	i1l2551
  9829  02FF                     u195_20:
  9830  02FF                     i1l2553:
  9831                           
  9832                           ;main.c: 138: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  9833  02FF  0876               	movf	i1LCDsend2x4@hc,w
  9834  0300  0472               	iorwf	i1LCDsend2x4@mode,w
  9835  0301  3808               	iorlw	8
  9836  0302  3186  26A9  3182   	fcall	i1_WriteI2C
  9837  0305                     i1l2555:
  9838  0305  0023               	movlb	3	; select bank3
  9839  0306  0C0F               	rrf	15,w	;volatile
  9840  0307  0C89               	rrf	9,f
  9841  0308  3901               	andlw	1
  9842  0309  00F3               	movwf	??i1_LCDsend2x4
  9843  030A  0811               	movf	17,w	;volatile
  9844  030B  391F               	andlw	31
  9845  030C  0473               	iorwf	??i1_LCDsend2x4,w
  9846  030D  1D03               	btfss	3,2
  9847  030E  2B10               	goto	u196_21
  9848  030F  2B11               	goto	u196_20
  9849  0310                     u196_21:
  9850  0310  2B05               	goto	i1l2555
  9851  0311                     u196_20:
  9852  0311                     i1l2557:
  9853                           
  9854                           ;main.c: 139: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  9855  0311  0876               	movf	i1LCDsend2x4@hc,w
  9856  0312  0472               	iorwf	i1LCDsend2x4@mode,w
  9857  0313  380C               	iorlw	12
  9858  0314  3186  26A9  3182   	fcall	i1_WriteI2C
  9859  0317                     i1l2559:
  9860  0317  0023               	movlb	3	; select bank3
  9861  0318  0C0F               	rrf	15,w	;volatile
  9862  0319  0C89               	rrf	9,f
  9863  031A  3901               	andlw	1
  9864  031B  00F3               	movwf	??i1_LCDsend2x4
  9865  031C  0811               	movf	17,w	;volatile
  9866  031D  391F               	andlw	31
  9867  031E  0473               	iorwf	??i1_LCDsend2x4,w
  9868  031F  1D03               	btfss	3,2
  9869  0320  2B22               	goto	u197_21
  9870  0321  2B23               	goto	u197_20
  9871  0322                     u197_21:
  9872  0322  2B17               	goto	i1l2559
  9873  0323                     u197_20:
  9874  0323                     i1l581:
  9875  0323                     i1l2561:	
  9876                           ;main.c: 140: _delay((unsigned long)((1)*(1000000/4000000.0)));
  9877                           
  9878                           
  9879                           ;main.c: 141: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  9880  0323  0876               	movf	i1LCDsend2x4@hc,w
  9881  0324  0472               	iorwf	i1LCDsend2x4@mode,w
  9882  0325  3808               	iorlw	8
  9883  0326  3186  26A9  3182   	fcall	i1_WriteI2C
  9884  0329                     i1l2563:
  9885  0329  0023               	movlb	3	; select bank3
  9886  032A  0C0F               	rrf	15,w	;volatile
  9887  032B  0C89               	rrf	9,f
  9888  032C  3901               	andlw	1
  9889  032D  00F3               	movwf	??i1_LCDsend2x4
  9890  032E  0811               	movf	17,w	;volatile
  9891  032F  391F               	andlw	31
  9892  0330  0473               	iorwf	??i1_LCDsend2x4,w
  9893  0331  1D03               	btfss	3,2
  9894  0332  2B34               	goto	u198_21
  9895  0333  2B35               	goto	u198_20
  9896  0334                     u198_21:
  9897  0334  2B29               	goto	i1l2563
  9898  0335                     u198_20:
  9899  0335                     i1l2565:
  9900                           
  9901                           ;main.c: 142: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  9902  0335  0877               	movf	i1LCDsend2x4@lc,w
  9903  0336  0472               	iorwf	i1LCDsend2x4@mode,w
  9904  0337  3808               	iorlw	8
  9905  0338  3186  26A9  3182   	fcall	i1_WriteI2C
  9906  033B                     i1l2567:
  9907  033B  0023               	movlb	3	; select bank3
  9908  033C  0C0F               	rrf	15,w	;volatile
  9909  033D  0C89               	rrf	9,f
  9910  033E  3901               	andlw	1
  9911  033F  00F3               	movwf	??i1_LCDsend2x4
  9912  0340  0811               	movf	17,w	;volatile
  9913  0341  391F               	andlw	31
  9914  0342  0473               	iorwf	??i1_LCDsend2x4,w
  9915  0343  1D03               	btfss	3,2
  9916  0344  2B46               	goto	u199_21
  9917  0345  2B47               	goto	u199_20
  9918  0346                     u199_21:
  9919  0346  2B3B               	goto	i1l2567
  9920  0347                     u199_20:
  9921  0347                     i1l2569:
  9922                           
  9923                           ;main.c: 143: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  9924  0347  0877               	movf	i1LCDsend2x4@lc,w
  9925  0348  0472               	iorwf	i1LCDsend2x4@mode,w
  9926  0349  380C               	iorlw	12
  9927  034A  3186  26A9  3182   	fcall	i1_WriteI2C
  9928  034D                     i1l2571:
  9929  034D  0023               	movlb	3	; select bank3
  9930  034E  0C0F               	rrf	15,w	;volatile
  9931  034F  0C89               	rrf	9,f
  9932  0350  3901               	andlw	1
  9933  0351  00F3               	movwf	??i1_LCDsend2x4
  9934  0352  0811               	movf	17,w	;volatile
  9935  0353  391F               	andlw	31
  9936  0354  0473               	iorwf	??i1_LCDsend2x4,w
  9937  0355  1D03               	btfss	3,2
  9938  0356  2B58               	goto	u200_21
  9939  0357  2B59               	goto	u200_20
  9940  0358                     u200_21:
  9941  0358  2B4D               	goto	i1l2571
  9942  0359                     u200_20:
  9943  0359                     i1l590:
  9944  0359                     i1l2573:	
  9945                           ;main.c: 144: _delay((unsigned long)((1)*(1000000/4000000.0)));
  9946                           
  9947                           
  9948                           ;main.c: 145: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  9949  0359  0877               	movf	i1LCDsend2x4@lc,w
  9950  035A  0472               	iorwf	i1LCDsend2x4@mode,w
  9951  035B  3808               	iorlw	8
  9952  035C  3186  26A9  3182   	fcall	i1_WriteI2C
  9953  035F                     i1l2575:
  9954  035F  0023               	movlb	3	; select bank3
  9955  0360  0C0F               	rrf	15,w	;volatile
  9956  0361  0C89               	rrf	9,f
  9957  0362  3901               	andlw	1
  9958  0363  00F3               	movwf	??i1_LCDsend2x4
  9959  0364  0811               	movf	17,w	;volatile
  9960  0365  391F               	andlw	31
  9961  0366  0473               	iorwf	??i1_LCDsend2x4,w
  9962  0367  1D03               	btfss	3,2
  9963  0368  2B6A               	goto	u201_21
  9964  0369  2B6B               	goto	u201_20
  9965  036A                     u201_21:
  9966  036A  2B5F               	goto	i1l2575
  9967  036B                     u201_20:
  9968  036B                     i1l593:
  9969                           
  9970                           ;main.c: 146: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  9971  036B  1511               	bsf	17,2	;volatile
  9972  036C                     i1l594:
  9973  036C  1911               	btfsc	17,2	;volatile
  9974  036D  2B6F               	goto	u202_21
  9975  036E  2B70               	goto	u202_20
  9976  036F                     u202_21:
  9977  036F  2B6C               	goto	i1l594
  9978  0370                     u202_20:
  9979  0370                     i1l2577:
  9980                           
  9981                           ;main.c: 147: _delay((unsigned long)((50)*(1000000/4000000.0)));
  9982  0370  3004               	movlw	4
  9983  0371                     u450_27:
  9984  0371  0B89               	decfsz	9,f
  9985  0372  2B71               	goto	u450_27
  9986  0373                     i1l597:
  9987  0373  0008               	return
  9988  0374                     __end_ofi1_LCDsend2x4:
  9989                           
  9990                           	psect	text30
  9991  06A9                     __ptext30:	
  9992 ;; *************** function i1_WriteI2C *****************
  9993 ;; Defined at:
  9994 ;;		line 47 in file "I2C/i2c.c"
  9995 ;; Parameters:    Size  Location     Type
  9996 ;;  data_out        1    wreg     unsigned char 
  9997 ;; Auto vars:     Size  Location     Type
  9998 ;;  data_out        1    1[COMMON] unsigned char 
  9999 ;; Return value:  Size  Location     Type
 10000 ;;                  1    wreg      char 
 10001 ;; Registers used:
 10002 ;;		wreg, status,2, status,0
 10003 ;; Tracked objects:
 10004 ;;		On entry : 0/0
 10005 ;;		On exit  : 0/0
 10006 ;;		Unchanged: 0/0
 10007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10012 ;;Total ram usage:        2 bytes
 10013 ;; Hardware stack levels used:    1
 10014 ;; This function calls:
 10015 ;;		Nothing
 10016 ;; This function is called by:
 10017 ;;		i1_LCDsend2x4
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020                           
 10021                           
 10022                           ;psect for function i1_WriteI2C
 10023  06A9                     i1_WriteI2C:
 10024                           
 10025                           ;incstack = 0
 10026                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 10027                           ;i1WriteI2C@data_out stored from wreg
 10028  06A9  00F1               	movwf	i1WriteI2C@data_out
 10029  06AA                     i1l2511:
 10030                           
 10031                           ;i2c.c: 49: SSP1BUF = data_out;
 10032  06AA  0871               	movf	i1WriteI2C@data_out,w
 10033  06AB  0023               	movlb	3	; select bank3
 10034  06AC  008C               	movwf	12	;volatile
 10035  06AD                     i1l2513:
 10036                           
 10037                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 10038  06AD  1F90               	btfss	16,7	;volatile
 10039  06AE  2EB0               	goto	u182_21
 10040  06AF  2EB1               	goto	u182_20
 10041  06B0                     u182_21:
 10042  06B0  2EB2               	goto	i1l2519
 10043  06B1                     u182_20:
 10044  06B1  2EF3               	goto	i1l30
 10045  06B2                     i1l2519:
 10046                           
 10047                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 10048  06B2  300F               	movlw	15
 10049  06B3  0510               	andwf	16,w	;volatile
 10050  06B4  00F0               	movwf	??i1_WriteI2C
 10051  06B5  3008               	movlw	8
 10052  06B6  0670               	xorwf	??i1_WriteI2C,w
 10053  06B7  1903               	btfsc	3,2
 10054  06B8  2EBA               	goto	u183_21
 10055  06B9  2EBB               	goto	u183_20
 10056  06BA                     u183_21:
 10057  06BA  2ED1               	goto	i1l2531
 10058  06BB                     u183_20:
 10059  06BB                     i1l2521:
 10060  06BB  300F               	movlw	15
 10061  06BC  0510               	andwf	16,w	;volatile
 10062  06BD  00F0               	movwf	??i1_WriteI2C
 10063  06BE  300B               	movlw	11
 10064  06BF  0670               	xorwf	??i1_WriteI2C,w
 10065  06C0  1903               	btfsc	3,2
 10066  06C1  2EC3               	goto	u184_21
 10067  06C2  2EC4               	goto	u184_20
 10068  06C3                     u184_21:
 10069  06C3  2ED1               	goto	i1l2531
 10070  06C4                     u184_20:
 10071  06C4                     i1l2523:
 10072                           
 10073                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 10074  06C4  1610               	bsf	16,4	;volatile
 10075  06C5                     i1l33:	
 10076                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 10077                           
 10078  06C5  002E               	movlb	14	; select bank14
 10079  06C6  1C0F               	btfss	15,0	;volatile
 10080  06C7  2EC9               	goto	u185_21
 10081  06C8  2ECA               	goto	u185_20
 10082  06C9                     u185_21:
 10083  06C9  2EC5               	goto	i1l33
 10084  06CA                     u185_20:
 10085  06CA                     i1l35:
 10086                           
 10087                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 10088  06CA  0023               	movlb	3	; select bank3
 10089  06CB  190F               	btfsc	15,2	;volatile
 10090  06CC  2ECE               	goto	u186_21
 10091  06CD  2ECF               	goto	u186_20
 10092  06CE                     u186_21:
 10093  06CE  2EF3               	goto	i1l30
 10094  06CF                     u186_20:
 10095  06CF                     i1l2525:
 10096  06CF  080F               	movf	15,w	;volatile
 10097  06D0  2EF3               	goto	i1l30
 10098  06D1                     i1l2531:
 10099                           
 10100                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 10101  06D1  300F               	movlw	15
 10102  06D2  0510               	andwf	16,w	;volatile
 10103  06D3  00F0               	movwf	??i1_WriteI2C
 10104  06D4  3008               	movlw	8
 10105  06D5  0670               	xorwf	??i1_WriteI2C,w
 10106  06D6  1903               	btfsc	3,2
 10107  06D7  2ED9               	goto	u187_21
 10108  06D8  2EDA               	goto	u187_20
 10109  06D9                     u187_21:
 10110  06D9  2EE3               	goto	i1l42
 10111  06DA                     u187_20:
 10112  06DA                     i1l2533:
 10113  06DA  300F               	movlw	15
 10114  06DB  0510               	andwf	16,w	;volatile
 10115  06DC  00F0               	movwf	??i1_WriteI2C
 10116  06DD  300B               	movlw	11
 10117  06DE  0670               	xorwf	??i1_WriteI2C,w
 10118  06DF  1D03               	btfss	3,2
 10119  06E0  2EE2               	goto	u188_21
 10120  06E1  2EE3               	goto	u188_20
 10121  06E2                     u188_21:
 10122  06E2  2EF3               	goto	i1l30
 10123  06E3                     u188_20:
 10124  06E3                     i1l42:
 10125  06E3  180F               	btfsc	15,0	;volatile
 10126  06E4  2EE6               	goto	u189_21
 10127  06E5  2EE7               	goto	u189_20
 10128  06E6                     u189_21:
 10129  06E6  2EE3               	goto	i1l42
 10130  06E7                     u189_20:
 10131  06E7                     i1l2535:
 10132  06E7  0C0F               	rrf	15,w	;volatile
 10133  06E8  0C89               	rrf	9,f
 10134  06E9  3901               	andlw	1
 10135  06EA  00F0               	movwf	??i1_WriteI2C
 10136  06EB  0811               	movf	17,w	;volatile
 10137  06EC  391F               	andlw	31
 10138  06ED  0470               	iorwf	??i1_WriteI2C,w
 10139  06EE  1D03               	btfss	3,2
 10140  06EF  2EF1               	goto	u190_21
 10141  06F0  2EF2               	goto	u190_20
 10142  06F1                     u190_21:
 10143  06F1  2EE7               	goto	i1l2535
 10144  06F2                     u190_20:
 10145  06F2                     i1l47:
 10146                           
 10147                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 10148  06F2  0811               	movf	17,w	;volatile
 10149  06F3                     i1l30:
 10150  06F3  0008               	return
 10151  06F4                     __end_ofi1_WriteI2C:
 10152                           
 10153                           	psect	text31
 10154  0F37                     __ptext31:	
 10155 ;; *************** function _TMR3_WriteTimer *****************
 10156 ;; Defined at:
 10157 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;  timerVal        2    0[COMMON] unsigned int 
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;		None
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  1    wreg      void 
 10164 ;; Registers used:
 10165 ;;		wreg, status,2
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;Total ram usage:        2 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; This function calls:
 10178 ;;		Nothing
 10179 ;; This function is called by:
 10180 ;;		_TMR3_ISR
 10181 ;;		_TMR3_Reload
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           
 10186                           ;psect for function _TMR3_WriteTimer
 10187  0F37                     _TMR3_WriteTimer:
 10188  0F37                     i1l3021:	
 10189                           ;incstack = 0
 10190                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 10191                           
 10192                           
 10193                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 10194  0F37  0024               	movlb	4	; select bank4
 10195  0F38  1D14               	btfss	20,2	;volatile
 10196  0F39  2F3B               	goto	u274_21
 10197  0F3A  2F3C               	goto	u274_20
 10198  0F3B                     u274_21:
 10199  0F3B  2F43               	goto	i1l3031
 10200  0F3C                     u274_20:
 10201  0F3C                     i1l3023:
 10202                           
 10203                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 10204  0F3C  1014               	bcf	20,0	;volatile
 10205  0F3D                     i1l3025:
 10206                           
 10207                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 10208  0F3D  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 10209  0F3E  0093               	movwf	19	;volatile
 10210  0F3F                     i1l3027:
 10211                           
 10212                           ;tmr3.c: 136: TMR3L = timerVal;
 10213  0F3F  0870               	movf	TMR3_WriteTimer@timerVal,w
 10214  0F40  0092               	movwf	18	;volatile
 10215  0F41                     i1l3029:
 10216                           
 10217                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 10218  0F41  1414               	bsf	20,0	;volatile
 10219                           
 10220                           ;tmr3.c: 140: }
 10221  0F42  2F47               	goto	i1l757
 10222  0F43                     i1l3031:
 10223                           
 10224                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 10225  0F43  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 10226  0F44  0093               	movwf	19	;volatile
 10227  0F45                     i1l3033:
 10228                           
 10229                           ;tmr3.c: 145: TMR3L = timerVal;
 10230  0F45  0870               	movf	TMR3_WriteTimer@timerVal,w
 10231  0F46  0092               	movwf	18	;volatile
 10232  0F47                     i1l757:
 10233  0F47  0008               	return
 10234  0F48                     __end_of_TMR3_WriteTimer:
 10235                           
 10236                           	psect	text32
 10237  0F5A                     __ptext32:	
 10238 ;; *************** function _TMR1_ISR *****************
 10239 ;; Defined at:
 10240 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;		None
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;		None
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  1    wreg      void 
 10247 ;; Registers used:
 10248 ;;		wreg, status,2, status,0, pclath, cstack
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;Total ram usage:        0 bytes
 10259 ;; Hardware stack levels used:    1
 10260 ;; Hardware stack levels required when called:    1
 10261 ;; This function calls:
 10262 ;;		Absolute function
 10263 ;;		_Clock_ISR
 10264 ;;		_TMR1_DefaultInterruptHandler
 10265 ;;		_TMR1_WriteTimer
 10266 ;; This function is called by:
 10267 ;;		_INTERRUPT_InterruptManager
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           
 10272                           ;psect for function _TMR1_ISR
 10273  0F5A                     _TMR1_ISR:
 10274  0F5A                     i1l3065:	
 10275                           ;incstack = 0
 10276                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 10277                           
 10278                           
 10279                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 10280  0F5A  002E               	movlb	14	; select bank14
 10281  0F5B  1010               	bcf	16,0	;volatile
 10282  0F5C                     i1l3067:
 10283                           
 10284                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 10285  0F5C  0020               	movlb	0	; select bank0
 10286  0F5D  0858               	movf	_timer1ReloadVal+1,w	;volatile
 10287  0F5E  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 10288  0F5F  0857               	movf	_timer1ReloadVal,w	;volatile
 10289  0F60  00F0               	movwf	TMR1_WriteTimer@timerVal
 10290  0F61  318F  2726  318F   	fcall	_TMR1_WriteTimer
 10291  0F64                     i1l3069:
 10292                           
 10293                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 10294  0F64  0020               	movlb	0	; select bank0
 10295  0F65  0855               	movf	_TMR1_InterruptHandler,w
 10296  0F66  0456               	iorwf	_TMR1_InterruptHandler+1,w
 10297  0F67  1903               	btfsc	3,2
 10298  0F68  2F6A               	goto	u277_21
 10299  0F69  2F6B               	goto	u277_20
 10300  0F6A                     u277_21:
 10301  0F6A  2F70               	goto	i1l706
 10302  0F6B                     u277_20:
 10303  0F6B                     i1l3071:
 10304                           
 10305                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 10306  0F6B  0856               	movf	_TMR1_InterruptHandler+1,w
 10307  0F6C  008A               	movwf	10
 10308  0F6D  0855               	movf	_TMR1_InterruptHandler,w
 10309  0F6E  000A               	callw
 10310  0F6F  318F               	pagesel	$
 10311  0F70                     i1l706:
 10312  0F70  0008               	return
 10313  0F71                     __end_of_TMR1_ISR:
 10314                           
 10315                           	psect	text33
 10316  0F26                     __ptext33:	
 10317 ;; *************** function _TMR1_WriteTimer *****************
 10318 ;; Defined at:
 10319 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;  timerVal        2    0[COMMON] unsigned int 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;		None
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  1    wreg      void 
 10326 ;; Registers used:
 10327 ;;		wreg, status,2
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;Total ram usage:        2 bytes
 10338 ;; Hardware stack levels used:    1
 10339 ;; This function calls:
 10340 ;;		Nothing
 10341 ;; This function is called by:
 10342 ;;		_TMR1_ISR
 10343 ;;		_TMR1_Reload
 10344 ;; This function uses a non-reentrant model
 10345 ;;
 10346                           
 10347                           
 10348                           ;psect for function _TMR1_WriteTimer
 10349  0F26                     _TMR1_WriteTimer:
 10350  0F26                     i1l3007:	
 10351                           ;incstack = 0
 10352                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 10353                           
 10354                           
 10355                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 10356  0F26  0024               	movlb	4	; select bank4
 10357  0F27  1D0E               	btfss	14,2	;volatile
 10358  0F28  2F2A               	goto	u273_21
 10359  0F29  2F2B               	goto	u273_20
 10360  0F2A                     u273_21:
 10361  0F2A  2F32               	goto	i1l3017
 10362  0F2B                     u273_20:
 10363  0F2B                     i1l3009:
 10364                           
 10365                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 10366  0F2B  100E               	bcf	14,0	;volatile
 10367  0F2C                     i1l3011:
 10368                           
 10369                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 10370  0F2C  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10371  0F2D  008D               	movwf	13	;volatile
 10372  0F2E                     i1l3013:
 10373                           
 10374                           ;tmr1.c: 136: TMR1L = timerVal;
 10375  0F2E  0870               	movf	TMR1_WriteTimer@timerVal,w
 10376  0F2F  008C               	movwf	12	;volatile
 10377  0F30                     i1l3015:
 10378                           
 10379                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 10380  0F30  140E               	bsf	14,0	;volatile
 10381                           
 10382                           ;tmr1.c: 140: }
 10383  0F31  2F36               	goto	i1l693
 10384  0F32                     i1l3017:
 10385                           
 10386                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 10387  0F32  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10388  0F33  008D               	movwf	13	;volatile
 10389  0F34                     i1l3019:
 10390                           
 10391                           ;tmr1.c: 145: TMR1L = timerVal;
 10392  0F34  0870               	movf	TMR1_WriteTimer@timerVal,w
 10393  0F35  008C               	movwf	12	;volatile
 10394  0F36                     i1l693:
 10395  0F36  0008               	return
 10396  0F37                     __end_of_TMR1_WriteTimer:
 10397                           
 10398                           	psect	text34
 10399  07C9                     __ptext34:	
 10400 ;; *************** function _Clock_ISR *****************
 10401 ;; Defined at:
 10402 ;;		line 218 in file "main.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;		None
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;		None
 10407 ;; Return value:  Size  Location     Type
 10408 ;;                  1    wreg      void 
 10409 ;; Registers used:
 10410 ;;		wreg, status,2, status,0
 10411 ;; Tracked objects:
 10412 ;;		On entry : 0/0
 10413 ;;		On exit  : 0/0
 10414 ;;		Unchanged: 0/0
 10415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;Total ram usage:        0 bytes
 10421 ;; Hardware stack levels used:    1
 10422 ;; This function calls:
 10423 ;;		Nothing
 10424 ;; This function is called by:
 10425 ;;		_main
 10426 ;;		_TMR1_ISR
 10427 ;; This function uses a non-reentrant model
 10428 ;;
 10429                           
 10430                           
 10431                           ;psect for function _Clock_ISR
 10432  07C9                     _Clock_ISR:
 10433  07C9                     i1l2957:	
 10434                           ;incstack = 0
 10435                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0]
 10436                           
 10437                           
 10438                           ;main.c: 220: t.s++;
 10439  07C9  3001               	movlw	1
 10440  07CA  0020               	movlb	0	; select bank0
 10441  07CB  07CB               	addwf	_t+4,f
 10442  07CC  3000               	movlw	0
 10443  07CD  3DCC               	addwfc	_t+5,f
 10444  07CE                     i1l2959:
 10445                           
 10446                           ;main.c: 222: if(t.s==60){
 10447  07CE  303C               	movlw	60
 10448  07CF  064B               	xorwf	_t+4,w
 10449  07D0  044C               	iorwf	_t+5,w
 10450  07D1  1D03               	btfss	3,2
 10451  07D2  2FD4               	goto	u270_21
 10452  07D3  2FD5               	goto	u270_20
 10453  07D4                     u270_21:
 10454  07D4  2FDB               	goto	i1l2965
 10455  07D5                     u270_20:
 10456  07D5                     i1l2961:
 10457                           
 10458                           ;main.c: 223: t.m++;
 10459  07D5  3001               	movlw	1
 10460  07D6  07C9               	addwf	_t+2,f
 10461  07D7  3000               	movlw	0
 10462  07D8  3DCA               	addwfc	_t+3,f
 10463  07D9                     i1l2963:
 10464                           
 10465                           ;main.c: 224: t.s=0;
 10466  07D9  01CB               	clrf	_t+4
 10467  07DA  01CC               	clrf	_t+5
 10468  07DB                     i1l2965:
 10469                           
 10470                           ;main.c: 225: };main.c: 226: if(t.m==60){
 10471  07DB  303C               	movlw	60
 10472  07DC  0649               	xorwf	_t+2,w
 10473  07DD  044A               	iorwf	_t+3,w
 10474  07DE  1D03               	btfss	3,2
 10475  07DF  2FE1               	goto	u271_21
 10476  07E0  2FE2               	goto	u271_20
 10477  07E1                     u271_21:
 10478  07E1  2FE8               	goto	i1l2971
 10479  07E2                     u271_20:
 10480  07E2                     i1l2967:
 10481                           
 10482                           ;main.c: 227: t.h++;
 10483  07E2  3001               	movlw	1
 10484  07E3  07C7               	addwf	_t,f
 10485  07E4  3000               	movlw	0
 10486  07E5  3DC8               	addwfc	_t+1,f
 10487  07E6                     i1l2969:
 10488                           
 10489                           ;main.c: 228: t.m=0;
 10490  07E6  01C9               	clrf	_t+2
 10491  07E7  01CA               	clrf	_t+3
 10492  07E8                     i1l2971:
 10493                           
 10494                           ;main.c: 229: };main.c: 230: if(t.h==24){
 10495  07E8  3018               	movlw	24
 10496  07E9  0647               	xorwf	_t,w
 10497  07EA  0448               	iorwf	_t+1,w
 10498  07EB  1D03               	btfss	3,2
 10499  07EC  2FEE               	goto	u272_21
 10500  07ED  2FEF               	goto	u272_20
 10501  07EE                     u272_21:
 10502  07EE  2FF1               	goto	i1l624
 10503  07EF                     u272_20:
 10504  07EF                     i1l2973:
 10505                           
 10506                           ;main.c: 231: t.h=0;
 10507  07EF  01C7               	clrf	_t
 10508  07F0  01C8               	clrf	_t+1
 10509  07F1                     i1l624:
 10510  07F1  0008               	return
 10511  07F2                     __end_of_Clock_ISR:
 10512                           
 10513                           	psect	text35
 10514  07FF                     __ptext35:	
 10515 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 10516 ;; Defined at:
 10517 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;		None
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;		None
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  1    wreg      void 
 10524 ;; Registers used:
 10525 ;;		None
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10535 ;;Total ram usage:        0 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; This function calls:
 10538 ;;		Nothing
 10539 ;; This function is called by:
 10540 ;;		_TMR1_Initialize
 10541 ;;		_TMR1_ISR
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           
 10546                           ;psect for function _TMR1_DefaultInterruptHandler
 10547  07FF                     _TMR1_DefaultInterruptHandler:
 10548  07FF                     i1l712:	
 10549                           ;incstack = 0
 10550                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 10551                           
 10552  07FF  0008               	return
 10553  0800                     __end_of_TMR1_DefaultInterruptHandler:
 10554  007E                     btemp	set	126	;btemp
 10555  007E                     int$flags	set	126
 10556  007E                     wtemp0	set	126
 10557                           
 10558                           	psect	config
 10559                           
 10560                           ;Config register CONFIG1 @ 0x8007
 10561                           ;	External Oscillator mode selection bits
 10562                           ;	FEXTOSC = OFF, Oscillator not enabled
 10563                           ;	Power-up default value for COSC bits
 10564                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 10565                           ;	Clock Out Enable bit
 10566                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 10567                           ;	Clock Switch Enable bit
 10568                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10569                           ;	Fail-Safe Clock Monitor Enable bit
 10570                           ;	FCMEN = ON, FSCM timer enabled
 10571  8007                     	org	32775
 10572  8007  3FEC               	dw	16364
 10573                           
 10574                           ;Config register CONFIG2 @ 0x8008
 10575                           ;	Master Clear Enable bit
 10576                           ;	MCLRE = ON, MCLR pin is Master Clear function
 10577                           ;	Power-up Timer Enable bit
 10578                           ;	PWRTE = OFF, PWRT disabled
 10579                           ;	Low-Power BOR enable bit
 10580                           ;	LPBOREN = OFF, ULPBOR disabled
 10581                           ;	Brown-out reset enable bits
 10582                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 10583                           ;	Brown-out Reset Voltage Selection
 10584                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 10585                           ;	Zero-cross detect disable
 10586                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 10587                           ;	Peripheral Pin Select one-way control
 10588                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 10589                           ;	Stack Overflow/Underflow Reset Enable bit
 10590                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 10591                           ;	Background Debugger
 10592                           ;	DEBUG = OFF, Background Debugger disabled
 10593  8008                     	org	32776
 10594  8008  3FFF               	dw	16383
 10595                           
 10596                           ;Config register CONFIG3 @ 0x8009
 10597                           ;	WDT Period Select bits
 10598                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10599                           ;	WDT operating mode
 10600                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 10601                           ;	WDT Window Select bits
 10602                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10603                           ;	WDT input clock selector
 10604                           ;	WDTCCS = SC, Software Control
 10605  8009                     	org	32777
 10606  8009  3F9F               	dw	16287
 10607                           
 10608                           ;Config register CONFIG4 @ 0x800A
 10609                           ;	UserNVM self-write protection bits
 10610                           ;	WRT = OFF, Write protection off
 10611                           ;	Scanner Enable bit
 10612                           ;	SCANE = available, Scanner module is available for use
 10613                           ;	Low Voltage Programming Enable bit
 10614                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 10615  800A                     	org	32778
 10616  800A  3FFF               	dw	16383
 10617                           
 10618                           ;Config register CONFIG5 @ 0x800B
 10619                           ;	UserNVM Program memory code protection bit
 10620                           ;	CP = OFF, Program Memory code protection disabled
 10621                           ;	DataNVM code protection bit
 10622                           ;	CPD = OFF, Data EEPROM code protection disabled
 10623  800B                     	org	32779
 10624  800B  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        7
    BSS         10
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      64
    BANK1            80     36      36
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> menuLCD_ISR@l(BANK0[1]), STR_3(CODE[3]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 4
		 -> menuLCD_ISR@ll(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 4
		 -> menuLCD_ISR@ll(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[3]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[1]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), menuLCD_ISR(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Absolute function(), menuLCD_ISR(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Clock_ISR(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), Clock_ISR(), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 4
		 -> menuLCD_ISR@ll(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 8
		 -> menuLCD_ISR@ll(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), STR_2(CODE[6]), menuLCD_ISR@str(BANK0[8]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _menuLCD_ISR->_LCDstr
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->___fleq
    ___fleq->___xxtofl
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0    2716
                                             26 BANK1     10    10      0
                            _LCDinit
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
           _TMR3_SetInterruptHandler
                             ___fleq
                           ___xxtofl
                   _i2c1_driver_open
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fleq                                              12     4      8     242
                                             14 BANK1     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     422
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     211
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0    1003
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     941
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      62
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    4259
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    4019
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         18    18      0    3779
                                             21 BANK0     18    18      0
                             _LCDcmd
                             _LCDstr
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (7) _strcat                                               5     3      2     316
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    2063
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               6     4      2     755
                                              9 COMMON     5     3      2
                                              0 BANK0      1     1      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (10) i1_WriteI2C                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR3_SetInterruptHandler
   ___fleq
     ___xxtofl (ARG)
   ___xxtofl
   _i2c1_driver_open

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     24      24       7       45.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      72      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      72      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Oct 19 23:47:11 2020

                                       _t 0047                                i1_WriteI2C 06A9  
                                      l30 0606                                        l33 05CE  
                                      l42 05F0                                        l35 05D3  
                                      l47 0604                       ___wmul@multiplicand 0072  
                                     l120 076A                                       l162 0F25  
                                     l165 0F03                                       l229 07FD  
                                     l600 0539                                       l168 0EFA  
                                     l480 0659                                       l464 0618  
                                     l465 061A                                       l641 0497  
                                     l476 0653                                       l644 049D  
                                     l477 0655                                       l581 0261  
                                     l709 0F0C                                       l637 0444  
                                     l590 02A1                                       l566 020F  
                                     l567 0211                                       l743 0FFF  
                                     l593 02B7                                       l594 02B9  
                                     l597 02C0                                       l773 0F15  
                                     l679 0FE0                           _timer1ReloadVal 0057  
                 __size_of_PMD_Initialize 0008                                       wreg 0009  
                             ?_LCDsend2x4 00A2                           __end_of_LCDchar 0EF3  
                                    l1150 06A8                                      l1148 0677  
                                    l1412 0397                                      l1149 0693  
                                    l1414 0420                                      l1425 03EC  
                                    l3201 03B8                                      l1426 03F8  
                                    l1418 03D2                                      l3211 03E2  
                                    l3203 03BF                           _timer3ReloadVal 0053  
                                    l3221 0413                                      l3213 03E6  
                                    l3205 03C3                                      l3223 0417  
                                    l3215 03F0                                      l3207 03CB  
                                    l3401 075D                                      l3225 0418  
                                    l3217 03FA                                      l3209 03D9  
                                    l3403 075F                                      l3411 0EF3  
                                    l3219 040E                                      l3501 0292  
                                    l3413 0EFB                                      l3405 0762  
                                    l3421 0FE1                                      l3181 06A7  
                                    l3173 065A                                      l3351 05D8  
                                    l3503 02A1                                      l3415 0EFE  
                                    l3407 0765                                      l3431 0FF1  
                                    l3423 0FE4                                      l3511 0F19  
                                    l3175 066F                                      l3191 038F  
                                    l3361 05F5                                      l3345 05B7  
                                    l3337 05AF                                      l3505 02A8  
                                    l3601 04D1                                      l3417 0EFF  
                                    l3409 0767                                      l3441 0FC5  
                                    l3433 0FF3                                      l3425 0FE6  
                                    l3513 0F1C                                      l3177 068B  
                                    l3193 039F                                      l3185 0376  
                                    l3521 07F7                                      l3347 05C1  
                                    l3339 05B2                                      l3507 02BD  
                                    l3611 04F5                                      l3603 04D9  
                                    l3419 0F02                                      l3371 0730  
                                    l3451 0FD4                                      l3443 0FC7  
                                    l3435 0FF4                                      l3427 0FE8  
                                    l3515 0F1F                                      l3179 06A5  
                                    l3187 037B                                      l3523 07F8  
                                    l3349 05CC                                      l3357 05DA  
                                    l3461 061E                                      l3621 0515  
                                    l3613 04F9                                      l3605 04DD  
                                    l3381 073E                                      l3373 0736  
                                    l3453 0FD5                                      l3445 0FC9  
                                    l3437 0FFC                                      l3429 0FEA  
                                    l3517 0F22                                      l3509 0F16  
                                    l3197 03A8                                      l3189 037F  
                                    l3525 07FA                                      l3701 0464  
                                    l3359 05E5                                      l3463 062D  
                                    l3471 01EF                                      l3623 051D  
                                    l3615 0501                                      l3607 04E9  
                                    l3391 0749                                      l3383 0740  
                                    l3375 0738                                      l3367 0F04  
                                    l3455 0FDD                                      l3447 0FCB  
                                    l3439 0FC2                                      l3199 03AD  
                                    l3519 07F2                                      l3703 0490  
                                    l3465 0631                                      l3457 0609  
                                    l3481 0228                                      l3473 01F4  
                                    l3625 0523                                      l3617 0505  
                                    l3609 04ED                                      l3393 0755  
                                    l3385 0743                                      l3377 073A  
                                    l3449 0FD2                                      l3369 0F0D  
                                    l3705 0499                                      l3467 0640  
                                    l3459 0609                                      l3491 0261  
                                    l3483 0237                                      l3475 0200  
                                    l3627 0529                                      l3619 0511  
                                    l3395 0757                                      l3387 0745  
                                    l3379 073C                                      l3707 049F  
                                    l3469 0644                                      l3493 0268  
                                    l3485 023D                                      l3477 0215  
                                    l3629 052F                                      l3397 0759  
                                    l3389 0747                                      l3709 04A4  
                                    l3495 0277                                      l3487 024C  
                                    l3479 0224                                      l3399 075B  
                                    l3497 027D                                      l3489 0252  
                         __end_of_LCDinit 053A                                      l3499 028C  
                                    l3691 043C                                      l3683 0421  
                                    l3597 04C4                                      l3693 0440  
                                    l3685 0437                                      l3599 04CD  
                                    l3695 0441                                      l3687 0439  
                                    l3697 0442                                      l3689 043A  
                                    l3699 0460                           __end_of_LCDsend 065A  
                                    STR_1 1000                                      STR_2 1019  
                                    STR_3 101F                                      STR_4 1022  
                                    u3100 039F                                      u3101 039E  
                                    _LATA 0016                                      _LATB 0017  
                                    _LATC 0018                                      u3200 0413  
                                    u3120 03BE                                      _LATD 0019  
                                    u3201 0412                                      u3121 03BD  
                                    _LATE 001A                                      u3050 066F  
                                    u3210 0417                                      u3051 066E  
                                    u3211 0416                                      u3115 03B2  
                                    u3060 068B                                      u3140 03D8  
                                    u3061 068A                                      u3141 03D7  
                                    u3070 06A5                                      u3071 06A4  
                                    u3135 03CC                                      u3160 03E6  
                                    u3080 037B                                      u3161 03E5  
                                    u3081 037A                                      u3170 03EC  
                                    u3090 037F                                      u3075 06A1  
                                    u3171 03EB                                      u3155 03DC  
                                    u3091 037E                                      u3180 03F0  
                                    u3181 03EF                                      u3190 0404  
                                    u3600 05D3                                      u3601 05D2  
                                    u3610 05D8                                      u3611 05D7  
                                    u3195 0400                                      u3620 05E5  
                                    u3700 0653                                      u3621 05E4  
                                    u3701 0652                                      u3630 05F0  
                                    u3710 0659                                      u3631 05EF  
                                    u3711 0658                                      u4407 04D6  
                                    u3640 05F5                                      u3800 028C  
                                    u3641 05F4                                      u3801 028B  
                                    u4417 04DE                                      u3650 0604  
                                    u3570 05B6                                      u3810 02A1  
                                    u3730 020F                                      u4370 0490  
                                    u3651 0603                                      u3571 05B5  
                                    u3811 02A0                                      u3731 020E  
                                    u4427 04EA                                      u4371 048F  
                                    u3580 05C1                                      u3660 0618  
                                    u3820 02B7                                      u3740 0215  
                                    u4380 0497                                      _PMD0 0796  
                                    u3581 05C0                                      u3661 0617  
                                    u3821 02B6                                      u3741 0214  
                                    u3725 01F7                                      u4437 04F2  
                                    u4381 0496                                      _PMD1 0797  
                                    i1l30 06F3                                      u3590 05CC  
                                    u3670 061E                                      u3830 02BD  
                                    u3750 0224                                      _PMD2 0798  
                                    u3591 05CB                                      u3671 061D  
                                    u3831 02BC                                      u3751 0223  
                                    u4447 04FE                                      _PMD3 0799  
                                    u3680 062D                                      u3760 0237  
                                    u3840 07F7                                      _PMD4 079A  
                                    i1l33 06C5                                      u3681 062C  
                                    u3761 0236                                      u4457 0506  
                                    u3841 07F6                                      _PMD5 079B  
                                    i1l42 06E3                                      u3690 0640  
                                    u3770 024C                                      i1l35 06CA  
                                    u3691 063F                                      u3771 024B  
                                    u4467 0512                                      u3780 0261  
                                    u3781 0260                                      u4477 051A  
                                    u4397 04C8                                      u3790 0277  
                                    i1l47 06F2                                      u3791 0276  
                                    u4487 0536                                      u4497 02BE  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                              ?_menuLCD_ISR 0070  
                                    _main 0421                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                                    start 0034                           _TMR3_Initialize 0FE1  
              ??_TMR1_SetInterruptHandler 00A2            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0F04                  __end_of_i2c1_driver_open 07FE  
                                   ?_main 0070                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T3CLK 0217  
                                   _T3CON 0214                           __end_of___lwdiv 0730  
                                   i1l333 0017                                     i1l342 0032  
                                   i1l335 0023                                     i1l336 0032  
                         __end_of___lwmod 079F                                     i1l337 002C  
                                   i1l603 0EE3                                     i1l612 0FA2  
                                   i1l606 0EF2                                     i1l631 05AC  
                                   i1l712 07FF                                     i1l624 07F1  
                                   i1l706 0F70                                     i1l581 0323  
                                   i1l590 0359                                     i1l566 02DF  
                                   i1l567 02E0                                     i1l593 036B  
                                   i1l594 036C                                     i1l770 0F87  
                                   i1l940 006D                                     i1l693 0F36  
                                   i1l757 0F47                                     i1l597 0373  
                                   i1l776 07FE                                     i1l981 0FC1  
                                   i1l958 0120                                     i1l975 01EC  
                                   i1l979 0FAD                                     _OSCEN 0891  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TMR3H 0213                                     _TMR3L 0212  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C         __size_of_TMR3_SetInterruptHandler 0009  
               ?_TMR3_SetInterruptHandler 00A0                          __end_of_TMR1_ISR 0F71  
                        __end_of_TMR3_ISR 0F88            ??_TMR3_DefaultInterruptHandler 0070  
                         __end_of_dpowers 1019                           __end_of_isdigit 0F5A  
                                   main@a 00C2                   __end_of_TMR1_Initialize 0FE1  
                                   pclath 000A                            menuLCD_ISR@str 0035  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 01ED                           _TMR1_WriteTimer 0F26  
                         __initialization 0036                              __end_of_main 04C4  
                             ?i1_WriteI2C 0070                       __size_of_LCDsend2x4 00D4  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00BA  
                      __size_of_Clock_ISR 0029                     _TMR3_InterruptHandler 0051  
                               ??_LCDchar 0078                                 ??_LCDinit 00A8  
                               ??_LCDsend 00A2                          __end_of_WriteI2C 0607  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T1GATE 0210  
                                  _T1GCON 020F                                    _T3GATE 0216  
                                  _T3GCON 0215                                    _RC3PPS 0F23  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l3001 0599                                    i1l3011 0F2C  
                                  i1l1251 072F                                    i1l3003 05A1  
                                  i1l3013 0F2E                                    i1l3021 0F37  
                                  i1l1261 079E                                    i1l3005 05A8  
                                  i1l3015 0F30                                    i1l3007 0F26  
                                  i1l3023 0F3C                                    i1l3031 0F43  
                                  u200_20 0359                                    i1l1432 0F59  
                                  i1l3009 0F2B                                    i1l3017 0F32  
                                  i1l3033 0F45                                    i1l3025 0F3D  
                                  u200_21 0358                                    i1l1441 07C8  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  i1l3019 0F34                                    i1l3027 0F3F  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  i1l3029 0F41                                    i1l3061 0F7B  
                                  _ODCONE 0F66                                    i1l3071 0F6B  
                                  i1l2511 06AA                                    i1l3063 0F82  
                                  u201_20 036B                                    i1l3065 0F5A  
                                  i1l2521 06BB                                    i1l2513 06AD  
                                  u201_21 036A                                    i1l2601 0FB7  
                                  i1l3057 0F71                                    i1l3241 001B  
                                  i1l3233 0006                                    i1l3067 0F5C  
                                  i1l2523 06C4                                    i1l2531 06D1  
                                  i1l2611 06FC                                    i1l2603 0FBD  
                                  i1l3059 0F73                                    i1l3243 001F  
                                  i1l3235 000A                                    i1l3069 0F64  
                                  i1l2533 06DA                                    i1l2525 06CF  
                                  i1l2541 02C2                                    i1l2621 071B  
                                  i1l2613 06FF                                    i1l2701 0069  
                                  i1l3245 0027                                    i1l3237 000F  
                                  i1l2535 06E7                                    i1l2519 06B2  
                                  i1l2551 02F3                                    i1l2543 02C7  
                                  i1l2623 071F                                    i1l2615 0704  
                                  i1l2607 06F4                                    i1l2711 0087  
                                  i1l2703 006E                                    i1l3239 0013  
                                  u202_20 0370                                    u202_21 036F  
                                  i1l2561 0323                                    i1l2553 02FF  
                                  i1l2545 02D3                                    i1l2625 0720  
                                  i1l2617 0708                                    i1l2609 06F6  
                                  i1l2641 077D                                    i1l2633 076B  
                                  i1l2713 008A                                    i1l3249 0030  
                                  i1l2571 034D                                    i1l2563 0329  
                                  i1l2555 0305                                    i1l2547 02E4  
                                  i1l2627 0725                                    i1l2619 070C  
                                  i1l2643 0781                                    i1l2635 0771  
                                  i1l2651 079A                                    i1l2731 00E1  
                                  i1l2715 009B                                    i1l2723 00BA  
                                  i1l2707 0072                                    i1l2811 07B6  
                                  i1l2803 07A0                   __end_of_TMR3_Initialize 1000  
                                  i1l2573 0359                                    i1l2565 0335  
                                  i1l2557 0311                                    i1l2549 02EF  
                                  u210_25 0700                                    i1l2629 072B  
                                  i1l2645 078B                                    i1l2637 0774  
                                  i1l2581 0F49                                    i1l2741 00EC  
                                  i1l2733 00E5                                    i1l2725 00D2  
                                  i1l2717 00AA                                    i1l2709 007B  
                                  i1l2813 07BA                                    i1l2805 07A5  
                                  i1l2575 035F                                    i1l2567 033B  
                                  i1l2559 0317                                    i1l2647 078F  
                                  i1l2639 0779                                    i1l2583 0F4A  
                                  i1l2751 011C                                    i1l2735 00EA  
                                  i1l2727 00D9                                    i1l2719 00AE  
                                  i1l2807 07A9                                    u211_20 070C  
                                  u203_20 0F50                                    i1l2577 0370  
                                  i1l2569 0347                                    u211_21 070B  
                                  i1l2649 0794                                    i1l2593 0FA3  
                                  i1l2585 0F50                                    u203_21 0F4F  
                                  i1l2761 0141                                    i1l2753 012B  
                                  i1l2745 0106                                    i1l2729 00DD  
                                  i1l2809 07B2                                    i1l2579 0EEC  
                                  i1l2691 0F8D                                    i1l2595 0FA5  
                                  i1l2587 0F56                                    i1l2771 015D  
                                  i1l2763 0148                                    i1l2755 0134  
                                  i1l2747 0110                                    i1l2685 0EDE  
                                  i1l2597 0FA9                                    i1l2589 0F58  
                                  i1l2781 0183                                    i1l2765 014C  
                                  i1l2773 0168                                    i1l2757 0137  
                                  i1l2749 0116                                    i1l2693 0052  
                                  i1l2687 0F88                                    i1l2599 0FB2  
                                  i1l2791 01C0                                    i1l2783 0189  
                                  i1l2775 016E                                    i1l2767 0152  
                                  i1l2759 013B                                    i1l2695 0057  
                                  u204_20 0F56                                    i1l2961 07D5  
                                  i1l2689 0F89                                    u204_21 0F55  
                                  i1l2793 01C7                                    i1l2785 0190  
                                  i1l2777 0175                                    i1l2769 0159  
                                  i1l2697 005D                                    i1l2971 07E8  
                                  i1l2963 07D9                                    i1l2795 01CB  
                                  i1l2779 0179                                    i1l2787 0194  
                                  i1l2699 0064                                    i1l2973 07EF  
                                  i1l2965 07DB                                    i1l2957 07C9  
                                  u212_25 070D                                    u220_25 0790  
                                  i1l2789 0199                                    i1l2797 01D4  
                                  i1l2981 055A                                    i1l2967 07E2  
                                  i1l2959 07CE                                    i1l2799 01E8  
                                  i1l2991 057A                                    i1l2983 055E  
                                  i1l2975 053A                                    u213_20 071B  
                                  u221_20 079A                                    u205_20 0FA9  
                                  i1l2969 07E6                                    u213_21 071A  
                                  u221_21 0799                                    u205_21 0FA8  
                                  i1l2993 0581                                    i1l2985 0565  
                                  i1l2977 054F                                    i1l2995 0585  
                                  i1l2987 0569                                    i1l2979 0553  
                                  u213_25 0717                                    i1l2997 0585  
                                  i1l2989 0572                                    i1l2999 0592  
                                  u214_25 0721                                    u206_25 0FAE  
                                  u231_20 0FA2                                    u215_20 072B  
                                  u231_21 0FA1                                    u215_21 072A  
                                  u207_25 0FB3                                    u216_20 0771  
                                  u208_20 0FBD                                    u240_20 012B  
                                  u232_20 005D                                    u216_21 0770  
                                  u208_21 0FBC                                    u240_21 012A  
                                  u232_21 005C                                    u240_25 0127  
                                  u209_20 06FC                                    u241_20 013B  
                                  u233_20 0087                                    u209_21 06FB  
                                  u241_21 013A                                    u233_21 0086  
                                  _LCDcmd 0EDD                                    u217_25 0775  
                                  u218_20 0781                                    u242_20 0141  
                                  u234_20 00BA                                    u250_20 07B1  
                                  u322_20 000A                                    u218_21 0780  
                                  u242_21 0140                                    u234_21 00B9  
                                  u250_21 07B0                                    u322_21 0009  
                                  u219_20 078B                                    u243_20 0152  
                                  u235_20 00E1                                    u251_20 07C8  
                                  u323_20 000F                                    u219_21 078A  
                                  u243_21 0151                                    u235_21 00E0  
                                  u251_21 07C7                                    u323_21 000E  
                                  u219_25 0787                                    u244_20 0167  
                                  u236_20 0105                                    u324_20 0013  
                                  u244_21 0166                                    u236_21 0104  
                                  u324_21 0012                                    u236_25 0101  
                                  u245_20 016E                                    u237_20 0110  
                                  u325_20 001B                                    u245_21 016D  
                                  u237_21 010F                                    u325_21 001A  
                                  u270_20 07D5                                    u190_20 06F2  
                                  u182_20 06B1                                    u246_20 0183  
                                  u238_20 0116                                    u326_20 001F  
                                  u270_21 07D4                                    u190_21 06F1  
                                  u182_21 06B0                                    u246_21 0182  
                                  u238_21 0115                                    u326_21 001E  
                                  u271_20 07E2                                    u183_20 06BB  
                                  u247_20 0189                                    u239_20 011C  
                                  u327_20 0027                                    u271_21 07E1  
                                  u183_21 06BA                                    u247_21 0188  
                                  u239_21 011B                                    u327_21 0026  
                                  u191_25 02CA                                    u272_20 07EF  
                                  u184_20 06C4                                    u192_20 02DF  
                                  u248_20 01D4                                    u328_20 002B  
                                  u272_21 07EE                                    u184_21 06C3  
                                  u192_21 02DE                                    u248_21 01D3  
                                  u328_21 002A                                    u273_20 0F2B  
                                  u185_20 06CA                                    u193_20 02E4  
                                  u249_20 01E8                                    u329_20 0030  
                                  u273_21 0F2A                                    u185_21 06C9  
                                  u193_21 02E3                                    u249_21 01E7  
                                  u329_21 002F                                    u274_20 0F3C  
                                  u186_20 06CF                                    u194_20 02EF  
                                  u274_21 0F3B                                    u186_21 06CE  
                                  u194_21 02EE                                    u450_27 0371  
                                  u187_20 06DA                                    u195_20 02FF  
                                  u187_21 06D9                                    u195_21 02FE  
                                  u188_20 06E3                                    u196_20 0311  
                                  u276_20 0F82                                    u188_21 06E2  
                                  u196_21 0310                                    u276_21 0F81  
                                  _LCDstr 0F88                                    u277_20 0F6B  
                                  u189_20 06E7                                    u197_20 0323  
                                  u277_21 0F6A                                    u189_21 06E6  
                                  u197_21 0322                                    u198_20 0335  
                                  u198_21 0334                                    u199_20 0347  
                                  u199_21 0346                                    _OSCFRQ 0893  
                        __end_of___xxtofl 0421                               LCDsend2x4@c 00A5  
                         _TMR3_WriteTimer 0F37      __end_of_TMR1_DefaultInterruptHandler 0800  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 07FF  
                                  ___fleq 065A                             ?i1_LCDsend2x4 0072  
                                  ___wmul 0FA3                                 ??___lwdiv 0074  
                               ??___lwmod 007C                                    _strcat 079F  
                          _PMD_Initialize 0EF3                                 ??_isdigit 0070  
TMR3_SetInterruptHandler@InterruptHandler 00A0  TMR1_SetInterruptHandler@InterruptHandler 00A0  
                               ??_sprintf 0028                   __end_of_TMR1_WriteTimer 0F37  
                     __size_ofi1_WriteI2C 004B                          ?_TMR1_Initialize 0070  
                            ___xxtofl@arg 00AA                              ___xxtofl@exp 00A9  
                       _SYSTEM_Initialize 0F16                              ___xxtofl@val 00A0  
                              ___fleq@ff1 00AE                                ___fleq@ff2 00B2  
                 __end_of__initialization 004C                        ?_SYSTEM_Initialize 0070  
                       __end_of_Clock_ISR 07F2                      __size_of_menuLCD_ISR 0073  
                          __pcstackCOMMON 0070                            ??i1_LCDsend2x4 0073  
                            __pidataBANK0 0EE4                       ??_SYSTEM_Initialize 00A2  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                               ?_TMR3_ISR 0070                              menuLCD_ISR@l 0046  
                  __end_of_PMD_Initialize 0EFB                              ??_LCDsend2x4 00A3  
               __end_of_SYSTEM_Initialize 0F26                              sprintf@width 0031  
                 __end_of_TMR3_WriteTimer 0F48                                __pbssBANK0 0047  
                                 ?_LCDcmd 0070                          ?_TMR3_Initialize 0070  
                                 ?_LCDstr 0079                                   LCDcmd@c 0078  
                                 LCDstr@c 0020                                   LCDstr@p 0079  
                              __pmaintext 0421                                   ?___fleq 00AE  
        __end_of_TMR3_SetInterruptHandler 0F16                                   ?___wmul 0070  
                              ??_TMR1_ISR 0072                                ??_TMR3_ISR 007E  
                              __pintentry 0004                        __end_of_LCDsend2x4 02C1  
                               ?_WriteI2C 0070                           ?_PMD_Initialize 0070  
                                 ?_strcat 0070                         ?_i2c1_driver_open 0070  
                               ?___xxtofl 00A0                                   _LCDchar 0EEB  
                                 _LCDinit 04C4                                   _LCDsend 0607  
                      ??_i2c1_driver_open 00A0                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                   _OSCTUNE 0892  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                                   _SSP1MSK 018E  
                        ?_TMR1_WriteTimer 0070                              LCDsend2x4@hc 00A6  
                            LCDsend2x4@lc 00A7                           __size_of_LCDcmd 0007  
                      _i2c1_driver_i2cISR 004D                           __size_of_LCDstr 001B  
                         __size_of___fleq 004F                              ??i1_WriteI2C 0070  
                         __size_of___wmul 001F                                   ___lwdiv 06F4  
                                 ___lwmod 076B                                ??_WriteI2C 00A0  
                                 __ptext1 07F2                                   __ptext2 0374  
                                 __ptext3 065A                                   __ptext4 0F16  
                                 __ptext5 0FE1                                   __ptext6 0F0D  
                                 __ptext7 0FC2                                   __ptext8 0F04  
                                 __ptext9 0EF3            ??_TMR1_DefaultInterruptHandler 0070  
                         __size_of_strcat 002A                                 _T1CONbits 020E  
                                 _dpowers 100F                     _OSCILLATOR_Initialize 0EFB  
                                 _isdigit 0F48                                ??___xxtofl 00A4  
                               _T3CONbits 0214         __size_of_TMR1_SetInterruptHandler 0009  
                ??_PIN_MANAGER_Initialize 00A0                 ?_TMR1_SetInterruptHandler 00A0  
                    __end_ofi1_LCDsend2x4 0374                __size_of_SYSTEM_Initialize 0010  
                                 main@aux 00BE                                   _sprintf 0050  
                    end_of_initialization 004C                          ?_TMR3_WriteTimer 0070  
                      __end_ofi1_WriteI2C 06F4                                   init_ram 0ED7  
                                 initloop 0ED8                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077                                 _PORTBbits 000D  
                _TMR3_SetInterruptHandler 0F0D                             ___xxtofl@sign 00A8  
                               _TRISCbits 0013                            __end_of_LCDcmd 0EE4  
                          __end_of_LCDstr 0FA3                            LCDsend2x4@mode 00A2  
                               _Clock_ISR 07C9                            __end_of___fleq 06A9  
                          __end_of___wmul 0FC2                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR3_ISR 0017                    ?_OSCILLATOR_Initialize 0070  
                           menuLCD_ISR@ll 0041                             menuLCD_ISR@tt 003D  
                          __end_of_strcat 07C9                       start_initialization 0036  
         __size_of_PIN_MANAGER_Initialize 003B                          WriteI2C@data_out 00A1  
                                ??_LCDcmd 0078                                  ??_LCDstr 007B  
                           ??_menuLCD_ISR 007E                  __size_of_TMR1_Initialize 001F  
                                ??___fleq 00B6                          ??_PMD_Initialize 00A0  
                              ?_Clock_ISR 0070                                  ??___wmul 0074  
                             __pdataBANK0 0059                                  ??_strcat 0072  
                       __size_of_WriteI2C 005A                     __size_ofi1_LCDsend2x4 00B3  
                                ?_LCDchar 0070                                  ?_LCDinit 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                       __size_of___xxtofl 00AD                              _isdigit$1992 0070  
                                LCDchar@c 0078                                  LCDsend@c 00A3  
                             sprintf@flag 0030                 __size_of_i2c1_driver_open 000C  
                             sprintf@prec 002D                                 __pnvBANK0 0051  
                        ___lwdiv@dividend 0072                    _PIN_MANAGER_Initialize 0730  
                __size_of_TMR3_Initialize 001F                       __end_of_menuLCD_ISR 05AD  
        __end_of_TMR1_SetInterruptHandler 0F0D                              i1_LCDsend2x4 02C1  
                                ?___lwdiv 0070                                  ?___lwmod 0078  
             _i2c1_driver_busCollisionISR 004F              ??_INTERRUPT_InterruptManager 007E  
                                ?_isdigit 0070                          ___lwdiv@quotient 0075  
                                ?_sprintf 0020                            ___wmul@product 0074  
                                _LATAbits 0016                                  _PIE3bits 0719  
                                _PIE4bits 071A                             i1LCDsend2x4@c 0075  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0030  
                                _PIR3bits 070F                                  _PIR4bits 0710  
              ??_TMR3_SetInterruptHandler 00A2                               ??_Clock_ISR 0070  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR1_ISR 0F5A                                  _TMR3_ISR 0F71  
                                _SSP1STAT 018F                         ??_TMR1_Initialize 00A2  
                       ___wmul@multiplier 0070                        i1WriteI2C@data_out 0071  
                        __size_of_LCDchar 0008                          __size_of_LCDinit 0076  
                        __size_of_LCDsend 0053                               _menuLCD_ISR 053A  
                __size_of_TMR3_WriteTimer 0011                   ??_OSCILLATOR_Initialize 00A0  
                        __size_of___lwdiv 003C                          __size_of___lwmod 0034  
                                _WriteI2C 05AD                         ??_TMR3_Initialize 00A2  
                _TMR1_SetInterruptHandler 0F04                          i1LCDsend2x4@mode 0072  
                   _TMR1_InterruptHandler 0055                                sprintf@val 002E  
                                ___xxtofl 0374                                strcat@from 0070  
                        __size_of_isdigit 0012                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                                  __ptext10 0730  
                                __ptext11 0EFB                                  __ptext20 079F  
                                __ptext12 04C4                                  __ptext21 0050  
                                __ptext13 01ED                                _T1GCONbits 020F  
                                __ptext30 06A9                                  __ptext22 0F48  
                                __ptext14 0607                                  __ptext31 0F37  
                                __ptext23 0FA3                                  __ptext15 05AD  
                                __ptext32 0F5A                                  __ptext24 076B  
                                __ptext33 0F26                                  __ptext25 06F4  
                                __ptext17 0F71                                  __ptext34 07C9  
                                __ptext26 0F88                                  __ptext18 07FE  
                                __ptext35 07FF                                  __ptext27 0EEB  
                                __ptext19 053A                                  __ptext28 0EDD  
                                __ptext29 02C1                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                          __size_of_sprintf 019D  
                              _T3GCONbits 0215                   TMR3_WriteTimer@timerVal 0070  
                        _i2c1_driver_open 07F2                             __size_of_main 00A3  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0034  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                         menuLCD_ISR@F12473 0059  
                       menuLCD_ISR@F12477 005D      __end_of_TMR3_DefaultInterruptHandler 07FF  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 07FE  
                              _INTCONbits 000B                                  isdigit@c 0071  
                              _LCDsend2x4 01ED                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0033  
                        ___lwmod@dividend 007A                   ?_PIN_MANAGER_Initialize 0070  
                       ??_TMR3_WriteTimer 0072                             __pstringtext1 100F  
                           __pstringtext2 1000                             __pstringtext3 1019  
                           __pstringtext4 101F                             __pstringtext5 1022  
                           __pstringtext6 0000                                  sprintf@c 0034  
                                sprintf@f 0020                                  strcat@cp 0074  
           ?_TMR3_DefaultInterruptHandler 0070                                  strcat@to 0073  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         ___lwmod@divisor 0078                           ___lwmod@counter 007D  
          __end_of_PIN_MANAGER_Initialize 076B                           _TMR1_Initialize 0FC2  
