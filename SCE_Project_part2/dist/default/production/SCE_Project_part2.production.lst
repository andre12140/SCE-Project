

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Dec 06 16:17:38 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    24                           	psect	inittext,global,class=CODE,delta=2
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text14,local,class=CODE,merge=1,delta=2
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,delta=2
    50                           	psect	text21,local,class=CODE,merge=1,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text40,local,class=CODE,merge=1,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	text49,local,class=CODE,merge=1,delta=2
    79                           	psect	text50,local,class=CODE,merge=1,delta=2
    80                           	psect	text51,local,class=CODE,merge=1,delta=2
    81                           	psect	text52,local,class=CODE,merge=1,delta=2
    82                           	psect	text53,local,class=CODE,merge=1,delta=2
    83                           	psect	text54,local,class=CODE,merge=1,delta=2
    84                           	psect	text55,local,class=CODE,merge=1,delta=2
    85                           	psect	text56,local,class=CODE,merge=1,delta=2
    86                           	psect	text57,local,class=CODE,merge=1,delta=2
    87                           	psect	text58,local,class=CODE,merge=1,delta=2
    88                           	psect	text59,local,class=CODE,merge=1,delta=2
    89                           	psect	text60,local,class=CODE,merge=1,delta=2
    90                           	psect	text61,local,class=CODE,merge=1,delta=2
    91                           	psect	text62,local,class=CODE,merge=1,delta=2
    92                           	psect	text63,local,class=CODE,merge=1,delta=2
    93                           	psect	text64,local,class=CODE,merge=1,delta=2
    94                           	psect	text65,local,class=CODE,merge=1,delta=2
    95                           	psect	text66,local,class=CODE,merge=1,delta=2
    96                           	psect	text67,local,class=CODE,merge=1,delta=2
    97                           	psect	text68,local,class=CODE,merge=1,delta=2
    98                           	psect	text69,local,class=CODE,merge=1,delta=2
    99                           	psect	text70,local,class=CODE,merge=1,delta=2
   100                           	psect	text71,local,class=CODE,merge=1,delta=2
   101                           	psect	intentry,global,class=CODE,delta=2
   102                           	psect	text73,local,class=CODE,merge=1,delta=2
   103                           	psect	text74,local,class=CODE,merge=1,delta=2
   104                           	psect	text75,local,class=CODE,merge=1,delta=2
   105                           	psect	text76,local,class=CODE,merge=1,delta=2
   106                           	psect	text77,local,class=CODE,merge=1,delta=2
   107                           	psect	text78,local,class=CODE,merge=1,delta=2
   108                           	psect	text79,local,class=CODE,merge=1,delta=2
   109                           	psect	text80,local,class=CODE,merge=1,delta=2
   110                           	psect	text81,local,class=CODE,merge=1,delta=2
   111                           	psect	text82,local,class=CODE,merge=1,delta=2
   112                           	psect	text83,local,class=CODE,merge=1,delta=2
   113                           	psect	text84,local,class=CODE,merge=1,delta=2
   114                           	psect	text85,local,class=CODE,merge=1,delta=2
   115                           	psect	text86,local,class=CODE,merge=1,delta=2
   116                           	psect	text87,local,class=CODE,merge=1,delta=2
   117                           	psect	text88,local,class=CODE,merge=1,delta=2
   118                           	psect	text89,local,class=CODE,merge=1,delta=2
   119                           	psect	text90,local,class=CODE,merge=1,delta=2
   120                           	psect	text91,local,class=CODE,merge=1,delta=2
   121                           	psect	text92,local,class=CODE,merge=1,delta=2
   122                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   123                           	dabs	1,0x7E,2
   124  0000                     
   125                           ; Version 2.30
   126                           ; Generated 15/09/2020 GMT
   127                           ; 
   128                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   129                           ; All rights reserved.
   130                           ; 
   131                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   132                           ; 
   133                           ; Redistribution and use in source and binary forms, with or without modification, are
   134                           ; permitted provided that the following conditions are met:
   135                           ; 
   136                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   137                           ;        conditions and the following disclaimer.
   138                           ; 
   139                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   140                           ;        of conditions and the following disclaimer in the documentation and/or other
   141                           ;        materials provided with the distribution. Publication is not required when
   142                           ;        this file is used in an embedded application.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC16F18875 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001C                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  008C                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0110                     	;# 
   220  0110                     	;# 
   221  0111                     	;# 
   222  0112                     	;# 
   223  0112                     	;# 
   224  0113                     	;# 
   225  0114                     	;# 
   226  0114                     	;# 
   227  0115                     	;# 
   228  0116                     	;# 
   229  0116                     	;# 
   230  0117                     	;# 
   231  0119                     	;# 
   232  0119                     	;# 
   233  0119                     	;# 
   234  011A                     	;# 
   235  011A                     	;# 
   236  011A                     	;# 
   237  011B                     	;# 
   238  011B                     	;# 
   239  011B                     	;# 
   240  011B                     	;# 
   241  011B                     	;# 
   242  011C                     	;# 
   243  011C                     	;# 
   244  011C                     	;# 
   245  011D                     	;# 
   246  011D                     	;# 
   247  011D                     	;# 
   248  011E                     	;# 
   249  011E                     	;# 
   250  011E                     	;# 
   251  011F                     	;# 
   252  011F                     	;# 
   253  011F                     	;# 
   254  011F                     	;# 
   255  011F                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258  018E                     	;# 
   259  018F                     	;# 
   260  0190                     	;# 
   261  0191                     	;# 
   262  0192                     	;# 
   263  0196                     	;# 
   264  0197                     	;# 
   265  0198                     	;# 
   266  0199                     	;# 
   267  019A                     	;# 
   268  019B                     	;# 
   269  019C                     	;# 
   270  020C                     	;# 
   271  020C                     	;# 
   272  020D                     	;# 
   273  020E                     	;# 
   274  020F                     	;# 
   275  020F                     	;# 
   276  0210                     	;# 
   277  0210                     	;# 
   278  0211                     	;# 
   279  0211                     	;# 
   280  0212                     	;# 
   281  0212                     	;# 
   282  0213                     	;# 
   283  0214                     	;# 
   284  0215                     	;# 
   285  0215                     	;# 
   286  0216                     	;# 
   287  0216                     	;# 
   288  0217                     	;# 
   289  0217                     	;# 
   290  0218                     	;# 
   291  0218                     	;# 
   292  0219                     	;# 
   293  021A                     	;# 
   294  021B                     	;# 
   295  021B                     	;# 
   296  021C                     	;# 
   297  021C                     	;# 
   298  021D                     	;# 
   299  021D                     	;# 
   300  021E                     	;# 
   301  021F                     	;# 
   302  028C                     	;# 
   303  028C                     	;# 
   304  028D                     	;# 
   305  028D                     	;# 
   306  028E                     	;# 
   307  028F                     	;# 
   308  0290                     	;# 
   309  0290                     	;# 
   310  0291                     	;# 
   311  0292                     	;# 
   312  0292                     	;# 
   313  0293                     	;# 
   314  0293                     	;# 
   315  0294                     	;# 
   316  0295                     	;# 
   317  0296                     	;# 
   318  0296                     	;# 
   319  0297                     	;# 
   320  0298                     	;# 
   321  0298                     	;# 
   322  0299                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029B                     	;# 
   326  029C                     	;# 
   327  029C                     	;# 
   328  029D                     	;# 
   329  030C                     	;# 
   330  030C                     	;# 
   331  030D                     	;# 
   332  030E                     	;# 
   333  030F                     	;# 
   334  0310                     	;# 
   335  0310                     	;# 
   336  0311                     	;# 
   337  0312                     	;# 
   338  0313                     	;# 
   339  0314                     	;# 
   340  0314                     	;# 
   341  0315                     	;# 
   342  0316                     	;# 
   343  0317                     	;# 
   344  0318                     	;# 
   345  0318                     	;# 
   346  0319                     	;# 
   347  031A                     	;# 
   348  031B                     	;# 
   349  031C                     	;# 
   350  031C                     	;# 
   351  031D                     	;# 
   352  031E                     	;# 
   353  031F                     	;# 
   354  038C                     	;# 
   355  038C                     	;# 
   356  038D                     	;# 
   357  038E                     	;# 
   358  0390                     	;# 
   359  0390                     	;# 
   360  0391                     	;# 
   361  0392                     	;# 
   362  040C                     	;# 
   363  040D                     	;# 
   364  040E                     	;# 
   365  040F                     	;# 
   366  0410                     	;# 
   367  0411                     	;# 
   368  0416                     	;# 
   369  0416                     	;# 
   370  0417                     	;# 
   371  0418                     	;# 
   372  0418                     	;# 
   373  0419                     	;# 
   374  041A                     	;# 
   375  041A                     	;# 
   376  041B                     	;# 
   377  041C                     	;# 
   378  041C                     	;# 
   379  041D                     	;# 
   380  041E                     	;# 
   381  041F                     	;# 
   382  048C                     	;# 
   383  048C                     	;# 
   384  048D                     	;# 
   385  048E                     	;# 
   386  048F                     	;# 
   387  048F                     	;# 
   388  0490                     	;# 
   389  0491                     	;# 
   390  0492                     	;# 
   391  0492                     	;# 
   392  0493                     	;# 
   393  0494                     	;# 
   394  0495                     	;# 
   395  0495                     	;# 
   396  0496                     	;# 
   397  0497                     	;# 
   398  0498                     	;# 
   399  0499                     	;# 
   400  049A                     	;# 
   401  049B                     	;# 
   402  049C                     	;# 
   403  049D                     	;# 
   404  050C                     	;# 
   405  050C                     	;# 
   406  050D                     	;# 
   407  050E                     	;# 
   408  050F                     	;# 
   409  050F                     	;# 
   410  0510                     	;# 
   411  0511                     	;# 
   412  0512                     	;# 
   413  0512                     	;# 
   414  0513                     	;# 
   415  0514                     	;# 
   416  0515                     	;# 
   417  0515                     	;# 
   418  0516                     	;# 
   419  0517                     	;# 
   420  0518                     	;# 
   421  0519                     	;# 
   422  051A                     	;# 
   423  051B                     	;# 
   424  051C                     	;# 
   425  051D                     	;# 
   426  058C                     	;# 
   427  058C                     	;# 
   428  058D                     	;# 
   429  058E                     	;# 
   430  058F                     	;# 
   431  058F                     	;# 
   432  0590                     	;# 
   433  0591                     	;# 
   434  0592                     	;# 
   435  0593                     	;# 
   436  060C                     	;# 
   437  060D                     	;# 
   438  060E                     	;# 
   439  060F                     	;# 
   440  0610                     	;# 
   441  0611                     	;# 
   442  0612                     	;# 
   443  0613                     	;# 
   444  0614                     	;# 
   445  0616                     	;# 
   446  0617                     	;# 
   447  0618                     	;# 
   448  0619                     	;# 
   449  061A                     	;# 
   450  061B                     	;# 
   451  061C                     	;# 
   452  061D                     	;# 
   453  061E                     	;# 
   454  068C                     	;# 
   455  068D                     	;# 
   456  068E                     	;# 
   457  068F                     	;# 
   458  0690                     	;# 
   459  0691                     	;# 
   460  0692                     	;# 
   461  0693                     	;# 
   462  0694                     	;# 
   463  070C                     	;# 
   464  070D                     	;# 
   465  070E                     	;# 
   466  070F                     	;# 
   467  0710                     	;# 
   468  0711                     	;# 
   469  0712                     	;# 
   470  0713                     	;# 
   471  0714                     	;# 
   472  0716                     	;# 
   473  0717                     	;# 
   474  0718                     	;# 
   475  0719                     	;# 
   476  071A                     	;# 
   477  071B                     	;# 
   478  071C                     	;# 
   479  071D                     	;# 
   480  071E                     	;# 
   481  0796                     	;# 
   482  0797                     	;# 
   483  0798                     	;# 
   484  0799                     	;# 
   485  079A                     	;# 
   486  079B                     	;# 
   487  080C                     	;# 
   488  080D                     	;# 
   489  080E                     	;# 
   490  080F                     	;# 
   491  0810                     	;# 
   492  0811                     	;# 
   493  0812                     	;# 
   494  0813                     	;# 
   495  0814                     	;# 
   496  081A                     	;# 
   497  081B                     	;# 
   498  081C                     	;# 
   499  081D                     	;# 
   500  081E                     	;# 
   501  081F                     	;# 
   502  088C                     	;# 
   503  088D                     	;# 
   504  088E                     	;# 
   505  088F                     	;# 
   506  0890                     	;# 
   507  0891                     	;# 
   508  0892                     	;# 
   509  0893                     	;# 
   510  0895                     	;# 
   511  0896                     	;# 
   512  0897                     	;# 
   513  0898                     	;# 
   514  0899                     	;# 
   515  089A                     	;# 
   516  089B                     	;# 
   517  090C                     	;# 
   518  090E                     	;# 
   519  090F                     	;# 
   520  091F                     	;# 
   521  091F                     	;# 
   522  098F                     	;# 
   523  098F                     	;# 
   524  0990                     	;# 
   525  0991                     	;# 
   526  0992                     	;# 
   527  0993                     	;# 
   528  0994                     	;# 
   529  0995                     	;# 
   530  0996                     	;# 
   531  0997                     	;# 
   532  0E0F                     	;# 
   533  0E10                     	;# 
   534  0E11                     	;# 
   535  0E12                     	;# 
   536  0E13                     	;# 
   537  0E14                     	;# 
   538  0E15                     	;# 
   539  0E16                     	;# 
   540  0E17                     	;# 
   541  0E18                     	;# 
   542  0E19                     	;# 
   543  0E1A                     	;# 
   544  0E1B                     	;# 
   545  0E1C                     	;# 
   546  0E1D                     	;# 
   547  0E1E                     	;# 
   548  0E1F                     	;# 
   549  0E20                     	;# 
   550  0E21                     	;# 
   551  0E22                     	;# 
   552  0E23                     	;# 
   553  0E24                     	;# 
   554  0E25                     	;# 
   555  0E26                     	;# 
   556  0E27                     	;# 
   557  0E28                     	;# 
   558  0E29                     	;# 
   559  0E2A                     	;# 
   560  0E2B                     	;# 
   561  0E2C                     	;# 
   562  0E2D                     	;# 
   563  0E2E                     	;# 
   564  0E2F                     	;# 
   565  0E30                     	;# 
   566  0E31                     	;# 
   567  0E32                     	;# 
   568  0E33                     	;# 
   569  0E34                     	;# 
   570  0E35                     	;# 
   571  0E36                     	;# 
   572  0E37                     	;# 
   573  0E8F                     	;# 
   574  0E90                     	;# 
   575  0E91                     	;# 
   576  0E92                     	;# 
   577  0E93                     	;# 
   578  0E94                     	;# 
   579  0E95                     	;# 
   580  0E96                     	;# 
   581  0E97                     	;# 
   582  0E9C                     	;# 
   583  0E9D                     	;# 
   584  0E9E                     	;# 
   585  0EA1                     	;# 
   586  0EA2                     	;# 
   587  0EA3                     	;# 
   588  0EA4                     	;# 
   589  0EA5                     	;# 
   590  0EA9                     	;# 
   591  0EAA                     	;# 
   592  0EAB                     	;# 
   593  0EAC                     	;# 
   594  0EB1                     	;# 
   595  0EB2                     	;# 
   596  0EB3                     	;# 
   597  0EB8                     	;# 
   598  0EB9                     	;# 
   599  0EBA                     	;# 
   600  0EBB                     	;# 
   601  0EBC                     	;# 
   602  0EBD                     	;# 
   603  0EBE                     	;# 
   604  0EC3                     	;# 
   605  0EC5                     	;# 
   606  0EC6                     	;# 
   607  0EC7                     	;# 
   608  0EC8                     	;# 
   609  0EC9                     	;# 
   610  0ECA                     	;# 
   611  0ECB                     	;# 
   612  0ECC                     	;# 
   613  0F10                     	;# 
   614  0F11                     	;# 
   615  0F12                     	;# 
   616  0F13                     	;# 
   617  0F14                     	;# 
   618  0F15                     	;# 
   619  0F16                     	;# 
   620  0F17                     	;# 
   621  0F18                     	;# 
   622  0F19                     	;# 
   623  0F1A                     	;# 
   624  0F1B                     	;# 
   625  0F1C                     	;# 
   626  0F1D                     	;# 
   627  0F1E                     	;# 
   628  0F1F                     	;# 
   629  0F20                     	;# 
   630  0F21                     	;# 
   631  0F22                     	;# 
   632  0F23                     	;# 
   633  0F24                     	;# 
   634  0F25                     	;# 
   635  0F26                     	;# 
   636  0F27                     	;# 
   637  0F28                     	;# 
   638  0F29                     	;# 
   639  0F2A                     	;# 
   640  0F2B                     	;# 
   641  0F2C                     	;# 
   642  0F2D                     	;# 
   643  0F2E                     	;# 
   644  0F2F                     	;# 
   645  0F30                     	;# 
   646  0F31                     	;# 
   647  0F32                     	;# 
   648  0F38                     	;# 
   649  0F39                     	;# 
   650  0F3A                     	;# 
   651  0F3B                     	;# 
   652  0F3C                     	;# 
   653  0F3D                     	;# 
   654  0F3E                     	;# 
   655  0F3F                     	;# 
   656  0F40                     	;# 
   657  0F41                     	;# 
   658  0F43                     	;# 
   659  0F44                     	;# 
   660  0F45                     	;# 
   661  0F46                     	;# 
   662  0F47                     	;# 
   663  0F48                     	;# 
   664  0F49                     	;# 
   665  0F4A                     	;# 
   666  0F4B                     	;# 
   667  0F4C                     	;# 
   668  0F4E                     	;# 
   669  0F4F                     	;# 
   670  0F50                     	;# 
   671  0F51                     	;# 
   672  0F52                     	;# 
   673  0F53                     	;# 
   674  0F54                     	;# 
   675  0F55                     	;# 
   676  0F56                     	;# 
   677  0F57                     	;# 
   678  0F59                     	;# 
   679  0F5A                     	;# 
   680  0F5B                     	;# 
   681  0F5C                     	;# 
   682  0F5D                     	;# 
   683  0F61                     	;# 
   684  0F62                     	;# 
   685  0F64                     	;# 
   686  0F65                     	;# 
   687  0F66                     	;# 
   688  0F67                     	;# 
   689  0F68                     	;# 
   690  0F69                     	;# 
   691  0F6A                     	;# 
   692  0F6B                     	;# 
   693  0F6C                     	;# 
   694  0F6D                     	;# 
   695  0FE4                     	;# 
   696  0FE5                     	;# 
   697  0FE6                     	;# 
   698  0FE7                     	;# 
   699  0FE8                     	;# 
   700  0FE9                     	;# 
   701  0FEA                     	;# 
   702  0FEB                     	;# 
   703  0FED                     	;# 
   704  0FEE                     	;# 
   705  0FEF                     	;# 
   706  0000                     	;# 
   707  0001                     	;# 
   708  0002                     	;# 
   709  0003                     	;# 
   710  0004                     	;# 
   711  0005                     	;# 
   712  0006                     	;# 
   713  0007                     	;# 
   714  0008                     	;# 
   715  0009                     	;# 
   716  000A                     	;# 
   717  000B                     	;# 
   718  000C                     	;# 
   719  000D                     	;# 
   720  000E                     	;# 
   721  000F                     	;# 
   722  0010                     	;# 
   723  0011                     	;# 
   724  0012                     	;# 
   725  0013                     	;# 
   726  0014                     	;# 
   727  0015                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001C                     	;# 
   734  001C                     	;# 
   735  001D                     	;# 
   736  001D                     	;# 
   737  001E                     	;# 
   738  001F                     	;# 
   739  008C                     	;# 
   740  008C                     	;# 
   741  008D                     	;# 
   742  008E                     	;# 
   743  008E                     	;# 
   744  008F                     	;# 
   745  0090                     	;# 
   746  0090                     	;# 
   747  0091                     	;# 
   748  0093                     	;# 
   749  0094                     	;# 
   750  0095                     	;# 
   751  0096                     	;# 
   752  0097                     	;# 
   753  0098                     	;# 
   754  0099                     	;# 
   755  009A                     	;# 
   756  009B                     	;# 
   757  009C                     	;# 
   758  009D                     	;# 
   759  009E                     	;# 
   760  010C                     	;# 
   761  010D                     	;# 
   762  010E                     	;# 
   763  010E                     	;# 
   764  010F                     	;# 
   765  0110                     	;# 
   766  0110                     	;# 
   767  0111                     	;# 
   768  0112                     	;# 
   769  0112                     	;# 
   770  0113                     	;# 
   771  0114                     	;# 
   772  0114                     	;# 
   773  0115                     	;# 
   774  0116                     	;# 
   775  0116                     	;# 
   776  0117                     	;# 
   777  0119                     	;# 
   778  0119                     	;# 
   779  0119                     	;# 
   780  011A                     	;# 
   781  011A                     	;# 
   782  011A                     	;# 
   783  011B                     	;# 
   784  011B                     	;# 
   785  011B                     	;# 
   786  011B                     	;# 
   787  011B                     	;# 
   788  011C                     	;# 
   789  011C                     	;# 
   790  011C                     	;# 
   791  011D                     	;# 
   792  011D                     	;# 
   793  011D                     	;# 
   794  011E                     	;# 
   795  011E                     	;# 
   796  011E                     	;# 
   797  011F                     	;# 
   798  011F                     	;# 
   799  011F                     	;# 
   800  011F                     	;# 
   801  011F                     	;# 
   802  018C                     	;# 
   803  018D                     	;# 
   804  018E                     	;# 
   805  018F                     	;# 
   806  0190                     	;# 
   807  0191                     	;# 
   808  0192                     	;# 
   809  0196                     	;# 
   810  0197                     	;# 
   811  0198                     	;# 
   812  0199                     	;# 
   813  019A                     	;# 
   814  019B                     	;# 
   815  019C                     	;# 
   816  020C                     	;# 
   817  020C                     	;# 
   818  020D                     	;# 
   819  020E                     	;# 
   820  020F                     	;# 
   821  020F                     	;# 
   822  0210                     	;# 
   823  0210                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0214                     	;# 
   830  0215                     	;# 
   831  0215                     	;# 
   832  0216                     	;# 
   833  0216                     	;# 
   834  0217                     	;# 
   835  0217                     	;# 
   836  0218                     	;# 
   837  0218                     	;# 
   838  0219                     	;# 
   839  021A                     	;# 
   840  021B                     	;# 
   841  021B                     	;# 
   842  021C                     	;# 
   843  021C                     	;# 
   844  021D                     	;# 
   845  021D                     	;# 
   846  021E                     	;# 
   847  021F                     	;# 
   848  028C                     	;# 
   849  028C                     	;# 
   850  028D                     	;# 
   851  028D                     	;# 
   852  028E                     	;# 
   853  028F                     	;# 
   854  0290                     	;# 
   855  0290                     	;# 
   856  0291                     	;# 
   857  0292                     	;# 
   858  0292                     	;# 
   859  0293                     	;# 
   860  0293                     	;# 
   861  0294                     	;# 
   862  0295                     	;# 
   863  0296                     	;# 
   864  0296                     	;# 
   865  0297                     	;# 
   866  0298                     	;# 
   867  0298                     	;# 
   868  0299                     	;# 
   869  0299                     	;# 
   870  029A                     	;# 
   871  029B                     	;# 
   872  029C                     	;# 
   873  029C                     	;# 
   874  029D                     	;# 
   875  030C                     	;# 
   876  030C                     	;# 
   877  030D                     	;# 
   878  030E                     	;# 
   879  030F                     	;# 
   880  0310                     	;# 
   881  0310                     	;# 
   882  0311                     	;# 
   883  0312                     	;# 
   884  0313                     	;# 
   885  0314                     	;# 
   886  0314                     	;# 
   887  0315                     	;# 
   888  0316                     	;# 
   889  0317                     	;# 
   890  0318                     	;# 
   891  0318                     	;# 
   892  0319                     	;# 
   893  031A                     	;# 
   894  031B                     	;# 
   895  031C                     	;# 
   896  031C                     	;# 
   897  031D                     	;# 
   898  031E                     	;# 
   899  031F                     	;# 
   900  038C                     	;# 
   901  038C                     	;# 
   902  038D                     	;# 
   903  038E                     	;# 
   904  0390                     	;# 
   905  0390                     	;# 
   906  0391                     	;# 
   907  0392                     	;# 
   908  040C                     	;# 
   909  040D                     	;# 
   910  040E                     	;# 
   911  040F                     	;# 
   912  0410                     	;# 
   913  0411                     	;# 
   914  0416                     	;# 
   915  0416                     	;# 
   916  0417                     	;# 
   917  0418                     	;# 
   918  0418                     	;# 
   919  0419                     	;# 
   920  041A                     	;# 
   921  041A                     	;# 
   922  041B                     	;# 
   923  041C                     	;# 
   924  041C                     	;# 
   925  041D                     	;# 
   926  041E                     	;# 
   927  041F                     	;# 
   928  048C                     	;# 
   929  048C                     	;# 
   930  048D                     	;# 
   931  048E                     	;# 
   932  048F                     	;# 
   933  048F                     	;# 
   934  0490                     	;# 
   935  0491                     	;# 
   936  0492                     	;# 
   937  0492                     	;# 
   938  0493                     	;# 
   939  0494                     	;# 
   940  0495                     	;# 
   941  0495                     	;# 
   942  0496                     	;# 
   943  0497                     	;# 
   944  0498                     	;# 
   945  0499                     	;# 
   946  049A                     	;# 
   947  049B                     	;# 
   948  049C                     	;# 
   949  049D                     	;# 
   950  050C                     	;# 
   951  050C                     	;# 
   952  050D                     	;# 
   953  050E                     	;# 
   954  050F                     	;# 
   955  050F                     	;# 
   956  0510                     	;# 
   957  0511                     	;# 
   958  0512                     	;# 
   959  0512                     	;# 
   960  0513                     	;# 
   961  0514                     	;# 
   962  0515                     	;# 
   963  0515                     	;# 
   964  0516                     	;# 
   965  0517                     	;# 
   966  0518                     	;# 
   967  0519                     	;# 
   968  051A                     	;# 
   969  051B                     	;# 
   970  051C                     	;# 
   971  051D                     	;# 
   972  058C                     	;# 
   973  058C                     	;# 
   974  058D                     	;# 
   975  058E                     	;# 
   976  058F                     	;# 
   977  058F                     	;# 
   978  0590                     	;# 
   979  0591                     	;# 
   980  0592                     	;# 
   981  0593                     	;# 
   982  060C                     	;# 
   983  060D                     	;# 
   984  060E                     	;# 
   985  060F                     	;# 
   986  0610                     	;# 
   987  0611                     	;# 
   988  0612                     	;# 
   989  0613                     	;# 
   990  0614                     	;# 
   991  0616                     	;# 
   992  0617                     	;# 
   993  0618                     	;# 
   994  0619                     	;# 
   995  061A                     	;# 
   996  061B                     	;# 
   997  061C                     	;# 
   998  061D                     	;# 
   999  061E                     	;# 
  1000  068C                     	;# 
  1001  068D                     	;# 
  1002  068E                     	;# 
  1003  068F                     	;# 
  1004  0690                     	;# 
  1005  0691                     	;# 
  1006  0692                     	;# 
  1007  0693                     	;# 
  1008  0694                     	;# 
  1009  070C                     	;# 
  1010  070D                     	;# 
  1011  070E                     	;# 
  1012  070F                     	;# 
  1013  0710                     	;# 
  1014  0711                     	;# 
  1015  0712                     	;# 
  1016  0713                     	;# 
  1017  0714                     	;# 
  1018  0716                     	;# 
  1019  0717                     	;# 
  1020  0718                     	;# 
  1021  0719                     	;# 
  1022  071A                     	;# 
  1023  071B                     	;# 
  1024  071C                     	;# 
  1025  071D                     	;# 
  1026  071E                     	;# 
  1027  0796                     	;# 
  1028  0797                     	;# 
  1029  0798                     	;# 
  1030  0799                     	;# 
  1031  079A                     	;# 
  1032  079B                     	;# 
  1033  080C                     	;# 
  1034  080D                     	;# 
  1035  080E                     	;# 
  1036  080F                     	;# 
  1037  0810                     	;# 
  1038  0811                     	;# 
  1039  0812                     	;# 
  1040  0813                     	;# 
  1041  0814                     	;# 
  1042  081A                     	;# 
  1043  081B                     	;# 
  1044  081C                     	;# 
  1045  081D                     	;# 
  1046  081E                     	;# 
  1047  081F                     	;# 
  1048  088C                     	;# 
  1049  088D                     	;# 
  1050  088E                     	;# 
  1051  088F                     	;# 
  1052  0890                     	;# 
  1053  0891                     	;# 
  1054  0892                     	;# 
  1055  0893                     	;# 
  1056  0895                     	;# 
  1057  0896                     	;# 
  1058  0897                     	;# 
  1059  0898                     	;# 
  1060  0899                     	;# 
  1061  089A                     	;# 
  1062  089B                     	;# 
  1063  090C                     	;# 
  1064  090E                     	;# 
  1065  090F                     	;# 
  1066  091F                     	;# 
  1067  091F                     	;# 
  1068  098F                     	;# 
  1069  098F                     	;# 
  1070  0990                     	;# 
  1071  0991                     	;# 
  1072  0992                     	;# 
  1073  0993                     	;# 
  1074  0994                     	;# 
  1075  0995                     	;# 
  1076  0996                     	;# 
  1077  0997                     	;# 
  1078  0E0F                     	;# 
  1079  0E10                     	;# 
  1080  0E11                     	;# 
  1081  0E12                     	;# 
  1082  0E13                     	;# 
  1083  0E14                     	;# 
  1084  0E15                     	;# 
  1085  0E16                     	;# 
  1086  0E17                     	;# 
  1087  0E18                     	;# 
  1088  0E19                     	;# 
  1089  0E1A                     	;# 
  1090  0E1B                     	;# 
  1091  0E1C                     	;# 
  1092  0E1D                     	;# 
  1093  0E1E                     	;# 
  1094  0E1F                     	;# 
  1095  0E20                     	;# 
  1096  0E21                     	;# 
  1097  0E22                     	;# 
  1098  0E23                     	;# 
  1099  0E24                     	;# 
  1100  0E25                     	;# 
  1101  0E26                     	;# 
  1102  0E27                     	;# 
  1103  0E28                     	;# 
  1104  0E29                     	;# 
  1105  0E2A                     	;# 
  1106  0E2B                     	;# 
  1107  0E2C                     	;# 
  1108  0E2D                     	;# 
  1109  0E2E                     	;# 
  1110  0E2F                     	;# 
  1111  0E30                     	;# 
  1112  0E31                     	;# 
  1113  0E32                     	;# 
  1114  0E33                     	;# 
  1115  0E34                     	;# 
  1116  0E35                     	;# 
  1117  0E36                     	;# 
  1118  0E37                     	;# 
  1119  0E8F                     	;# 
  1120  0E90                     	;# 
  1121  0E91                     	;# 
  1122  0E92                     	;# 
  1123  0E93                     	;# 
  1124  0E94                     	;# 
  1125  0E95                     	;# 
  1126  0E96                     	;# 
  1127  0E97                     	;# 
  1128  0E9C                     	;# 
  1129  0E9D                     	;# 
  1130  0E9E                     	;# 
  1131  0EA1                     	;# 
  1132  0EA2                     	;# 
  1133  0EA3                     	;# 
  1134  0EA4                     	;# 
  1135  0EA5                     	;# 
  1136  0EA9                     	;# 
  1137  0EAA                     	;# 
  1138  0EAB                     	;# 
  1139  0EAC                     	;# 
  1140  0EB1                     	;# 
  1141  0EB2                     	;# 
  1142  0EB3                     	;# 
  1143  0EB8                     	;# 
  1144  0EB9                     	;# 
  1145  0EBA                     	;# 
  1146  0EBB                     	;# 
  1147  0EBC                     	;# 
  1148  0EBD                     	;# 
  1149  0EBE                     	;# 
  1150  0EC3                     	;# 
  1151  0EC5                     	;# 
  1152  0EC6                     	;# 
  1153  0EC7                     	;# 
  1154  0EC8                     	;# 
  1155  0EC9                     	;# 
  1156  0ECA                     	;# 
  1157  0ECB                     	;# 
  1158  0ECC                     	;# 
  1159  0F10                     	;# 
  1160  0F11                     	;# 
  1161  0F12                     	;# 
  1162  0F13                     	;# 
  1163  0F14                     	;# 
  1164  0F15                     	;# 
  1165  0F16                     	;# 
  1166  0F17                     	;# 
  1167  0F18                     	;# 
  1168  0F19                     	;# 
  1169  0F1A                     	;# 
  1170  0F1B                     	;# 
  1171  0F1C                     	;# 
  1172  0F1D                     	;# 
  1173  0F1E                     	;# 
  1174  0F1F                     	;# 
  1175  0F20                     	;# 
  1176  0F21                     	;# 
  1177  0F22                     	;# 
  1178  0F23                     	;# 
  1179  0F24                     	;# 
  1180  0F25                     	;# 
  1181  0F26                     	;# 
  1182  0F27                     	;# 
  1183  0F28                     	;# 
  1184  0F29                     	;# 
  1185  0F2A                     	;# 
  1186  0F2B                     	;# 
  1187  0F2C                     	;# 
  1188  0F2D                     	;# 
  1189  0F2E                     	;# 
  1190  0F2F                     	;# 
  1191  0F30                     	;# 
  1192  0F31                     	;# 
  1193  0F32                     	;# 
  1194  0F38                     	;# 
  1195  0F39                     	;# 
  1196  0F3A                     	;# 
  1197  0F3B                     	;# 
  1198  0F3C                     	;# 
  1199  0F3D                     	;# 
  1200  0F3E                     	;# 
  1201  0F3F                     	;# 
  1202  0F40                     	;# 
  1203  0F41                     	;# 
  1204  0F43                     	;# 
  1205  0F44                     	;# 
  1206  0F45                     	;# 
  1207  0F46                     	;# 
  1208  0F47                     	;# 
  1209  0F48                     	;# 
  1210  0F49                     	;# 
  1211  0F4A                     	;# 
  1212  0F4B                     	;# 
  1213  0F4C                     	;# 
  1214  0F4E                     	;# 
  1215  0F4F                     	;# 
  1216  0F50                     	;# 
  1217  0F51                     	;# 
  1218  0F52                     	;# 
  1219  0F53                     	;# 
  1220  0F54                     	;# 
  1221  0F55                     	;# 
  1222  0F56                     	;# 
  1223  0F57                     	;# 
  1224  0F59                     	;# 
  1225  0F5A                     	;# 
  1226  0F5B                     	;# 
  1227  0F5C                     	;# 
  1228  0F5D                     	;# 
  1229  0F61                     	;# 
  1230  0F62                     	;# 
  1231  0F64                     	;# 
  1232  0F65                     	;# 
  1233  0F66                     	;# 
  1234  0F67                     	;# 
  1235  0F68                     	;# 
  1236  0F69                     	;# 
  1237  0F6A                     	;# 
  1238  0F6B                     	;# 
  1239  0F6C                     	;# 
  1240  0F6D                     	;# 
  1241  0FE4                     	;# 
  1242  0FE5                     	;# 
  1243  0FE6                     	;# 
  1244  0FE7                     	;# 
  1245  0FE8                     	;# 
  1246  0FE9                     	;# 
  1247  0FEA                     	;# 
  1248  0FEB                     	;# 
  1249  0FED                     	;# 
  1250  0FEE                     	;# 
  1251  0FEF                     	;# 
  1252  0000                     	;# 
  1253  0001                     	;# 
  1254  0002                     	;# 
  1255  0003                     	;# 
  1256  0004                     	;# 
  1257  0005                     	;# 
  1258  0006                     	;# 
  1259  0007                     	;# 
  1260  0008                     	;# 
  1261  0009                     	;# 
  1262  000A                     	;# 
  1263  000B                     	;# 
  1264  000C                     	;# 
  1265  000D                     	;# 
  1266  000E                     	;# 
  1267  000F                     	;# 
  1268  0010                     	;# 
  1269  0011                     	;# 
  1270  0012                     	;# 
  1271  0013                     	;# 
  1272  0014                     	;# 
  1273  0015                     	;# 
  1274  0016                     	;# 
  1275  0017                     	;# 
  1276  0018                     	;# 
  1277  0019                     	;# 
  1278  001A                     	;# 
  1279  001C                     	;# 
  1280  001C                     	;# 
  1281  001D                     	;# 
  1282  001D                     	;# 
  1283  001E                     	;# 
  1284  001F                     	;# 
  1285  008C                     	;# 
  1286  008C                     	;# 
  1287  008D                     	;# 
  1288  008E                     	;# 
  1289  008E                     	;# 
  1290  008F                     	;# 
  1291  0090                     	;# 
  1292  0090                     	;# 
  1293  0091                     	;# 
  1294  0093                     	;# 
  1295  0094                     	;# 
  1296  0095                     	;# 
  1297  0096                     	;# 
  1298  0097                     	;# 
  1299  0098                     	;# 
  1300  0099                     	;# 
  1301  009A                     	;# 
  1302  009B                     	;# 
  1303  009C                     	;# 
  1304  009D                     	;# 
  1305  009E                     	;# 
  1306  010C                     	;# 
  1307  010D                     	;# 
  1308  010E                     	;# 
  1309  010E                     	;# 
  1310  010F                     	;# 
  1311  0110                     	;# 
  1312  0110                     	;# 
  1313  0111                     	;# 
  1314  0112                     	;# 
  1315  0112                     	;# 
  1316  0113                     	;# 
  1317  0114                     	;# 
  1318  0114                     	;# 
  1319  0115                     	;# 
  1320  0116                     	;# 
  1321  0116                     	;# 
  1322  0117                     	;# 
  1323  0119                     	;# 
  1324  0119                     	;# 
  1325  0119                     	;# 
  1326  011A                     	;# 
  1327  011A                     	;# 
  1328  011A                     	;# 
  1329  011B                     	;# 
  1330  011B                     	;# 
  1331  011B                     	;# 
  1332  011B                     	;# 
  1333  011B                     	;# 
  1334  011C                     	;# 
  1335  011C                     	;# 
  1336  011C                     	;# 
  1337  011D                     	;# 
  1338  011D                     	;# 
  1339  011D                     	;# 
  1340  011E                     	;# 
  1341  011E                     	;# 
  1342  011E                     	;# 
  1343  011F                     	;# 
  1344  011F                     	;# 
  1345  011F                     	;# 
  1346  011F                     	;# 
  1347  011F                     	;# 
  1348  018C                     	;# 
  1349  018D                     	;# 
  1350  018E                     	;# 
  1351  018F                     	;# 
  1352  0190                     	;# 
  1353  0191                     	;# 
  1354  0192                     	;# 
  1355  0196                     	;# 
  1356  0197                     	;# 
  1357  0198                     	;# 
  1358  0199                     	;# 
  1359  019A                     	;# 
  1360  019B                     	;# 
  1361  019C                     	;# 
  1362  020C                     	;# 
  1363  020C                     	;# 
  1364  020D                     	;# 
  1365  020E                     	;# 
  1366  020F                     	;# 
  1367  020F                     	;# 
  1368  0210                     	;# 
  1369  0210                     	;# 
  1370  0211                     	;# 
  1371  0211                     	;# 
  1372  0212                     	;# 
  1373  0212                     	;# 
  1374  0213                     	;# 
  1375  0214                     	;# 
  1376  0215                     	;# 
  1377  0215                     	;# 
  1378  0216                     	;# 
  1379  0216                     	;# 
  1380  0217                     	;# 
  1381  0217                     	;# 
  1382  0218                     	;# 
  1383  0218                     	;# 
  1384  0219                     	;# 
  1385  021A                     	;# 
  1386  021B                     	;# 
  1387  021B                     	;# 
  1388  021C                     	;# 
  1389  021C                     	;# 
  1390  021D                     	;# 
  1391  021D                     	;# 
  1392  021E                     	;# 
  1393  021F                     	;# 
  1394  028C                     	;# 
  1395  028C                     	;# 
  1396  028D                     	;# 
  1397  028D                     	;# 
  1398  028E                     	;# 
  1399  028F                     	;# 
  1400  0290                     	;# 
  1401  0290                     	;# 
  1402  0291                     	;# 
  1403  0292                     	;# 
  1404  0292                     	;# 
  1405  0293                     	;# 
  1406  0293                     	;# 
  1407  0294                     	;# 
  1408  0295                     	;# 
  1409  0296                     	;# 
  1410  0296                     	;# 
  1411  0297                     	;# 
  1412  0298                     	;# 
  1413  0298                     	;# 
  1414  0299                     	;# 
  1415  0299                     	;# 
  1416  029A                     	;# 
  1417  029B                     	;# 
  1418  029C                     	;# 
  1419  029C                     	;# 
  1420  029D                     	;# 
  1421  030C                     	;# 
  1422  030C                     	;# 
  1423  030D                     	;# 
  1424  030E                     	;# 
  1425  030F                     	;# 
  1426  0310                     	;# 
  1427  0310                     	;# 
  1428  0311                     	;# 
  1429  0312                     	;# 
  1430  0313                     	;# 
  1431  0314                     	;# 
  1432  0314                     	;# 
  1433  0315                     	;# 
  1434  0316                     	;# 
  1435  0317                     	;# 
  1436  0318                     	;# 
  1437  0318                     	;# 
  1438  0319                     	;# 
  1439  031A                     	;# 
  1440  031B                     	;# 
  1441  031C                     	;# 
  1442  031C                     	;# 
  1443  031D                     	;# 
  1444  031E                     	;# 
  1445  031F                     	;# 
  1446  038C                     	;# 
  1447  038C                     	;# 
  1448  038D                     	;# 
  1449  038E                     	;# 
  1450  0390                     	;# 
  1451  0390                     	;# 
  1452  0391                     	;# 
  1453  0392                     	;# 
  1454  040C                     	;# 
  1455  040D                     	;# 
  1456  040E                     	;# 
  1457  040F                     	;# 
  1458  0410                     	;# 
  1459  0411                     	;# 
  1460  0416                     	;# 
  1461  0416                     	;# 
  1462  0417                     	;# 
  1463  0418                     	;# 
  1464  0418                     	;# 
  1465  0419                     	;# 
  1466  041A                     	;# 
  1467  041A                     	;# 
  1468  041B                     	;# 
  1469  041C                     	;# 
  1470  041C                     	;# 
  1471  041D                     	;# 
  1472  041E                     	;# 
  1473  041F                     	;# 
  1474  048C                     	;# 
  1475  048C                     	;# 
  1476  048D                     	;# 
  1477  048E                     	;# 
  1478  048F                     	;# 
  1479  048F                     	;# 
  1480  0490                     	;# 
  1481  0491                     	;# 
  1482  0492                     	;# 
  1483  0492                     	;# 
  1484  0493                     	;# 
  1485  0494                     	;# 
  1486  0495                     	;# 
  1487  0495                     	;# 
  1488  0496                     	;# 
  1489  0497                     	;# 
  1490  0498                     	;# 
  1491  0499                     	;# 
  1492  049A                     	;# 
  1493  049B                     	;# 
  1494  049C                     	;# 
  1495  049D                     	;# 
  1496  050C                     	;# 
  1497  050C                     	;# 
  1498  050D                     	;# 
  1499  050E                     	;# 
  1500  050F                     	;# 
  1501  050F                     	;# 
  1502  0510                     	;# 
  1503  0511                     	;# 
  1504  0512                     	;# 
  1505  0512                     	;# 
  1506  0513                     	;# 
  1507  0514                     	;# 
  1508  0515                     	;# 
  1509  0515                     	;# 
  1510  0516                     	;# 
  1511  0517                     	;# 
  1512  0518                     	;# 
  1513  0519                     	;# 
  1514  051A                     	;# 
  1515  051B                     	;# 
  1516  051C                     	;# 
  1517  051D                     	;# 
  1518  058C                     	;# 
  1519  058C                     	;# 
  1520  058D                     	;# 
  1521  058E                     	;# 
  1522  058F                     	;# 
  1523  058F                     	;# 
  1524  0590                     	;# 
  1525  0591                     	;# 
  1526  0592                     	;# 
  1527  0593                     	;# 
  1528  060C                     	;# 
  1529  060D                     	;# 
  1530  060E                     	;# 
  1531  060F                     	;# 
  1532  0610                     	;# 
  1533  0611                     	;# 
  1534  0612                     	;# 
  1535  0613                     	;# 
  1536  0614                     	;# 
  1537  0616                     	;# 
  1538  0617                     	;# 
  1539  0618                     	;# 
  1540  0619                     	;# 
  1541  061A                     	;# 
  1542  061B                     	;# 
  1543  061C                     	;# 
  1544  061D                     	;# 
  1545  061E                     	;# 
  1546  068C                     	;# 
  1547  068D                     	;# 
  1548  068E                     	;# 
  1549  068F                     	;# 
  1550  0690                     	;# 
  1551  0691                     	;# 
  1552  0692                     	;# 
  1553  0693                     	;# 
  1554  0694                     	;# 
  1555  070C                     	;# 
  1556  070D                     	;# 
  1557  070E                     	;# 
  1558  070F                     	;# 
  1559  0710                     	;# 
  1560  0711                     	;# 
  1561  0712                     	;# 
  1562  0713                     	;# 
  1563  0714                     	;# 
  1564  0716                     	;# 
  1565  0717                     	;# 
  1566  0718                     	;# 
  1567  0719                     	;# 
  1568  071A                     	;# 
  1569  071B                     	;# 
  1570  071C                     	;# 
  1571  071D                     	;# 
  1572  071E                     	;# 
  1573  0796                     	;# 
  1574  0797                     	;# 
  1575  0798                     	;# 
  1576  0799                     	;# 
  1577  079A                     	;# 
  1578  079B                     	;# 
  1579  080C                     	;# 
  1580  080D                     	;# 
  1581  080E                     	;# 
  1582  080F                     	;# 
  1583  0810                     	;# 
  1584  0811                     	;# 
  1585  0812                     	;# 
  1586  0813                     	;# 
  1587  0814                     	;# 
  1588  081A                     	;# 
  1589  081B                     	;# 
  1590  081C                     	;# 
  1591  081D                     	;# 
  1592  081E                     	;# 
  1593  081F                     	;# 
  1594  088C                     	;# 
  1595  088D                     	;# 
  1596  088E                     	;# 
  1597  088F                     	;# 
  1598  0890                     	;# 
  1599  0891                     	;# 
  1600  0892                     	;# 
  1601  0893                     	;# 
  1602  0895                     	;# 
  1603  0896                     	;# 
  1604  0897                     	;# 
  1605  0898                     	;# 
  1606  0899                     	;# 
  1607  089A                     	;# 
  1608  089B                     	;# 
  1609  090C                     	;# 
  1610  090E                     	;# 
  1611  090F                     	;# 
  1612  091F                     	;# 
  1613  091F                     	;# 
  1614  098F                     	;# 
  1615  098F                     	;# 
  1616  0990                     	;# 
  1617  0991                     	;# 
  1618  0992                     	;# 
  1619  0993                     	;# 
  1620  0994                     	;# 
  1621  0995                     	;# 
  1622  0996                     	;# 
  1623  0997                     	;# 
  1624  0E0F                     	;# 
  1625  0E10                     	;# 
  1626  0E11                     	;# 
  1627  0E12                     	;# 
  1628  0E13                     	;# 
  1629  0E14                     	;# 
  1630  0E15                     	;# 
  1631  0E16                     	;# 
  1632  0E17                     	;# 
  1633  0E18                     	;# 
  1634  0E19                     	;# 
  1635  0E1A                     	;# 
  1636  0E1B                     	;# 
  1637  0E1C                     	;# 
  1638  0E1D                     	;# 
  1639  0E1E                     	;# 
  1640  0E1F                     	;# 
  1641  0E20                     	;# 
  1642  0E21                     	;# 
  1643  0E22                     	;# 
  1644  0E23                     	;# 
  1645  0E24                     	;# 
  1646  0E25                     	;# 
  1647  0E26                     	;# 
  1648  0E27                     	;# 
  1649  0E28                     	;# 
  1650  0E29                     	;# 
  1651  0E2A                     	;# 
  1652  0E2B                     	;# 
  1653  0E2C                     	;# 
  1654  0E2D                     	;# 
  1655  0E2E                     	;# 
  1656  0E2F                     	;# 
  1657  0E30                     	;# 
  1658  0E31                     	;# 
  1659  0E32                     	;# 
  1660  0E33                     	;# 
  1661  0E34                     	;# 
  1662  0E35                     	;# 
  1663  0E36                     	;# 
  1664  0E37                     	;# 
  1665  0E8F                     	;# 
  1666  0E90                     	;# 
  1667  0E91                     	;# 
  1668  0E92                     	;# 
  1669  0E93                     	;# 
  1670  0E94                     	;# 
  1671  0E95                     	;# 
  1672  0E96                     	;# 
  1673  0E97                     	;# 
  1674  0E9C                     	;# 
  1675  0E9D                     	;# 
  1676  0E9E                     	;# 
  1677  0EA1                     	;# 
  1678  0EA2                     	;# 
  1679  0EA3                     	;# 
  1680  0EA4                     	;# 
  1681  0EA5                     	;# 
  1682  0EA9                     	;# 
  1683  0EAA                     	;# 
  1684  0EAB                     	;# 
  1685  0EAC                     	;# 
  1686  0EB1                     	;# 
  1687  0EB2                     	;# 
  1688  0EB3                     	;# 
  1689  0EB8                     	;# 
  1690  0EB9                     	;# 
  1691  0EBA                     	;# 
  1692  0EBB                     	;# 
  1693  0EBC                     	;# 
  1694  0EBD                     	;# 
  1695  0EBE                     	;# 
  1696  0EC3                     	;# 
  1697  0EC5                     	;# 
  1698  0EC6                     	;# 
  1699  0EC7                     	;# 
  1700  0EC8                     	;# 
  1701  0EC9                     	;# 
  1702  0ECA                     	;# 
  1703  0ECB                     	;# 
  1704  0ECC                     	;# 
  1705  0F10                     	;# 
  1706  0F11                     	;# 
  1707  0F12                     	;# 
  1708  0F13                     	;# 
  1709  0F14                     	;# 
  1710  0F15                     	;# 
  1711  0F16                     	;# 
  1712  0F17                     	;# 
  1713  0F18                     	;# 
  1714  0F19                     	;# 
  1715  0F1A                     	;# 
  1716  0F1B                     	;# 
  1717  0F1C                     	;# 
  1718  0F1D                     	;# 
  1719  0F1E                     	;# 
  1720  0F1F                     	;# 
  1721  0F20                     	;# 
  1722  0F21                     	;# 
  1723  0F22                     	;# 
  1724  0F23                     	;# 
  1725  0F24                     	;# 
  1726  0F25                     	;# 
  1727  0F26                     	;# 
  1728  0F27                     	;# 
  1729  0F28                     	;# 
  1730  0F29                     	;# 
  1731  0F2A                     	;# 
  1732  0F2B                     	;# 
  1733  0F2C                     	;# 
  1734  0F2D                     	;# 
  1735  0F2E                     	;# 
  1736  0F2F                     	;# 
  1737  0F30                     	;# 
  1738  0F31                     	;# 
  1739  0F32                     	;# 
  1740  0F38                     	;# 
  1741  0F39                     	;# 
  1742  0F3A                     	;# 
  1743  0F3B                     	;# 
  1744  0F3C                     	;# 
  1745  0F3D                     	;# 
  1746  0F3E                     	;# 
  1747  0F3F                     	;# 
  1748  0F40                     	;# 
  1749  0F41                     	;# 
  1750  0F43                     	;# 
  1751  0F44                     	;# 
  1752  0F45                     	;# 
  1753  0F46                     	;# 
  1754  0F47                     	;# 
  1755  0F48                     	;# 
  1756  0F49                     	;# 
  1757  0F4A                     	;# 
  1758  0F4B                     	;# 
  1759  0F4C                     	;# 
  1760  0F4E                     	;# 
  1761  0F4F                     	;# 
  1762  0F50                     	;# 
  1763  0F51                     	;# 
  1764  0F52                     	;# 
  1765  0F53                     	;# 
  1766  0F54                     	;# 
  1767  0F55                     	;# 
  1768  0F56                     	;# 
  1769  0F57                     	;# 
  1770  0F59                     	;# 
  1771  0F5A                     	;# 
  1772  0F5B                     	;# 
  1773  0F5C                     	;# 
  1774  0F5D                     	;# 
  1775  0F61                     	;# 
  1776  0F62                     	;# 
  1777  0F64                     	;# 
  1778  0F65                     	;# 
  1779  0F66                     	;# 
  1780  0F67                     	;# 
  1781  0F68                     	;# 
  1782  0F69                     	;# 
  1783  0F6A                     	;# 
  1784  0F6B                     	;# 
  1785  0F6C                     	;# 
  1786  0F6D                     	;# 
  1787  0FE4                     	;# 
  1788  0FE5                     	;# 
  1789  0FE6                     	;# 
  1790  0FE7                     	;# 
  1791  0FE8                     	;# 
  1792  0FE9                     	;# 
  1793  0FEA                     	;# 
  1794  0FEB                     	;# 
  1795  0FED                     	;# 
  1796  0FEE                     	;# 
  1797  0FEF                     	;# 
  1798  0000                     	;# 
  1799  0001                     	;# 
  1800  0002                     	;# 
  1801  0003                     	;# 
  1802  0004                     	;# 
  1803  0005                     	;# 
  1804  0006                     	;# 
  1805  0007                     	;# 
  1806  0008                     	;# 
  1807  0009                     	;# 
  1808  000A                     	;# 
  1809  000B                     	;# 
  1810  000C                     	;# 
  1811  000D                     	;# 
  1812  000E                     	;# 
  1813  000F                     	;# 
  1814  0010                     	;# 
  1815  0011                     	;# 
  1816  0012                     	;# 
  1817  0013                     	;# 
  1818  0014                     	;# 
  1819  0015                     	;# 
  1820  0016                     	;# 
  1821  0017                     	;# 
  1822  0018                     	;# 
  1823  0019                     	;# 
  1824  001A                     	;# 
  1825  001C                     	;# 
  1826  001C                     	;# 
  1827  001D                     	;# 
  1828  001D                     	;# 
  1829  001E                     	;# 
  1830  001F                     	;# 
  1831  008C                     	;# 
  1832  008C                     	;# 
  1833  008D                     	;# 
  1834  008E                     	;# 
  1835  008E                     	;# 
  1836  008F                     	;# 
  1837  0090                     	;# 
  1838  0090                     	;# 
  1839  0091                     	;# 
  1840  0093                     	;# 
  1841  0094                     	;# 
  1842  0095                     	;# 
  1843  0096                     	;# 
  1844  0097                     	;# 
  1845  0098                     	;# 
  1846  0099                     	;# 
  1847  009A                     	;# 
  1848  009B                     	;# 
  1849  009C                     	;# 
  1850  009D                     	;# 
  1851  009E                     	;# 
  1852  010C                     	;# 
  1853  010D                     	;# 
  1854  010E                     	;# 
  1855  010E                     	;# 
  1856  010F                     	;# 
  1857  0110                     	;# 
  1858  0110                     	;# 
  1859  0111                     	;# 
  1860  0112                     	;# 
  1861  0112                     	;# 
  1862  0113                     	;# 
  1863  0114                     	;# 
  1864  0114                     	;# 
  1865  0115                     	;# 
  1866  0116                     	;# 
  1867  0116                     	;# 
  1868  0117                     	;# 
  1869  0119                     	;# 
  1870  0119                     	;# 
  1871  0119                     	;# 
  1872  011A                     	;# 
  1873  011A                     	;# 
  1874  011A                     	;# 
  1875  011B                     	;# 
  1876  011B                     	;# 
  1877  011B                     	;# 
  1878  011B                     	;# 
  1879  011B                     	;# 
  1880  011C                     	;# 
  1881  011C                     	;# 
  1882  011C                     	;# 
  1883  011D                     	;# 
  1884  011D                     	;# 
  1885  011D                     	;# 
  1886  011E                     	;# 
  1887  011E                     	;# 
  1888  011E                     	;# 
  1889  011F                     	;# 
  1890  011F                     	;# 
  1891  011F                     	;# 
  1892  011F                     	;# 
  1893  011F                     	;# 
  1894  018C                     	;# 
  1895  018D                     	;# 
  1896  018E                     	;# 
  1897  018F                     	;# 
  1898  0190                     	;# 
  1899  0191                     	;# 
  1900  0192                     	;# 
  1901  0196                     	;# 
  1902  0197                     	;# 
  1903  0198                     	;# 
  1904  0199                     	;# 
  1905  019A                     	;# 
  1906  019B                     	;# 
  1907  019C                     	;# 
  1908  020C                     	;# 
  1909  020C                     	;# 
  1910  020D                     	;# 
  1911  020E                     	;# 
  1912  020F                     	;# 
  1913  020F                     	;# 
  1914  0210                     	;# 
  1915  0210                     	;# 
  1916  0211                     	;# 
  1917  0211                     	;# 
  1918  0212                     	;# 
  1919  0212                     	;# 
  1920  0213                     	;# 
  1921  0214                     	;# 
  1922  0215                     	;# 
  1923  0215                     	;# 
  1924  0216                     	;# 
  1925  0216                     	;# 
  1926  0217                     	;# 
  1927  0217                     	;# 
  1928  0218                     	;# 
  1929  0218                     	;# 
  1930  0219                     	;# 
  1931  021A                     	;# 
  1932  021B                     	;# 
  1933  021B                     	;# 
  1934  021C                     	;# 
  1935  021C                     	;# 
  1936  021D                     	;# 
  1937  021D                     	;# 
  1938  021E                     	;# 
  1939  021F                     	;# 
  1940  028C                     	;# 
  1941  028C                     	;# 
  1942  028D                     	;# 
  1943  028D                     	;# 
  1944  028E                     	;# 
  1945  028F                     	;# 
  1946  0290                     	;# 
  1947  0290                     	;# 
  1948  0291                     	;# 
  1949  0292                     	;# 
  1950  0292                     	;# 
  1951  0293                     	;# 
  1952  0293                     	;# 
  1953  0294                     	;# 
  1954  0295                     	;# 
  1955  0296                     	;# 
  1956  0296                     	;# 
  1957  0297                     	;# 
  1958  0298                     	;# 
  1959  0298                     	;# 
  1960  0299                     	;# 
  1961  0299                     	;# 
  1962  029A                     	;# 
  1963  029B                     	;# 
  1964  029C                     	;# 
  1965  029C                     	;# 
  1966  029D                     	;# 
  1967  030C                     	;# 
  1968  030C                     	;# 
  1969  030D                     	;# 
  1970  030E                     	;# 
  1971  030F                     	;# 
  1972  0310                     	;# 
  1973  0310                     	;# 
  1974  0311                     	;# 
  1975  0312                     	;# 
  1976  0313                     	;# 
  1977  0314                     	;# 
  1978  0314                     	;# 
  1979  0315                     	;# 
  1980  0316                     	;# 
  1981  0317                     	;# 
  1982  0318                     	;# 
  1983  0318                     	;# 
  1984  0319                     	;# 
  1985  031A                     	;# 
  1986  031B                     	;# 
  1987  031C                     	;# 
  1988  031C                     	;# 
  1989  031D                     	;# 
  1990  031E                     	;# 
  1991  031F                     	;# 
  1992  038C                     	;# 
  1993  038C                     	;# 
  1994  038D                     	;# 
  1995  038E                     	;# 
  1996  0390                     	;# 
  1997  0390                     	;# 
  1998  0391                     	;# 
  1999  0392                     	;# 
  2000  040C                     	;# 
  2001  040D                     	;# 
  2002  040E                     	;# 
  2003  040F                     	;# 
  2004  0410                     	;# 
  2005  0411                     	;# 
  2006  0416                     	;# 
  2007  0416                     	;# 
  2008  0417                     	;# 
  2009  0418                     	;# 
  2010  0418                     	;# 
  2011  0419                     	;# 
  2012  041A                     	;# 
  2013  041A                     	;# 
  2014  041B                     	;# 
  2015  041C                     	;# 
  2016  041C                     	;# 
  2017  041D                     	;# 
  2018  041E                     	;# 
  2019  041F                     	;# 
  2020  048C                     	;# 
  2021  048C                     	;# 
  2022  048D                     	;# 
  2023  048E                     	;# 
  2024  048F                     	;# 
  2025  048F                     	;# 
  2026  0490                     	;# 
  2027  0491                     	;# 
  2028  0492                     	;# 
  2029  0492                     	;# 
  2030  0493                     	;# 
  2031  0494                     	;# 
  2032  0495                     	;# 
  2033  0495                     	;# 
  2034  0496                     	;# 
  2035  0497                     	;# 
  2036  0498                     	;# 
  2037  0499                     	;# 
  2038  049A                     	;# 
  2039  049B                     	;# 
  2040  049C                     	;# 
  2041  049D                     	;# 
  2042  050C                     	;# 
  2043  050C                     	;# 
  2044  050D                     	;# 
  2045  050E                     	;# 
  2046  050F                     	;# 
  2047  050F                     	;# 
  2048  0510                     	;# 
  2049  0511                     	;# 
  2050  0512                     	;# 
  2051  0512                     	;# 
  2052  0513                     	;# 
  2053  0514                     	;# 
  2054  0515                     	;# 
  2055  0515                     	;# 
  2056  0516                     	;# 
  2057  0517                     	;# 
  2058  0518                     	;# 
  2059  0519                     	;# 
  2060  051A                     	;# 
  2061  051B                     	;# 
  2062  051C                     	;# 
  2063  051D                     	;# 
  2064  058C                     	;# 
  2065  058C                     	;# 
  2066  058D                     	;# 
  2067  058E                     	;# 
  2068  058F                     	;# 
  2069  058F                     	;# 
  2070  0590                     	;# 
  2071  0591                     	;# 
  2072  0592                     	;# 
  2073  0593                     	;# 
  2074  060C                     	;# 
  2075  060D                     	;# 
  2076  060E                     	;# 
  2077  060F                     	;# 
  2078  0610                     	;# 
  2079  0611                     	;# 
  2080  0612                     	;# 
  2081  0613                     	;# 
  2082  0614                     	;# 
  2083  0616                     	;# 
  2084  0617                     	;# 
  2085  0618                     	;# 
  2086  0619                     	;# 
  2087  061A                     	;# 
  2088  061B                     	;# 
  2089  061C                     	;# 
  2090  061D                     	;# 
  2091  061E                     	;# 
  2092  068C                     	;# 
  2093  068D                     	;# 
  2094  068E                     	;# 
  2095  068F                     	;# 
  2096  0690                     	;# 
  2097  0691                     	;# 
  2098  0692                     	;# 
  2099  0693                     	;# 
  2100  0694                     	;# 
  2101  070C                     	;# 
  2102  070D                     	;# 
  2103  070E                     	;# 
  2104  070F                     	;# 
  2105  0710                     	;# 
  2106  0711                     	;# 
  2107  0712                     	;# 
  2108  0713                     	;# 
  2109  0714                     	;# 
  2110  0716                     	;# 
  2111  0717                     	;# 
  2112  0718                     	;# 
  2113  0719                     	;# 
  2114  071A                     	;# 
  2115  071B                     	;# 
  2116  071C                     	;# 
  2117  071D                     	;# 
  2118  071E                     	;# 
  2119  0796                     	;# 
  2120  0797                     	;# 
  2121  0798                     	;# 
  2122  0799                     	;# 
  2123  079A                     	;# 
  2124  079B                     	;# 
  2125  080C                     	;# 
  2126  080D                     	;# 
  2127  080E                     	;# 
  2128  080F                     	;# 
  2129  0810                     	;# 
  2130  0811                     	;# 
  2131  0812                     	;# 
  2132  0813                     	;# 
  2133  0814                     	;# 
  2134  081A                     	;# 
  2135  081B                     	;# 
  2136  081C                     	;# 
  2137  081D                     	;# 
  2138  081E                     	;# 
  2139  081F                     	;# 
  2140  088C                     	;# 
  2141  088D                     	;# 
  2142  088E                     	;# 
  2143  088F                     	;# 
  2144  0890                     	;# 
  2145  0891                     	;# 
  2146  0892                     	;# 
  2147  0893                     	;# 
  2148  0895                     	;# 
  2149  0896                     	;# 
  2150  0897                     	;# 
  2151  0898                     	;# 
  2152  0899                     	;# 
  2153  089A                     	;# 
  2154  089B                     	;# 
  2155  090C                     	;# 
  2156  090E                     	;# 
  2157  090F                     	;# 
  2158  091F                     	;# 
  2159  091F                     	;# 
  2160  098F                     	;# 
  2161  098F                     	;# 
  2162  0990                     	;# 
  2163  0991                     	;# 
  2164  0992                     	;# 
  2165  0993                     	;# 
  2166  0994                     	;# 
  2167  0995                     	;# 
  2168  0996                     	;# 
  2169  0997                     	;# 
  2170  0E0F                     	;# 
  2171  0E10                     	;# 
  2172  0E11                     	;# 
  2173  0E12                     	;# 
  2174  0E13                     	;# 
  2175  0E14                     	;# 
  2176  0E15                     	;# 
  2177  0E16                     	;# 
  2178  0E17                     	;# 
  2179  0E18                     	;# 
  2180  0E19                     	;# 
  2181  0E1A                     	;# 
  2182  0E1B                     	;# 
  2183  0E1C                     	;# 
  2184  0E1D                     	;# 
  2185  0E1E                     	;# 
  2186  0E1F                     	;# 
  2187  0E20                     	;# 
  2188  0E21                     	;# 
  2189  0E22                     	;# 
  2190  0E23                     	;# 
  2191  0E24                     	;# 
  2192  0E25                     	;# 
  2193  0E26                     	;# 
  2194  0E27                     	;# 
  2195  0E28                     	;# 
  2196  0E29                     	;# 
  2197  0E2A                     	;# 
  2198  0E2B                     	;# 
  2199  0E2C                     	;# 
  2200  0E2D                     	;# 
  2201  0E2E                     	;# 
  2202  0E2F                     	;# 
  2203  0E30                     	;# 
  2204  0E31                     	;# 
  2205  0E32                     	;# 
  2206  0E33                     	;# 
  2207  0E34                     	;# 
  2208  0E35                     	;# 
  2209  0E36                     	;# 
  2210  0E37                     	;# 
  2211  0E8F                     	;# 
  2212  0E90                     	;# 
  2213  0E91                     	;# 
  2214  0E92                     	;# 
  2215  0E93                     	;# 
  2216  0E94                     	;# 
  2217  0E95                     	;# 
  2218  0E96                     	;# 
  2219  0E97                     	;# 
  2220  0E9C                     	;# 
  2221  0E9D                     	;# 
  2222  0E9E                     	;# 
  2223  0EA1                     	;# 
  2224  0EA2                     	;# 
  2225  0EA3                     	;# 
  2226  0EA4                     	;# 
  2227  0EA5                     	;# 
  2228  0EA9                     	;# 
  2229  0EAA                     	;# 
  2230  0EAB                     	;# 
  2231  0EAC                     	;# 
  2232  0EB1                     	;# 
  2233  0EB2                     	;# 
  2234  0EB3                     	;# 
  2235  0EB8                     	;# 
  2236  0EB9                     	;# 
  2237  0EBA                     	;# 
  2238  0EBB                     	;# 
  2239  0EBC                     	;# 
  2240  0EBD                     	;# 
  2241  0EBE                     	;# 
  2242  0EC3                     	;# 
  2243  0EC5                     	;# 
  2244  0EC6                     	;# 
  2245  0EC7                     	;# 
  2246  0EC8                     	;# 
  2247  0EC9                     	;# 
  2248  0ECA                     	;# 
  2249  0ECB                     	;# 
  2250  0ECC                     	;# 
  2251  0F10                     	;# 
  2252  0F11                     	;# 
  2253  0F12                     	;# 
  2254  0F13                     	;# 
  2255  0F14                     	;# 
  2256  0F15                     	;# 
  2257  0F16                     	;# 
  2258  0F17                     	;# 
  2259  0F18                     	;# 
  2260  0F19                     	;# 
  2261  0F1A                     	;# 
  2262  0F1B                     	;# 
  2263  0F1C                     	;# 
  2264  0F1D                     	;# 
  2265  0F1E                     	;# 
  2266  0F1F                     	;# 
  2267  0F20                     	;# 
  2268  0F21                     	;# 
  2269  0F22                     	;# 
  2270  0F23                     	;# 
  2271  0F24                     	;# 
  2272  0F25                     	;# 
  2273  0F26                     	;# 
  2274  0F27                     	;# 
  2275  0F28                     	;# 
  2276  0F29                     	;# 
  2277  0F2A                     	;# 
  2278  0F2B                     	;# 
  2279  0F2C                     	;# 
  2280  0F2D                     	;# 
  2281  0F2E                     	;# 
  2282  0F2F                     	;# 
  2283  0F30                     	;# 
  2284  0F31                     	;# 
  2285  0F32                     	;# 
  2286  0F38                     	;# 
  2287  0F39                     	;# 
  2288  0F3A                     	;# 
  2289  0F3B                     	;# 
  2290  0F3C                     	;# 
  2291  0F3D                     	;# 
  2292  0F3E                     	;# 
  2293  0F3F                     	;# 
  2294  0F40                     	;# 
  2295  0F41                     	;# 
  2296  0F43                     	;# 
  2297  0F44                     	;# 
  2298  0F45                     	;# 
  2299  0F46                     	;# 
  2300  0F47                     	;# 
  2301  0F48                     	;# 
  2302  0F49                     	;# 
  2303  0F4A                     	;# 
  2304  0F4B                     	;# 
  2305  0F4C                     	;# 
  2306  0F4E                     	;# 
  2307  0F4F                     	;# 
  2308  0F50                     	;# 
  2309  0F51                     	;# 
  2310  0F52                     	;# 
  2311  0F53                     	;# 
  2312  0F54                     	;# 
  2313  0F55                     	;# 
  2314  0F56                     	;# 
  2315  0F57                     	;# 
  2316  0F59                     	;# 
  2317  0F5A                     	;# 
  2318  0F5B                     	;# 
  2319  0F5C                     	;# 
  2320  0F5D                     	;# 
  2321  0F61                     	;# 
  2322  0F62                     	;# 
  2323  0F64                     	;# 
  2324  0F65                     	;# 
  2325  0F66                     	;# 
  2326  0F67                     	;# 
  2327  0F68                     	;# 
  2328  0F69                     	;# 
  2329  0F6A                     	;# 
  2330  0F6B                     	;# 
  2331  0F6C                     	;# 
  2332  0F6D                     	;# 
  2333  0FE4                     	;# 
  2334  0FE5                     	;# 
  2335  0FE6                     	;# 
  2336  0FE7                     	;# 
  2337  0FE8                     	;# 
  2338  0FE9                     	;# 
  2339  0FEA                     	;# 
  2340  0FEB                     	;# 
  2341  0FED                     	;# 
  2342  0FEE                     	;# 
  2343  0FEF                     	;# 
  2344  0000                     	;# 
  2345  0001                     	;# 
  2346  0002                     	;# 
  2347  0003                     	;# 
  2348  0004                     	;# 
  2349  0005                     	;# 
  2350  0006                     	;# 
  2351  0007                     	;# 
  2352  0008                     	;# 
  2353  0009                     	;# 
  2354  000A                     	;# 
  2355  000B                     	;# 
  2356  000C                     	;# 
  2357  000D                     	;# 
  2358  000E                     	;# 
  2359  000F                     	;# 
  2360  0010                     	;# 
  2361  0011                     	;# 
  2362  0012                     	;# 
  2363  0013                     	;# 
  2364  0014                     	;# 
  2365  0015                     	;# 
  2366  0016                     	;# 
  2367  0017                     	;# 
  2368  0018                     	;# 
  2369  0019                     	;# 
  2370  001A                     	;# 
  2371  001C                     	;# 
  2372  001C                     	;# 
  2373  001D                     	;# 
  2374  001D                     	;# 
  2375  001E                     	;# 
  2376  001F                     	;# 
  2377  008C                     	;# 
  2378  008C                     	;# 
  2379  008D                     	;# 
  2380  008E                     	;# 
  2381  008E                     	;# 
  2382  008F                     	;# 
  2383  0090                     	;# 
  2384  0090                     	;# 
  2385  0091                     	;# 
  2386  0093                     	;# 
  2387  0094                     	;# 
  2388  0095                     	;# 
  2389  0096                     	;# 
  2390  0097                     	;# 
  2391  0098                     	;# 
  2392  0099                     	;# 
  2393  009A                     	;# 
  2394  009B                     	;# 
  2395  009C                     	;# 
  2396  009D                     	;# 
  2397  009E                     	;# 
  2398  010C                     	;# 
  2399  010D                     	;# 
  2400  010E                     	;# 
  2401  010E                     	;# 
  2402  010F                     	;# 
  2403  0110                     	;# 
  2404  0110                     	;# 
  2405  0111                     	;# 
  2406  0112                     	;# 
  2407  0112                     	;# 
  2408  0113                     	;# 
  2409  0114                     	;# 
  2410  0114                     	;# 
  2411  0115                     	;# 
  2412  0116                     	;# 
  2413  0116                     	;# 
  2414  0117                     	;# 
  2415  0119                     	;# 
  2416  0119                     	;# 
  2417  0119                     	;# 
  2418  011A                     	;# 
  2419  011A                     	;# 
  2420  011A                     	;# 
  2421  011B                     	;# 
  2422  011B                     	;# 
  2423  011B                     	;# 
  2424  011B                     	;# 
  2425  011B                     	;# 
  2426  011C                     	;# 
  2427  011C                     	;# 
  2428  011C                     	;# 
  2429  011D                     	;# 
  2430  011D                     	;# 
  2431  011D                     	;# 
  2432  011E                     	;# 
  2433  011E                     	;# 
  2434  011E                     	;# 
  2435  011F                     	;# 
  2436  011F                     	;# 
  2437  011F                     	;# 
  2438  011F                     	;# 
  2439  011F                     	;# 
  2440  018C                     	;# 
  2441  018D                     	;# 
  2442  018E                     	;# 
  2443  018F                     	;# 
  2444  0190                     	;# 
  2445  0191                     	;# 
  2446  0192                     	;# 
  2447  0196                     	;# 
  2448  0197                     	;# 
  2449  0198                     	;# 
  2450  0199                     	;# 
  2451  019A                     	;# 
  2452  019B                     	;# 
  2453  019C                     	;# 
  2454  020C                     	;# 
  2455  020C                     	;# 
  2456  020D                     	;# 
  2457  020E                     	;# 
  2458  020F                     	;# 
  2459  020F                     	;# 
  2460  0210                     	;# 
  2461  0210                     	;# 
  2462  0211                     	;# 
  2463  0211                     	;# 
  2464  0212                     	;# 
  2465  0212                     	;# 
  2466  0213                     	;# 
  2467  0214                     	;# 
  2468  0215                     	;# 
  2469  0215                     	;# 
  2470  0216                     	;# 
  2471  0216                     	;# 
  2472  0217                     	;# 
  2473  0217                     	;# 
  2474  0218                     	;# 
  2475  0218                     	;# 
  2476  0219                     	;# 
  2477  021A                     	;# 
  2478  021B                     	;# 
  2479  021B                     	;# 
  2480  021C                     	;# 
  2481  021C                     	;# 
  2482  021D                     	;# 
  2483  021D                     	;# 
  2484  021E                     	;# 
  2485  021F                     	;# 
  2486  028C                     	;# 
  2487  028C                     	;# 
  2488  028D                     	;# 
  2489  028D                     	;# 
  2490  028E                     	;# 
  2491  028F                     	;# 
  2492  0290                     	;# 
  2493  0290                     	;# 
  2494  0291                     	;# 
  2495  0292                     	;# 
  2496  0292                     	;# 
  2497  0293                     	;# 
  2498  0293                     	;# 
  2499  0294                     	;# 
  2500  0295                     	;# 
  2501  0296                     	;# 
  2502  0296                     	;# 
  2503  0297                     	;# 
  2504  0298                     	;# 
  2505  0298                     	;# 
  2506  0299                     	;# 
  2507  0299                     	;# 
  2508  029A                     	;# 
  2509  029B                     	;# 
  2510  029C                     	;# 
  2511  029C                     	;# 
  2512  029D                     	;# 
  2513  030C                     	;# 
  2514  030C                     	;# 
  2515  030D                     	;# 
  2516  030E                     	;# 
  2517  030F                     	;# 
  2518  0310                     	;# 
  2519  0310                     	;# 
  2520  0311                     	;# 
  2521  0312                     	;# 
  2522  0313                     	;# 
  2523  0314                     	;# 
  2524  0314                     	;# 
  2525  0315                     	;# 
  2526  0316                     	;# 
  2527  0317                     	;# 
  2528  0318                     	;# 
  2529  0318                     	;# 
  2530  0319                     	;# 
  2531  031A                     	;# 
  2532  031B                     	;# 
  2533  031C                     	;# 
  2534  031C                     	;# 
  2535  031D                     	;# 
  2536  031E                     	;# 
  2537  031F                     	;# 
  2538  038C                     	;# 
  2539  038C                     	;# 
  2540  038D                     	;# 
  2541  038E                     	;# 
  2542  0390                     	;# 
  2543  0390                     	;# 
  2544  0391                     	;# 
  2545  0392                     	;# 
  2546  040C                     	;# 
  2547  040D                     	;# 
  2548  040E                     	;# 
  2549  040F                     	;# 
  2550  0410                     	;# 
  2551  0411                     	;# 
  2552  0416                     	;# 
  2553  0416                     	;# 
  2554  0417                     	;# 
  2555  0418                     	;# 
  2556  0418                     	;# 
  2557  0419                     	;# 
  2558  041A                     	;# 
  2559  041A                     	;# 
  2560  041B                     	;# 
  2561  041C                     	;# 
  2562  041C                     	;# 
  2563  041D                     	;# 
  2564  041E                     	;# 
  2565  041F                     	;# 
  2566  048C                     	;# 
  2567  048C                     	;# 
  2568  048D                     	;# 
  2569  048E                     	;# 
  2570  048F                     	;# 
  2571  048F                     	;# 
  2572  0490                     	;# 
  2573  0491                     	;# 
  2574  0492                     	;# 
  2575  0492                     	;# 
  2576  0493                     	;# 
  2577  0494                     	;# 
  2578  0495                     	;# 
  2579  0495                     	;# 
  2580  0496                     	;# 
  2581  0497                     	;# 
  2582  0498                     	;# 
  2583  0499                     	;# 
  2584  049A                     	;# 
  2585  049B                     	;# 
  2586  049C                     	;# 
  2587  049D                     	;# 
  2588  050C                     	;# 
  2589  050C                     	;# 
  2590  050D                     	;# 
  2591  050E                     	;# 
  2592  050F                     	;# 
  2593  050F                     	;# 
  2594  0510                     	;# 
  2595  0511                     	;# 
  2596  0512                     	;# 
  2597  0512                     	;# 
  2598  0513                     	;# 
  2599  0514                     	;# 
  2600  0515                     	;# 
  2601  0515                     	;# 
  2602  0516                     	;# 
  2603  0517                     	;# 
  2604  0518                     	;# 
  2605  0519                     	;# 
  2606  051A                     	;# 
  2607  051B                     	;# 
  2608  051C                     	;# 
  2609  051D                     	;# 
  2610  058C                     	;# 
  2611  058C                     	;# 
  2612  058D                     	;# 
  2613  058E                     	;# 
  2614  058F                     	;# 
  2615  058F                     	;# 
  2616  0590                     	;# 
  2617  0591                     	;# 
  2618  0592                     	;# 
  2619  0593                     	;# 
  2620  060C                     	;# 
  2621  060D                     	;# 
  2622  060E                     	;# 
  2623  060F                     	;# 
  2624  0610                     	;# 
  2625  0611                     	;# 
  2626  0612                     	;# 
  2627  0613                     	;# 
  2628  0614                     	;# 
  2629  0616                     	;# 
  2630  0617                     	;# 
  2631  0618                     	;# 
  2632  0619                     	;# 
  2633  061A                     	;# 
  2634  061B                     	;# 
  2635  061C                     	;# 
  2636  061D                     	;# 
  2637  061E                     	;# 
  2638  068C                     	;# 
  2639  068D                     	;# 
  2640  068E                     	;# 
  2641  068F                     	;# 
  2642  0690                     	;# 
  2643  0691                     	;# 
  2644  0692                     	;# 
  2645  0693                     	;# 
  2646  0694                     	;# 
  2647  070C                     	;# 
  2648  070D                     	;# 
  2649  070E                     	;# 
  2650  070F                     	;# 
  2651  0710                     	;# 
  2652  0711                     	;# 
  2653  0712                     	;# 
  2654  0713                     	;# 
  2655  0714                     	;# 
  2656  0716                     	;# 
  2657  0717                     	;# 
  2658  0718                     	;# 
  2659  0719                     	;# 
  2660  071A                     	;# 
  2661  071B                     	;# 
  2662  071C                     	;# 
  2663  071D                     	;# 
  2664  071E                     	;# 
  2665  0796                     	;# 
  2666  0797                     	;# 
  2667  0798                     	;# 
  2668  0799                     	;# 
  2669  079A                     	;# 
  2670  079B                     	;# 
  2671  080C                     	;# 
  2672  080D                     	;# 
  2673  080E                     	;# 
  2674  080F                     	;# 
  2675  0810                     	;# 
  2676  0811                     	;# 
  2677  0812                     	;# 
  2678  0813                     	;# 
  2679  0814                     	;# 
  2680  081A                     	;# 
  2681  081B                     	;# 
  2682  081C                     	;# 
  2683  081D                     	;# 
  2684  081E                     	;# 
  2685  081F                     	;# 
  2686  088C                     	;# 
  2687  088D                     	;# 
  2688  088E                     	;# 
  2689  088F                     	;# 
  2690  0890                     	;# 
  2691  0891                     	;# 
  2692  0892                     	;# 
  2693  0893                     	;# 
  2694  0895                     	;# 
  2695  0896                     	;# 
  2696  0897                     	;# 
  2697  0898                     	;# 
  2698  0899                     	;# 
  2699  089A                     	;# 
  2700  089B                     	;# 
  2701  090C                     	;# 
  2702  090E                     	;# 
  2703  090F                     	;# 
  2704  091F                     	;# 
  2705  091F                     	;# 
  2706  098F                     	;# 
  2707  098F                     	;# 
  2708  0990                     	;# 
  2709  0991                     	;# 
  2710  0992                     	;# 
  2711  0993                     	;# 
  2712  0994                     	;# 
  2713  0995                     	;# 
  2714  0996                     	;# 
  2715  0997                     	;# 
  2716  0E0F                     	;# 
  2717  0E10                     	;# 
  2718  0E11                     	;# 
  2719  0E12                     	;# 
  2720  0E13                     	;# 
  2721  0E14                     	;# 
  2722  0E15                     	;# 
  2723  0E16                     	;# 
  2724  0E17                     	;# 
  2725  0E18                     	;# 
  2726  0E19                     	;# 
  2727  0E1A                     	;# 
  2728  0E1B                     	;# 
  2729  0E1C                     	;# 
  2730  0E1D                     	;# 
  2731  0E1E                     	;# 
  2732  0E1F                     	;# 
  2733  0E20                     	;# 
  2734  0E21                     	;# 
  2735  0E22                     	;# 
  2736  0E23                     	;# 
  2737  0E24                     	;# 
  2738  0E25                     	;# 
  2739  0E26                     	;# 
  2740  0E27                     	;# 
  2741  0E28                     	;# 
  2742  0E29                     	;# 
  2743  0E2A                     	;# 
  2744  0E2B                     	;# 
  2745  0E2C                     	;# 
  2746  0E2D                     	;# 
  2747  0E2E                     	;# 
  2748  0E2F                     	;# 
  2749  0E30                     	;# 
  2750  0E31                     	;# 
  2751  0E32                     	;# 
  2752  0E33                     	;# 
  2753  0E34                     	;# 
  2754  0E35                     	;# 
  2755  0E36                     	;# 
  2756  0E37                     	;# 
  2757  0E8F                     	;# 
  2758  0E90                     	;# 
  2759  0E91                     	;# 
  2760  0E92                     	;# 
  2761  0E93                     	;# 
  2762  0E94                     	;# 
  2763  0E95                     	;# 
  2764  0E96                     	;# 
  2765  0E97                     	;# 
  2766  0E9C                     	;# 
  2767  0E9D                     	;# 
  2768  0E9E                     	;# 
  2769  0EA1                     	;# 
  2770  0EA2                     	;# 
  2771  0EA3                     	;# 
  2772  0EA4                     	;# 
  2773  0EA5                     	;# 
  2774  0EA9                     	;# 
  2775  0EAA                     	;# 
  2776  0EAB                     	;# 
  2777  0EAC                     	;# 
  2778  0EB1                     	;# 
  2779  0EB2                     	;# 
  2780  0EB3                     	;# 
  2781  0EB8                     	;# 
  2782  0EB9                     	;# 
  2783  0EBA                     	;# 
  2784  0EBB                     	;# 
  2785  0EBC                     	;# 
  2786  0EBD                     	;# 
  2787  0EBE                     	;# 
  2788  0EC3                     	;# 
  2789  0EC5                     	;# 
  2790  0EC6                     	;# 
  2791  0EC7                     	;# 
  2792  0EC8                     	;# 
  2793  0EC9                     	;# 
  2794  0ECA                     	;# 
  2795  0ECB                     	;# 
  2796  0ECC                     	;# 
  2797  0F10                     	;# 
  2798  0F11                     	;# 
  2799  0F12                     	;# 
  2800  0F13                     	;# 
  2801  0F14                     	;# 
  2802  0F15                     	;# 
  2803  0F16                     	;# 
  2804  0F17                     	;# 
  2805  0F18                     	;# 
  2806  0F19                     	;# 
  2807  0F1A                     	;# 
  2808  0F1B                     	;# 
  2809  0F1C                     	;# 
  2810  0F1D                     	;# 
  2811  0F1E                     	;# 
  2812  0F1F                     	;# 
  2813  0F20                     	;# 
  2814  0F21                     	;# 
  2815  0F22                     	;# 
  2816  0F23                     	;# 
  2817  0F24                     	;# 
  2818  0F25                     	;# 
  2819  0F26                     	;# 
  2820  0F27                     	;# 
  2821  0F28                     	;# 
  2822  0F29                     	;# 
  2823  0F2A                     	;# 
  2824  0F2B                     	;# 
  2825  0F2C                     	;# 
  2826  0F2D                     	;# 
  2827  0F2E                     	;# 
  2828  0F2F                     	;# 
  2829  0F30                     	;# 
  2830  0F31                     	;# 
  2831  0F32                     	;# 
  2832  0F38                     	;# 
  2833  0F39                     	;# 
  2834  0F3A                     	;# 
  2835  0F3B                     	;# 
  2836  0F3C                     	;# 
  2837  0F3D                     	;# 
  2838  0F3E                     	;# 
  2839  0F3F                     	;# 
  2840  0F40                     	;# 
  2841  0F41                     	;# 
  2842  0F43                     	;# 
  2843  0F44                     	;# 
  2844  0F45                     	;# 
  2845  0F46                     	;# 
  2846  0F47                     	;# 
  2847  0F48                     	;# 
  2848  0F49                     	;# 
  2849  0F4A                     	;# 
  2850  0F4B                     	;# 
  2851  0F4C                     	;# 
  2852  0F4E                     	;# 
  2853  0F4F                     	;# 
  2854  0F50                     	;# 
  2855  0F51                     	;# 
  2856  0F52                     	;# 
  2857  0F53                     	;# 
  2858  0F54                     	;# 
  2859  0F55                     	;# 
  2860  0F56                     	;# 
  2861  0F57                     	;# 
  2862  0F59                     	;# 
  2863  0F5A                     	;# 
  2864  0F5B                     	;# 
  2865  0F5C                     	;# 
  2866  0F5D                     	;# 
  2867  0F61                     	;# 
  2868  0F62                     	;# 
  2869  0F64                     	;# 
  2870  0F65                     	;# 
  2871  0F66                     	;# 
  2872  0F67                     	;# 
  2873  0F68                     	;# 
  2874  0F69                     	;# 
  2875  0F6A                     	;# 
  2876  0F6B                     	;# 
  2877  0F6C                     	;# 
  2878  0F6D                     	;# 
  2879  0FE4                     	;# 
  2880  0FE5                     	;# 
  2881  0FE6                     	;# 
  2882  0FE7                     	;# 
  2883  0FE8                     	;# 
  2884  0FE9                     	;# 
  2885  0FEA                     	;# 
  2886  0FEB                     	;# 
  2887  0FED                     	;# 
  2888  0FEE                     	;# 
  2889  0FEF                     	;# 
  2890  0000                     	;# 
  2891  0001                     	;# 
  2892  0002                     	;# 
  2893  0003                     	;# 
  2894  0004                     	;# 
  2895  0005                     	;# 
  2896  0006                     	;# 
  2897  0007                     	;# 
  2898  0008                     	;# 
  2899  0009                     	;# 
  2900  000A                     	;# 
  2901  000B                     	;# 
  2902  000C                     	;# 
  2903  000D                     	;# 
  2904  000E                     	;# 
  2905  000F                     	;# 
  2906  0010                     	;# 
  2907  0011                     	;# 
  2908  0012                     	;# 
  2909  0013                     	;# 
  2910  0014                     	;# 
  2911  0015                     	;# 
  2912  0016                     	;# 
  2913  0017                     	;# 
  2914  0018                     	;# 
  2915  0019                     	;# 
  2916  001A                     	;# 
  2917  001C                     	;# 
  2918  001C                     	;# 
  2919  001D                     	;# 
  2920  001D                     	;# 
  2921  001E                     	;# 
  2922  001F                     	;# 
  2923  008C                     	;# 
  2924  008C                     	;# 
  2925  008D                     	;# 
  2926  008E                     	;# 
  2927  008E                     	;# 
  2928  008F                     	;# 
  2929  0090                     	;# 
  2930  0090                     	;# 
  2931  0091                     	;# 
  2932  0093                     	;# 
  2933  0094                     	;# 
  2934  0095                     	;# 
  2935  0096                     	;# 
  2936  0097                     	;# 
  2937  0098                     	;# 
  2938  0099                     	;# 
  2939  009A                     	;# 
  2940  009B                     	;# 
  2941  009C                     	;# 
  2942  009D                     	;# 
  2943  009E                     	;# 
  2944  010C                     	;# 
  2945  010D                     	;# 
  2946  010E                     	;# 
  2947  010E                     	;# 
  2948  010F                     	;# 
  2949  0110                     	;# 
  2950  0110                     	;# 
  2951  0111                     	;# 
  2952  0112                     	;# 
  2953  0112                     	;# 
  2954  0113                     	;# 
  2955  0114                     	;# 
  2956  0114                     	;# 
  2957  0115                     	;# 
  2958  0116                     	;# 
  2959  0116                     	;# 
  2960  0117                     	;# 
  2961  0119                     	;# 
  2962  0119                     	;# 
  2963  0119                     	;# 
  2964  011A                     	;# 
  2965  011A                     	;# 
  2966  011A                     	;# 
  2967  011B                     	;# 
  2968  011B                     	;# 
  2969  011B                     	;# 
  2970  011B                     	;# 
  2971  011B                     	;# 
  2972  011C                     	;# 
  2973  011C                     	;# 
  2974  011C                     	;# 
  2975  011D                     	;# 
  2976  011D                     	;# 
  2977  011D                     	;# 
  2978  011E                     	;# 
  2979  011E                     	;# 
  2980  011E                     	;# 
  2981  011F                     	;# 
  2982  011F                     	;# 
  2983  011F                     	;# 
  2984  011F                     	;# 
  2985  011F                     	;# 
  2986  018C                     	;# 
  2987  018D                     	;# 
  2988  018E                     	;# 
  2989  018F                     	;# 
  2990  0190                     	;# 
  2991  0191                     	;# 
  2992  0192                     	;# 
  2993  0196                     	;# 
  2994  0197                     	;# 
  2995  0198                     	;# 
  2996  0199                     	;# 
  2997  019A                     	;# 
  2998  019B                     	;# 
  2999  019C                     	;# 
  3000  020C                     	;# 
  3001  020C                     	;# 
  3002  020D                     	;# 
  3003  020E                     	;# 
  3004  020F                     	;# 
  3005  020F                     	;# 
  3006  0210                     	;# 
  3007  0210                     	;# 
  3008  0211                     	;# 
  3009  0211                     	;# 
  3010  0212                     	;# 
  3011  0212                     	;# 
  3012  0213                     	;# 
  3013  0214                     	;# 
  3014  0215                     	;# 
  3015  0215                     	;# 
  3016  0216                     	;# 
  3017  0216                     	;# 
  3018  0217                     	;# 
  3019  0217                     	;# 
  3020  0218                     	;# 
  3021  0218                     	;# 
  3022  0219                     	;# 
  3023  021A                     	;# 
  3024  021B                     	;# 
  3025  021B                     	;# 
  3026  021C                     	;# 
  3027  021C                     	;# 
  3028  021D                     	;# 
  3029  021D                     	;# 
  3030  021E                     	;# 
  3031  021F                     	;# 
  3032  028C                     	;# 
  3033  028C                     	;# 
  3034  028D                     	;# 
  3035  028D                     	;# 
  3036  028E                     	;# 
  3037  028F                     	;# 
  3038  0290                     	;# 
  3039  0290                     	;# 
  3040  0291                     	;# 
  3041  0292                     	;# 
  3042  0292                     	;# 
  3043  0293                     	;# 
  3044  0293                     	;# 
  3045  0294                     	;# 
  3046  0295                     	;# 
  3047  0296                     	;# 
  3048  0296                     	;# 
  3049  0297                     	;# 
  3050  0298                     	;# 
  3051  0298                     	;# 
  3052  0299                     	;# 
  3053  0299                     	;# 
  3054  029A                     	;# 
  3055  029B                     	;# 
  3056  029C                     	;# 
  3057  029C                     	;# 
  3058  029D                     	;# 
  3059  030C                     	;# 
  3060  030C                     	;# 
  3061  030D                     	;# 
  3062  030E                     	;# 
  3063  030F                     	;# 
  3064  0310                     	;# 
  3065  0310                     	;# 
  3066  0311                     	;# 
  3067  0312                     	;# 
  3068  0313                     	;# 
  3069  0314                     	;# 
  3070  0314                     	;# 
  3071  0315                     	;# 
  3072  0316                     	;# 
  3073  0317                     	;# 
  3074  0318                     	;# 
  3075  0318                     	;# 
  3076  0319                     	;# 
  3077  031A                     	;# 
  3078  031B                     	;# 
  3079  031C                     	;# 
  3080  031C                     	;# 
  3081  031D                     	;# 
  3082  031E                     	;# 
  3083  031F                     	;# 
  3084  038C                     	;# 
  3085  038C                     	;# 
  3086  038D                     	;# 
  3087  038E                     	;# 
  3088  0390                     	;# 
  3089  0390                     	;# 
  3090  0391                     	;# 
  3091  0392                     	;# 
  3092  040C                     	;# 
  3093  040D                     	;# 
  3094  040E                     	;# 
  3095  040F                     	;# 
  3096  0410                     	;# 
  3097  0411                     	;# 
  3098  0416                     	;# 
  3099  0416                     	;# 
  3100  0417                     	;# 
  3101  0418                     	;# 
  3102  0418                     	;# 
  3103  0419                     	;# 
  3104  041A                     	;# 
  3105  041A                     	;# 
  3106  041B                     	;# 
  3107  041C                     	;# 
  3108  041C                     	;# 
  3109  041D                     	;# 
  3110  041E                     	;# 
  3111  041F                     	;# 
  3112  048C                     	;# 
  3113  048C                     	;# 
  3114  048D                     	;# 
  3115  048E                     	;# 
  3116  048F                     	;# 
  3117  048F                     	;# 
  3118  0490                     	;# 
  3119  0491                     	;# 
  3120  0492                     	;# 
  3121  0492                     	;# 
  3122  0493                     	;# 
  3123  0494                     	;# 
  3124  0495                     	;# 
  3125  0495                     	;# 
  3126  0496                     	;# 
  3127  0497                     	;# 
  3128  0498                     	;# 
  3129  0499                     	;# 
  3130  049A                     	;# 
  3131  049B                     	;# 
  3132  049C                     	;# 
  3133  049D                     	;# 
  3134  050C                     	;# 
  3135  050C                     	;# 
  3136  050D                     	;# 
  3137  050E                     	;# 
  3138  050F                     	;# 
  3139  050F                     	;# 
  3140  0510                     	;# 
  3141  0511                     	;# 
  3142  0512                     	;# 
  3143  0512                     	;# 
  3144  0513                     	;# 
  3145  0514                     	;# 
  3146  0515                     	;# 
  3147  0515                     	;# 
  3148  0516                     	;# 
  3149  0517                     	;# 
  3150  0518                     	;# 
  3151  0519                     	;# 
  3152  051A                     	;# 
  3153  051B                     	;# 
  3154  051C                     	;# 
  3155  051D                     	;# 
  3156  058C                     	;# 
  3157  058C                     	;# 
  3158  058D                     	;# 
  3159  058E                     	;# 
  3160  058F                     	;# 
  3161  058F                     	;# 
  3162  0590                     	;# 
  3163  0591                     	;# 
  3164  0592                     	;# 
  3165  0593                     	;# 
  3166  060C                     	;# 
  3167  060D                     	;# 
  3168  060E                     	;# 
  3169  060F                     	;# 
  3170  0610                     	;# 
  3171  0611                     	;# 
  3172  0612                     	;# 
  3173  0613                     	;# 
  3174  0614                     	;# 
  3175  0616                     	;# 
  3176  0617                     	;# 
  3177  0618                     	;# 
  3178  0619                     	;# 
  3179  061A                     	;# 
  3180  061B                     	;# 
  3181  061C                     	;# 
  3182  061D                     	;# 
  3183  061E                     	;# 
  3184  068C                     	;# 
  3185  068D                     	;# 
  3186  068E                     	;# 
  3187  068F                     	;# 
  3188  0690                     	;# 
  3189  0691                     	;# 
  3190  0692                     	;# 
  3191  0693                     	;# 
  3192  0694                     	;# 
  3193  070C                     	;# 
  3194  070D                     	;# 
  3195  070E                     	;# 
  3196  070F                     	;# 
  3197  0710                     	;# 
  3198  0711                     	;# 
  3199  0712                     	;# 
  3200  0713                     	;# 
  3201  0714                     	;# 
  3202  0716                     	;# 
  3203  0717                     	;# 
  3204  0718                     	;# 
  3205  0719                     	;# 
  3206  071A                     	;# 
  3207  071B                     	;# 
  3208  071C                     	;# 
  3209  071D                     	;# 
  3210  071E                     	;# 
  3211  0796                     	;# 
  3212  0797                     	;# 
  3213  0798                     	;# 
  3214  0799                     	;# 
  3215  079A                     	;# 
  3216  079B                     	;# 
  3217  080C                     	;# 
  3218  080D                     	;# 
  3219  080E                     	;# 
  3220  080F                     	;# 
  3221  0810                     	;# 
  3222  0811                     	;# 
  3223  0812                     	;# 
  3224  0813                     	;# 
  3225  0814                     	;# 
  3226  081A                     	;# 
  3227  081B                     	;# 
  3228  081C                     	;# 
  3229  081D                     	;# 
  3230  081E                     	;# 
  3231  081F                     	;# 
  3232  088C                     	;# 
  3233  088D                     	;# 
  3234  088E                     	;# 
  3235  088F                     	;# 
  3236  0890                     	;# 
  3237  0891                     	;# 
  3238  0892                     	;# 
  3239  0893                     	;# 
  3240  0895                     	;# 
  3241  0896                     	;# 
  3242  0897                     	;# 
  3243  0898                     	;# 
  3244  0899                     	;# 
  3245  089A                     	;# 
  3246  089B                     	;# 
  3247  090C                     	;# 
  3248  090E                     	;# 
  3249  090F                     	;# 
  3250  091F                     	;# 
  3251  091F                     	;# 
  3252  098F                     	;# 
  3253  098F                     	;# 
  3254  0990                     	;# 
  3255  0991                     	;# 
  3256  0992                     	;# 
  3257  0993                     	;# 
  3258  0994                     	;# 
  3259  0995                     	;# 
  3260  0996                     	;# 
  3261  0997                     	;# 
  3262  0E0F                     	;# 
  3263  0E10                     	;# 
  3264  0E11                     	;# 
  3265  0E12                     	;# 
  3266  0E13                     	;# 
  3267  0E14                     	;# 
  3268  0E15                     	;# 
  3269  0E16                     	;# 
  3270  0E17                     	;# 
  3271  0E18                     	;# 
  3272  0E19                     	;# 
  3273  0E1A                     	;# 
  3274  0E1B                     	;# 
  3275  0E1C                     	;# 
  3276  0E1D                     	;# 
  3277  0E1E                     	;# 
  3278  0E1F                     	;# 
  3279  0E20                     	;# 
  3280  0E21                     	;# 
  3281  0E22                     	;# 
  3282  0E23                     	;# 
  3283  0E24                     	;# 
  3284  0E25                     	;# 
  3285  0E26                     	;# 
  3286  0E27                     	;# 
  3287  0E28                     	;# 
  3288  0E29                     	;# 
  3289  0E2A                     	;# 
  3290  0E2B                     	;# 
  3291  0E2C                     	;# 
  3292  0E2D                     	;# 
  3293  0E2E                     	;# 
  3294  0E2F                     	;# 
  3295  0E30                     	;# 
  3296  0E31                     	;# 
  3297  0E32                     	;# 
  3298  0E33                     	;# 
  3299  0E34                     	;# 
  3300  0E35                     	;# 
  3301  0E36                     	;# 
  3302  0E37                     	;# 
  3303  0E8F                     	;# 
  3304  0E90                     	;# 
  3305  0E91                     	;# 
  3306  0E92                     	;# 
  3307  0E93                     	;# 
  3308  0E94                     	;# 
  3309  0E95                     	;# 
  3310  0E96                     	;# 
  3311  0E97                     	;# 
  3312  0E9C                     	;# 
  3313  0E9D                     	;# 
  3314  0E9E                     	;# 
  3315  0EA1                     	;# 
  3316  0EA2                     	;# 
  3317  0EA3                     	;# 
  3318  0EA4                     	;# 
  3319  0EA5                     	;# 
  3320  0EA9                     	;# 
  3321  0EAA                     	;# 
  3322  0EAB                     	;# 
  3323  0EAC                     	;# 
  3324  0EB1                     	;# 
  3325  0EB2                     	;# 
  3326  0EB3                     	;# 
  3327  0EB8                     	;# 
  3328  0EB9                     	;# 
  3329  0EBA                     	;# 
  3330  0EBB                     	;# 
  3331  0EBC                     	;# 
  3332  0EBD                     	;# 
  3333  0EBE                     	;# 
  3334  0EC3                     	;# 
  3335  0EC5                     	;# 
  3336  0EC6                     	;# 
  3337  0EC7                     	;# 
  3338  0EC8                     	;# 
  3339  0EC9                     	;# 
  3340  0ECA                     	;# 
  3341  0ECB                     	;# 
  3342  0ECC                     	;# 
  3343  0F10                     	;# 
  3344  0F11                     	;# 
  3345  0F12                     	;# 
  3346  0F13                     	;# 
  3347  0F14                     	;# 
  3348  0F15                     	;# 
  3349  0F16                     	;# 
  3350  0F17                     	;# 
  3351  0F18                     	;# 
  3352  0F19                     	;# 
  3353  0F1A                     	;# 
  3354  0F1B                     	;# 
  3355  0F1C                     	;# 
  3356  0F1D                     	;# 
  3357  0F1E                     	;# 
  3358  0F1F                     	;# 
  3359  0F20                     	;# 
  3360  0F21                     	;# 
  3361  0F22                     	;# 
  3362  0F23                     	;# 
  3363  0F24                     	;# 
  3364  0F25                     	;# 
  3365  0F26                     	;# 
  3366  0F27                     	;# 
  3367  0F28                     	;# 
  3368  0F29                     	;# 
  3369  0F2A                     	;# 
  3370  0F2B                     	;# 
  3371  0F2C                     	;# 
  3372  0F2D                     	;# 
  3373  0F2E                     	;# 
  3374  0F2F                     	;# 
  3375  0F30                     	;# 
  3376  0F31                     	;# 
  3377  0F32                     	;# 
  3378  0F38                     	;# 
  3379  0F39                     	;# 
  3380  0F3A                     	;# 
  3381  0F3B                     	;# 
  3382  0F3C                     	;# 
  3383  0F3D                     	;# 
  3384  0F3E                     	;# 
  3385  0F3F                     	;# 
  3386  0F40                     	;# 
  3387  0F41                     	;# 
  3388  0F43                     	;# 
  3389  0F44                     	;# 
  3390  0F45                     	;# 
  3391  0F46                     	;# 
  3392  0F47                     	;# 
  3393  0F48                     	;# 
  3394  0F49                     	;# 
  3395  0F4A                     	;# 
  3396  0F4B                     	;# 
  3397  0F4C                     	;# 
  3398  0F4E                     	;# 
  3399  0F4F                     	;# 
  3400  0F50                     	;# 
  3401  0F51                     	;# 
  3402  0F52                     	;# 
  3403  0F53                     	;# 
  3404  0F54                     	;# 
  3405  0F55                     	;# 
  3406  0F56                     	;# 
  3407  0F57                     	;# 
  3408  0F59                     	;# 
  3409  0F5A                     	;# 
  3410  0F5B                     	;# 
  3411  0F5C                     	;# 
  3412  0F5D                     	;# 
  3413  0F61                     	;# 
  3414  0F62                     	;# 
  3415  0F64                     	;# 
  3416  0F65                     	;# 
  3417  0F66                     	;# 
  3418  0F67                     	;# 
  3419  0F68                     	;# 
  3420  0F69                     	;# 
  3421  0F6A                     	;# 
  3422  0F6B                     	;# 
  3423  0F6C                     	;# 
  3424  0F6D                     	;# 
  3425  0FE4                     	;# 
  3426  0FE5                     	;# 
  3427  0FE6                     	;# 
  3428  0FE7                     	;# 
  3429  0FE8                     	;# 
  3430  0FE9                     	;# 
  3431  0FEA                     	;# 
  3432  0FEB                     	;# 
  3433  0FED                     	;# 
  3434  0FEE                     	;# 
  3435  0FEF                     	;# 
  3436  0000                     	;# 
  3437  0001                     	;# 
  3438  0002                     	;# 
  3439  0003                     	;# 
  3440  0004                     	;# 
  3441  0005                     	;# 
  3442  0006                     	;# 
  3443  0007                     	;# 
  3444  0008                     	;# 
  3445  0009                     	;# 
  3446  000A                     	;# 
  3447  000B                     	;# 
  3448  000C                     	;# 
  3449  000D                     	;# 
  3450  000E                     	;# 
  3451  000F                     	;# 
  3452  0010                     	;# 
  3453  0011                     	;# 
  3454  0012                     	;# 
  3455  0013                     	;# 
  3456  0014                     	;# 
  3457  0015                     	;# 
  3458  0016                     	;# 
  3459  0017                     	;# 
  3460  0018                     	;# 
  3461  0019                     	;# 
  3462  001A                     	;# 
  3463  001C                     	;# 
  3464  001C                     	;# 
  3465  001D                     	;# 
  3466  001D                     	;# 
  3467  001E                     	;# 
  3468  001F                     	;# 
  3469  008C                     	;# 
  3470  008C                     	;# 
  3471  008D                     	;# 
  3472  008E                     	;# 
  3473  008E                     	;# 
  3474  008F                     	;# 
  3475  0090                     	;# 
  3476  0090                     	;# 
  3477  0091                     	;# 
  3478  0093                     	;# 
  3479  0094                     	;# 
  3480  0095                     	;# 
  3481  0096                     	;# 
  3482  0097                     	;# 
  3483  0098                     	;# 
  3484  0099                     	;# 
  3485  009A                     	;# 
  3486  009B                     	;# 
  3487  009C                     	;# 
  3488  009D                     	;# 
  3489  009E                     	;# 
  3490  010C                     	;# 
  3491  010D                     	;# 
  3492  010E                     	;# 
  3493  010E                     	;# 
  3494  010F                     	;# 
  3495  0110                     	;# 
  3496  0110                     	;# 
  3497  0111                     	;# 
  3498  0112                     	;# 
  3499  0112                     	;# 
  3500  0113                     	;# 
  3501  0114                     	;# 
  3502  0114                     	;# 
  3503  0115                     	;# 
  3504  0116                     	;# 
  3505  0116                     	;# 
  3506  0117                     	;# 
  3507  0119                     	;# 
  3508  0119                     	;# 
  3509  0119                     	;# 
  3510  011A                     	;# 
  3511  011A                     	;# 
  3512  011A                     	;# 
  3513  011B                     	;# 
  3514  011B                     	;# 
  3515  011B                     	;# 
  3516  011B                     	;# 
  3517  011B                     	;# 
  3518  011C                     	;# 
  3519  011C                     	;# 
  3520  011C                     	;# 
  3521  011D                     	;# 
  3522  011D                     	;# 
  3523  011D                     	;# 
  3524  011E                     	;# 
  3525  011E                     	;# 
  3526  011E                     	;# 
  3527  011F                     	;# 
  3528  011F                     	;# 
  3529  011F                     	;# 
  3530  011F                     	;# 
  3531  011F                     	;# 
  3532  018C                     	;# 
  3533  018D                     	;# 
  3534  018E                     	;# 
  3535  018F                     	;# 
  3536  0190                     	;# 
  3537  0191                     	;# 
  3538  0192                     	;# 
  3539  0196                     	;# 
  3540  0197                     	;# 
  3541  0198                     	;# 
  3542  0199                     	;# 
  3543  019A                     	;# 
  3544  019B                     	;# 
  3545  019C                     	;# 
  3546  020C                     	;# 
  3547  020C                     	;# 
  3548  020D                     	;# 
  3549  020E                     	;# 
  3550  020F                     	;# 
  3551  020F                     	;# 
  3552  0210                     	;# 
  3553  0210                     	;# 
  3554  0211                     	;# 
  3555  0211                     	;# 
  3556  0212                     	;# 
  3557  0212                     	;# 
  3558  0213                     	;# 
  3559  0214                     	;# 
  3560  0215                     	;# 
  3561  0215                     	;# 
  3562  0216                     	;# 
  3563  0216                     	;# 
  3564  0217                     	;# 
  3565  0217                     	;# 
  3566  0218                     	;# 
  3567  0218                     	;# 
  3568  0219                     	;# 
  3569  021A                     	;# 
  3570  021B                     	;# 
  3571  021B                     	;# 
  3572  021C                     	;# 
  3573  021C                     	;# 
  3574  021D                     	;# 
  3575  021D                     	;# 
  3576  021E                     	;# 
  3577  021F                     	;# 
  3578  028C                     	;# 
  3579  028C                     	;# 
  3580  028D                     	;# 
  3581  028D                     	;# 
  3582  028E                     	;# 
  3583  028F                     	;# 
  3584  0290                     	;# 
  3585  0290                     	;# 
  3586  0291                     	;# 
  3587  0292                     	;# 
  3588  0292                     	;# 
  3589  0293                     	;# 
  3590  0293                     	;# 
  3591  0294                     	;# 
  3592  0295                     	;# 
  3593  0296                     	;# 
  3594  0296                     	;# 
  3595  0297                     	;# 
  3596  0298                     	;# 
  3597  0298                     	;# 
  3598  0299                     	;# 
  3599  0299                     	;# 
  3600  029A                     	;# 
  3601  029B                     	;# 
  3602  029C                     	;# 
  3603  029C                     	;# 
  3604  029D                     	;# 
  3605  030C                     	;# 
  3606  030C                     	;# 
  3607  030D                     	;# 
  3608  030E                     	;# 
  3609  030F                     	;# 
  3610  0310                     	;# 
  3611  0310                     	;# 
  3612  0311                     	;# 
  3613  0312                     	;# 
  3614  0313                     	;# 
  3615  0314                     	;# 
  3616  0314                     	;# 
  3617  0315                     	;# 
  3618  0316                     	;# 
  3619  0317                     	;# 
  3620  0318                     	;# 
  3621  0318                     	;# 
  3622  0319                     	;# 
  3623  031A                     	;# 
  3624  031B                     	;# 
  3625  031C                     	;# 
  3626  031C                     	;# 
  3627  031D                     	;# 
  3628  031E                     	;# 
  3629  031F                     	;# 
  3630  038C                     	;# 
  3631  038C                     	;# 
  3632  038D                     	;# 
  3633  038E                     	;# 
  3634  0390                     	;# 
  3635  0390                     	;# 
  3636  0391                     	;# 
  3637  0392                     	;# 
  3638  040C                     	;# 
  3639  040D                     	;# 
  3640  040E                     	;# 
  3641  040F                     	;# 
  3642  0410                     	;# 
  3643  0411                     	;# 
  3644  0416                     	;# 
  3645  0416                     	;# 
  3646  0417                     	;# 
  3647  0418                     	;# 
  3648  0418                     	;# 
  3649  0419                     	;# 
  3650  041A                     	;# 
  3651  041A                     	;# 
  3652  041B                     	;# 
  3653  041C                     	;# 
  3654  041C                     	;# 
  3655  041D                     	;# 
  3656  041E                     	;# 
  3657  041F                     	;# 
  3658  048C                     	;# 
  3659  048C                     	;# 
  3660  048D                     	;# 
  3661  048E                     	;# 
  3662  048F                     	;# 
  3663  048F                     	;# 
  3664  0490                     	;# 
  3665  0491                     	;# 
  3666  0492                     	;# 
  3667  0492                     	;# 
  3668  0493                     	;# 
  3669  0494                     	;# 
  3670  0495                     	;# 
  3671  0495                     	;# 
  3672  0496                     	;# 
  3673  0497                     	;# 
  3674  0498                     	;# 
  3675  0499                     	;# 
  3676  049A                     	;# 
  3677  049B                     	;# 
  3678  049C                     	;# 
  3679  049D                     	;# 
  3680  050C                     	;# 
  3681  050C                     	;# 
  3682  050D                     	;# 
  3683  050E                     	;# 
  3684  050F                     	;# 
  3685  050F                     	;# 
  3686  0510                     	;# 
  3687  0511                     	;# 
  3688  0512                     	;# 
  3689  0512                     	;# 
  3690  0513                     	;# 
  3691  0514                     	;# 
  3692  0515                     	;# 
  3693  0515                     	;# 
  3694  0516                     	;# 
  3695  0517                     	;# 
  3696  0518                     	;# 
  3697  0519                     	;# 
  3698  051A                     	;# 
  3699  051B                     	;# 
  3700  051C                     	;# 
  3701  051D                     	;# 
  3702  058C                     	;# 
  3703  058C                     	;# 
  3704  058D                     	;# 
  3705  058E                     	;# 
  3706  058F                     	;# 
  3707  058F                     	;# 
  3708  0590                     	;# 
  3709  0591                     	;# 
  3710  0592                     	;# 
  3711  0593                     	;# 
  3712  060C                     	;# 
  3713  060D                     	;# 
  3714  060E                     	;# 
  3715  060F                     	;# 
  3716  0610                     	;# 
  3717  0611                     	;# 
  3718  0612                     	;# 
  3719  0613                     	;# 
  3720  0614                     	;# 
  3721  0616                     	;# 
  3722  0617                     	;# 
  3723  0618                     	;# 
  3724  0619                     	;# 
  3725  061A                     	;# 
  3726  061B                     	;# 
  3727  061C                     	;# 
  3728  061D                     	;# 
  3729  061E                     	;# 
  3730  068C                     	;# 
  3731  068D                     	;# 
  3732  068E                     	;# 
  3733  068F                     	;# 
  3734  0690                     	;# 
  3735  0691                     	;# 
  3736  0692                     	;# 
  3737  0693                     	;# 
  3738  0694                     	;# 
  3739  070C                     	;# 
  3740  070D                     	;# 
  3741  070E                     	;# 
  3742  070F                     	;# 
  3743  0710                     	;# 
  3744  0711                     	;# 
  3745  0712                     	;# 
  3746  0713                     	;# 
  3747  0714                     	;# 
  3748  0716                     	;# 
  3749  0717                     	;# 
  3750  0718                     	;# 
  3751  0719                     	;# 
  3752  071A                     	;# 
  3753  071B                     	;# 
  3754  071C                     	;# 
  3755  071D                     	;# 
  3756  071E                     	;# 
  3757  0796                     	;# 
  3758  0797                     	;# 
  3759  0798                     	;# 
  3760  0799                     	;# 
  3761  079A                     	;# 
  3762  079B                     	;# 
  3763  080C                     	;# 
  3764  080D                     	;# 
  3765  080E                     	;# 
  3766  080F                     	;# 
  3767  0810                     	;# 
  3768  0811                     	;# 
  3769  0812                     	;# 
  3770  0813                     	;# 
  3771  0814                     	;# 
  3772  081A                     	;# 
  3773  081B                     	;# 
  3774  081C                     	;# 
  3775  081D                     	;# 
  3776  081E                     	;# 
  3777  081F                     	;# 
  3778  088C                     	;# 
  3779  088D                     	;# 
  3780  088E                     	;# 
  3781  088F                     	;# 
  3782  0890                     	;# 
  3783  0891                     	;# 
  3784  0892                     	;# 
  3785  0893                     	;# 
  3786  0895                     	;# 
  3787  0896                     	;# 
  3788  0897                     	;# 
  3789  0898                     	;# 
  3790  0899                     	;# 
  3791  089A                     	;# 
  3792  089B                     	;# 
  3793  090C                     	;# 
  3794  090E                     	;# 
  3795  090F                     	;# 
  3796  091F                     	;# 
  3797  091F                     	;# 
  3798  098F                     	;# 
  3799  098F                     	;# 
  3800  0990                     	;# 
  3801  0991                     	;# 
  3802  0992                     	;# 
  3803  0993                     	;# 
  3804  0994                     	;# 
  3805  0995                     	;# 
  3806  0996                     	;# 
  3807  0997                     	;# 
  3808  0E0F                     	;# 
  3809  0E10                     	;# 
  3810  0E11                     	;# 
  3811  0E12                     	;# 
  3812  0E13                     	;# 
  3813  0E14                     	;# 
  3814  0E15                     	;# 
  3815  0E16                     	;# 
  3816  0E17                     	;# 
  3817  0E18                     	;# 
  3818  0E19                     	;# 
  3819  0E1A                     	;# 
  3820  0E1B                     	;# 
  3821  0E1C                     	;# 
  3822  0E1D                     	;# 
  3823  0E1E                     	;# 
  3824  0E1F                     	;# 
  3825  0E20                     	;# 
  3826  0E21                     	;# 
  3827  0E22                     	;# 
  3828  0E23                     	;# 
  3829  0E24                     	;# 
  3830  0E25                     	;# 
  3831  0E26                     	;# 
  3832  0E27                     	;# 
  3833  0E28                     	;# 
  3834  0E29                     	;# 
  3835  0E2A                     	;# 
  3836  0E2B                     	;# 
  3837  0E2C                     	;# 
  3838  0E2D                     	;# 
  3839  0E2E                     	;# 
  3840  0E2F                     	;# 
  3841  0E30                     	;# 
  3842  0E31                     	;# 
  3843  0E32                     	;# 
  3844  0E33                     	;# 
  3845  0E34                     	;# 
  3846  0E35                     	;# 
  3847  0E36                     	;# 
  3848  0E37                     	;# 
  3849  0E8F                     	;# 
  3850  0E90                     	;# 
  3851  0E91                     	;# 
  3852  0E92                     	;# 
  3853  0E93                     	;# 
  3854  0E94                     	;# 
  3855  0E95                     	;# 
  3856  0E96                     	;# 
  3857  0E97                     	;# 
  3858  0E9C                     	;# 
  3859  0E9D                     	;# 
  3860  0E9E                     	;# 
  3861  0EA1                     	;# 
  3862  0EA2                     	;# 
  3863  0EA3                     	;# 
  3864  0EA4                     	;# 
  3865  0EA5                     	;# 
  3866  0EA9                     	;# 
  3867  0EAA                     	;# 
  3868  0EAB                     	;# 
  3869  0EAC                     	;# 
  3870  0EB1                     	;# 
  3871  0EB2                     	;# 
  3872  0EB3                     	;# 
  3873  0EB8                     	;# 
  3874  0EB9                     	;# 
  3875  0EBA                     	;# 
  3876  0EBB                     	;# 
  3877  0EBC                     	;# 
  3878  0EBD                     	;# 
  3879  0EBE                     	;# 
  3880  0EC3                     	;# 
  3881  0EC5                     	;# 
  3882  0EC6                     	;# 
  3883  0EC7                     	;# 
  3884  0EC8                     	;# 
  3885  0EC9                     	;# 
  3886  0ECA                     	;# 
  3887  0ECB                     	;# 
  3888  0ECC                     	;# 
  3889  0F10                     	;# 
  3890  0F11                     	;# 
  3891  0F12                     	;# 
  3892  0F13                     	;# 
  3893  0F14                     	;# 
  3894  0F15                     	;# 
  3895  0F16                     	;# 
  3896  0F17                     	;# 
  3897  0F18                     	;# 
  3898  0F19                     	;# 
  3899  0F1A                     	;# 
  3900  0F1B                     	;# 
  3901  0F1C                     	;# 
  3902  0F1D                     	;# 
  3903  0F1E                     	;# 
  3904  0F1F                     	;# 
  3905  0F20                     	;# 
  3906  0F21                     	;# 
  3907  0F22                     	;# 
  3908  0F23                     	;# 
  3909  0F24                     	;# 
  3910  0F25                     	;# 
  3911  0F26                     	;# 
  3912  0F27                     	;# 
  3913  0F28                     	;# 
  3914  0F29                     	;# 
  3915  0F2A                     	;# 
  3916  0F2B                     	;# 
  3917  0F2C                     	;# 
  3918  0F2D                     	;# 
  3919  0F2E                     	;# 
  3920  0F2F                     	;# 
  3921  0F30                     	;# 
  3922  0F31                     	;# 
  3923  0F32                     	;# 
  3924  0F38                     	;# 
  3925  0F39                     	;# 
  3926  0F3A                     	;# 
  3927  0F3B                     	;# 
  3928  0F3C                     	;# 
  3929  0F3D                     	;# 
  3930  0F3E                     	;# 
  3931  0F3F                     	;# 
  3932  0F40                     	;# 
  3933  0F41                     	;# 
  3934  0F43                     	;# 
  3935  0F44                     	;# 
  3936  0F45                     	;# 
  3937  0F46                     	;# 
  3938  0F47                     	;# 
  3939  0F48                     	;# 
  3940  0F49                     	;# 
  3941  0F4A                     	;# 
  3942  0F4B                     	;# 
  3943  0F4C                     	;# 
  3944  0F4E                     	;# 
  3945  0F4F                     	;# 
  3946  0F50                     	;# 
  3947  0F51                     	;# 
  3948  0F52                     	;# 
  3949  0F53                     	;# 
  3950  0F54                     	;# 
  3951  0F55                     	;# 
  3952  0F56                     	;# 
  3953  0F57                     	;# 
  3954  0F59                     	;# 
  3955  0F5A                     	;# 
  3956  0F5B                     	;# 
  3957  0F5C                     	;# 
  3958  0F5D                     	;# 
  3959  0F61                     	;# 
  3960  0F62                     	;# 
  3961  0F64                     	;# 
  3962  0F65                     	;# 
  3963  0F66                     	;# 
  3964  0F67                     	;# 
  3965  0F68                     	;# 
  3966  0F69                     	;# 
  3967  0F6A                     	;# 
  3968  0F6B                     	;# 
  3969  0F6C                     	;# 
  3970  0F6D                     	;# 
  3971  0FE4                     	;# 
  3972  0FE5                     	;# 
  3973  0FE6                     	;# 
  3974  0FE7                     	;# 
  3975  0FE8                     	;# 
  3976  0FE9                     	;# 
  3977  0FEA                     	;# 
  3978  0FEB                     	;# 
  3979  0FED                     	;# 
  3980  0FEE                     	;# 
  3981  0FEF                     	;# 
  3982  0000                     	;# 
  3983  0001                     	;# 
  3984  0002                     	;# 
  3985  0003                     	;# 
  3986  0004                     	;# 
  3987  0005                     	;# 
  3988  0006                     	;# 
  3989  0007                     	;# 
  3990  0008                     	;# 
  3991  0009                     	;# 
  3992  000A                     	;# 
  3993  000B                     	;# 
  3994  000C                     	;# 
  3995  000D                     	;# 
  3996  000E                     	;# 
  3997  000F                     	;# 
  3998  0010                     	;# 
  3999  0011                     	;# 
  4000  0012                     	;# 
  4001  0013                     	;# 
  4002  0014                     	;# 
  4003  0015                     	;# 
  4004  0016                     	;# 
  4005  0017                     	;# 
  4006  0018                     	;# 
  4007  0019                     	;# 
  4008  001A                     	;# 
  4009  001C                     	;# 
  4010  001C                     	;# 
  4011  001D                     	;# 
  4012  001D                     	;# 
  4013  001E                     	;# 
  4014  001F                     	;# 
  4015  008C                     	;# 
  4016  008C                     	;# 
  4017  008D                     	;# 
  4018  008E                     	;# 
  4019  008E                     	;# 
  4020  008F                     	;# 
  4021  0090                     	;# 
  4022  0090                     	;# 
  4023  0091                     	;# 
  4024  0093                     	;# 
  4025  0094                     	;# 
  4026  0095                     	;# 
  4027  0096                     	;# 
  4028  0097                     	;# 
  4029  0098                     	;# 
  4030  0099                     	;# 
  4031  009A                     	;# 
  4032  009B                     	;# 
  4033  009C                     	;# 
  4034  009D                     	;# 
  4035  009E                     	;# 
  4036  010C                     	;# 
  4037  010D                     	;# 
  4038  010E                     	;# 
  4039  010E                     	;# 
  4040  010F                     	;# 
  4041  0110                     	;# 
  4042  0110                     	;# 
  4043  0111                     	;# 
  4044  0112                     	;# 
  4045  0112                     	;# 
  4046  0113                     	;# 
  4047  0114                     	;# 
  4048  0114                     	;# 
  4049  0115                     	;# 
  4050  0116                     	;# 
  4051  0116                     	;# 
  4052  0117                     	;# 
  4053  0119                     	;# 
  4054  0119                     	;# 
  4055  0119                     	;# 
  4056  011A                     	;# 
  4057  011A                     	;# 
  4058  011A                     	;# 
  4059  011B                     	;# 
  4060  011B                     	;# 
  4061  011B                     	;# 
  4062  011B                     	;# 
  4063  011B                     	;# 
  4064  011C                     	;# 
  4065  011C                     	;# 
  4066  011C                     	;# 
  4067  011D                     	;# 
  4068  011D                     	;# 
  4069  011D                     	;# 
  4070  011E                     	;# 
  4071  011E                     	;# 
  4072  011E                     	;# 
  4073  011F                     	;# 
  4074  011F                     	;# 
  4075  011F                     	;# 
  4076  011F                     	;# 
  4077  011F                     	;# 
  4078  018C                     	;# 
  4079  018D                     	;# 
  4080  018E                     	;# 
  4081  018F                     	;# 
  4082  0190                     	;# 
  4083  0191                     	;# 
  4084  0192                     	;# 
  4085  0196                     	;# 
  4086  0197                     	;# 
  4087  0198                     	;# 
  4088  0199                     	;# 
  4089  019A                     	;# 
  4090  019B                     	;# 
  4091  019C                     	;# 
  4092  020C                     	;# 
  4093  020C                     	;# 
  4094  020D                     	;# 
  4095  020E                     	;# 
  4096  020F                     	;# 
  4097  020F                     	;# 
  4098  0210                     	;# 
  4099  0210                     	;# 
  4100  0211                     	;# 
  4101  0211                     	;# 
  4102  0212                     	;# 
  4103  0212                     	;# 
  4104  0213                     	;# 
  4105  0214                     	;# 
  4106  0215                     	;# 
  4107  0215                     	;# 
  4108  0216                     	;# 
  4109  0216                     	;# 
  4110  0217                     	;# 
  4111  0217                     	;# 
  4112  0218                     	;# 
  4113  0218                     	;# 
  4114  0219                     	;# 
  4115  021A                     	;# 
  4116  021B                     	;# 
  4117  021B                     	;# 
  4118  021C                     	;# 
  4119  021C                     	;# 
  4120  021D                     	;# 
  4121  021D                     	;# 
  4122  021E                     	;# 
  4123  021F                     	;# 
  4124  028C                     	;# 
  4125  028C                     	;# 
  4126  028D                     	;# 
  4127  028D                     	;# 
  4128  028E                     	;# 
  4129  028F                     	;# 
  4130  0290                     	;# 
  4131  0290                     	;# 
  4132  0291                     	;# 
  4133  0292                     	;# 
  4134  0292                     	;# 
  4135  0293                     	;# 
  4136  0293                     	;# 
  4137  0294                     	;# 
  4138  0295                     	;# 
  4139  0296                     	;# 
  4140  0296                     	;# 
  4141  0297                     	;# 
  4142  0298                     	;# 
  4143  0298                     	;# 
  4144  0299                     	;# 
  4145  0299                     	;# 
  4146  029A                     	;# 
  4147  029B                     	;# 
  4148  029C                     	;# 
  4149  029C                     	;# 
  4150  029D                     	;# 
  4151  030C                     	;# 
  4152  030C                     	;# 
  4153  030D                     	;# 
  4154  030E                     	;# 
  4155  030F                     	;# 
  4156  0310                     	;# 
  4157  0310                     	;# 
  4158  0311                     	;# 
  4159  0312                     	;# 
  4160  0313                     	;# 
  4161  0314                     	;# 
  4162  0314                     	;# 
  4163  0315                     	;# 
  4164  0316                     	;# 
  4165  0317                     	;# 
  4166  0318                     	;# 
  4167  0318                     	;# 
  4168  0319                     	;# 
  4169  031A                     	;# 
  4170  031B                     	;# 
  4171  031C                     	;# 
  4172  031C                     	;# 
  4173  031D                     	;# 
  4174  031E                     	;# 
  4175  031F                     	;# 
  4176  038C                     	;# 
  4177  038C                     	;# 
  4178  038D                     	;# 
  4179  038E                     	;# 
  4180  0390                     	;# 
  4181  0390                     	;# 
  4182  0391                     	;# 
  4183  0392                     	;# 
  4184  040C                     	;# 
  4185  040D                     	;# 
  4186  040E                     	;# 
  4187  040F                     	;# 
  4188  0410                     	;# 
  4189  0411                     	;# 
  4190  0416                     	;# 
  4191  0416                     	;# 
  4192  0417                     	;# 
  4193  0418                     	;# 
  4194  0418                     	;# 
  4195  0419                     	;# 
  4196  041A                     	;# 
  4197  041A                     	;# 
  4198  041B                     	;# 
  4199  041C                     	;# 
  4200  041C                     	;# 
  4201  041D                     	;# 
  4202  041E                     	;# 
  4203  041F                     	;# 
  4204  048C                     	;# 
  4205  048C                     	;# 
  4206  048D                     	;# 
  4207  048E                     	;# 
  4208  048F                     	;# 
  4209  048F                     	;# 
  4210  0490                     	;# 
  4211  0491                     	;# 
  4212  0492                     	;# 
  4213  0492                     	;# 
  4214  0493                     	;# 
  4215  0494                     	;# 
  4216  0495                     	;# 
  4217  0495                     	;# 
  4218  0496                     	;# 
  4219  0497                     	;# 
  4220  0498                     	;# 
  4221  0499                     	;# 
  4222  049A                     	;# 
  4223  049B                     	;# 
  4224  049C                     	;# 
  4225  049D                     	;# 
  4226  050C                     	;# 
  4227  050C                     	;# 
  4228  050D                     	;# 
  4229  050E                     	;# 
  4230  050F                     	;# 
  4231  050F                     	;# 
  4232  0510                     	;# 
  4233  0511                     	;# 
  4234  0512                     	;# 
  4235  0512                     	;# 
  4236  0513                     	;# 
  4237  0514                     	;# 
  4238  0515                     	;# 
  4239  0515                     	;# 
  4240  0516                     	;# 
  4241  0517                     	;# 
  4242  0518                     	;# 
  4243  0519                     	;# 
  4244  051A                     	;# 
  4245  051B                     	;# 
  4246  051C                     	;# 
  4247  051D                     	;# 
  4248  058C                     	;# 
  4249  058C                     	;# 
  4250  058D                     	;# 
  4251  058E                     	;# 
  4252  058F                     	;# 
  4253  058F                     	;# 
  4254  0590                     	;# 
  4255  0591                     	;# 
  4256  0592                     	;# 
  4257  0593                     	;# 
  4258  060C                     	;# 
  4259  060D                     	;# 
  4260  060E                     	;# 
  4261  060F                     	;# 
  4262  0610                     	;# 
  4263  0611                     	;# 
  4264  0612                     	;# 
  4265  0613                     	;# 
  4266  0614                     	;# 
  4267  0616                     	;# 
  4268  0617                     	;# 
  4269  0618                     	;# 
  4270  0619                     	;# 
  4271  061A                     	;# 
  4272  061B                     	;# 
  4273  061C                     	;# 
  4274  061D                     	;# 
  4275  061E                     	;# 
  4276  068C                     	;# 
  4277  068D                     	;# 
  4278  068E                     	;# 
  4279  068F                     	;# 
  4280  0690                     	;# 
  4281  0691                     	;# 
  4282  0692                     	;# 
  4283  0693                     	;# 
  4284  0694                     	;# 
  4285  070C                     	;# 
  4286  070D                     	;# 
  4287  070E                     	;# 
  4288  070F                     	;# 
  4289  0710                     	;# 
  4290  0711                     	;# 
  4291  0712                     	;# 
  4292  0713                     	;# 
  4293  0714                     	;# 
  4294  0716                     	;# 
  4295  0717                     	;# 
  4296  0718                     	;# 
  4297  0719                     	;# 
  4298  071A                     	;# 
  4299  071B                     	;# 
  4300  071C                     	;# 
  4301  071D                     	;# 
  4302  071E                     	;# 
  4303  0796                     	;# 
  4304  0797                     	;# 
  4305  0798                     	;# 
  4306  0799                     	;# 
  4307  079A                     	;# 
  4308  079B                     	;# 
  4309  080C                     	;# 
  4310  080D                     	;# 
  4311  080E                     	;# 
  4312  080F                     	;# 
  4313  0810                     	;# 
  4314  0811                     	;# 
  4315  0812                     	;# 
  4316  0813                     	;# 
  4317  0814                     	;# 
  4318  081A                     	;# 
  4319  081B                     	;# 
  4320  081C                     	;# 
  4321  081D                     	;# 
  4322  081E                     	;# 
  4323  081F                     	;# 
  4324  088C                     	;# 
  4325  088D                     	;# 
  4326  088E                     	;# 
  4327  088F                     	;# 
  4328  0890                     	;# 
  4329  0891                     	;# 
  4330  0892                     	;# 
  4331  0893                     	;# 
  4332  0895                     	;# 
  4333  0896                     	;# 
  4334  0897                     	;# 
  4335  0898                     	;# 
  4336  0899                     	;# 
  4337  089A                     	;# 
  4338  089B                     	;# 
  4339  090C                     	;# 
  4340  090E                     	;# 
  4341  090F                     	;# 
  4342  091F                     	;# 
  4343  091F                     	;# 
  4344  098F                     	;# 
  4345  098F                     	;# 
  4346  0990                     	;# 
  4347  0991                     	;# 
  4348  0992                     	;# 
  4349  0993                     	;# 
  4350  0994                     	;# 
  4351  0995                     	;# 
  4352  0996                     	;# 
  4353  0997                     	;# 
  4354  0E0F                     	;# 
  4355  0E10                     	;# 
  4356  0E11                     	;# 
  4357  0E12                     	;# 
  4358  0E13                     	;# 
  4359  0E14                     	;# 
  4360  0E15                     	;# 
  4361  0E16                     	;# 
  4362  0E17                     	;# 
  4363  0E18                     	;# 
  4364  0E19                     	;# 
  4365  0E1A                     	;# 
  4366  0E1B                     	;# 
  4367  0E1C                     	;# 
  4368  0E1D                     	;# 
  4369  0E1E                     	;# 
  4370  0E1F                     	;# 
  4371  0E20                     	;# 
  4372  0E21                     	;# 
  4373  0E22                     	;# 
  4374  0E23                     	;# 
  4375  0E24                     	;# 
  4376  0E25                     	;# 
  4377  0E26                     	;# 
  4378  0E27                     	;# 
  4379  0E28                     	;# 
  4380  0E29                     	;# 
  4381  0E2A                     	;# 
  4382  0E2B                     	;# 
  4383  0E2C                     	;# 
  4384  0E2D                     	;# 
  4385  0E2E                     	;# 
  4386  0E2F                     	;# 
  4387  0E30                     	;# 
  4388  0E31                     	;# 
  4389  0E32                     	;# 
  4390  0E33                     	;# 
  4391  0E34                     	;# 
  4392  0E35                     	;# 
  4393  0E36                     	;# 
  4394  0E37                     	;# 
  4395  0E8F                     	;# 
  4396  0E90                     	;# 
  4397  0E91                     	;# 
  4398  0E92                     	;# 
  4399  0E93                     	;# 
  4400  0E94                     	;# 
  4401  0E95                     	;# 
  4402  0E96                     	;# 
  4403  0E97                     	;# 
  4404  0E9C                     	;# 
  4405  0E9D                     	;# 
  4406  0E9E                     	;# 
  4407  0EA1                     	;# 
  4408  0EA2                     	;# 
  4409  0EA3                     	;# 
  4410  0EA4                     	;# 
  4411  0EA5                     	;# 
  4412  0EA9                     	;# 
  4413  0EAA                     	;# 
  4414  0EAB                     	;# 
  4415  0EAC                     	;# 
  4416  0EB1                     	;# 
  4417  0EB2                     	;# 
  4418  0EB3                     	;# 
  4419  0EB8                     	;# 
  4420  0EB9                     	;# 
  4421  0EBA                     	;# 
  4422  0EBB                     	;# 
  4423  0EBC                     	;# 
  4424  0EBD                     	;# 
  4425  0EBE                     	;# 
  4426  0EC3                     	;# 
  4427  0EC5                     	;# 
  4428  0EC6                     	;# 
  4429  0EC7                     	;# 
  4430  0EC8                     	;# 
  4431  0EC9                     	;# 
  4432  0ECA                     	;# 
  4433  0ECB                     	;# 
  4434  0ECC                     	;# 
  4435  0F10                     	;# 
  4436  0F11                     	;# 
  4437  0F12                     	;# 
  4438  0F13                     	;# 
  4439  0F14                     	;# 
  4440  0F15                     	;# 
  4441  0F16                     	;# 
  4442  0F17                     	;# 
  4443  0F18                     	;# 
  4444  0F19                     	;# 
  4445  0F1A                     	;# 
  4446  0F1B                     	;# 
  4447  0F1C                     	;# 
  4448  0F1D                     	;# 
  4449  0F1E                     	;# 
  4450  0F1F                     	;# 
  4451  0F20                     	;# 
  4452  0F21                     	;# 
  4453  0F22                     	;# 
  4454  0F23                     	;# 
  4455  0F24                     	;# 
  4456  0F25                     	;# 
  4457  0F26                     	;# 
  4458  0F27                     	;# 
  4459  0F28                     	;# 
  4460  0F29                     	;# 
  4461  0F2A                     	;# 
  4462  0F2B                     	;# 
  4463  0F2C                     	;# 
  4464  0F2D                     	;# 
  4465  0F2E                     	;# 
  4466  0F2F                     	;# 
  4467  0F30                     	;# 
  4468  0F31                     	;# 
  4469  0F32                     	;# 
  4470  0F38                     	;# 
  4471  0F39                     	;# 
  4472  0F3A                     	;# 
  4473  0F3B                     	;# 
  4474  0F3C                     	;# 
  4475  0F3D                     	;# 
  4476  0F3E                     	;# 
  4477  0F3F                     	;# 
  4478  0F40                     	;# 
  4479  0F41                     	;# 
  4480  0F43                     	;# 
  4481  0F44                     	;# 
  4482  0F45                     	;# 
  4483  0F46                     	;# 
  4484  0F47                     	;# 
  4485  0F48                     	;# 
  4486  0F49                     	;# 
  4487  0F4A                     	;# 
  4488  0F4B                     	;# 
  4489  0F4C                     	;# 
  4490  0F4E                     	;# 
  4491  0F4F                     	;# 
  4492  0F50                     	;# 
  4493  0F51                     	;# 
  4494  0F52                     	;# 
  4495  0F53                     	;# 
  4496  0F54                     	;# 
  4497  0F55                     	;# 
  4498  0F56                     	;# 
  4499  0F57                     	;# 
  4500  0F59                     	;# 
  4501  0F5A                     	;# 
  4502  0F5B                     	;# 
  4503  0F5C                     	;# 
  4504  0F5D                     	;# 
  4505  0F61                     	;# 
  4506  0F62                     	;# 
  4507  0F64                     	;# 
  4508  0F65                     	;# 
  4509  0F66                     	;# 
  4510  0F67                     	;# 
  4511  0F68                     	;# 
  4512  0F69                     	;# 
  4513  0F6A                     	;# 
  4514  0F6B                     	;# 
  4515  0F6C                     	;# 
  4516  0F6D                     	;# 
  4517  0FE4                     	;# 
  4518  0FE5                     	;# 
  4519  0FE6                     	;# 
  4520  0FE7                     	;# 
  4521  0FE8                     	;# 
  4522  0FE9                     	;# 
  4523  0FEA                     	;# 
  4524  0FEB                     	;# 
  4525  0FED                     	;# 
  4526  0FEE                     	;# 
  4527  0FEF                     	;# 
  4528  0000                     	;# 
  4529  0001                     	;# 
  4530  0002                     	;# 
  4531  0003                     	;# 
  4532  0004                     	;# 
  4533  0005                     	;# 
  4534  0006                     	;# 
  4535  0007                     	;# 
  4536  0008                     	;# 
  4537  0009                     	;# 
  4538  000A                     	;# 
  4539  000B                     	;# 
  4540  000C                     	;# 
  4541  000D                     	;# 
  4542  000E                     	;# 
  4543  000F                     	;# 
  4544  0010                     	;# 
  4545  0011                     	;# 
  4546  0012                     	;# 
  4547  0013                     	;# 
  4548  0014                     	;# 
  4549  0015                     	;# 
  4550  0016                     	;# 
  4551  0017                     	;# 
  4552  0018                     	;# 
  4553  0019                     	;# 
  4554  001A                     	;# 
  4555  001C                     	;# 
  4556  001C                     	;# 
  4557  001D                     	;# 
  4558  001D                     	;# 
  4559  001E                     	;# 
  4560  001F                     	;# 
  4561  008C                     	;# 
  4562  008C                     	;# 
  4563  008D                     	;# 
  4564  008E                     	;# 
  4565  008E                     	;# 
  4566  008F                     	;# 
  4567  0090                     	;# 
  4568  0090                     	;# 
  4569  0091                     	;# 
  4570  0093                     	;# 
  4571  0094                     	;# 
  4572  0095                     	;# 
  4573  0096                     	;# 
  4574  0097                     	;# 
  4575  0098                     	;# 
  4576  0099                     	;# 
  4577  009A                     	;# 
  4578  009B                     	;# 
  4579  009C                     	;# 
  4580  009D                     	;# 
  4581  009E                     	;# 
  4582  010C                     	;# 
  4583  010D                     	;# 
  4584  010E                     	;# 
  4585  010E                     	;# 
  4586  010F                     	;# 
  4587  0110                     	;# 
  4588  0110                     	;# 
  4589  0111                     	;# 
  4590  0112                     	;# 
  4591  0112                     	;# 
  4592  0113                     	;# 
  4593  0114                     	;# 
  4594  0114                     	;# 
  4595  0115                     	;# 
  4596  0116                     	;# 
  4597  0116                     	;# 
  4598  0117                     	;# 
  4599  0119                     	;# 
  4600  0119                     	;# 
  4601  0119                     	;# 
  4602  011A                     	;# 
  4603  011A                     	;# 
  4604  011A                     	;# 
  4605  011B                     	;# 
  4606  011B                     	;# 
  4607  011B                     	;# 
  4608  011B                     	;# 
  4609  011B                     	;# 
  4610  011C                     	;# 
  4611  011C                     	;# 
  4612  011C                     	;# 
  4613  011D                     	;# 
  4614  011D                     	;# 
  4615  011D                     	;# 
  4616  011E                     	;# 
  4617  011E                     	;# 
  4618  011E                     	;# 
  4619  011F                     	;# 
  4620  011F                     	;# 
  4621  011F                     	;# 
  4622  011F                     	;# 
  4623  011F                     	;# 
  4624  018C                     	;# 
  4625  018D                     	;# 
  4626  018E                     	;# 
  4627  018F                     	;# 
  4628  0190                     	;# 
  4629  0191                     	;# 
  4630  0192                     	;# 
  4631  0196                     	;# 
  4632  0197                     	;# 
  4633  0198                     	;# 
  4634  0199                     	;# 
  4635  019A                     	;# 
  4636  019B                     	;# 
  4637  019C                     	;# 
  4638  020C                     	;# 
  4639  020C                     	;# 
  4640  020D                     	;# 
  4641  020E                     	;# 
  4642  020F                     	;# 
  4643  020F                     	;# 
  4644  0210                     	;# 
  4645  0210                     	;# 
  4646  0211                     	;# 
  4647  0211                     	;# 
  4648  0212                     	;# 
  4649  0212                     	;# 
  4650  0213                     	;# 
  4651  0214                     	;# 
  4652  0215                     	;# 
  4653  0215                     	;# 
  4654  0216                     	;# 
  4655  0216                     	;# 
  4656  0217                     	;# 
  4657  0217                     	;# 
  4658  0218                     	;# 
  4659  0218                     	;# 
  4660  0219                     	;# 
  4661  021A                     	;# 
  4662  021B                     	;# 
  4663  021B                     	;# 
  4664  021C                     	;# 
  4665  021C                     	;# 
  4666  021D                     	;# 
  4667  021D                     	;# 
  4668  021E                     	;# 
  4669  021F                     	;# 
  4670  028C                     	;# 
  4671  028C                     	;# 
  4672  028D                     	;# 
  4673  028D                     	;# 
  4674  028E                     	;# 
  4675  028F                     	;# 
  4676  0290                     	;# 
  4677  0290                     	;# 
  4678  0291                     	;# 
  4679  0292                     	;# 
  4680  0292                     	;# 
  4681  0293                     	;# 
  4682  0293                     	;# 
  4683  0294                     	;# 
  4684  0295                     	;# 
  4685  0296                     	;# 
  4686  0296                     	;# 
  4687  0297                     	;# 
  4688  0298                     	;# 
  4689  0298                     	;# 
  4690  0299                     	;# 
  4691  0299                     	;# 
  4692  029A                     	;# 
  4693  029B                     	;# 
  4694  029C                     	;# 
  4695  029C                     	;# 
  4696  029D                     	;# 
  4697  030C                     	;# 
  4698  030C                     	;# 
  4699  030D                     	;# 
  4700  030E                     	;# 
  4701  030F                     	;# 
  4702  0310                     	;# 
  4703  0310                     	;# 
  4704  0311                     	;# 
  4705  0312                     	;# 
  4706  0313                     	;# 
  4707  0314                     	;# 
  4708  0314                     	;# 
  4709  0315                     	;# 
  4710  0316                     	;# 
  4711  0317                     	;# 
  4712  0318                     	;# 
  4713  0318                     	;# 
  4714  0319                     	;# 
  4715  031A                     	;# 
  4716  031B                     	;# 
  4717  031C                     	;# 
  4718  031C                     	;# 
  4719  031D                     	;# 
  4720  031E                     	;# 
  4721  031F                     	;# 
  4722  038C                     	;# 
  4723  038C                     	;# 
  4724  038D                     	;# 
  4725  038E                     	;# 
  4726  0390                     	;# 
  4727  0390                     	;# 
  4728  0391                     	;# 
  4729  0392                     	;# 
  4730  040C                     	;# 
  4731  040D                     	;# 
  4732  040E                     	;# 
  4733  040F                     	;# 
  4734  0410                     	;# 
  4735  0411                     	;# 
  4736  0416                     	;# 
  4737  0416                     	;# 
  4738  0417                     	;# 
  4739  0418                     	;# 
  4740  0418                     	;# 
  4741  0419                     	;# 
  4742  041A                     	;# 
  4743  041A                     	;# 
  4744  041B                     	;# 
  4745  041C                     	;# 
  4746  041C                     	;# 
  4747  041D                     	;# 
  4748  041E                     	;# 
  4749  041F                     	;# 
  4750  048C                     	;# 
  4751  048C                     	;# 
  4752  048D                     	;# 
  4753  048E                     	;# 
  4754  048F                     	;# 
  4755  048F                     	;# 
  4756  0490                     	;# 
  4757  0491                     	;# 
  4758  0492                     	;# 
  4759  0492                     	;# 
  4760  0493                     	;# 
  4761  0494                     	;# 
  4762  0495                     	;# 
  4763  0495                     	;# 
  4764  0496                     	;# 
  4765  0497                     	;# 
  4766  0498                     	;# 
  4767  0499                     	;# 
  4768  049A                     	;# 
  4769  049B                     	;# 
  4770  049C                     	;# 
  4771  049D                     	;# 
  4772  050C                     	;# 
  4773  050C                     	;# 
  4774  050D                     	;# 
  4775  050E                     	;# 
  4776  050F                     	;# 
  4777  050F                     	;# 
  4778  0510                     	;# 
  4779  0511                     	;# 
  4780  0512                     	;# 
  4781  0512                     	;# 
  4782  0513                     	;# 
  4783  0514                     	;# 
  4784  0515                     	;# 
  4785  0515                     	;# 
  4786  0516                     	;# 
  4787  0517                     	;# 
  4788  0518                     	;# 
  4789  0519                     	;# 
  4790  051A                     	;# 
  4791  051B                     	;# 
  4792  051C                     	;# 
  4793  051D                     	;# 
  4794  058C                     	;# 
  4795  058C                     	;# 
  4796  058D                     	;# 
  4797  058E                     	;# 
  4798  058F                     	;# 
  4799  058F                     	;# 
  4800  0590                     	;# 
  4801  0591                     	;# 
  4802  0592                     	;# 
  4803  0593                     	;# 
  4804  060C                     	;# 
  4805  060D                     	;# 
  4806  060E                     	;# 
  4807  060F                     	;# 
  4808  0610                     	;# 
  4809  0611                     	;# 
  4810  0612                     	;# 
  4811  0613                     	;# 
  4812  0614                     	;# 
  4813  0616                     	;# 
  4814  0617                     	;# 
  4815  0618                     	;# 
  4816  0619                     	;# 
  4817  061A                     	;# 
  4818  061B                     	;# 
  4819  061C                     	;# 
  4820  061D                     	;# 
  4821  061E                     	;# 
  4822  068C                     	;# 
  4823  068D                     	;# 
  4824  068E                     	;# 
  4825  068F                     	;# 
  4826  0690                     	;# 
  4827  0691                     	;# 
  4828  0692                     	;# 
  4829  0693                     	;# 
  4830  0694                     	;# 
  4831  070C                     	;# 
  4832  070D                     	;# 
  4833  070E                     	;# 
  4834  070F                     	;# 
  4835  0710                     	;# 
  4836  0711                     	;# 
  4837  0712                     	;# 
  4838  0713                     	;# 
  4839  0714                     	;# 
  4840  0716                     	;# 
  4841  0717                     	;# 
  4842  0718                     	;# 
  4843  0719                     	;# 
  4844  071A                     	;# 
  4845  071B                     	;# 
  4846  071C                     	;# 
  4847  071D                     	;# 
  4848  071E                     	;# 
  4849  0796                     	;# 
  4850  0797                     	;# 
  4851  0798                     	;# 
  4852  0799                     	;# 
  4853  079A                     	;# 
  4854  079B                     	;# 
  4855  080C                     	;# 
  4856  080D                     	;# 
  4857  080E                     	;# 
  4858  080F                     	;# 
  4859  0810                     	;# 
  4860  0811                     	;# 
  4861  0812                     	;# 
  4862  0813                     	;# 
  4863  0814                     	;# 
  4864  081A                     	;# 
  4865  081B                     	;# 
  4866  081C                     	;# 
  4867  081D                     	;# 
  4868  081E                     	;# 
  4869  081F                     	;# 
  4870  088C                     	;# 
  4871  088D                     	;# 
  4872  088E                     	;# 
  4873  088F                     	;# 
  4874  0890                     	;# 
  4875  0891                     	;# 
  4876  0892                     	;# 
  4877  0893                     	;# 
  4878  0895                     	;# 
  4879  0896                     	;# 
  4880  0897                     	;# 
  4881  0898                     	;# 
  4882  0899                     	;# 
  4883  089A                     	;# 
  4884  089B                     	;# 
  4885  090C                     	;# 
  4886  090E                     	;# 
  4887  090F                     	;# 
  4888  091F                     	;# 
  4889  091F                     	;# 
  4890  098F                     	;# 
  4891  098F                     	;# 
  4892  0990                     	;# 
  4893  0991                     	;# 
  4894  0992                     	;# 
  4895  0993                     	;# 
  4896  0994                     	;# 
  4897  0995                     	;# 
  4898  0996                     	;# 
  4899  0997                     	;# 
  4900  0E0F                     	;# 
  4901  0E10                     	;# 
  4902  0E11                     	;# 
  4903  0E12                     	;# 
  4904  0E13                     	;# 
  4905  0E14                     	;# 
  4906  0E15                     	;# 
  4907  0E16                     	;# 
  4908  0E17                     	;# 
  4909  0E18                     	;# 
  4910  0E19                     	;# 
  4911  0E1A                     	;# 
  4912  0E1B                     	;# 
  4913  0E1C                     	;# 
  4914  0E1D                     	;# 
  4915  0E1E                     	;# 
  4916  0E1F                     	;# 
  4917  0E20                     	;# 
  4918  0E21                     	;# 
  4919  0E22                     	;# 
  4920  0E23                     	;# 
  4921  0E24                     	;# 
  4922  0E25                     	;# 
  4923  0E26                     	;# 
  4924  0E27                     	;# 
  4925  0E28                     	;# 
  4926  0E29                     	;# 
  4927  0E2A                     	;# 
  4928  0E2B                     	;# 
  4929  0E2C                     	;# 
  4930  0E2D                     	;# 
  4931  0E2E                     	;# 
  4932  0E2F                     	;# 
  4933  0E30                     	;# 
  4934  0E31                     	;# 
  4935  0E32                     	;# 
  4936  0E33                     	;# 
  4937  0E34                     	;# 
  4938  0E35                     	;# 
  4939  0E36                     	;# 
  4940  0E37                     	;# 
  4941  0E8F                     	;# 
  4942  0E90                     	;# 
  4943  0E91                     	;# 
  4944  0E92                     	;# 
  4945  0E93                     	;# 
  4946  0E94                     	;# 
  4947  0E95                     	;# 
  4948  0E96                     	;# 
  4949  0E97                     	;# 
  4950  0E9C                     	;# 
  4951  0E9D                     	;# 
  4952  0E9E                     	;# 
  4953  0EA1                     	;# 
  4954  0EA2                     	;# 
  4955  0EA3                     	;# 
  4956  0EA4                     	;# 
  4957  0EA5                     	;# 
  4958  0EA9                     	;# 
  4959  0EAA                     	;# 
  4960  0EAB                     	;# 
  4961  0EAC                     	;# 
  4962  0EB1                     	;# 
  4963  0EB2                     	;# 
  4964  0EB3                     	;# 
  4965  0EB8                     	;# 
  4966  0EB9                     	;# 
  4967  0EBA                     	;# 
  4968  0EBB                     	;# 
  4969  0EBC                     	;# 
  4970  0EBD                     	;# 
  4971  0EBE                     	;# 
  4972  0EC3                     	;# 
  4973  0EC5                     	;# 
  4974  0EC6                     	;# 
  4975  0EC7                     	;# 
  4976  0EC8                     	;# 
  4977  0EC9                     	;# 
  4978  0ECA                     	;# 
  4979  0ECB                     	;# 
  4980  0ECC                     	;# 
  4981  0F10                     	;# 
  4982  0F11                     	;# 
  4983  0F12                     	;# 
  4984  0F13                     	;# 
  4985  0F14                     	;# 
  4986  0F15                     	;# 
  4987  0F16                     	;# 
  4988  0F17                     	;# 
  4989  0F18                     	;# 
  4990  0F19                     	;# 
  4991  0F1A                     	;# 
  4992  0F1B                     	;# 
  4993  0F1C                     	;# 
  4994  0F1D                     	;# 
  4995  0F1E                     	;# 
  4996  0F1F                     	;# 
  4997  0F20                     	;# 
  4998  0F21                     	;# 
  4999  0F22                     	;# 
  5000  0F23                     	;# 
  5001  0F24                     	;# 
  5002  0F25                     	;# 
  5003  0F26                     	;# 
  5004  0F27                     	;# 
  5005  0F28                     	;# 
  5006  0F29                     	;# 
  5007  0F2A                     	;# 
  5008  0F2B                     	;# 
  5009  0F2C                     	;# 
  5010  0F2D                     	;# 
  5011  0F2E                     	;# 
  5012  0F2F                     	;# 
  5013  0F30                     	;# 
  5014  0F31                     	;# 
  5015  0F32                     	;# 
  5016  0F38                     	;# 
  5017  0F39                     	;# 
  5018  0F3A                     	;# 
  5019  0F3B                     	;# 
  5020  0F3C                     	;# 
  5021  0F3D                     	;# 
  5022  0F3E                     	;# 
  5023  0F3F                     	;# 
  5024  0F40                     	;# 
  5025  0F41                     	;# 
  5026  0F43                     	;# 
  5027  0F44                     	;# 
  5028  0F45                     	;# 
  5029  0F46                     	;# 
  5030  0F47                     	;# 
  5031  0F48                     	;# 
  5032  0F49                     	;# 
  5033  0F4A                     	;# 
  5034  0F4B                     	;# 
  5035  0F4C                     	;# 
  5036  0F4E                     	;# 
  5037  0F4F                     	;# 
  5038  0F50                     	;# 
  5039  0F51                     	;# 
  5040  0F52                     	;# 
  5041  0F53                     	;# 
  5042  0F54                     	;# 
  5043  0F55                     	;# 
  5044  0F56                     	;# 
  5045  0F57                     	;# 
  5046  0F59                     	;# 
  5047  0F5A                     	;# 
  5048  0F5B                     	;# 
  5049  0F5C                     	;# 
  5050  0F5D                     	;# 
  5051  0F61                     	;# 
  5052  0F62                     	;# 
  5053  0F64                     	;# 
  5054  0F65                     	;# 
  5055  0F66                     	;# 
  5056  0F67                     	;# 
  5057  0F68                     	;# 
  5058  0F69                     	;# 
  5059  0F6A                     	;# 
  5060  0F6B                     	;# 
  5061  0F6C                     	;# 
  5062  0F6D                     	;# 
  5063  0FE4                     	;# 
  5064  0FE5                     	;# 
  5065  0FE6                     	;# 
  5066  0FE7                     	;# 
  5067  0FE8                     	;# 
  5068  0FE9                     	;# 
  5069  0FEA                     	;# 
  5070  0FEB                     	;# 
  5071  0FED                     	;# 
  5072  0FEE                     	;# 
  5073  0FEF                     	;# 
  5074  0000                     	;# 
  5075  0001                     	;# 
  5076  0002                     	;# 
  5077  0003                     	;# 
  5078  0004                     	;# 
  5079  0005                     	;# 
  5080  0006                     	;# 
  5081  0007                     	;# 
  5082  0008                     	;# 
  5083  0009                     	;# 
  5084  000A                     	;# 
  5085  000B                     	;# 
  5086  000C                     	;# 
  5087  000D                     	;# 
  5088  000E                     	;# 
  5089  000F                     	;# 
  5090  0010                     	;# 
  5091  0011                     	;# 
  5092  0012                     	;# 
  5093  0013                     	;# 
  5094  0014                     	;# 
  5095  0015                     	;# 
  5096  0016                     	;# 
  5097  0017                     	;# 
  5098  0018                     	;# 
  5099  0019                     	;# 
  5100  001A                     	;# 
  5101  001C                     	;# 
  5102  001C                     	;# 
  5103  001D                     	;# 
  5104  001D                     	;# 
  5105  001E                     	;# 
  5106  001F                     	;# 
  5107  008C                     	;# 
  5108  008C                     	;# 
  5109  008D                     	;# 
  5110  008E                     	;# 
  5111  008E                     	;# 
  5112  008F                     	;# 
  5113  0090                     	;# 
  5114  0090                     	;# 
  5115  0091                     	;# 
  5116  0093                     	;# 
  5117  0094                     	;# 
  5118  0095                     	;# 
  5119  0096                     	;# 
  5120  0097                     	;# 
  5121  0098                     	;# 
  5122  0099                     	;# 
  5123  009A                     	;# 
  5124  009B                     	;# 
  5125  009C                     	;# 
  5126  009D                     	;# 
  5127  009E                     	;# 
  5128  010C                     	;# 
  5129  010D                     	;# 
  5130  010E                     	;# 
  5131  010E                     	;# 
  5132  010F                     	;# 
  5133  0110                     	;# 
  5134  0110                     	;# 
  5135  0111                     	;# 
  5136  0112                     	;# 
  5137  0112                     	;# 
  5138  0113                     	;# 
  5139  0114                     	;# 
  5140  0114                     	;# 
  5141  0115                     	;# 
  5142  0116                     	;# 
  5143  0116                     	;# 
  5144  0117                     	;# 
  5145  0119                     	;# 
  5146  0119                     	;# 
  5147  0119                     	;# 
  5148  011A                     	;# 
  5149  011A                     	;# 
  5150  011A                     	;# 
  5151  011B                     	;# 
  5152  011B                     	;# 
  5153  011B                     	;# 
  5154  011B                     	;# 
  5155  011B                     	;# 
  5156  011C                     	;# 
  5157  011C                     	;# 
  5158  011C                     	;# 
  5159  011D                     	;# 
  5160  011D                     	;# 
  5161  011D                     	;# 
  5162  011E                     	;# 
  5163  011E                     	;# 
  5164  011E                     	;# 
  5165  011F                     	;# 
  5166  011F                     	;# 
  5167  011F                     	;# 
  5168  011F                     	;# 
  5169  011F                     	;# 
  5170  018C                     	;# 
  5171  018D                     	;# 
  5172  018E                     	;# 
  5173  018F                     	;# 
  5174  0190                     	;# 
  5175  0191                     	;# 
  5176  0192                     	;# 
  5177  0196                     	;# 
  5178  0197                     	;# 
  5179  0198                     	;# 
  5180  0199                     	;# 
  5181  019A                     	;# 
  5182  019B                     	;# 
  5183  019C                     	;# 
  5184  020C                     	;# 
  5185  020C                     	;# 
  5186  020D                     	;# 
  5187  020E                     	;# 
  5188  020F                     	;# 
  5189  020F                     	;# 
  5190  0210                     	;# 
  5191  0210                     	;# 
  5192  0211                     	;# 
  5193  0211                     	;# 
  5194  0212                     	;# 
  5195  0212                     	;# 
  5196  0213                     	;# 
  5197  0214                     	;# 
  5198  0215                     	;# 
  5199  0215                     	;# 
  5200  0216                     	;# 
  5201  0216                     	;# 
  5202  0217                     	;# 
  5203  0217                     	;# 
  5204  0218                     	;# 
  5205  0218                     	;# 
  5206  0219                     	;# 
  5207  021A                     	;# 
  5208  021B                     	;# 
  5209  021B                     	;# 
  5210  021C                     	;# 
  5211  021C                     	;# 
  5212  021D                     	;# 
  5213  021D                     	;# 
  5214  021E                     	;# 
  5215  021F                     	;# 
  5216  028C                     	;# 
  5217  028C                     	;# 
  5218  028D                     	;# 
  5219  028D                     	;# 
  5220  028E                     	;# 
  5221  028F                     	;# 
  5222  0290                     	;# 
  5223  0290                     	;# 
  5224  0291                     	;# 
  5225  0292                     	;# 
  5226  0292                     	;# 
  5227  0293                     	;# 
  5228  0293                     	;# 
  5229  0294                     	;# 
  5230  0295                     	;# 
  5231  0296                     	;# 
  5232  0296                     	;# 
  5233  0297                     	;# 
  5234  0298                     	;# 
  5235  0298                     	;# 
  5236  0299                     	;# 
  5237  0299                     	;# 
  5238  029A                     	;# 
  5239  029B                     	;# 
  5240  029C                     	;# 
  5241  029C                     	;# 
  5242  029D                     	;# 
  5243  030C                     	;# 
  5244  030C                     	;# 
  5245  030D                     	;# 
  5246  030E                     	;# 
  5247  030F                     	;# 
  5248  0310                     	;# 
  5249  0310                     	;# 
  5250  0311                     	;# 
  5251  0312                     	;# 
  5252  0313                     	;# 
  5253  0314                     	;# 
  5254  0314                     	;# 
  5255  0315                     	;# 
  5256  0316                     	;# 
  5257  0317                     	;# 
  5258  0318                     	;# 
  5259  0318                     	;# 
  5260  0319                     	;# 
  5261  031A                     	;# 
  5262  031B                     	;# 
  5263  031C                     	;# 
  5264  031C                     	;# 
  5265  031D                     	;# 
  5266  031E                     	;# 
  5267  031F                     	;# 
  5268  038C                     	;# 
  5269  038C                     	;# 
  5270  038D                     	;# 
  5271  038E                     	;# 
  5272  0390                     	;# 
  5273  0390                     	;# 
  5274  0391                     	;# 
  5275  0392                     	;# 
  5276  040C                     	;# 
  5277  040D                     	;# 
  5278  040E                     	;# 
  5279  040F                     	;# 
  5280  0410                     	;# 
  5281  0411                     	;# 
  5282  0416                     	;# 
  5283  0416                     	;# 
  5284  0417                     	;# 
  5285  0418                     	;# 
  5286  0418                     	;# 
  5287  0419                     	;# 
  5288  041A                     	;# 
  5289  041A                     	;# 
  5290  041B                     	;# 
  5291  041C                     	;# 
  5292  041C                     	;# 
  5293  041D                     	;# 
  5294  041E                     	;# 
  5295  041F                     	;# 
  5296  048C                     	;# 
  5297  048C                     	;# 
  5298  048D                     	;# 
  5299  048E                     	;# 
  5300  048F                     	;# 
  5301  048F                     	;# 
  5302  0490                     	;# 
  5303  0491                     	;# 
  5304  0492                     	;# 
  5305  0492                     	;# 
  5306  0493                     	;# 
  5307  0494                     	;# 
  5308  0495                     	;# 
  5309  0495                     	;# 
  5310  0496                     	;# 
  5311  0497                     	;# 
  5312  0498                     	;# 
  5313  0499                     	;# 
  5314  049A                     	;# 
  5315  049B                     	;# 
  5316  049C                     	;# 
  5317  049D                     	;# 
  5318  050C                     	;# 
  5319  050C                     	;# 
  5320  050D                     	;# 
  5321  050E                     	;# 
  5322  050F                     	;# 
  5323  050F                     	;# 
  5324  0510                     	;# 
  5325  0511                     	;# 
  5326  0512                     	;# 
  5327  0512                     	;# 
  5328  0513                     	;# 
  5329  0514                     	;# 
  5330  0515                     	;# 
  5331  0515                     	;# 
  5332  0516                     	;# 
  5333  0517                     	;# 
  5334  0518                     	;# 
  5335  0519                     	;# 
  5336  051A                     	;# 
  5337  051B                     	;# 
  5338  051C                     	;# 
  5339  051D                     	;# 
  5340  058C                     	;# 
  5341  058C                     	;# 
  5342  058D                     	;# 
  5343  058E                     	;# 
  5344  058F                     	;# 
  5345  058F                     	;# 
  5346  0590                     	;# 
  5347  0591                     	;# 
  5348  0592                     	;# 
  5349  0593                     	;# 
  5350  060C                     	;# 
  5351  060D                     	;# 
  5352  060E                     	;# 
  5353  060F                     	;# 
  5354  0610                     	;# 
  5355  0611                     	;# 
  5356  0612                     	;# 
  5357  0613                     	;# 
  5358  0614                     	;# 
  5359  0616                     	;# 
  5360  0617                     	;# 
  5361  0618                     	;# 
  5362  0619                     	;# 
  5363  061A                     	;# 
  5364  061B                     	;# 
  5365  061C                     	;# 
  5366  061D                     	;# 
  5367  061E                     	;# 
  5368  068C                     	;# 
  5369  068D                     	;# 
  5370  068E                     	;# 
  5371  068F                     	;# 
  5372  0690                     	;# 
  5373  0691                     	;# 
  5374  0692                     	;# 
  5375  0693                     	;# 
  5376  0694                     	;# 
  5377  070C                     	;# 
  5378  070D                     	;# 
  5379  070E                     	;# 
  5380  070F                     	;# 
  5381  0710                     	;# 
  5382  0711                     	;# 
  5383  0712                     	;# 
  5384  0713                     	;# 
  5385  0714                     	;# 
  5386  0716                     	;# 
  5387  0717                     	;# 
  5388  0718                     	;# 
  5389  0719                     	;# 
  5390  071A                     	;# 
  5391  071B                     	;# 
  5392  071C                     	;# 
  5393  071D                     	;# 
  5394  071E                     	;# 
  5395  0796                     	;# 
  5396  0797                     	;# 
  5397  0798                     	;# 
  5398  0799                     	;# 
  5399  079A                     	;# 
  5400  079B                     	;# 
  5401  080C                     	;# 
  5402  080D                     	;# 
  5403  080E                     	;# 
  5404  080F                     	;# 
  5405  0810                     	;# 
  5406  0811                     	;# 
  5407  0812                     	;# 
  5408  0813                     	;# 
  5409  0814                     	;# 
  5410  081A                     	;# 
  5411  081B                     	;# 
  5412  081C                     	;# 
  5413  081D                     	;# 
  5414  081E                     	;# 
  5415  081F                     	;# 
  5416  088C                     	;# 
  5417  088D                     	;# 
  5418  088E                     	;# 
  5419  088F                     	;# 
  5420  0890                     	;# 
  5421  0891                     	;# 
  5422  0892                     	;# 
  5423  0893                     	;# 
  5424  0895                     	;# 
  5425  0896                     	;# 
  5426  0897                     	;# 
  5427  0898                     	;# 
  5428  0899                     	;# 
  5429  089A                     	;# 
  5430  089B                     	;# 
  5431  090C                     	;# 
  5432  090E                     	;# 
  5433  090F                     	;# 
  5434  091F                     	;# 
  5435  091F                     	;# 
  5436  098F                     	;# 
  5437  098F                     	;# 
  5438  0990                     	;# 
  5439  0991                     	;# 
  5440  0992                     	;# 
  5441  0993                     	;# 
  5442  0994                     	;# 
  5443  0995                     	;# 
  5444  0996                     	;# 
  5445  0997                     	;# 
  5446  0E0F                     	;# 
  5447  0E10                     	;# 
  5448  0E11                     	;# 
  5449  0E12                     	;# 
  5450  0E13                     	;# 
  5451  0E14                     	;# 
  5452  0E15                     	;# 
  5453  0E16                     	;# 
  5454  0E17                     	;# 
  5455  0E18                     	;# 
  5456  0E19                     	;# 
  5457  0E1A                     	;# 
  5458  0E1B                     	;# 
  5459  0E1C                     	;# 
  5460  0E1D                     	;# 
  5461  0E1E                     	;# 
  5462  0E1F                     	;# 
  5463  0E20                     	;# 
  5464  0E21                     	;# 
  5465  0E22                     	;# 
  5466  0E23                     	;# 
  5467  0E24                     	;# 
  5468  0E25                     	;# 
  5469  0E26                     	;# 
  5470  0E27                     	;# 
  5471  0E28                     	;# 
  5472  0E29                     	;# 
  5473  0E2A                     	;# 
  5474  0E2B                     	;# 
  5475  0E2C                     	;# 
  5476  0E2D                     	;# 
  5477  0E2E                     	;# 
  5478  0E2F                     	;# 
  5479  0E30                     	;# 
  5480  0E31                     	;# 
  5481  0E32                     	;# 
  5482  0E33                     	;# 
  5483  0E34                     	;# 
  5484  0E35                     	;# 
  5485  0E36                     	;# 
  5486  0E37                     	;# 
  5487  0E8F                     	;# 
  5488  0E90                     	;# 
  5489  0E91                     	;# 
  5490  0E92                     	;# 
  5491  0E93                     	;# 
  5492  0E94                     	;# 
  5493  0E95                     	;# 
  5494  0E96                     	;# 
  5495  0E97                     	;# 
  5496  0E9C                     	;# 
  5497  0E9D                     	;# 
  5498  0E9E                     	;# 
  5499  0EA1                     	;# 
  5500  0EA2                     	;# 
  5501  0EA3                     	;# 
  5502  0EA4                     	;# 
  5503  0EA5                     	;# 
  5504  0EA9                     	;# 
  5505  0EAA                     	;# 
  5506  0EAB                     	;# 
  5507  0EAC                     	;# 
  5508  0EB1                     	;# 
  5509  0EB2                     	;# 
  5510  0EB3                     	;# 
  5511  0EB8                     	;# 
  5512  0EB9                     	;# 
  5513  0EBA                     	;# 
  5514  0EBB                     	;# 
  5515  0EBC                     	;# 
  5516  0EBD                     	;# 
  5517  0EBE                     	;# 
  5518  0EC3                     	;# 
  5519  0EC5                     	;# 
  5520  0EC6                     	;# 
  5521  0EC7                     	;# 
  5522  0EC8                     	;# 
  5523  0EC9                     	;# 
  5524  0ECA                     	;# 
  5525  0ECB                     	;# 
  5526  0ECC                     	;# 
  5527  0F10                     	;# 
  5528  0F11                     	;# 
  5529  0F12                     	;# 
  5530  0F13                     	;# 
  5531  0F14                     	;# 
  5532  0F15                     	;# 
  5533  0F16                     	;# 
  5534  0F17                     	;# 
  5535  0F18                     	;# 
  5536  0F19                     	;# 
  5537  0F1A                     	;# 
  5538  0F1B                     	;# 
  5539  0F1C                     	;# 
  5540  0F1D                     	;# 
  5541  0F1E                     	;# 
  5542  0F1F                     	;# 
  5543  0F20                     	;# 
  5544  0F21                     	;# 
  5545  0F22                     	;# 
  5546  0F23                     	;# 
  5547  0F24                     	;# 
  5548  0F25                     	;# 
  5549  0F26                     	;# 
  5550  0F27                     	;# 
  5551  0F28                     	;# 
  5552  0F29                     	;# 
  5553  0F2A                     	;# 
  5554  0F2B                     	;# 
  5555  0F2C                     	;# 
  5556  0F2D                     	;# 
  5557  0F2E                     	;# 
  5558  0F2F                     	;# 
  5559  0F30                     	;# 
  5560  0F31                     	;# 
  5561  0F32                     	;# 
  5562  0F38                     	;# 
  5563  0F39                     	;# 
  5564  0F3A                     	;# 
  5565  0F3B                     	;# 
  5566  0F3C                     	;# 
  5567  0F3D                     	;# 
  5568  0F3E                     	;# 
  5569  0F3F                     	;# 
  5570  0F40                     	;# 
  5571  0F41                     	;# 
  5572  0F43                     	;# 
  5573  0F44                     	;# 
  5574  0F45                     	;# 
  5575  0F46                     	;# 
  5576  0F47                     	;# 
  5577  0F48                     	;# 
  5578  0F49                     	;# 
  5579  0F4A                     	;# 
  5580  0F4B                     	;# 
  5581  0F4C                     	;# 
  5582  0F4E                     	;# 
  5583  0F4F                     	;# 
  5584  0F50                     	;# 
  5585  0F51                     	;# 
  5586  0F52                     	;# 
  5587  0F53                     	;# 
  5588  0F54                     	;# 
  5589  0F55                     	;# 
  5590  0F56                     	;# 
  5591  0F57                     	;# 
  5592  0F59                     	;# 
  5593  0F5A                     	;# 
  5594  0F5B                     	;# 
  5595  0F5C                     	;# 
  5596  0F5D                     	;# 
  5597  0F61                     	;# 
  5598  0F62                     	;# 
  5599  0F64                     	;# 
  5600  0F65                     	;# 
  5601  0F66                     	;# 
  5602  0F67                     	;# 
  5603  0F68                     	;# 
  5604  0F69                     	;# 
  5605  0F6A                     	;# 
  5606  0F6B                     	;# 
  5607  0F6C                     	;# 
  5608  0F6D                     	;# 
  5609  0FE4                     	;# 
  5610  0FE5                     	;# 
  5611  0FE6                     	;# 
  5612  0FE7                     	;# 
  5613  0FE8                     	;# 
  5614  0FE9                     	;# 
  5615  0FEA                     	;# 
  5616  0FEB                     	;# 
  5617  0FED                     	;# 
  5618  0FEE                     	;# 
  5619  0FEF                     	;# 
  5620  0000                     	;# 
  5621  0001                     	;# 
  5622  0002                     	;# 
  5623  0003                     	;# 
  5624  0004                     	;# 
  5625  0005                     	;# 
  5626  0006                     	;# 
  5627  0007                     	;# 
  5628  0008                     	;# 
  5629  0009                     	;# 
  5630  000A                     	;# 
  5631  000B                     	;# 
  5632  000C                     	;# 
  5633  000D                     	;# 
  5634  000E                     	;# 
  5635  000F                     	;# 
  5636  0010                     	;# 
  5637  0011                     	;# 
  5638  0012                     	;# 
  5639  0013                     	;# 
  5640  0014                     	;# 
  5641  0015                     	;# 
  5642  0016                     	;# 
  5643  0017                     	;# 
  5644  0018                     	;# 
  5645  0019                     	;# 
  5646  001A                     	;# 
  5647  001C                     	;# 
  5648  001C                     	;# 
  5649  001D                     	;# 
  5650  001D                     	;# 
  5651  001E                     	;# 
  5652  001F                     	;# 
  5653  008C                     	;# 
  5654  008C                     	;# 
  5655  008D                     	;# 
  5656  008E                     	;# 
  5657  008E                     	;# 
  5658  008F                     	;# 
  5659  0090                     	;# 
  5660  0090                     	;# 
  5661  0091                     	;# 
  5662  0093                     	;# 
  5663  0094                     	;# 
  5664  0095                     	;# 
  5665  0096                     	;# 
  5666  0097                     	;# 
  5667  0098                     	;# 
  5668  0099                     	;# 
  5669  009A                     	;# 
  5670  009B                     	;# 
  5671  009C                     	;# 
  5672  009D                     	;# 
  5673  009E                     	;# 
  5674  010C                     	;# 
  5675  010D                     	;# 
  5676  010E                     	;# 
  5677  010E                     	;# 
  5678  010F                     	;# 
  5679  0110                     	;# 
  5680  0110                     	;# 
  5681  0111                     	;# 
  5682  0112                     	;# 
  5683  0112                     	;# 
  5684  0113                     	;# 
  5685  0114                     	;# 
  5686  0114                     	;# 
  5687  0115                     	;# 
  5688  0116                     	;# 
  5689  0116                     	;# 
  5690  0117                     	;# 
  5691  0119                     	;# 
  5692  0119                     	;# 
  5693  0119                     	;# 
  5694  011A                     	;# 
  5695  011A                     	;# 
  5696  011A                     	;# 
  5697  011B                     	;# 
  5698  011B                     	;# 
  5699  011B                     	;# 
  5700  011B                     	;# 
  5701  011B                     	;# 
  5702  011C                     	;# 
  5703  011C                     	;# 
  5704  011C                     	;# 
  5705  011D                     	;# 
  5706  011D                     	;# 
  5707  011D                     	;# 
  5708  011E                     	;# 
  5709  011E                     	;# 
  5710  011E                     	;# 
  5711  011F                     	;# 
  5712  011F                     	;# 
  5713  011F                     	;# 
  5714  011F                     	;# 
  5715  011F                     	;# 
  5716  018C                     	;# 
  5717  018D                     	;# 
  5718  018E                     	;# 
  5719  018F                     	;# 
  5720  0190                     	;# 
  5721  0191                     	;# 
  5722  0192                     	;# 
  5723  0196                     	;# 
  5724  0197                     	;# 
  5725  0198                     	;# 
  5726  0199                     	;# 
  5727  019A                     	;# 
  5728  019B                     	;# 
  5729  019C                     	;# 
  5730  020C                     	;# 
  5731  020C                     	;# 
  5732  020D                     	;# 
  5733  020E                     	;# 
  5734  020F                     	;# 
  5735  020F                     	;# 
  5736  0210                     	;# 
  5737  0210                     	;# 
  5738  0211                     	;# 
  5739  0211                     	;# 
  5740  0212                     	;# 
  5741  0212                     	;# 
  5742  0213                     	;# 
  5743  0214                     	;# 
  5744  0215                     	;# 
  5745  0215                     	;# 
  5746  0216                     	;# 
  5747  0216                     	;# 
  5748  0217                     	;# 
  5749  0217                     	;# 
  5750  0218                     	;# 
  5751  0218                     	;# 
  5752  0219                     	;# 
  5753  021A                     	;# 
  5754  021B                     	;# 
  5755  021B                     	;# 
  5756  021C                     	;# 
  5757  021C                     	;# 
  5758  021D                     	;# 
  5759  021D                     	;# 
  5760  021E                     	;# 
  5761  021F                     	;# 
  5762  028C                     	;# 
  5763  028C                     	;# 
  5764  028D                     	;# 
  5765  028D                     	;# 
  5766  028E                     	;# 
  5767  028F                     	;# 
  5768  0290                     	;# 
  5769  0290                     	;# 
  5770  0291                     	;# 
  5771  0292                     	;# 
  5772  0292                     	;# 
  5773  0293                     	;# 
  5774  0293                     	;# 
  5775  0294                     	;# 
  5776  0295                     	;# 
  5777  0296                     	;# 
  5778  0296                     	;# 
  5779  0297                     	;# 
  5780  0298                     	;# 
  5781  0298                     	;# 
  5782  0299                     	;# 
  5783  0299                     	;# 
  5784  029A                     	;# 
  5785  029B                     	;# 
  5786  029C                     	;# 
  5787  029C                     	;# 
  5788  029D                     	;# 
  5789  030C                     	;# 
  5790  030C                     	;# 
  5791  030D                     	;# 
  5792  030E                     	;# 
  5793  030F                     	;# 
  5794  0310                     	;# 
  5795  0310                     	;# 
  5796  0311                     	;# 
  5797  0312                     	;# 
  5798  0313                     	;# 
  5799  0314                     	;# 
  5800  0314                     	;# 
  5801  0315                     	;# 
  5802  0316                     	;# 
  5803  0317                     	;# 
  5804  0318                     	;# 
  5805  0318                     	;# 
  5806  0319                     	;# 
  5807  031A                     	;# 
  5808  031B                     	;# 
  5809  031C                     	;# 
  5810  031C                     	;# 
  5811  031D                     	;# 
  5812  031E                     	;# 
  5813  031F                     	;# 
  5814  038C                     	;# 
  5815  038C                     	;# 
  5816  038D                     	;# 
  5817  038E                     	;# 
  5818  0390                     	;# 
  5819  0390                     	;# 
  5820  0391                     	;# 
  5821  0392                     	;# 
  5822  040C                     	;# 
  5823  040D                     	;# 
  5824  040E                     	;# 
  5825  040F                     	;# 
  5826  0410                     	;# 
  5827  0411                     	;# 
  5828  0416                     	;# 
  5829  0416                     	;# 
  5830  0417                     	;# 
  5831  0418                     	;# 
  5832  0418                     	;# 
  5833  0419                     	;# 
  5834  041A                     	;# 
  5835  041A                     	;# 
  5836  041B                     	;# 
  5837  041C                     	;# 
  5838  041C                     	;# 
  5839  041D                     	;# 
  5840  041E                     	;# 
  5841  041F                     	;# 
  5842  048C                     	;# 
  5843  048C                     	;# 
  5844  048D                     	;# 
  5845  048E                     	;# 
  5846  048F                     	;# 
  5847  048F                     	;# 
  5848  0490                     	;# 
  5849  0491                     	;# 
  5850  0492                     	;# 
  5851  0492                     	;# 
  5852  0493                     	;# 
  5853  0494                     	;# 
  5854  0495                     	;# 
  5855  0495                     	;# 
  5856  0496                     	;# 
  5857  0497                     	;# 
  5858  0498                     	;# 
  5859  0499                     	;# 
  5860  049A                     	;# 
  5861  049B                     	;# 
  5862  049C                     	;# 
  5863  049D                     	;# 
  5864  050C                     	;# 
  5865  050C                     	;# 
  5866  050D                     	;# 
  5867  050E                     	;# 
  5868  050F                     	;# 
  5869  050F                     	;# 
  5870  0510                     	;# 
  5871  0511                     	;# 
  5872  0512                     	;# 
  5873  0512                     	;# 
  5874  0513                     	;# 
  5875  0514                     	;# 
  5876  0515                     	;# 
  5877  0515                     	;# 
  5878  0516                     	;# 
  5879  0517                     	;# 
  5880  0518                     	;# 
  5881  0519                     	;# 
  5882  051A                     	;# 
  5883  051B                     	;# 
  5884  051C                     	;# 
  5885  051D                     	;# 
  5886  058C                     	;# 
  5887  058C                     	;# 
  5888  058D                     	;# 
  5889  058E                     	;# 
  5890  058F                     	;# 
  5891  058F                     	;# 
  5892  0590                     	;# 
  5893  0591                     	;# 
  5894  0592                     	;# 
  5895  0593                     	;# 
  5896  060C                     	;# 
  5897  060D                     	;# 
  5898  060E                     	;# 
  5899  060F                     	;# 
  5900  0610                     	;# 
  5901  0611                     	;# 
  5902  0612                     	;# 
  5903  0613                     	;# 
  5904  0614                     	;# 
  5905  0616                     	;# 
  5906  0617                     	;# 
  5907  0618                     	;# 
  5908  0619                     	;# 
  5909  061A                     	;# 
  5910  061B                     	;# 
  5911  061C                     	;# 
  5912  061D                     	;# 
  5913  061E                     	;# 
  5914  068C                     	;# 
  5915  068D                     	;# 
  5916  068E                     	;# 
  5917  068F                     	;# 
  5918  0690                     	;# 
  5919  0691                     	;# 
  5920  0692                     	;# 
  5921  0693                     	;# 
  5922  0694                     	;# 
  5923  070C                     	;# 
  5924  070D                     	;# 
  5925  070E                     	;# 
  5926  070F                     	;# 
  5927  0710                     	;# 
  5928  0711                     	;# 
  5929  0712                     	;# 
  5930  0713                     	;# 
  5931  0714                     	;# 
  5932  0716                     	;# 
  5933  0717                     	;# 
  5934  0718                     	;# 
  5935  0719                     	;# 
  5936  071A                     	;# 
  5937  071B                     	;# 
  5938  071C                     	;# 
  5939  071D                     	;# 
  5940  071E                     	;# 
  5941  0796                     	;# 
  5942  0797                     	;# 
  5943  0798                     	;# 
  5944  0799                     	;# 
  5945  079A                     	;# 
  5946  079B                     	;# 
  5947  080C                     	;# 
  5948  080D                     	;# 
  5949  080E                     	;# 
  5950  080F                     	;# 
  5951  0810                     	;# 
  5952  0811                     	;# 
  5953  0812                     	;# 
  5954  0813                     	;# 
  5955  0814                     	;# 
  5956  081A                     	;# 
  5957  081B                     	;# 
  5958  081C                     	;# 
  5959  081D                     	;# 
  5960  081E                     	;# 
  5961  081F                     	;# 
  5962  088C                     	;# 
  5963  088D                     	;# 
  5964  088E                     	;# 
  5965  088F                     	;# 
  5966  0890                     	;# 
  5967  0891                     	;# 
  5968  0892                     	;# 
  5969  0893                     	;# 
  5970  0895                     	;# 
  5971  0896                     	;# 
  5972  0897                     	;# 
  5973  0898                     	;# 
  5974  0899                     	;# 
  5975  089A                     	;# 
  5976  089B                     	;# 
  5977  090C                     	;# 
  5978  090E                     	;# 
  5979  090F                     	;# 
  5980  091F                     	;# 
  5981  091F                     	;# 
  5982  098F                     	;# 
  5983  098F                     	;# 
  5984  0990                     	;# 
  5985  0991                     	;# 
  5986  0992                     	;# 
  5987  0993                     	;# 
  5988  0994                     	;# 
  5989  0995                     	;# 
  5990  0996                     	;# 
  5991  0997                     	;# 
  5992  0E0F                     	;# 
  5993  0E10                     	;# 
  5994  0E11                     	;# 
  5995  0E12                     	;# 
  5996  0E13                     	;# 
  5997  0E14                     	;# 
  5998  0E15                     	;# 
  5999  0E16                     	;# 
  6000  0E17                     	;# 
  6001  0E18                     	;# 
  6002  0E19                     	;# 
  6003  0E1A                     	;# 
  6004  0E1B                     	;# 
  6005  0E1C                     	;# 
  6006  0E1D                     	;# 
  6007  0E1E                     	;# 
  6008  0E1F                     	;# 
  6009  0E20                     	;# 
  6010  0E21                     	;# 
  6011  0E22                     	;# 
  6012  0E23                     	;# 
  6013  0E24                     	;# 
  6014  0E25                     	;# 
  6015  0E26                     	;# 
  6016  0E27                     	;# 
  6017  0E28                     	;# 
  6018  0E29                     	;# 
  6019  0E2A                     	;# 
  6020  0E2B                     	;# 
  6021  0E2C                     	;# 
  6022  0E2D                     	;# 
  6023  0E2E                     	;# 
  6024  0E2F                     	;# 
  6025  0E30                     	;# 
  6026  0E31                     	;# 
  6027  0E32                     	;# 
  6028  0E33                     	;# 
  6029  0E34                     	;# 
  6030  0E35                     	;# 
  6031  0E36                     	;# 
  6032  0E37                     	;# 
  6033  0E8F                     	;# 
  6034  0E90                     	;# 
  6035  0E91                     	;# 
  6036  0E92                     	;# 
  6037  0E93                     	;# 
  6038  0E94                     	;# 
  6039  0E95                     	;# 
  6040  0E96                     	;# 
  6041  0E97                     	;# 
  6042  0E9C                     	;# 
  6043  0E9D                     	;# 
  6044  0E9E                     	;# 
  6045  0EA1                     	;# 
  6046  0EA2                     	;# 
  6047  0EA3                     	;# 
  6048  0EA4                     	;# 
  6049  0EA5                     	;# 
  6050  0EA9                     	;# 
  6051  0EAA                     	;# 
  6052  0EAB                     	;# 
  6053  0EAC                     	;# 
  6054  0EB1                     	;# 
  6055  0EB2                     	;# 
  6056  0EB3                     	;# 
  6057  0EB8                     	;# 
  6058  0EB9                     	;# 
  6059  0EBA                     	;# 
  6060  0EBB                     	;# 
  6061  0EBC                     	;# 
  6062  0EBD                     	;# 
  6063  0EBE                     	;# 
  6064  0EC3                     	;# 
  6065  0EC5                     	;# 
  6066  0EC6                     	;# 
  6067  0EC7                     	;# 
  6068  0EC8                     	;# 
  6069  0EC9                     	;# 
  6070  0ECA                     	;# 
  6071  0ECB                     	;# 
  6072  0ECC                     	;# 
  6073  0F10                     	;# 
  6074  0F11                     	;# 
  6075  0F12                     	;# 
  6076  0F13                     	;# 
  6077  0F14                     	;# 
  6078  0F15                     	;# 
  6079  0F16                     	;# 
  6080  0F17                     	;# 
  6081  0F18                     	;# 
  6082  0F19                     	;# 
  6083  0F1A                     	;# 
  6084  0F1B                     	;# 
  6085  0F1C                     	;# 
  6086  0F1D                     	;# 
  6087  0F1E                     	;# 
  6088  0F1F                     	;# 
  6089  0F20                     	;# 
  6090  0F21                     	;# 
  6091  0F22                     	;# 
  6092  0F23                     	;# 
  6093  0F24                     	;# 
  6094  0F25                     	;# 
  6095  0F26                     	;# 
  6096  0F27                     	;# 
  6097  0F28                     	;# 
  6098  0F29                     	;# 
  6099  0F2A                     	;# 
  6100  0F2B                     	;# 
  6101  0F2C                     	;# 
  6102  0F2D                     	;# 
  6103  0F2E                     	;# 
  6104  0F2F                     	;# 
  6105  0F30                     	;# 
  6106  0F31                     	;# 
  6107  0F32                     	;# 
  6108  0F38                     	;# 
  6109  0F39                     	;# 
  6110  0F3A                     	;# 
  6111  0F3B                     	;# 
  6112  0F3C                     	;# 
  6113  0F3D                     	;# 
  6114  0F3E                     	;# 
  6115  0F3F                     	;# 
  6116  0F40                     	;# 
  6117  0F41                     	;# 
  6118  0F43                     	;# 
  6119  0F44                     	;# 
  6120  0F45                     	;# 
  6121  0F46                     	;# 
  6122  0F47                     	;# 
  6123  0F48                     	;# 
  6124  0F49                     	;# 
  6125  0F4A                     	;# 
  6126  0F4B                     	;# 
  6127  0F4C                     	;# 
  6128  0F4E                     	;# 
  6129  0F4F                     	;# 
  6130  0F50                     	;# 
  6131  0F51                     	;# 
  6132  0F52                     	;# 
  6133  0F53                     	;# 
  6134  0F54                     	;# 
  6135  0F55                     	;# 
  6136  0F56                     	;# 
  6137  0F57                     	;# 
  6138  0F59                     	;# 
  6139  0F5A                     	;# 
  6140  0F5B                     	;# 
  6141  0F5C                     	;# 
  6142  0F5D                     	;# 
  6143  0F61                     	;# 
  6144  0F62                     	;# 
  6145  0F64                     	;# 
  6146  0F65                     	;# 
  6147  0F66                     	;# 
  6148  0F67                     	;# 
  6149  0F68                     	;# 
  6150  0F69                     	;# 
  6151  0F6A                     	;# 
  6152  0F6B                     	;# 
  6153  0F6C                     	;# 
  6154  0F6D                     	;# 
  6155  0FE4                     	;# 
  6156  0FE5                     	;# 
  6157  0FE6                     	;# 
  6158  0FE7                     	;# 
  6159  0FE8                     	;# 
  6160  0FE9                     	;# 
  6161  0FEA                     	;# 
  6162  0FEB                     	;# 
  6163  0FED                     	;# 
  6164  0FEE                     	;# 
  6165  0FEF                     	;# 
  6166  0000                     	;# 
  6167  0001                     	;# 
  6168  0002                     	;# 
  6169  0003                     	;# 
  6170  0004                     	;# 
  6171  0005                     	;# 
  6172  0006                     	;# 
  6173  0007                     	;# 
  6174  0008                     	;# 
  6175  0009                     	;# 
  6176  000A                     	;# 
  6177  000B                     	;# 
  6178  000C                     	;# 
  6179  000D                     	;# 
  6180  000E                     	;# 
  6181  000F                     	;# 
  6182  0010                     	;# 
  6183  0011                     	;# 
  6184  0012                     	;# 
  6185  0013                     	;# 
  6186  0014                     	;# 
  6187  0015                     	;# 
  6188  0016                     	;# 
  6189  0017                     	;# 
  6190  0018                     	;# 
  6191  0019                     	;# 
  6192  001A                     	;# 
  6193  001C                     	;# 
  6194  001C                     	;# 
  6195  001D                     	;# 
  6196  001D                     	;# 
  6197  001E                     	;# 
  6198  001F                     	;# 
  6199  008C                     	;# 
  6200  008C                     	;# 
  6201  008D                     	;# 
  6202  008E                     	;# 
  6203  008E                     	;# 
  6204  008F                     	;# 
  6205  0090                     	;# 
  6206  0090                     	;# 
  6207  0091                     	;# 
  6208  0093                     	;# 
  6209  0094                     	;# 
  6210  0095                     	;# 
  6211  0096                     	;# 
  6212  0097                     	;# 
  6213  0098                     	;# 
  6214  0099                     	;# 
  6215  009A                     	;# 
  6216  009B                     	;# 
  6217  009C                     	;# 
  6218  009D                     	;# 
  6219  009E                     	;# 
  6220  010C                     	;# 
  6221  010D                     	;# 
  6222  010E                     	;# 
  6223  010E                     	;# 
  6224  010F                     	;# 
  6225  0110                     	;# 
  6226  0110                     	;# 
  6227  0111                     	;# 
  6228  0112                     	;# 
  6229  0112                     	;# 
  6230  0113                     	;# 
  6231  0114                     	;# 
  6232  0114                     	;# 
  6233  0115                     	;# 
  6234  0116                     	;# 
  6235  0116                     	;# 
  6236  0117                     	;# 
  6237  0119                     	;# 
  6238  0119                     	;# 
  6239  0119                     	;# 
  6240  011A                     	;# 
  6241  011A                     	;# 
  6242  011A                     	;# 
  6243  011B                     	;# 
  6244  011B                     	;# 
  6245  011B                     	;# 
  6246  011B                     	;# 
  6247  011B                     	;# 
  6248  011C                     	;# 
  6249  011C                     	;# 
  6250  011C                     	;# 
  6251  011D                     	;# 
  6252  011D                     	;# 
  6253  011D                     	;# 
  6254  011E                     	;# 
  6255  011E                     	;# 
  6256  011E                     	;# 
  6257  011F                     	;# 
  6258  011F                     	;# 
  6259  011F                     	;# 
  6260  011F                     	;# 
  6261  011F                     	;# 
  6262  018C                     	;# 
  6263  018D                     	;# 
  6264  018E                     	;# 
  6265  018F                     	;# 
  6266  0190                     	;# 
  6267  0191                     	;# 
  6268  0192                     	;# 
  6269  0196                     	;# 
  6270  0197                     	;# 
  6271  0198                     	;# 
  6272  0199                     	;# 
  6273  019A                     	;# 
  6274  019B                     	;# 
  6275  019C                     	;# 
  6276  020C                     	;# 
  6277  020C                     	;# 
  6278  020D                     	;# 
  6279  020E                     	;# 
  6280  020F                     	;# 
  6281  020F                     	;# 
  6282  0210                     	;# 
  6283  0210                     	;# 
  6284  0211                     	;# 
  6285  0211                     	;# 
  6286  0212                     	;# 
  6287  0212                     	;# 
  6288  0213                     	;# 
  6289  0214                     	;# 
  6290  0215                     	;# 
  6291  0215                     	;# 
  6292  0216                     	;# 
  6293  0216                     	;# 
  6294  0217                     	;# 
  6295  0217                     	;# 
  6296  0218                     	;# 
  6297  0218                     	;# 
  6298  0219                     	;# 
  6299  021A                     	;# 
  6300  021B                     	;# 
  6301  021B                     	;# 
  6302  021C                     	;# 
  6303  021C                     	;# 
  6304  021D                     	;# 
  6305  021D                     	;# 
  6306  021E                     	;# 
  6307  021F                     	;# 
  6308  028C                     	;# 
  6309  028C                     	;# 
  6310  028D                     	;# 
  6311  028D                     	;# 
  6312  028E                     	;# 
  6313  028F                     	;# 
  6314  0290                     	;# 
  6315  0290                     	;# 
  6316  0291                     	;# 
  6317  0292                     	;# 
  6318  0292                     	;# 
  6319  0293                     	;# 
  6320  0293                     	;# 
  6321  0294                     	;# 
  6322  0295                     	;# 
  6323  0296                     	;# 
  6324  0296                     	;# 
  6325  0297                     	;# 
  6326  0298                     	;# 
  6327  0298                     	;# 
  6328  0299                     	;# 
  6329  0299                     	;# 
  6330  029A                     	;# 
  6331  029B                     	;# 
  6332  029C                     	;# 
  6333  029C                     	;# 
  6334  029D                     	;# 
  6335  030C                     	;# 
  6336  030C                     	;# 
  6337  030D                     	;# 
  6338  030E                     	;# 
  6339  030F                     	;# 
  6340  0310                     	;# 
  6341  0310                     	;# 
  6342  0311                     	;# 
  6343  0312                     	;# 
  6344  0313                     	;# 
  6345  0314                     	;# 
  6346  0314                     	;# 
  6347  0315                     	;# 
  6348  0316                     	;# 
  6349  0317                     	;# 
  6350  0318                     	;# 
  6351  0318                     	;# 
  6352  0319                     	;# 
  6353  031A                     	;# 
  6354  031B                     	;# 
  6355  031C                     	;# 
  6356  031C                     	;# 
  6357  031D                     	;# 
  6358  031E                     	;# 
  6359  031F                     	;# 
  6360  038C                     	;# 
  6361  038C                     	;# 
  6362  038D                     	;# 
  6363  038E                     	;# 
  6364  0390                     	;# 
  6365  0390                     	;# 
  6366  0391                     	;# 
  6367  0392                     	;# 
  6368  040C                     	;# 
  6369  040D                     	;# 
  6370  040E                     	;# 
  6371  040F                     	;# 
  6372  0410                     	;# 
  6373  0411                     	;# 
  6374  0416                     	;# 
  6375  0416                     	;# 
  6376  0417                     	;# 
  6377  0418                     	;# 
  6378  0418                     	;# 
  6379  0419                     	;# 
  6380  041A                     	;# 
  6381  041A                     	;# 
  6382  041B                     	;# 
  6383  041C                     	;# 
  6384  041C                     	;# 
  6385  041D                     	;# 
  6386  041E                     	;# 
  6387  041F                     	;# 
  6388  048C                     	;# 
  6389  048C                     	;# 
  6390  048D                     	;# 
  6391  048E                     	;# 
  6392  048F                     	;# 
  6393  048F                     	;# 
  6394  0490                     	;# 
  6395  0491                     	;# 
  6396  0492                     	;# 
  6397  0492                     	;# 
  6398  0493                     	;# 
  6399  0494                     	;# 
  6400  0495                     	;# 
  6401  0495                     	;# 
  6402  0496                     	;# 
  6403  0497                     	;# 
  6404  0498                     	;# 
  6405  0499                     	;# 
  6406  049A                     	;# 
  6407  049B                     	;# 
  6408  049C                     	;# 
  6409  049D                     	;# 
  6410  050C                     	;# 
  6411  050C                     	;# 
  6412  050D                     	;# 
  6413  050E                     	;# 
  6414  050F                     	;# 
  6415  050F                     	;# 
  6416  0510                     	;# 
  6417  0511                     	;# 
  6418  0512                     	;# 
  6419  0512                     	;# 
  6420  0513                     	;# 
  6421  0514                     	;# 
  6422  0515                     	;# 
  6423  0515                     	;# 
  6424  0516                     	;# 
  6425  0517                     	;# 
  6426  0518                     	;# 
  6427  0519                     	;# 
  6428  051A                     	;# 
  6429  051B                     	;# 
  6430  051C                     	;# 
  6431  051D                     	;# 
  6432  058C                     	;# 
  6433  058C                     	;# 
  6434  058D                     	;# 
  6435  058E                     	;# 
  6436  058F                     	;# 
  6437  058F                     	;# 
  6438  0590                     	;# 
  6439  0591                     	;# 
  6440  0592                     	;# 
  6441  0593                     	;# 
  6442  060C                     	;# 
  6443  060D                     	;# 
  6444  060E                     	;# 
  6445  060F                     	;# 
  6446  0610                     	;# 
  6447  0611                     	;# 
  6448  0612                     	;# 
  6449  0613                     	;# 
  6450  0614                     	;# 
  6451  0616                     	;# 
  6452  0617                     	;# 
  6453  0618                     	;# 
  6454  0619                     	;# 
  6455  061A                     	;# 
  6456  061B                     	;# 
  6457  061C                     	;# 
  6458  061D                     	;# 
  6459  061E                     	;# 
  6460  068C                     	;# 
  6461  068D                     	;# 
  6462  068E                     	;# 
  6463  068F                     	;# 
  6464  0690                     	;# 
  6465  0691                     	;# 
  6466  0692                     	;# 
  6467  0693                     	;# 
  6468  0694                     	;# 
  6469  070C                     	;# 
  6470  070D                     	;# 
  6471  070E                     	;# 
  6472  070F                     	;# 
  6473  0710                     	;# 
  6474  0711                     	;# 
  6475  0712                     	;# 
  6476  0713                     	;# 
  6477  0714                     	;# 
  6478  0716                     	;# 
  6479  0717                     	;# 
  6480  0718                     	;# 
  6481  0719                     	;# 
  6482  071A                     	;# 
  6483  071B                     	;# 
  6484  071C                     	;# 
  6485  071D                     	;# 
  6486  071E                     	;# 
  6487  0796                     	;# 
  6488  0797                     	;# 
  6489  0798                     	;# 
  6490  0799                     	;# 
  6491  079A                     	;# 
  6492  079B                     	;# 
  6493  080C                     	;# 
  6494  080D                     	;# 
  6495  080E                     	;# 
  6496  080F                     	;# 
  6497  0810                     	;# 
  6498  0811                     	;# 
  6499  0812                     	;# 
  6500  0813                     	;# 
  6501  0814                     	;# 
  6502  081A                     	;# 
  6503  081B                     	;# 
  6504  081C                     	;# 
  6505  081D                     	;# 
  6506  081E                     	;# 
  6507  081F                     	;# 
  6508  088C                     	;# 
  6509  088D                     	;# 
  6510  088E                     	;# 
  6511  088F                     	;# 
  6512  0890                     	;# 
  6513  0891                     	;# 
  6514  0892                     	;# 
  6515  0893                     	;# 
  6516  0895                     	;# 
  6517  0896                     	;# 
  6518  0897                     	;# 
  6519  0898                     	;# 
  6520  0899                     	;# 
  6521  089A                     	;# 
  6522  089B                     	;# 
  6523  090C                     	;# 
  6524  090E                     	;# 
  6525  090F                     	;# 
  6526  091F                     	;# 
  6527  091F                     	;# 
  6528  098F                     	;# 
  6529  098F                     	;# 
  6530  0990                     	;# 
  6531  0991                     	;# 
  6532  0992                     	;# 
  6533  0993                     	;# 
  6534  0994                     	;# 
  6535  0995                     	;# 
  6536  0996                     	;# 
  6537  0997                     	;# 
  6538  0E0F                     	;# 
  6539  0E10                     	;# 
  6540  0E11                     	;# 
  6541  0E12                     	;# 
  6542  0E13                     	;# 
  6543  0E14                     	;# 
  6544  0E15                     	;# 
  6545  0E16                     	;# 
  6546  0E17                     	;# 
  6547  0E18                     	;# 
  6548  0E19                     	;# 
  6549  0E1A                     	;# 
  6550  0E1B                     	;# 
  6551  0E1C                     	;# 
  6552  0E1D                     	;# 
  6553  0E1E                     	;# 
  6554  0E1F                     	;# 
  6555  0E20                     	;# 
  6556  0E21                     	;# 
  6557  0E22                     	;# 
  6558  0E23                     	;# 
  6559  0E24                     	;# 
  6560  0E25                     	;# 
  6561  0E26                     	;# 
  6562  0E27                     	;# 
  6563  0E28                     	;# 
  6564  0E29                     	;# 
  6565  0E2A                     	;# 
  6566  0E2B                     	;# 
  6567  0E2C                     	;# 
  6568  0E2D                     	;# 
  6569  0E2E                     	;# 
  6570  0E2F                     	;# 
  6571  0E30                     	;# 
  6572  0E31                     	;# 
  6573  0E32                     	;# 
  6574  0E33                     	;# 
  6575  0E34                     	;# 
  6576  0E35                     	;# 
  6577  0E36                     	;# 
  6578  0E37                     	;# 
  6579  0E8F                     	;# 
  6580  0E90                     	;# 
  6581  0E91                     	;# 
  6582  0E92                     	;# 
  6583  0E93                     	;# 
  6584  0E94                     	;# 
  6585  0E95                     	;# 
  6586  0E96                     	;# 
  6587  0E97                     	;# 
  6588  0E9C                     	;# 
  6589  0E9D                     	;# 
  6590  0E9E                     	;# 
  6591  0EA1                     	;# 
  6592  0EA2                     	;# 
  6593  0EA3                     	;# 
  6594  0EA4                     	;# 
  6595  0EA5                     	;# 
  6596  0EA9                     	;# 
  6597  0EAA                     	;# 
  6598  0EAB                     	;# 
  6599  0EAC                     	;# 
  6600  0EB1                     	;# 
  6601  0EB2                     	;# 
  6602  0EB3                     	;# 
  6603  0EB8                     	;# 
  6604  0EB9                     	;# 
  6605  0EBA                     	;# 
  6606  0EBB                     	;# 
  6607  0EBC                     	;# 
  6608  0EBD                     	;# 
  6609  0EBE                     	;# 
  6610  0EC3                     	;# 
  6611  0EC5                     	;# 
  6612  0EC6                     	;# 
  6613  0EC7                     	;# 
  6614  0EC8                     	;# 
  6615  0EC9                     	;# 
  6616  0ECA                     	;# 
  6617  0ECB                     	;# 
  6618  0ECC                     	;# 
  6619  0F10                     	;# 
  6620  0F11                     	;# 
  6621  0F12                     	;# 
  6622  0F13                     	;# 
  6623  0F14                     	;# 
  6624  0F15                     	;# 
  6625  0F16                     	;# 
  6626  0F17                     	;# 
  6627  0F18                     	;# 
  6628  0F19                     	;# 
  6629  0F1A                     	;# 
  6630  0F1B                     	;# 
  6631  0F1C                     	;# 
  6632  0F1D                     	;# 
  6633  0F1E                     	;# 
  6634  0F1F                     	;# 
  6635  0F20                     	;# 
  6636  0F21                     	;# 
  6637  0F22                     	;# 
  6638  0F23                     	;# 
  6639  0F24                     	;# 
  6640  0F25                     	;# 
  6641  0F26                     	;# 
  6642  0F27                     	;# 
  6643  0F28                     	;# 
  6644  0F29                     	;# 
  6645  0F2A                     	;# 
  6646  0F2B                     	;# 
  6647  0F2C                     	;# 
  6648  0F2D                     	;# 
  6649  0F2E                     	;# 
  6650  0F2F                     	;# 
  6651  0F30                     	;# 
  6652  0F31                     	;# 
  6653  0F32                     	;# 
  6654  0F38                     	;# 
  6655  0F39                     	;# 
  6656  0F3A                     	;# 
  6657  0F3B                     	;# 
  6658  0F3C                     	;# 
  6659  0F3D                     	;# 
  6660  0F3E                     	;# 
  6661  0F3F                     	;# 
  6662  0F40                     	;# 
  6663  0F41                     	;# 
  6664  0F43                     	;# 
  6665  0F44                     	;# 
  6666  0F45                     	;# 
  6667  0F46                     	;# 
  6668  0F47                     	;# 
  6669  0F48                     	;# 
  6670  0F49                     	;# 
  6671  0F4A                     	;# 
  6672  0F4B                     	;# 
  6673  0F4C                     	;# 
  6674  0F4E                     	;# 
  6675  0F4F                     	;# 
  6676  0F50                     	;# 
  6677  0F51                     	;# 
  6678  0F52                     	;# 
  6679  0F53                     	;# 
  6680  0F54                     	;# 
  6681  0F55                     	;# 
  6682  0F56                     	;# 
  6683  0F57                     	;# 
  6684  0F59                     	;# 
  6685  0F5A                     	;# 
  6686  0F5B                     	;# 
  6687  0F5C                     	;# 
  6688  0F5D                     	;# 
  6689  0F61                     	;# 
  6690  0F62                     	;# 
  6691  0F64                     	;# 
  6692  0F65                     	;# 
  6693  0F66                     	;# 
  6694  0F67                     	;# 
  6695  0F68                     	;# 
  6696  0F69                     	;# 
  6697  0F6A                     	;# 
  6698  0F6B                     	;# 
  6699  0F6C                     	;# 
  6700  0F6D                     	;# 
  6701  0FE4                     	;# 
  6702  0FE5                     	;# 
  6703  0FE6                     	;# 
  6704  0FE7                     	;# 
  6705  0FE8                     	;# 
  6706  0FE9                     	;# 
  6707  0FEA                     	;# 
  6708  0FEB                     	;# 
  6709  0FED                     	;# 
  6710  0FEE                     	;# 
  6711  0FEF                     	;# 
  6712  0000                     	;# 
  6713  0001                     	;# 
  6714  0002                     	;# 
  6715  0003                     	;# 
  6716  0004                     	;# 
  6717  0005                     	;# 
  6718  0006                     	;# 
  6719  0007                     	;# 
  6720  0008                     	;# 
  6721  0009                     	;# 
  6722  000A                     	;# 
  6723  000B                     	;# 
  6724  000C                     	;# 
  6725  000D                     	;# 
  6726  000E                     	;# 
  6727  000F                     	;# 
  6728  0010                     	;# 
  6729  0011                     	;# 
  6730  0012                     	;# 
  6731  0013                     	;# 
  6732  0014                     	;# 
  6733  0015                     	;# 
  6734  0016                     	;# 
  6735  0017                     	;# 
  6736  0018                     	;# 
  6737  0019                     	;# 
  6738  001A                     	;# 
  6739  001C                     	;# 
  6740  001C                     	;# 
  6741  001D                     	;# 
  6742  001D                     	;# 
  6743  001E                     	;# 
  6744  001F                     	;# 
  6745  008C                     	;# 
  6746  008C                     	;# 
  6747  008D                     	;# 
  6748  008E                     	;# 
  6749  008E                     	;# 
  6750  008F                     	;# 
  6751  0090                     	;# 
  6752  0090                     	;# 
  6753  0091                     	;# 
  6754  0093                     	;# 
  6755  0094                     	;# 
  6756  0095                     	;# 
  6757  0096                     	;# 
  6758  0097                     	;# 
  6759  0098                     	;# 
  6760  0099                     	;# 
  6761  009A                     	;# 
  6762  009B                     	;# 
  6763  009C                     	;# 
  6764  009D                     	;# 
  6765  009E                     	;# 
  6766  010C                     	;# 
  6767  010D                     	;# 
  6768  010E                     	;# 
  6769  010E                     	;# 
  6770  010F                     	;# 
  6771  0110                     	;# 
  6772  0110                     	;# 
  6773  0111                     	;# 
  6774  0112                     	;# 
  6775  0112                     	;# 
  6776  0113                     	;# 
  6777  0114                     	;# 
  6778  0114                     	;# 
  6779  0115                     	;# 
  6780  0116                     	;# 
  6781  0116                     	;# 
  6782  0117                     	;# 
  6783  0119                     	;# 
  6784  0119                     	;# 
  6785  0119                     	;# 
  6786  011A                     	;# 
  6787  011A                     	;# 
  6788  011A                     	;# 
  6789  011B                     	;# 
  6790  011B                     	;# 
  6791  011B                     	;# 
  6792  011B                     	;# 
  6793  011B                     	;# 
  6794  011C                     	;# 
  6795  011C                     	;# 
  6796  011C                     	;# 
  6797  011D                     	;# 
  6798  011D                     	;# 
  6799  011D                     	;# 
  6800  011E                     	;# 
  6801  011E                     	;# 
  6802  011E                     	;# 
  6803  011F                     	;# 
  6804  011F                     	;# 
  6805  011F                     	;# 
  6806  011F                     	;# 
  6807  011F                     	;# 
  6808  018C                     	;# 
  6809  018D                     	;# 
  6810  018E                     	;# 
  6811  018F                     	;# 
  6812  0190                     	;# 
  6813  0191                     	;# 
  6814  0192                     	;# 
  6815  0196                     	;# 
  6816  0197                     	;# 
  6817  0198                     	;# 
  6818  0199                     	;# 
  6819  019A                     	;# 
  6820  019B                     	;# 
  6821  019C                     	;# 
  6822  020C                     	;# 
  6823  020C                     	;# 
  6824  020D                     	;# 
  6825  020E                     	;# 
  6826  020F                     	;# 
  6827  020F                     	;# 
  6828  0210                     	;# 
  6829  0210                     	;# 
  6830  0211                     	;# 
  6831  0211                     	;# 
  6832  0212                     	;# 
  6833  0212                     	;# 
  6834  0213                     	;# 
  6835  0214                     	;# 
  6836  0215                     	;# 
  6837  0215                     	;# 
  6838  0216                     	;# 
  6839  0216                     	;# 
  6840  0217                     	;# 
  6841  0217                     	;# 
  6842  0218                     	;# 
  6843  0218                     	;# 
  6844  0219                     	;# 
  6845  021A                     	;# 
  6846  021B                     	;# 
  6847  021B                     	;# 
  6848  021C                     	;# 
  6849  021C                     	;# 
  6850  021D                     	;# 
  6851  021D                     	;# 
  6852  021E                     	;# 
  6853  021F                     	;# 
  6854  028C                     	;# 
  6855  028C                     	;# 
  6856  028D                     	;# 
  6857  028D                     	;# 
  6858  028E                     	;# 
  6859  028F                     	;# 
  6860  0290                     	;# 
  6861  0290                     	;# 
  6862  0291                     	;# 
  6863  0292                     	;# 
  6864  0292                     	;# 
  6865  0293                     	;# 
  6866  0293                     	;# 
  6867  0294                     	;# 
  6868  0295                     	;# 
  6869  0296                     	;# 
  6870  0296                     	;# 
  6871  0297                     	;# 
  6872  0298                     	;# 
  6873  0298                     	;# 
  6874  0299                     	;# 
  6875  0299                     	;# 
  6876  029A                     	;# 
  6877  029B                     	;# 
  6878  029C                     	;# 
  6879  029C                     	;# 
  6880  029D                     	;# 
  6881  030C                     	;# 
  6882  030C                     	;# 
  6883  030D                     	;# 
  6884  030E                     	;# 
  6885  030F                     	;# 
  6886  0310                     	;# 
  6887  0310                     	;# 
  6888  0311                     	;# 
  6889  0312                     	;# 
  6890  0313                     	;# 
  6891  0314                     	;# 
  6892  0314                     	;# 
  6893  0315                     	;# 
  6894  0316                     	;# 
  6895  0317                     	;# 
  6896  0318                     	;# 
  6897  0318                     	;# 
  6898  0319                     	;# 
  6899  031A                     	;# 
  6900  031B                     	;# 
  6901  031C                     	;# 
  6902  031C                     	;# 
  6903  031D                     	;# 
  6904  031E                     	;# 
  6905  031F                     	;# 
  6906  038C                     	;# 
  6907  038C                     	;# 
  6908  038D                     	;# 
  6909  038E                     	;# 
  6910  0390                     	;# 
  6911  0390                     	;# 
  6912  0391                     	;# 
  6913  0392                     	;# 
  6914  040C                     	;# 
  6915  040D                     	;# 
  6916  040E                     	;# 
  6917  040F                     	;# 
  6918  0410                     	;# 
  6919  0411                     	;# 
  6920  0416                     	;# 
  6921  0416                     	;# 
  6922  0417                     	;# 
  6923  0418                     	;# 
  6924  0418                     	;# 
  6925  0419                     	;# 
  6926  041A                     	;# 
  6927  041A                     	;# 
  6928  041B                     	;# 
  6929  041C                     	;# 
  6930  041C                     	;# 
  6931  041D                     	;# 
  6932  041E                     	;# 
  6933  041F                     	;# 
  6934  048C                     	;# 
  6935  048C                     	;# 
  6936  048D                     	;# 
  6937  048E                     	;# 
  6938  048F                     	;# 
  6939  048F                     	;# 
  6940  0490                     	;# 
  6941  0491                     	;# 
  6942  0492                     	;# 
  6943  0492                     	;# 
  6944  0493                     	;# 
  6945  0494                     	;# 
  6946  0495                     	;# 
  6947  0495                     	;# 
  6948  0496                     	;# 
  6949  0497                     	;# 
  6950  0498                     	;# 
  6951  0499                     	;# 
  6952  049A                     	;# 
  6953  049B                     	;# 
  6954  049C                     	;# 
  6955  049D                     	;# 
  6956  050C                     	;# 
  6957  050C                     	;# 
  6958  050D                     	;# 
  6959  050E                     	;# 
  6960  050F                     	;# 
  6961  050F                     	;# 
  6962  0510                     	;# 
  6963  0511                     	;# 
  6964  0512                     	;# 
  6965  0512                     	;# 
  6966  0513                     	;# 
  6967  0514                     	;# 
  6968  0515                     	;# 
  6969  0515                     	;# 
  6970  0516                     	;# 
  6971  0517                     	;# 
  6972  0518                     	;# 
  6973  0519                     	;# 
  6974  051A                     	;# 
  6975  051B                     	;# 
  6976  051C                     	;# 
  6977  051D                     	;# 
  6978  058C                     	;# 
  6979  058C                     	;# 
  6980  058D                     	;# 
  6981  058E                     	;# 
  6982  058F                     	;# 
  6983  058F                     	;# 
  6984  0590                     	;# 
  6985  0591                     	;# 
  6986  0592                     	;# 
  6987  0593                     	;# 
  6988  060C                     	;# 
  6989  060D                     	;# 
  6990  060E                     	;# 
  6991  060F                     	;# 
  6992  0610                     	;# 
  6993  0611                     	;# 
  6994  0612                     	;# 
  6995  0613                     	;# 
  6996  0614                     	;# 
  6997  0616                     	;# 
  6998  0617                     	;# 
  6999  0618                     	;# 
  7000  0619                     	;# 
  7001  061A                     	;# 
  7002  061B                     	;# 
  7003  061C                     	;# 
  7004  061D                     	;# 
  7005  061E                     	;# 
  7006  068C                     	;# 
  7007  068D                     	;# 
  7008  068E                     	;# 
  7009  068F                     	;# 
  7010  0690                     	;# 
  7011  0691                     	;# 
  7012  0692                     	;# 
  7013  0693                     	;# 
  7014  0694                     	;# 
  7015  070C                     	;# 
  7016  070D                     	;# 
  7017  070E                     	;# 
  7018  070F                     	;# 
  7019  0710                     	;# 
  7020  0711                     	;# 
  7021  0712                     	;# 
  7022  0713                     	;# 
  7023  0714                     	;# 
  7024  0716                     	;# 
  7025  0717                     	;# 
  7026  0718                     	;# 
  7027  0719                     	;# 
  7028  071A                     	;# 
  7029  071B                     	;# 
  7030  071C                     	;# 
  7031  071D                     	;# 
  7032  071E                     	;# 
  7033  0796                     	;# 
  7034  0797                     	;# 
  7035  0798                     	;# 
  7036  0799                     	;# 
  7037  079A                     	;# 
  7038  079B                     	;# 
  7039  080C                     	;# 
  7040  080D                     	;# 
  7041  080E                     	;# 
  7042  080F                     	;# 
  7043  0810                     	;# 
  7044  0811                     	;# 
  7045  0812                     	;# 
  7046  0813                     	;# 
  7047  0814                     	;# 
  7048  081A                     	;# 
  7049  081B                     	;# 
  7050  081C                     	;# 
  7051  081D                     	;# 
  7052  081E                     	;# 
  7053  081F                     	;# 
  7054  088C                     	;# 
  7055  088D                     	;# 
  7056  088E                     	;# 
  7057  088F                     	;# 
  7058  0890                     	;# 
  7059  0891                     	;# 
  7060  0892                     	;# 
  7061  0893                     	;# 
  7062  0895                     	;# 
  7063  0896                     	;# 
  7064  0897                     	;# 
  7065  0898                     	;# 
  7066  0899                     	;# 
  7067  089A                     	;# 
  7068  089B                     	;# 
  7069  090C                     	;# 
  7070  090E                     	;# 
  7071  090F                     	;# 
  7072  091F                     	;# 
  7073  091F                     	;# 
  7074  098F                     	;# 
  7075  098F                     	;# 
  7076  0990                     	;# 
  7077  0991                     	;# 
  7078  0992                     	;# 
  7079  0993                     	;# 
  7080  0994                     	;# 
  7081  0995                     	;# 
  7082  0996                     	;# 
  7083  0997                     	;# 
  7084  0E0F                     	;# 
  7085  0E10                     	;# 
  7086  0E11                     	;# 
  7087  0E12                     	;# 
  7088  0E13                     	;# 
  7089  0E14                     	;# 
  7090  0E15                     	;# 
  7091  0E16                     	;# 
  7092  0E17                     	;# 
  7093  0E18                     	;# 
  7094  0E19                     	;# 
  7095  0E1A                     	;# 
  7096  0E1B                     	;# 
  7097  0E1C                     	;# 
  7098  0E1D                     	;# 
  7099  0E1E                     	;# 
  7100  0E1F                     	;# 
  7101  0E20                     	;# 
  7102  0E21                     	;# 
  7103  0E22                     	;# 
  7104  0E23                     	;# 
  7105  0E24                     	;# 
  7106  0E25                     	;# 
  7107  0E26                     	;# 
  7108  0E27                     	;# 
  7109  0E28                     	;# 
  7110  0E29                     	;# 
  7111  0E2A                     	;# 
  7112  0E2B                     	;# 
  7113  0E2C                     	;# 
  7114  0E2D                     	;# 
  7115  0E2E                     	;# 
  7116  0E2F                     	;# 
  7117  0E30                     	;# 
  7118  0E31                     	;# 
  7119  0E32                     	;# 
  7120  0E33                     	;# 
  7121  0E34                     	;# 
  7122  0E35                     	;# 
  7123  0E36                     	;# 
  7124  0E37                     	;# 
  7125  0E8F                     	;# 
  7126  0E90                     	;# 
  7127  0E91                     	;# 
  7128  0E92                     	;# 
  7129  0E93                     	;# 
  7130  0E94                     	;# 
  7131  0E95                     	;# 
  7132  0E96                     	;# 
  7133  0E97                     	;# 
  7134  0E9C                     	;# 
  7135  0E9D                     	;# 
  7136  0E9E                     	;# 
  7137  0EA1                     	;# 
  7138  0EA2                     	;# 
  7139  0EA3                     	;# 
  7140  0EA4                     	;# 
  7141  0EA5                     	;# 
  7142  0EA9                     	;# 
  7143  0EAA                     	;# 
  7144  0EAB                     	;# 
  7145  0EAC                     	;# 
  7146  0EB1                     	;# 
  7147  0EB2                     	;# 
  7148  0EB3                     	;# 
  7149  0EB8                     	;# 
  7150  0EB9                     	;# 
  7151  0EBA                     	;# 
  7152  0EBB                     	;# 
  7153  0EBC                     	;# 
  7154  0EBD                     	;# 
  7155  0EBE                     	;# 
  7156  0EC3                     	;# 
  7157  0EC5                     	;# 
  7158  0EC6                     	;# 
  7159  0EC7                     	;# 
  7160  0EC8                     	;# 
  7161  0EC9                     	;# 
  7162  0ECA                     	;# 
  7163  0ECB                     	;# 
  7164  0ECC                     	;# 
  7165  0F10                     	;# 
  7166  0F11                     	;# 
  7167  0F12                     	;# 
  7168  0F13                     	;# 
  7169  0F14                     	;# 
  7170  0F15                     	;# 
  7171  0F16                     	;# 
  7172  0F17                     	;# 
  7173  0F18                     	;# 
  7174  0F19                     	;# 
  7175  0F1A                     	;# 
  7176  0F1B                     	;# 
  7177  0F1C                     	;# 
  7178  0F1D                     	;# 
  7179  0F1E                     	;# 
  7180  0F1F                     	;# 
  7181  0F20                     	;# 
  7182  0F21                     	;# 
  7183  0F22                     	;# 
  7184  0F23                     	;# 
  7185  0F24                     	;# 
  7186  0F25                     	;# 
  7187  0F26                     	;# 
  7188  0F27                     	;# 
  7189  0F28                     	;# 
  7190  0F29                     	;# 
  7191  0F2A                     	;# 
  7192  0F2B                     	;# 
  7193  0F2C                     	;# 
  7194  0F2D                     	;# 
  7195  0F2E                     	;# 
  7196  0F2F                     	;# 
  7197  0F30                     	;# 
  7198  0F31                     	;# 
  7199  0F32                     	;# 
  7200  0F38                     	;# 
  7201  0F39                     	;# 
  7202  0F3A                     	;# 
  7203  0F3B                     	;# 
  7204  0F3C                     	;# 
  7205  0F3D                     	;# 
  7206  0F3E                     	;# 
  7207  0F3F                     	;# 
  7208  0F40                     	;# 
  7209  0F41                     	;# 
  7210  0F43                     	;# 
  7211  0F44                     	;# 
  7212  0F45                     	;# 
  7213  0F46                     	;# 
  7214  0F47                     	;# 
  7215  0F48                     	;# 
  7216  0F49                     	;# 
  7217  0F4A                     	;# 
  7218  0F4B                     	;# 
  7219  0F4C                     	;# 
  7220  0F4E                     	;# 
  7221  0F4F                     	;# 
  7222  0F50                     	;# 
  7223  0F51                     	;# 
  7224  0F52                     	;# 
  7225  0F53                     	;# 
  7226  0F54                     	;# 
  7227  0F55                     	;# 
  7228  0F56                     	;# 
  7229  0F57                     	;# 
  7230  0F59                     	;# 
  7231  0F5A                     	;# 
  7232  0F5B                     	;# 
  7233  0F5C                     	;# 
  7234  0F5D                     	;# 
  7235  0F61                     	;# 
  7236  0F62                     	;# 
  7237  0F64                     	;# 
  7238  0F65                     	;# 
  7239  0F66                     	;# 
  7240  0F67                     	;# 
  7241  0F68                     	;# 
  7242  0F69                     	;# 
  7243  0F6A                     	;# 
  7244  0F6B                     	;# 
  7245  0F6C                     	;# 
  7246  0F6D                     	;# 
  7247  0FE4                     	;# 
  7248  0FE5                     	;# 
  7249  0FE6                     	;# 
  7250  0FE7                     	;# 
  7251  0FE8                     	;# 
  7252  0FE9                     	;# 
  7253  0FEA                     	;# 
  7254  0FEB                     	;# 
  7255  0FED                     	;# 
  7256  0FEE                     	;# 
  7257  0FEF                     	;# 
  7258  0000                     	;# 
  7259  0001                     	;# 
  7260  0002                     	;# 
  7261  0003                     	;# 
  7262  0004                     	;# 
  7263  0005                     	;# 
  7264  0006                     	;# 
  7265  0007                     	;# 
  7266  0008                     	;# 
  7267  0009                     	;# 
  7268  000A                     	;# 
  7269  000B                     	;# 
  7270  000C                     	;# 
  7271  000D                     	;# 
  7272  000E                     	;# 
  7273  000F                     	;# 
  7274  0010                     	;# 
  7275  0011                     	;# 
  7276  0012                     	;# 
  7277  0013                     	;# 
  7278  0014                     	;# 
  7279  0015                     	;# 
  7280  0016                     	;# 
  7281  0017                     	;# 
  7282  0018                     	;# 
  7283  0019                     	;# 
  7284  001A                     	;# 
  7285  001C                     	;# 
  7286  001C                     	;# 
  7287  001D                     	;# 
  7288  001D                     	;# 
  7289  001E                     	;# 
  7290  001F                     	;# 
  7291  008C                     	;# 
  7292  008C                     	;# 
  7293  008D                     	;# 
  7294  008E                     	;# 
  7295  008E                     	;# 
  7296  008F                     	;# 
  7297  0090                     	;# 
  7298  0090                     	;# 
  7299  0091                     	;# 
  7300  0093                     	;# 
  7301  0094                     	;# 
  7302  0095                     	;# 
  7303  0096                     	;# 
  7304  0097                     	;# 
  7305  0098                     	;# 
  7306  0099                     	;# 
  7307  009A                     	;# 
  7308  009B                     	;# 
  7309  009C                     	;# 
  7310  009D                     	;# 
  7311  009E                     	;# 
  7312  010C                     	;# 
  7313  010D                     	;# 
  7314  010E                     	;# 
  7315  010E                     	;# 
  7316  010F                     	;# 
  7317  0110                     	;# 
  7318  0110                     	;# 
  7319  0111                     	;# 
  7320  0112                     	;# 
  7321  0112                     	;# 
  7322  0113                     	;# 
  7323  0114                     	;# 
  7324  0114                     	;# 
  7325  0115                     	;# 
  7326  0116                     	;# 
  7327  0116                     	;# 
  7328  0117                     	;# 
  7329  0119                     	;# 
  7330  0119                     	;# 
  7331  0119                     	;# 
  7332  011A                     	;# 
  7333  011A                     	;# 
  7334  011A                     	;# 
  7335  011B                     	;# 
  7336  011B                     	;# 
  7337  011B                     	;# 
  7338  011B                     	;# 
  7339  011B                     	;# 
  7340  011C                     	;# 
  7341  011C                     	;# 
  7342  011C                     	;# 
  7343  011D                     	;# 
  7344  011D                     	;# 
  7345  011D                     	;# 
  7346  011E                     	;# 
  7347  011E                     	;# 
  7348  011E                     	;# 
  7349  011F                     	;# 
  7350  011F                     	;# 
  7351  011F                     	;# 
  7352  011F                     	;# 
  7353  011F                     	;# 
  7354  018C                     	;# 
  7355  018D                     	;# 
  7356  018E                     	;# 
  7357  018F                     	;# 
  7358  0190                     	;# 
  7359  0191                     	;# 
  7360  0192                     	;# 
  7361  0196                     	;# 
  7362  0197                     	;# 
  7363  0198                     	;# 
  7364  0199                     	;# 
  7365  019A                     	;# 
  7366  019B                     	;# 
  7367  019C                     	;# 
  7368  020C                     	;# 
  7369  020C                     	;# 
  7370  020D                     	;# 
  7371  020E                     	;# 
  7372  020F                     	;# 
  7373  020F                     	;# 
  7374  0210                     	;# 
  7375  0210                     	;# 
  7376  0211                     	;# 
  7377  0211                     	;# 
  7378  0212                     	;# 
  7379  0212                     	;# 
  7380  0213                     	;# 
  7381  0214                     	;# 
  7382  0215                     	;# 
  7383  0215                     	;# 
  7384  0216                     	;# 
  7385  0216                     	;# 
  7386  0217                     	;# 
  7387  0217                     	;# 
  7388  0218                     	;# 
  7389  0218                     	;# 
  7390  0219                     	;# 
  7391  021A                     	;# 
  7392  021B                     	;# 
  7393  021B                     	;# 
  7394  021C                     	;# 
  7395  021C                     	;# 
  7396  021D                     	;# 
  7397  021D                     	;# 
  7398  021E                     	;# 
  7399  021F                     	;# 
  7400  028C                     	;# 
  7401  028C                     	;# 
  7402  028D                     	;# 
  7403  028D                     	;# 
  7404  028E                     	;# 
  7405  028F                     	;# 
  7406  0290                     	;# 
  7407  0290                     	;# 
  7408  0291                     	;# 
  7409  0292                     	;# 
  7410  0292                     	;# 
  7411  0293                     	;# 
  7412  0293                     	;# 
  7413  0294                     	;# 
  7414  0295                     	;# 
  7415  0296                     	;# 
  7416  0296                     	;# 
  7417  0297                     	;# 
  7418  0298                     	;# 
  7419  0298                     	;# 
  7420  0299                     	;# 
  7421  0299                     	;# 
  7422  029A                     	;# 
  7423  029B                     	;# 
  7424  029C                     	;# 
  7425  029C                     	;# 
  7426  029D                     	;# 
  7427  030C                     	;# 
  7428  030C                     	;# 
  7429  030D                     	;# 
  7430  030E                     	;# 
  7431  030F                     	;# 
  7432  0310                     	;# 
  7433  0310                     	;# 
  7434  0311                     	;# 
  7435  0312                     	;# 
  7436  0313                     	;# 
  7437  0314                     	;# 
  7438  0314                     	;# 
  7439  0315                     	;# 
  7440  0316                     	;# 
  7441  0317                     	;# 
  7442  0318                     	;# 
  7443  0318                     	;# 
  7444  0319                     	;# 
  7445  031A                     	;# 
  7446  031B                     	;# 
  7447  031C                     	;# 
  7448  031C                     	;# 
  7449  031D                     	;# 
  7450  031E                     	;# 
  7451  031F                     	;# 
  7452  038C                     	;# 
  7453  038C                     	;# 
  7454  038D                     	;# 
  7455  038E                     	;# 
  7456  0390                     	;# 
  7457  0390                     	;# 
  7458  0391                     	;# 
  7459  0392                     	;# 
  7460  040C                     	;# 
  7461  040D                     	;# 
  7462  040E                     	;# 
  7463  040F                     	;# 
  7464  0410                     	;# 
  7465  0411                     	;# 
  7466  0416                     	;# 
  7467  0416                     	;# 
  7468  0417                     	;# 
  7469  0418                     	;# 
  7470  0418                     	;# 
  7471  0419                     	;# 
  7472  041A                     	;# 
  7473  041A                     	;# 
  7474  041B                     	;# 
  7475  041C                     	;# 
  7476  041C                     	;# 
  7477  041D                     	;# 
  7478  041E                     	;# 
  7479  041F                     	;# 
  7480  048C                     	;# 
  7481  048C                     	;# 
  7482  048D                     	;# 
  7483  048E                     	;# 
  7484  048F                     	;# 
  7485  048F                     	;# 
  7486  0490                     	;# 
  7487  0491                     	;# 
  7488  0492                     	;# 
  7489  0492                     	;# 
  7490  0493                     	;# 
  7491  0494                     	;# 
  7492  0495                     	;# 
  7493  0495                     	;# 
  7494  0496                     	;# 
  7495  0497                     	;# 
  7496  0498                     	;# 
  7497  0499                     	;# 
  7498  049A                     	;# 
  7499  049B                     	;# 
  7500  049C                     	;# 
  7501  049D                     	;# 
  7502  050C                     	;# 
  7503  050C                     	;# 
  7504  050D                     	;# 
  7505  050E                     	;# 
  7506  050F                     	;# 
  7507  050F                     	;# 
  7508  0510                     	;# 
  7509  0511                     	;# 
  7510  0512                     	;# 
  7511  0512                     	;# 
  7512  0513                     	;# 
  7513  0514                     	;# 
  7514  0515                     	;# 
  7515  0515                     	;# 
  7516  0516                     	;# 
  7517  0517                     	;# 
  7518  0518                     	;# 
  7519  0519                     	;# 
  7520  051A                     	;# 
  7521  051B                     	;# 
  7522  051C                     	;# 
  7523  051D                     	;# 
  7524  058C                     	;# 
  7525  058C                     	;# 
  7526  058D                     	;# 
  7527  058E                     	;# 
  7528  058F                     	;# 
  7529  058F                     	;# 
  7530  0590                     	;# 
  7531  0591                     	;# 
  7532  0592                     	;# 
  7533  0593                     	;# 
  7534  060C                     	;# 
  7535  060D                     	;# 
  7536  060E                     	;# 
  7537  060F                     	;# 
  7538  0610                     	;# 
  7539  0611                     	;# 
  7540  0612                     	;# 
  7541  0613                     	;# 
  7542  0614                     	;# 
  7543  0616                     	;# 
  7544  0617                     	;# 
  7545  0618                     	;# 
  7546  0619                     	;# 
  7547  061A                     	;# 
  7548  061B                     	;# 
  7549  061C                     	;# 
  7550  061D                     	;# 
  7551  061E                     	;# 
  7552  068C                     	;# 
  7553  068D                     	;# 
  7554  068E                     	;# 
  7555  068F                     	;# 
  7556  0690                     	;# 
  7557  0691                     	;# 
  7558  0692                     	;# 
  7559  0693                     	;# 
  7560  0694                     	;# 
  7561  070C                     	;# 
  7562  070D                     	;# 
  7563  070E                     	;# 
  7564  070F                     	;# 
  7565  0710                     	;# 
  7566  0711                     	;# 
  7567  0712                     	;# 
  7568  0713                     	;# 
  7569  0714                     	;# 
  7570  0716                     	;# 
  7571  0717                     	;# 
  7572  0718                     	;# 
  7573  0719                     	;# 
  7574  071A                     	;# 
  7575  071B                     	;# 
  7576  071C                     	;# 
  7577  071D                     	;# 
  7578  071E                     	;# 
  7579  0796                     	;# 
  7580  0797                     	;# 
  7581  0798                     	;# 
  7582  0799                     	;# 
  7583  079A                     	;# 
  7584  079B                     	;# 
  7585  080C                     	;# 
  7586  080D                     	;# 
  7587  080E                     	;# 
  7588  080F                     	;# 
  7589  0810                     	;# 
  7590  0811                     	;# 
  7591  0812                     	;# 
  7592  0813                     	;# 
  7593  0814                     	;# 
  7594  081A                     	;# 
  7595  081B                     	;# 
  7596  081C                     	;# 
  7597  081D                     	;# 
  7598  081E                     	;# 
  7599  081F                     	;# 
  7600  088C                     	;# 
  7601  088D                     	;# 
  7602  088E                     	;# 
  7603  088F                     	;# 
  7604  0890                     	;# 
  7605  0891                     	;# 
  7606  0892                     	;# 
  7607  0893                     	;# 
  7608  0895                     	;# 
  7609  0896                     	;# 
  7610  0897                     	;# 
  7611  0898                     	;# 
  7612  0899                     	;# 
  7613  089A                     	;# 
  7614  089B                     	;# 
  7615  090C                     	;# 
  7616  090E                     	;# 
  7617  090F                     	;# 
  7618  091F                     	;# 
  7619  091F                     	;# 
  7620  098F                     	;# 
  7621  098F                     	;# 
  7622  0990                     	;# 
  7623  0991                     	;# 
  7624  0992                     	;# 
  7625  0993                     	;# 
  7626  0994                     	;# 
  7627  0995                     	;# 
  7628  0996                     	;# 
  7629  0997                     	;# 
  7630  0E0F                     	;# 
  7631  0E10                     	;# 
  7632  0E11                     	;# 
  7633  0E12                     	;# 
  7634  0E13                     	;# 
  7635  0E14                     	;# 
  7636  0E15                     	;# 
  7637  0E16                     	;# 
  7638  0E17                     	;# 
  7639  0E18                     	;# 
  7640  0E19                     	;# 
  7641  0E1A                     	;# 
  7642  0E1B                     	;# 
  7643  0E1C                     	;# 
  7644  0E1D                     	;# 
  7645  0E1E                     	;# 
  7646  0E1F                     	;# 
  7647  0E20                     	;# 
  7648  0E21                     	;# 
  7649  0E22                     	;# 
  7650  0E23                     	;# 
  7651  0E24                     	;# 
  7652  0E25                     	;# 
  7653  0E26                     	;# 
  7654  0E27                     	;# 
  7655  0E28                     	;# 
  7656  0E29                     	;# 
  7657  0E2A                     	;# 
  7658  0E2B                     	;# 
  7659  0E2C                     	;# 
  7660  0E2D                     	;# 
  7661  0E2E                     	;# 
  7662  0E2F                     	;# 
  7663  0E30                     	;# 
  7664  0E31                     	;# 
  7665  0E32                     	;# 
  7666  0E33                     	;# 
  7667  0E34                     	;# 
  7668  0E35                     	;# 
  7669  0E36                     	;# 
  7670  0E37                     	;# 
  7671  0E8F                     	;# 
  7672  0E90                     	;# 
  7673  0E91                     	;# 
  7674  0E92                     	;# 
  7675  0E93                     	;# 
  7676  0E94                     	;# 
  7677  0E95                     	;# 
  7678  0E96                     	;# 
  7679  0E97                     	;# 
  7680  0E9C                     	;# 
  7681  0E9D                     	;# 
  7682  0E9E                     	;# 
  7683  0EA1                     	;# 
  7684  0EA2                     	;# 
  7685  0EA3                     	;# 
  7686  0EA4                     	;# 
  7687  0EA5                     	;# 
  7688  0EA9                     	;# 
  7689  0EAA                     	;# 
  7690  0EAB                     	;# 
  7691  0EAC                     	;# 
  7692  0EB1                     	;# 
  7693  0EB2                     	;# 
  7694  0EB3                     	;# 
  7695  0EB8                     	;# 
  7696  0EB9                     	;# 
  7697  0EBA                     	;# 
  7698  0EBB                     	;# 
  7699  0EBC                     	;# 
  7700  0EBD                     	;# 
  7701  0EBE                     	;# 
  7702  0EC3                     	;# 
  7703  0EC5                     	;# 
  7704  0EC6                     	;# 
  7705  0EC7                     	;# 
  7706  0EC8                     	;# 
  7707  0EC9                     	;# 
  7708  0ECA                     	;# 
  7709  0ECB                     	;# 
  7710  0ECC                     	;# 
  7711  0F10                     	;# 
  7712  0F11                     	;# 
  7713  0F12                     	;# 
  7714  0F13                     	;# 
  7715  0F14                     	;# 
  7716  0F15                     	;# 
  7717  0F16                     	;# 
  7718  0F17                     	;# 
  7719  0F18                     	;# 
  7720  0F19                     	;# 
  7721  0F1A                     	;# 
  7722  0F1B                     	;# 
  7723  0F1C                     	;# 
  7724  0F1D                     	;# 
  7725  0F1E                     	;# 
  7726  0F1F                     	;# 
  7727  0F20                     	;# 
  7728  0F21                     	;# 
  7729  0F22                     	;# 
  7730  0F23                     	;# 
  7731  0F24                     	;# 
  7732  0F25                     	;# 
  7733  0F26                     	;# 
  7734  0F27                     	;# 
  7735  0F28                     	;# 
  7736  0F29                     	;# 
  7737  0F2A                     	;# 
  7738  0F2B                     	;# 
  7739  0F2C                     	;# 
  7740  0F2D                     	;# 
  7741  0F2E                     	;# 
  7742  0F2F                     	;# 
  7743  0F30                     	;# 
  7744  0F31                     	;# 
  7745  0F32                     	;# 
  7746  0F38                     	;# 
  7747  0F39                     	;# 
  7748  0F3A                     	;# 
  7749  0F3B                     	;# 
  7750  0F3C                     	;# 
  7751  0F3D                     	;# 
  7752  0F3E                     	;# 
  7753  0F3F                     	;# 
  7754  0F40                     	;# 
  7755  0F41                     	;# 
  7756  0F43                     	;# 
  7757  0F44                     	;# 
  7758  0F45                     	;# 
  7759  0F46                     	;# 
  7760  0F47                     	;# 
  7761  0F48                     	;# 
  7762  0F49                     	;# 
  7763  0F4A                     	;# 
  7764  0F4B                     	;# 
  7765  0F4C                     	;# 
  7766  0F4E                     	;# 
  7767  0F4F                     	;# 
  7768  0F50                     	;# 
  7769  0F51                     	;# 
  7770  0F52                     	;# 
  7771  0F53                     	;# 
  7772  0F54                     	;# 
  7773  0F55                     	;# 
  7774  0F56                     	;# 
  7775  0F57                     	;# 
  7776  0F59                     	;# 
  7777  0F5A                     	;# 
  7778  0F5B                     	;# 
  7779  0F5C                     	;# 
  7780  0F5D                     	;# 
  7781  0F61                     	;# 
  7782  0F62                     	;# 
  7783  0F64                     	;# 
  7784  0F65                     	;# 
  7785  0F66                     	;# 
  7786  0F67                     	;# 
  7787  0F68                     	;# 
  7788  0F69                     	;# 
  7789  0F6A                     	;# 
  7790  0F6B                     	;# 
  7791  0F6C                     	;# 
  7792  0F6D                     	;# 
  7793  0FE4                     	;# 
  7794  0FE5                     	;# 
  7795  0FE6                     	;# 
  7796  0FE7                     	;# 
  7797  0FE8                     	;# 
  7798  0FE9                     	;# 
  7799  0FEA                     	;# 
  7800  0FEB                     	;# 
  7801  0FED                     	;# 
  7802  0FEE                     	;# 
  7803  0FEF                     	;# 
  7804  0000                     	;# 
  7805  0001                     	;# 
  7806  0002                     	;# 
  7807  0003                     	;# 
  7808  0004                     	;# 
  7809  0005                     	;# 
  7810  0006                     	;# 
  7811  0007                     	;# 
  7812  0008                     	;# 
  7813  0009                     	;# 
  7814  000A                     	;# 
  7815  000B                     	;# 
  7816  000C                     	;# 
  7817  000D                     	;# 
  7818  000E                     	;# 
  7819  000F                     	;# 
  7820  0010                     	;# 
  7821  0011                     	;# 
  7822  0012                     	;# 
  7823  0013                     	;# 
  7824  0014                     	;# 
  7825  0015                     	;# 
  7826  0016                     	;# 
  7827  0017                     	;# 
  7828  0018                     	;# 
  7829  0019                     	;# 
  7830  001A                     	;# 
  7831  001C                     	;# 
  7832  001C                     	;# 
  7833  001D                     	;# 
  7834  001D                     	;# 
  7835  001E                     	;# 
  7836  001F                     	;# 
  7837  008C                     	;# 
  7838  008C                     	;# 
  7839  008D                     	;# 
  7840  008E                     	;# 
  7841  008E                     	;# 
  7842  008F                     	;# 
  7843  0090                     	;# 
  7844  0090                     	;# 
  7845  0091                     	;# 
  7846  0093                     	;# 
  7847  0094                     	;# 
  7848  0095                     	;# 
  7849  0096                     	;# 
  7850  0097                     	;# 
  7851  0098                     	;# 
  7852  0099                     	;# 
  7853  009A                     	;# 
  7854  009B                     	;# 
  7855  009C                     	;# 
  7856  009D                     	;# 
  7857  009E                     	;# 
  7858  010C                     	;# 
  7859  010D                     	;# 
  7860  010E                     	;# 
  7861  010E                     	;# 
  7862  010F                     	;# 
  7863  0110                     	;# 
  7864  0110                     	;# 
  7865  0111                     	;# 
  7866  0112                     	;# 
  7867  0112                     	;# 
  7868  0113                     	;# 
  7869  0114                     	;# 
  7870  0114                     	;# 
  7871  0115                     	;# 
  7872  0116                     	;# 
  7873  0116                     	;# 
  7874  0117                     	;# 
  7875  0119                     	;# 
  7876  0119                     	;# 
  7877  0119                     	;# 
  7878  011A                     	;# 
  7879  011A                     	;# 
  7880  011A                     	;# 
  7881  011B                     	;# 
  7882  011B                     	;# 
  7883  011B                     	;# 
  7884  011B                     	;# 
  7885  011B                     	;# 
  7886  011C                     	;# 
  7887  011C                     	;# 
  7888  011C                     	;# 
  7889  011D                     	;# 
  7890  011D                     	;# 
  7891  011D                     	;# 
  7892  011E                     	;# 
  7893  011E                     	;# 
  7894  011E                     	;# 
  7895  011F                     	;# 
  7896  011F                     	;# 
  7897  011F                     	;# 
  7898  011F                     	;# 
  7899  011F                     	;# 
  7900  018C                     	;# 
  7901  018D                     	;# 
  7902  018E                     	;# 
  7903  018F                     	;# 
  7904  0190                     	;# 
  7905  0191                     	;# 
  7906  0192                     	;# 
  7907  0196                     	;# 
  7908  0197                     	;# 
  7909  0198                     	;# 
  7910  0199                     	;# 
  7911  019A                     	;# 
  7912  019B                     	;# 
  7913  019C                     	;# 
  7914  020C                     	;# 
  7915  020C                     	;# 
  7916  020D                     	;# 
  7917  020E                     	;# 
  7918  020F                     	;# 
  7919  020F                     	;# 
  7920  0210                     	;# 
  7921  0210                     	;# 
  7922  0211                     	;# 
  7923  0211                     	;# 
  7924  0212                     	;# 
  7925  0212                     	;# 
  7926  0213                     	;# 
  7927  0214                     	;# 
  7928  0215                     	;# 
  7929  0215                     	;# 
  7930  0216                     	;# 
  7931  0216                     	;# 
  7932  0217                     	;# 
  7933  0217                     	;# 
  7934  0218                     	;# 
  7935  0218                     	;# 
  7936  0219                     	;# 
  7937  021A                     	;# 
  7938  021B                     	;# 
  7939  021B                     	;# 
  7940  021C                     	;# 
  7941  021C                     	;# 
  7942  021D                     	;# 
  7943  021D                     	;# 
  7944  021E                     	;# 
  7945  021F                     	;# 
  7946  028C                     	;# 
  7947  028C                     	;# 
  7948  028D                     	;# 
  7949  028D                     	;# 
  7950  028E                     	;# 
  7951  028F                     	;# 
  7952  0290                     	;# 
  7953  0290                     	;# 
  7954  0291                     	;# 
  7955  0292                     	;# 
  7956  0292                     	;# 
  7957  0293                     	;# 
  7958  0293                     	;# 
  7959  0294                     	;# 
  7960  0295                     	;# 
  7961  0296                     	;# 
  7962  0296                     	;# 
  7963  0297                     	;# 
  7964  0298                     	;# 
  7965  0298                     	;# 
  7966  0299                     	;# 
  7967  0299                     	;# 
  7968  029A                     	;# 
  7969  029B                     	;# 
  7970  029C                     	;# 
  7971  029C                     	;# 
  7972  029D                     	;# 
  7973  030C                     	;# 
  7974  030C                     	;# 
  7975  030D                     	;# 
  7976  030E                     	;# 
  7977  030F                     	;# 
  7978  0310                     	;# 
  7979  0310                     	;# 
  7980  0311                     	;# 
  7981  0312                     	;# 
  7982  0313                     	;# 
  7983  0314                     	;# 
  7984  0314                     	;# 
  7985  0315                     	;# 
  7986  0316                     	;# 
  7987  0317                     	;# 
  7988  0318                     	;# 
  7989  0318                     	;# 
  7990  0319                     	;# 
  7991  031A                     	;# 
  7992  031B                     	;# 
  7993  031C                     	;# 
  7994  031C                     	;# 
  7995  031D                     	;# 
  7996  031E                     	;# 
  7997  031F                     	;# 
  7998  038C                     	;# 
  7999  038C                     	;# 
  8000  038D                     	;# 
  8001  038E                     	;# 
  8002  0390                     	;# 
  8003  0390                     	;# 
  8004  0391                     	;# 
  8005  0392                     	;# 
  8006  040C                     	;# 
  8007  040D                     	;# 
  8008  040E                     	;# 
  8009  040F                     	;# 
  8010  0410                     	;# 
  8011  0411                     	;# 
  8012  0416                     	;# 
  8013  0416                     	;# 
  8014  0417                     	;# 
  8015  0418                     	;# 
  8016  0418                     	;# 
  8017  0419                     	;# 
  8018  041A                     	;# 
  8019  041A                     	;# 
  8020  041B                     	;# 
  8021  041C                     	;# 
  8022  041C                     	;# 
  8023  041D                     	;# 
  8024  041E                     	;# 
  8025  041F                     	;# 
  8026  048C                     	;# 
  8027  048C                     	;# 
  8028  048D                     	;# 
  8029  048E                     	;# 
  8030  048F                     	;# 
  8031  048F                     	;# 
  8032  0490                     	;# 
  8033  0491                     	;# 
  8034  0492                     	;# 
  8035  0492                     	;# 
  8036  0493                     	;# 
  8037  0494                     	;# 
  8038  0495                     	;# 
  8039  0495                     	;# 
  8040  0496                     	;# 
  8041  0497                     	;# 
  8042  0498                     	;# 
  8043  0499                     	;# 
  8044  049A                     	;# 
  8045  049B                     	;# 
  8046  049C                     	;# 
  8047  049D                     	;# 
  8048  050C                     	;# 
  8049  050C                     	;# 
  8050  050D                     	;# 
  8051  050E                     	;# 
  8052  050F                     	;# 
  8053  050F                     	;# 
  8054  0510                     	;# 
  8055  0511                     	;# 
  8056  0512                     	;# 
  8057  0512                     	;# 
  8058  0513                     	;# 
  8059  0514                     	;# 
  8060  0515                     	;# 
  8061  0515                     	;# 
  8062  0516                     	;# 
  8063  0517                     	;# 
  8064  0518                     	;# 
  8065  0519                     	;# 
  8066  051A                     	;# 
  8067  051B                     	;# 
  8068  051C                     	;# 
  8069  051D                     	;# 
  8070  058C                     	;# 
  8071  058C                     	;# 
  8072  058D                     	;# 
  8073  058E                     	;# 
  8074  058F                     	;# 
  8075  058F                     	;# 
  8076  0590                     	;# 
  8077  0591                     	;# 
  8078  0592                     	;# 
  8079  0593                     	;# 
  8080  060C                     	;# 
  8081  060D                     	;# 
  8082  060E                     	;# 
  8083  060F                     	;# 
  8084  0610                     	;# 
  8085  0611                     	;# 
  8086  0612                     	;# 
  8087  0613                     	;# 
  8088  0614                     	;# 
  8089  0616                     	;# 
  8090  0617                     	;# 
  8091  0618                     	;# 
  8092  0619                     	;# 
  8093  061A                     	;# 
  8094  061B                     	;# 
  8095  061C                     	;# 
  8096  061D                     	;# 
  8097  061E                     	;# 
  8098  068C                     	;# 
  8099  068D                     	;# 
  8100  068E                     	;# 
  8101  068F                     	;# 
  8102  0690                     	;# 
  8103  0691                     	;# 
  8104  0692                     	;# 
  8105  0693                     	;# 
  8106  0694                     	;# 
  8107  070C                     	;# 
  8108  070D                     	;# 
  8109  070E                     	;# 
  8110  070F                     	;# 
  8111  0710                     	;# 
  8112  0711                     	;# 
  8113  0712                     	;# 
  8114  0713                     	;# 
  8115  0714                     	;# 
  8116  0716                     	;# 
  8117  0717                     	;# 
  8118  0718                     	;# 
  8119  0719                     	;# 
  8120  071A                     	;# 
  8121  071B                     	;# 
  8122  071C                     	;# 
  8123  071D                     	;# 
  8124  071E                     	;# 
  8125  0796                     	;# 
  8126  0797                     	;# 
  8127  0798                     	;# 
  8128  0799                     	;# 
  8129  079A                     	;# 
  8130  079B                     	;# 
  8131  080C                     	;# 
  8132  080D                     	;# 
  8133  080E                     	;# 
  8134  080F                     	;# 
  8135  0810                     	;# 
  8136  0811                     	;# 
  8137  0812                     	;# 
  8138  0813                     	;# 
  8139  0814                     	;# 
  8140  081A                     	;# 
  8141  081B                     	;# 
  8142  081C                     	;# 
  8143  081D                     	;# 
  8144  081E                     	;# 
  8145  081F                     	;# 
  8146  088C                     	;# 
  8147  088D                     	;# 
  8148  088E                     	;# 
  8149  088F                     	;# 
  8150  0890                     	;# 
  8151  0891                     	;# 
  8152  0892                     	;# 
  8153  0893                     	;# 
  8154  0895                     	;# 
  8155  0896                     	;# 
  8156  0897                     	;# 
  8157  0898                     	;# 
  8158  0899                     	;# 
  8159  089A                     	;# 
  8160  089B                     	;# 
  8161  090C                     	;# 
  8162  090E                     	;# 
  8163  090F                     	;# 
  8164  091F                     	;# 
  8165  091F                     	;# 
  8166  098F                     	;# 
  8167  098F                     	;# 
  8168  0990                     	;# 
  8169  0991                     	;# 
  8170  0992                     	;# 
  8171  0993                     	;# 
  8172  0994                     	;# 
  8173  0995                     	;# 
  8174  0996                     	;# 
  8175  0997                     	;# 
  8176  0E0F                     	;# 
  8177  0E10                     	;# 
  8178  0E11                     	;# 
  8179  0E12                     	;# 
  8180  0E13                     	;# 
  8181  0E14                     	;# 
  8182  0E15                     	;# 
  8183  0E16                     	;# 
  8184  0E17                     	;# 
  8185  0E18                     	;# 
  8186  0E19                     	;# 
  8187  0E1A                     	;# 
  8188  0E1B                     	;# 
  8189  0E1C                     	;# 
  8190  0E1D                     	;# 
  8191  0E1E                     	;# 
  8192  0E1F                     	;# 
  8193  0E20                     	;# 
  8194  0E21                     	;# 
  8195  0E22                     	;# 
  8196  0E23                     	;# 
  8197  0E24                     	;# 
  8198  0E25                     	;# 
  8199  0E26                     	;# 
  8200  0E27                     	;# 
  8201  0E28                     	;# 
  8202  0E29                     	;# 
  8203  0E2A                     	;# 
  8204  0E2B                     	;# 
  8205  0E2C                     	;# 
  8206  0E2D                     	;# 
  8207  0E2E                     	;# 
  8208  0E2F                     	;# 
  8209  0E30                     	;# 
  8210  0E31                     	;# 
  8211  0E32                     	;# 
  8212  0E33                     	;# 
  8213  0E34                     	;# 
  8214  0E35                     	;# 
  8215  0E36                     	;# 
  8216  0E37                     	;# 
  8217  0E8F                     	;# 
  8218  0E90                     	;# 
  8219  0E91                     	;# 
  8220  0E92                     	;# 
  8221  0E93                     	;# 
  8222  0E94                     	;# 
  8223  0E95                     	;# 
  8224  0E96                     	;# 
  8225  0E97                     	;# 
  8226  0E9C                     	;# 
  8227  0E9D                     	;# 
  8228  0E9E                     	;# 
  8229  0EA1                     	;# 
  8230  0EA2                     	;# 
  8231  0EA3                     	;# 
  8232  0EA4                     	;# 
  8233  0EA5                     	;# 
  8234  0EA9                     	;# 
  8235  0EAA                     	;# 
  8236  0EAB                     	;# 
  8237  0EAC                     	;# 
  8238  0EB1                     	;# 
  8239  0EB2                     	;# 
  8240  0EB3                     	;# 
  8241  0EB8                     	;# 
  8242  0EB9                     	;# 
  8243  0EBA                     	;# 
  8244  0EBB                     	;# 
  8245  0EBC                     	;# 
  8246  0EBD                     	;# 
  8247  0EBE                     	;# 
  8248  0EC3                     	;# 
  8249  0EC5                     	;# 
  8250  0EC6                     	;# 
  8251  0EC7                     	;# 
  8252  0EC8                     	;# 
  8253  0EC9                     	;# 
  8254  0ECA                     	;# 
  8255  0ECB                     	;# 
  8256  0ECC                     	;# 
  8257  0F10                     	;# 
  8258  0F11                     	;# 
  8259  0F12                     	;# 
  8260  0F13                     	;# 
  8261  0F14                     	;# 
  8262  0F15                     	;# 
  8263  0F16                     	;# 
  8264  0F17                     	;# 
  8265  0F18                     	;# 
  8266  0F19                     	;# 
  8267  0F1A                     	;# 
  8268  0F1B                     	;# 
  8269  0F1C                     	;# 
  8270  0F1D                     	;# 
  8271  0F1E                     	;# 
  8272  0F1F                     	;# 
  8273  0F20                     	;# 
  8274  0F21                     	;# 
  8275  0F22                     	;# 
  8276  0F23                     	;# 
  8277  0F24                     	;# 
  8278  0F25                     	;# 
  8279  0F26                     	;# 
  8280  0F27                     	;# 
  8281  0F28                     	;# 
  8282  0F29                     	;# 
  8283  0F2A                     	;# 
  8284  0F2B                     	;# 
  8285  0F2C                     	;# 
  8286  0F2D                     	;# 
  8287  0F2E                     	;# 
  8288  0F2F                     	;# 
  8289  0F30                     	;# 
  8290  0F31                     	;# 
  8291  0F32                     	;# 
  8292  0F38                     	;# 
  8293  0F39                     	;# 
  8294  0F3A                     	;# 
  8295  0F3B                     	;# 
  8296  0F3C                     	;# 
  8297  0F3D                     	;# 
  8298  0F3E                     	;# 
  8299  0F3F                     	;# 
  8300  0F40                     	;# 
  8301  0F41                     	;# 
  8302  0F43                     	;# 
  8303  0F44                     	;# 
  8304  0F45                     	;# 
  8305  0F46                     	;# 
  8306  0F47                     	;# 
  8307  0F48                     	;# 
  8308  0F49                     	;# 
  8309  0F4A                     	;# 
  8310  0F4B                     	;# 
  8311  0F4C                     	;# 
  8312  0F4E                     	;# 
  8313  0F4F                     	;# 
  8314  0F50                     	;# 
  8315  0F51                     	;# 
  8316  0F52                     	;# 
  8317  0F53                     	;# 
  8318  0F54                     	;# 
  8319  0F55                     	;# 
  8320  0F56                     	;# 
  8321  0F57                     	;# 
  8322  0F59                     	;# 
  8323  0F5A                     	;# 
  8324  0F5B                     	;# 
  8325  0F5C                     	;# 
  8326  0F5D                     	;# 
  8327  0F61                     	;# 
  8328  0F62                     	;# 
  8329  0F64                     	;# 
  8330  0F65                     	;# 
  8331  0F66                     	;# 
  8332  0F67                     	;# 
  8333  0F68                     	;# 
  8334  0F69                     	;# 
  8335  0F6A                     	;# 
  8336  0F6B                     	;# 
  8337  0F6C                     	;# 
  8338  0F6D                     	;# 
  8339  0FE4                     	;# 
  8340  0FE5                     	;# 
  8341  0FE6                     	;# 
  8342  0FE7                     	;# 
  8343  0FE8                     	;# 
  8344  0FE9                     	;# 
  8345  0FEA                     	;# 
  8346  0FEB                     	;# 
  8347  0FED                     	;# 
  8348  0FEE                     	;# 
  8349  0FEF                     	;# 
  8350                           
  8351                           	psect	idataBANK0
  8352  0002                     __pidataBANK0:
  8353                           
  8354                           ;initializer for _updateLCD
  8355  0002  3401               	retlw	1
  8356                           
  8357                           ;initializer for _NREG
  8358  0003  3419               	retlw	25
  8359                           
  8360                           	psect	idataBANK1
  8361  102B                     __pidataBANK1:
  8362                           
  8363                           ;initializer for _alarmPWMStart
  8364  102B  34FF               	retlw	255
  8365  102C  34FF               	retlw	255
  8366  102D  34FF               	retlw	255
  8367                           
  8368                           ;initializer for _prevLumLevel
  8369  102E  34FF               	retlw	255
  8370  102F  34FF               	retlw	255
  8371                           
  8372                           ;initializer for _prevTemp
  8373  1030  34FF               	retlw	255
  8374  1031  34FF               	retlw	255
  8375                           
  8376                           ;initializer for _TALA
  8377  1032  3405               	retlw	5
  8378                           
  8379                           ;initializer for _PMON
  8380  1033  3403               	retlw	3
  8381                           
  8382                           	psect	stringtext1
  8383  1800                     __pstringtext1:
  8384  1800                     _commands:
  8385  1800  343B               	retlw	low _cmd_rc
  8386  1801  3413               	retlw	high _cmd_rc
  8387  1802  34C0               	retlw	192
  8388  1803  347A               	retlw	low _cmd_sc
  8389  1804  3415               	retlw	high _cmd_sc
  8390  1805  34C1               	retlw	193
  8391  1806  348C               	retlw	low _cmd_rtl
  8392  1807  3412               	retlw	high _cmd_rtl
  8393  1808  34C2               	retlw	194
  8394  1809  3460               	retlw	low _cmd_rp
  8395  180A  3413               	retlw	high _cmd_rp
  8396  180B  34C3               	retlw	195
  8397  180C  3450               	retlw	low _cmd_mmp
  8398  180D  3408               	retlw	high _cmd_mmp
  8399  180E  34C4               	retlw	196
  8400  180F  345F               	retlw	low _cmd_mta
  8401  1810  3411               	retlw	high _cmd_mta
  8402  1811  34C5               	retlw	197
  8403  1812  34FA               	retlw	low _cmd_ra
  8404  1813  3415               	retlw	high _cmd_ra
  8405  1814  34C6               	retlw	198
  8406  1815  347F               	retlw	low _cmd_dac
  8407  1816  3416               	retlw	high _cmd_dac
  8408  1817  34C7               	retlw	199
  8409  1818  3466               	retlw	low _cmd_dtl
  8410  1819  3414               	retlw	high _cmd_dtl
  8411  181A  34C8               	retlw	200
  8412  181B  3405               	retlw	low _cmd_aa
  8413  181C  3415               	retlw	high _cmd_aa
  8414  181D  34C9               	retlw	201
  8415  181E  34AB               	retlw	low _cmd_ir
  8416  181F  3413               	retlw	high _cmd_ir
  8417  1820  34CA               	retlw	202
  8418  1821  3478               	retlw	low _cmd_trc
  8419  1822  340B               	retlw	high _cmd_trc
  8420  1823  34CB               	retlw	203
  8421  1824  3486               	retlw	low _cmd_tri
  8422  1825  340A               	retlw	high _cmd_tri
  8423  1826  34CC               	retlw	204
  8424  1827                     __end_of_commands:
  8425                           
  8426                           	psect	stringtext2
  8427  1836                     __pstringtext2:
  8428  1836                     _dpowers:
  8429  1836  3401               	retlw	1
  8430  1837  3400               	retlw	0
  8431  1838  340A               	retlw	10
  8432  1839  3400               	retlw	0
  8433  183A  3464               	retlw	100
  8434  183B  3400               	retlw	0
  8435  183C  34E8               	retlw	232
  8436  183D  3403               	retlw	3
  8437  183E  3410               	retlw	16
  8438  183F  3427               	retlw	39
  8439  1840                     __end_of_dpowers:
  8440                           
  8441                           	psect	nvBANK1
  8442  00DB                     __pnvBANK1:
  8443  00DB                     _INT_InterruptHandler:
  8444  00DB                     	ds	2
  8445  00DD                     _TMR5_InterruptHandler:
  8446  00DD                     	ds	2
  8447  00DF                     _timer5ReloadVal:
  8448  00DF                     	ds	2
  8449  00E1                     _TMR1_InterruptHandler:
  8450  00E1                     	ds	2
  8451  00E3                     _timer1ReloadVal:
  8452  00E3                     	ds	2
  8453  00E5                     _eusartTxBufferRemaining:
  8454  00E5                     	ds	1
  8455                           
  8456                           	psect	nvBANK2
  8457  0134                     __pnvBANK2:
  8458  0134                     _EUSART_RxDefaultInterruptHandler:
  8459  0134                     	ds	2
  8460  0136                     _EUSART_TxDefaultInterruptHandler:
  8461  0136                     	ds	2
  8462  0013                     _TRISCbits	set	19
  8463  000E                     _PORTCbits	set	14
  8464  0016                     _LATAbits	set	22
  8465  000B                     _INTCONbits	set	11
  8466  0014                     _TRISD	set	20
  8467  0013                     _TRISC	set	19
  8468  0012                     _TRISB	set	18
  8469  0011                     _TRISA	set	17
  8470  0015                     _TRISE	set	21
  8471  0018                     _LATC	set	24
  8472  0017                     _LATB	set	23
  8473  0016                     _LATA	set	22
  8474  0019                     _LATD	set	25
  8475  001A                     _LATE	set	26
  8476  0094                     _ADCON1bits	set	148
  8477  008E                     _ADPREVL	set	142
  8478  008F                     _ADPREVH	set	143
  8479  0097                     _ADSTATbits	set	151
  8480  0090                     _ADACCL	set	144
  8481  0091                     _ADACCH	set	145
  8482  0095                     _ADCON2bits	set	149
  8483  009C                     _ADPRE	set	156
  8484  0096                     _ADCON3bits	set	150
  8485  008C                     _ADRESL	set	140
  8486  008D                     _ADRESH	set	141
  8487  0093                     _ADCON0bits	set	147
  8488  009D                     _ADACQ	set	157
  8489  0093                     _ADCON0	set	147
  8490  0098                     _ADCLK	set	152
  8491  0099                     _ADACT	set	153
  8492  009A                     _ADREF	set	154
  8493  0097                     _ADSTAT	set	151
  8494  0096                     _ADCON3	set	150
  8495  0095                     _ADCON2	set	149
  8496  0094                     _ADCON1	set	148
  8497  009B                     _ADCAP	set	155
  8498  009E                     _ADPCH	set	158
  8499  0119                     _RC1REG	set	281
  8500  011D                     _RC1STAbits	set	285
  8501  011A                     _TX1REG	set	282
  8502  011E                     _TX1STAbits	set	286
  8503  011C                     _SP1BRGH	set	284
  8504  011B                     _SP1BRGL	set	283
  8505  011E                     _TX1STA	set	286
  8506  011D                     _RC1STA	set	285
  8507  011F                     _BAUD1CON	set	287
  8508  0116                     _ADERRL	set	278
  8509  0117                     _ADERRH	set	279
  8510  0114                     _ADFLTRL	set	276
  8511  0115                     _ADFLTRH	set	277
  8512  010C                     _ADCNT	set	268
  8513  010D                     _ADRPT	set	269
  8514  0113                     _ADSTPTH	set	275
  8515  0112                     _ADSTPTL	set	274
  8516  0111                     _ADUTHH	set	273
  8517  0110                     _ADUTHL	set	272
  8518  010F                     _ADLTHH	set	271
  8519  010E                     _ADLTHL	set	270
  8520  018E                     _SSP1MSK	set	398
  8521  018D                     _SSP1ADD	set	397
  8522  018F                     _SSP1STAT	set	399
  8523  0191                     _SSP1CON2	set	401
  8524  0190                     _SSP1CON1bits	set	400
  8525  018C                     _SSP1BUF	set	396
  8526  018F                     _SSP1STATbits	set	399
  8527  0191                     _SSP1CON2bits	set	401
  8528  0190                     _SSP1CON1	set	400
  8529  021F                     _CCPTMRS1bits	set	543
  8530  021B                     _T5GCONbits	set	539
  8531  021A                     _T5CONbits	set	538
  8532  021A                     _T5CON	set	538
  8533  0218                     _TMR5L	set	536
  8534  0219                     _TMR5H	set	537
  8535  021D                     _T5CLK	set	541
  8536  021C                     _T5GATE	set	540
  8537  021B                     _T5GCON	set	539
  8538  020F                     _T1GCONbits	set	527
  8539  020E                     _T1CONbits	set	526
  8540  020E                     _T1CON	set	526
  8541  020C                     _TMR1L	set	524
  8542  020D                     _TMR1H	set	525
  8543  0211                     _T1CLK	set	529
  8544  0210                     _T1GATE	set	528
  8545  020F                     _T1GCON	set	527
  8546  028D                     _PR2	set	653
  8547  028C                     _TMR2	set	652
  8548  028E                     _T2CONbits	set	654
  8549  0291                     _T2RSTbits	set	657
  8550  028F                     _T2HLTbits	set	655
  8551  028E                     _T2CON	set	654
  8552  028C                     _T2TMR	set	652
  8553  028D                     _T2PR	set	653
  8554  0291                     _T2RST	set	657
  8555  028F                     _T2HLT	set	655
  8556  0290                     _T2CLKCON	set	656
  8557  038C                     _PWM6DCL	set	908
  8558  038D                     _PWM6DCH	set	909
  8559  038E                     _PWM6CON	set	910
  8560  1C77                     _PWM6EN	set	7287
  8561  0710                     _PIR4bits	set	1808
  8562  071A                     _PIE4bits	set	1818
  8563  070C                     _PIR0bits	set	1804
  8564  0716                     _PIE0bits	set	1814
  8565  0719                     _PIE3bits	set	1817
  8566  070F                     _PIR3bits	set	1807
  8567  079B                     _PMD5	set	1947
  8568  079A                     _PMD4	set	1946
  8569  0799                     _PMD3	set	1945
  8570  0798                     _PMD2	set	1944
  8571  0797                     _PMD1	set	1943
  8572  0796                     _PMD0	set	1942
  8573  081F                     _NVMCON2	set	2079
  8574  081C                     _NVMDATL	set	2076
  8575  081D                     _NVMDATH	set	2077
  8576  081E                     _NVMCON1bits	set	2078
  8577  081B                     _NVMADRH	set	2075
  8578  081A                     _NVMADRL	set	2074
  8579  0892                     _OSCTUNE	set	2194
  8580  0893                     _OSCFRQ	set	2195
  8581  0891                     _OSCEN	set	2193
  8582  088F                     _OSCCON3	set	2191
  8583  088D                     _OSCCON1	set	2189
  8584  0EC6                     _SSP1DATPPS	set	3782
  8585  0EC5                     _SSP1CLKPPS	set	3781
  8586  0ECB                     _RXPPS	set	3787
  8587  0E90                     _INTPPS	set	3728
  8588  0F26                     _RC6PPS	set	3878
  8589  0F16                     _RA6PPS	set	3862
  8590  0F24                     _RC4PPS	set	3876
  8591  0F23                     _RC3PPS	set	3875
  8592  0F67                     _SLRCONE	set	3943
  8593  0F5C                     _SLRCOND	set	3932
  8594  0F51                     _SLRCONC	set	3921
  8595  0F46                     _SLRCONB	set	3910
  8596  0F3B                     _SLRCONA	set	3899
  8597  0F5B                     _ODCOND	set	3931
  8598  0F50                     _ODCONC	set	3920
  8599  0F45                     _ODCONB	set	3909
  8600  0F3A                     _ODCONA	set	3898
  8601  0F66                     _ODCONE	set	3942
  8602  0F4F                     _WPUC	set	3919
  8603  0F39                     _WPUA	set	3897
  8604  0F44                     _WPUB	set	3908
  8605  0F65                     _WPUE	set	3941
  8606  0F5A                     _WPUD	set	3930
  8607  0F38                     _ANSELA	set	3896
  8608  0F64                     _ANSELE	set	3940
  8609  0F43                     _ANSELB	set	3907
  8610  0F4E                     _ANSELC	set	3918
  8611  0F59                     _ANSELD	set	3929
  8612  7A7C                     _WPUC4	set	31356
  8613  7A7B                     _WPUC3	set	31355
  8614                           
  8615                           	psect	stringtext3
  8616  1827                     __pstringtext3:
  8617  1827                     STR_1:
  8618  1827  3425               	retlw	37	;'%'
  8619  1828  3430               	retlw	48	;'0'
  8620  1829  3432               	retlw	50	;'2'
  8621  182A  3464               	retlw	100	;'d'
  8622  182B  343A               	retlw	58	;':'
  8623  182C  3425               	retlw	37	;'%'
  8624  182D  3430               	retlw	48	;'0'
  8625  182E  3432               	retlw	50	;'2'
  8626  182F  3464               	retlw	100	;'d'
  8627  1830  343A               	retlw	58	;':'
  8628  1831  3425               	retlw	37	;'%'
  8629  1832  3430               	retlw	48	;'0'
  8630  1833  3432               	retlw	50	;'2'
  8631  1834  3464               	retlw	100	;'d'
  8632  1835  3400               	retlw	0
  8633                           
  8634                           	psect	stringtext4
  8635  1840                     __pstringtext4:
  8636  1840                     STR_3:
  8637  1840  3425               	retlw	37	;'%'
  8638  1841  3430               	retlw	48	;'0'
  8639  1842  3432               	retlw	50	;'2'
  8640  1843  3464               	retlw	100	;'d'
  8641  1844  3420               	retlw	32	;' '
  8642  1845  3443               	retlw	67	;'C'
  8643  1846  3400               	retlw	0
  8644                           
  8645                           	psect	stringtext5
  8646  1847                     __pstringtext5:
  8647  1847                     STR_5:
  8648  1847  344C               	retlw	76	;'L'
  8649  1848  3420               	retlw	32	;' '
  8650  1849  3425               	retlw	37	;'%'
  8651  184A  3464               	retlw	100	;'d'
  8652  184B  3400               	retlw	0
  8653                           
  8654                           	psect	stringtext6
  8655  184C                     __pstringtext6:
  8656  184C                     STR_7:
  8657  184C  3443               	retlw	67	;'C'
  8658  184D  3454               	retlw	84	;'T'
  8659  184E  344C               	retlw	76	;'L'
  8660  184F  3400               	retlw	0
  8661                           
  8662                           	psect	stringtext7
  8663  0000                     __pstringtext7:
  8664  1840                     
  8665                           	psect	cinit
  8666  0060                     start_initialization:	
  8667                           ; #config settings
  8668                           
  8669  0060                     __initialization:
  8670                           
  8671                           ; Initialize objects allocated to BANK0
  8672  0060  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  8673  0063  00EE               	movwf	__pdataBANK0& (0+127)
  8674  0064  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  8675  0067  00EF               	movwf	(__pdataBANK0+1)& (0+127)
  8676                           
  8677                           ; Initialize objects allocated to BANK1
  8678  0068  302B               	movlw	low __pidataBANK1
  8679  0069  0084               	movwf	4
  8680  006A  3090               	movlw	(high __pidataBANK1)| (0+128)
  8681  006B  0085               	movwf	5
  8682  006C  30E6               	movlw	low __pdataBANK1
  8683  006D  0086               	movwf	6
  8684  006E  3000               	movlw	high __pdataBANK1
  8685  006F  0087               	movwf	7
  8686  0070  3009               	movlw	9
  8687  0071  319F  27C5  3180   	fcall	init_ram
  8688                           
  8689                           ; Clear objects allocated to COMMON
  8690  0074  01FD               	clrf	__pbssCOMMON& (0+127)
  8691                           
  8692                           ; Clear objects allocated to BANK0
  8693  0075  305F               	movlw	low __pbssBANK0
  8694  0076  0084               	movwf	4
  8695  0077  3000               	movlw	high __pbssBANK0
  8696  0078  0085               	movwf	5
  8697  0079  300F               	movlw	15
  8698  007A  319F  27BF  3180   	fcall	clear_ram0
  8699                           
  8700                           ; Clear objects allocated to BANK1
  8701  007D  30C0               	movlw	low __pbssBANK1
  8702  007E  0084               	movwf	4
  8703  007F  3000               	movlw	high __pbssBANK1
  8704  0080  0085               	movwf	5
  8705  0081  301B               	movlw	27
  8706  0082  319F  27BF  3180   	fcall	clear_ram0
  8707                           
  8708                           ; Clear objects allocated to BANK2
  8709  0085  3020               	movlw	low __pbssBANK2
  8710  0086  0084               	movwf	4
  8711  0087  3001               	movlw	high __pbssBANK2
  8712  0088  0085               	movwf	5
  8713  0089  3014               	movlw	20
  8714  008A  319F  27BF  3180   	fcall	clear_ram0
  8715                           
  8716                           ; Clear objects allocated to BANK3
  8717  008D  30A0               	movlw	low __pbssBANK3
  8718  008E  0084               	movwf	4
  8719  008F  3001               	movlw	high __pbssBANK3
  8720  0090  0085               	movwf	5
  8721  0091  3040               	movlw	64
  8722  0092  319F  27BF  3180   	fcall	clear_ram0
  8723                           
  8724                           ; Clear objects allocated to BANK4
  8725  0095  3020               	movlw	low __pbssBANK4
  8726  0096  0084               	movwf	4
  8727  0097  3002               	movlw	high __pbssBANK4
  8728  0098  0085               	movwf	5
  8729  0099  3040               	movlw	64
  8730  009A  319F  27BF  3180   	fcall	clear_ram0
  8731  009D                     end_of_initialization:	
  8732                           ;End of C runtime variable initialization code
  8733                           
  8734  009D                     __end_of__initialization:
  8735  009D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8736  009E  0020               	movlb	0
  8737  009F  3180  28A1         	ljmp	_main	;jump to C main() function
  8738                           
  8739                           	psect	bssCOMMON
  8740  007D                     __pbssCOMMON:
  8741  007D                     _iwrite:
  8742  007D                     	ds	1
  8743                           
  8744                           	psect	bssBANK0
  8745  005F                     __pbssBANK0:
  8746  005F                     _t:
  8747  005F                     	ds	3
  8748  0062                     _modeFlag:
  8749  0062                     	ds	2
  8750  0064                     _editingClockAlarm:
  8751  0064                     	ds	2
  8752  0066                     _iread:
  8753  0066                     	ds	1
  8754  0067                     _flagS1pushed:
  8755  0067                     	ds	1
  8756  0068                     _lumLevel:
  8757  0068                     	ds	1
  8758  0069                     _temp:
  8759  0069                     	ds	1
  8760  006A                     _ALAF:
  8761  006A                     	ds	1
  8762  006B                     _eusartRxHead:
  8763  006B                     	ds	1
  8764  006C                     _eusartTxTail:
  8765  006C                     	ds	1
  8766  006D                     _eusartTxHead:
  8767  006D                     	ds	1
  8768                           
  8769                           	psect	dataBANK0
  8770  006E                     __pdataBANK0:
  8771  006E                     _updateLCD:
  8772  006E                     	ds	1
  8773  006F                     _NREG:
  8774  006F                     	ds	1
  8775                           
  8776                           	psect	bssBANK1
  8777  00C0                     __pbssBANK1:
  8778  00C0                     _clkAlarm:
  8779  00C0                     	ds	4
  8780  00C4                     update_menuLCD@F12927:
  8781  00C4                     	ds	3
  8782  00C7                     _lumAlarm:
  8783  00C7                     	ds	3
  8784  00CA                     _tempAlarm:
  8785  00CA                     	ds	3
  8786  00CD                     _dimingLed:
  8787  00CD                     	ds	2
  8788  00CF                     _i2c1_driver_i2cISR:
  8789  00CF                     	ds	2
  8790  00D1                     _i2c1_driver_busCollisionISR:
  8791  00D1                     	ds	2
  8792  00D3                     _flagNr:
  8793  00D3                     	ds	1
  8794  00D4                     _nr:
  8795  00D4                     	ds	1
  8796  00D5                     _PWM_on:
  8797  00D5                     	ds	1
  8798  00D6                     _editingLumAlarm:
  8799  00D6                     	ds	1
  8800  00D7                     _editingTempAlarm:
  8801  00D7                     	ds	1
  8802  00D8                     _S1_Value:
  8803  00D8                     	ds	1
  8804  00D9                     _eusartRxCount:
  8805  00D9                     	ds	1
  8806  00DA                     _eusartRxTail:
  8807  00DA                     	ds	1
  8808                           
  8809                           	psect	dataBANK1
  8810  00E6                     __pdataBANK1:
  8811  00E6                     _alarmPWMStart:
  8812  00E6                     	ds	3
  8813  00E9                     _prevLumLevel:
  8814  00E9                     	ds	2
  8815  00EB                     _prevTemp:
  8816  00EB                     	ds	2
  8817  00ED                     _TALA:
  8818  00ED                     	ds	1
  8819  00EE                     _PMON:
  8820  00EE                     	ds	1
  8821                           
  8822                           	psect	bssBANK2
  8823  0120                     __pbssBANK2:
  8824  0120                     main@F13077:
  8825  0120                     	ds	20
  8826                           
  8827                           	psect	bssBANK3
  8828  01A0                     __pbssBANK3:
  8829  01A0                     _eusartTxBuffer:
  8830  01A0                     	ds	64
  8831                           
  8832                           	psect	bssBANK4
  8833  0220                     __pbssBANK4:
  8834  0220                     _eusartRxBuffer:
  8835  0220                     	ds	64
  8836                           
  8837                           	psect	inittext
  8838  1FC5                     init_ram:
  8839  1FC5  00FE               	movwf	btemp
  8840  1FC6                     initloop:
  8841  1FC6  0012               	moviw fsr0++
  8842  1FC7  001E               	movwi fsr1++
  8843  1FC8  0BFE               	decfsz	btemp,f
  8844  1FC9  2FC6               	goto	initloop
  8845  1FCA  3400               	retlw	0
  8846                           
  8847                           	psect	clrtext
  8848  1FBF                     clear_ram0:	
  8849                           ;	Called with FSR0 containing the base address, and
  8850                           ;	WREG with the size to clear
  8851                           
  8852  1FBF  0064               	clrwdt	;clear the watchdog before getting into this loop
  8853  1FC0                     clrloop0:
  8854  1FC0  0180               	clrf	0	;clear RAM location pointed to by FSR
  8855  1FC1  3101               	addfsr 0,1
  8856  1FC2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8857  1FC3  2FC0               	goto	clrloop0	;have we reached the end yet?
  8858  1FC4  3400               	retlw	0	;all done for this memory range, return
  8859                           
  8860                           	psect	cstackBANK1
  8861  00A0                     __pcstackBANK1:
  8862  00A0                     main@buff:
  8863                           
  8864                           ; 20 bytes @ 0x0
  8865  00A0                     	ds	20
  8866  00B4                     _main$3687:
  8867                           
  8868                           ; 2 bytes @ 0x14
  8869  00B4                     	ds	2
  8870  00B6                     main@checkSumAux:
  8871                           
  8872                           ; 1 bytes @ 0x16
  8873  00B6                     	ds	1
  8874  00B7                     main@notInit:
  8875                           
  8876                           ; 1 bytes @ 0x17
  8877  00B7                     	ds	1
  8878  00B8                     main@corrupted:
  8879                           
  8880                           ; 1 bytes @ 0x18
  8881  00B8                     	ds	1
  8882  00B9                     main@i:
  8883                           
  8884                           ; 2 bytes @ 0x19
  8885  00B9                     	ds	2
  8886  00BB                     main@i_2704:
  8887                           
  8888                           ; 2 bytes @ 0x1B
  8889  00BB                     	ds	2
  8890  00BD                     main@c:
  8891                           
  8892                           ; 1 bytes @ 0x1D
  8893  00BD                     	ds	1
  8894  00BE                     main@n:
  8895                           
  8896                           ; 2 bytes @ 0x1E
  8897  00BE                     	ds	2
  8898                           
  8899                           	psect	cstackCOMMON
  8900  0070                     __pcstackCOMMON:
  8901  0070                     ?_isdigit:
  8902  0070                     ?_i2c1_driver_open:	
  8903                           ; 1 bit 
  8904                           
  8905  0070                     ?_PMD_Initialize:	
  8906                           ; 1 bit 
  8907                           
  8908  0070                     ?_OSCILLATOR_Initialize:	
  8909                           ; 1 bytes @ 0x0
  8910                           
  8911  0070                     ?_PWM6_Initialize:	
  8912                           ; 1 bytes @ 0x0
  8913                           
  8914  0070                     ?_ADCC_Initialize:	
  8915                           ; 1 bytes @ 0x0
  8916                           
  8917  0070                     ?_TMR5_Initialize:	
  8918                           ; 1 bytes @ 0x0
  8919                           
  8920  0070                     ?_TMR2_Initialize:	
  8921                           ; 1 bytes @ 0x0
  8922                           
  8923  0070                     ?_TMR1_Initialize:	
  8924                           ; 1 bytes @ 0x0
  8925                           
  8926  0070                     ?_EXT_INT_Initialize:	
  8927                           ; 1 bytes @ 0x0
  8928                           
  8929  0070                     ?_EUSART_Initialize:	
  8930                           ; 1 bytes @ 0x0
  8931                           
  8932  0070                     ?_INT_ISR:	
  8933                           ; 1 bytes @ 0x0
  8934                           
  8935  0070                     ??_INT_ISR:	
  8936                           ; 1 bytes @ 0x0
  8937                           
  8938  0070                     ?_TMR5_ISR:	
  8939                           ; 1 bytes @ 0x0
  8940                           
  8941  0070                     ?_TMR1_ISR:	
  8942                           ; 1 bytes @ 0x0
  8943                           
  8944  0070                     ?_TMR1_DefaultInterruptHandler:	
  8945                           ; 1 bytes @ 0x0
  8946                           
  8947  0070                     ??_TMR1_DefaultInterruptHandler:	
  8948                           ; 1 bytes @ 0x0
  8949                           
  8950  0070                     ?_TMR5_DefaultInterruptHandler:	
  8951                           ; 1 bytes @ 0x0
  8952                           
  8953  0070                     ??_TMR5_DefaultInterruptHandler:	
  8954                           ; 1 bytes @ 0x0
  8955                           
  8956  0070                     ?_INT_CallBack:	
  8957                           ; 1 bytes @ 0x0
  8958                           
  8959  0070                     ??_INT_CallBack:	
  8960                           ; 1 bytes @ 0x0
  8961                           
  8962  0070                     ?_EUSART_Receive_ISR:	
  8963                           ; 1 bytes @ 0x0
  8964                           
  8965  0070                     ??_EUSART_Receive_ISR:	
  8966                           ; 1 bytes @ 0x0
  8967                           
  8968  0070                     ?_EUSART_Transmit_ISR:	
  8969                           ; 1 bytes @ 0x0
  8970                           
  8971  0070                     ??_EUSART_Transmit_ISR:	
  8972                           ; 1 bytes @ 0x0
  8973                           
  8974  0070                     ?_ReadI2C:	
  8975                           ; 1 bytes @ 0x0
  8976                           
  8977  0070                     ??_ReadI2C:	
  8978                           ; 1 bytes @ 0x0
  8979                           
  8980  0070                     ?_WriteI2C:	
  8981                           ; 1 bytes @ 0x0
  8982                           
  8983  0070                     ?_PIN_MANAGER_Initialize:	
  8984                           ; 1 bytes @ 0x0
  8985                           
  8986  0070                     ?_SYSTEM_Initialize:	
  8987                           ; 1 bytes @ 0x0
  8988                           
  8989  0070                     ?_INTERRUPT_InterruptManager:	
  8990                           ; 1 bytes @ 0x0
  8991                           
  8992  0070                     ?_TMR1_WriteTimer:	
  8993                           ; 1 bytes @ 0x0
  8994                           
  8995  0070                     ?_TMR5_StartTimer:	
  8996                           ; 1 bytes @ 0x0
  8997                           
  8998  0070                     ?_TMR5_StopTimer:	
  8999                           ; 1 bytes @ 0x0
  9000                           
  9001  0070                     ?_TMR5_WriteTimer:	
  9002                           ; 1 bytes @ 0x0
  9003                           
  9004  0070                     ?_TMR2_Start:	
  9005                           ; 1 bytes @ 0x0
  9006                           
  9007  0070                     ?_TMR2_StartTimer:	
  9008                           ; 1 bytes @ 0x0
  9009                           
  9010  0070                     ?_TMR2_Stop:	
  9011                           ; 1 bytes @ 0x0
  9012                           
  9013  0070                     ?_TMR2_StopTimer:	
  9014                           ; 1 bytes @ 0x0
  9015                           
  9016  0070                     ?_INT_DefaultInterruptHandler:	
  9017                           ; 1 bytes @ 0x0
  9018                           
  9019  0070                     ??_INT_DefaultInterruptHandler:	
  9020                           ; 1 bytes @ 0x0
  9021                           
  9022  0070                     ?_EUSART_is_rx_ready:	
  9023                           ; 1 bytes @ 0x0
  9024                           
  9025  0070                     ?_EUSART_Read:	
  9026                           ; 1 bytes @ 0x0
  9027                           
  9028  0070                     ?_EUSART_Write:	
  9029                           ; 1 bytes @ 0x0
  9030                           
  9031  0070                     ?_getch:	
  9032                           ; 1 bytes @ 0x0
  9033                           
  9034  0070                     ?_putch:	
  9035                           ; 1 bytes @ 0x0
  9036                           
  9037  0070                     ?_tsttc:	
  9038                           ; 1 bytes @ 0x0
  9039                           
  9040  0070                     ?_LCDsend:	
  9041                           ; 1 bytes @ 0x0
  9042                           
  9043  0070                     ?_LCDinit:	
  9044                           ; 1 bytes @ 0x0
  9045                           
  9046  0070                     ?_LCDcmd:	
  9047                           ; 1 bytes @ 0x0
  9048                           
  9049  0070                     ?_LCDchar:	
  9050                           ; 1 bytes @ 0x0
  9051                           
  9052  0070                     ?_PWM_Output_D4_Enable:	
  9053                           ; 1 bytes @ 0x0
  9054                           
  9055  0070                     ?_PWM_Output_D4_Disable:	
  9056                           ; 1 bytes @ 0x0
  9057                           
  9058  0070                     ?_Clock_ISR:	
  9059                           ; 1 bytes @ 0x0
  9060                           
  9061  0070                     ?_update_menuLCD:	
  9062                           ; 1 bytes @ 0x0
  9063                           
  9064  0070                     ?_monitoring_ISR:	
  9065                           ; 1 bytes @ 0x0
  9066                           
  9067  0070                     ?_S1button:	
  9068                           ; 1 bytes @ 0x0
  9069                           
  9070  0070                     ?_editClock:	
  9071                           ; 1 bytes @ 0x0
  9072                           
  9073  0070                     ?_editTemp:	
  9074                           ; 1 bytes @ 0x0
  9075                           
  9076  0070                     ?_editLum:	
  9077                           ; 1 bytes @ 0x0
  9078                           
  9079  0070                     ?_toggleAlarms:	
  9080                           ; 1 bytes @ 0x0
  9081                           
  9082  0070                     ?_S1_ISR:	
  9083                           ; 1 bytes @ 0x0
  9084                           
  9085  0070                     ??_S1_ISR:	
  9086                           ; 1 bytes @ 0x0
  9087                           
  9088  0070                     ?_sendOKMessage:	
  9089                           ; 1 bytes @ 0x0
  9090                           
  9091  0070                     ?_sendERRORMessage:	
  9092                           ; 1 bytes @ 0x0
  9093                           
  9094  0070                     ?_main:	
  9095                           ; 1 bytes @ 0x0
  9096                           
  9097  0070                     ?i1_WriteI2C:	
  9098                           ; 1 bytes @ 0x0
  9099                           
  9100  0070                     ??i1_WriteI2C:	
  9101                           ; 1 bytes @ 0x0
  9102                           
  9103  0070                     ?_ADCC_GetSingleConversion:	
  9104                           ; 1 bytes @ 0x0
  9105                           
  9106  0070                     ?i1___wmul:	
  9107                           ; 2 bytes @ 0x0
  9108                           
  9109  0070                     TMR1_WriteTimer@timerVal:	
  9110                           ; 2 bytes @ 0x0
  9111                           
  9112  0070                     TMR5_WriteTimer@timerVal:	
  9113                           ; 2 bytes @ 0x0
  9114                           
  9115  0070                     i1___wmul@multiplier:	
  9116                           ; 2 bytes @ 0x0
  9117                           
  9118                           
  9119                           ; 2 bytes @ 0x0
  9120  0070                     	ds	1
  9121  0071                     i1WriteI2C@data_out:
  9122                           
  9123                           ; 1 bytes @ 0x1
  9124  0071                     	ds	1
  9125  0072                     ??_TMR1_WriteTimer:
  9126  0072                     ??_TMR5_WriteTimer:	
  9127                           ; 1 bytes @ 0x2
  9128                           
  9129  0072                     ??_tsttc:	
  9130                           ; 1 bytes @ 0x2
  9131                           
  9132  0072                     i1___wmul@multiplicand:	
  9133                           ; 1 bytes @ 0x2
  9134                           
  9135                           
  9136                           ; 2 bytes @ 0x2
  9137  0072                     	ds	1
  9138  0073                     ??_ADCC_GetSingleConversion:
  9139  0073                     ADCC_GetSingleConversion@channel:	
  9140                           ; 1 bytes @ 0x3
  9141                           
  9142  0073                     tsttc@value:	
  9143                           ; 1 bytes @ 0x3
  9144                           
  9145                           
  9146                           ; 1 bytes @ 0x3
  9147  0073                     	ds	1
  9148  0074                     ??i1___wmul:
  9149  0074                     i1___wmul@product:	
  9150                           ; 1 bytes @ 0x4
  9151                           
  9152                           
  9153                           ; 2 bytes @ 0x4
  9154  0074                     	ds	2
  9155  0076                     ?i1_DATAEE_WriteByte:
  9156  0076                     i1DATAEE_WriteByte@bAdd:	
  9157                           ; 1 bytes @ 0x6
  9158                           
  9159                           
  9160                           ; 2 bytes @ 0x6
  9161  0076                     	ds	2
  9162  0078                     i1DATAEE_WriteByte@bData:
  9163                           
  9164                           ; 1 bytes @ 0x8
  9165  0078                     	ds	1
  9166  0079                     ??i1_DATAEE_WriteByte:
  9167  0079                     i1DATAEE_WriteByte@GIEBitValue:	
  9168                           ; 1 bytes @ 0x9
  9169                           
  9170                           
  9171                           ; 1 bytes @ 0x9
  9172  0079                     	ds	1
  9173  007A                     ??_Clock_ISR:
  9174  007A                     ??_monitoring_ISR:	
  9175                           ; 1 bytes @ 0xA
  9176                           
  9177                           
  9178                           ; 1 bytes @ 0xA
  9179  007A                     	ds	1
  9180  007B                     ??_TMR1_ISR:
  9181                           
  9182                           ; 1 bytes @ 0xB
  9183  007B                     	ds	2
  9184  007D                     ??_TMR5_ISR:
  9185  007D                     ??_INTERRUPT_InterruptManager:	
  9186                           ; 1 bytes @ 0xD
  9187                           
  9188                           
  9189                           	psect	cstackBANK0
  9190  0020                     __pcstackBANK0:	
  9191                           ; 1 bytes @ 0xD
  9192                           
  9193  0020                     ??_PMD_Initialize:
  9194  0020                     ??_OSCILLATOR_Initialize:	
  9195                           ; 1 bytes @ 0x0
  9196                           
  9197  0020                     ??_PWM6_Initialize:	
  9198                           ; 1 bytes @ 0x0
  9199                           
  9200  0020                     ??_ADCC_Initialize:	
  9201                           ; 1 bytes @ 0x0
  9202                           
  9203  0020                     ??_TMR2_Initialize:	
  9204                           ; 1 bytes @ 0x0
  9205                           
  9206  0020                     ?_TMR1_SetInterruptHandler:	
  9207                           ; 1 bytes @ 0x0
  9208                           
  9209  0020                     ?_TMR5_SetInterruptHandler:	
  9210                           ; 1 bytes @ 0x0
  9211                           
  9212  0020                     ?_EUSART_SetRxInterruptHandler:	
  9213                           ; 1 bytes @ 0x0
  9214                           
  9215  0020                     ?_EUSART_SetTxInterruptHandler:	
  9216                           ; 1 bytes @ 0x0
  9217                           
  9218  0020                     ?_memset:	
  9219                           ; 1 bytes @ 0x0
  9220                           
  9221  0020                     ??_isdigit:	
  9222                           ; 1 bytes @ 0x0
  9223                           
  9224  0020                     ??_WriteI2C:	
  9225                           ; 1 bytes @ 0x0
  9226                           
  9227  0020                     ??_PIN_MANAGER_Initialize:	
  9228                           ; 1 bytes @ 0x0
  9229                           
  9230  0020                     ??_i2c1_driver_open:	
  9231                           ; 1 bytes @ 0x0
  9232                           
  9233  0020                     ?_setTimer5ReloadVal:	
  9234                           ; 1 bytes @ 0x0
  9235                           
  9236  0020                     ??_TMR5_StartTimer:	
  9237                           ; 1 bytes @ 0x0
  9238                           
  9239  0020                     ??_TMR5_StopTimer:	
  9240                           ; 1 bytes @ 0x0
  9241                           
  9242  0020                     ?_PWM6_LoadDutyValue:	
  9243                           ; 1 bytes @ 0x0
  9244                           
  9245  0020                     ??_TMR2_Start:	
  9246                           ; 1 bytes @ 0x0
  9247                           
  9248  0020                     ??_TMR2_StartTimer:	
  9249                           ; 1 bytes @ 0x0
  9250                           
  9251  0020                     ??_TMR2_Stop:	
  9252                           ; 1 bytes @ 0x0
  9253                           
  9254  0020                     ??_TMR2_StopTimer:	
  9255                           ; 1 bytes @ 0x0
  9256                           
  9257  0020                     ?_DATAEE_WriteByte:	
  9258                           ; 1 bytes @ 0x0
  9259                           
  9260  0020                     ?_INT_SetInterruptHandler:	
  9261                           ; 1 bytes @ 0x0
  9262                           
  9263  0020                     ??_EUSART_is_rx_ready:	
  9264                           ; 1 bytes @ 0x0
  9265                           
  9266  0020                     ??_EUSART_Read:	
  9267                           ; 1 bytes @ 0x0
  9268                           
  9269  0020                     ??_EUSART_Write:	
  9270                           ; 1 bytes @ 0x0
  9271                           
  9272  0020                     ?_differenceBetweenTimePeriod:	
  9273                           ; 1 bytes @ 0x0
  9274                           
  9275  0020                     ??_PWM_Output_D4_Enable:	
  9276                           ; 1 bytes @ 0x0
  9277                           
  9278  0020                     ??_PWM_Output_D4_Disable:	
  9279                           ; 1 bytes @ 0x0
  9280                           
  9281  0020                     ??_S1button:	
  9282                           ; 1 bytes @ 0x0
  9283                           
  9284  0020                     ?___wmul:	
  9285                           ; 1 bytes @ 0x0
  9286                           
  9287  0020                     ?___lwdiv:	
  9288                           ; 2 bytes @ 0x0
  9289                           
  9290  0020                     ?___lmul:	
  9291                           ; 2 bytes @ 0x0
  9292                           
  9293  0020                     _isdigit$3164:	
  9294                           ; 4 bytes @ 0x0
  9295                           
  9296  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  9297                           ; 1 bytes @ 0x0
  9298                           
  9299  0020                     setTimer5ReloadVal@val:	
  9300                           ; 2 bytes @ 0x0
  9301                           
  9302  0020                     TMR5_SetInterruptHandler@InterruptHandler:	
  9303                           ; 2 bytes @ 0x0
  9304                           
  9305  0020                     PWM6_LoadDutyValue@dutyValue:	
  9306                           ; 2 bytes @ 0x0
  9307                           
  9308  0020                     DATAEE_WriteByte@bAdd:	
  9309                           ; 2 bytes @ 0x0
  9310                           
  9311  0020                     INT_SetInterruptHandler@InterruptHandler:	
  9312                           ; 2 bytes @ 0x0
  9313                           
  9314  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  9315                           ; 2 bytes @ 0x0
  9316                           
  9317  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  9318                           ; 2 bytes @ 0x0
  9319                           
  9320  0020                     ___wmul@multiplier:	
  9321                           ; 2 bytes @ 0x0
  9322                           
  9323  0020                     ___lwdiv@divisor:	
  9324                           ; 2 bytes @ 0x0
  9325                           
  9326  0020                     memset@c:	
  9327                           ; 2 bytes @ 0x0
  9328                           
  9329  0020                     differenceBetweenTimePeriod@start:	
  9330                           ; 2 bytes @ 0x0
  9331                           
  9332  0020                     ___lmul@multiplier:	
  9333                           ; 3 bytes @ 0x0
  9334                           
  9335                           
  9336                           ; 4 bytes @ 0x0
  9337  0020                     	ds	1
  9338  0021                     WriteI2C@data_out:
  9339  0021                     EUSART_Read@readValue:	
  9340                           ; 1 bytes @ 0x1
  9341                           
  9342  0021                     EUSART_Write@txData:	
  9343                           ; 1 bytes @ 0x1
  9344                           
  9345  0021                     isdigit@c:	
  9346                           ; 1 bytes @ 0x1
  9347                           
  9348                           
  9349                           ; 1 bytes @ 0x1
  9350  0021                     	ds	1
  9351  0022                     ??_TMR5_Initialize:
  9352  0022                     ??_TMR1_Initialize:	
  9353                           ; 1 bytes @ 0x2
  9354                           
  9355  0022                     ??_EXT_INT_Initialize:	
  9356                           ; 1 bytes @ 0x2
  9357                           
  9358  0022                     ??_EUSART_Initialize:	
  9359                           ; 1 bytes @ 0x2
  9360                           
  9361  0022                     ??_TMR1_SetInterruptHandler:	
  9362                           ; 1 bytes @ 0x2
  9363                           
  9364  0022                     ??_TMR5_SetInterruptHandler:	
  9365                           ; 1 bytes @ 0x2
  9366                           
  9367  0022                     ??_EUSART_SetRxInterruptHandler:	
  9368                           ; 1 bytes @ 0x2
  9369                           
  9370  0022                     ??_EUSART_SetTxInterruptHandler:	
  9371                           ; 1 bytes @ 0x2
  9372                           
  9373  0022                     ??_setTimer5ReloadVal:	
  9374                           ; 1 bytes @ 0x2
  9375                           
  9376  0022                     ??_PWM6_LoadDutyValue:	
  9377                           ; 1 bytes @ 0x2
  9378                           
  9379  0022                     ??_INT_SetInterruptHandler:	
  9380                           ; 1 bytes @ 0x2
  9381                           
  9382  0022                     ??_getch:	
  9383                           ; 1 bytes @ 0x2
  9384                           
  9385  0022                     ??_putch:	
  9386                           ; 1 bytes @ 0x2
  9387                           
  9388  0022                     ??_LCDsend:	
  9389                           ; 1 bytes @ 0x2
  9390                           
  9391  0022                     ?_LCDsend2x4:	
  9392                           ; 1 bytes @ 0x2
  9393                           
  9394  0022                     DATAEE_WriteByte@bData:	
  9395                           ; 1 bytes @ 0x2
  9396                           
  9397  0022                     putch@txData:	
  9398                           ; 1 bytes @ 0x2
  9399                           
  9400  0022                     LCDsend2x4@mode:	
  9401                           ; 1 bytes @ 0x2
  9402                           
  9403  0022                     ___wmul@multiplicand:	
  9404                           ; 1 bytes @ 0x2
  9405                           
  9406  0022                     ___lwdiv@dividend:	
  9407                           ; 2 bytes @ 0x2
  9408                           
  9409  0022                     memset@n:	
  9410                           ; 2 bytes @ 0x2
  9411                           
  9412                           
  9413                           ; 2 bytes @ 0x2
  9414  0022                     	ds	1
  9415  0023                     ??_SYSTEM_Initialize:
  9416  0023                     ??_DATAEE_WriteByte:	
  9417                           ; 1 bytes @ 0x3
  9418                           
  9419  0023                     ??_LCDsend2x4:	
  9420                           ; 1 bytes @ 0x3
  9421                           
  9422  0023                     ?_sendMessage:	
  9423                           ; 1 bytes @ 0x3
  9424                           
  9425  0023                     DATAEE_WriteByte@GIEBitValue:	
  9426                           ; 1 bytes @ 0x3
  9427                           
  9428  0023                     LCDsend@c:	
  9429                           ; 1 bytes @ 0x3
  9430                           
  9431  0023                     sendMessage@num:	
  9432                           ; 1 bytes @ 0x3
  9433                           
  9434  0023                     differenceBetweenTimePeriod@stop:	
  9435                           ; 2 bytes @ 0x3
  9436                           
  9437                           
  9438                           ; 3 bytes @ 0x3
  9439  0023                     	ds	1
  9440  0024                     ??_memset:
  9441  0024                     ??___wmul:	
  9442                           ; 1 bytes @ 0x4
  9443                           
  9444  0024                     ??___lwdiv:	
  9445                           ; 1 bytes @ 0x4
  9446                           
  9447  0024                     ___wmul@product:	
  9448                           ; 1 bytes @ 0x4
  9449                           
  9450  0024                     ___lmul@multiplicand:	
  9451                           ; 2 bytes @ 0x4
  9452                           
  9453                           
  9454                           ; 4 bytes @ 0x4
  9455  0024                     	ds	1
  9456  0025                     LCDsend2x4@c:
  9457  0025                     sendMessage@buffer:	
  9458                           ; 1 bytes @ 0x5
  9459                           
  9460  0025                     memset@p:	
  9461                           ; 1 bytes @ 0x5
  9462                           
  9463  0025                     ___lwdiv@quotient:	
  9464                           ; 1 bytes @ 0x5
  9465                           
  9466                           
  9467                           ; 2 bytes @ 0x5
  9468  0025                     	ds	1
  9469  0026                     ?_DATAEE_ReadByte:
  9470  0026                     ??_sendMessage:	
  9471                           ; 1 bytes @ 0x6
  9472                           
  9473  0026                     LCDsend2x4@hc:	
  9474                           ; 1 bytes @ 0x6
  9475                           
  9476  0026                     differenceBetweenTimePeriod@diff:	
  9477                           ; 1 bytes @ 0x6
  9478                           
  9479  0026                     memset@p1:	
  9480                           ; 1 bytes @ 0x6
  9481                           
  9482  0026                     DATAEE_ReadByte@bAdd:	
  9483                           ; 1 bytes @ 0x6
  9484                           
  9485                           
  9486                           ; 2 bytes @ 0x6
  9487  0026                     	ds	1
  9488  0027                     ??_differenceBetweenTimePeriod:
  9489  0027                     LCDsend2x4@lc:	
  9490                           ; 1 bytes @ 0x7
  9491                           
  9492  0027                     ___lwdiv@counter:	
  9493                           ; 1 bytes @ 0x7
  9494                           
  9495  0027                     sendMessage@n:	
  9496                           ; 1 bytes @ 0x7
  9497                           
  9498                           
  9499                           ; 2 bytes @ 0x7
  9500  0027                     	ds	1
  9501  0028                     ??_DATAEE_ReadByte:
  9502  0028                     ??_LCDinit:	
  9503                           ; 1 bytes @ 0x8
  9504                           
  9505  0028                     ??_LCDcmd:	
  9506                           ; 1 bytes @ 0x8
  9507                           
  9508  0028                     ??_LCDchar:	
  9509                           ; 1 bytes @ 0x8
  9510                           
  9511  0028                     ??___lmul:	
  9512                           ; 1 bytes @ 0x8
  9513                           
  9514  0028                     ?___lwmod:	
  9515                           ; 1 bytes @ 0x8
  9516                           
  9517  0028                     LCDcmd@c:	
  9518                           ; 2 bytes @ 0x8
  9519                           
  9520  0028                     LCDchar@c:	
  9521                           ; 1 bytes @ 0x8
  9522                           
  9523  0028                     ___lwmod@divisor:	
  9524                           ; 1 bytes @ 0x8
  9525                           
  9526  0028                     ___lmul@product:	
  9527                           ; 2 bytes @ 0x8
  9528                           
  9529                           
  9530                           ; 4 bytes @ 0x8
  9531  0028                     	ds	1
  9532  0029                     ?_LCDstr:
  9533  0029                     ??_sendOKMessage:	
  9534                           ; 1 bytes @ 0x9
  9535                           
  9536  0029                     ??_sendERRORMessage:	
  9537                           ; 1 bytes @ 0x9
  9538                           
  9539  0029                     LCDstr@p:	
  9540                           ; 1 bytes @ 0x9
  9541                           
  9542                           
  9543                           ; 2 bytes @ 0x9
  9544  0029                     	ds	1
  9545  002A                     sendOKMessage@cmd:
  9546  002A                     sendERRORMessage@cmd:	
  9547                           ; 1 bytes @ 0xA
  9548                           
  9549  002A                     ___lwmod@dividend:	
  9550                           ; 1 bytes @ 0xA
  9551                           
  9552                           
  9553                           ; 2 bytes @ 0xA
  9554  002A                     	ds	1
  9555  002B                     ??_LCDstr:
  9556  002B                     sendOKMessage@bufw:	
  9557                           ; 1 bytes @ 0xB
  9558                           
  9559  002B                     sendERRORMessage@bufw:	
  9560                           ; 4 bytes @ 0xB
  9561                           
  9562                           
  9563                           ; 4 bytes @ 0xB
  9564  002B                     	ds	1
  9565  002C                     ??___lwmod:
  9566                           
  9567                           ; 1 bytes @ 0xC
  9568  002C                     	ds	1
  9569  002D                     ___lwmod@counter:
  9570                           
  9571                           ; 1 bytes @ 0xD
  9572  002D                     	ds	1
  9573  002E                     ?_sprintf:
  9574  002E                     LCDstr@c:	
  9575                           ; 2 bytes @ 0xE
  9576                           
  9577  002E                     sprintf@f:	
  9578                           ; 1 bytes @ 0xE
  9579                           
  9580                           
  9581                           ; 2 bytes @ 0xE
  9582  002E                     	ds	1
  9583  002F                     ?_cmd_rc:
  9584  002F                     ?_cmd_sc:	
  9585                           ; 1 bytes @ 0xF
  9586                           
  9587  002F                     ?_cmd_rtl:	
  9588                           ; 1 bytes @ 0xF
  9589                           
  9590  002F                     ?_cmd_rp:	
  9591                           ; 1 bytes @ 0xF
  9592                           
  9593  002F                     ?_cmd_mmp:	
  9594                           ; 1 bytes @ 0xF
  9595                           
  9596  002F                     ?_cmd_mta:	
  9597                           ; 1 bytes @ 0xF
  9598                           
  9599  002F                     ?_cmd_ra:	
  9600                           ; 1 bytes @ 0xF
  9601                           
  9602  002F                     ?_cmd_dac:	
  9603                           ; 1 bytes @ 0xF
  9604                           
  9605  002F                     ?_cmd_dtl:	
  9606                           ; 1 bytes @ 0xF
  9607                           
  9608  002F                     ?_cmd_aa:	
  9609                           ; 1 bytes @ 0xF
  9610                           
  9611  002F                     ?_cmd_ir:	
  9612                           ; 1 bytes @ 0xF
  9613                           
  9614  002F                     ?_cmd_trc:	
  9615                           ; 1 bytes @ 0xF
  9616                           
  9617  002F                     ?_cmd_tri:	
  9618                           ; 1 bytes @ 0xF
  9619                           
  9620  002F                     cmd_rc@num:	
  9621                           ; 1 bytes @ 0xF
  9622                           
  9623  002F                     cmd_sc@num:	
  9624                           ; 2 bytes @ 0xF
  9625                           
  9626  002F                     cmd_rtl@num:	
  9627                           ; 2 bytes @ 0xF
  9628                           
  9629  002F                     cmd_rp@num:	
  9630                           ; 2 bytes @ 0xF
  9631                           
  9632  002F                     cmd_mmp@num:	
  9633                           ; 2 bytes @ 0xF
  9634                           
  9635  002F                     cmd_mta@num:	
  9636                           ; 2 bytes @ 0xF
  9637                           
  9638  002F                     cmd_ra@num:	
  9639                           ; 2 bytes @ 0xF
  9640                           
  9641  002F                     cmd_dac@num:	
  9642                           ; 2 bytes @ 0xF
  9643                           
  9644  002F                     cmd_dtl@num:	
  9645                           ; 2 bytes @ 0xF
  9646                           
  9647  002F                     cmd_aa@num:	
  9648                           ; 2 bytes @ 0xF
  9649                           
  9650  002F                     cmd_ir@num:	
  9651                           ; 2 bytes @ 0xF
  9652                           
  9653  002F                     cmd_trc@num:	
  9654                           ; 2 bytes @ 0xF
  9655                           
  9656  002F                     cmd_tri@num:	
  9657                           ; 2 bytes @ 0xF
  9658                           
  9659                           
  9660                           ; 2 bytes @ 0xF
  9661  002F                     	ds	2
  9662  0031                     cmd_rc@buffer:
  9663  0031                     cmd_sc@buffer:	
  9664                           ; 1 bytes @ 0x11
  9665                           
  9666  0031                     cmd_rtl@buffer:	
  9667                           ; 1 bytes @ 0x11
  9668                           
  9669  0031                     cmd_rp@buffer:	
  9670                           ; 1 bytes @ 0x11
  9671                           
  9672  0031                     cmd_mmp@buffer:	
  9673                           ; 1 bytes @ 0x11
  9674                           
  9675  0031                     cmd_mta@buffer:	
  9676                           ; 1 bytes @ 0x11
  9677                           
  9678  0031                     cmd_ra@buffer:	
  9679                           ; 1 bytes @ 0x11
  9680                           
  9681  0031                     cmd_dac@buffer:	
  9682                           ; 1 bytes @ 0x11
  9683                           
  9684  0031                     cmd_dtl@buffer:	
  9685                           ; 1 bytes @ 0x11
  9686                           
  9687  0031                     cmd_aa@buffer:	
  9688                           ; 1 bytes @ 0x11
  9689                           
  9690  0031                     cmd_ir@buffer:	
  9691                           ; 1 bytes @ 0x11
  9692                           
  9693  0031                     cmd_trc@buffer:	
  9694                           ; 1 bytes @ 0x11
  9695                           
  9696  0031                     cmd_tri@buffer:	
  9697                           ; 1 bytes @ 0x11
  9698                           
  9699                           
  9700                           ; 1 bytes @ 0x11
  9701  0031                     	ds	1
  9702  0032                     ??_cmd_rc:
  9703  0032                     ??_cmd_sc:	
  9704                           ; 1 bytes @ 0x12
  9705                           
  9706  0032                     ??_cmd_rtl:	
  9707                           ; 1 bytes @ 0x12
  9708                           
  9709  0032                     ??_cmd_rp:	
  9710                           ; 1 bytes @ 0x12
  9711                           
  9712  0032                     ??_cmd_mmp:	
  9713                           ; 1 bytes @ 0x12
  9714                           
  9715  0032                     ??_cmd_mta:	
  9716                           ; 1 bytes @ 0x12
  9717                           
  9718  0032                     ??_cmd_ra:	
  9719                           ; 1 bytes @ 0x12
  9720                           
  9721  0032                     ??_cmd_dac:	
  9722                           ; 1 bytes @ 0x12
  9723                           
  9724  0032                     ??_cmd_dtl:	
  9725                           ; 1 bytes @ 0x12
  9726                           
  9727  0032                     ??_cmd_aa:	
  9728                           ; 1 bytes @ 0x12
  9729                           
  9730  0032                     ??_cmd_ir:	
  9731                           ; 1 bytes @ 0x12
  9732                           
  9733  0032                     ??_cmd_trc:	
  9734                           ; 1 bytes @ 0x12
  9735                           
  9736  0032                     ??_cmd_tri:	
  9737                           ; 1 bytes @ 0x12
  9738                           
  9739  0032                     cmd_dtl@tempAux:	
  9740                           ; 1 bytes @ 0x12
  9741                           
  9742                           
  9743                           ; 1 bytes @ 0x12
  9744  0032                     	ds	1
  9745  0033                     cmd_sc@h:
  9746  0033                     cmd_dac@h:	
  9747                           ; 1 bytes @ 0x13
  9748                           
  9749  0033                     cmd_dtl@lumAux:	
  9750                           ; 1 bytes @ 0x13
  9751                           
  9752  0033                     cmd_rtl@buff:	
  9753                           ; 1 bytes @ 0x13
  9754                           
  9755  0033                     cmd_rp@buff:	
  9756                           ; 5 bytes @ 0x13
  9757                           
  9758  0033                     cmd_rc@buff:	
  9759                           ; 5 bytes @ 0x13
  9760                           
  9761  0033                     cmd_ir@buff:	
  9762                           ; 6 bytes @ 0x13
  9763                           
  9764  0033                     cmd_ra@buff:	
  9765                           ; 7 bytes @ 0x13
  9766                           
  9767                           
  9768                           ; 9 bytes @ 0x13
  9769  0033                     	ds	1
  9770  0034                     cmd_sc@m:
  9771  0034                     cmd_dac@m:	
  9772                           ; 1 bytes @ 0x14
  9773                           
  9774                           
  9775                           ; 1 bytes @ 0x14
  9776  0034                     	ds	1
  9777  0035                     cmd_sc@s:
  9778  0035                     cmd_dac@s:	
  9779                           ; 1 bytes @ 0x15
  9780                           
  9781                           
  9782                           ; 1 bytes @ 0x15
  9783  0035                     	ds	1
  9784  0036                     ??_sprintf:
  9785                           
  9786                           ; 1 bytes @ 0x16
  9787  0036                     	ds	2
  9788  0038                     cmd_trc@buffData:
  9789                           
  9790                           ; 5 bytes @ 0x18
  9791  0038                     	ds	1
  9792  0039                     cmd_tri@buffData:
  9793                           
  9794                           ; 5 bytes @ 0x19
  9795  0039                     	ds	1
  9796  003A                     sprintf@ap:
  9797                           
  9798                           ; 1 bytes @ 0x1A
  9799  003A                     	ds	1
  9800  003B                     sprintf@prec:
  9801                           
  9802                           ; 1 bytes @ 0x1B
  9803  003B                     	ds	1
  9804  003C                     cmd_mmp@timerValue:
  9805  003C                     sprintf@val:	
  9806                           ; 2 bytes @ 0x1C
  9807                           
  9808                           
  9809                           ; 2 bytes @ 0x1C
  9810  003C                     	ds	1
  9811  003D                     cmd_trc@buffInit:
  9812                           
  9813                           ; 3 bytes @ 0x1D
  9814  003D                     	ds	1
  9815  003E                     sprintf@flag:
  9816  003E                     cmd_tri@buffInit:	
  9817                           ; 1 bytes @ 0x1E
  9818                           
  9819                           
  9820                           ; 4 bytes @ 0x1E
  9821  003E                     	ds	1
  9822  003F                     sprintf@width:
  9823                           
  9824                           ; 2 bytes @ 0x1F
  9825  003F                     	ds	1
  9826  0040                     cmd_trc@i:
  9827                           
  9828                           ; 2 bytes @ 0x20
  9829  0040                     	ds	1
  9830  0041                     sprintf@c:
  9831                           
  9832                           ; 1 bytes @ 0x21
  9833  0041                     	ds	1
  9834  0042                     sprintf@sp:
  9835  0042                     cmd_trc@address:	
  9836                           ; 1 bytes @ 0x22
  9837                           
  9838  0042                     cmd_tri@indexAux:	
  9839                           ; 2 bytes @ 0x22
  9840                           
  9841                           
  9842                           ; 2 bytes @ 0x22
  9843  0042                     	ds	1
  9844  0043                     ??_update_menuLCD:
  9845                           
  9846                           ; 1 bytes @ 0x23
  9847  0043                     	ds	1
  9848  0044                     cmd_trc@buffEOM:
  9849  0044                     cmd_tri@startingIndex:	
  9850                           ; 1 bytes @ 0x24
  9851                           
  9852                           
  9853                           ; 1 bytes @ 0x24
  9854  0044                     	ds	1
  9855  0045                     cmd_tri@buffEOM:
  9856  0045                     cmd_trc@aux:	
  9857                           ; 1 bytes @ 0x25
  9858                           
  9859                           
  9860                           ; 2 bytes @ 0x25
  9861  0045                     	ds	1
  9862  0046                     cmd_tri@n:
  9863                           
  9864                           ; 1 bytes @ 0x26
  9865  0046                     	ds	1
  9866  0047                     cmd_trc@n:
  9867  0047                     cmd_tri@i:	
  9868                           ; 2 bytes @ 0x27
  9869                           
  9870                           
  9871                           ; 2 bytes @ 0x27
  9872  0047                     	ds	2
  9873  0049                     cmd_trc@j:
  9874  0049                     cmd_tri@j:	
  9875                           ; 1 bytes @ 0x29
  9876                           
  9877  0049                     update_menuLCD@str:	
  9878                           ; 1 bytes @ 0x29
  9879                           
  9880                           
  9881                           ; 8 bytes @ 0x29
  9882  0049                     	ds	1
  9883  004A                     cmd_tri@index:
  9884                           
  9885                           ; 1 bytes @ 0x2A
  9886  004A                     	ds	7
  9887  0051                     update_menuLCD@tt:
  9888                           
  9889                           ; 4 bytes @ 0x31
  9890  0051                     	ds	4
  9891  0055                     update_menuLCD@l:
  9892                           
  9893                           ; 3 bytes @ 0x35
  9894  0055                     	ds	3
  9895  0058                     update_menuLCD@diff:
  9896                           
  9897                           ; 3 bytes @ 0x38
  9898  0058                     	ds	3
  9899  005B                     ??_editClock:
  9900  005B                     ??_editTemp:	
  9901                           ; 1 bytes @ 0x3B
  9902                           
  9903  005B                     ??_editLum:	
  9904                           ; 1 bytes @ 0x3B
  9905                           
  9906  005B                     ??_toggleAlarms:	
  9907                           ; 1 bytes @ 0x3B
  9908                           
  9909                           
  9910                           ; 1 bytes @ 0x3B
  9911  005B                     	ds	1
  9912  005C                     ??_main:
  9913                           
  9914                           ; 1 bytes @ 0x3C
  9915  005C                     	ds	3
  9916                           
  9917                           	psect	maintext
  9918  00A1                     __pmaintext:	
  9919 ;;
  9920 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  9921 ;;
  9922 ;; *************** function _main *****************
  9923 ;; Defined at:
  9924 ;;		line 1078 in file "main.c"
  9925 ;; Parameters:    Size  Location     Type
  9926 ;;		None
  9927 ;; Auto vars:     Size  Location     Type
  9928 ;;  i               2   25[BANK1 ] int 
  9929 ;;  buff           20    0[BANK1 ] unsigned char [20]
  9930 ;;  n               2   30[BANK1 ] int 
  9931 ;;  i               2   27[BANK1 ] int 
  9932 ;;  c               1   29[BANK1 ] unsigned char 
  9933 ;;  corrupted       1   24[BANK1 ] unsigned char 
  9934 ;;  notInit         1   23[BANK1 ] unsigned char 
  9935 ;;  checkSumAux     1   22[BANK1 ] unsigned char 
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  1    wreg      void 
  9938 ;; Registers used:
  9939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9940 ;; Tracked objects:
  9941 ;;		On entry : B1F/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;      Totals:         0       3      32       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;Total ram usage:       35 bytes
  9950 ;; Hardware stack levels required when called:   11
  9951 ;; This function calls:
  9952 ;;		_DATAEE_ReadByte
  9953 ;;		_DATAEE_WriteByte
  9954 ;;		_EUSART_is_rx_ready
  9955 ;;		_INT_SetInterruptHandler
  9956 ;;		_LCDinit
  9957 ;;		_PWM6_LoadDutyValue
  9958 ;;		_PWM_Output_D4_Disable
  9959 ;;		_PWM_Output_D4_Enable
  9960 ;;		_S1button
  9961 ;;		_SYSTEM_Initialize
  9962 ;;		_TMR1_SetInterruptHandler
  9963 ;;		_TMR2_StartTimer
  9964 ;;		_TMR2_StopTimer
  9965 ;;		_TMR5_SetInterruptHandler
  9966 ;;		___wmul
  9967 ;;		_cmd_aa
  9968 ;;		_cmd_dac
  9969 ;;		_cmd_dtl
  9970 ;;		_cmd_ir
  9971 ;;		_cmd_mmp
  9972 ;;		_cmd_mta
  9973 ;;		_cmd_ra
  9974 ;;		_cmd_rc
  9975 ;;		_cmd_rp
  9976 ;;		_cmd_rtl
  9977 ;;		_cmd_sc
  9978 ;;		_cmd_trc
  9979 ;;		_cmd_tri
  9980 ;;		_editClock
  9981 ;;		_editLum
  9982 ;;		_editTemp
  9983 ;;		_getch
  9984 ;;		_i2c1_driver_open
  9985 ;;		_memset
  9986 ;;		_toggleAlarms
  9987 ;;		_update_menuLCD
  9988 ;; This function is called by:
  9989 ;;		Startup code after reset
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           
  9994                           ;psect for function _main
  9995  00A1                     _main:
  9996  00A1                     l6260:	
  9997                           ;incstack = 0
  9998                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9999                           
 10000                           
 10001                           ;main.c: 1081: SYSTEM_Initialize();
 10002  00A1  3192  222E  3180   	fcall	_SYSTEM_Initialize
 10003                           
 10004                           ;main.c: 1083: PWM6_LoadDutyValue(0);
 10005  00A4  3000               	movlw	0
 10006  00A5  0020               	movlb	0	; select bank0
 10007  00A6  00A0               	movwf	PWM6_LoadDutyValue@dutyValue
 10008  00A7  00A1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10009  00A8  3191  2111  3180   	fcall	_PWM6_LoadDutyValue
 10010  00AB                     l6262:
 10011                           
 10012                           ;main.c: 1084: TMR2_StopTimer();
 10013  00AB  319F  27B5  3180   	fcall	_TMR2_StopTimer
 10014  00AE                     l6264:
 10015                           
 10016                           ;main.c: 1085: PWM_Output_D4_Disable();
 10017  00AE  319F  27AB  3180   	fcall	_PWM_Output_D4_Disable
 10018                           
 10019                           ;main.c: 1087: TMR1_SetInterruptHandler(Clock_ISR);
 10020  00B1  3075               	movlw	low _Clock_ISR
 10021  00B2  0020               	movlb	0	; select bank0
 10022  00B3  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10023  00B4  300C               	movlw	high _Clock_ISR
 10024  00B5  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10025  00B6  3190  2007  3180   	fcall	_TMR1_SetInterruptHandler
 10026                           
 10027                           ;main.c: 1089: TMR5_SetInterruptHandler(monitoring_ISR);
 10028  00B9  308D               	movlw	low _monitoring_ISR
 10029  00BA  0020               	movlb	0	; select bank0
 10030  00BB  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler
 10031  00BC  300E               	movlw	high _monitoring_ISR
 10032  00BD  00A1               	movwf	TMR5_SetInterruptHandler@InterruptHandler+1
 10033  00BE  3190  2010  3180   	fcall	_TMR5_SetInterruptHandler
 10034                           
 10035                           ;main.c: 1091: INT_SetInterruptHandler(S1_ISR);
 10036  00C1  30D3               	movlw	low _S1_ISR
 10037  00C2  0020               	movlb	0	; select bank0
 10038  00C3  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
 10039  00C4  301F               	movlw	high _S1_ISR
 10040  00C5  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10041  00C6  319F  27EE  3180   	fcall	_INT_SetInterruptHandler
 10042  00C9                     l6266:
 10043                           
 10044                           ;main.c: 1093: uint8_t checkSumAux = 0;
 10045  00C9  0021               	movlb	1	; select bank1
 10046  00CA  01B6               	clrf	main@checkSumAux^(0+128)
 10047  00CB                     l6268:
 10048                           
 10049                           ;main.c: 1094: bool notInit = 1;
 10050  00CB  01B7               	clrf	main@notInit^(0+128)
 10051  00CC  0AB7               	incf	main@notInit^(0+128),f
 10052  00CD                     l6270:
 10053                           
 10054                           ;main.c: 1095: bool corrupted = 0;
 10055  00CD  01B8               	clrf	main@corrupted^(0+128)
 10056  00CE                     l6272:
 10057                           
 10058                           ;main.c: 1096: if(DATAEE_ReadByte(0x7000) == 'S'){
 10059  00CE  3000               	movlw	0
 10060  00CF  0020               	movlb	0	; select bank0
 10061  00D0  00A6               	movwf	DATAEE_ReadByte@bAdd
 10062  00D1  3070               	movlw	112
 10063  00D2  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10064  00D3  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10065  00D6  3A53               	xorlw	83
 10066  00D7  1D03               	skipz
 10067  00D8  28DA               	goto	u6331
 10068  00D9  28DB               	goto	u6330
 10069  00DA                     u6331:
 10070  00DA  2920               	goto	l6292
 10071  00DB                     u6330:
 10072  00DB                     l6274:
 10073                           
 10074                           ;main.c: 1097: notInit = 0;
 10075  00DB  0021               	movlb	1	; select bank1
 10076  00DC  01B7               	clrf	main@notInit^(0+128)
 10077  00DD                     l6276:
 10078                           
 10079                           ;main.c: 1098: for(int i = 1; i < 13; i++){
 10080  00DD  3001               	movlw	1
 10081  00DE  00B9               	movwf	main@i^(0+128)
 10082  00DF  3000               	movlw	0
 10083  00E0  00BA               	movwf	(main@i^(0+128)+1)
 10084  00E1                     l6282:
 10085                           
 10086                           ;main.c: 1099: checkSumAux += DATAEE_ReadByte(0x7000 + (i*8));
 10087  00E1  0021               	movlb	1	; select bank1
 10088  00E2  083A               	movf	(main@i+1)^(0+128),w
 10089  00E3  0020               	movlb	0	; select bank0
 10090  00E4  00DD               	movwf	??_main+1
 10091  00E5  0021               	movlb	1	; select bank1
 10092  00E6  0839               	movf	main@i^(0+128),w
 10093  00E7  0020               	movlb	0	; select bank0
 10094  00E8  00DC               	movwf	??_main
 10095  00E9  35DC               	lslf	??_main,f
 10096  00EA  0DDD               	rlf	??_main+1,f
 10097  00EB  35DC               	lslf	??_main,f
 10098  00EC  0DDD               	rlf	??_main+1,f
 10099  00ED  35DC               	lslf	??_main,f
 10100  00EE  0DDD               	rlf	??_main+1,f
 10101  00EF  085C               	movf	??_main,w
 10102  00F0  3E00               	addlw	0
 10103  00F1  00A6               	movwf	DATAEE_ReadByte@bAdd
 10104  00F2  3070               	movlw	112
 10105  00F3  3D5D               	addwfc	??_main+1,w
 10106  00F4  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10107  00F5  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10108  00F8  0020               	movlb	0	; select bank0
 10109  00F9  00DE               	movwf	??_main+2
 10110  00FA  085E               	movf	??_main+2,w
 10111  00FB  0021               	movlb	1	; select bank1
 10112  00FC  07B6               	addwf	main@checkSumAux^(0+128),f
 10113  00FD                     l6284:
 10114  00FD  3001               	movlw	1
 10115  00FE  07B9               	addwf	main@i^(0+128),f
 10116  00FF  3000               	movlw	0
 10117  0100  3DBA               	addwfc	(main@i+1)^(0+128),f
 10118  0101                     l6286:
 10119  0101  083A               	movf	(main@i+1)^(0+128),w
 10120  0102  3A80               	xorlw	128
 10121  0103  0020               	movlb	0	; select bank0
 10122  0104  00DC               	movwf	??_main
 10123  0105  3080               	movlw	128
 10124  0106  025C               	subwf	??_main,w
 10125  0107  1D03               	skipz
 10126  0108  290C               	goto	u6345
 10127  0109  300D               	movlw	13
 10128  010A  0021               	movlb	1	; select bank1
 10129  010B  0239               	subwf	main@i^(0+128),w
 10130  010C                     u6345:
 10131  010C  1C03               	skipc
 10132  010D  290F               	goto	u6341
 10133  010E  2910               	goto	u6340
 10134  010F                     u6341:
 10135  010F  28E1               	goto	l6282
 10136  0110                     u6340:
 10137  0110                     l6288:
 10138                           
 10139                           ;main.c: 1100: };main.c: 1101: if(checkSumAux != DATAEE_ReadByte(0x7000 + (13*8))){
 10140  0110  3068               	movlw	104
 10141  0111  0020               	movlb	0	; select bank0
 10142  0112  00A6               	movwf	DATAEE_ReadByte@bAdd
 10143  0113  3070               	movlw	112
 10144  0114  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10145  0115  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10146  0118  0021               	movlb	1	; select bank1
 10147  0119  0636               	xorwf	main@checkSumAux^(0+128),w
 10148  011A  1903               	skipnz
 10149  011B  291D               	goto	u6351
 10150  011C  291E               	goto	u6350
 10151  011D                     u6351:
 10152  011D  2920               	goto	l6292
 10153  011E                     u6350:
 10154  011E                     l6290:
 10155                           
 10156                           ;main.c: 1102: corrupted = 1;
 10157  011E  01B8               	clrf	main@corrupted^(0+128)
 10158  011F  0AB8               	incf	main@corrupted^(0+128),f
 10159  0120                     l6292:
 10160                           
 10161                           ;main.c: 1103: };main.c: 1104: };main.c: 1106: if(notInit || corrupted){
 10162  0120  0021               	movlb	1	; select bank1
 10163  0121  0837               	movf	main@notInit^(0+128),w
 10164  0122  1D03               	btfss	3,2
 10165  0123  2925               	goto	u6361
 10166  0124  2926               	goto	u6360
 10167  0125                     u6361:
 10168  0125  292B               	goto	l6296
 10169  0126                     u6360:
 10170  0126                     l6294:
 10171  0126  0838               	movf	main@corrupted^(0+128),w
 10172  0127  1903               	btfsc	3,2
 10173  0128  292A               	goto	u6371
 10174  0129  292B               	goto	u6370
 10175  012A                     u6371:
 10176  012A  29C4               	goto	l6298
 10177  012B                     u6370:
 10178  012B                     l6296:
 10179                           
 10180                           ;main.c: 1107: DATAEE_WriteByte( 0x7000 + (0 * 8), 'S');
 10181  012B  3000               	movlw	0
 10182  012C  0020               	movlb	0	; select bank0
 10183  012D  00A0               	movwf	DATAEE_WriteByte@bAdd
 10184  012E  3070               	movlw	112
 10185  012F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10186  0130  3053               	movlw	83
 10187  0131  00DC               	movwf	??_main
 10188  0132  085C               	movf	??_main,w
 10189  0133  00A2               	movwf	DATAEE_WriteByte@bData
 10190  0134  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10191                           
 10192                           ;main.c: 1108: DATAEE_WriteByte( 0x7000 + (1 * 8), 25);
 10193  0137  3008               	movlw	8
 10194  0138  0020               	movlb	0	; select bank0
 10195  0139  00A0               	movwf	DATAEE_WriteByte@bAdd
 10196  013A  3070               	movlw	112
 10197  013B  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10198  013C  3019               	movlw	25
 10199  013D  00DC               	movwf	??_main
 10200  013E  085C               	movf	??_main,w
 10201  013F  00A2               	movwf	DATAEE_WriteByte@bData
 10202  0140  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10203                           
 10204                           ;main.c: 1109: DATAEE_WriteByte( 0x7000 + (2 * 8), 3);
 10205  0143  3010               	movlw	16
 10206  0144  0020               	movlb	0	; select bank0
 10207  0145  00A0               	movwf	DATAEE_WriteByte@bAdd
 10208  0146  3070               	movlw	112
 10209  0147  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10210  0148  3003               	movlw	3
 10211  0149  00DC               	movwf	??_main
 10212  014A  085C               	movf	??_main,w
 10213  014B  00A2               	movwf	DATAEE_WriteByte@bData
 10214  014C  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10215                           
 10216                           ;main.c: 1110: DATAEE_WriteByte( 0x7000 + (3 * 8), 5);
 10217  014F  3018               	movlw	24
 10218  0150  0020               	movlb	0	; select bank0
 10219  0151  00A0               	movwf	DATAEE_WriteByte@bAdd
 10220  0152  3070               	movlw	112
 10221  0153  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10222  0154  3005               	movlw	5
 10223  0155  00DC               	movwf	??_main
 10224  0156  085C               	movf	??_main,w
 10225  0157  00A2               	movwf	DATAEE_WriteByte@bData
 10226  0158  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10227                           
 10228                           ;main.c: 1111: DATAEE_WriteByte( 0x7000 + (4 * 8), 12);
 10229  015B  3020               	movlw	32
 10230  015C  0020               	movlb	0	; select bank0
 10231  015D  00A0               	movwf	DATAEE_WriteByte@bAdd
 10232  015E  3070               	movlw	112
 10233  015F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10234  0160  300C               	movlw	12
 10235  0161  00DC               	movwf	??_main
 10236  0162  085C               	movf	??_main,w
 10237  0163  00A2               	movwf	DATAEE_WriteByte@bData
 10238  0164  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10239                           
 10240                           ;main.c: 1112: DATAEE_WriteByte( 0x7000 + (5 * 8), 0);
 10241  0167  3028               	movlw	40
 10242  0168  0020               	movlb	0	; select bank0
 10243  0169  00A0               	movwf	DATAEE_WriteByte@bAdd
 10244  016A  3070               	movlw	112
 10245  016B  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10246  016C  01A2               	clrf	DATAEE_WriteByte@bData
 10247  016D  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10248                           
 10249                           ;main.c: 1113: DATAEE_WriteByte( 0x7000 + (6 * 8), 0);
 10250  0170  3030               	movlw	48
 10251  0171  0020               	movlb	0	; select bank0
 10252  0172  00A0               	movwf	DATAEE_WriteByte@bAdd
 10253  0173  3070               	movlw	112
 10254  0174  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10255  0175  01A2               	clrf	DATAEE_WriteByte@bData
 10256  0176  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10257                           
 10258                           ;main.c: 1114: DATAEE_WriteByte( 0x7000 + (7 * 8), 28);
 10259  0179  3038               	movlw	56
 10260  017A  0020               	movlb	0	; select bank0
 10261  017B  00A0               	movwf	DATAEE_WriteByte@bAdd
 10262  017C  3070               	movlw	112
 10263  017D  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10264  017E  301C               	movlw	28
 10265  017F  00DC               	movwf	??_main
 10266  0180  085C               	movf	??_main,w
 10267  0181  00A2               	movwf	DATAEE_WriteByte@bData
 10268  0182  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10269                           
 10270                           ;main.c: 1115: DATAEE_WriteByte( 0x7000 + (8 * 8), 4);
 10271  0185  3040               	movlw	64
 10272  0186  0020               	movlb	0	; select bank0
 10273  0187  00A0               	movwf	DATAEE_WriteByte@bAdd
 10274  0188  3070               	movlw	112
 10275  0189  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10276  018A  3004               	movlw	4
 10277  018B  00DC               	movwf	??_main
 10278  018C  085C               	movf	??_main,w
 10279  018D  00A2               	movwf	DATAEE_WriteByte@bData
 10280  018E  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10281                           
 10282                           ;main.c: 1116: DATAEE_WriteByte( 0x7000 + (9 * 8), 'a');
 10283  0191  3048               	movlw	72
 10284  0192  0020               	movlb	0	; select bank0
 10285  0193  00A0               	movwf	DATAEE_WriteByte@bAdd
 10286  0194  3070               	movlw	112
 10287  0195  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10288  0196  3061               	movlw	97
 10289  0197  00DC               	movwf	??_main
 10290  0198  085C               	movf	??_main,w
 10291  0199  00A2               	movwf	DATAEE_WriteByte@bData
 10292  019A  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10293                           
 10294                           ;main.c: 1117: DATAEE_WriteByte( 0x7000 + (10 * 8), 0);
 10295  019D  3050               	movlw	80
 10296  019E  0020               	movlb	0	; select bank0
 10297  019F  00A0               	movwf	DATAEE_WriteByte@bAdd
 10298  01A0  3070               	movlw	112
 10299  01A1  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10300  01A2  01A2               	clrf	DATAEE_WriteByte@bData
 10301  01A3  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10302                           
 10303                           ;main.c: 1118: DATAEE_WriteByte( 0x7000 + (11 * 8), 0);
 10304  01A6  3058               	movlw	88
 10305  01A7  0020               	movlb	0	; select bank0
 10306  01A8  00A0               	movwf	DATAEE_WriteByte@bAdd
 10307  01A9  3070               	movlw	112
 10308  01AA  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10309  01AB  01A2               	clrf	DATAEE_WriteByte@bData
 10310  01AC  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10311                           
 10312                           ;main.c: 1119: DATAEE_WriteByte( 0x7000 + (12 * 8), 0);
 10313  01AF  3060               	movlw	96
 10314  01B0  0020               	movlb	0	; select bank0
 10315  01B1  00A0               	movwf	DATAEE_WriteByte@bAdd
 10316  01B2  3070               	movlw	112
 10317  01B3  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10318  01B4  01A2               	clrf	DATAEE_WriteByte@bData
 10319  01B5  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10320                           
 10321                           ;main.c: 1120: DATAEE_WriteByte( 0x7000 + (13 * 8), 174);
 10322  01B8  3068               	movlw	104
 10323  01B9  0020               	movlb	0	; select bank0
 10324  01BA  00A0               	movwf	DATAEE_WriteByte@bAdd
 10325  01BB  3070               	movlw	112
 10326  01BC  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10327  01BD  30AE               	movlw	174
 10328  01BE  00DC               	movwf	??_main
 10329  01BF  085C               	movf	??_main,w
 10330  01C0  00A2               	movwf	DATAEE_WriteByte@bData
 10331  01C1  3192  22F2  3180   	fcall	_DATAEE_WriteByte
 10332  01C4                     l6298:
 10333                           
 10334                           ;main.c: 1121: };main.c: 1123: NREG = DATAEE_ReadByte(0x7000 + (1*8));
 10335  01C4  3008               	movlw	8
 10336  01C5  0020               	movlb	0	; select bank0
 10337  01C6  00A6               	movwf	DATAEE_ReadByte@bAdd
 10338  01C7  3070               	movlw	112
 10339  01C8  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10340  01C9  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10341  01CC  0020               	movlb	0	; select bank0
 10342  01CD  00DC               	movwf	??_main
 10343  01CE  085C               	movf	??_main,w
 10344  01CF  00EF               	movwf	_NREG
 10345  01D0                     l6300:
 10346                           
 10347                           ;main.c: 1124: PMON = DATAEE_ReadByte(0x7000 + (2*8));
 10348  01D0  3010               	movlw	16
 10349  01D1  00A6               	movwf	DATAEE_ReadByte@bAdd
 10350  01D2  3070               	movlw	112
 10351  01D3  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10352  01D4  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10353  01D7  0020               	movlb	0	; select bank0
 10354  01D8  00DC               	movwf	??_main
 10355  01D9  085C               	movf	??_main,w
 10356  01DA  0021               	movlb	1	; select bank1
 10357  01DB  00EE               	movwf	_PMON^(0+128)
 10358  01DC                     l6302:
 10359                           
 10360                           ;main.c: 1125: TALA = DATAEE_ReadByte(0x7000 + (3*8));
 10361  01DC  3018               	movlw	24
 10362  01DD  0020               	movlb	0	; select bank0
 10363  01DE  00A6               	movwf	DATAEE_ReadByte@bAdd
 10364  01DF  3070               	movlw	112
 10365  01E0  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10366  01E1  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10367  01E4  0020               	movlb	0	; select bank0
 10368  01E5  00DC               	movwf	??_main
 10369  01E6  085C               	movf	??_main,w
 10370  01E7  0021               	movlb	1	; select bank1
 10371  01E8  00ED               	movwf	_TALA^(0+128)
 10372  01E9                     l6304:
 10373                           
 10374                           ;main.c: 1126: clkAlarm.alarmVal.h = DATAEE_ReadByte(0x7000 + (4*8));
 10375  01E9  3020               	movlw	32
 10376  01EA  0020               	movlb	0	; select bank0
 10377  01EB  00A6               	movwf	DATAEE_ReadByte@bAdd
 10378  01EC  3070               	movlw	112
 10379  01ED  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10380  01EE  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10381  01F1  0020               	movlb	0	; select bank0
 10382  01F2  00DC               	movwf	??_main
 10383  01F3  085C               	movf	??_main,w
 10384  01F4  0021               	movlb	1	; select bank1
 10385  01F5  00C0               	movwf	_clkAlarm^(0+128)
 10386  01F6                     l6306:
 10387                           
 10388                           ;main.c: 1127: clkAlarm.alarmVal.m = DATAEE_ReadByte(0x7000 + (5*8));
 10389  01F6  3028               	movlw	40
 10390  01F7  0020               	movlb	0	; select bank0
 10391  01F8  00A6               	movwf	DATAEE_ReadByte@bAdd
 10392  01F9  3070               	movlw	112
 10393  01FA  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10394  01FB  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10395  01FE  0020               	movlb	0	; select bank0
 10396  01FF  00DC               	movwf	??_main
 10397  0200  085C               	movf	??_main,w
 10398  0201  0021               	movlb	1	; select bank1
 10399  0202  00C1               	movwf	(_clkAlarm^(0+128)+1)
 10400  0203                     l6308:
 10401                           
 10402                           ;main.c: 1128: clkAlarm.alarmVal.s = DATAEE_ReadByte(0x7000 + (6*8));
 10403  0203  3030               	movlw	48
 10404  0204  0020               	movlb	0	; select bank0
 10405  0205  00A6               	movwf	DATAEE_ReadByte@bAdd
 10406  0206  3070               	movlw	112
 10407  0207  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10408  0208  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10409  020B  0020               	movlb	0	; select bank0
 10410  020C  00DC               	movwf	??_main
 10411  020D  085C               	movf	??_main,w
 10412  020E  0021               	movlb	1	; select bank1
 10413  020F  00C2               	movwf	(_clkAlarm^(0+128)+2)
 10414  0210                     l6310:
 10415                           
 10416                           ;main.c: 1129: tempAlarm.alarmTemp = DATAEE_ReadByte(0x7000 + (7*8));
 10417  0210  3038               	movlw	56
 10418  0211  0020               	movlb	0	; select bank0
 10419  0212  00A6               	movwf	DATAEE_ReadByte@bAdd
 10420  0213  3070               	movlw	112
 10421  0214  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10422  0215  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10423  0218  0020               	movlb	0	; select bank0
 10424  0219  00DC               	movwf	??_main
 10425  021A  085C               	movf	??_main,w
 10426  021B  0021               	movlb	1	; select bank1
 10427  021C  00CA               	movwf	_tempAlarm^(0+128)
 10428  021D                     l6312:
 10429                           
 10430                           ;main.c: 1130: lumAlarm.alarmLum = DATAEE_ReadByte(0x7000 + (8*8));
 10431  021D  3040               	movlw	64
 10432  021E  0020               	movlb	0	; select bank0
 10433  021F  00A6               	movwf	DATAEE_ReadByte@bAdd
 10434  0220  3070               	movlw	112
 10435  0221  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10436  0222  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10437  0225  0020               	movlb	0	; select bank0
 10438  0226  00DC               	movwf	??_main
 10439  0227  085C               	movf	??_main,w
 10440  0228  0021               	movlb	1	; select bank1
 10441  0229  00C7               	movwf	_lumAlarm^(0+128)
 10442  022A                     l6314:
 10443                           
 10444                           ;main.c: 1131: ALAF = DATAEE_ReadByte(0x7000 + (9*8));
 10445  022A  3048               	movlw	72
 10446  022B  0020               	movlb	0	; select bank0
 10447  022C  00A6               	movwf	DATAEE_ReadByte@bAdd
 10448  022D  3070               	movlw	112
 10449  022E  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10450  022F  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10451  0232  0020               	movlb	0	; select bank0
 10452  0233  00DC               	movwf	??_main
 10453  0234  085C               	movf	??_main,w
 10454  0235  00EA               	movwf	_ALAF
 10455  0236                     l6316:
 10456                           
 10457                           ;main.c: 1132: t.h = DATAEE_ReadByte(0x7000 + (10*8));
 10458  0236  3050               	movlw	80
 10459  0237  00A6               	movwf	DATAEE_ReadByte@bAdd
 10460  0238  3070               	movlw	112
 10461  0239  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10462  023A  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10463  023D  0020               	movlb	0	; select bank0
 10464  023E  00DC               	movwf	??_main
 10465  023F  085C               	movf	??_main,w
 10466  0240  00DF               	movwf	_t
 10467  0241                     l6318:
 10468                           
 10469                           ;main.c: 1133: t.m = DATAEE_ReadByte(0x7000 + (11*8));
 10470  0241  3058               	movlw	88
 10471  0242  00A6               	movwf	DATAEE_ReadByte@bAdd
 10472  0243  3070               	movlw	112
 10473  0244  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10474  0245  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10475  0248  0020               	movlb	0	; select bank0
 10476  0249  00DC               	movwf	??_main
 10477  024A  085C               	movf	??_main,w
 10478  024B  00E0               	movwf	_t+1
 10479  024C                     l6320:
 10480                           
 10481                           ;main.c: 1134: iwrite = DATAEE_ReadByte(0x7000 + (12*8));
 10482  024C  3060               	movlw	96
 10483  024D  00A6               	movwf	DATAEE_ReadByte@bAdd
 10484  024E  3070               	movlw	112
 10485  024F  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10486  0250  3190  2076  3180   	fcall	_DATAEE_ReadByte
 10487  0253  0020               	movlb	0	; select bank0
 10488  0254  00DC               	movwf	??_main
 10489  0255  085C               	movf	??_main,w
 10490  0256  00FD               	movwf	_iwrite
 10491  0257                     l6322:
 10492                           
 10493                           ;main.c: 1138: tempAlarm.trigger = 0;
 10494  0257  0021               	movlb	1	; select bank1
 10495  0258  01CB               	clrf	(_tempAlarm^(0+128)+1)
 10496  0259                     l6324:
 10497                           
 10498                           ;main.c: 1139: tempAlarm.triggered = 0;
 10499  0259  01CC               	clrf	(_tempAlarm^(0+128)+2)
 10500  025A                     l6326:
 10501                           
 10502                           ;main.c: 1141: lumAlarm.trigger = 0;
 10503  025A  01C8               	clrf	(_lumAlarm^(0+128)+1)
 10504  025B                     l6328:
 10505                           
 10506                           ;main.c: 1142: lumAlarm.triggered = 0;
 10507  025B  01C9               	clrf	(_lumAlarm^(0+128)+2)
 10508  025C                     l6330:
 10509                           
 10510                           ;main.c: 1144: clkAlarm.trigger = 0;
 10511  025C  01C3               	clrf	(_clkAlarm^(0+128)+3)
 10512  025D                     l6332:
 10513                           
 10514                           ;main.c: 1147: i2c1_driver_open();
 10515  025D  3190  2034  3180   	fcall	_i2c1_driver_open
 10516  0260                     l6334:
 10517                           
 10518                           ;main.c: 1148: TRISCbits.TRISC3 = 1;
 10519  0260  0020               	movlb	0	; select bank0
 10520  0261  1593               	bsf	19,3	;volatile
 10521  0262                     l6336:
 10522                           
 10523                           ;main.c: 1149: TRISCbits.TRISC4 = 1;
 10524  0262  1613               	bsf	19,4	;volatile
 10525  0263                     l6338:
 10526                           
 10527                           ;main.c: 1150: WPUC3 = 1;
 10528  0263  003E               	movlb	30	; select bank30
 10529  0264  15CF               	bsf	79,3	;volatile
 10530  0265                     l6340:
 10531                           
 10532                           ;main.c: 1151: WPUC4 = 1;
 10533  0265  164F               	bsf	79,4	;volatile
 10534  0266                     l6342:
 10535                           
 10536                           ;main.c: 1152: LCDinit();
 10537  0266  3188  20BC  3180   	fcall	_LCDinit
 10538  0269                     l6344:
 10539                           
 10540                           ;main.c: 1155: (INTCONbits.GIE = 1);
 10541  0269  178B               	bsf	11,7	;volatile
 10542  026A                     l6346:
 10543                           
 10544                           ;main.c: 1158: (INTCONbits.PEIE = 1);
 10545  026A  170B               	bsf	11,6	;volatile
 10546  026B                     l6348:
 10547                           
 10548                           ;main.c: 1162: uint8_t c;;main.c: 1163: char buff[20] = "";
 10549  026B  30A0               	movlw	low main@buff
 10550  026C  0086               	movwf	6
 10551  026D  3000               	movlw	high main@buff
 10552  026E  0087               	movwf	7
 10553  026F  3014               	movlw	20
 10554  0270  0020               	movlb	0	; select bank0
 10555  0271  00DC               	movwf	??_main
 10556  0272  3000               	movlw	0
 10557  0273                     u6380:
 10558  0273  001E               	movwi fsr1++
 10559  0274  0BDC               	decfsz	??_main,f
 10560  0275  2A73               	goto	u6380
 10561  0276                     l6350:
 10562                           
 10563                           ;main.c: 1164: int n=0;
 10564  0276  0021               	movlb	1	; select bank1
 10565  0277  01BE               	clrf	main@n^(0+128)
 10566  0278  01BF               	clrf	(main@n+1)^(0+128)
 10567  0279                     l6352:
 10568  0279  2AD0               	goto	l6380
 10569  027A                     l6354:
 10570                           
 10571                           ;main.c: 1191: c = getch();
 10572  027A  3188  2001  3180   	fcall	_getch
 10573  027D  0020               	movlb	0	; select bank0
 10574  027E  00DC               	movwf	??_main
 10575  027F  085C               	movf	??_main,w
 10576  0280  0021               	movlb	1	; select bank1
 10577  0281  00BD               	movwf	main@c^(0+128)
 10578  0282                     l6356:
 10579                           
 10580                           ;main.c: 1192: if((c == (uint8_t)0xFD || buff[0] == (uint8_t)0xFD)){
 10581  0282  30FD               	movlw	253
 10582  0283  063D               	xorwf	main@c^(0+128),w
 10583  0284  1903               	btfsc	3,2
 10584  0285  2A87               	goto	u6391
 10585  0286  2A88               	goto	u6390
 10586  0287                     u6391:
 10587  0287  2A8E               	goto	l6360
 10588  0288                     u6390:
 10589  0288                     l6358:
 10590  0288  30FD               	movlw	253
 10591  0289  0620               	xorwf	main@buff^(0+128),w
 10592  028A  1D03               	btfss	3,2
 10593  028B  2A8D               	goto	u6401
 10594  028C  2A8E               	goto	u6400
 10595  028D                     u6401:
 10596  028D  2AC9               	goto	l6376
 10597  028E                     u6400:
 10598  028E                     l6360:
 10599                           
 10600                           ;main.c: 1193: if(c == (uint8_t)0xFD){
 10601  028E  30FD               	movlw	253
 10602  028F  063D               	xorwf	main@c^(0+128),w
 10603  0290  1D03               	btfss	3,2
 10604  0291  2A93               	goto	u6411
 10605  0292  2A94               	goto	u6410
 10606  0293                     u6411:
 10607  0293  2AA3               	goto	l6366
 10608  0294                     u6410:
 10609  0294                     l6362:
 10610                           
 10611                           ;main.c: 1194: memset(buff, 0, sizeof buff);
 10612  0294  3000               	movlw	0
 10613  0295  0020               	movlb	0	; select bank0
 10614  0296  00A0               	movwf	memset@c
 10615  0297  00A1               	movwf	memset@c+1
 10616  0298  3014               	movlw	20
 10617  0299  00A2               	movwf	memset@n
 10618  029A  3000               	movlw	0
 10619  029B  00A3               	movwf	memset@n+1
 10620  029C  30A0               	movlw	(low (main@buff| 0))& (0+255)
 10621  029D  3192  224D  3180   	fcall	_memset
 10622  02A0                     l6364:
 10623                           
 10624                           ;main.c: 1195: n=0;
 10625  02A0  0021               	movlb	1	; select bank1
 10626  02A1  01BE               	clrf	main@n^(0+128)
 10627  02A2  01BF               	clrf	(main@n+1)^(0+128)
 10628  02A3                     l6366:
 10629                           
 10630                           ;main.c: 1196: };main.c: 1197: buff[n] = c;
 10631  02A3  083D               	movf	main@c^(0+128),w
 10632  02A4  0020               	movlb	0	; select bank0
 10633  02A5  00DC               	movwf	??_main
 10634  02A6  0021               	movlb	1	; select bank1
 10635  02A7  083E               	movf	main@n^(0+128),w
 10636  02A8  3EA0               	addlw	(low (main@buff| 0))& (0+255)
 10637  02A9  0086               	movwf	6
 10638  02AA  0187               	clrf	7
 10639  02AB  0020               	movlb	0	; select bank0
 10640  02AC  085C               	movf	??_main,w
 10641  02AD  0081               	movwf	1
 10642  02AE                     l6368:
 10643                           
 10644                           ;main.c: 1198: n++;
 10645  02AE  3001               	movlw	1
 10646  02AF  0021               	movlb	1	; select bank1
 10647  02B0  07BE               	addwf	main@n^(0+128),f
 10648  02B1  3000               	movlw	0
 10649  02B2  3DBF               	addwfc	(main@n+1)^(0+128),f
 10650  02B3                     l6370:
 10651                           
 10652                           ;main.c: 1199: if(n == 20){
 10653  02B3  3014               	movlw	20
 10654  02B4  063E               	xorwf	main@n^(0+128),w
 10655  02B5  043F               	iorwf	(main@n+1)^(0+128),w
 10656  02B6  1D03               	btfss	3,2
 10657  02B7  2AB9               	goto	u6421
 10658  02B8  2ABA               	goto	u6420
 10659  02B9                     u6421:
 10660  02B9  2AC9               	goto	l6376
 10661  02BA                     u6420:
 10662  02BA                     l6372:
 10663                           
 10664                           ;main.c: 1200: memset(buff, 0, sizeof buff);
 10665  02BA  3000               	movlw	0
 10666  02BB  0020               	movlb	0	; select bank0
 10667  02BC  00A0               	movwf	memset@c
 10668  02BD  00A1               	movwf	memset@c+1
 10669  02BE  3014               	movlw	20
 10670  02BF  00A2               	movwf	memset@n
 10671  02C0  3000               	movlw	0
 10672  02C1  00A3               	movwf	memset@n+1
 10673  02C2  30A0               	movlw	(low (main@buff| 0))& (0+255)
 10674  02C3  3192  224D  3180   	fcall	_memset
 10675  02C6                     l6374:
 10676                           
 10677                           ;main.c: 1201: n=0;
 10678  02C6  0021               	movlb	1	; select bank1
 10679  02C7  01BE               	clrf	main@n^(0+128)
 10680  02C8  01BF               	clrf	(main@n+1)^(0+128)
 10681  02C9                     l6376:
 10682                           
 10683                           ;main.c: 1202: };main.c: 1203: };main.c: 1204: if(c == (uint8_t)0xFE){
 10684  02C9  30FE               	movlw	254
 10685  02CA  063D               	xorwf	main@c^(0+128),w
 10686  02CB  1D03               	btfss	3,2
 10687  02CC  2ACE               	goto	u6431
 10688  02CD  2ACF               	goto	u6430
 10689  02CE                     u6431:
 10690  02CE  2AD0               	goto	l6380
 10691  02CF                     u6430:
 10692  02CF  2AD8               	goto	l6382
 10693  02D0                     l1606:
 10694  02D0                     l6380:
 10695  02D0  319F  279C  3180   	fcall	_EUSART_is_rx_ready
 10696  02D3  3A00               	xorlw	0
 10697  02D4  1D03               	skipz
 10698  02D5  2AD7               	goto	u6441
 10699  02D6  2AD8               	goto	u6440
 10700  02D7                     u6441:
 10701  02D7  2A7A               	goto	l6354
 10702  02D8                     u6440:
 10703  02D8                     l6382:
 10704                           
 10705                           ;main.c: 1206: };main.c: 1207: };main.c: 1208: if(buff[n-1] == (uint8_t)0xFE){
 10706  02D8  0021               	movlb	1	; select bank1
 10707  02D9  083E               	movf	main@n^(0+128),w
 10708  02DA  3EFF               	addlw	255
 10709  02DB  3EA0               	addlw	(low (main@buff| 0))& (0+255)
 10710  02DC  0086               	movwf	6
 10711  02DD  0187               	clrf	7
 10712  02DE  30FE               	movlw	254
 10713  02DF  0601               	xorwf	1,w
 10714  02E0  1D03               	btfss	3,2
 10715  02E1  2AE3               	goto	u6451
 10716  02E2  2AE4               	goto	u6450
 10717  02E3                     u6451:
 10718  02E3  2B4E               	goto	l6404
 10719  02E4                     u6450:
 10720  02E4                     l6384:
 10721                           
 10722                           ;main.c: 1209: for (i = 0; i < (sizeof(commands) / sizeof(struct command_d)); i++){
 10723  02E4  01BB               	clrf	main@i_2704^(0+128)
 10724  02E5  01BC               	clrf	(main@i_2704+1)^(0+128)
 10725  02E6                     l6390:
 10726                           
 10727                           ;main.c: 1210: if (buff[1] == commands[i].cmd_name){
 10728  02E6  083C               	movf	(main@i_2704+1)^(0+128),w
 10729  02E7  0020               	movlb	0	; select bank0
 10730  02E8  00A1               	movwf	___wmul@multiplier+1
 10731  02E9  0021               	movlb	1	; select bank1
 10732  02EA  083B               	movf	main@i_2704^(0+128),w
 10733  02EB  0020               	movlb	0	; select bank0
 10734  02EC  00A0               	movwf	___wmul@multiplier
 10735  02ED  3003               	movlw	3
 10736  02EE  00A2               	movwf	___wmul@multiplicand
 10737  02EF  3000               	movlw	0
 10738  02F0  00A3               	movwf	___wmul@multiplicand+1
 10739  02F1  3192  226C  3180   	fcall	___wmul
 10740  02F4  0020               	movlb	0	; select bank0
 10741  02F5  0821               	movf	?___wmul+1,w
 10742  02F6  0085               	movwf	5
 10743  02F7  0820               	movf	?___wmul,w
 10744  02F8  0084               	movwf	4
 10745  02F9  3002               	movlw	low ((_commands+2)| (0+32768))
 10746  02FA  0784               	addwf	4,f
 10747  02FB  3098               	movlw	high ((_commands+2)| (0+32768))
 10748  02FC  3D85               	addwfc	5,f
 10749  02FD  0800               	movf	0,w	;code access
 10750  02FE  0021               	movlb	1	; select bank1
 10751  02FF  0621               	xorwf	(main@buff^(0+128)+1),w
 10752  0300  1D03               	skipz
 10753  0301  2B03               	goto	u6461
 10754  0302  2B04               	goto	u6460
 10755  0303                     u6461:
 10756  0303  2B32               	goto	l6396
 10757  0304                     u6460:
 10758  0304                     l6392:
 10759                           
 10760                           ;main.c: 1211: commands[i].cmd_fnct(n, buff);
 10761  0304  083C               	movf	(main@i_2704+1)^(0+128),w
 10762  0305  0020               	movlb	0	; select bank0
 10763  0306  00A1               	movwf	___wmul@multiplier+1
 10764  0307  0021               	movlb	1	; select bank1
 10765  0308  083B               	movf	main@i_2704^(0+128),w
 10766  0309  0020               	movlb	0	; select bank0
 10767  030A  00A0               	movwf	___wmul@multiplier
 10768  030B  3003               	movlw	3
 10769  030C  00A2               	movwf	___wmul@multiplicand
 10770  030D  3000               	movlw	0
 10771  030E  00A3               	movwf	___wmul@multiplicand+1
 10772  030F  3192  226C  3180   	fcall	___wmul
 10773  0312  0020               	movlb	0	; select bank0
 10774  0313  0821               	movf	?___wmul+1,w
 10775  0314  0085               	movwf	5
 10776  0315  0820               	movf	?___wmul,w
 10777  0316  0084               	movwf	4
 10778  0317  3000               	movlw	low (_commands| (0+32768))
 10779  0318  0784               	addwf	4,f
 10780  0319  3098               	movlw	high (_commands| (0+32768))
 10781  031A  3D85               	addwfc	5,f
 10782  031B  3F00               	moviw [0]fsr0
 10783  031C  0021               	movlb	1	; select bank1
 10784  031D  00B4               	movwf	_main$3687^(0+128)
 10785  031E  3F01               	moviw [1]fsr0
 10786  031F  00B5               	movwf	(_main$3687+1)^(0+128)
 10787  0320                     l6394:
 10788                           
 10789                           ;main.c: 1211: commands[i].cmd_fnct(n, buff);
 10790  0320  083F               	movf	(main@n+1)^(0+128),w
 10791  0321  0020               	movlb	0	; select bank0
 10792  0322  00B0               	movwf	cmd_tri@num+1
 10793  0323  0021               	movlb	1	; select bank1
 10794  0324  083E               	movf	main@n^(0+128),w
 10795  0325  0020               	movlb	0	; select bank0
 10796  0326  00AF               	movwf	cmd_tri@num
 10797  0327  30A0               	movlw	(low (main@buff| 0))& (0+255)
 10798  0328  00DC               	movwf	??_main
 10799  0329  085C               	movf	??_main,w
 10800  032A  00B1               	movwf	cmd_tri@buffer
 10801  032B  0021               	movlb	1	; select bank1
 10802  032C  0835               	movf	(_main$3687+1)^(0+128),w
 10803  032D  008A               	movwf	10
 10804  032E  0834               	movf	_main$3687^(0+128),w
 10805  032F  000A               	callw
 10806  0330  3180               	pagesel	$
 10807                           
 10808                           ;main.c: 1212: break;
 10809  0331  2B3F               	goto	l6398
 10810  0332                     l6396:
 10811  0332  3001               	movlw	1
 10812  0333  07BB               	addwf	main@i_2704^(0+128),f
 10813  0334  3000               	movlw	0
 10814  0335  3DBC               	addwfc	(main@i_2704+1)^(0+128),f
 10815  0336  3000               	movlw	0
 10816  0337  023C               	subwf	(main@i_2704+1)^(0+128),w
 10817  0338  300D               	movlw	13
 10818  0339  1903               	skipnz
 10819  033A  023B               	subwf	main@i_2704^(0+128),w
 10820  033B  1C03               	skipc
 10821  033C  2B3E               	goto	u6471
 10822  033D  2B3F               	goto	u6470
 10823  033E                     u6471:
 10824  033E  2AE6               	goto	l6390
 10825  033F                     u6470:
 10826  033F                     l6398:
 10827                           
 10828                           ;main.c: 1213: };main.c: 1214: };main.c: 1215: memset(buff, 0, sizeof buff);
 10829  033F  3000               	movlw	0
 10830  0340  0020               	movlb	0	; select bank0
 10831  0341  00A0               	movwf	memset@c
 10832  0342  00A1               	movwf	memset@c+1
 10833  0343  3014               	movlw	20
 10834  0344  00A2               	movwf	memset@n
 10835  0345  3000               	movlw	0
 10836  0346  00A3               	movwf	memset@n+1
 10837  0347  30A0               	movlw	(low (main@buff| 0))& (0+255)
 10838  0348  3192  224D  3180   	fcall	_memset
 10839  034B                     l6400:
 10840  034B                     l6402:
 10841                           
 10842                           ;main.c: 1217: n=0;
 10843  034B  0021               	movlb	1	; select bank1
 10844  034C  01BE               	clrf	main@n^(0+128)
 10845  034D  01BF               	clrf	(main@n+1)^(0+128)
 10846  034E                     l6404:
 10847                           
 10848                           ;main.c: 1218: };main.c: 1220: if(flagS1pushed){
 10849  034E  0020               	movlb	0	; select bank0
 10850  034F  0867               	movf	_flagS1pushed,w
 10851  0350  1903               	btfsc	3,2
 10852  0351  2B53               	goto	u6481
 10853  0352  2B54               	goto	u6480
 10854  0353                     u6481:
 10855  0353  2B59               	goto	l6410
 10856  0354                     u6480:
 10857  0354                     l6406:
 10858                           
 10859                           ;main.c: 1221: S1button();
 10860  0354  3187  279B  3180   	fcall	_S1button
 10861  0357                     l6408:
 10862                           
 10863                           ;main.c: 1222: flagS1pushed=0;
 10864  0357  0020               	movlb	0	; select bank0
 10865  0358  01E7               	clrf	_flagS1pushed
 10866  0359                     l6410:
 10867                           
 10868                           ;main.c: 1226: };main.c: 1228: if(PWM_on){
 10869  0359  0021               	movlb	1	; select bank1
 10870  035A  0855               	movf	_PWM_on^(0+128),w
 10871  035B  1903               	btfsc	3,2
 10872  035C  2B5E               	goto	u6491
 10873  035D  2B5F               	goto	u6490
 10874  035E                     u6491:
 10875  035E  2B91               	goto	l6426
 10876  035F                     u6490:
 10877  035F                     l6412:
 10878                           
 10879                           ;main.c: 1229: if(PWM6EN==0){
 10880  035F  0027               	movlb	7	; select bank7
 10881  0360  1B8E               	btfsc	14,7	;volatile
 10882  0361  2B63               	goto	u6501
 10883  0362  2B64               	goto	u6500
 10884  0363                     u6501:
 10885  0363  2B6A               	goto	l6416
 10886  0364                     u6500:
 10887  0364                     l6414:
 10888                           
 10889                           ;main.c: 1230: TMR2_StartTimer();
 10890  0364  319F  27B1  3180   	fcall	_TMR2_StartTimer
 10891                           
 10892                           ;main.c: 1231: PWM_Output_D4_Enable();
 10893  0367  319F  279F  3180   	fcall	_PWM_Output_D4_Enable
 10894  036A                     l6416:
 10895                           
 10896                           ;main.c: 1232: };main.c: 1233: if(dimingLed <= 1023){
 10897  036A  0021               	movlb	1	; select bank1
 10898  036B  084E               	movf	(_dimingLed+1)^(0+128),w
 10899  036C  3A80               	xorlw	128
 10900  036D  0020               	movlb	0	; select bank0
 10901  036E  00DC               	movwf	??_main
 10902  036F  3084               	movlw	132
 10903  0370  025C               	subwf	??_main,w
 10904  0371  1D03               	skipz
 10905  0372  2B76               	goto	u6515
 10906  0373  3000               	movlw	0
 10907  0374  0021               	movlb	1	; select bank1
 10908  0375  024D               	subwf	_dimingLed^(0+128),w
 10909  0376                     u6515:
 10910  0376  1803               	skipnc
 10911  0377  2B79               	goto	u6511
 10912  0378  2B7A               	goto	u6510
 10913  0379                     u6511:
 10914  0379  2B80               	goto	l6420
 10915  037A                     u6510:
 10916  037A                     l6418:
 10917                           
 10918                           ;main.c: 1234: dimingLed += 1;
 10919  037A  3001               	movlw	1
 10920  037B  0021               	movlb	1	; select bank1
 10921  037C  07CD               	addwf	_dimingLed^(0+128),f
 10922  037D  3000               	movlw	0
 10923  037E  3DCE               	addwfc	(_dimingLed+1)^(0+128),f
 10924                           
 10925                           ;main.c: 1235: } else{
 10926  037F  2B83               	goto	l6422
 10927  0380                     l6420:
 10928                           
 10929                           ;main.c: 1236: dimingLed = 0;
 10930  0380  0021               	movlb	1	; select bank1
 10931  0381  01CD               	clrf	_dimingLed^(0+128)
 10932  0382  01CE               	clrf	(_dimingLed+1)^(0+128)
 10933  0383                     l6422:
 10934                           
 10935                           ;main.c: 1237: };main.c: 1238: PWM6_LoadDutyValue(dimingLed);
 10936  0383  084E               	movf	(_dimingLed+1)^(0+128),w
 10937  0384  0020               	movlb	0	; select bank0
 10938  0385  00A1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10939  0386  0021               	movlb	1	; select bank1
 10940  0387  084D               	movf	_dimingLed^(0+128),w
 10941  0388  0020               	movlb	0	; select bank0
 10942  0389  00A0               	movwf	PWM6_LoadDutyValue@dutyValue
 10943  038A  3191  2111  3180   	fcall	_PWM6_LoadDutyValue
 10944  038D                     l6424:
 10945                           
 10946                           ;main.c: 1239: _delay((unsigned long)((1)*(1000000/4000.0)));
 10947  038D  3053               	movlw	83
 10948  038E                     u6597:
 10949  038E  0B89               	decfsz	9,f
 10950  038F  2B8E               	goto	u6597
 10951  0390  0000               	nop
 10952  0391                     l6426:
 10953                           
 10954                           ;main.c: 1240: };main.c: 1242: if(modeFlag == 0){
 10955  0391  0020               	movlb	0	; select bank0
 10956  0392  0862               	movf	_modeFlag,w
 10957  0393  0463               	iorwf	_modeFlag+1,w
 10958  0394  1D03               	btfss	3,2
 10959  0395  2B97               	goto	u6521
 10960  0396  2B98               	goto	u6520
 10961  0397                     u6521:
 10962  0397  2BA3               	goto	l6434
 10963  0398                     u6520:
 10964  0398                     l6428:
 10965                           
 10966                           ;main.c: 1243: if(updateLCD){
 10967  0398  086E               	movf	_updateLCD,w
 10968  0399  1903               	btfsc	3,2
 10969  039A  2B9C               	goto	u6531
 10970  039B  2B9D               	goto	u6530
 10971  039C                     u6531:
 10972  039C  2AD0               	goto	l6380
 10973  039D                     u6530:
 10974  039D                     l6430:
 10975                           
 10976                           ;main.c: 1244: update_menuLCD();
 10977  039D  3183  23E1  3180   	fcall	_update_menuLCD
 10978  03A0                     l6432:
 10979                           
 10980                           ;main.c: 1245: updateLCD=0;
 10981  03A0  0020               	movlb	0	; select bank0
 10982  03A1  01EE               	clrf	_updateLCD
 10983  03A2  2AD0               	goto	l6380
 10984  03A3                     l6434:
 10985  03A3  0362               	decf	_modeFlag,w
 10986  03A4  0463               	iorwf	_modeFlag+1,w
 10987  03A5  1D03               	btfss	3,2
 10988  03A6  2BA8               	goto	u6541
 10989  03A7  2BA9               	goto	u6540
 10990  03A8                     u6541:
 10991  03A8  2BAD               	goto	l6438
 10992  03A9                     u6540:
 10993  03A9                     l6436:
 10994                           
 10995                           ;main.c: 1253: editClock();
 10996  03A9  3189  2132  3180   	fcall	_editClock
 10997                           
 10998                           ;main.c: 1254: } else if(modeFlag == 2){
 10999  03AC  2AD0               	goto	l6380
 11000  03AD                     l6438:
 11001  03AD  3002               	movlw	2
 11002  03AE  0662               	xorwf	_modeFlag,w
 11003  03AF  0463               	iorwf	_modeFlag+1,w
 11004  03B0  1D03               	btfss	3,2
 11005  03B1  2BB3               	goto	u6551
 11006  03B2  2BB4               	goto	u6550
 11007  03B3                     u6551:
 11008  03B3  2BB8               	goto	l6442
 11009  03B4                     u6550:
 11010  03B4                     l6440:
 11011                           
 11012                           ;main.c: 1255: editTemp();
 11013  03B4  3197  270B  3180   	fcall	_editTemp
 11014                           
 11015                           ;main.c: 1256: } else if(modeFlag == 3){
 11016  03B7  2AD0               	goto	l6380
 11017  03B8                     l6442:
 11018  03B8  3003               	movlw	3
 11019  03B9  0662               	xorwf	_modeFlag,w
 11020  03BA  0463               	iorwf	_modeFlag+1,w
 11021  03BB  1D03               	btfss	3,2
 11022  03BC  2BBE               	goto	u6561
 11023  03BD  2BBF               	goto	u6560
 11024  03BE                     u6561:
 11025  03BE  2BC3               	goto	l6446
 11026  03BF                     u6560:
 11027  03BF                     l6444:
 11028                           
 11029                           ;main.c: 1257: editLum();
 11030  03BF  3196  26C3  3180   	fcall	_editLum
 11031                           
 11032                           ;main.c: 1258: } else if(modeFlag == 4){
 11033  03C2  2AD0               	goto	l6380
 11034  03C3                     l6446:
 11035  03C3  3004               	movlw	4
 11036  03C4  0662               	xorwf	_modeFlag,w
 11037  03C5  0463               	iorwf	_modeFlag+1,w
 11038  03C6  1D03               	btfss	3,2
 11039  03C7  2BC9               	goto	u6571
 11040  03C8  2BCA               	goto	u6570
 11041  03C9                     u6571:
 11042  03C9  2BCE               	goto	l6450
 11043  03CA                     u6570:
 11044  03CA                     l6448:
 11045                           
 11046                           ;main.c: 1259: toggleAlarms();
 11047  03CA  3195  25B9  3180   	fcall	_toggleAlarms
 11048                           
 11049                           ;main.c: 1260: } else if(modeFlag > 4){
 11050  03CD  2AD0               	goto	l6380
 11051  03CE                     l6450:
 11052  03CE  0863               	movf	_modeFlag+1,w
 11053  03CF  3A80               	xorlw	128
 11054  03D0  00DC               	movwf	??_main
 11055  03D1  3080               	movlw	128
 11056  03D2  025C               	subwf	??_main,w
 11057  03D3  1D03               	skipz
 11058  03D4  2BD7               	goto	u6585
 11059  03D5  3005               	movlw	5
 11060  03D6  0262               	subwf	_modeFlag,w
 11061  03D7                     u6585:
 11062  03D7  1C03               	skipc
 11063  03D8  2BDA               	goto	u6581
 11064  03D9  2BDB               	goto	u6580
 11065  03DA                     u6581:
 11066  03DA  2AD0               	goto	l1606
 11067  03DB                     u6580:
 11068  03DB                     l6452:
 11069                           
 11070                           ;main.c: 1261: modeFlag = 0;
 11071  03DB  0020               	movlb	0	; select bank0
 11072  03DC  01E2               	clrf	_modeFlag
 11073  03DD  01E3               	clrf	_modeFlag+1
 11074  03DE  2AD0               	goto	l6380
 11075  03DF  3180  285E         	ljmp	start
 11076  03E1                     __end_of_main:
 11077                           
 11078                           	psect	text1
 11079  15B9                     __ptext1:	
 11080 ;; *************** function _toggleAlarms *****************
 11081 ;; Defined at:
 11082 ;;		line 746 in file "main.c"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;		None
 11085 ;; Auto vars:     Size  Location     Type
 11086 ;;		None
 11087 ;; Return value:  Size  Location     Type
 11088 ;;                  1    wreg      void 
 11089 ;; Registers used:
 11090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11091 ;; Tracked objects:
 11092 ;;		On entry : 0/0
 11093 ;;		On exit  : 0/0
 11094 ;;		Unchanged: 0/0
 11095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11098 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11099 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11100 ;;Total ram usage:        1 bytes
 11101 ;; Hardware stack levels used:    1
 11102 ;; Hardware stack levels required when called:   10
 11103 ;; This function calls:
 11104 ;;		_S1button
 11105 ;;		_update_menuLCD
 11106 ;; This function is called by:
 11107 ;;		_main
 11108 ;; This function uses a non-reentrant model
 11109 ;;
 11110                           
 11111                           
 11112                           ;psect for function _toggleAlarms
 11113  15B9                     _toggleAlarms:
 11114  15B9                     l1487:	
 11115                           ;incstack = 0
 11116                           ; Regs used in _toggleAlarms: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11117                           ;main.c: 748: while(1){
 11118                           
 11119  15B9                     l5942:
 11120                           
 11121                           ;main.c: 749: if(flagS1pushed){
 11122  15B9  0020               	movlb	0	; select bank0
 11123  15BA  0867               	movf	_flagS1pushed,w
 11124  15BB  1903               	btfsc	3,2
 11125  15BC  2DBE               	goto	u5771
 11126  15BD  2DBF               	goto	u5770
 11127  15BE                     u5771:
 11128  15BE  2DC4               	goto	l5948
 11129  15BF                     u5770:
 11130  15BF                     l5944:
 11131                           
 11132                           ;main.c: 750: S1button();
 11133  15BF  3187  279B  3195   	fcall	_S1button
 11134  15C2                     l5946:
 11135                           
 11136                           ;main.c: 751: flagS1pushed=0;
 11137  15C2  0020               	movlb	0	; select bank0
 11138  15C3  01E7               	clrf	_flagS1pushed
 11139  15C4                     l5948:
 11140                           
 11141                           ;main.c: 755: };main.c: 756: if(PORTCbits.RC5 == 0){
 11142  15C4  1A8E               	btfsc	14,5	;volatile
 11143  15C5  2DC7               	goto	u5781
 11144  15C6  2DC8               	goto	u5780
 11145  15C7                     u5781:
 11146  15C7  2DE3               	goto	l5958
 11147  15C8                     u5780:
 11148  15C8                     l5950:
 11149                           
 11150                           ;main.c: 757: if(ALAF == 'A'){
 11151  15C8  3041               	movlw	65
 11152  15C9  066A               	xorwf	_ALAF,w
 11153  15CA  1D03               	btfss	3,2
 11154  15CB  2DCD               	goto	u5791
 11155  15CC  2DCE               	goto	u5790
 11156  15CD                     u5791:
 11157  15CD  2DD3               	goto	l5954
 11158  15CE                     u5790:
 11159  15CE                     l5952:
 11160                           
 11161                           ;main.c: 758: ALAF = 'a';
 11162  15CE  3061               	movlw	97
 11163  15CF  00DB               	movwf	??_toggleAlarms
 11164  15D0  085B               	movf	??_toggleAlarms,w
 11165  15D1  00EA               	movwf	_ALAF
 11166                           
 11167                           ;main.c: 759: } else {
 11168  15D2  2DD7               	goto	l1491
 11169  15D3                     l5954:
 11170                           
 11171                           ;main.c: 760: ALAF = 'A';
 11172  15D3  3041               	movlw	65
 11173  15D4  00DB               	movwf	??_toggleAlarms
 11174  15D5  085B               	movf	??_toggleAlarms,w
 11175  15D6  00EA               	movwf	_ALAF
 11176  15D7                     l1491:
 11177                           
 11178                           ;main.c: 761: };main.c: 762: _delay((unsigned long)((400)*(1000000/4000.0)));
 11179  15D7  3082               	movlw	130
 11180  15D8  0020               	movlb	0	; select bank0
 11181  15D9  00DB               	movwf	??_toggleAlarms
 11182  15DA  30DD               	movlw	221
 11183  15DB                     u6607:
 11184  15DB  0B89               	decfsz	9,f
 11185  15DC  2DDB               	goto	u6607
 11186  15DD  0BDB               	decfsz	??_toggleAlarms,f
 11187  15DE  2DDB               	goto	u6607
 11188  15DF  3200               	nop2
 11189  15E0                     l5956:
 11190                           
 11191                           ;main.c: 763: update_menuLCD();
 11192  15E0  3183  23E1  3195   	fcall	_update_menuLCD
 11193  15E3                     l5958:
 11194                           
 11195                           ;main.c: 764: };main.c: 765: if(modeFlag != 4){
 11196  15E3  3004               	movlw	4
 11197  15E4  0020               	movlb	0	; select bank0
 11198  15E5  0662               	xorwf	_modeFlag,w
 11199  15E6  0463               	iorwf	_modeFlag+1,w
 11200  15E7  1903               	btfsc	3,2
 11201  15E8  2DEA               	goto	u5801
 11202  15E9  2DEB               	goto	u5800
 11203  15EA                     u5801:
 11204  15EA  2DEE               	goto	l5962
 11205  15EB                     u5800:
 11206  15EB                     l5960:
 11207                           
 11208                           ;main.c: 766: modeFlag = 0;
 11209  15EB  01E2               	clrf	_modeFlag
 11210  15EC  01E3               	clrf	_modeFlag+1
 11211                           
 11212                           ;main.c: 767: break;
 11213  15ED  2DF9               	goto	l1496
 11214  15EE                     l5962:
 11215                           
 11216                           ;main.c: 768: };main.c: 769: if(updateLCD){
 11217  15EE  086E               	movf	_updateLCD,w
 11218  15EF  1903               	btfsc	3,2
 11219  15F0  2DF2               	goto	u5811
 11220  15F1  2DF3               	goto	u5810
 11221  15F2                     u5811:
 11222  15F2  2DB9               	goto	l1487
 11223  15F3                     u5810:
 11224  15F3                     l5964:
 11225                           
 11226                           ;main.c: 770: update_menuLCD();
 11227  15F3  3183  23E1  3195   	fcall	_update_menuLCD
 11228  15F6                     l5966:
 11229                           
 11230                           ;main.c: 771: updateLCD=0;
 11231  15F6  0020               	movlb	0	; select bank0
 11232  15F7  01EE               	clrf	_updateLCD
 11233  15F8  2DB9               	goto	l1487
 11234  15F9                     l1496:
 11235  15F9  0008               	return
 11236  15FA                     __end_of_toggleAlarms:
 11237                           
 11238                           	psect	text2
 11239  124D                     __ptext2:	
 11240 ;; *************** function _memset *****************
 11241 ;; Defined at:
 11242 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 11243 ;; Parameters:    Size  Location     Type
 11244 ;;  p1              1    wreg     PTR void 
 11245 ;;		 -> main@buff(20), 
 11246 ;;  c               2    0[BANK0 ] int 
 11247 ;;  n               2    2[BANK0 ] unsigned int 
 11248 ;; Auto vars:     Size  Location     Type
 11249 ;;  p1              1    6[BANK0 ] PTR void 
 11250 ;;		 -> main@buff(20), 
 11251 ;;  p               1    5[BANK0 ] PTR unsigned char 
 11252 ;;		 -> main@buff(20), 
 11253 ;; Return value:  Size  Location     Type
 11254 ;;                  1    wreg      PTR void 
 11255 ;; Registers used:
 11256 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11257 ;; Tracked objects:
 11258 ;;		On entry : 0/0
 11259 ;;		On exit  : 0/0
 11260 ;;		Unchanged: 0/0
 11261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11262 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11263 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11264 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11265 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;Total ram usage:        7 bytes
 11267 ;; Hardware stack levels used:    1
 11268 ;; Hardware stack levels required when called:    5
 11269 ;; This function calls:
 11270 ;;		Nothing
 11271 ;; This function is called by:
 11272 ;;		_main
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           
 11277                           ;psect for function _memset
 11278  124D                     _memset:
 11279                           
 11280                           ;incstack = 0
 11281                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11282                           ;memset@p1 stored from wreg
 11283  124D  0020               	movlb	0	; select bank0
 11284  124E  00A6               	movwf	memset@p1
 11285  124F                     l6204:
 11286  124F  0826               	movf	memset@p1,w
 11287  1250  00A4               	movwf	??_memset
 11288  1251  0824               	movf	??_memset,w
 11289  1252  00A5               	movwf	memset@p
 11290  1253  2A5F               	goto	l6210
 11291  1254                     l6206:
 11292  1254  0820               	movf	memset@c,w
 11293  1255  00A4               	movwf	??_memset
 11294  1256  0825               	movf	memset@p,w
 11295  1257  0086               	movwf	6
 11296  1258  0187               	clrf	7
 11297  1259  0824               	movf	??_memset,w
 11298  125A  0081               	movwf	1
 11299  125B                     l6208:
 11300  125B  3001               	movlw	1
 11301  125C  00A4               	movwf	??_memset
 11302  125D  0824               	movf	??_memset,w
 11303  125E  07A5               	addwf	memset@p,f
 11304  125F                     l6210:
 11305  125F  3001               	movlw	1
 11306  1260  02A2               	subwf	memset@n,f
 11307  1261  3000               	movlw	0
 11308  1262  3BA3               	subwfb	memset@n+1,f
 11309  1263  0A22               	incf	memset@n,w
 11310  1264  1D03               	skipz
 11311  1265  2A6A               	goto	u6181
 11312  1266  0A23               	incf	memset@n+1,w
 11313  1267  1D03               	btfss	3,2
 11314  1268  2A6A               	goto	u6181
 11315  1269  2A6B               	goto	u6180
 11316  126A                     u6181:
 11317  126A  2A54               	goto	l6206
 11318  126B                     u6180:
 11319  126B                     l2300:
 11320  126B  0008               	return
 11321  126C                     __end_of_memset:
 11322                           
 11323                           	psect	text3
 11324  1034                     __ptext3:	
 11325 ;; *************** function _i2c1_driver_open *****************
 11326 ;; Defined at:
 11327 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 11328 ;; Parameters:    Size  Location     Type
 11329 ;;		None
 11330 ;; Auto vars:     Size  Location     Type
 11331 ;;		None
 11332 ;; Return value:  Size  Location     Type
 11333 ;;		None               void
 11334 ;; Registers used:
 11335 ;;		wreg, status,2
 11336 ;; Tracked objects:
 11337 ;;		On entry : 0/0
 11338 ;;		On exit  : 0/0
 11339 ;;		Unchanged: 0/0
 11340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11345 ;;Total ram usage:        0 bytes
 11346 ;; Hardware stack levels used:    1
 11347 ;; Hardware stack levels required when called:    5
 11348 ;; This function calls:
 11349 ;;		Nothing
 11350 ;; This function is called by:
 11351 ;;		_main
 11352 ;; This function uses a non-reentrant model
 11353 ;;
 11354                           
 11355                           
 11356                           ;psect for function _i2c1_driver_open
 11357  1034                     _i2c1_driver_open:
 11358  1034                     l5638:	
 11359                           ;incstack = 0
 11360                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 11361                           
 11362                           
 11363                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 11364  1034  0023               	movlb	3	; select bank3
 11365  1035  1A90               	btfsc	16,5	;volatile
 11366  1036  2838               	goto	u5191
 11367  1037  2839               	goto	u5190
 11368  1038                     u5191:
 11369  1038  283F               	goto	l255
 11370  1039                     u5190:
 11371  1039                     l5640:
 11372                           
 11373                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
 11374  1039  018F               	clrf	15	;volatile
 11375  103A                     l5642:
 11376                           
 11377                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 11378  103A  3028               	movlw	40
 11379  103B  0090               	movwf	16	;volatile
 11380  103C                     l5644:
 11381                           
 11382                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 11383  103C  0191               	clrf	17	;volatile
 11384                           
 11385                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 11386  103D  3003               	movlw	3
 11387  103E  008D               	movwf	13	;volatile
 11388  103F                     l255:
 11389  103F  0008               	return
 11390  1040                     __end_of_i2c1_driver_open:
 11391                           
 11392                           	psect	text4
 11393  0801                     __ptext4:	
 11394 ;; *************** function _getch *****************
 11395 ;; Defined at:
 11396 ;;		line 171 in file "mcc_generated_files/eusart.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;		None
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;		None
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  1    wreg      unsigned char 
 11403 ;; Registers used:
 11404 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;Total ram usage:        0 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:    6
 11417 ;; This function calls:
 11418 ;;		_EUSART_Read
 11419 ;; This function is called by:
 11420 ;;		_main
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           
 11424                           
 11425                           ;psect for function _getch
 11426  0801                     _getch:
 11427  0801                     l5696:	
 11428                           ;incstack = 0
 11429                           ; Regs used in _getch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11430                           
 11431                           
 11432                           ;eusart.c: 173: return EUSART_Read();
 11433  0801  3193  2385  3188   	fcall	_EUSART_Read
 11434  0804                     l912:
 11435  0804  0008               	return
 11436  0805                     __end_of_getch:
 11437                           
 11438                           	psect	text5
 11439  1385                     __ptext5:	
 11440 ;; *************** function _EUSART_Read *****************
 11441 ;; Defined at:
 11442 ;;		line 128 in file "mcc_generated_files/eusart.c"
 11443 ;; Parameters:    Size  Location     Type
 11444 ;;		None
 11445 ;; Auto vars:     Size  Location     Type
 11446 ;;  readValue       1    1[BANK0 ] unsigned char 
 11447 ;; Return value:  Size  Location     Type
 11448 ;;                  1    wreg      unsigned char 
 11449 ;; Registers used:
 11450 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11451 ;; Tracked objects:
 11452 ;;		On entry : 0/0
 11453 ;;		On exit  : 0/0
 11454 ;;		Unchanged: 0/0
 11455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11457 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11458 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;Total ram usage:        2 bytes
 11461 ;; Hardware stack levels used:    1
 11462 ;; Hardware stack levels required when called:    5
 11463 ;; This function calls:
 11464 ;;		Nothing
 11465 ;; This function is called by:
 11466 ;;		_getch
 11467 ;; This function uses a non-reentrant model
 11468 ;;
 11469                           
 11470                           
 11471                           ;psect for function _EUSART_Read
 11472  1385                     _EUSART_Read:
 11473  1385                     l5268:	
 11474                           ;incstack = 0
 11475                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11476                           
 11477  1385                     l5270:	
 11478                           ;eusart.c: 132: while(0 == eusartRxCount)
 11479                           
 11480  1385  0021               	movlb	1	; select bank1
 11481  1386  0859               	movf	_eusartRxCount^(0+128),w	;volatile
 11482  1387  1903               	btfsc	3,2
 11483  1388  2B8A               	goto	u4461
 11484  1389  2B8B               	goto	u4460
 11485  138A                     u4461:
 11486  138A  2B85               	goto	l5270
 11487  138B                     u4460:
 11488  138B                     l5272:
 11489                           
 11490                           ;eusart.c: 134: };eusart.c: 136: readValue = eusartRxBuffer[eusartRxTail++];
 11491  138B  085A               	movf	_eusartRxTail^(0+128),w
 11492  138C  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 11493  138D  0086               	movwf	6
 11494  138E  3002               	movlw	2	; select bank4/5
 11495  138F  0087               	movwf	7
 11496  1390  0801               	movf	1,w
 11497  1391  0020               	movlb	0	; select bank0
 11498  1392  00A0               	movwf	??_EUSART_Read
 11499  1393  0820               	movf	??_EUSART_Read,w
 11500  1394  00A1               	movwf	EUSART_Read@readValue
 11501  1395                     l5274:
 11502  1395  3001               	movlw	1
 11503  1396  00A0               	movwf	??_EUSART_Read
 11504  1397  0820               	movf	??_EUSART_Read,w
 11505  1398  0021               	movlb	1	; select bank1
 11506  1399  07DA               	addwf	_eusartRxTail^(0+128),f	;volatile
 11507  139A                     l5276:
 11508                           
 11509                           ;eusart.c: 137: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 11510  139A  3040               	movlw	64
 11511  139B  025A               	subwf	_eusartRxTail^(0+128),w	;volatile
 11512  139C  1C03               	skipc
 11513  139D  2B9F               	goto	u4471
 11514  139E  2BA0               	goto	u4470
 11515  139F                     u4471:
 11516  139F  2BA1               	goto	l5280
 11517  13A0                     u4470:
 11518  13A0                     l5278:
 11519                           
 11520                           ;eusart.c: 138: {;eusart.c: 139: eusartRxTail = 0;
 11521  13A0  01DA               	clrf	_eusartRxTail^(0+128)	;volatile
 11522  13A1                     l5280:
 11523                           
 11524                           ;eusart.c: 140: };eusart.c: 141: PIE3bits.RCIE = 0;
 11525  13A1  002E               	movlb	14	; select bank14
 11526  13A2  1299               	bcf	25,5	;volatile
 11527  13A3                     l5282:
 11528                           
 11529                           ;eusart.c: 142: eusartRxCount--;
 11530  13A3  3001               	movlw	1
 11531  13A4  0021               	movlb	1	; select bank1
 11532  13A5  02D9               	subwf	_eusartRxCount^(0+128),f	;volatile
 11533  13A6                     l5284:
 11534                           
 11535                           ;eusart.c: 143: PIE3bits.RCIE = 1;
 11536  13A6  002E               	movlb	14	; select bank14
 11537  13A7  1699               	bsf	25,5	;volatile
 11538  13A8                     l5286:
 11539                           
 11540                           ;eusart.c: 145: return readValue;
 11541  13A8  0020               	movlb	0	; select bank0
 11542  13A9  0821               	movf	EUSART_Read@readValue,w
 11543  13AA                     l900:
 11544  13AA  0008               	return
 11545  13AB                     __end_of_EUSART_Read:
 11546                           
 11547                           	psect	text6
 11548  170B                     __ptext6:	
 11549 ;; *************** function _editTemp *****************
 11550 ;; Defined at:
 11551 ;;		line 682 in file "main.c"
 11552 ;; Parameters:    Size  Location     Type
 11553 ;;		None
 11554 ;; Auto vars:     Size  Location     Type
 11555 ;;		None
 11556 ;; Return value:  Size  Location     Type
 11557 ;;                  1    wreg      void 
 11558 ;; Registers used:
 11559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11560 ;; Tracked objects:
 11561 ;;		On entry : 0/0
 11562 ;;		On exit  : 0/0
 11563 ;;		Unchanged: 0/0
 11564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11568 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11569 ;;Total ram usage:        1 bytes
 11570 ;; Hardware stack levels used:    1
 11571 ;; Hardware stack levels required when called:   10
 11572 ;; This function calls:
 11573 ;;		_S1button
 11574 ;;		_update_menuLCD
 11575 ;; This function is called by:
 11576 ;;		_main
 11577 ;; This function uses a non-reentrant model
 11578 ;;
 11579                           
 11580                           
 11581                           ;psect for function _editTemp
 11582  170B                     _editTemp:
 11583  170B                     l1461:	
 11584                           ;incstack = 0
 11585                           ; Regs used in _editTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11586                           ;main.c: 683: while(1){
 11587                           
 11588  170B                     l5878:
 11589                           
 11590                           ;main.c: 684: if(flagS1pushed){
 11591  170B  0020               	movlb	0	; select bank0
 11592  170C  0867               	movf	_flagS1pushed,w
 11593  170D  1903               	btfsc	3,2
 11594  170E  2F10               	goto	u5651
 11595  170F  2F11               	goto	u5650
 11596  1710                     u5651:
 11597  1710  2F16               	goto	l5884
 11598  1711                     u5650:
 11599  1711                     l5880:
 11600                           
 11601                           ;main.c: 685: S1button();
 11602  1711  3187  279B  3197   	fcall	_S1button
 11603  1714                     l5882:
 11604                           
 11605                           ;main.c: 686: flagS1pushed=0;
 11606  1714  0020               	movlb	0	; select bank0
 11607  1715  01E7               	clrf	_flagS1pushed
 11608  1716                     l5884:
 11609                           
 11610                           ;main.c: 690: };main.c: 691: if(PORTCbits.RC5 == 0){
 11611  1716  1A8E               	btfsc	14,5	;volatile
 11612  1717  2F19               	goto	u5661
 11613  1718  2F1A               	goto	u5660
 11614  1719                     u5661:
 11615  1719  2F3C               	goto	l5900
 11616  171A                     u5660:
 11617  171A                     l5886:
 11618                           
 11619                           ;main.c: 692: if(editingTempAlarm == 0){
 11620  171A  0021               	movlb	1	; select bank1
 11621  171B  0857               	movf	_editingTempAlarm^(0+128),w
 11622  171C  1D03               	btfss	3,2
 11623  171D  2F1F               	goto	u5671
 11624  171E  2F20               	goto	u5670
 11625  171F                     u5671:
 11626  171F  2F23               	goto	l5890
 11627  1720                     u5670:
 11628  1720                     l5888:
 11629                           
 11630                           ;main.c: 693: editingTempAlarm = 1;
 11631  1720  01D7               	clrf	_editingTempAlarm^(0+128)
 11632  1721  0AD7               	incf	_editingTempAlarm^(0+128),f
 11633                           
 11634                           ;main.c: 694: } else {
 11635  1722  2F30               	goto	l5896
 11636  1723                     l5890:
 11637                           
 11638                           ;main.c: 695: tempAlarm.alarmTemp++;
 11639  1723  3001               	movlw	1
 11640  1724  0020               	movlb	0	; select bank0
 11641  1725  00DB               	movwf	??_editTemp
 11642  1726  085B               	movf	??_editTemp,w
 11643  1727  0021               	movlb	1	; select bank1
 11644  1728  07CA               	addwf	_tempAlarm^(0+128),f
 11645  1729                     l5892:
 11646                           
 11647                           ;main.c: 696: if(tempAlarm.alarmTemp > 50){
 11648  1729  3033               	movlw	51
 11649  172A  024A               	subwf	_tempAlarm^(0+128),w
 11650  172B  1C03               	skipc
 11651  172C  2F2E               	goto	u5681
 11652  172D  2F2F               	goto	u5680
 11653  172E                     u5681:
 11654  172E  2F30               	goto	l5896
 11655  172F                     u5680:
 11656  172F                     l5894:
 11657                           
 11658                           ;main.c: 697: tempAlarm.alarmTemp = 0;
 11659  172F  01CA               	clrf	_tempAlarm^(0+128)
 11660  1730                     l5896:
 11661                           
 11662                           ;main.c: 698: };main.c: 699: };main.c: 700: _delay((unsigned long)((400)*(1000000/4000.0
      +                          )));
 11663  1730  3082               	movlw	130
 11664  1731  0020               	movlb	0	; select bank0
 11665  1732  00DB               	movwf	??_editTemp
 11666  1733  30DD               	movlw	221
 11667  1734                     u6617:
 11668  1734  0B89               	decfsz	9,f
 11669  1735  2F34               	goto	u6617
 11670  1736  0BDB               	decfsz	??_editTemp,f
 11671  1737  2F34               	goto	u6617
 11672  1738  3200               	nop2
 11673  1739                     l5898:
 11674                           
 11675                           ;main.c: 701: update_menuLCD();
 11676  1739  3183  23E1  3197   	fcall	_update_menuLCD
 11677  173C                     l5900:
 11678                           
 11679                           ;main.c: 702: };main.c: 703: if(modeFlag != 2){
 11680  173C  3002               	movlw	2
 11681  173D  0020               	movlb	0	; select bank0
 11682  173E  0662               	xorwf	_modeFlag,w
 11683  173F  0463               	iorwf	_modeFlag+1,w
 11684  1740  1903               	btfsc	3,2
 11685  1741  2F43               	goto	u5691
 11686  1742  2F44               	goto	u5690
 11687  1743                     u5691:
 11688  1743  2F47               	goto	l5904
 11689  1744                     u5690:
 11690  1744                     l5902:
 11691                           
 11692                           ;main.c: 704: editingTempAlarm = 0;
 11693  1744  0021               	movlb	1	; select bank1
 11694  1745  01D7               	clrf	_editingTempAlarm^(0+128)
 11695                           
 11696                           ;main.c: 705: break;
 11697  1746  2F52               	goto	l1471
 11698  1747                     l5904:
 11699                           
 11700                           ;main.c: 706: };main.c: 707: if(updateLCD){
 11701  1747  086E               	movf	_updateLCD,w
 11702  1748  1903               	btfsc	3,2
 11703  1749  2F4B               	goto	u5701
 11704  174A  2F4C               	goto	u5700
 11705  174B                     u5701:
 11706  174B  2F0B               	goto	l1461
 11707  174C                     u5700:
 11708  174C                     l5906:
 11709                           
 11710                           ;main.c: 708: update_menuLCD();
 11711  174C  3183  23E1  3197   	fcall	_update_menuLCD
 11712  174F                     l5908:
 11713                           
 11714                           ;main.c: 709: updateLCD=0;
 11715  174F  0020               	movlb	0	; select bank0
 11716  1750  01EE               	clrf	_updateLCD
 11717  1751  2F0B               	goto	l1461
 11718  1752                     l1471:
 11719  1752  0008               	return
 11720  1753                     __end_of_editTemp:
 11721                           
 11722                           	psect	text7
 11723  16C3                     __ptext7:	
 11724 ;; *************** function _editLum *****************
 11725 ;; Defined at:
 11726 ;;		line 714 in file "main.c"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;		None
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;		None
 11731 ;; Return value:  Size  Location     Type
 11732 ;;                  1    wreg      void 
 11733 ;; Registers used:
 11734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11735 ;; Tracked objects:
 11736 ;;		On entry : 0/0
 11737 ;;		On exit  : 0/0
 11738 ;;		Unchanged: 0/0
 11739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11742 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11743 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11744 ;;Total ram usage:        1 bytes
 11745 ;; Hardware stack levels used:    1
 11746 ;; Hardware stack levels required when called:   10
 11747 ;; This function calls:
 11748 ;;		_S1button
 11749 ;;		_update_menuLCD
 11750 ;; This function is called by:
 11751 ;;		_main
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           
 11756                           ;psect for function _editLum
 11757  16C3                     _editLum:
 11758  16C3                     l1474:	
 11759                           ;incstack = 0
 11760                           ; Regs used in _editLum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11761                           ;main.c: 715: while(1){
 11762                           
 11763  16C3                     l5910:
 11764                           
 11765                           ;main.c: 716: if(flagS1pushed){
 11766  16C3  0020               	movlb	0	; select bank0
 11767  16C4  0867               	movf	_flagS1pushed,w
 11768  16C5  1903               	btfsc	3,2
 11769  16C6  2EC8               	goto	u5711
 11770  16C7  2EC9               	goto	u5710
 11771  16C8                     u5711:
 11772  16C8  2ECE               	goto	l5916
 11773  16C9                     u5710:
 11774  16C9                     l5912:
 11775                           
 11776                           ;main.c: 717: S1button();
 11777  16C9  3187  279B  3196   	fcall	_S1button
 11778  16CC                     l5914:
 11779                           
 11780                           ;main.c: 718: flagS1pushed=0;
 11781  16CC  0020               	movlb	0	; select bank0
 11782  16CD  01E7               	clrf	_flagS1pushed
 11783  16CE                     l5916:
 11784                           
 11785                           ;main.c: 722: };main.c: 723: if(PORTCbits.RC5 == 0){
 11786  16CE  1A8E               	btfsc	14,5	;volatile
 11787  16CF  2ED1               	goto	u5721
 11788  16D0  2ED2               	goto	u5720
 11789  16D1                     u5721:
 11790  16D1  2EF4               	goto	l5932
 11791  16D2                     u5720:
 11792  16D2                     l5918:
 11793                           
 11794                           ;main.c: 724: if(editingLumAlarm == 0){
 11795  16D2  0021               	movlb	1	; select bank1
 11796  16D3  0856               	movf	_editingLumAlarm^(0+128),w
 11797  16D4  1D03               	btfss	3,2
 11798  16D5  2ED7               	goto	u5731
 11799  16D6  2ED8               	goto	u5730
 11800  16D7                     u5731:
 11801  16D7  2EDB               	goto	l5922
 11802  16D8                     u5730:
 11803  16D8                     l5920:
 11804                           
 11805                           ;main.c: 725: editingLumAlarm = 1;
 11806  16D8  01D6               	clrf	_editingLumAlarm^(0+128)
 11807  16D9  0AD6               	incf	_editingLumAlarm^(0+128),f
 11808                           
 11809                           ;main.c: 726: } else {
 11810  16DA  2EE8               	goto	l5928
 11811  16DB                     l5922:
 11812                           
 11813                           ;main.c: 727: lumAlarm.alarmLum++;
 11814  16DB  3001               	movlw	1
 11815  16DC  0020               	movlb	0	; select bank0
 11816  16DD  00DB               	movwf	??_editLum
 11817  16DE  085B               	movf	??_editLum,w
 11818  16DF  0021               	movlb	1	; select bank1
 11819  16E0  07C7               	addwf	_lumAlarm^(0+128),f
 11820  16E1                     l5924:
 11821                           
 11822                           ;main.c: 728: if(lumAlarm.alarmLum > 7){
 11823  16E1  3008               	movlw	8
 11824  16E2  0247               	subwf	_lumAlarm^(0+128),w
 11825  16E3  1C03               	skipc
 11826  16E4  2EE6               	goto	u5741
 11827  16E5  2EE7               	goto	u5740
 11828  16E6                     u5741:
 11829  16E6  2EE8               	goto	l5928
 11830  16E7                     u5740:
 11831  16E7                     l5926:
 11832                           
 11833                           ;main.c: 729: lumAlarm.alarmLum = 0;
 11834  16E7  01C7               	clrf	_lumAlarm^(0+128)
 11835  16E8                     l5928:
 11836                           
 11837                           ;main.c: 730: };main.c: 731: };main.c: 732: _delay((unsigned long)((400)*(1000000/4000.0
      +                          )));
 11838  16E8  3082               	movlw	130
 11839  16E9  0020               	movlb	0	; select bank0
 11840  16EA  00DB               	movwf	??_editLum
 11841  16EB  30DD               	movlw	221
 11842  16EC                     u6627:
 11843  16EC  0B89               	decfsz	9,f
 11844  16ED  2EEC               	goto	u6627
 11845  16EE  0BDB               	decfsz	??_editLum,f
 11846  16EF  2EEC               	goto	u6627
 11847  16F0  3200               	nop2
 11848  16F1                     l5930:
 11849                           
 11850                           ;main.c: 733: update_menuLCD();
 11851  16F1  3183  23E1  3196   	fcall	_update_menuLCD
 11852  16F4                     l5932:
 11853                           
 11854                           ;main.c: 734: };main.c: 735: if(modeFlag != 3){
 11855  16F4  3003               	movlw	3
 11856  16F5  0020               	movlb	0	; select bank0
 11857  16F6  0662               	xorwf	_modeFlag,w
 11858  16F7  0463               	iorwf	_modeFlag+1,w
 11859  16F8  1903               	btfsc	3,2
 11860  16F9  2EFB               	goto	u5751
 11861  16FA  2EFC               	goto	u5750
 11862  16FB                     u5751:
 11863  16FB  2EFF               	goto	l5936
 11864  16FC                     u5750:
 11865  16FC                     l5934:
 11866                           
 11867                           ;main.c: 736: editingLumAlarm = 0;
 11868  16FC  0021               	movlb	1	; select bank1
 11869  16FD  01D6               	clrf	_editingLumAlarm^(0+128)
 11870                           
 11871                           ;main.c: 737: break;
 11872  16FE  2F0A               	goto	l1484
 11873  16FF                     l5936:
 11874                           
 11875                           ;main.c: 738: };main.c: 739: if(updateLCD){
 11876  16FF  086E               	movf	_updateLCD,w
 11877  1700  1903               	btfsc	3,2
 11878  1701  2F03               	goto	u5761
 11879  1702  2F04               	goto	u5760
 11880  1703                     u5761:
 11881  1703  2EC3               	goto	l1474
 11882  1704                     u5760:
 11883  1704                     l5938:
 11884                           
 11885                           ;main.c: 740: update_menuLCD();
 11886  1704  3183  23E1  3196   	fcall	_update_menuLCD
 11887  1707                     l5940:
 11888                           
 11889                           ;main.c: 741: updateLCD=0;
 11890  1707  0020               	movlb	0	; select bank0
 11891  1708  01EE               	clrf	_updateLCD
 11892  1709  2EC3               	goto	l1474
 11893  170A                     l1484:
 11894  170A  0008               	return
 11895  170B                     __end_of_editLum:
 11896                           
 11897                           	psect	text8
 11898  0932                     __ptext8:	
 11899 ;; *************** function _editClock *****************
 11900 ;; Defined at:
 11901 ;;		line 635 in file "main.c"
 11902 ;; Parameters:    Size  Location     Type
 11903 ;;		None
 11904 ;; Auto vars:     Size  Location     Type
 11905 ;;		None
 11906 ;; Return value:  Size  Location     Type
 11907 ;;                  1    wreg      void 
 11908 ;; Registers used:
 11909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11910 ;; Tracked objects:
 11911 ;;		On entry : 0/0
 11912 ;;		On exit  : 0/0
 11913 ;;		Unchanged: 0/0
 11914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11917 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11918 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11919 ;;Total ram usage:        1 bytes
 11920 ;; Hardware stack levels used:    1
 11921 ;; Hardware stack levels required when called:   10
 11922 ;; This function calls:
 11923 ;;		_S1button
 11924 ;;		_update_menuLCD
 11925 ;; This function is called by:
 11926 ;;		_main
 11927 ;; This function uses a non-reentrant model
 11928 ;;
 11929                           
 11930                           
 11931                           ;psect for function _editClock
 11932  0932                     _editClock:
 11933  0932                     l1438:	
 11934                           ;incstack = 0
 11935                           ; Regs used in _editClock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11936                           ;main.c: 637: while(1){
 11937                           
 11938  0932                     l5828:
 11939                           
 11940                           ;main.c: 638: if(flagS1pushed){
 11941  0932  0020               	movlb	0	; select bank0
 11942  0933  0867               	movf	_flagS1pushed,w
 11943  0934  1903               	btfsc	3,2
 11944  0935  2937               	goto	u5541
 11945  0936  2938               	goto	u5540
 11946  0937                     u5541:
 11947  0937  293D               	goto	l5834
 11948  0938                     u5540:
 11949  0938                     l5830:
 11950                           
 11951                           ;main.c: 639: S1button();
 11952  0938  3187  279B  3189   	fcall	_S1button
 11953  093B                     l5832:
 11954                           
 11955                           ;main.c: 640: flagS1pushed=0;
 11956  093B  0020               	movlb	0	; select bank0
 11957  093C  01E7               	clrf	_flagS1pushed
 11958  093D                     l5834:
 11959                           
 11960                           ;main.c: 644: };main.c: 645: if(PORTCbits.RC5 == 0){
 11961  093D  1A8E               	btfsc	14,5	;volatile
 11962  093E  2940               	goto	u5551
 11963  093F  2941               	goto	u5550
 11964  0940                     u5551:
 11965  0940  299C               	goto	l5868
 11966  0941                     u5550:
 11967  0941                     l5836:
 11968                           
 11969                           ;main.c: 646: if(editingClockAlarm == 0){
 11970  0941  0864               	movf	_editingClockAlarm,w
 11971  0942  0465               	iorwf	_editingClockAlarm+1,w
 11972  0943  1D03               	btfss	3,2
 11973  0944  2946               	goto	u5561
 11974  0945  2947               	goto	u5560
 11975  0946                     u5561:
 11976  0946  294C               	goto	l5840
 11977  0947                     u5560:
 11978  0947                     l5838:
 11979                           
 11980                           ;main.c: 647: editingClockAlarm = 1;
 11981  0947  3001               	movlw	1
 11982  0948  00E4               	movwf	_editingClockAlarm
 11983  0949  3000               	movlw	0
 11984  094A  00E5               	movwf	_editingClockAlarm+1
 11985                           
 11986                           ;main.c: 649: } else if(editingClockAlarm == 1){
 11987  094B  2990               	goto	l5864
 11988  094C                     l5840:
 11989  094C  0364               	decf	_editingClockAlarm,w
 11990  094D  0465               	iorwf	_editingClockAlarm+1,w
 11991  094E  1D03               	btfss	3,2
 11992  094F  2951               	goto	u5571
 11993  0950  2952               	goto	u5570
 11994  0951                     u5571:
 11995  0951  2962               	goto	l5848
 11996  0952                     u5570:
 11997  0952                     l5842:
 11998                           
 11999                           ;main.c: 650: if(clkAlarm.alarmVal.h >= 23){
 12000  0952  3017               	movlw	23
 12001  0953  0021               	movlb	1	; select bank1
 12002  0954  0240               	subwf	_clkAlarm^(0+128),w
 12003  0955  1C03               	skipc
 12004  0956  2958               	goto	u5581
 12005  0957  2959               	goto	u5580
 12006  0958                     u5581:
 12007  0958  295B               	goto	l5846
 12008  0959                     u5580:
 12009  0959                     l5844:
 12010                           
 12011                           ;main.c: 651: clkAlarm.alarmVal.h = 0;
 12012  0959  01C0               	clrf	_clkAlarm^(0+128)
 12013                           
 12014                           ;main.c: 652: } else{
 12015  095A  2990               	goto	l5864
 12016  095B                     l5846:
 12017                           
 12018                           ;main.c: 653: clkAlarm.alarmVal.h++;
 12019  095B  3001               	movlw	1
 12020  095C  0020               	movlb	0	; select bank0
 12021  095D  00DB               	movwf	??_editClock
 12022  095E  085B               	movf	??_editClock,w
 12023  095F  0021               	movlb	1	; select bank1
 12024  0960  07C0               	addwf	_clkAlarm^(0+128),f
 12025  0961  2990               	goto	l5864
 12026  0962                     l5848:
 12027  0962  3002               	movlw	2
 12028  0963  0664               	xorwf	_editingClockAlarm,w
 12029  0964  0465               	iorwf	_editingClockAlarm+1,w
 12030  0965  1D03               	btfss	3,2
 12031  0966  2968               	goto	u5591
 12032  0967  2969               	goto	u5590
 12033  0968                     u5591:
 12034  0968  2979               	goto	l5856
 12035  0969                     u5590:
 12036  0969                     l5850:
 12037                           
 12038                           ;main.c: 656: if(clkAlarm.alarmVal.m == 59){
 12039  0969  303B               	movlw	59
 12040  096A  0021               	movlb	1	; select bank1
 12041  096B  0641               	xorwf	(_clkAlarm^(0+128)+1),w
 12042  096C  1D03               	btfss	3,2
 12043  096D  296F               	goto	u5601
 12044  096E  2970               	goto	u5600
 12045  096F                     u5601:
 12046  096F  2972               	goto	l5854
 12047  0970                     u5600:
 12048  0970                     l5852:
 12049                           
 12050                           ;main.c: 657: clkAlarm.alarmVal.m = 0;
 12051  0970  01C1               	clrf	(_clkAlarm^(0+128)+1)
 12052                           
 12053                           ;main.c: 658: } else{
 12054  0971  2990               	goto	l5864
 12055  0972                     l5854:
 12056                           
 12057                           ;main.c: 659: clkAlarm.alarmVal.m++;
 12058  0972  3001               	movlw	1
 12059  0973  0020               	movlb	0	; select bank0
 12060  0974  00DB               	movwf	??_editClock
 12061  0975  085B               	movf	??_editClock,w
 12062  0976  0021               	movlb	1	; select bank1
 12063  0977  07C1               	addwf	(_clkAlarm^(0+128)+1),f
 12064  0978  2990               	goto	l5864
 12065  0979                     l5856:
 12066  0979  3003               	movlw	3
 12067  097A  0664               	xorwf	_editingClockAlarm,w
 12068  097B  0465               	iorwf	_editingClockAlarm+1,w
 12069  097C  1D03               	btfss	3,2
 12070  097D  297F               	goto	u5611
 12071  097E  2980               	goto	u5610
 12072  097F                     u5611:
 12073  097F  2990               	goto	l1446
 12074  0980                     u5610:
 12075  0980                     l5858:
 12076                           
 12077                           ;main.c: 662: if(clkAlarm.alarmVal.s == 59){
 12078  0980  303B               	movlw	59
 12079  0981  0021               	movlb	1	; select bank1
 12080  0982  0642               	xorwf	(_clkAlarm^(0+128)+2),w
 12081  0983  1D03               	btfss	3,2
 12082  0984  2986               	goto	u5621
 12083  0985  2987               	goto	u5620
 12084  0986                     u5621:
 12085  0986  2989               	goto	l5862
 12086  0987                     u5620:
 12087  0987                     l5860:
 12088                           
 12089                           ;main.c: 663: clkAlarm.alarmVal.s = 0;
 12090  0987  01C2               	clrf	(_clkAlarm^(0+128)+2)
 12091                           
 12092                           ;main.c: 664: } else{
 12093  0988  2990               	goto	l5864
 12094  0989                     l5862:
 12095                           
 12096                           ;main.c: 665: clkAlarm.alarmVal.s++;
 12097  0989  3001               	movlw	1
 12098  098A  0020               	movlb	0	; select bank0
 12099  098B  00DB               	movwf	??_editClock
 12100  098C  085B               	movf	??_editClock,w
 12101  098D  0021               	movlb	1	; select bank1
 12102  098E  07C2               	addwf	(_clkAlarm^(0+128)+2),f
 12103  098F  2990               	goto	l5864
 12104  0990                     l1446:
 12105  0990                     l5864:
 12106                           
 12107                           ;main.c: 666: };main.c: 667: };main.c: 668: _delay((unsigned long)((400)*(1000000/4000.0
      +                          )));
 12108  0990  3082               	movlw	130
 12109  0991  0020               	movlb	0	; select bank0
 12110  0992  00DB               	movwf	??_editClock
 12111  0993  30DD               	movlw	221
 12112  0994                     u6637:
 12113  0994  0B89               	decfsz	9,f
 12114  0995  2994               	goto	u6637
 12115  0996  0BDB               	decfsz	??_editClock,f
 12116  0997  2994               	goto	u6637
 12117  0998  3200               	nop2
 12118  0999                     l5866:
 12119                           
 12120                           ;main.c: 669: update_menuLCD();
 12121  0999  3183  23E1  3189   	fcall	_update_menuLCD
 12122  099C                     l5868:
 12123                           
 12124                           ;main.c: 670: };main.c: 671: if(modeFlag != 1){
 12125  099C  0020               	movlb	0	; select bank0
 12126  099D  0362               	decf	_modeFlag,w
 12127  099E  0463               	iorwf	_modeFlag+1,w
 12128  099F  1903               	btfsc	3,2
 12129  09A0  29A2               	goto	u5631
 12130  09A1  29A3               	goto	u5630
 12131  09A2                     u5631:
 12132  09A2  29A6               	goto	l5872
 12133  09A3                     u5630:
 12134  09A3                     l5870:
 12135                           
 12136                           ;main.c: 672: editingClockAlarm = 0;
 12137  09A3  01E4               	clrf	_editingClockAlarm
 12138  09A4  01E5               	clrf	_editingClockAlarm+1
 12139                           
 12140                           ;main.c: 673: break;
 12141  09A5  29B1               	goto	l1458
 12142  09A6                     l5872:
 12143                           
 12144                           ;main.c: 674: };main.c: 675: if(updateLCD){
 12145  09A6  086E               	movf	_updateLCD,w
 12146  09A7  1903               	btfsc	3,2
 12147  09A8  29AA               	goto	u5641
 12148  09A9  29AB               	goto	u5640
 12149  09AA                     u5641:
 12150  09AA  2932               	goto	l1438
 12151  09AB                     u5640:
 12152  09AB                     l5874:
 12153                           
 12154                           ;main.c: 676: update_menuLCD();
 12155  09AB  3183  23E1  3189   	fcall	_update_menuLCD
 12156  09AE                     l5876:
 12157                           
 12158                           ;main.c: 677: updateLCD=0;
 12159  09AE  0020               	movlb	0	; select bank0
 12160  09AF  01EE               	clrf	_updateLCD
 12161  09B0  2932               	goto	l1438
 12162  09B1                     l1458:
 12163  09B1  0008               	return
 12164  09B2                     __end_of_editClock:
 12165                           
 12166                           	psect	text9
 12167  03E1                     __ptext9:	
 12168 ;; *************** function _update_menuLCD *****************
 12169 ;; Defined at:
 12170 ;;		line 399 in file "main.c"
 12171 ;; Parameters:    Size  Location     Type
 12172 ;;		None
 12173 ;; Auto vars:     Size  Location     Type
 12174 ;;  diff            3   56[BANK0 ] struct Time
 12175 ;;  str             8   41[BANK0 ] unsigned char [8]
 12176 ;;  tt              4   49[BANK0 ] unsigned char [4]
 12177 ;;  l               3   53[BANK0 ] unsigned char [3]
 12178 ;; Return value:  Size  Location     Type
 12179 ;;                  1    wreg      void 
 12180 ;; Registers used:
 12181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12182 ;; Tracked objects:
 12183 ;;		On entry : 0/0
 12184 ;;		On exit  : 0/0
 12185 ;;		Unchanged: 0/0
 12186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12188 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12189 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12190 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12191 ;;Total ram usage:       24 bytes
 12192 ;; Hardware stack levels used:    1
 12193 ;; Hardware stack levels required when called:    9
 12194 ;; This function calls:
 12195 ;;		_LCDchar
 12196 ;;		_LCDcmd
 12197 ;;		_LCDstr
 12198 ;;		_PWM6_LoadDutyValue
 12199 ;;		_PWM_Output_D4_Disable
 12200 ;;		_TMR2_StopTimer
 12201 ;;		_differenceBetweenTimePeriod
 12202 ;;		_sprintf
 12203 ;; This function is called by:
 12204 ;;		_editClock
 12205 ;;		_editTemp
 12206 ;;		_editLum
 12207 ;;		_toggleAlarms
 12208 ;;		_main
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           
 12213                           ;psect for function _update_menuLCD
 12214  03E1                     _update_menuLCD:
 12215  03E1                     l5364:	
 12216                           ;incstack = 0
 12217                           ; Regs used in _update_menuLCD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12218                           
 12219                           
 12220                           ;main.c: 401: char str[8];;main.c: 402: if(editingClockAlarm){
 12221  03E1  0020               	movlb	0	; select bank0
 12222  03E2  0864               	movf	_editingClockAlarm,w
 12223  03E3  0465               	iorwf	_editingClockAlarm+1,w
 12224  03E4  1903               	btfsc	3,2
 12225  03E5  2BE7               	goto	u4641
 12226  03E6  2BE8               	goto	u4640
 12227  03E7                     u4641:
 12228  03E7  2C0C               	goto	l5368
 12229  03E8                     u4640:
 12230  03E8                     l5366:
 12231                           
 12232                           ;main.c: 403: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 12233  03E8  3027               	movlw	low (STR_1| (0+32768))
 12234  03E9  00AE               	movwf	sprintf@f
 12235  03EA  3098               	movlw	high (STR_1| (0+32768))
 12236  03EB  00AF               	movwf	sprintf@f+1
 12237  03EC  0021               	movlb	1	; select bank1
 12238  03ED  0840               	movf	_clkAlarm^(0+128),w
 12239  03EE  0020               	movlb	0	; select bank0
 12240  03EF  00C3               	movwf	??_update_menuLCD
 12241  03F0  01C4               	clrf	??_update_menuLCD+1
 12242  03F1  0843               	movf	??_update_menuLCD,w
 12243  03F2  00B0               	movwf	?_sprintf+2
 12244  03F3  0844               	movf	??_update_menuLCD+1,w
 12245  03F4  00B1               	movwf	?_sprintf+3
 12246  03F5  0021               	movlb	1	; select bank1
 12247  03F6  0841               	movf	(_clkAlarm^(0+128)+1),w
 12248  03F7  0020               	movlb	0	; select bank0
 12249  03F8  00C5               	movwf	??_update_menuLCD+2
 12250  03F9  01C6               	clrf	??_update_menuLCD+3
 12251  03FA  0845               	movf	??_update_menuLCD+2,w
 12252  03FB  00B2               	movwf	?_sprintf+4
 12253  03FC  0846               	movf	??_update_menuLCD+3,w
 12254  03FD  00B3               	movwf	?_sprintf+5
 12255  03FE  0021               	movlb	1	; select bank1
 12256  03FF  0842               	movf	(_clkAlarm^(0+128)+2),w
 12257  0400  0020               	movlb	0	; select bank0
 12258  0401  00C7               	movwf	??_update_menuLCD+4
 12259  0402  01C8               	clrf	??_update_menuLCD+5
 12260  0403  0847               	movf	??_update_menuLCD+4,w
 12261  0404  00B4               	movwf	?_sprintf+6
 12262  0405  0848               	movf	??_update_menuLCD+5,w
 12263  0406  00B5               	movwf	?_sprintf+7
 12264  0407  3049               	movlw	(low (update_menuLCD@str| 0))& (0+255)
 12265  0408  3185  25FD  3183   	fcall	_sprintf
 12266                           
 12267                           ;main.c: 404: } else {
 12268  040B  2C29               	goto	l5370
 12269  040C                     l5368:
 12270                           
 12271                           ;main.c: 405: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 12272  040C  3027               	movlw	low (STR_1| (0+32768))
 12273  040D  00AE               	movwf	sprintf@f
 12274  040E  3098               	movlw	high (STR_1| (0+32768))
 12275  040F  00AF               	movwf	sprintf@f+1
 12276  0410  085F               	movf	_t,w
 12277  0411  00C3               	movwf	??_update_menuLCD
 12278  0412  01C4               	clrf	??_update_menuLCD+1
 12279  0413  0843               	movf	??_update_menuLCD,w
 12280  0414  00B0               	movwf	?_sprintf+2
 12281  0415  0844               	movf	??_update_menuLCD+1,w
 12282  0416  00B1               	movwf	?_sprintf+3
 12283  0417  0860               	movf	_t+1,w
 12284  0418  00C5               	movwf	??_update_menuLCD+2
 12285  0419  01C6               	clrf	??_update_menuLCD+3
 12286  041A  0845               	movf	??_update_menuLCD+2,w
 12287  041B  00B2               	movwf	?_sprintf+4
 12288  041C  0846               	movf	??_update_menuLCD+3,w
 12289  041D  00B3               	movwf	?_sprintf+5
 12290  041E  0861               	movf	_t+2,w
 12291  041F  00C7               	movwf	??_update_menuLCD+4
 12292  0420  01C8               	clrf	??_update_menuLCD+5
 12293  0421  0847               	movf	??_update_menuLCD+4,w
 12294  0422  00B4               	movwf	?_sprintf+6
 12295  0423  0848               	movf	??_update_menuLCD+5,w
 12296  0424  00B5               	movwf	?_sprintf+7
 12297  0425  3049               	movlw	(low (update_menuLCD@str| 0))& (0+255)
 12298  0426  3185  25FD  3183   	fcall	_sprintf
 12299  0429                     l5370:
 12300                           
 12301                           ;main.c: 406: };main.c: 407: LCDcmd(0x80);
 12302  0429  3080               	movlw	128
 12303  042A  3187  27F8  3183   	fcall	_LCDcmd
 12304  042D                     l5372:
 12305                           
 12306                           ;main.c: 408: LCDstr(str);
 12307  042D  3049               	movlw	low update_menuLCD@str
 12308  042E  0020               	movlb	0	; select bank0
 12309  042F  00A9               	movwf	LCDstr@p
 12310  0430  3000               	movlw	high update_menuLCD@str
 12311  0431  00AA               	movwf	LCDstr@p+1
 12312  0432  3191  217A  3183   	fcall	_LCDstr
 12313  0435                     l5374:
 12314                           
 12315                           ;main.c: 411: if(clkAlarm.trigger == 1){
 12316  0435  0021               	movlb	1	; select bank1
 12317  0436  0343               	decf	(_clkAlarm^(0+128)+3),w
 12318  0437  1D03               	btfss	3,2
 12319  0438  2C3A               	goto	u4651
 12320  0439  2C3B               	goto	u4650
 12321  043A                     u4651:
 12322  043A  2C44               	goto	l5378
 12323  043B                     u4650:
 12324  043B                     l5376:
 12325                           
 12326                           ;main.c: 412: LCDcmd(0x8B);
 12327  043B  308B               	movlw	139
 12328  043C  3187  27F8  3183   	fcall	_LCDcmd
 12329                           
 12330                           ;main.c: 413: LCDchar('C');
 12331  043F  3043               	movlw	67
 12332  0440  3190  2022  3183   	fcall	_LCDchar
 12333                           
 12334                           ;main.c: 414: } else if(modeFlag == 0){
 12335  0443  2C53               	goto	l5382
 12336  0444                     l5378:
 12337  0444  0020               	movlb	0	; select bank0
 12338  0445  0862               	movf	_modeFlag,w
 12339  0446  0463               	iorwf	_modeFlag+1,w
 12340  0447  1D03               	btfss	3,2
 12341  0448  2C4A               	goto	u4661
 12342  0449  2C4B               	goto	u4660
 12343  044A                     u4661:
 12344  044A  2C53               	goto	l5382
 12345  044B                     u4660:
 12346  044B                     l5380:
 12347                           
 12348                           ;main.c: 415: LCDcmd(0x8B);
 12349  044B  308B               	movlw	139
 12350  044C  3187  27F8  3183   	fcall	_LCDcmd
 12351                           
 12352                           ;main.c: 416: LCDchar(' ');
 12353  044F  3020               	movlw	32
 12354  0450  3190  2022  3183   	fcall	_LCDchar
 12355  0453                     l5382:
 12356                           
 12357                           ;main.c: 417: };main.c: 420: if(tempAlarm.trigger == 1){
 12358  0453  0021               	movlb	1	; select bank1
 12359  0454  034B               	decf	(_tempAlarm^(0+128)+1),w
 12360  0455  1D03               	btfss	3,2
 12361  0456  2C58               	goto	u4671
 12362  0457  2C59               	goto	u4670
 12363  0458                     u4671:
 12364  0458  2C62               	goto	l5386
 12365  0459                     u4670:
 12366  0459                     l5384:
 12367                           
 12368                           ;main.c: 421: LCDcmd(0x8C);
 12369  0459  308C               	movlw	140
 12370  045A  3187  27F8  3183   	fcall	_LCDcmd
 12371                           
 12372                           ;main.c: 422: LCDchar('T');
 12373  045D  3054               	movlw	84
 12374  045E  3190  2022  3183   	fcall	_LCDchar
 12375                           
 12376                           ;main.c: 423: } else if(modeFlag == 0){
 12377  0461  2C71               	goto	l5390
 12378  0462                     l5386:
 12379  0462  0020               	movlb	0	; select bank0
 12380  0463  0862               	movf	_modeFlag,w
 12381  0464  0463               	iorwf	_modeFlag+1,w
 12382  0465  1D03               	btfss	3,2
 12383  0466  2C68               	goto	u4681
 12384  0467  2C69               	goto	u4680
 12385  0468                     u4681:
 12386  0468  2C71               	goto	l5390
 12387  0469                     u4680:
 12388  0469                     l5388:
 12389                           
 12390                           ;main.c: 424: LCDcmd(0x8C);
 12391  0469  308C               	movlw	140
 12392  046A  3187  27F8  3183   	fcall	_LCDcmd
 12393                           
 12394                           ;main.c: 425: LCDchar(' ');
 12395  046D  3020               	movlw	32
 12396  046E  3190  2022  3183   	fcall	_LCDchar
 12397  0471                     l5390:
 12398                           
 12399                           ;main.c: 426: };main.c: 429: if(lumAlarm.trigger == 1){
 12400  0471  0021               	movlb	1	; select bank1
 12401  0472  0348               	decf	(_lumAlarm^(0+128)+1),w
 12402  0473  1D03               	btfss	3,2
 12403  0474  2C76               	goto	u4691
 12404  0475  2C77               	goto	u4690
 12405  0476                     u4691:
 12406  0476  2C80               	goto	l5394
 12407  0477                     u4690:
 12408  0477                     l5392:
 12409                           
 12410                           ;main.c: 430: LCDcmd(0x8D);
 12411  0477  308D               	movlw	141
 12412  0478  3187  27F8  3183   	fcall	_LCDcmd
 12413                           
 12414                           ;main.c: 431: LCDchar('L');
 12415  047B  304C               	movlw	76
 12416  047C  3190  2022  3183   	fcall	_LCDchar
 12417                           
 12418                           ;main.c: 432: } else if(modeFlag == 0){
 12419  047F  2C8F               	goto	l1359
 12420  0480                     l5394:
 12421  0480  0020               	movlb	0	; select bank0
 12422  0481  0862               	movf	_modeFlag,w
 12423  0482  0463               	iorwf	_modeFlag+1,w
 12424  0483  1D03               	btfss	3,2
 12425  0484  2C86               	goto	u4701
 12426  0485  2C87               	goto	u4700
 12427  0486                     u4701:
 12428  0486  2C8F               	goto	l1359
 12429  0487                     u4700:
 12430  0487                     l5396:
 12431                           
 12432                           ;main.c: 433: LCDcmd(0x8D);
 12433  0487  308D               	movlw	141
 12434  0488  3187  27F8  3183   	fcall	_LCDcmd
 12435                           
 12436                           ;main.c: 434: LCDchar(' ');
 12437  048B  3020               	movlw	32
 12438  048C  3190  2022  3183   	fcall	_LCDchar
 12439  048F                     l1359:
 12440                           
 12441                           ;main.c: 435: };main.c: 437: LCDcmd(0x8F);
 12442  048F  308F               	movlw	143
 12443  0490  3187  27F8  3183   	fcall	_LCDcmd
 12444                           
 12445                           ;main.c: 438: LCDchar(ALAF);
 12446  0493  0020               	movlb	0	; select bank0
 12447  0494  086A               	movf	_ALAF,w
 12448  0495  3190  2022  3183   	fcall	_LCDchar
 12449  0498                     l5398:
 12450                           
 12451                           ;main.c: 441: if(ALAF == 'A'){
 12452  0498  3041               	movlw	65
 12453  0499  0020               	movlb	0	; select bank0
 12454  049A  066A               	xorwf	_ALAF,w
 12455  049B  1D03               	btfss	3,2
 12456  049C  2C9E               	goto	u4711
 12457  049D  2C9F               	goto	u4710
 12458  049E                     u4711:
 12459  049E  2D10               	goto	l5432
 12460  049F                     u4710:
 12461  049F                     l5400:
 12462                           
 12463                           ;main.c: 442: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger){
 12464  049F  0021               	movlb	1	; select bank1
 12465  04A0  0843               	movf	(_clkAlarm^(0+128)+3),w
 12466  04A1  1D03               	btfss	3,2
 12467  04A2  2CA4               	goto	u4721
 12468  04A3  2CA5               	goto	u4720
 12469  04A4                     u4721:
 12470  04A4  2CAF               	goto	l5406
 12471  04A5                     u4720:
 12472  04A5                     l5402:
 12473  04A5  084B               	movf	(_tempAlarm^(0+128)+1),w
 12474  04A6  1D03               	btfss	3,2
 12475  04A7  2CA9               	goto	u4731
 12476  04A8  2CAA               	goto	u4730
 12477  04A9                     u4731:
 12478  04A9  2CAF               	goto	l5406
 12479  04AA                     u4730:
 12480  04AA                     l5404:
 12481  04AA  0848               	movf	(_lumAlarm^(0+128)+1),w
 12482  04AB  1903               	btfsc	3,2
 12483  04AC  2CAE               	goto	u4741
 12484  04AD  2CAF               	goto	u4740
 12485  04AE                     u4741:
 12486  04AE  2D0A               	goto	l1362
 12487  04AF                     u4740:
 12488  04AF                     l5406:
 12489                           
 12490                           ;main.c: 443: if(alarmPWMStart.h == 0xff){
 12491  04AF  0A66               	incf	_alarmPWMStart^(0+128),w
 12492  04B0  1D03               	btfss	3,2
 12493  04B1  2CB3               	goto	u4751
 12494  04B2  2CB4               	goto	u4750
 12495  04B3                     u4751:
 12496  04B3  2CC6               	goto	l1365
 12497  04B4                     u4750:
 12498  04B4                     l5408:
 12499                           
 12500                           ;main.c: 444: alarmPWMStart.h = t.h;
 12501  04B4  0020               	movlb	0	; select bank0
 12502  04B5  085F               	movf	_t,w
 12503  04B6  00C3               	movwf	??_update_menuLCD
 12504  04B7  0843               	movf	??_update_menuLCD,w
 12505  04B8  0021               	movlb	1	; select bank1
 12506  04B9  00E6               	movwf	_alarmPWMStart^(0+128)
 12507                           
 12508                           ;main.c: 445: alarmPWMStart.m = t.m;
 12509  04BA  0020               	movlb	0	; select bank0
 12510  04BB  0860               	movf	_t+1,w
 12511  04BC  00C3               	movwf	??_update_menuLCD
 12512  04BD  0843               	movf	??_update_menuLCD,w
 12513  04BE  0021               	movlb	1	; select bank1
 12514  04BF  00E7               	movwf	(_alarmPWMStart^(0+128)+1)
 12515                           
 12516                           ;main.c: 446: alarmPWMStart.s = t.s;
 12517  04C0  0020               	movlb	0	; select bank0
 12518  04C1  0861               	movf	_t+2,w
 12519  04C2  00C3               	movwf	??_update_menuLCD
 12520  04C3  0843               	movf	??_update_menuLCD,w
 12521  04C4  0021               	movlb	1	; select bank1
 12522  04C5  00E8               	movwf	(_alarmPWMStart^(0+128)+2)
 12523  04C6                     l1365:
 12524                           
 12525                           ;main.c: 447: };main.c: 448: struct Time diff = {0,0,0};
 12526  04C6  0844               	movf	update_menuLCD@F12927^(0+128),w
 12527  04C7  0020               	movlb	0	; select bank0
 12528  04C8  00D8               	movwf	update_menuLCD@diff
 12529  04C9  0021               	movlb	1	; select bank1
 12530  04CA  0845               	movf	(update_menuLCD@F12927+1)^(0+128),w
 12531  04CB  0020               	movlb	0	; select bank0
 12532  04CC  00D9               	movwf	update_menuLCD@diff+1
 12533  04CD  0021               	movlb	1	; select bank1
 12534  04CE  0846               	movf	(update_menuLCD@F12927+2)^(0+128),w
 12535  04CF  0020               	movlb	0	; select bank0
 12536  04D0  00DA               	movwf	update_menuLCD@diff+2
 12537  04D1                     l5410:
 12538                           
 12539                           ;main.c: 449: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 12540  04D1  085F               	movf	_t,w
 12541  04D2  00A0               	movwf	differenceBetweenTimePeriod@start
 12542  04D3  0860               	movf	_t+1,w
 12543  04D4  00A1               	movwf	differenceBetweenTimePeriod@start+1
 12544  04D5  0861               	movf	_t+2,w
 12545  04D6  00A2               	movwf	differenceBetweenTimePeriod@start+2
 12546  04D7  0021               	movlb	1	; select bank1
 12547  04D8  0866               	movf	_alarmPWMStart^(0+128),w
 12548  04D9  0020               	movlb	0	; select bank0
 12549  04DA  00A3               	movwf	differenceBetweenTimePeriod@stop
 12550  04DB  0021               	movlb	1	; select bank1
 12551  04DC  0867               	movf	(_alarmPWMStart+1)^(0+128),w
 12552  04DD  0020               	movlb	0	; select bank0
 12553  04DE  00A4               	movwf	differenceBetweenTimePeriod@stop+1
 12554  04DF  0021               	movlb	1	; select bank1
 12555  04E0  0868               	movf	(_alarmPWMStart+2)^(0+128),w
 12556  04E1  0020               	movlb	0	; select bank0
 12557  04E2  00A5               	movwf	differenceBetweenTimePeriod@stop+2
 12558  04E3  3058               	movlw	(low (update_menuLCD@diff| 0))& (0+255)
 12559  04E4  00C3               	movwf	??_update_menuLCD
 12560  04E5  0843               	movf	??_update_menuLCD,w
 12561  04E6  00A6               	movwf	differenceBetweenTimePeriod@diff
 12562  04E7  3194  249B  3183   	fcall	_differenceBetweenTimePeriod
 12563  04EA                     l5412:
 12564                           
 12565                           ;main.c: 451: if(diff.s <= TALA){
 12566  04EA  0020               	movlb	0	; select bank0
 12567  04EB  085A               	movf	update_menuLCD@diff+2,w
 12568  04EC  0021               	movlb	1	; select bank1
 12569  04ED  026D               	subwf	_TALA^(0+128),w
 12570  04EE  1C03               	skipc
 12571  04EF  2CF1               	goto	u4761
 12572  04F0  2CF2               	goto	u4760
 12573  04F1                     u4761:
 12574  04F1  2CF5               	goto	l1368
 12575  04F2                     u4760:
 12576  04F2                     l5414:
 12577                           
 12578                           ;main.c: 452: PWM_on = 1;
 12579  04F2  01D5               	clrf	_PWM_on^(0+128)
 12580  04F3  0AD5               	incf	_PWM_on^(0+128),f
 12581                           
 12582                           ;main.c: 463: } else if(PWM6EN==1){
 12583  04F4  2D10               	goto	l5432
 12584  04F5                     l1368:
 12585  04F5  0027               	movlb	7	; select bank7
 12586  04F6  1F8E               	btfss	14,7	;volatile
 12587  04F7  2CF9               	goto	u4771
 12588  04F8  2CFA               	goto	u4770
 12589  04F9                     u4771:
 12590  04F9  2D10               	goto	l1371
 12591  04FA                     u4770:
 12592  04FA                     l5416:
 12593                           
 12594                           ;main.c: 464: PWM_on = 0;
 12595  04FA  0021               	movlb	1	; select bank1
 12596  04FB  01D5               	clrf	_PWM_on^(0+128)
 12597  04FC                     l5418:
 12598                           
 12599                           ;main.c: 465: PWM6_LoadDutyValue(0);
 12600  04FC  3000               	movlw	0
 12601  04FD  0020               	movlb	0	; select bank0
 12602  04FE  00A0               	movwf	PWM6_LoadDutyValue@dutyValue
 12603  04FF  00A1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12604  0500  3191  2111  3183   	fcall	_PWM6_LoadDutyValue
 12605  0503                     l5420:
 12606                           
 12607                           ;main.c: 466: TMR2_StopTimer();
 12608  0503  319F  27B5  3183   	fcall	_TMR2_StopTimer
 12609  0506                     l5422:
 12610                           
 12611                           ;main.c: 467: PWM_Output_D4_Disable();
 12612  0506  319F  27AB  3183   	fcall	_PWM_Output_D4_Disable
 12613  0509  2D10               	goto	l5432
 12614  050A                     l1362:
 12615  050A  0027               	movlb	7	; select bank7
 12616  050B  1F8E               	btfss	14,7	;volatile
 12617  050C  2D0E               	goto	u4781
 12618  050D  2D0F               	goto	u4780
 12619  050E                     u4781:
 12620  050E  2D10               	goto	l5432
 12621  050F                     u4780:
 12622  050F  2CFA               	goto	l5416
 12623  0510                     l1371:
 12624  0510                     l5432:
 12625                           
 12626                           ;main.c: 474: };main.c: 475: };main.c: 477: LCDcmd(0xc0);
 12627  0510  30C0               	movlw	192
 12628  0511  3187  27F8  3183   	fcall	_LCDcmd
 12629  0514                     l5434:
 12630                           
 12631                           ;main.c: 478: char tt[4];;main.c: 479: if(editingTempAlarm){
 12632  0514  0021               	movlb	1	; select bank1
 12633  0515  0857               	movf	_editingTempAlarm^(0+128),w
 12634  0516  1903               	btfsc	3,2
 12635  0517  2D19               	goto	u4791
 12636  0518  2D1A               	goto	u4790
 12637  0519                     u4791:
 12638  0519  2D2D               	goto	l5438
 12639  051A                     u4790:
 12640  051A                     l5436:
 12641                           
 12642                           ;main.c: 480: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 12643  051A  3040               	movlw	low (STR_3| (0+32768))
 12644  051B  0020               	movlb	0	; select bank0
 12645  051C  00AE               	movwf	sprintf@f
 12646  051D  3098               	movlw	high (STR_3| (0+32768))
 12647  051E  00AF               	movwf	sprintf@f+1
 12648  051F  0021               	movlb	1	; select bank1
 12649  0520  084A               	movf	_tempAlarm^(0+128),w
 12650  0521  0020               	movlb	0	; select bank0
 12651  0522  00C3               	movwf	??_update_menuLCD
 12652  0523  01C4               	clrf	??_update_menuLCD+1
 12653  0524  0843               	movf	??_update_menuLCD,w
 12654  0525  00B0               	movwf	?_sprintf+2
 12655  0526  0844               	movf	??_update_menuLCD+1,w
 12656  0527  00B1               	movwf	?_sprintf+3
 12657  0528  3051               	movlw	(low (update_menuLCD@tt| 0))& (0+255)
 12658  0529  3185  25FD  3183   	fcall	_sprintf
 12659                           
 12660                           ;main.c: 481: } else{
 12661  052C  2D3D               	goto	l5440
 12662  052D                     l5438:
 12663                           
 12664                           ;main.c: 482: sprintf(tt, "%02d C", temp);
 12665  052D  3040               	movlw	low (STR_3| (0+32768))
 12666  052E  0020               	movlb	0	; select bank0
 12667  052F  00AE               	movwf	sprintf@f
 12668  0530  3098               	movlw	high (STR_3| (0+32768))
 12669  0531  00AF               	movwf	sprintf@f+1
 12670  0532  0869               	movf	_temp,w
 12671  0533  00C3               	movwf	??_update_menuLCD
 12672  0534  01C4               	clrf	??_update_menuLCD+1
 12673  0535  0843               	movf	??_update_menuLCD,w
 12674  0536  00B0               	movwf	?_sprintf+2
 12675  0537  0844               	movf	??_update_menuLCD+1,w
 12676  0538  00B1               	movwf	?_sprintf+3
 12677  0539  3051               	movlw	(low (update_menuLCD@tt| 0))& (0+255)
 12678  053A  3185  25FD  3183   	fcall	_sprintf
 12679  053D                     l5440:
 12680                           
 12681                           ;main.c: 483: };main.c: 484: LCDstr(tt);
 12682  053D  3051               	movlw	low update_menuLCD@tt
 12683  053E  0020               	movlb	0	; select bank0
 12684  053F  00A9               	movwf	LCDstr@p
 12685  0540  3000               	movlw	high update_menuLCD@tt
 12686  0541  00AA               	movwf	LCDstr@p+1
 12687  0542  3191  217A  3183   	fcall	_LCDstr
 12688  0545                     l5442:
 12689                           
 12690                           ;main.c: 486: LCDcmd(0xcd);
 12691  0545  30CD               	movlw	205
 12692  0546  3187  27F8  3183   	fcall	_LCDcmd
 12693  0549                     l5444:
 12694                           
 12695                           ;main.c: 487: char l[3];;main.c: 489: if(editingLumAlarm){
 12696  0549  0021               	movlb	1	; select bank1
 12697  054A  0856               	movf	_editingLumAlarm^(0+128),w
 12698  054B  1903               	btfsc	3,2
 12699  054C  2D4E               	goto	u4801
 12700  054D  2D4F               	goto	u4800
 12701  054E                     u4801:
 12702  054E  2D62               	goto	l5448
 12703  054F                     u4800:
 12704  054F                     l5446:
 12705                           
 12706                           ;main.c: 490: sprintf(l, "L %d", lumAlarm.alarmLum);
 12707  054F  3047               	movlw	low (STR_5| (0+32768))
 12708  0550  0020               	movlb	0	; select bank0
 12709  0551  00AE               	movwf	sprintf@f
 12710  0552  3098               	movlw	high (STR_5| (0+32768))
 12711  0553  00AF               	movwf	sprintf@f+1
 12712  0554  0021               	movlb	1	; select bank1
 12713  0555  0847               	movf	_lumAlarm^(0+128),w
 12714  0556  0020               	movlb	0	; select bank0
 12715  0557  00C3               	movwf	??_update_menuLCD
 12716  0558  01C4               	clrf	??_update_menuLCD+1
 12717  0559  0843               	movf	??_update_menuLCD,w
 12718  055A  00B0               	movwf	?_sprintf+2
 12719  055B  0844               	movf	??_update_menuLCD+1,w
 12720  055C  00B1               	movwf	?_sprintf+3
 12721  055D  3055               	movlw	(low (update_menuLCD@l| 0))& (0+255)
 12722  055E  3185  25FD  3183   	fcall	_sprintf
 12723                           
 12724                           ;main.c: 491: } else{
 12725  0561  2D72               	goto	l5450
 12726  0562                     l5448:
 12727                           
 12728                           ;main.c: 492: sprintf(l, "L %d", lumLevel);
 12729  0562  3047               	movlw	low (STR_5| (0+32768))
 12730  0563  0020               	movlb	0	; select bank0
 12731  0564  00AE               	movwf	sprintf@f
 12732  0565  3098               	movlw	high (STR_5| (0+32768))
 12733  0566  00AF               	movwf	sprintf@f+1
 12734  0567  0868               	movf	_lumLevel,w
 12735  0568  00C3               	movwf	??_update_menuLCD
 12736  0569  01C4               	clrf	??_update_menuLCD+1
 12737  056A  0843               	movf	??_update_menuLCD,w
 12738  056B  00B0               	movwf	?_sprintf+2
 12739  056C  0844               	movf	??_update_menuLCD+1,w
 12740  056D  00B1               	movwf	?_sprintf+3
 12741  056E  3055               	movlw	(low (update_menuLCD@l| 0))& (0+255)
 12742  056F  3185  25FD  3183   	fcall	_sprintf
 12743  0572                     l5450:
 12744                           
 12745                           ;main.c: 493: };main.c: 494: LCDstr(l);
 12746  0572  3055               	movlw	low update_menuLCD@l
 12747  0573  0020               	movlb	0	; select bank0
 12748  0574  00A9               	movwf	LCDstr@p
 12749  0575  3000               	movlw	high update_menuLCD@l
 12750  0576  00AA               	movwf	LCDstr@p+1
 12751  0577  3191  217A  3183   	fcall	_LCDstr
 12752  057A                     l5452:
 12753                           
 12754                           ;main.c: 496: if(modeFlag != 0){
 12755  057A  0020               	movlb	0	; select bank0
 12756  057B  0862               	movf	_modeFlag,w
 12757  057C  0463               	iorwf	_modeFlag+1,w
 12758  057D  1903               	btfsc	3,2
 12759  057E  2D80               	goto	u4811
 12760  057F  2D81               	goto	u4810
 12761  0580                     u4811:
 12762  0580  2D8D               	goto	l5458
 12763  0581                     u4810:
 12764  0581                     l5454:
 12765                           
 12766                           ;main.c: 497: LCDcmd(0x8B);
 12767  0581  308B               	movlw	139
 12768  0582  3187  27F8  3183   	fcall	_LCDcmd
 12769  0585                     l5456:
 12770                           
 12771                           ;main.c: 498: LCDstr("CTL");
 12772  0585  304C               	movlw	low (STR_7| (0+32768))
 12773  0586  0020               	movlb	0	; select bank0
 12774  0587  00A9               	movwf	LCDstr@p
 12775  0588  3098               	movlw	high (STR_7| (0+32768))
 12776  0589  00AA               	movwf	LCDstr@p+1
 12777  058A  3191  217A  3183   	fcall	_LCDstr
 12778  058D                     l5458:
 12779                           
 12780                           ;main.c: 499: };main.c: 501: if(modeFlag == 1){
 12781  058D  0020               	movlb	0	; select bank0
 12782  058E  0362               	decf	_modeFlag,w
 12783  058F  0463               	iorwf	_modeFlag+1,w
 12784  0590  1D03               	btfss	3,2
 12785  0591  2D93               	goto	u4821
 12786  0592  2D94               	goto	u4820
 12787  0593                     u4821:
 12788  0593  2DC3               	goto	l5476
 12789  0594                     u4820:
 12790  0594                     l5460:
 12791                           
 12792                           ;main.c: 502: if(editingClockAlarm == 0){
 12793  0594  0864               	movf	_editingClockAlarm,w
 12794  0595  0465               	iorwf	_editingClockAlarm+1,w
 12795  0596  1D03               	btfss	3,2
 12796  0597  2D99               	goto	u4831
 12797  0598  2D9A               	goto	u4830
 12798  0599                     u4831:
 12799  0599  2D9F               	goto	l5464
 12800  059A                     u4830:
 12801  059A                     l5462:
 12802                           
 12803                           ;main.c: 503: LCDcmd(0x8B);
 12804  059A  308B               	movlw	139
 12805  059B  3187  27F8  3183   	fcall	_LCDcmd
 12806                           
 12807                           ;main.c: 504: } else{
 12808  059E  2DFC               	goto	l1396
 12809  059F                     l5464:
 12810                           
 12811                           ;main.c: 505: if(editingClockAlarm == 1){
 12812  059F  0364               	decf	_editingClockAlarm,w
 12813  05A0  0465               	iorwf	_editingClockAlarm+1,w
 12814  05A1  1D03               	btfss	3,2
 12815  05A2  2DA4               	goto	u4841
 12816  05A3  2DA5               	goto	u4840
 12817  05A4                     u4841:
 12818  05A4  2DAA               	goto	l5468
 12819  05A5                     u4840:
 12820  05A5                     l5466:
 12821                           
 12822                           ;main.c: 506: LCDcmd(0x81);
 12823  05A5  3081               	movlw	129
 12824  05A6  3187  27F8  3183   	fcall	_LCDcmd
 12825                           
 12826                           ;main.c: 507: } else if(editingClockAlarm == 2){
 12827  05A9  2DFC               	goto	l1396
 12828  05AA                     l5468:
 12829  05AA  3002               	movlw	2
 12830  05AB  0664               	xorwf	_editingClockAlarm,w
 12831  05AC  0465               	iorwf	_editingClockAlarm+1,w
 12832  05AD  1D03               	btfss	3,2
 12833  05AE  2DB0               	goto	u4851
 12834  05AF  2DB1               	goto	u4850
 12835  05B0                     u4851:
 12836  05B0  2DB6               	goto	l5472
 12837  05B1                     u4850:
 12838  05B1                     l5470:
 12839                           
 12840                           ;main.c: 508: LCDcmd(0x84);
 12841  05B1  3084               	movlw	132
 12842  05B2  3187  27F8  3183   	fcall	_LCDcmd
 12843                           
 12844                           ;main.c: 509: } else if(editingClockAlarm == 3){
 12845  05B5  2DFC               	goto	l1396
 12846  05B6                     l5472:
 12847  05B6  3003               	movlw	3
 12848  05B7  0664               	xorwf	_editingClockAlarm,w
 12849  05B8  0465               	iorwf	_editingClockAlarm+1,w
 12850  05B9  1D03               	btfss	3,2
 12851  05BA  2DBC               	goto	u4861
 12852  05BB  2DBD               	goto	u4860
 12853  05BC                     u4861:
 12854  05BC  2DC2               	goto	l1380
 12855  05BD                     u4860:
 12856  05BD                     l5474:
 12857                           
 12858                           ;main.c: 510: LCDcmd(0x87);
 12859  05BD  3087               	movlw	135
 12860  05BE  3187  27F8  3183   	fcall	_LCDcmd
 12861  05C1  2DFC               	goto	l1396
 12862  05C2                     l1380:
 12863                           
 12864                           ;main.c: 511: };main.c: 512: };main.c: 513: } else if(modeFlag == 2){
 12865  05C2  2DFC               	goto	l1396
 12866  05C3                     l5476:
 12867  05C3  3002               	movlw	2
 12868  05C4  0662               	xorwf	_modeFlag,w
 12869  05C5  0463               	iorwf	_modeFlag+1,w
 12870  05C6  1D03               	btfss	3,2
 12871  05C7  2DC9               	goto	u4871
 12872  05C8  2DCA               	goto	u4870
 12873  05C9                     u4871:
 12874  05C9  2DDA               	goto	l5484
 12875  05CA                     u4870:
 12876  05CA                     l5478:
 12877                           
 12878                           ;main.c: 515: if(editingTempAlarm == 0){
 12879  05CA  0021               	movlb	1	; select bank1
 12880  05CB  0857               	movf	_editingTempAlarm^(0+128),w
 12881  05CC  1D03               	btfss	3,2
 12882  05CD  2DCF               	goto	u4881
 12883  05CE  2DD0               	goto	u4880
 12884  05CF                     u4881:
 12885  05CF  2DD5               	goto	l5482
 12886  05D0                     u4880:
 12887  05D0                     l5480:
 12888                           
 12889                           ;main.c: 516: LCDcmd(0x8c);
 12890  05D0  308C               	movlw	140
 12891  05D1  3187  27F8  3183   	fcall	_LCDcmd
 12892                           
 12893                           ;main.c: 517: }else {
 12894  05D4  2DFC               	goto	l1396
 12895  05D5                     l5482:
 12896                           
 12897                           ;main.c: 518: LCDcmd(0xc1);
 12898  05D5  30C1               	movlw	193
 12899  05D6  3187  27F8  3183   	fcall	_LCDcmd
 12900  05D9  2DFC               	goto	l1396
 12901  05DA                     l5484:
 12902  05DA  3003               	movlw	3
 12903  05DB  0662               	xorwf	_modeFlag,w
 12904  05DC  0463               	iorwf	_modeFlag+1,w
 12905  05DD  1D03               	btfss	3,2
 12906  05DE  2DE0               	goto	u4891
 12907  05DF  2DE1               	goto	u4890
 12908  05E0                     u4891:
 12909  05E0  2DF1               	goto	l5492
 12910  05E1                     u4890:
 12911  05E1                     l5486:
 12912                           
 12913                           ;main.c: 523: if(editingLumAlarm == 0){
 12914  05E1  0021               	movlb	1	; select bank1
 12915  05E2  0856               	movf	_editingLumAlarm^(0+128),w
 12916  05E3  1D03               	btfss	3,2
 12917  05E4  2DE6               	goto	u4901
 12918  05E5  2DE7               	goto	u4900
 12919  05E6                     u4901:
 12920  05E6  2DEC               	goto	l5490
 12921  05E7                     u4900:
 12922  05E7                     l5488:
 12923                           
 12924                           ;main.c: 524: LCDcmd(0x8d);
 12925  05E7  308D               	movlw	141
 12926  05E8  3187  27F8  3183   	fcall	_LCDcmd
 12927                           
 12928                           ;main.c: 525: }else {
 12929  05EB  2DFC               	goto	l1396
 12930  05EC                     l5490:
 12931                           
 12932                           ;main.c: 526: LCDcmd(0xcf);
 12933  05EC  30CF               	movlw	207
 12934  05ED  3187  27F8  3183   	fcall	_LCDcmd
 12935  05F0  2DFC               	goto	l1396
 12936  05F1                     l5492:
 12937  05F1  3004               	movlw	4
 12938  05F2  0662               	xorwf	_modeFlag,w
 12939  05F3  0463               	iorwf	_modeFlag+1,w
 12940  05F4  1D03               	btfss	3,2
 12941  05F5  2DF7               	goto	u4911
 12942  05F6  2DF8               	goto	u4910
 12943  05F7                     u4911:
 12944  05F7  2DFC               	goto	l1396
 12945  05F8                     u4910:
 12946  05F8                     l5494:
 12947                           
 12948                           ;main.c: 530: LCDcmd(0x8f);
 12949  05F8  308F               	movlw	143
 12950  05F9  3187  27F8  3183   	fcall	_LCDcmd
 12951  05FC                     l1396:
 12952  05FC  0008               	return
 12953  05FD                     __end_of_update_menuLCD:
 12954                           
 12955                           	psect	text10
 12956  05FD                     __ptext10:	
 12957 ;; *************** function _sprintf *****************
 12958 ;; Defined at:
 12959 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 12960 ;; Parameters:    Size  Location     Type
 12961 ;;  sp              1    wreg     PTR unsigned char 
 12962 ;;		 -> update_menuLCD@l(3), update_menuLCD@tt(4), update_menuLCD@str(8), 
 12963 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 12964 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 12965 ;;		 -> STR_2(15), STR_1(15), 
 12966 ;; Auto vars:     Size  Location     Type
 12967 ;;  sp              1   34[BANK0 ] PTR unsigned char 
 12968 ;;		 -> update_menuLCD@l(3), update_menuLCD@tt(4), update_menuLCD@str(8), 
 12969 ;;  tmpval          4    0        struct .
 12970 ;;  width           2   31[BANK0 ] int 
 12971 ;;  val             2   28[BANK0 ] unsigned int 
 12972 ;;  cp              2    0        PTR const unsigned char 
 12973 ;;  len             2    0        unsigned int 
 12974 ;;  c               1   33[BANK0 ] unsigned char 
 12975 ;;  flag            1   30[BANK0 ] unsigned char 
 12976 ;;  prec            1   27[BANK0 ] char 
 12977 ;;  ap              1   26[BANK0 ] PTR void [1]
 12978 ;;		 -> ?_sprintf(2), 
 12979 ;; Return value:  Size  Location     Type
 12980 ;;                  2   14[BANK0 ] int 
 12981 ;; Registers used:
 12982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12983 ;; Tracked objects:
 12984 ;;		On entry : 0/0
 12985 ;;		On exit  : 0/0
 12986 ;;		Unchanged: 0/0
 12987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12988 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12989 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12991 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12992 ;;Total ram usage:       21 bytes
 12993 ;; Hardware stack levels used:    1
 12994 ;; Hardware stack levels required when called:    6
 12995 ;; This function calls:
 12996 ;;		___lwdiv
 12997 ;;		___lwmod
 12998 ;;		___wmul
 12999 ;;		_isdigit
 13000 ;; This function is called by:
 13001 ;;		_update_menuLCD
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005                           
 13006                           ;psect for function _sprintf
 13007  05FD                     _sprintf:
 13008                           
 13009                           ;incstack = 0
 13010                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13011                           ;sprintf@sp stored from wreg
 13012  05FD  0020               	movlb	0	; select bank0
 13013  05FE  00C2               	movwf	sprintf@sp
 13014  05FF                     l4906:
 13015                           
 13016                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 13017  05FF  3030               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 13018  0600  00B6               	movwf	??_sprintf
 13019  0601  0836               	movf	??_sprintf,w
 13020  0602  00BA               	movwf	sprintf@ap
 13021                           
 13022                           ;doprnt.c: 553: while((c = *f++)) {
 13023  0603  2F82               	goto	l5010
 13024  0604                     l4908:
 13025                           
 13026                           ;doprnt.c: 555: if(c != '%')
 13027  0604  3025               	movlw	37
 13028  0605  0641               	xorwf	sprintf@c,w
 13029  0606  1903               	btfsc	3,2
 13030  0607  2E09               	goto	u4191
 13031  0608  2E0A               	goto	u4190
 13032  0609                     u4191:
 13033  0609  2E16               	goto	l4914
 13034  060A                     u4190:
 13035  060A                     l4910:
 13036                           
 13037                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 13038  060A  0841               	movf	sprintf@c,w
 13039  060B  00B6               	movwf	??_sprintf
 13040  060C  0842               	movf	sprintf@sp,w
 13041  060D  0086               	movwf	6
 13042  060E  0187               	clrf	7
 13043  060F  0836               	movf	??_sprintf,w
 13044  0610  0081               	movwf	1
 13045  0611                     l4912:
 13046  0611  3001               	movlw	1
 13047  0612  00B6               	movwf	??_sprintf
 13048  0613  0836               	movf	??_sprintf,w
 13049  0614  07C2               	addwf	sprintf@sp,f
 13050                           
 13051                           ;doprnt.c: 559: continue;
 13052  0615  2F82               	goto	l5010
 13053  0616                     l4914:
 13054                           
 13055                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 13056  0616  01BF               	clrf	sprintf@width
 13057  0617  01C0               	clrf	sprintf@width+1
 13058                           
 13059                           ;doprnt.c: 565: flag = 0;
 13060  0618  01BE               	clrf	sprintf@flag
 13061  0619  2E1F               	goto	l4920
 13062  061A                     l1802:	
 13063                           ;doprnt.c: 596: case '0':
 13064                           
 13065                           
 13066                           ;doprnt.c: 597: flag |= 0x04;
 13067  061A  153E               	bsf	sprintf@flag,2
 13068  061B                     l4916:
 13069                           
 13070                           ;doprnt.c: 598: f++;
 13071  061B  3001               	movlw	1
 13072  061C  07AE               	addwf	sprintf@f,f
 13073  061D  3000               	movlw	0
 13074  061E  3DAF               	addwfc	sprintf@f+1,f
 13075  061F                     l4920:	
 13076                           ;doprnt.c: 599: continue;
 13077                           
 13078  061F  082E               	movf	sprintf@f,w
 13079  0620  0084               	movwf	4
 13080  0621  082F               	movf	sprintf@f+1,w
 13081  0622  0085               	movwf	5
 13082  0623  0800               	movf	0,w	;code access
 13083                           
 13084                           ; Switch size 1, requested type "simple"
 13085                           ; Number of cases is 1, Range of values is 48 to 48
 13086                           ; switch strategies available:
 13087                           ; Name         Instructions Cycles
 13088                           ; simple_byte            4     3 (average)
 13089                           ; direct_byte           11     9 (fixed)
 13090                           ; jumptable            263     9 (fixed)
 13091                           ;	Chosen strategy is simple_byte
 13092  0624  3A30               	xorlw	48	; case 48
 13093  0625  1903               	skipnz
 13094  0626  2E1A               	goto	l1802
 13095  0627  2E28               	goto	l4922
 13096  0628                     l4922:
 13097                           
 13098                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 13099  0628  082E               	movf	sprintf@f,w
 13100  0629  0084               	movwf	4
 13101  062A  082F               	movf	sprintf@f+1,w
 13102  062B  0085               	movwf	5
 13103  062C  0800               	movf	0,w	;code access
 13104  062D  3190  20B9  3185   	fcall	_isdigit
 13105  0630  1C03               	btfss	3,0
 13106  0631  2E33               	goto	u4201
 13107  0632  2E34               	goto	u4200
 13108  0633                     u4201:
 13109  0633  2E67               	goto	l4936
 13110  0634                     u4200:
 13111  0634                     l4924:
 13112                           
 13113                           ;doprnt.c: 615: width = 0;
 13114  0634  0020               	movlb	0	; select bank0
 13115  0635  01BF               	clrf	sprintf@width
 13116  0636  01C0               	clrf	sprintf@width+1
 13117  0637                     l4926:
 13118                           
 13119                           ;doprnt.c: 617: width *= 10;
 13120  0637  300A               	movlw	10
 13121  0638  0020               	movlb	0	; select bank0
 13122  0639  00A0               	movwf	___wmul@multiplier
 13123  063A  3000               	movlw	0
 13124  063B  00A1               	movwf	___wmul@multiplier+1
 13125  063C  0840               	movf	sprintf@width+1,w
 13126  063D  00A3               	movwf	___wmul@multiplicand+1
 13127  063E  083F               	movf	sprintf@width,w
 13128  063F  00A2               	movwf	___wmul@multiplicand
 13129  0640  3192  226C  3185   	fcall	___wmul
 13130  0643  0020               	movlb	0	; select bank0
 13131  0644  0821               	movf	?___wmul+1,w
 13132  0645  00C0               	movwf	sprintf@width+1
 13133  0646  0820               	movf	?___wmul,w
 13134  0647  00BF               	movwf	sprintf@width
 13135  0648                     l4928:
 13136                           
 13137                           ;doprnt.c: 618: width += *f++ - '0';
 13138  0648  082E               	movf	sprintf@f,w
 13139  0649  0084               	movwf	4
 13140  064A  082F               	movf	sprintf@f+1,w
 13141  064B  0085               	movwf	5
 13142  064C  0800               	movf	0,w	;code access
 13143  064D  3ED0               	addlw	208
 13144  064E  00B6               	movwf	??_sprintf
 13145  064F  30FF               	movlw	255
 13146  0650  1803               	skipnc
 13147  0651  3000               	movlw	0
 13148  0652  00B7               	movwf	??_sprintf+1
 13149  0653  0836               	movf	??_sprintf,w
 13150  0654  07BF               	addwf	sprintf@width,f
 13151  0655  0837               	movf	??_sprintf+1,w
 13152  0656  3DC0               	addwfc	sprintf@width+1,f
 13153  0657                     l4930:
 13154  0657  3001               	movlw	1
 13155  0658  07AE               	addwf	sprintf@f,f
 13156  0659  3000               	movlw	0
 13157  065A  3DAF               	addwfc	sprintf@f+1,f
 13158  065B                     l4932:
 13159                           
 13160                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 13161  065B  082E               	movf	sprintf@f,w
 13162  065C  0084               	movwf	4
 13163  065D  082F               	movf	sprintf@f+1,w
 13164  065E  0085               	movwf	5
 13165  065F  0800               	movf	0,w	;code access
 13166  0660  3190  20B9  3185   	fcall	_isdigit
 13167  0663  1803               	btfsc	3,0
 13168  0664  2E66               	goto	u4211
 13169  0665  2E67               	goto	u4210
 13170  0666                     u4211:
 13171  0666  2E37               	goto	l4926
 13172  0667                     u4210:
 13173  0667                     l4936:
 13174  0667  0020               	movlb	0	; select bank0
 13175  0668  082F               	movf	sprintf@f+1,w
 13176  0669  00B7               	movwf	??_sprintf+1
 13177  066A  082E               	movf	sprintf@f,w
 13178  066B  00B6               	movwf	??_sprintf
 13179  066C  0AAE               	incf	sprintf@f,f
 13180  066D  1903               	skipnz
 13181  066E  0AAF               	incf	sprintf@f+1,f
 13182  066F  0836               	movf	??_sprintf,w
 13183  0670  0084               	movwf	4
 13184  0671  0837               	movf	??_sprintf+1,w
 13185  0672  0085               	movwf	5
 13186  0673  0800               	movf	0,w	;code access
 13187  0674  00C1               	movwf	sprintf@c
 13188                           
 13189                           ; Switch size 1, requested type "simple"
 13190                           ; Number of cases is 3, Range of values is 0 to 105
 13191                           ; switch strategies available:
 13192                           ; Name         Instructions Cycles
 13193                           ; simple_byte           10     6 (average)
 13194                           ; direct_byte          218     6 (fixed)
 13195                           ; jumptable            260     6 (fixed)
 13196                           ;	Chosen strategy is simple_byte
 13197  0675  3A00               	xorlw	0	; case 0
 13198  0676  1903               	skipnz
 13199  0677  2F96               	goto	l5012
 13200  0678  3A64               	xorlw	100	; case 100
 13201  0679  1903               	skipnz
 13202  067A  2E7F               	goto	l4938
 13203  067B  3A0D               	xorlw	13	; case 105
 13204  067C  1903               	skipnz
 13205  067D  2E7F               	goto	l4938
 13206  067E  2F82               	goto	l5010
 13207  067F                     l4938:
 13208                           
 13209                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 13210  067F  083A               	movf	sprintf@ap,w
 13211  0680  0086               	movwf	6
 13212  0681  0187               	clrf	7
 13213  0682  3F40               	moviw [0]fsr1
 13214  0683  00BC               	movwf	sprintf@val
 13215  0684  3F41               	moviw [1]fsr1
 13216  0685  00BD               	movwf	sprintf@val+1
 13217  0686                     l4940:
 13218  0686  3002               	movlw	2
 13219  0687  00B6               	movwf	??_sprintf
 13220  0688  0836               	movf	??_sprintf,w
 13221  0689  07BA               	addwf	sprintf@ap,f
 13222  068A                     l4942:
 13223                           
 13224                           ;doprnt.c: 1287: if((int)val < 0) {
 13225  068A  1FBD               	btfss	sprintf@val+1,7
 13226  068B  2E8D               	goto	u4221
 13227  068C  2E8E               	goto	u4220
 13228  068D                     u4221:
 13229  068D  2E97               	goto	l4948
 13230  068E                     u4220:
 13231  068E                     l4944:
 13232                           
 13233                           ;doprnt.c: 1288: flag |= 0x03;
 13234  068E  3003               	movlw	3
 13235  068F  00B6               	movwf	??_sprintf
 13236  0690  0836               	movf	??_sprintf,w
 13237  0691  04BE               	iorwf	sprintf@flag,f
 13238  0692                     l4946:
 13239                           
 13240                           ;doprnt.c: 1289: val = -val;
 13241  0692  09BC               	comf	sprintf@val,f
 13242  0693  09BD               	comf	sprintf@val+1,f
 13243  0694  0ABC               	incf	sprintf@val,f
 13244  0695  1903               	skipnz
 13245  0696  0ABD               	incf	sprintf@val+1,f
 13246  0697                     l4948:
 13247                           
 13248                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 13249  0697  01C1               	clrf	sprintf@c
 13250  0698  0AC1               	incf	sprintf@c,f
 13251  0699                     l4954:
 13252                           
 13253                           ;doprnt.c: 1332: if(val < dpowers[c])
 13254  0699  0841               	movf	sprintf@c,w
 13255  069A  00B6               	movwf	??_sprintf
 13256  069B  01B7               	clrf	??_sprintf+1
 13257  069C  35B6               	lslf	??_sprintf,f
 13258  069D  0DB7               	rlf	??_sprintf+1,f
 13259  069E  3036               	movlw	low (_dpowers| (0+32768))
 13260  069F  0736               	addwf	??_sprintf,w
 13261  06A0  0084               	movwf	4
 13262  06A1  3098               	movlw	high (_dpowers| (0+32768))
 13263  06A2  3D37               	addwfc	??_sprintf+1,w
 13264  06A3  0085               	movwf	5
 13265  06A4  3F00               	moviw [0]fsr0
 13266  06A5  00B8               	movwf	??_sprintf+2
 13267  06A6  3F01               	moviw [1]fsr0
 13268  06A7  00B9               	movwf	??_sprintf+3
 13269  06A8  0839               	movf	??_sprintf+3,w
 13270  06A9  023D               	subwf	sprintf@val+1,w
 13271  06AA  1D03               	skipz
 13272  06AB  2EAE               	goto	u4235
 13273  06AC  0838               	movf	??_sprintf+2,w
 13274  06AD  023C               	subwf	sprintf@val,w
 13275  06AE                     u4235:
 13276  06AE  1803               	skipnc
 13277  06AF  2EB1               	goto	u4231
 13278  06B0  2EB2               	goto	u4230
 13279  06B1                     u4231:
 13280  06B1  2EB3               	goto	l4958
 13281  06B2                     u4230:
 13282  06B2  2EBD               	goto	l4960
 13283  06B3                     l4958:
 13284  06B3  3001               	movlw	1
 13285  06B4  00B6               	movwf	??_sprintf
 13286  06B5  0836               	movf	??_sprintf,w
 13287  06B6  07C1               	addwf	sprintf@c,f
 13288  06B7  3005               	movlw	5
 13289  06B8  0641               	xorwf	sprintf@c,w
 13290  06B9  1D03               	btfss	3,2
 13291  06BA  2EBC               	goto	u4241
 13292  06BB  2EBD               	goto	u4240
 13293  06BC                     u4241:
 13294  06BC  2E99               	goto	l4954
 13295  06BD                     u4240:
 13296  06BD                     l4960:
 13297                           
 13298                           ;doprnt.c: 1371: if(width && flag & 0x03)
 13299  06BD  083F               	movf	sprintf@width,w
 13300  06BE  0440               	iorwf	sprintf@width+1,w
 13301  06BF  1903               	btfsc	3,2
 13302  06C0  2EC2               	goto	u4251
 13303  06C1  2EC3               	goto	u4250
 13304  06C2                     u4251:
 13305  06C2  2ECD               	goto	l1820
 13306  06C3                     u4250:
 13307  06C3                     l4962:
 13308  06C3  083E               	movf	sprintf@flag,w
 13309  06C4  3903               	andlw	3
 13310  06C5  1903               	btfsc	3,2
 13311  06C6  2EC8               	goto	u4261
 13312  06C7  2EC9               	goto	u4260
 13313  06C8                     u4261:
 13314  06C8  2ECD               	goto	l1820
 13315  06C9                     u4260:
 13316  06C9                     l4964:
 13317                           
 13318                           ;doprnt.c: 1372: width--;
 13319  06C9  30FF               	movlw	255
 13320  06CA  07BF               	addwf	sprintf@width,f
 13321  06CB  30FF               	movlw	255
 13322  06CC  3DC0               	addwfc	sprintf@width+1,f
 13323  06CD                     l1820:
 13324                           
 13325                           ;doprnt.c: 1407: if(width > c)
 13326  06CD  0840               	movf	sprintf@width+1,w
 13327  06CE  3A80               	xorlw	128
 13328  06CF  3C80               	sublw	128
 13329  06D0  1D03               	skipz
 13330  06D1  2ED4               	goto	u4275
 13331  06D2  083F               	movf	sprintf@width,w
 13332  06D3  0241               	subwf	sprintf@c,w
 13333  06D4                     u4275:
 13334  06D4  1803               	skipnc
 13335  06D5  2ED7               	goto	u4271
 13336  06D6  2ED8               	goto	u4270
 13337  06D7                     u4271:
 13338  06D7  2EE1               	goto	l4968
 13339  06D8                     u4270:
 13340  06D8                     l4966:
 13341                           
 13342                           ;doprnt.c: 1408: width -= c;
 13343  06D8  0020               	movlb	0	; select bank0
 13344  06D9  0841               	movf	sprintf@c,w
 13345  06DA  00B6               	movwf	??_sprintf
 13346  06DB  01B7               	clrf	??_sprintf+1
 13347  06DC  0836               	movf	??_sprintf,w
 13348  06DD  02BF               	subwf	sprintf@width,f
 13349  06DE  0837               	movf	??_sprintf+1,w
 13350  06DF  3BC0               	subwfb	sprintf@width+1,f
 13351  06E0  2EE4               	goto	l4970
 13352  06E1                     l4968:
 13353                           
 13354                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 13355  06E1  0020               	movlb	0	; select bank0
 13356  06E2  01BF               	clrf	sprintf@width
 13357  06E3  01C0               	clrf	sprintf@width+1
 13358  06E4                     l4970:
 13359                           
 13360                           ;doprnt.c: 1413: if(flag & 0x04) {
 13361  06E4  1D3E               	btfss	sprintf@flag,2
 13362  06E5  2EE7               	goto	u4281
 13363  06E6  2EE8               	goto	u4280
 13364  06E7                     u4281:
 13365  06E7  2F15               	goto	l4986
 13366  06E8                     u4280:
 13367  06E8                     l4972:
 13368                           
 13369                           ;doprnt.c: 1418: if(flag & 0x03)
 13370  06E8  083E               	movf	sprintf@flag,w
 13371  06E9  3903               	andlw	3
 13372  06EA  1903               	btfsc	3,2
 13373  06EB  2EED               	goto	u4291
 13374  06EC  2EEE               	goto	u4290
 13375  06ED                     u4291:
 13376  06ED  2EF9               	goto	l4978
 13377  06EE                     u4290:
 13378  06EE                     l4974:
 13379                           
 13380                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 13381  06EE  302D               	movlw	45
 13382  06EF  00B6               	movwf	??_sprintf
 13383  06F0  0842               	movf	sprintf@sp,w
 13384  06F1  0086               	movwf	6
 13385  06F2  0187               	clrf	7
 13386  06F3  0836               	movf	??_sprintf,w
 13387  06F4  0081               	movwf	1
 13388  06F5                     l4976:
 13389  06F5  3001               	movlw	1
 13390  06F6  00B6               	movwf	??_sprintf
 13391  06F7  0836               	movf	??_sprintf,w
 13392  06F8  07C2               	addwf	sprintf@sp,f
 13393  06F9                     l4978:
 13394                           
 13395                           ;doprnt.c: 1441: if(width)
 13396  06F9  083F               	movf	sprintf@width,w
 13397  06FA  0440               	iorwf	sprintf@width+1,w
 13398  06FB  1903               	btfsc	3,2
 13399  06FC  2EFE               	goto	u4301
 13400  06FD  2EFF               	goto	u4300
 13401  06FE                     u4301:
 13402  06FE  2F41               	goto	l5000
 13403  06FF                     u4300:
 13404  06FF                     l4980:
 13405                           
 13406                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 13407  06FF  3030               	movlw	48
 13408  0700  00B6               	movwf	??_sprintf
 13409  0701  0842               	movf	sprintf@sp,w
 13410  0702  0086               	movwf	6
 13411  0703  0187               	clrf	7
 13412  0704  0836               	movf	??_sprintf,w
 13413  0705  0081               	movwf	1
 13414  0706                     l4982:
 13415  0706  3001               	movlw	1
 13416  0707  00B6               	movwf	??_sprintf
 13417  0708  0836               	movf	??_sprintf,w
 13418  0709  07C2               	addwf	sprintf@sp,f
 13419  070A                     l4984:
 13420                           
 13421                           ;doprnt.c: 1444: while(--width);
 13422  070A  30FF               	movlw	255
 13423  070B  07BF               	addwf	sprintf@width,f
 13424  070C  30FF               	movlw	255
 13425  070D  3DC0               	addwfc	sprintf@width+1,f
 13426  070E  083F               	movf	sprintf@width,w
 13427  070F  0440               	iorwf	sprintf@width+1,w
 13428  0710  1D03               	btfss	3,2
 13429  0711  2F13               	goto	u4311
 13430  0712  2F14               	goto	u4310
 13431  0713                     u4311:
 13432  0713  2EFF               	goto	l4980
 13433  0714                     u4310:
 13434  0714  2F41               	goto	l5000
 13435  0715                     l4986:
 13436                           
 13437                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 13438  0715  083F               	movf	sprintf@width,w
 13439  0716  0440               	iorwf	sprintf@width+1,w
 13440  0717  1903               	btfsc	3,2
 13441  0718  2F1A               	goto	u4321
 13442  0719  2F1B               	goto	u4320
 13443  071A                     u4321:
 13444  071A  2F30               	goto	l4994
 13445  071B                     u4320:
 13446  071B                     l4988:
 13447                           
 13448                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 13449  071B  3020               	movlw	32
 13450  071C  00B6               	movwf	??_sprintf
 13451  071D  0842               	movf	sprintf@sp,w
 13452  071E  0086               	movwf	6
 13453  071F  0187               	clrf	7
 13454  0720  0836               	movf	??_sprintf,w
 13455  0721  0081               	movwf	1
 13456  0722                     l4990:
 13457  0722  3001               	movlw	1
 13458  0723  00B6               	movwf	??_sprintf
 13459  0724  0836               	movf	??_sprintf,w
 13460  0725  07C2               	addwf	sprintf@sp,f
 13461  0726                     l4992:
 13462                           
 13463                           ;doprnt.c: 1457: while(--width);
 13464  0726  30FF               	movlw	255
 13465  0727  07BF               	addwf	sprintf@width,f
 13466  0728  30FF               	movlw	255
 13467  0729  3DC0               	addwfc	sprintf@width+1,f
 13468  072A  083F               	movf	sprintf@width,w
 13469  072B  0440               	iorwf	sprintf@width+1,w
 13470  072C  1D03               	btfss	3,2
 13471  072D  2F2F               	goto	u4331
 13472  072E  2F30               	goto	u4330
 13473  072F                     u4331:
 13474  072F  2F1B               	goto	l4988
 13475  0730                     u4330:
 13476  0730                     l4994:
 13477                           
 13478                           ;doprnt.c: 1464: if(flag & 0x03)
 13479  0730  083E               	movf	sprintf@flag,w
 13480  0731  3903               	andlw	3
 13481  0732  1903               	btfsc	3,2
 13482  0733  2F35               	goto	u4341
 13483  0734  2F36               	goto	u4340
 13484  0735                     u4341:
 13485  0735  2F41               	goto	l5000
 13486  0736                     u4340:
 13487  0736                     l4996:
 13488                           
 13489                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 13490  0736  302D               	movlw	45
 13491  0737  00B6               	movwf	??_sprintf
 13492  0738  0842               	movf	sprintf@sp,w
 13493  0739  0086               	movwf	6
 13494  073A  0187               	clrf	7
 13495  073B  0836               	movf	??_sprintf,w
 13496  073C  0081               	movwf	1
 13497  073D                     l4998:
 13498  073D  3001               	movlw	1
 13499  073E  00B6               	movwf	??_sprintf
 13500  073F  0836               	movf	??_sprintf,w
 13501  0740  07C2               	addwf	sprintf@sp,f
 13502  0741                     l5000:
 13503                           
 13504                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 13505  0741  0841               	movf	sprintf@c,w
 13506  0742  00B6               	movwf	??_sprintf
 13507  0743  0836               	movf	??_sprintf,w
 13508  0744  00BB               	movwf	sprintf@prec
 13509                           
 13510                           ;doprnt.c: 1500: while(prec--) {
 13511  0745  2F79               	goto	l5008
 13512  0746                     l5002:
 13513                           
 13514                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 13515  0746  300A               	movlw	10
 13516  0747  00A8               	movwf	___lwmod@divisor
 13517  0748  3000               	movlw	0
 13518  0749  00A9               	movwf	___lwmod@divisor+1
 13519  074A  083B               	movf	sprintf@prec,w
 13520  074B  00B6               	movwf	??_sprintf
 13521  074C  01B7               	clrf	??_sprintf+1
 13522  074D  35B6               	lslf	??_sprintf,f
 13523  074E  0DB7               	rlf	??_sprintf+1,f
 13524  074F  3036               	movlw	low (_dpowers| (0+32768))
 13525  0750  0736               	addwf	??_sprintf,w
 13526  0751  0084               	movwf	4
 13527  0752  3098               	movlw	high (_dpowers| (0+32768))
 13528  0753  3D37               	addwfc	??_sprintf+1,w
 13529  0754  0085               	movwf	5
 13530  0755  3F00               	moviw [0]fsr0
 13531  0756  00A0               	movwf	___lwdiv@divisor
 13532  0757  3F01               	moviw [1]fsr0
 13533  0758  00A1               	movwf	___lwdiv@divisor+1
 13534  0759  083D               	movf	sprintf@val+1,w
 13535  075A  00A3               	movwf	___lwdiv@dividend+1
 13536  075B  083C               	movf	sprintf@val,w
 13537  075C  00A2               	movwf	___lwdiv@dividend
 13538  075D  3195  253D  3185   	fcall	___lwdiv
 13539  0760  0020               	movlb	0	; select bank0
 13540  0761  0821               	movf	?___lwdiv+1,w
 13541  0762  00AB               	movwf	___lwmod@dividend+1
 13542  0763  0820               	movf	?___lwdiv,w
 13543  0764  00AA               	movwf	___lwmod@dividend
 13544  0765  3194  24D0  3185   	fcall	___lwmod
 13545  0768  0020               	movlb	0	; select bank0
 13546  0769  0828               	movf	?___lwmod,w
 13547  076A  3E30               	addlw	48
 13548  076B  00B8               	movwf	??_sprintf+2
 13549  076C  0838               	movf	??_sprintf+2,w
 13550  076D  00C1               	movwf	sprintf@c
 13551  076E                     l5004:
 13552                           
 13553                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 13554  076E  0841               	movf	sprintf@c,w
 13555  076F  00B6               	movwf	??_sprintf
 13556  0770  0842               	movf	sprintf@sp,w
 13557  0771  0086               	movwf	6
 13558  0772  0187               	clrf	7
 13559  0773  0836               	movf	??_sprintf,w
 13560  0774  0081               	movwf	1
 13561  0775                     l5006:
 13562  0775  3001               	movlw	1
 13563  0776  00B6               	movwf	??_sprintf
 13564  0777  0836               	movf	??_sprintf,w
 13565  0778  07C2               	addwf	sprintf@sp,f
 13566  0779                     l5008:
 13567  0779  30FF               	movlw	255
 13568  077A  00B6               	movwf	??_sprintf
 13569  077B  0836               	movf	??_sprintf,w
 13570  077C  07BB               	addwf	sprintf@prec,f
 13571  077D  0A3B               	incf	sprintf@prec,w
 13572  077E  1D03               	btfss	3,2
 13573  077F  2F81               	goto	u4351
 13574  0780  2F82               	goto	u4350
 13575  0781                     u4351:
 13576  0781  2F46               	goto	l5002
 13577  0782                     u4350:
 13578  0782                     l5010:
 13579  0782  082F               	movf	sprintf@f+1,w
 13580  0783  00B7               	movwf	??_sprintf+1
 13581  0784  082E               	movf	sprintf@f,w
 13582  0785  00B6               	movwf	??_sprintf
 13583  0786  0AAE               	incf	sprintf@f,f
 13584  0787  1903               	skipnz
 13585  0788  0AAF               	incf	sprintf@f+1,f
 13586  0789  0836               	movf	??_sprintf,w
 13587  078A  0084               	movwf	4
 13588  078B  0837               	movf	??_sprintf+1,w
 13589  078C  0085               	movwf	5
 13590  078D  0800               	movf	0,w	;code access
 13591  078E  00B8               	movwf	??_sprintf+2
 13592  078F  0838               	movf	??_sprintf+2,w
 13593  0790  00C1               	movwf	sprintf@c
 13594  0791  0841               	movf	sprintf@c,w
 13595  0792  1D03               	btfss	3,2
 13596  0793  2F95               	goto	u4361
 13597  0794  2F96               	goto	u4360
 13598  0795                     u4361:
 13599  0795  2E04               	goto	l4908
 13600  0796                     u4360:
 13601  0796                     l5012:
 13602                           
 13603                           ;doprnt.c: 1564: *sp = 0;
 13604  0796  0842               	movf	sprintf@sp,w
 13605  0797  0086               	movwf	6
 13606  0798  0187               	clrf	7
 13607  0799  0181               	clrf	1
 13608  079A                     l1837:
 13609  079A  0008               	return
 13610  079B                     __end_of_sprintf:
 13611                           
 13612                           	psect	text11
 13613  10B9                     __ptext11:	
 13614 ;; *************** function _isdigit *****************
 13615 ;; Defined at:
 13616 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 13617 ;; Parameters:    Size  Location     Type
 13618 ;;  c               1    wreg     unsigned char 
 13619 ;; Auto vars:     Size  Location     Type
 13620 ;;  c               1    1[BANK0 ] unsigned char 
 13621 ;; Return value:  Size  Location     Type
 13622 ;;		None               void
 13623 ;; Registers used:
 13624 ;;		wreg, status,2, status,0
 13625 ;; Tracked objects:
 13626 ;;		On entry : 0/0
 13627 ;;		On exit  : 0/0
 13628 ;;		Unchanged: 0/0
 13629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13631 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13633 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13634 ;;Total ram usage:        2 bytes
 13635 ;; Hardware stack levels used:    1
 13636 ;; Hardware stack levels required when called:    5
 13637 ;; This function calls:
 13638 ;;		Nothing
 13639 ;; This function is called by:
 13640 ;;		_sprintf
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644                           
 13645                           ;psect for function _isdigit
 13646  10B9                     _isdigit:
 13647                           
 13648                           ;incstack = 0
 13649                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13650                           ;isdigit@c stored from wreg
 13651  10B9  0020               	movlb	0	; select bank0
 13652  10BA  00A1               	movwf	isdigit@c
 13653  10BB                     l4698:
 13654  10BB  01A0               	clrf	_isdigit$3164
 13655  10BC                     l4700:
 13656  10BC  303A               	movlw	58
 13657  10BD  0221               	subwf	isdigit@c,w
 13658  10BE  1803               	skipnc
 13659  10BF  28C1               	goto	u3611
 13660  10C0  28C2               	goto	u3610
 13661  10C1                     u3611:
 13662  10C1  28CA               	goto	l4706
 13663  10C2                     u3610:
 13664  10C2                     l4702:
 13665  10C2  3030               	movlw	48
 13666  10C3  0221               	subwf	isdigit@c,w
 13667  10C4  1C03               	skipc
 13668  10C5  28C7               	goto	u3621
 13669  10C6  28C8               	goto	u3620
 13670  10C7                     u3621:
 13671  10C7  28CA               	goto	l4706
 13672  10C8                     u3620:
 13673  10C8                     l4704:
 13674  10C8  01A0               	clrf	_isdigit$3164
 13675  10C9  0AA0               	incf	_isdigit$3164,f
 13676  10CA                     l4706:
 13677  10CA  0C20               	rrf	_isdigit$3164,w
 13678  10CB                     l2294:
 13679  10CB  0008               	return
 13680  10CC                     __end_of_isdigit:
 13681                           
 13682                           	psect	text12
 13683  14D0                     __ptext12:	
 13684 ;; *************** function ___lwmod *****************
 13685 ;; Defined at:
 13686 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 13687 ;; Parameters:    Size  Location     Type
 13688 ;;  divisor         2    8[BANK0 ] unsigned int 
 13689 ;;  dividend        2   10[BANK0 ] unsigned int 
 13690 ;; Auto vars:     Size  Location     Type
 13691 ;;  counter         1   13[BANK0 ] unsigned char 
 13692 ;; Return value:  Size  Location     Type
 13693 ;;                  2    8[BANK0 ] unsigned int 
 13694 ;; Registers used:
 13695 ;;		wreg, status,2, status,0
 13696 ;; Tracked objects:
 13697 ;;		On entry : 0/0
 13698 ;;		On exit  : 0/0
 13699 ;;		Unchanged: 0/0
 13700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13701 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13703 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13704 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13705 ;;Total ram usage:        6 bytes
 13706 ;; Hardware stack levels used:    1
 13707 ;; Hardware stack levels required when called:    5
 13708 ;; This function calls:
 13709 ;;		Nothing
 13710 ;; This function is called by:
 13711 ;;		_sprintf
 13712 ;; This function uses a non-reentrant model
 13713 ;;
 13714                           
 13715                           
 13716                           ;psect for function ___lwmod
 13717  14D0                     ___lwmod:
 13718  14D0                     l4750:	
 13719                           ;incstack = 0
 13720                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13721                           
 13722  14D0  0020               	movlb	0	; select bank0
 13723  14D1  0828               	movf	___lwmod@divisor,w
 13724  14D2  0429               	iorwf	___lwmod@divisor+1,w
 13725  14D3  1903               	btfsc	3,2
 13726  14D4  2CD6               	goto	u3741
 13727  14D5  2CD7               	goto	u3740
 13728  14D6                     u3741:
 13729  14D6  2D00               	goto	l4768
 13730  14D7                     u3740:
 13731  14D7                     l4752:
 13732  14D7  01AD               	clrf	___lwmod@counter
 13733  14D8  0AAD               	incf	___lwmod@counter,f
 13734  14D9  2CE3               	goto	l4758
 13735  14DA                     l4754:
 13736  14DA  3001               	movlw	1
 13737  14DB                     u3755:
 13738  14DB  35A8               	lslf	___lwmod@divisor,f
 13739  14DC  0DA9               	rlf	___lwmod@divisor+1,f
 13740  14DD  0B89               	decfsz	9,f
 13741  14DE  2CDB               	goto	u3755
 13742  14DF                     l4756:
 13743  14DF  3001               	movlw	1
 13744  14E0  00AC               	movwf	??___lwmod
 13745  14E1  082C               	movf	??___lwmod,w
 13746  14E2  07AD               	addwf	___lwmod@counter,f
 13747  14E3                     l4758:
 13748  14E3  1FA9               	btfss	___lwmod@divisor+1,7
 13749  14E4  2CE6               	goto	u3761
 13750  14E5  2CE7               	goto	u3760
 13751  14E6                     u3761:
 13752  14E6  2CDA               	goto	l4754
 13753  14E7                     u3760:
 13754  14E7                     l4760:
 13755  14E7  0829               	movf	___lwmod@divisor+1,w
 13756  14E8  022B               	subwf	___lwmod@dividend+1,w
 13757  14E9  1D03               	skipz
 13758  14EA  2CED               	goto	u3775
 13759  14EB  0828               	movf	___lwmod@divisor,w
 13760  14EC  022A               	subwf	___lwmod@dividend,w
 13761  14ED                     u3775:
 13762  14ED  1C03               	skipc
 13763  14EE  2CF0               	goto	u3771
 13764  14EF  2CF1               	goto	u3770
 13765  14F0                     u3771:
 13766  14F0  2CF5               	goto	l4764
 13767  14F1                     u3770:
 13768  14F1                     l4762:
 13769  14F1  0828               	movf	___lwmod@divisor,w
 13770  14F2  02AA               	subwf	___lwmod@dividend,f
 13771  14F3  0829               	movf	___lwmod@divisor+1,w
 13772  14F4  3BAB               	subwfb	___lwmod@dividend+1,f
 13773  14F5                     l4764:
 13774  14F5  3001               	movlw	1
 13775  14F6                     u3785:
 13776  14F6  36A9               	lsrf	___lwmod@divisor+1,f
 13777  14F7  0CA8               	rrf	___lwmod@divisor,f
 13778  14F8  0B89               	decfsz	9,f
 13779  14F9  2CF6               	goto	u3785
 13780  14FA                     l4766:
 13781  14FA  3001               	movlw	1
 13782  14FB  02AD               	subwf	___lwmod@counter,f
 13783  14FC  1D03               	btfss	3,2
 13784  14FD  2CFF               	goto	u3791
 13785  14FE  2D00               	goto	u3790
 13786  14FF                     u3791:
 13787  14FF  2CE7               	goto	l4760
 13788  1500                     u3790:
 13789  1500                     l4768:
 13790  1500  082B               	movf	___lwmod@dividend+1,w
 13791  1501  00A9               	movwf	?___lwmod+1
 13792  1502  082A               	movf	___lwmod@dividend,w
 13793  1503  00A8               	movwf	?___lwmod
 13794  1504                     l2123:
 13795  1504  0008               	return
 13796  1505                     __end_of___lwmod:
 13797                           
 13798                           	psect	text13
 13799  153D                     __ptext13:	
 13800 ;; *************** function ___lwdiv *****************
 13801 ;; Defined at:
 13802 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 13803 ;; Parameters:    Size  Location     Type
 13804 ;;  divisor         2    0[BANK0 ] unsigned int 
 13805 ;;  dividend        2    2[BANK0 ] unsigned int 
 13806 ;; Auto vars:     Size  Location     Type
 13807 ;;  quotient        2    5[BANK0 ] unsigned int 
 13808 ;;  counter         1    7[BANK0 ] unsigned char 
 13809 ;; Return value:  Size  Location     Type
 13810 ;;                  2    0[BANK0 ] unsigned int 
 13811 ;; Registers used:
 13812 ;;		wreg, status,2, status,0
 13813 ;; Tracked objects:
 13814 ;;		On entry : 0/0
 13815 ;;		On exit  : 0/0
 13816 ;;		Unchanged: 0/0
 13817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13818 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13819 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13820 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13821 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13822 ;;Total ram usage:        8 bytes
 13823 ;; Hardware stack levels used:    1
 13824 ;; Hardware stack levels required when called:    5
 13825 ;; This function calls:
 13826 ;;		Nothing
 13827 ;; This function is called by:
 13828 ;;		_sprintf
 13829 ;; This function uses a non-reentrant model
 13830 ;;
 13831                           
 13832                           
 13833                           ;psect for function ___lwdiv
 13834  153D                     ___lwdiv:
 13835  153D                     l4724:	
 13836                           ;incstack = 0
 13837                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13838                           
 13839  153D  0020               	movlb	0	; select bank0
 13840  153E  01A5               	clrf	___lwdiv@quotient
 13841  153F  01A6               	clrf	___lwdiv@quotient+1
 13842  1540                     l4726:
 13843  1540  0820               	movf	___lwdiv@divisor,w
 13844  1541  0421               	iorwf	___lwdiv@divisor+1,w
 13845  1542  1903               	btfsc	3,2
 13846  1543  2D45               	goto	u3671
 13847  1544  2D46               	goto	u3670
 13848  1545                     u3671:
 13849  1545  2D75               	goto	l4746
 13850  1546                     u3670:
 13851  1546                     l4728:
 13852  1546  01A7               	clrf	___lwdiv@counter
 13853  1547  0AA7               	incf	___lwdiv@counter,f
 13854  1548  2D52               	goto	l4734
 13855  1549                     l4730:
 13856  1549  3001               	movlw	1
 13857  154A                     u3685:
 13858  154A  35A0               	lslf	___lwdiv@divisor,f
 13859  154B  0DA1               	rlf	___lwdiv@divisor+1,f
 13860  154C  0B89               	decfsz	9,f
 13861  154D  2D4A               	goto	u3685
 13862  154E                     l4732:
 13863  154E  3001               	movlw	1
 13864  154F  00A4               	movwf	??___lwdiv
 13865  1550  0824               	movf	??___lwdiv,w
 13866  1551  07A7               	addwf	___lwdiv@counter,f
 13867  1552                     l4734:
 13868  1552  1FA1               	btfss	___lwdiv@divisor+1,7
 13869  1553  2D55               	goto	u3691
 13870  1554  2D56               	goto	u3690
 13871  1555                     u3691:
 13872  1555  2D49               	goto	l4730
 13873  1556                     u3690:
 13874  1556                     l4736:
 13875  1556  3001               	movlw	1
 13876  1557                     u3705:
 13877  1557  35A5               	lslf	___lwdiv@quotient,f
 13878  1558  0DA6               	rlf	___lwdiv@quotient+1,f
 13879  1559  0B89               	decfsz	9,f
 13880  155A  2D57               	goto	u3705
 13881  155B  0821               	movf	___lwdiv@divisor+1,w
 13882  155C  0223               	subwf	___lwdiv@dividend+1,w
 13883  155D  1D03               	skipz
 13884  155E  2D61               	goto	u3715
 13885  155F  0820               	movf	___lwdiv@divisor,w
 13886  1560  0222               	subwf	___lwdiv@dividend,w
 13887  1561                     u3715:
 13888  1561  1C03               	skipc
 13889  1562  2D64               	goto	u3711
 13890  1563  2D65               	goto	u3710
 13891  1564                     u3711:
 13892  1564  2D6A               	goto	l4742
 13893  1565                     u3710:
 13894  1565                     l4738:
 13895  1565  0820               	movf	___lwdiv@divisor,w
 13896  1566  02A2               	subwf	___lwdiv@dividend,f
 13897  1567  0821               	movf	___lwdiv@divisor+1,w
 13898  1568  3BA3               	subwfb	___lwdiv@dividend+1,f
 13899  1569                     l4740:
 13900  1569  1425               	bsf	___lwdiv@quotient,0
 13901  156A                     l4742:
 13902  156A  3001               	movlw	1
 13903  156B                     u3725:
 13904  156B  36A1               	lsrf	___lwdiv@divisor+1,f
 13905  156C  0CA0               	rrf	___lwdiv@divisor,f
 13906  156D  0B89               	decfsz	9,f
 13907  156E  2D6B               	goto	u3725
 13908  156F                     l4744:
 13909  156F  3001               	movlw	1
 13910  1570  02A7               	subwf	___lwdiv@counter,f
 13911  1571  1D03               	btfss	3,2
 13912  1572  2D74               	goto	u3731
 13913  1573  2D75               	goto	u3730
 13914  1574                     u3731:
 13915  1574  2D56               	goto	l4736
 13916  1575                     u3730:
 13917  1575                     l4746:
 13918  1575  0826               	movf	___lwdiv@quotient+1,w
 13919  1576  00A1               	movwf	?___lwdiv+1
 13920  1577  0825               	movf	___lwdiv@quotient,w
 13921  1578  00A0               	movwf	?___lwdiv
 13922  1579                     l2113:
 13923  1579  0008               	return
 13924  157A                     __end_of___lwdiv:
 13925                           
 13926                           	psect	text14
 13927  149B                     __ptext14:	
 13928 ;; *************** function _differenceBetweenTimePeriod *****************
 13929 ;; Defined at:
 13930 ;;		line 328 in file "main.c"
 13931 ;; Parameters:    Size  Location     Type
 13932 ;;  start           3    0[BANK0 ] struct Time
 13933 ;;  stop            3    3[BANK0 ] struct Time
 13934 ;;  diff            1    6[BANK0 ] PTR struct Time
 13935 ;;		 -> update_menuLCD@diff(3), 
 13936 ;; Auto vars:     Size  Location     Type
 13937 ;;		None
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  1    wreg      void 
 13940 ;; Registers used:
 13941 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/0
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13947 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13950 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13951 ;;Total ram usage:        8 bytes
 13952 ;; Hardware stack levels used:    1
 13953 ;; Hardware stack levels required when called:    5
 13954 ;; This function calls:
 13955 ;;		Nothing
 13956 ;; This function is called by:
 13957 ;;		_update_menuLCD
 13958 ;; This function uses a non-reentrant model
 13959 ;;
 13960                           
 13961                           
 13962                           ;psect for function _differenceBetweenTimePeriod
 13963  149B                     _differenceBetweenTimePeriod:
 13964  149B                     l4890:	
 13965                           ;incstack = 0
 13966                           ; Regs used in _differenceBetweenTimePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13967                           
 13968                           
 13969                           ;main.c: 331: while (stop.s > start.s) {
 13970  149B  2CA2               	goto	l4894
 13971  149C                     l4892:
 13972                           
 13973                           ;main.c: 332: --start.m;
 13974  149C  3001               	movlw	1
 13975  149D  02A1               	subwf	differenceBetweenTimePeriod@start+1,f
 13976                           
 13977                           ;main.c: 333: start.s += 60;
 13978  149E  303C               	movlw	60
 13979  149F  00A7               	movwf	??_differenceBetweenTimePeriod
 13980  14A0  0827               	movf	??_differenceBetweenTimePeriod,w
 13981  14A1  07A2               	addwf	differenceBetweenTimePeriod@start+2,f
 13982  14A2                     l4894:
 13983  14A2  0020               	movlb	0	; select bank0
 13984  14A3  0825               	movf	differenceBetweenTimePeriod@stop+2,w
 13985  14A4  0222               	subwf	differenceBetweenTimePeriod@start+2,w
 13986  14A5  1C03               	skipc
 13987  14A6  2CA8               	goto	u4171
 13988  14A7  2CA9               	goto	u4170
 13989  14A8                     u4171:
 13990  14A8  2C9C               	goto	l4892
 13991  14A9                     u4170:
 13992  14A9                     l4896:
 13993                           
 13994                           ;main.c: 334: };main.c: 335: diff->s = start.s - stop.s;
 13995  14A9  0825               	movf	differenceBetweenTimePeriod@stop+2,w
 13996  14AA  0222               	subwf	differenceBetweenTimePeriod@start+2,w
 13997  14AB  00A7               	movwf	??_differenceBetweenTimePeriod
 13998  14AC  0826               	movf	differenceBetweenTimePeriod@diff,w
 13999  14AD  3E02               	addlw	2
 14000  14AE  0086               	movwf	6
 14001  14AF  0187               	clrf	7
 14002  14B0  0827               	movf	??_differenceBetweenTimePeriod,w
 14003  14B1  0081               	movwf	1
 14004                           
 14005                           ;main.c: 336: while (stop.m > start.m) {
 14006  14B2  2CB9               	goto	l4900
 14007  14B3                     l4898:
 14008                           
 14009                           ;main.c: 337: --start.h;
 14010  14B3  3001               	movlw	1
 14011  14B4  02A0               	subwf	differenceBetweenTimePeriod@start,f
 14012                           
 14013                           ;main.c: 338: start.m += 60;
 14014  14B5  303C               	movlw	60
 14015  14B6  00A7               	movwf	??_differenceBetweenTimePeriod
 14016  14B7  0827               	movf	??_differenceBetweenTimePeriod,w
 14017  14B8  07A1               	addwf	differenceBetweenTimePeriod@start+1,f
 14018  14B9                     l4900:
 14019  14B9  0824               	movf	differenceBetweenTimePeriod@stop+1,w
 14020  14BA  0221               	subwf	differenceBetweenTimePeriod@start+1,w
 14021  14BB  1C03               	skipc
 14022  14BC  2CBE               	goto	u4181
 14023  14BD  2CBF               	goto	u4180
 14024  14BE                     u4181:
 14025  14BE  2CB3               	goto	l4898
 14026  14BF                     u4180:
 14027  14BF                     l4902:
 14028                           
 14029                           ;main.c: 339: };main.c: 340: diff->m = start.m - stop.m;
 14030  14BF  0824               	movf	differenceBetweenTimePeriod@stop+1,w
 14031  14C0  0221               	subwf	differenceBetweenTimePeriod@start+1,w
 14032  14C1  00A7               	movwf	??_differenceBetweenTimePeriod
 14033  14C2  0A26               	incf	differenceBetweenTimePeriod@diff,w
 14034  14C3  0086               	movwf	6
 14035  14C4  0187               	clrf	7
 14036  14C5  0827               	movf	??_differenceBetweenTimePeriod,w
 14037  14C6  0081               	movwf	1
 14038                           
 14039                           ;main.c: 341: diff->h = start.h - stop.h;
 14040  14C7  0823               	movf	differenceBetweenTimePeriod@stop,w
 14041  14C8  0220               	subwf	differenceBetweenTimePeriod@start,w
 14042  14C9  00A7               	movwf	??_differenceBetweenTimePeriod
 14043  14CA  0826               	movf	differenceBetweenTimePeriod@diff,w
 14044  14CB  0086               	movwf	6
 14045  14CC  0187               	clrf	7
 14046  14CD  0827               	movf	??_differenceBetweenTimePeriod,w
 14047  14CE  0081               	movwf	1
 14048  14CF                     l1329:
 14049  14CF  0008               	return
 14050  14D0                     __end_of_differenceBetweenTimePeriod:
 14051                           
 14052                           	psect	text15
 14053  1FB5                     __ptext15:	
 14054 ;; *************** function _TMR2_StopTimer *****************
 14055 ;; Defined at:
 14056 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 14057 ;; Parameters:    Size  Location     Type
 14058 ;;		None
 14059 ;; Auto vars:     Size  Location     Type
 14060 ;;		None
 14061 ;; Return value:  Size  Location     Type
 14062 ;;                  1    wreg      void 
 14063 ;; Registers used:
 14064 ;;		status,2, status,0, pclath, cstack
 14065 ;; Tracked objects:
 14066 ;;		On entry : 0/0
 14067 ;;		On exit  : 0/0
 14068 ;;		Unchanged: 0/0
 14069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14074 ;;Total ram usage:        0 bytes
 14075 ;; Hardware stack levels used:    1
 14076 ;; Hardware stack levels required when called:    6
 14077 ;; This function calls:
 14078 ;;		_TMR2_Stop
 14079 ;; This function is called by:
 14080 ;;		_update_menuLCD
 14081 ;;		_main
 14082 ;; This function uses a non-reentrant model
 14083 ;;
 14084                           
 14085                           
 14086                           ;psect for function _TMR2_StopTimer
 14087  1FB5                     _TMR2_StopTimer:
 14088  1FB5                     l4822:	
 14089                           ;incstack = 0
 14090                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 14091                           
 14092                           
 14093                           ;tmr2.c: 119: TMR2_Stop();
 14094  1FB5  319F  27AE  319F   	fcall	_TMR2_Stop
 14095  1FB8                     l738:
 14096  1FB8  0008               	return
 14097  1FB9                     __end_of_TMR2_StopTimer:
 14098                           
 14099                           	psect	text16
 14100  1FAE                     __ptext16:	
 14101 ;; *************** function _TMR2_Stop *****************
 14102 ;; Defined at:
 14103 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 14104 ;; Parameters:    Size  Location     Type
 14105 ;;		None
 14106 ;; Auto vars:     Size  Location     Type
 14107 ;;		None
 14108 ;; Return value:  Size  Location     Type
 14109 ;;                  1    wreg      void 
 14110 ;; Registers used:
 14111 ;;		None
 14112 ;; Tracked objects:
 14113 ;;		On entry : 0/0
 14114 ;;		On exit  : 0/0
 14115 ;;		Unchanged: 0/0
 14116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14121 ;;Total ram usage:        0 bytes
 14122 ;; Hardware stack levels used:    1
 14123 ;; Hardware stack levels required when called:    5
 14124 ;; This function calls:
 14125 ;;		Nothing
 14126 ;; This function is called by:
 14127 ;;		_TMR2_StopTimer
 14128 ;; This function uses a non-reentrant model
 14129 ;;
 14130                           
 14131                           
 14132                           ;psect for function _TMR2_Stop
 14133  1FAE                     _TMR2_Stop:
 14134  1FAE                     l4692:	
 14135                           ;incstack = 0
 14136                           ; Regs used in _TMR2_Stop: []
 14137                           
 14138                           
 14139                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 14140  1FAE  0025               	movlb	5	; select bank5
 14141  1FAF  138E               	bcf	14,7	;volatile
 14142  1FB0                     l735:
 14143  1FB0  0008               	return
 14144  1FB1                     __end_of_TMR2_Stop:
 14145                           
 14146                           	psect	text17
 14147  1FAB                     __ptext17:	
 14148 ;; *************** function _PWM_Output_D4_Disable *****************
 14149 ;; Defined at:
 14150 ;;		line 348 in file "main.c"
 14151 ;; Parameters:    Size  Location     Type
 14152 ;;		None
 14153 ;; Auto vars:     Size  Location     Type
 14154 ;;		None
 14155 ;; Return value:  Size  Location     Type
 14156 ;;                  1    wreg      void 
 14157 ;; Registers used:
 14158 ;;		None
 14159 ;; Tracked objects:
 14160 ;;		On entry : 0/0
 14161 ;;		On exit  : 0/0
 14162 ;;		Unchanged: 0/0
 14163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14168 ;;Total ram usage:        0 bytes
 14169 ;; Hardware stack levels used:    1
 14170 ;; Hardware stack levels required when called:    5
 14171 ;; This function calls:
 14172 ;;		Nothing
 14173 ;; This function is called by:
 14174 ;;		_update_menuLCD
 14175 ;;		_main
 14176 ;; This function uses a non-reentrant model
 14177 ;;
 14178                           
 14179                           
 14180                           ;psect for function _PWM_Output_D4_Disable
 14181  1FAB                     _PWM_Output_D4_Disable:
 14182  1FAB                     l4904:	
 14183                           ;incstack = 0
 14184                           ; Regs used in _PWM_Output_D4_Disable: []
 14185                           
 14186                           
 14187                           ;main.c: 349: PWM6EN = 0;
 14188  1FAB  0027               	movlb	7	; select bank7
 14189  1FAC  138E               	bcf	14,7	;volatile
 14190  1FAD                     l1335:
 14191  1FAD  0008               	return
 14192  1FAE                     __end_of_PWM_Output_D4_Disable:
 14193                           
 14194                           	psect	text18
 14195  1111                     __ptext18:	
 14196 ;; *************** function _PWM6_LoadDutyValue *****************
 14197 ;; Defined at:
 14198 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14199 ;; Parameters:    Size  Location     Type
 14200 ;;  dutyValue       2    0[BANK0 ] unsigned int 
 14201 ;; Auto vars:     Size  Location     Type
 14202 ;;		None
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  1    wreg      void 
 14205 ;; Registers used:
 14206 ;;		wreg, status,2, status,0
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/0
 14209 ;;		On exit  : 0/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14214 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14215 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14216 ;;Total ram usage:        4 bytes
 14217 ;; Hardware stack levels used:    1
 14218 ;; Hardware stack levels required when called:    5
 14219 ;; This function calls:
 14220 ;;		Nothing
 14221 ;; This function is called by:
 14222 ;;		_update_menuLCD
 14223 ;;		_main
 14224 ;; This function uses a non-reentrant model
 14225 ;;
 14226                           
 14227                           
 14228                           ;psect for function _PWM6_LoadDutyValue
 14229  1111                     _PWM6_LoadDutyValue:
 14230  1111                     l4820:	
 14231                           ;incstack = 0
 14232                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14233                           
 14234                           
 14235                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 14236  1111  0020               	movlb	0	; select bank0
 14237  1112  0821               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 14238  1113  00A3               	movwf	??_PWM6_LoadDutyValue+1
 14239  1114  0820               	movf	PWM6_LoadDutyValue@dutyValue,w
 14240  1115  00A2               	movwf	??_PWM6_LoadDutyValue
 14241  1116  36A3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14242  1117  0CA2               	rrf	??_PWM6_LoadDutyValue,f
 14243  1118  36A3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14244  1119  0CA2               	rrf	??_PWM6_LoadDutyValue,f
 14245  111A  0822               	movf	??_PWM6_LoadDutyValue,w
 14246  111B  0027               	movlb	7	; select bank7
 14247  111C  008D               	movwf	13	;volatile
 14248                           
 14249                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 14250  111D  0020               	movlb	0	; select bank0
 14251  111E  0820               	movf	PWM6_LoadDutyValue@dutyValue,w
 14252  111F  3903               	andlw	3
 14253  1120  00A2               	movwf	??_PWM6_LoadDutyValue
 14254  1121  3005               	movlw	5
 14255  1122                     u3905:
 14256  1122  35A2               	lslf	??_PWM6_LoadDutyValue,f
 14257  1123  3EFF               	addlw	-1
 14258  1124  1D03               	skipz
 14259  1125  2922               	goto	u3905
 14260  1126  3522               	lslf	??_PWM6_LoadDutyValue,w
 14261  1127  0027               	movlb	7	; select bank7
 14262  1128  008C               	movwf	12	;volatile
 14263  1129                     l693:
 14264  1129  0008               	return
 14265  112A                     __end_of_PWM6_LoadDutyValue:
 14266                           
 14267                           	psect	text19
 14268  117A                     __ptext19:	
 14269 ;; *************** function _LCDstr *****************
 14270 ;; Defined at:
 14271 ;;		line 314 in file "main.c"
 14272 ;; Parameters:    Size  Location     Type
 14273 ;;  p               2    9[BANK0 ] PTR unsigned char 
 14274 ;;		 -> STR_7(4), update_menuLCD@l(3), update_menuLCD@tt(4), update_menuLCD@str(8), 
 14275 ;; Auto vars:     Size  Location     Type
 14276 ;;  c               1   14[BANK0 ] unsigned char 
 14277 ;; Return value:  Size  Location     Type
 14278 ;;                  1    wreg      void 
 14279 ;; Registers used:
 14280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14281 ;; Tracked objects:
 14282 ;;		On entry : 0/0
 14283 ;;		On exit  : 0/0
 14284 ;;		Unchanged: 0/0
 14285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14288 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14290 ;;Total ram usage:        6 bytes
 14291 ;; Hardware stack levels used:    1
 14292 ;; Hardware stack levels required when called:    8
 14293 ;; This function calls:
 14294 ;;		_LCDchar
 14295 ;; This function is called by:
 14296 ;;		_update_menuLCD
 14297 ;; This function uses a non-reentrant model
 14298 ;;
 14299                           
 14300                           
 14301                           ;psect for function _LCDstr
 14302  117A                     _LCDstr:
 14303  117A                     l4884:	
 14304                           ;incstack = 0
 14305                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14306                           
 14307                           
 14308                           ;main.c: 316: unsigned char c;;main.c: 318: while((c = *p++)) LCDchar(c);
 14309  117A  297F               	goto	l4888
 14310  117B                     l4886:
 14311  117B  082E               	movf	LCDstr@c,w
 14312  117C  3190  2022  3191   	fcall	_LCDchar
 14313  117F                     l4888:
 14314  117F  0020               	movlb	0	; select bank0
 14315  1180  082A               	movf	LCDstr@p+1,w
 14316  1181  00AC               	movwf	??_LCDstr+1
 14317  1182  0829               	movf	LCDstr@p,w
 14318  1183  00AB               	movwf	??_LCDstr
 14319  1184  0AA9               	incf	LCDstr@p,f
 14320  1185  1903               	skipnz
 14321  1186  0AAA               	incf	LCDstr@p+1,f
 14322  1187  082B               	movf	??_LCDstr,w
 14323  1188  0084               	movwf	4
 14324  1189  082C               	movf	??_LCDstr+1,w
 14325  118A  0085               	movwf	5
 14326  118B  0800               	movf	0,w	;code access
 14327  118C  00AD               	movwf	??_LCDstr+2
 14328  118D  082D               	movf	??_LCDstr+2,w
 14329  118E  00AE               	movwf	LCDstr@c
 14330  118F  082E               	movf	LCDstr@c,w
 14331  1190  1D03               	btfss	3,2
 14332  1191  2993               	goto	u4161
 14333  1192  2994               	goto	u4160
 14334  1193                     u4161:
 14335  1193  297B               	goto	l4886
 14336  1194                     u4160:
 14337  1194                     l1316:
 14338  1194  0008               	return
 14339  1195                     __end_of_LCDstr:
 14340                           
 14341                           	psect	text20
 14342  1022                     __ptext20:	
 14343 ;; *************** function _LCDchar *****************
 14344 ;; Defined at:
 14345 ;;		line 309 in file "main.c"
 14346 ;; Parameters:    Size  Location     Type
 14347 ;;  c               1    wreg     unsigned char 
 14348 ;; Auto vars:     Size  Location     Type
 14349 ;;  c               1    8[BANK0 ] unsigned char 
 14350 ;; Return value:  Size  Location     Type
 14351 ;;                  1    wreg      void 
 14352 ;; Registers used:
 14353 ;;		wreg, status,2, status,0, pclath, cstack
 14354 ;; Tracked objects:
 14355 ;;		On entry : 0/0
 14356 ;;		On exit  : 0/0
 14357 ;;		Unchanged: 0/0
 14358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14362 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14363 ;;Total ram usage:        1 bytes
 14364 ;; Hardware stack levels used:    1
 14365 ;; Hardware stack levels required when called:    7
 14366 ;; This function calls:
 14367 ;;		_LCDsend2x4
 14368 ;; This function is called by:
 14369 ;;		_LCDstr
 14370 ;;		_update_menuLCD
 14371 ;; This function uses a non-reentrant model
 14372 ;;
 14373                           
 14374                           
 14375                           ;psect for function _LCDchar
 14376  1022                     _LCDchar:
 14377                           
 14378                           ;incstack = 0
 14379                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 14380                           ;LCDchar@c stored from wreg
 14381  1022  0020               	movlb	0	; select bank0
 14382  1023  00A8               	movwf	LCDchar@c
 14383  1024                     l4696:
 14384                           
 14385                           ;main.c: 311: LCDsend2x4(c, 0x01);
 14386  1024  01A2               	clrf	LCDsend2x4@mode
 14387  1025  0AA2               	incf	LCDsend2x4@mode,f
 14388  1026  0828               	movf	LCDchar@c,w
 14389  1027  3189  21B2  3190   	fcall	_LCDsend2x4
 14390  102A                     l1310:
 14391  102A  0008               	return
 14392  102B                     __end_of_LCDchar:
 14393                           
 14394                           	psect	text21
 14395  07F8                     __ptext21:	
 14396 ;; *************** function _LCDcmd *****************
 14397 ;; Defined at:
 14398 ;;		line 304 in file "main.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;  c               1    wreg     unsigned char 
 14401 ;; Auto vars:     Size  Location     Type
 14402 ;;  c               1    8[BANK0 ] unsigned char 
 14403 ;; Return value:  Size  Location     Type
 14404 ;;                  1    wreg      void 
 14405 ;; Registers used:
 14406 ;;		wreg, status,2, status,0, pclath, cstack
 14407 ;; Tracked objects:
 14408 ;;		On entry : 0/0
 14409 ;;		On exit  : 0/0
 14410 ;;		Unchanged: 0/0
 14411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14416 ;;Total ram usage:        1 bytes
 14417 ;; Hardware stack levels used:    1
 14418 ;; Hardware stack levels required when called:    7
 14419 ;; This function calls:
 14420 ;;		_LCDsend2x4
 14421 ;; This function is called by:
 14422 ;;		_update_menuLCD
 14423 ;; This function uses a non-reentrant model
 14424 ;;
 14425                           
 14426                           
 14427                           ;psect for function _LCDcmd
 14428  07F8                     _LCDcmd:
 14429                           
 14430                           ;incstack = 0
 14431                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 14432                           ;LCDcmd@c stored from wreg
 14433  07F8  0020               	movlb	0	; select bank0
 14434  07F9  00A8               	movwf	LCDcmd@c
 14435  07FA                     l4882:
 14436                           
 14437                           ;main.c: 306: LCDsend2x4(c, 0);
 14438  07FA  01A2               	clrf	LCDsend2x4@mode
 14439  07FB  0828               	movf	LCDcmd@c,w
 14440  07FC  3189  21B2  3187   	fcall	_LCDsend2x4
 14441  07FF                     l1307:
 14442  07FF  0008               	return
 14443  0800                     __end_of_LCDcmd:
 14444                           
 14445                           	psect	text22
 14446  079B                     __ptext22:	
 14447 ;; *************** function _S1button *****************
 14448 ;; Defined at:
 14449 ;;		line 612 in file "main.c"
 14450 ;; Parameters:    Size  Location     Type
 14451 ;;		None
 14452 ;; Auto vars:     Size  Location     Type
 14453 ;;		None
 14454 ;; Return value:  Size  Location     Type
 14455 ;;                  1    wreg      void 
 14456 ;; Registers used:
 14457 ;;		wreg, status,2, status,0
 14458 ;; Tracked objects:
 14459 ;;		On entry : 0/0
 14460 ;;		On exit  : 0/0
 14461 ;;		Unchanged: 0/0
 14462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14465 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14466 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14467 ;;Total ram usage:        1 bytes
 14468 ;; Hardware stack levels used:    1
 14469 ;; Hardware stack levels required when called:    5
 14470 ;; This function calls:
 14471 ;;		Nothing
 14472 ;; This function is called by:
 14473 ;;		_editClock
 14474 ;;		_editTemp
 14475 ;;		_editLum
 14476 ;;		_toggleAlarms
 14477 ;;		_main
 14478 ;; This function uses a non-reentrant model
 14479 ;;
 14480                           
 14481                           
 14482                           ;psect for function _S1button
 14483  079B                     _S1button:
 14484  079B                     l5568:	
 14485                           ;incstack = 0
 14486                           ; Regs used in _S1button: [wreg+status,2+status,0]
 14487                           
 14488                           
 14489                           ;main.c: 614: if(modeFlag == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.tri
      +                          gger)){
 14490  079B  0020               	movlb	0	; select bank0
 14491  079C  0862               	movf	_modeFlag,w
 14492  079D  0463               	iorwf	_modeFlag+1,w
 14493  079E  1D03               	btfss	3,2
 14494  079F  2FA1               	goto	u5071
 14495  07A0  2FA2               	goto	u5070
 14496  07A1                     u5071:
 14497  07A1  2FB9               	goto	l5580
 14498  07A2                     u5070:
 14499  07A2                     l5570:
 14500  07A2  0021               	movlb	1	; select bank1
 14501  07A3  0843               	movf	(_clkAlarm^(0+128)+3),w
 14502  07A4  1D03               	btfss	3,2
 14503  07A5  2FA7               	goto	u5081
 14504  07A6  2FA8               	goto	u5080
 14505  07A7                     u5081:
 14506  07A7  2FB2               	goto	l5576
 14507  07A8                     u5080:
 14508  07A8                     l5572:
 14509  07A8  084B               	movf	(_tempAlarm^(0+128)+1),w
 14510  07A9  1D03               	btfss	3,2
 14511  07AA  2FAC               	goto	u5091
 14512  07AB  2FAD               	goto	u5090
 14513  07AC                     u5091:
 14514  07AC  2FB2               	goto	l5576
 14515  07AD                     u5090:
 14516  07AD                     l5574:
 14517  07AD  0848               	movf	(_lumAlarm^(0+128)+1),w
 14518  07AE  1903               	btfsc	3,2
 14519  07AF  2FB1               	goto	u5101
 14520  07B0  2FB2               	goto	u5100
 14521  07B1                     u5101:
 14522  07B1  2FB9               	goto	l5580
 14523  07B2                     u5100:
 14524  07B2                     l5576:
 14525                           
 14526                           ;main.c: 615: clkAlarm.trigger = 0;
 14527  07B2  01C3               	clrf	(_clkAlarm^(0+128)+3)
 14528                           
 14529                           ;main.c: 616: tempAlarm.trigger = 0;
 14530  07B3  01CB               	clrf	(_tempAlarm^(0+128)+1)
 14531                           
 14532                           ;main.c: 617: lumAlarm.trigger = 0;
 14533  07B4  01C8               	clrf	(_lumAlarm^(0+128)+1)
 14534  07B5                     l5578:
 14535                           
 14536                           ;main.c: 618: updateLCD = 1;
 14537  07B5  0020               	movlb	0	; select bank0
 14538  07B6  01EE               	clrf	_updateLCD
 14539  07B7  0AEE               	incf	_updateLCD,f
 14540                           
 14541                           ;main.c: 619: } else{
 14542  07B8  2FEE               	goto	l1430
 14543  07B9                     l5580:
 14544                           
 14545                           ;main.c: 620: if(modeFlag == 1){
 14546  07B9  0020               	movlb	0	; select bank0
 14547  07BA  0362               	decf	_modeFlag,w
 14548  07BB  0463               	iorwf	_modeFlag+1,w
 14549  07BC  1D03               	btfss	3,2
 14550  07BD  2FBF               	goto	u5111
 14551  07BE  2FC0               	goto	u5110
 14552  07BF                     u5111:
 14553  07BF  2FE3               	goto	l5588
 14554  07C0                     u5110:
 14555  07C0                     l5582:
 14556                           
 14557                           ;main.c: 621: if(editingClockAlarm >= 1){
 14558  07C0  0865               	movf	_editingClockAlarm+1,w
 14559  07C1  3A80               	xorlw	128
 14560  07C2  00A0               	movwf	??_S1button
 14561  07C3  3080               	movlw	128
 14562  07C4  0220               	subwf	??_S1button,w
 14563  07C5  1D03               	skipz
 14564  07C6  2FC9               	goto	u5125
 14565  07C7  3001               	movlw	1
 14566  07C8  0264               	subwf	_editingClockAlarm,w
 14567  07C9                     u5125:
 14568  07C9  1C03               	skipc
 14569  07CA  2FCC               	goto	u5121
 14570  07CB  2FCD               	goto	u5120
 14571  07CC                     u5121:
 14572  07CC  2FD2               	goto	l1432
 14573  07CD                     u5120:
 14574  07CD                     l5584:
 14575                           
 14576                           ;main.c: 622: editingClockAlarm++;
 14577  07CD  3001               	movlw	1
 14578  07CE  0020               	movlb	0	; select bank0
 14579  07CF  07E4               	addwf	_editingClockAlarm,f
 14580  07D0  3000               	movlw	0
 14581  07D1  3DE5               	addwfc	_editingClockAlarm+1,f
 14582  07D2                     l1432:
 14583                           
 14584                           ;main.c: 623: };main.c: 624: if(editingClockAlarm > 3){
 14585  07D2  0020               	movlb	0	; select bank0
 14586  07D3  0865               	movf	_editingClockAlarm+1,w
 14587  07D4  3A80               	xorlw	128
 14588  07D5  00A0               	movwf	??_S1button
 14589  07D6  3080               	movlw	128
 14590  07D7  0220               	subwf	??_S1button,w
 14591  07D8  1D03               	skipz
 14592  07D9  2FDC               	goto	u5135
 14593  07DA  3004               	movlw	4
 14594  07DB  0264               	subwf	_editingClockAlarm,w
 14595  07DC                     u5135:
 14596  07DC  1C03               	skipc
 14597  07DD  2FDF               	goto	u5131
 14598  07DE  2FE0               	goto	u5130
 14599  07DF                     u5131:
 14600  07DF  2FE3               	goto	l5588
 14601  07E0                     u5130:
 14602  07E0                     l5586:
 14603                           
 14604                           ;main.c: 625: editingClockAlarm = 0;
 14605  07E0  0020               	movlb	0	; select bank0
 14606  07E1  01E4               	clrf	_editingClockAlarm
 14607  07E2  01E5               	clrf	_editingClockAlarm+1
 14608  07E3                     l5588:
 14609                           
 14610                           ;main.c: 626: };main.c: 627: };main.c: 628: if(editingClockAlarm == 0){
 14611  07E3  0020               	movlb	0	; select bank0
 14612  07E4  0864               	movf	_editingClockAlarm,w
 14613  07E5  0465               	iorwf	_editingClockAlarm+1,w
 14614  07E6  1D03               	btfss	3,2
 14615  07E7  2FE9               	goto	u5141
 14616  07E8  2FEA               	goto	u5140
 14617  07E9                     u5141:
 14618  07E9  2FEE               	goto	l1430
 14619  07EA                     u5140:
 14620  07EA                     l5590:
 14621                           
 14622                           ;main.c: 629: modeFlag++;
 14623  07EA  3001               	movlw	1
 14624  07EB  07E2               	addwf	_modeFlag,f
 14625  07EC  3000               	movlw	0
 14626  07ED  3DE3               	addwfc	_modeFlag+1,f
 14627  07EE                     l1430:
 14628                           
 14629                           ;main.c: 630: };main.c: 631: };main.c: 632: _delay((unsigned long)((50)*(1000000/4000.0)
      +                          ));
 14630  07EE  3011               	movlw	17
 14631  07EF  0020               	movlb	0	; select bank0
 14632  07F0  00A0               	movwf	??_S1button
 14633  07F1  303A               	movlw	58
 14634  07F2                     u6647:
 14635  07F2  0B89               	decfsz	9,f
 14636  07F3  2FF2               	goto	u6647
 14637  07F4  0BA0               	decfsz	??_S1button,f
 14638  07F5  2FF2               	goto	u6647
 14639  07F6  0000               	nop
 14640  07F7                     l1435:
 14641  07F7  0008               	return
 14642  07F8                     __end_of_S1button:
 14643                           
 14644                           	psect	text23
 14645  0B78                     __ptext23:	
 14646 ;; *************** function _cmd_trc *****************
 14647 ;; Defined at:
 14648 ;;		line 979 in file "main.c"
 14649 ;; Parameters:    Size  Location     Type
 14650 ;;  num             2   15[BANK0 ] int 
 14651 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 14652 ;;		 -> main@buff(20), 
 14653 ;; Auto vars:     Size  Location     Type
 14654 ;;  buffData        5   24[BANK0 ] unsigned char [5]
 14655 ;;  buffInit        3   29[BANK0 ] unsigned char [3]
 14656 ;;  n               2   39[BANK0 ] int 
 14657 ;;  aux             2   37[BANK0 ] int 
 14658 ;;  address         2   34[BANK0 ] unsigned int 
 14659 ;;  i               2   32[BANK0 ] int 
 14660 ;;  j               1   41[BANK0 ] unsigned char 
 14661 ;;  buffEOM         1   36[BANK0 ] unsigned char [1]
 14662 ;; Return value:  Size  Location     Type
 14663 ;;                  1    wreg      void 
 14664 ;; Registers used:
 14665 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14666 ;; Tracked objects:
 14667 ;;		On entry : 0/0
 14668 ;;		On exit  : 0/0
 14669 ;;		Unchanged: 0/0
 14670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14671 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14674 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14675 ;;Total ram usage:       27 bytes
 14676 ;; Hardware stack levels used:    1
 14677 ;; Hardware stack levels required when called:    9
 14678 ;; This function calls:
 14679 ;;		_DATAEE_ReadByte
 14680 ;;		___wmul
 14681 ;;		_sendERRORMessage
 14682 ;;		_sendMessage
 14683 ;; This function is called by:
 14684 ;;		_main
 14685 ;; This function uses a non-reentrant model
 14686 ;;
 14687                           
 14688                           
 14689                           ;psect for function _cmd_trc
 14690  0B78                     _cmd_trc:
 14691  0B78                     l6082:	
 14692                           ;incstack = 0
 14693                           ; Regs used in _cmd_trc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14694                           
 14695                           
 14696                           ;main.c: 980: if(num == 4){
 14697  0B78  3004               	movlw	4
 14698  0B79  0020               	movlb	0	; select bank0
 14699  0B7A  062F               	xorwf	cmd_trc@num,w
 14700  0B7B  0430               	iorwf	cmd_trc@num+1,w
 14701  0B7C  1D03               	btfss	3,2
 14702  0B7D  2B7F               	goto	u6041
 14703  0B7E  2B80               	goto	u6040
 14704  0B7F                     u6041:
 14705  0B7F  2C70               	goto	l6138
 14706  0B80                     u6040:
 14707  0B80                     l6084:
 14708                           
 14709                           ;main.c: 981: int n = buffer[2];
 14710  0B80  0831               	movf	cmd_trc@buffer,w
 14711  0B81  3E02               	addlw	2
 14712  0B82  0086               	movwf	6
 14713  0B83  0187               	clrf	7
 14714  0B84  0801               	movf	1,w
 14715  0B85  00B2               	movwf	??_cmd_trc
 14716  0B86  01B3               	clrf	??_cmd_trc+1
 14717  0B87  0832               	movf	??_cmd_trc,w
 14718  0B88  00C7               	movwf	cmd_trc@n
 14719  0B89  0833               	movf	??_cmd_trc+1,w
 14720  0B8A  00C8               	movwf	cmd_trc@n+1
 14721  0B8B                     l6086:
 14722                           
 14723                           ;main.c: 982: int aux = (iwrite-1-iread);
 14724  0B8B  087D               	movf	_iwrite,w
 14725  0B8C  00B2               	movwf	??_cmd_trc
 14726  0B8D  01B3               	clrf	??_cmd_trc+1
 14727  0B8E  0833               	movf	??_cmd_trc+1,w
 14728  0B8F  00B5               	movwf	??_cmd_trc+3
 14729  0B90  0866               	movf	_iread,w
 14730  0B91  0232               	subwf	??_cmd_trc,w
 14731  0B92  00B4               	movwf	??_cmd_trc+2
 14732  0B93  1C03               	skipc
 14733  0B94  03B5               	decf	??_cmd_trc+3,f
 14734  0B95  0834               	movf	??_cmd_trc+2,w
 14735  0B96  3EFF               	addlw	255
 14736  0B97  00C5               	movwf	cmd_trc@aux
 14737  0B98  30FF               	movlw	255
 14738  0B99  3D35               	addwfc	??_cmd_trc+3,w
 14739  0B9A  00C6               	movwf	cmd_trc@aux+1
 14740  0B9B                     l6088:
 14741                           
 14742                           ;main.c: 983: if(aux < 0){
 14743  0B9B  1FC6               	btfss	cmd_trc@aux+1,7
 14744  0B9C  2B9E               	goto	u6051
 14745  0B9D  2B9F               	goto	u6050
 14746  0B9E                     u6051:
 14747  0B9E  2BB1               	goto	l6092
 14748  0B9F                     u6050:
 14749  0B9F                     l6090:
 14750                           
 14751                           ;main.c: 984: aux = iwrite + 1 + (NREG - iread);
 14752  0B9F  087D               	movf	_iwrite,w
 14753  0BA0  076F               	addwf	_NREG,w
 14754  0BA1  00B2               	movwf	??_cmd_trc
 14755  0BA2  01B3               	clrf	??_cmd_trc+1
 14756  0BA3  0DB3               	rlf	??_cmd_trc+1,f
 14757  0BA4  0833               	movf	??_cmd_trc+1,w
 14758  0BA5  00B5               	movwf	??_cmd_trc+3
 14759  0BA6  0866               	movf	_iread,w
 14760  0BA7  0232               	subwf	??_cmd_trc,w
 14761  0BA8  00B4               	movwf	??_cmd_trc+2
 14762  0BA9  1C03               	skipc
 14763  0BAA  03B5               	decf	??_cmd_trc+3,f
 14764  0BAB  0834               	movf	??_cmd_trc+2,w
 14765  0BAC  3E01               	addlw	1
 14766  0BAD  00C5               	movwf	cmd_trc@aux
 14767  0BAE  3000               	movlw	0
 14768  0BAF  3D35               	addwfc	??_cmd_trc+3,w
 14769  0BB0  00C6               	movwf	cmd_trc@aux+1
 14770  0BB1                     l6092:
 14771                           
 14772                           ;main.c: 985: };main.c: 986: if((n > nr) || (n > aux)){
 14773  0BB1  0848               	movf	cmd_trc@n+1,w
 14774  0BB2  3A80               	xorlw	128
 14775  0BB3  3C80               	sublw	128
 14776  0BB4  1D03               	skipz
 14777  0BB5  2BB9               	goto	u6065
 14778  0BB6  0847               	movf	cmd_trc@n,w
 14779  0BB7  0021               	movlb	1	; select bank1
 14780  0BB8  0254               	subwf	_nr^(0+128),w
 14781  0BB9                     u6065:
 14782  0BB9  1C03               	skipc
 14783  0BBA  2BBC               	goto	u6061
 14784  0BBB  2BBD               	goto	u6060
 14785  0BBC                     u6061:
 14786  0BBC  2BCC               	goto	l6096
 14787  0BBD                     u6060:
 14788  0BBD                     l6094:
 14789  0BBD  0020               	movlb	0	; select bank0
 14790  0BBE  0846               	movf	cmd_trc@aux+1,w
 14791  0BBF  3A80               	xorlw	128
 14792  0BC0  00B2               	movwf	??_cmd_trc
 14793  0BC1  0848               	movf	cmd_trc@n+1,w
 14794  0BC2  3A80               	xorlw	128
 14795  0BC3  0232               	subwf	??_cmd_trc,w
 14796  0BC4  1D03               	skipz
 14797  0BC5  2BC8               	goto	u6075
 14798  0BC6  0847               	movf	cmd_trc@n,w
 14799  0BC7  0245               	subwf	cmd_trc@aux,w
 14800  0BC8                     u6075:
 14801  0BC8  1803               	skipnc
 14802  0BC9  2BCB               	goto	u6071
 14803  0BCA  2BCC               	goto	u6070
 14804  0BCB                     u6071:
 14805  0BCB  2BD1               	goto	l6100
 14806  0BCC                     u6070:
 14807  0BCC                     l6096:
 14808                           
 14809                           ;main.c: 987: sendERRORMessage((uint8_t)0XCB);
 14810  0BCC  30CB               	movlw	203
 14811  0BCD  3191  21B3  318B   	fcall	_sendERRORMessage
 14812  0BD0  2C74               	goto	l1568
 14813  0BD1                     l6100:
 14814                           
 14815                           ;main.c: 989: };main.c: 994: uint8_t buffInit[3];;main.c: 995: buffInit[0] = (uint8_t)0x
      +                          FD;
 14816  0BD1  30FD               	movlw	253
 14817  0BD2  0020               	movlb	0	; select bank0
 14818  0BD3  00B2               	movwf	??_cmd_trc
 14819  0BD4  0832               	movf	??_cmd_trc,w
 14820  0BD5  00BD               	movwf	cmd_trc@buffInit
 14821                           
 14822                           ;main.c: 996: buffInit[1] = (uint8_t)0XCB;
 14823  0BD6  30CB               	movlw	203
 14824  0BD7  00B2               	movwf	??_cmd_trc
 14825  0BD8  0832               	movf	??_cmd_trc,w
 14826  0BD9  00BE               	movwf	cmd_trc@buffInit+1
 14827                           
 14828                           ;main.c: 997: buffInit[2] = (uint8_t)n;
 14829  0BDA  0847               	movf	cmd_trc@n,w
 14830  0BDB  00B2               	movwf	??_cmd_trc
 14831  0BDC  0832               	movf	??_cmd_trc,w
 14832  0BDD  00BF               	movwf	cmd_trc@buffInit+2
 14833  0BDE                     l6102:
 14834                           
 14835                           ;main.c: 998: sendMessage(3,buffInit);
 14836  0BDE  3003               	movlw	3
 14837  0BDF  00A3               	movwf	sendMessage@num
 14838  0BE0  3000               	movlw	0
 14839  0BE1  00A4               	movwf	sendMessage@num+1
 14840  0BE2  303D               	movlw	(low (cmd_trc@buffInit| 0))& (0+255)
 14841  0BE3  00B2               	movwf	??_cmd_trc
 14842  0BE4  0832               	movf	??_cmd_trc,w
 14843  0BE5  00A5               	movwf	sendMessage@buffer
 14844  0BE6  3192  22CF  318B   	fcall	_sendMessage
 14845  0BE9                     l6104:
 14846  0BE9                     l6106:
 14847                           
 14848                           ;main.c: 1003: for(i = 0; i < n; i++){
 14849  0BE9  0020               	movlb	0	; select bank0
 14850  0BEA  01C0               	clrf	cmd_trc@i
 14851  0BEB  01C1               	clrf	cmd_trc@i+1
 14852  0BEC  2C51               	goto	l6132
 14853  0BED                     l6108:
 14854                           
 14855                           ;main.c: 1004: for(j = 0; j < 5; j++){
 14856  0BED  0020               	movlb	0	; select bank0
 14857  0BEE  01C9               	clrf	cmd_trc@j
 14858  0BEF                     l6114:
 14859                           
 14860                           ;main.c: 1005: address = (iread * 0x5) + 0x7014 + j;
 14861  0BEF  0849               	movf	cmd_trc@j,w
 14862  0BF0  00B2               	movwf	??_cmd_trc
 14863  0BF1  01B3               	clrf	??_cmd_trc+1
 14864  0BF2  0866               	movf	_iread,w
 14865  0BF3  00B4               	movwf	??_cmd_trc+2
 14866  0BF4  01B5               	clrf	??_cmd_trc+3
 14867  0BF5  0834               	movf	??_cmd_trc+2,w
 14868  0BF6  00A0               	movwf	___wmul@multiplier
 14869  0BF7  0835               	movf	??_cmd_trc+3,w
 14870  0BF8  00A1               	movwf	___wmul@multiplier+1
 14871  0BF9  3005               	movlw	5
 14872  0BFA  00A2               	movwf	___wmul@multiplicand
 14873  0BFB  3000               	movlw	0
 14874  0BFC  00A3               	movwf	___wmul@multiplicand+1
 14875  0BFD  3192  226C  318B   	fcall	___wmul
 14876  0C00  0020               	movlb	0	; select bank0
 14877  0C01  0832               	movf	??_cmd_trc,w
 14878  0C02  0720               	addwf	?___wmul,w
 14879  0C03  00B6               	movwf	??_cmd_trc+4
 14880  0C04  0833               	movf	??_cmd_trc+1,w
 14881  0C05  3D21               	addwfc	?___wmul+1,w
 14882  0C06  00B7               	movwf	??_cmd_trc+5
 14883  0C07  0836               	movf	??_cmd_trc+4,w
 14884  0C08  3E14               	addlw	20
 14885  0C09  00C2               	movwf	cmd_trc@address
 14886  0C0A  3070               	movlw	112
 14887  0C0B  3D37               	addwfc	??_cmd_trc+5,w
 14888  0C0C  00C3               	movwf	cmd_trc@address+1
 14889  0C0D                     l6116:
 14890                           
 14891                           ;main.c: 1006: buffData[j] = DATAEE_ReadByte(address);
 14892  0C0D  0843               	movf	cmd_trc@address+1,w
 14893  0C0E  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 14894  0C0F  0842               	movf	cmd_trc@address,w
 14895  0C10  00A6               	movwf	DATAEE_ReadByte@bAdd
 14896  0C11  3190  2076  318B   	fcall	_DATAEE_ReadByte
 14897  0C14  0020               	movlb	0	; select bank0
 14898  0C15  00B2               	movwf	??_cmd_trc
 14899  0C16  0849               	movf	cmd_trc@j,w
 14900  0C17  3E38               	addlw	(low (cmd_trc@buffData| 0))& (0+255)
 14901  0C18  0086               	movwf	6
 14902  0C19  0187               	clrf	7
 14903  0C1A  0832               	movf	??_cmd_trc,w
 14904  0C1B  0081               	movwf	1
 14905  0C1C                     l6118:
 14906  0C1C  3001               	movlw	1
 14907  0C1D  00B2               	movwf	??_cmd_trc
 14908  0C1E  0832               	movf	??_cmd_trc,w
 14909  0C1F  07C9               	addwf	cmd_trc@j,f
 14910  0C20                     l6120:
 14911  0C20  3005               	movlw	5
 14912  0C21  0249               	subwf	cmd_trc@j,w
 14913  0C22  1C03               	skipc
 14914  0C23  2C25               	goto	u6081
 14915  0C24  2C26               	goto	u6080
 14916  0C25                     u6081:
 14917  0C25  2BEF               	goto	l6114
 14918  0C26                     u6080:
 14919  0C26                     l6122:
 14920                           
 14921                           ;main.c: 1007: };main.c: 1008: sendMessage(5,buffData);
 14922  0C26  3005               	movlw	5
 14923  0C27  00A3               	movwf	sendMessage@num
 14924  0C28  3000               	movlw	0
 14925  0C29  00A4               	movwf	sendMessage@num+1
 14926  0C2A  3038               	movlw	(low (cmd_trc@buffData| 0))& (0+255)
 14927  0C2B  00B2               	movwf	??_cmd_trc
 14928  0C2C  0832               	movf	??_cmd_trc,w
 14929  0C2D  00A5               	movwf	sendMessage@buffer
 14930  0C2E  3192  22CF  318B   	fcall	_sendMessage
 14931  0C31                     l6124:
 14932                           
 14933                           ;main.c: 1009: iread++;
 14934  0C31  3001               	movlw	1
 14935  0C32  0020               	movlb	0	; select bank0
 14936  0C33  00B2               	movwf	??_cmd_trc
 14937  0C34  0832               	movf	??_cmd_trc,w
 14938  0C35  07E6               	addwf	_iread,f
 14939  0C36                     l6126:
 14940                           
 14941                           ;main.c: 1010: if(iread>NREG-1){
 14942  0C36  086F               	movf	_NREG,w
 14943  0C37  3EFF               	addlw	255
 14944  0C38  00B2               	movwf	??_cmd_trc
 14945  0C39  30FF               	movlw	255
 14946  0C3A  1803               	skipnc
 14947  0C3B  3000               	movlw	0
 14948  0C3C  00B3               	movwf	??_cmd_trc+1
 14949  0C3D  0833               	movf	??_cmd_trc+1,w
 14950  0C3E  3A80               	xorlw	128
 14951  0C3F  00B4               	movwf	??_cmd_trc+2
 14952  0C40  3080               	movlw	128
 14953  0C41  0234               	subwf	??_cmd_trc+2,w
 14954  0C42  1D03               	skipz
 14955  0C43  2C46               	goto	u6095
 14956  0C44  0866               	movf	_iread,w
 14957  0C45  0232               	subwf	??_cmd_trc,w
 14958  0C46                     u6095:
 14959  0C46  1803               	skipnc
 14960  0C47  2C49               	goto	u6091
 14961  0C48  2C4A               	goto	u6090
 14962  0C49                     u6091:
 14963  0C49  2C4C               	goto	l6130
 14964  0C4A                     u6090:
 14965  0C4A                     l6128:
 14966                           
 14967                           ;main.c: 1011: iread=0;
 14968  0C4A  0020               	movlb	0	; select bank0
 14969  0C4B  01E6               	clrf	_iread
 14970  0C4C                     l6130:
 14971  0C4C  3001               	movlw	1
 14972  0C4D  0020               	movlb	0	; select bank0
 14973  0C4E  07C0               	addwf	cmd_trc@i,f
 14974  0C4F  3000               	movlw	0
 14975  0C50  3DC1               	addwfc	cmd_trc@i+1,f
 14976  0C51                     l6132:
 14977  0C51  0841               	movf	cmd_trc@i+1,w
 14978  0C52  3A80               	xorlw	128
 14979  0C53  00B2               	movwf	??_cmd_trc
 14980  0C54  0848               	movf	cmd_trc@n+1,w
 14981  0C55  3A80               	xorlw	128
 14982  0C56  0232               	subwf	??_cmd_trc,w
 14983  0C57  1D03               	skipz
 14984  0C58  2C5B               	goto	u6105
 14985  0C59  0847               	movf	cmd_trc@n,w
 14986  0C5A  0240               	subwf	cmd_trc@i,w
 14987  0C5B                     u6105:
 14988  0C5B  1C03               	skipc
 14989  0C5C  2C5E               	goto	u6101
 14990  0C5D  2C5F               	goto	u6100
 14991  0C5E                     u6101:
 14992  0C5E  2BED               	goto	l6108
 14993  0C5F                     u6100:
 14994  0C5F                     l6134:
 14995                           
 14996                           ;main.c: 1012: };main.c: 1013: };main.c: 1014: uint8_t buffEOM[1];;main.c: 1015: buffEOM
      +                          [0] = (uint8_t)0xFE;
 14997  0C5F  30FE               	movlw	254
 14998  0C60  0020               	movlb	0	; select bank0
 14999  0C61  00B2               	movwf	??_cmd_trc
 15000  0C62  0832               	movf	??_cmd_trc,w
 15001  0C63  00C4               	movwf	cmd_trc@buffEOM
 15002  0C64                     l6136:
 15003                           
 15004                           ;main.c: 1016: sendMessage(1,buffEOM);
 15005  0C64  3001               	movlw	1
 15006  0C65  00A3               	movwf	sendMessage@num
 15007  0C66  3000               	movlw	0
 15008  0C67  00A4               	movwf	sendMessage@num+1
 15009  0C68  3044               	movlw	(low (cmd_trc@buffEOM| 0))& (0+255)
 15010  0C69  00B2               	movwf	??_cmd_trc
 15011  0C6A  0832               	movf	??_cmd_trc,w
 15012  0C6B  00A5               	movwf	sendMessage@buffer
 15013  0C6C  3192  22CF  318B   	fcall	_sendMessage
 15014                           
 15015                           ;main.c: 1017: } else{
 15016  0C6F  2C74               	goto	l1568
 15017  0C70                     l6138:
 15018                           
 15019                           ;main.c: 1018: sendERRORMessage((uint8_t)0XCB);
 15020  0C70  30CB               	movlw	203
 15021  0C71  3191  21B3  318B   	fcall	_sendERRORMessage
 15022  0C74                     l1568:
 15023  0C74  0008               	return
 15024  0C75                     __end_of_cmd_trc:
 15025                           
 15026                           	psect	text24
 15027  13AB                     __ptext24:	
 15028 ;; *************** function _cmd_ir *****************
 15029 ;; Defined at:
 15030 ;;		line 965 in file "main.c"
 15031 ;; Parameters:    Size  Location     Type
 15032 ;;  num             2   15[BANK0 ] int 
 15033 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15034 ;;		 -> main@buff(20), 
 15035 ;; Auto vars:     Size  Location     Type
 15036 ;;  buff            7   19[BANK0 ] unsigned char [7]
 15037 ;; Return value:  Size  Location     Type
 15038 ;;                  1    wreg      void 
 15039 ;; Registers used:
 15040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15041 ;; Tracked objects:
 15042 ;;		On entry : 0/0
 15043 ;;		On exit  : 0/0
 15044 ;;		Unchanged: 0/0
 15045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15046 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15047 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15049 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;Total ram usage:       11 bytes
 15051 ;; Hardware stack levels used:    1
 15052 ;; Hardware stack levels required when called:    8
 15053 ;; This function calls:
 15054 ;;		_sendMessage
 15055 ;; This function is called by:
 15056 ;;		_main
 15057 ;; This function uses a non-reentrant model
 15058 ;;
 15059                           
 15060                           
 15061                           ;psect for function _cmd_ir
 15062  13AB                     _cmd_ir:
 15063  13AB                     l6078:	
 15064                           ;incstack = 0
 15065                           ; Regs used in _cmd_ir: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15066                           
 15067                           
 15068                           ;main.c: 966: uint8_t buff[7];;main.c: 967: buff[0] = (uint8_t)0xFD;
 15069  13AB  30FD               	movlw	253
 15070  13AC  0020               	movlb	0	; select bank0
 15071  13AD  00B2               	movwf	??_cmd_ir
 15072  13AE  0832               	movf	??_cmd_ir,w
 15073  13AF  00B3               	movwf	cmd_ir@buff
 15074                           
 15075                           ;main.c: 968: buff[1] = (uint8_t)0XCA;
 15076  13B0  30CA               	movlw	202
 15077  13B1  00B2               	movwf	??_cmd_ir
 15078  13B2  0832               	movf	??_cmd_ir,w
 15079  13B3  00B4               	movwf	cmd_ir@buff+1
 15080                           
 15081                           ;main.c: 969: buff[2] = NREG;
 15082  13B4  086F               	movf	_NREG,w
 15083  13B5  00B2               	movwf	??_cmd_ir
 15084  13B6  0832               	movf	??_cmd_ir,w
 15085  13B7  00B5               	movwf	cmd_ir@buff+2
 15086                           
 15087                           ;main.c: 970: buff[3] = nr;
 15088  13B8  0021               	movlb	1	; select bank1
 15089  13B9  0854               	movf	_nr^(0+128),w
 15090  13BA  0020               	movlb	0	; select bank0
 15091  13BB  00B2               	movwf	??_cmd_ir
 15092  13BC  0832               	movf	??_cmd_ir,w
 15093  13BD  00B6               	movwf	cmd_ir@buff+3
 15094                           
 15095                           ;main.c: 971: buff[4] = iread;
 15096  13BE  0866               	movf	_iread,w
 15097  13BF  00B2               	movwf	??_cmd_ir
 15098  13C0  0832               	movf	??_cmd_ir,w
 15099  13C1  00B7               	movwf	cmd_ir@buff+4
 15100                           
 15101                           ;main.c: 972: buff[5] = iwrite;
 15102  13C2  087D               	movf	_iwrite,w
 15103  13C3  00B2               	movwf	??_cmd_ir
 15104  13C4  0832               	movf	??_cmd_ir,w
 15105  13C5  00B8               	movwf	cmd_ir@buff+5
 15106                           
 15107                           ;main.c: 973: buff[6] = (uint8_t)0xFE;
 15108  13C6  30FE               	movlw	254
 15109  13C7  00B2               	movwf	??_cmd_ir
 15110  13C8  0832               	movf	??_cmd_ir,w
 15111  13C9  00B9               	movwf	cmd_ir@buff+6
 15112  13CA                     l6080:
 15113                           
 15114                           ;main.c: 975: sendMessage(7,buff);
 15115  13CA  3007               	movlw	7
 15116  13CB  00A3               	movwf	sendMessage@num
 15117  13CC  3000               	movlw	0
 15118  13CD  00A4               	movwf	sendMessage@num+1
 15119  13CE  3033               	movlw	(low (cmd_ir@buff| 0))& (0+255)
 15120  13CF  00B2               	movwf	??_cmd_ir
 15121  13D0  0832               	movf	??_cmd_ir,w
 15122  13D1  00A5               	movwf	sendMessage@buffer
 15123  13D2  3192  22CF  3193   	fcall	_sendMessage
 15124  13D5                     l1560:
 15125  13D5  0008               	return
 15126  13D6                     __end_of_cmd_ir:
 15127                           
 15128                           	psect	text25
 15129  1505                     __ptext25:	
 15130 ;; *************** function _cmd_aa *****************
 15131 ;; Defined at:
 15132 ;;		line 953 in file "main.c"
 15133 ;; Parameters:    Size  Location     Type
 15134 ;;  num             2   15[BANK0 ] int 
 15135 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15136 ;;		 -> main@buff(20), 
 15137 ;; Auto vars:     Size  Location     Type
 15138 ;;		None
 15139 ;; Return value:  Size  Location     Type
 15140 ;;                  1    wreg      void 
 15141 ;; Registers used:
 15142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15143 ;; Tracked objects:
 15144 ;;		On entry : 0/0
 15145 ;;		On exit  : 0/0
 15146 ;;		Unchanged: 0/0
 15147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15148 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15150 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15151 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15152 ;;Total ram usage:        4 bytes
 15153 ;; Hardware stack levels used:    1
 15154 ;; Hardware stack levels required when called:    9
 15155 ;; This function calls:
 15156 ;;		_sendERRORMessage
 15157 ;;		_sendOKMessage
 15158 ;; This function is called by:
 15159 ;;		_main
 15160 ;; This function uses a non-reentrant model
 15161 ;;
 15162                           
 15163                           
 15164                           ;psect for function _cmd_aa
 15165  1505                     _cmd_aa:
 15166  1505                     l6060:	
 15167                           ;incstack = 0
 15168                           ; Regs used in _cmd_aa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15169                           
 15170                           
 15171                           ;main.c: 954: if(buffer[2] == 0 && num == 4){
 15172  1505  0020               	movlb	0	; select bank0
 15173  1506  0831               	movf	cmd_aa@buffer,w
 15174  1507  3E02               	addlw	2
 15175  1508  0086               	movwf	6
 15176  1509  0187               	clrf	7
 15177  150A  0801               	movf	1,w
 15178  150B  1D03               	btfss	3,2
 15179  150C  2D0E               	goto	u6001
 15180  150D  2D0F               	goto	u6000
 15181  150E                     u6001:
 15182  150E  2D1F               	goto	l6068
 15183  150F                     u6000:
 15184  150F                     l6062:
 15185  150F  3004               	movlw	4
 15186  1510  062F               	xorwf	cmd_aa@num,w
 15187  1511  0430               	iorwf	cmd_aa@num+1,w
 15188  1512  1D03               	btfss	3,2
 15189  1513  2D15               	goto	u6011
 15190  1514  2D16               	goto	u6010
 15191  1515                     u6011:
 15192  1515  2D1F               	goto	l6068
 15193  1516                     u6010:
 15194  1516                     l6064:
 15195                           
 15196                           ;main.c: 955: ALAF = 'a';
 15197  1516  3061               	movlw	97
 15198  1517  00B2               	movwf	??_cmd_aa
 15199  1518  0832               	movf	??_cmd_aa,w
 15200  1519  00EA               	movwf	_ALAF
 15201  151A                     l6066:
 15202                           
 15203                           ;main.c: 956: sendOKMessage((uint8_t)0XC9);
 15204  151A  30C9               	movlw	201
 15205  151B  3191  2144  3195   	fcall	_sendOKMessage
 15206                           
 15207                           ;main.c: 957: } else if(buffer[2] == 1 && num == 4){
 15208  151E  2D3C               	goto	l1557
 15209  151F                     l6068:
 15210  151F  0831               	movf	cmd_aa@buffer,w
 15211  1520  3E02               	addlw	2
 15212  1521  0086               	movwf	6
 15213  1522  0187               	clrf	7
 15214  1523  0301               	decf	1,w
 15215  1524  1D03               	btfss	3,2
 15216  1525  2D27               	goto	u6021
 15217  1526  2D28               	goto	u6020
 15218  1527                     u6021:
 15219  1527  2D38               	goto	l6076
 15220  1528                     u6020:
 15221  1528                     l6070:
 15222  1528  3004               	movlw	4
 15223  1529  062F               	xorwf	cmd_aa@num,w
 15224  152A  0430               	iorwf	cmd_aa@num+1,w
 15225  152B  1D03               	btfss	3,2
 15226  152C  2D2E               	goto	u6031
 15227  152D  2D2F               	goto	u6030
 15228  152E                     u6031:
 15229  152E  2D38               	goto	l6076
 15230  152F                     u6030:
 15231  152F                     l6072:
 15232                           
 15233                           ;main.c: 958: ALAF = 'A';
 15234  152F  3041               	movlw	65
 15235  1530  00B2               	movwf	??_cmd_aa
 15236  1531  0832               	movf	??_cmd_aa,w
 15237  1532  00EA               	movwf	_ALAF
 15238  1533                     l6074:
 15239                           
 15240                           ;main.c: 959: sendOKMessage((uint8_t)0XC9);
 15241  1533  30C9               	movlw	201
 15242  1534  3191  2144  3195   	fcall	_sendOKMessage
 15243                           
 15244                           ;main.c: 960: } else {
 15245  1537  2D3C               	goto	l1557
 15246  1538                     l6076:
 15247                           
 15248                           ;main.c: 961: sendERRORMessage((uint8_t)0XC9);
 15249  1538  30C9               	movlw	201
 15250  1539  3191  21B3  3195   	fcall	_sendERRORMessage
 15251  153C                     l1557:
 15252  153C  0008               	return
 15253  153D                     __end_of_cmd_aa:
 15254                           
 15255                           	psect	text26
 15256  1466                     __ptext26:	
 15257 ;; *************** function _cmd_dtl *****************
 15258 ;; Defined at:
 15259 ;;		line 941 in file "main.c"
 15260 ;; Parameters:    Size  Location     Type
 15261 ;;  num             2   15[BANK0 ] int 
 15262 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15263 ;;		 -> main@buff(20), 
 15264 ;; Auto vars:     Size  Location     Type
 15265 ;;  lumAux          1   19[BANK0 ] unsigned char 
 15266 ;;  tempAux         1   18[BANK0 ] unsigned char 
 15267 ;; Return value:  Size  Location     Type
 15268 ;;                  1    wreg      void 
 15269 ;; Registers used:
 15270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15271 ;; Tracked objects:
 15272 ;;		On entry : 0/0
 15273 ;;		On exit  : 0/0
 15274 ;;		Unchanged: 0/0
 15275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15276 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15277 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15279 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15280 ;;Total ram usage:        5 bytes
 15281 ;; Hardware stack levels used:    1
 15282 ;; Hardware stack levels required when called:    9
 15283 ;; This function calls:
 15284 ;;		_sendERRORMessage
 15285 ;;		_sendOKMessage
 15286 ;; This function is called by:
 15287 ;;		_main
 15288 ;; This function uses a non-reentrant model
 15289 ;;
 15290                           
 15291                           
 15292                           ;psect for function _cmd_dtl
 15293  1466                     _cmd_dtl:
 15294  1466                     l6046:	
 15295                           ;incstack = 0
 15296                           ; Regs used in _cmd_dtl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15297                           
 15298                           
 15299                           ;main.c: 942: uint8_t tempAux = buffer[2];
 15300  1466  0020               	movlb	0	; select bank0
 15301  1467  0831               	movf	cmd_dtl@buffer,w
 15302  1468  0086               	movwf	6
 15303  1469  0187               	clrf	7
 15304  146A  3F42               	moviw [2]fsr1
 15305  146B  00B2               	movwf	cmd_dtl@tempAux
 15306                           
 15307                           ;main.c: 943: uint8_t lumAux = buffer[3];
 15308  146C  0831               	movf	cmd_dtl@buffer,w
 15309  146D  0086               	movwf	6
 15310  146E  0187               	clrf	7
 15311  146F  3F43               	moviw [3]fsr1
 15312  1470  00B3               	movwf	cmd_dtl@lumAux
 15313  1471                     l6048:
 15314                           
 15315                           ;main.c: 944: if((tempAux >= 0 && tempAux < 50) && (lumAux >= 0 && lumAux < 8) && num ==
      +                           5){
 15316  1471  3032               	movlw	50
 15317  1472  0232               	subwf	cmd_dtl@tempAux,w
 15318  1473  1803               	skipnc
 15319  1474  2C76               	goto	u5971
 15320  1475  2C77               	goto	u5970
 15321  1476                     u5971:
 15322  1476  2C96               	goto	l6058
 15323  1477                     u5970:
 15324  1477                     l6050:
 15325  1477  3008               	movlw	8
 15326  1478  0233               	subwf	cmd_dtl@lumAux,w
 15327  1479  1803               	skipnc
 15328  147A  2C7C               	goto	u5981
 15329  147B  2C7D               	goto	u5980
 15330  147C                     u5981:
 15331  147C  2C96               	goto	l6058
 15332  147D                     u5980:
 15333  147D                     l6052:
 15334  147D  3005               	movlw	5
 15335  147E  062F               	xorwf	cmd_dtl@num,w
 15336  147F  0430               	iorwf	cmd_dtl@num+1,w
 15337  1480  1D03               	btfss	3,2
 15338  1481  2C83               	goto	u5991
 15339  1482  2C84               	goto	u5990
 15340  1483                     u5991:
 15341  1483  2C96               	goto	l6058
 15342  1484                     u5990:
 15343  1484                     l6054:
 15344                           
 15345                           ;main.c: 945: tempAlarm.alarmTemp = buffer[2];
 15346  1484  0831               	movf	cmd_dtl@buffer,w
 15347  1485  0086               	movwf	6
 15348  1486  0187               	clrf	7
 15349  1487  3F42               	moviw [2]fsr1
 15350  1488  0021               	movlb	1	; select bank1
 15351  1489  00CA               	movwf	_tempAlarm^(0+128)
 15352                           
 15353                           ;main.c: 946: lumAlarm.alarmLum = buffer[3];
 15354  148A  0020               	movlb	0	; select bank0
 15355  148B  0831               	movf	cmd_dtl@buffer,w
 15356  148C  0086               	movwf	6
 15357  148D  0187               	clrf	7
 15358  148E  3F43               	moviw [3]fsr1
 15359  148F  0021               	movlb	1	; select bank1
 15360  1490  00C7               	movwf	_lumAlarm^(0+128)
 15361  1491                     l6056:
 15362                           
 15363                           ;main.c: 947: sendOKMessage((uint8_t)0XC8);
 15364  1491  30C8               	movlw	200
 15365  1492  3191  2144  3194   	fcall	_sendOKMessage
 15366                           
 15367                           ;main.c: 948: } else {
 15368  1495  2C9A               	goto	l1550
 15369  1496                     l6058:
 15370                           
 15371                           ;main.c: 949: sendERRORMessage((uint8_t)0XC8);
 15372  1496  30C8               	movlw	200
 15373  1497  3191  21B3  3194   	fcall	_sendERRORMessage
 15374  149A                     l1550:
 15375  149A  0008               	return
 15376  149B                     __end_of_cmd_dtl:
 15377                           
 15378                           	psect	text27
 15379  167F                     __ptext27:	
 15380 ;; *************** function _cmd_dac *****************
 15381 ;; Defined at:
 15382 ;;		line 927 in file "main.c"
 15383 ;; Parameters:    Size  Location     Type
 15384 ;;  num             2   15[BANK0 ] int 
 15385 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15386 ;;		 -> main@buff(20), 
 15387 ;; Auto vars:     Size  Location     Type
 15388 ;;  s               1   21[BANK0 ] unsigned char 
 15389 ;;  m               1   20[BANK0 ] unsigned char 
 15390 ;;  h               1   19[BANK0 ] unsigned char 
 15391 ;; Return value:  Size  Location     Type
 15392 ;;                  1    wreg      void 
 15393 ;; Registers used:
 15394 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15395 ;; Tracked objects:
 15396 ;;		On entry : 0/0
 15397 ;;		On exit  : 0/0
 15398 ;;		Unchanged: 0/0
 15399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15400 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15401 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15402 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15403 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15404 ;;Total ram usage:        7 bytes
 15405 ;; Hardware stack levels used:    1
 15406 ;; Hardware stack levels required when called:    9
 15407 ;; This function calls:
 15408 ;;		_sendERRORMessage
 15409 ;;		_sendOKMessage
 15410 ;; This function is called by:
 15411 ;;		_main
 15412 ;; This function uses a non-reentrant model
 15413 ;;
 15414                           
 15415                           
 15416                           ;psect for function _cmd_dac
 15417  167F                     _cmd_dac:
 15418  167F                     l6030:	
 15419                           ;incstack = 0
 15420                           ; Regs used in _cmd_dac: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15421                           
 15422                           
 15423                           ;main.c: 928: uint8_t h = buffer[2];
 15424  167F  0020               	movlb	0	; select bank0
 15425  1680  0831               	movf	cmd_dac@buffer,w
 15426  1681  0086               	movwf	6
 15427  1682  0187               	clrf	7
 15428  1683  3F42               	moviw [2]fsr1
 15429  1684  00B3               	movwf	cmd_dac@h
 15430                           
 15431                           ;main.c: 929: uint8_t m = buffer[3];
 15432  1685  0831               	movf	cmd_dac@buffer,w
 15433  1686  0086               	movwf	6
 15434  1687  0187               	clrf	7
 15435  1688  3F43               	moviw [3]fsr1
 15436  1689  00B4               	movwf	cmd_dac@m
 15437                           
 15438                           ;main.c: 930: uint8_t s = buffer[4];
 15439  168A  0831               	movf	cmd_dac@buffer,w
 15440  168B  0086               	movwf	6
 15441  168C  0187               	clrf	7
 15442  168D  3F44               	moviw [4]fsr1
 15443  168E  00B5               	movwf	cmd_dac@s
 15444  168F                     l6032:
 15445                           
 15446                           ;main.c: 931: if((h >= 0 && h < 24) && (m >= 0 && m < 60) && (s >= 0 && s < 60) && num =
      +                          = 6){
 15447  168F  3018               	movlw	24
 15448  1690  0233               	subwf	cmd_dac@h,w
 15449  1691  1803               	skipnc
 15450  1692  2E94               	goto	u5931
 15451  1693  2E95               	goto	u5930
 15452  1694                     u5931:
 15453  1694  2EBE               	goto	l6044
 15454  1695                     u5930:
 15455  1695                     l6034:
 15456  1695  303C               	movlw	60
 15457  1696  0234               	subwf	cmd_dac@m,w
 15458  1697  1803               	skipnc
 15459  1698  2E9A               	goto	u5941
 15460  1699  2E9B               	goto	u5940
 15461  169A                     u5941:
 15462  169A  2EBE               	goto	l6044
 15463  169B                     u5940:
 15464  169B                     l6036:
 15465  169B  303C               	movlw	60
 15466  169C  0235               	subwf	cmd_dac@s,w
 15467  169D  1803               	skipnc
 15468  169E  2EA0               	goto	u5951
 15469  169F  2EA1               	goto	u5950
 15470  16A0                     u5951:
 15471  16A0  2EBE               	goto	l6044
 15472  16A1                     u5950:
 15473  16A1                     l6038:
 15474  16A1  3006               	movlw	6
 15475  16A2  062F               	xorwf	cmd_dac@num,w
 15476  16A3  0430               	iorwf	cmd_dac@num+1,w
 15477  16A4  1D03               	btfss	3,2
 15478  16A5  2EA7               	goto	u5961
 15479  16A6  2EA8               	goto	u5960
 15480  16A7                     u5961:
 15481  16A7  2EBE               	goto	l6044
 15482  16A8                     u5960:
 15483  16A8                     l6040:
 15484                           
 15485                           ;main.c: 932: clkAlarm.alarmVal.h = h;
 15486  16A8  0833               	movf	cmd_dac@h,w
 15487  16A9  00B2               	movwf	??_cmd_dac
 15488  16AA  0832               	movf	??_cmd_dac,w
 15489  16AB  0021               	movlb	1	; select bank1
 15490  16AC  00C0               	movwf	_clkAlarm^(0+128)
 15491                           
 15492                           ;main.c: 933: clkAlarm.alarmVal.m = m;
 15493  16AD  0020               	movlb	0	; select bank0
 15494  16AE  0834               	movf	cmd_dac@m,w
 15495  16AF  00B2               	movwf	??_cmd_dac
 15496  16B0  0832               	movf	??_cmd_dac,w
 15497  16B1  0021               	movlb	1	; select bank1
 15498  16B2  00C1               	movwf	(_clkAlarm^(0+128)+1)
 15499                           
 15500                           ;main.c: 934: clkAlarm.alarmVal.s = s;
 15501  16B3  0020               	movlb	0	; select bank0
 15502  16B4  0835               	movf	cmd_dac@s,w
 15503  16B5  00B2               	movwf	??_cmd_dac
 15504  16B6  0832               	movf	??_cmd_dac,w
 15505  16B7  0021               	movlb	1	; select bank1
 15506  16B8  00C2               	movwf	(_clkAlarm^(0+128)+2)
 15507  16B9                     l6042:
 15508                           
 15509                           ;main.c: 935: sendOKMessage((uint8_t)0XC7);
 15510  16B9  30C7               	movlw	199
 15511  16BA  3191  2144  3196   	fcall	_sendOKMessage
 15512                           
 15513                           ;main.c: 936: } else {
 15514  16BD  2EC2               	goto	l1545
 15515  16BE                     l6044:
 15516                           
 15517                           ;main.c: 937: sendERRORMessage((uint8_t)0XC7);
 15518  16BE  30C7               	movlw	199
 15519  16BF  3191  21B3  3196   	fcall	_sendERRORMessage
 15520  16C2                     l1545:
 15521  16C2  0008               	return
 15522  16C3                     __end_of_cmd_dac:
 15523                           
 15524                           	psect	text28
 15525  15FA                     __ptext28:	
 15526 ;; *************** function _cmd_ra *****************
 15527 ;; Defined at:
 15528 ;;		line 912 in file "main.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;  num             2   15[BANK0 ] int 
 15531 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15532 ;;		 -> main@buff(20), 
 15533 ;; Auto vars:     Size  Location     Type
 15534 ;;  buff            9   19[BANK0 ] unsigned char [9]
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1    wreg      void 
 15537 ;; Registers used:
 15538 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15544 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15545 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15546 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15547 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15548 ;;Total ram usage:       13 bytes
 15549 ;; Hardware stack levels used:    1
 15550 ;; Hardware stack levels required when called:    8
 15551 ;; This function calls:
 15552 ;;		_sendMessage
 15553 ;; This function is called by:
 15554 ;;		_main
 15555 ;; This function uses a non-reentrant model
 15556 ;;
 15557                           
 15558                           
 15559                           ;psect for function _cmd_ra
 15560  15FA                     _cmd_ra:
 15561  15FA                     l6022:	
 15562                           ;incstack = 0
 15563                           ; Regs used in _cmd_ra: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15564                           
 15565                           
 15566                           ;main.c: 913: uint8_t buff[9];;main.c: 914: buff[0] = (uint8_t)0xFD;
 15567  15FA  30FD               	movlw	253
 15568  15FB  0020               	movlb	0	; select bank0
 15569  15FC  00B2               	movwf	??_cmd_ra
 15570  15FD  0832               	movf	??_cmd_ra,w
 15571  15FE  00B3               	movwf	cmd_ra@buff
 15572                           
 15573                           ;main.c: 915: buff[1] = (uint8_t)0XC6;
 15574  15FF  30C6               	movlw	198
 15575  1600  00B2               	movwf	??_cmd_ra
 15576  1601  0832               	movf	??_cmd_ra,w
 15577  1602  00B4               	movwf	cmd_ra@buff+1
 15578                           
 15579                           ;main.c: 916: buff[2] = clkAlarm.alarmVal.h;
 15580  1603  0021               	movlb	1	; select bank1
 15581  1604  0840               	movf	_clkAlarm^(0+128),w
 15582  1605  0020               	movlb	0	; select bank0
 15583  1606  00B2               	movwf	??_cmd_ra
 15584  1607  0832               	movf	??_cmd_ra,w
 15585  1608  00B5               	movwf	cmd_ra@buff+2
 15586                           
 15587                           ;main.c: 917: buff[3] = clkAlarm.alarmVal.m;
 15588  1609  0021               	movlb	1	; select bank1
 15589  160A  0841               	movf	(_clkAlarm^(0+128)+1),w
 15590  160B  0020               	movlb	0	; select bank0
 15591  160C  00B2               	movwf	??_cmd_ra
 15592  160D  0832               	movf	??_cmd_ra,w
 15593  160E  00B6               	movwf	cmd_ra@buff+3
 15594                           
 15595                           ;main.c: 918: buff[4] = clkAlarm.alarmVal.s;
 15596  160F  0021               	movlb	1	; select bank1
 15597  1610  0842               	movf	(_clkAlarm^(0+128)+2),w
 15598  1611  0020               	movlb	0	; select bank0
 15599  1612  00B2               	movwf	??_cmd_ra
 15600  1613  0832               	movf	??_cmd_ra,w
 15601  1614  00B7               	movwf	cmd_ra@buff+4
 15602                           
 15603                           ;main.c: 919: buff[5] = tempAlarm.alarmTemp;
 15604  1615  0021               	movlb	1	; select bank1
 15605  1616  084A               	movf	_tempAlarm^(0+128),w
 15606  1617  0020               	movlb	0	; select bank0
 15607  1618  00B2               	movwf	??_cmd_ra
 15608  1619  0832               	movf	??_cmd_ra,w
 15609  161A  00B8               	movwf	cmd_ra@buff+5
 15610                           
 15611                           ;main.c: 920: buff[6] = lumAlarm.alarmLum;
 15612  161B  0021               	movlb	1	; select bank1
 15613  161C  0847               	movf	_lumAlarm^(0+128),w
 15614  161D  0020               	movlb	0	; select bank0
 15615  161E  00B2               	movwf	??_cmd_ra
 15616  161F  0832               	movf	??_cmd_ra,w
 15617  1620  00B9               	movwf	cmd_ra@buff+6
 15618  1621                     l6024:
 15619                           
 15620                           ;main.c: 921: buff[7] = ALAF == 'A' ? 1 : 0;
 15621  1621  3041               	movlw	65
 15622  1622  066A               	xorwf	_ALAF,w
 15623  1623  1903               	btfsc	3,2
 15624  1624  2E26               	goto	u5911
 15625  1625  2E28               	goto	u5910
 15626  1626                     u5911:
 15627  1626  3001               	movlw	1
 15628  1627  2E29               	goto	u5920
 15629  1628                     u5910:
 15630  1628  3000               	movlw	0
 15631  1629                     u5920:
 15632  1629  00B2               	movwf	??_cmd_ra
 15633  162A  0832               	movf	??_cmd_ra,w
 15634  162B  00BA               	movwf	cmd_ra@buff+7
 15635  162C                     l6026:
 15636                           
 15637                           ;main.c: 922: buff[8] = (uint8_t)0xFE;
 15638  162C  30FE               	movlw	254
 15639  162D  00B2               	movwf	??_cmd_ra
 15640  162E  0832               	movf	??_cmd_ra,w
 15641  162F  00BB               	movwf	cmd_ra@buff+8
 15642  1630                     l6028:
 15643                           
 15644                           ;main.c: 924: sendMessage(9,buff);
 15645  1630  3009               	movlw	9
 15646  1631  00A3               	movwf	sendMessage@num
 15647  1632  3000               	movlw	0
 15648  1633  00A4               	movwf	sendMessage@num+1
 15649  1634  3033               	movlw	(low (cmd_ra@buff| 0))& (0+255)
 15650  1635  00B2               	movwf	??_cmd_ra
 15651  1636  0832               	movf	??_cmd_ra,w
 15652  1637  00A5               	movwf	sendMessage@buffer
 15653  1638  3192  22CF  3195   	fcall	_sendMessage
 15654  163B                     l1540:
 15655  163B  0008               	return
 15656  163C                     __end_of_cmd_ra:
 15657                           
 15658                           	psect	text29
 15659  115F                     __ptext29:	
 15660 ;; *************** function _cmd_mta *****************
 15661 ;; Defined at:
 15662 ;;		line 903 in file "main.c"
 15663 ;; Parameters:    Size  Location     Type
 15664 ;;  num             2   15[BANK0 ] int 
 15665 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15666 ;;		 -> main@buff(20), 
 15667 ;; Auto vars:     Size  Location     Type
 15668 ;;		None
 15669 ;; Return value:  Size  Location     Type
 15670 ;;                  1    wreg      void 
 15671 ;; Registers used:
 15672 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15673 ;; Tracked objects:
 15674 ;;		On entry : 0/0
 15675 ;;		On exit  : 0/0
 15676 ;;		Unchanged: 0/0
 15677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15678 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15682 ;;Total ram usage:        3 bytes
 15683 ;; Hardware stack levels used:    1
 15684 ;; Hardware stack levels required when called:    9
 15685 ;; This function calls:
 15686 ;;		_sendERRORMessage
 15687 ;;		_sendOKMessage
 15688 ;; This function is called by:
 15689 ;;		_main
 15690 ;; This function uses a non-reentrant model
 15691 ;;
 15692                           
 15693                           
 15694                           ;psect for function _cmd_mta
 15695  115F                     _cmd_mta:
 15696  115F                     l6014:	
 15697                           ;incstack = 0
 15698                           ; Regs used in _cmd_mta: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15699                           
 15700                           
 15701                           ;main.c: 904: if(buffer[2] >= 0x00 && buffer[2] < 0x3c){
 15702  115F  0020               	movlb	0	; select bank0
 15703  1160  0831               	movf	cmd_mta@buffer,w
 15704  1161  3E02               	addlw	2
 15705  1162  0086               	movwf	6
 15706  1163  0187               	clrf	7
 15707  1164  303C               	movlw	60
 15708  1165  0201               	subwf	1,w
 15709  1166  1803               	skipnc
 15710  1167  2969               	goto	u5901
 15711  1168  296A               	goto	u5900
 15712  1169                     u5901:
 15713  1169  2975               	goto	l6020
 15714  116A                     u5900:
 15715  116A                     l6016:
 15716                           
 15717                           ;main.c: 905: TALA = buffer[2];
 15718  116A  0831               	movf	cmd_mta@buffer,w
 15719  116B  0086               	movwf	6
 15720  116C  0187               	clrf	7
 15721  116D  3F42               	moviw [2]fsr1
 15722  116E  0021               	movlb	1	; select bank1
 15723  116F  00ED               	movwf	_TALA^(0+128)
 15724  1170                     l6018:
 15725                           
 15726                           ;main.c: 906: sendOKMessage((uint8_t)0XC5);
 15727  1170  30C5               	movlw	197
 15728  1171  3191  2144  3191   	fcall	_sendOKMessage
 15729                           
 15730                           ;main.c: 907: } else {
 15731  1174  2979               	goto	l1537
 15732  1175                     l6020:
 15733                           
 15734                           ;main.c: 908: sendERRORMessage((uint8_t)0XC5);
 15735  1175  30C5               	movlw	197
 15736  1176  3191  21B3  3191   	fcall	_sendERRORMessage
 15737  1179                     l1537:
 15738  1179  0008               	return
 15739  117A                     __end_of_cmd_mta:
 15740                           
 15741                           	psect	text30
 15742  0850                     __ptext30:	
 15743 ;; *************** function _cmd_mmp *****************
 15744 ;; Defined at:
 15745 ;;		line 883 in file "main.c"
 15746 ;; Parameters:    Size  Location     Type
 15747 ;;  num             2   15[BANK0 ] int 
 15748 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15749 ;;		 -> main@buff(20), 
 15750 ;; Auto vars:     Size  Location     Type
 15751 ;;  timerValue      2   28[BANK0 ] unsigned int 
 15752 ;; Return value:  Size  Location     Type
 15753 ;;                  1    wreg      void 
 15754 ;; Registers used:
 15755 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15756 ;; Tracked objects:
 15757 ;;		On entry : 0/0
 15758 ;;		On exit  : 0/0
 15759 ;;		Unchanged: 0/0
 15760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15761 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15762 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15763 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15764 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15765 ;;Total ram usage:       15 bytes
 15766 ;; Hardware stack levels used:    1
 15767 ;; Hardware stack levels required when called:    9
 15768 ;; This function calls:
 15769 ;;		_TMR5_StartTimer
 15770 ;;		_TMR5_StopTimer
 15771 ;;		___lmul
 15772 ;;		_sendERRORMessage
 15773 ;;		_sendOKMessage
 15774 ;;		_setTimer5ReloadVal
 15775 ;; This function is called by:
 15776 ;;		_main
 15777 ;; This function uses a non-reentrant model
 15778 ;;
 15779                           
 15780                           
 15781                           ;psect for function _cmd_mmp
 15782  0850                     _cmd_mmp:
 15783  0850                     l5996:	
 15784                           ;incstack = 0
 15785                           ; Regs used in _cmd_mmp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15786                           
 15787                           
 15788                           ;main.c: 885: if(buffer[2] == 0x0){
 15789  0850  0020               	movlb	0	; select bank0
 15790  0851  0831               	movf	cmd_mmp@buffer,w
 15791  0852  3E02               	addlw	2
 15792  0853  0086               	movwf	6
 15793  0854  0187               	clrf	7
 15794  0855  0801               	movf	1,w
 15795  0856  1D03               	btfss	3,2
 15796  0857  2859               	goto	u5861
 15797  0858  285A               	goto	u5860
 15798  0859                     u5861:
 15799  0859  285E               	goto	l6000
 15800  085A                     u5860:
 15801  085A                     l5998:
 15802                           
 15803                           ;main.c: 886: TMR5_StopTimer();
 15804  085A  319F  27A8  3188   	fcall	_TMR5_StopTimer
 15805                           
 15806                           ;main.c: 887: } else if(buffer[2] >= 0x01 && buffer[2] <= 0x10){
 15807  085D  28B7               	goto	l1529
 15808  085E                     l6000:
 15809  085E  0831               	movf	cmd_mmp@buffer,w
 15810  085F  3E02               	addlw	2
 15811  0860  0086               	movwf	6
 15812  0861  0187               	clrf	7
 15813  0862  0801               	movf	1,w
 15814  0863  1903               	btfsc	3,2
 15815  0864  2866               	goto	u5871
 15816  0865  2867               	goto	u5870
 15817  0866                     u5871:
 15818  0866  28B3               	goto	l6012
 15819  0867                     u5870:
 15820  0867                     l6002:
 15821  0867  0831               	movf	cmd_mmp@buffer,w
 15822  0868  3E02               	addlw	2
 15823  0869  0086               	movwf	6
 15824  086A  0187               	clrf	7
 15825  086B  3011               	movlw	17
 15826  086C  0201               	subwf	1,w
 15827  086D  1803               	skipnc
 15828  086E  2870               	goto	u5881
 15829  086F  2871               	goto	u5880
 15830  0870                     u5881:
 15831  0870  28B3               	goto	l6012
 15832  0871                     u5880:
 15833  0871                     l6004:
 15834                           
 15835                           ;main.c: 888: PMON = buffer[2];
 15836  0871  0831               	movf	cmd_mmp@buffer,w
 15837  0872  0086               	movwf	6
 15838  0873  0187               	clrf	7
 15839  0874  3F42               	moviw [2]fsr1
 15840  0875  0021               	movlb	1	; select bank1
 15841  0876  00EE               	movwf	_PMON^(0+128)
 15842  0877                     l6006:
 15843                           
 15844                           ;main.c: 894: uint16_t timerValue = (uint32_t)65536 - (uint32_t)((uint32_t)((uint32_t)PM
      +                          ON*(uint32_t)31000)/8);
 15845  0877  086E               	movf	_PMON^(0+128),w
 15846  0878  0020               	movlb	0	; select bank0
 15847  0879  00B2               	movwf	??_cmd_mmp
 15848  087A  01B3               	clrf	??_cmd_mmp+1
 15849  087B  01B4               	clrf	??_cmd_mmp+2
 15850  087C  01B5               	clrf	??_cmd_mmp+3
 15851  087D  0835               	movf	??_cmd_mmp+3,w
 15852  087E  00A3               	movwf	___lmul@multiplier+3
 15853  087F  0834               	movf	??_cmd_mmp+2,w
 15854  0880  00A2               	movwf	___lmul@multiplier+2
 15855  0881  0833               	movf	??_cmd_mmp+1,w
 15856  0882  00A1               	movwf	___lmul@multiplier+1
 15857  0883  0832               	movf	??_cmd_mmp,w
 15858  0884  00A0               	movwf	___lmul@multiplier
 15859  0885  3000               	movlw	0
 15860  0886  00A7               	movwf	___lmul@multiplicand+3
 15861  0887  3000               	movlw	0
 15862  0888  00A6               	movwf	___lmul@multiplicand+2
 15863  0889  3079               	movlw	121
 15864  088A  00A5               	movwf	___lmul@multiplicand+1
 15865  088B  3018               	movlw	24
 15866  088C  00A4               	movwf	___lmul@multiplicand
 15867  088D  3194  2432  3188   	fcall	___lmul
 15868  0890  0020               	movlb	0	; select bank0
 15869  0891  0820               	movf	?___lmul,w
 15870  0892  00B6               	movwf	??_cmd_mmp+4
 15871  0893  0821               	movf	?___lmul+1,w
 15872  0894  00B7               	movwf	??_cmd_mmp+5
 15873  0895  0822               	movf	?___lmul+2,w
 15874  0896  00B8               	movwf	??_cmd_mmp+6
 15875  0897  0823               	movf	?___lmul+3,w
 15876  0898  00B9               	movwf	??_cmd_mmp+7
 15877  0899  3003               	movlw	3
 15878  089A                     u5895:
 15879  089A  36B9               	lsrf	??_cmd_mmp+7,f
 15880  089B  0CB8               	rrf	??_cmd_mmp+6,f
 15881  089C  0CB7               	rrf	??_cmd_mmp+5,f
 15882  089D  0CB6               	rrf	??_cmd_mmp+4,f
 15883  089E                     u5890:
 15884  089E  0B89               	decfsz	9,f
 15885  089F  289A               	goto	u5895
 15886  08A0  01BA               	clrf	??_cmd_mmp+8
 15887  08A1  01BB               	clrf	??_cmd_mmp+9
 15888  08A2  0836               	movf	??_cmd_mmp+4,w
 15889  08A3  023A               	subwf	??_cmd_mmp+8,w
 15890  08A4  00BC               	movwf	cmd_mmp@timerValue
 15891  08A5  0837               	movf	??_cmd_mmp+5,w
 15892  08A6  3B3B               	subwfb	??_cmd_mmp+9,w
 15893  08A7  00BD               	movwf	cmd_mmp@timerValue+1
 15894  08A8                     l6008:
 15895                           
 15896                           ;main.c: 895: setTimer5ReloadVal(timerValue);
 15897  08A8  083D               	movf	cmd_mmp@timerValue+1,w
 15898  08A9  00A1               	movwf	setTimer5ReloadVal@val+1
 15899  08AA  083C               	movf	cmd_mmp@timerValue,w
 15900  08AB  00A0               	movwf	setTimer5ReloadVal@val
 15901  08AC  3190  2019  3188   	fcall	_setTimer5ReloadVal
 15902  08AF                     l6010:
 15903                           
 15904                           ;main.c: 896: TMR5_StartTimer();
 15905  08AF  319F  27A5  3188   	fcall	_TMR5_StartTimer
 15906                           
 15907                           ;main.c: 897: } else {
 15908  08B2  28B7               	goto	l1529
 15909  08B3                     l6012:
 15910                           
 15911                           ;main.c: 898: sendERRORMessage((uint8_t)0XC4);
 15912  08B3  30C4               	movlw	196
 15913  08B4  3191  21B3  3188   	fcall	_sendERRORMessage
 15914  08B7                     l1529:
 15915                           
 15916                           ;main.c: 899: };main.c: 900: sendOKMessage((uint8_t)0XC4);
 15917  08B7  30C4               	movlw	196
 15918  08B8  3191  2144  3188   	fcall	_sendOKMessage
 15919  08BB                     l1532:
 15920  08BB  0008               	return
 15921  08BC                     __end_of_cmd_mmp:
 15922                           
 15923                           	psect	text31
 15924  1360                     __ptext31:	
 15925 ;; *************** function _cmd_rp *****************
 15926 ;; Defined at:
 15927 ;;		line 871 in file "main.c"
 15928 ;; Parameters:    Size  Location     Type
 15929 ;;  num             2   15[BANK0 ] int 
 15930 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15931 ;;		 -> main@buff(20), 
 15932 ;; Auto vars:     Size  Location     Type
 15933 ;;  buff            5   19[BANK0 ] unsigned char [5]
 15934 ;; Return value:  Size  Location     Type
 15935 ;;                  1    wreg      void 
 15936 ;; Registers used:
 15937 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15938 ;; Tracked objects:
 15939 ;;		On entry : 0/0
 15940 ;;		On exit  : 0/0
 15941 ;;		Unchanged: 0/0
 15942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15943 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15944 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15945 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15946 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15947 ;;Total ram usage:        9 bytes
 15948 ;; Hardware stack levels used:    1
 15949 ;; Hardware stack levels required when called:    8
 15950 ;; This function calls:
 15951 ;;		_sendMessage
 15952 ;; This function is called by:
 15953 ;;		_main
 15954 ;; This function uses a non-reentrant model
 15955 ;;
 15956                           
 15957                           
 15958                           ;psect for function _cmd_rp
 15959  1360                     _cmd_rp:
 15960  1360                     l5992:	
 15961                           ;incstack = 0
 15962                           ; Regs used in _cmd_rp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15963                           
 15964                           
 15965                           ;main.c: 872: uint8_t buff[5];;main.c: 873: buff[0] = (uint8_t)0xFD;
 15966  1360  30FD               	movlw	253
 15967  1361  0020               	movlb	0	; select bank0
 15968  1362  00B2               	movwf	??_cmd_rp
 15969  1363  0832               	movf	??_cmd_rp,w
 15970  1364  00B3               	movwf	cmd_rp@buff
 15971                           
 15972                           ;main.c: 874: buff[1] = (uint8_t)0XC3;
 15973  1365  30C3               	movlw	195
 15974  1366  00B2               	movwf	??_cmd_rp
 15975  1367  0832               	movf	??_cmd_rp,w
 15976  1368  00B4               	movwf	cmd_rp@buff+1
 15977                           
 15978                           ;main.c: 875: buff[2] = PMON;
 15979  1369  0021               	movlb	1	; select bank1
 15980  136A  086E               	movf	_PMON^(0+128),w
 15981  136B  0020               	movlb	0	; select bank0
 15982  136C  00B2               	movwf	??_cmd_rp
 15983  136D  0832               	movf	??_cmd_rp,w
 15984  136E  00B5               	movwf	cmd_rp@buff+2
 15985                           
 15986                           ;main.c: 876: buff[3] = TALA;
 15987  136F  0021               	movlb	1	; select bank1
 15988  1370  086D               	movf	_TALA^(0+128),w
 15989  1371  0020               	movlb	0	; select bank0
 15990  1372  00B2               	movwf	??_cmd_rp
 15991  1373  0832               	movf	??_cmd_rp,w
 15992  1374  00B6               	movwf	cmd_rp@buff+3
 15993                           
 15994                           ;main.c: 877: buff[4] = (uint8_t)0xFE;
 15995  1375  30FE               	movlw	254
 15996  1376  00B2               	movwf	??_cmd_rp
 15997  1377  0832               	movf	??_cmd_rp,w
 15998  1378  00B7               	movwf	cmd_rp@buff+4
 15999  1379                     l5994:
 16000                           
 16001                           ;main.c: 879: sendMessage(5,buff);
 16002  1379  3005               	movlw	5
 16003  137A  00A3               	movwf	sendMessage@num
 16004  137B  3000               	movlw	0
 16005  137C  00A4               	movwf	sendMessage@num+1
 16006  137D  3033               	movlw	(low (cmd_rp@buff| 0))& (0+255)
 16007  137E  00B2               	movwf	??_cmd_rp
 16008  137F  0832               	movf	??_cmd_rp,w
 16009  1380  00A5               	movwf	sendMessage@buffer
 16010  1381  3192  22CF  3193   	fcall	_sendMessage
 16011  1384                     l1525:
 16012  1384  0008               	return
 16013  1385                     __end_of_cmd_rp:
 16014                           
 16015                           	psect	text32
 16016  128C                     __ptext32:	
 16017 ;; *************** function _cmd_rtl *****************
 16018 ;; Defined at:
 16019 ;;		line 860 in file "main.c"
 16020 ;; Parameters:    Size  Location     Type
 16021 ;;  num             2   15[BANK0 ] int 
 16022 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 16023 ;;		 -> main@buff(20), 
 16024 ;; Auto vars:     Size  Location     Type
 16025 ;;  buff            5   19[BANK0 ] unsigned char [5]
 16026 ;; Return value:  Size  Location     Type
 16027 ;;                  1    wreg      void 
 16028 ;; Registers used:
 16029 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16030 ;; Tracked objects:
 16031 ;;		On entry : 0/0
 16032 ;;		On exit  : 0/0
 16033 ;;		Unchanged: 0/0
 16034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16035 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16036 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16037 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16038 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16039 ;;Total ram usage:        9 bytes
 16040 ;; Hardware stack levels used:    1
 16041 ;; Hardware stack levels required when called:    8
 16042 ;; This function calls:
 16043 ;;		_sendMessage
 16044 ;; This function is called by:
 16045 ;;		_main
 16046 ;; This function uses a non-reentrant model
 16047 ;;
 16048                           
 16049                           
 16050                           ;psect for function _cmd_rtl
 16051  128C                     _cmd_rtl:
 16052  128C                     l5988:	
 16053                           ;incstack = 0
 16054                           ; Regs used in _cmd_rtl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16055                           
 16056                           
 16057                           ;main.c: 861: uint8_t buff[5];;main.c: 862: buff[0] = (uint8_t)0xFD;
 16058  128C  30FD               	movlw	253
 16059  128D  0020               	movlb	0	; select bank0
 16060  128E  00B2               	movwf	??_cmd_rtl
 16061  128F  0832               	movf	??_cmd_rtl,w
 16062  1290  00B3               	movwf	cmd_rtl@buff
 16063                           
 16064                           ;main.c: 863: buff[1] = (uint8_t)0XC2;
 16065  1291  30C2               	movlw	194
 16066  1292  00B2               	movwf	??_cmd_rtl
 16067  1293  0832               	movf	??_cmd_rtl,w
 16068  1294  00B4               	movwf	cmd_rtl@buff+1
 16069                           
 16070                           ;main.c: 864: buff[2] = temp;
 16071  1295  0869               	movf	_temp,w
 16072  1296  00B2               	movwf	??_cmd_rtl
 16073  1297  0832               	movf	??_cmd_rtl,w
 16074  1298  00B5               	movwf	cmd_rtl@buff+2
 16075                           
 16076                           ;main.c: 865: buff[3] = lumLevel;
 16077  1299  0868               	movf	_lumLevel,w
 16078  129A  00B2               	movwf	??_cmd_rtl
 16079  129B  0832               	movf	??_cmd_rtl,w
 16080  129C  00B6               	movwf	cmd_rtl@buff+3
 16081                           
 16082                           ;main.c: 866: buff[4] = (uint8_t)0xFE;
 16083  129D  30FE               	movlw	254
 16084  129E  00B2               	movwf	??_cmd_rtl
 16085  129F  0832               	movf	??_cmd_rtl,w
 16086  12A0  00B7               	movwf	cmd_rtl@buff+4
 16087  12A1                     l5990:
 16088                           
 16089                           ;main.c: 868: sendMessage(5,buff);
 16090  12A1  3005               	movlw	5
 16091  12A2  00A3               	movwf	sendMessage@num
 16092  12A3  3000               	movlw	0
 16093  12A4  00A4               	movwf	sendMessage@num+1
 16094  12A5  3033               	movlw	(low (cmd_rtl@buff| 0))& (0+255)
 16095  12A6  00B2               	movwf	??_cmd_rtl
 16096  12A7  0832               	movf	??_cmd_rtl,w
 16097  12A8  00A5               	movwf	sendMessage@buffer
 16098  12A9  3192  22CF  3192   	fcall	_sendMessage
 16099  12AC                     l1522:
 16100  12AC  0008               	return
 16101  12AD                     __end_of_cmd_rtl:
 16102                           
 16103                           	psect	text33
 16104  157A                     __ptext33:	
 16105 ;; *************** function _cmd_sc *****************
 16106 ;; Defined at:
 16107 ;;		line 845 in file "main.c"
 16108 ;; Parameters:    Size  Location     Type
 16109 ;;  num             2   15[BANK0 ] int 
 16110 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 16111 ;;		 -> main@buff(20), 
 16112 ;; Auto vars:     Size  Location     Type
 16113 ;;  s               1   21[BANK0 ] unsigned char 
 16114 ;;  m               1   20[BANK0 ] unsigned char 
 16115 ;;  h               1   19[BANK0 ] unsigned char 
 16116 ;; Return value:  Size  Location     Type
 16117 ;;                  1    wreg      void 
 16118 ;; Registers used:
 16119 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16120 ;; Tracked objects:
 16121 ;;		On entry : 0/0
 16122 ;;		On exit  : 0/0
 16123 ;;		Unchanged: 0/0
 16124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16125 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16126 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16127 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16128 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16129 ;;Total ram usage:        7 bytes
 16130 ;; Hardware stack levels used:    1
 16131 ;; Hardware stack levels required when called:    9
 16132 ;; This function calls:
 16133 ;;		_sendERRORMessage
 16134 ;;		_sendOKMessage
 16135 ;; This function is called by:
 16136 ;;		_main
 16137 ;; This function uses a non-reentrant model
 16138 ;;
 16139                           
 16140                           
 16141                           ;psect for function _cmd_sc
 16142  157A                     _cmd_sc:
 16143  157A                     l5972:	
 16144                           ;incstack = 0
 16145                           ; Regs used in _cmd_sc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16146                           
 16147                           
 16148                           ;main.c: 846: uint8_t h = buffer[2];
 16149  157A  0020               	movlb	0	; select bank0
 16150  157B  0831               	movf	cmd_sc@buffer,w
 16151  157C  0086               	movwf	6
 16152  157D  0187               	clrf	7
 16153  157E  3F42               	moviw [2]fsr1
 16154  157F  00B3               	movwf	cmd_sc@h
 16155                           
 16156                           ;main.c: 847: uint8_t m = buffer[3];
 16157  1580  0831               	movf	cmd_sc@buffer,w
 16158  1581  0086               	movwf	6
 16159  1582  0187               	clrf	7
 16160  1583  3F43               	moviw [3]fsr1
 16161  1584  00B4               	movwf	cmd_sc@m
 16162                           
 16163                           ;main.c: 848: uint8_t s = buffer[4];
 16164  1585  0831               	movf	cmd_sc@buffer,w
 16165  1586  0086               	movwf	6
 16166  1587  0187               	clrf	7
 16167  1588  3F44               	moviw [4]fsr1
 16168  1589  00B5               	movwf	cmd_sc@s
 16169  158A                     l5974:
 16170                           
 16171                           ;main.c: 849: if((h >= 0 && h < 24) && (m >= 0 && m < 60) && (s >= 0 && s < 60) && num =
      +                          = 6){
 16172  158A  3018               	movlw	24
 16173  158B  0233               	subwf	cmd_sc@h,w
 16174  158C  1803               	skipnc
 16175  158D  2D8F               	goto	u5821
 16176  158E  2D90               	goto	u5820
 16177  158F                     u5821:
 16178  158F  2DB4               	goto	l5986
 16179  1590                     u5820:
 16180  1590                     l5976:
 16181  1590  303C               	movlw	60
 16182  1591  0234               	subwf	cmd_sc@m,w
 16183  1592  1803               	skipnc
 16184  1593  2D95               	goto	u5831
 16185  1594  2D96               	goto	u5830
 16186  1595                     u5831:
 16187  1595  2DB4               	goto	l5986
 16188  1596                     u5830:
 16189  1596                     l5978:
 16190  1596  303C               	movlw	60
 16191  1597  0235               	subwf	cmd_sc@s,w
 16192  1598  1803               	skipnc
 16193  1599  2D9B               	goto	u5841
 16194  159A  2D9C               	goto	u5840
 16195  159B                     u5841:
 16196  159B  2DB4               	goto	l5986
 16197  159C                     u5840:
 16198  159C                     l5980:
 16199  159C  3006               	movlw	6
 16200  159D  062F               	xorwf	cmd_sc@num,w
 16201  159E  0430               	iorwf	cmd_sc@num+1,w
 16202  159F  1D03               	btfss	3,2
 16203  15A0  2DA2               	goto	u5851
 16204  15A1  2DA3               	goto	u5850
 16205  15A2                     u5851:
 16206  15A2  2DB4               	goto	l5986
 16207  15A3                     u5850:
 16208  15A3                     l5982:
 16209                           
 16210                           ;main.c: 850: t.h = h;
 16211  15A3  0833               	movf	cmd_sc@h,w
 16212  15A4  00B2               	movwf	??_cmd_sc
 16213  15A5  0832               	movf	??_cmd_sc,w
 16214  15A6  00DF               	movwf	_t
 16215                           
 16216                           ;main.c: 851: t.m = m;
 16217  15A7  0834               	movf	cmd_sc@m,w
 16218  15A8  00B2               	movwf	??_cmd_sc
 16219  15A9  0832               	movf	??_cmd_sc,w
 16220  15AA  00E0               	movwf	_t+1
 16221                           
 16222                           ;main.c: 852: t.s = s;
 16223  15AB  0835               	movf	cmd_sc@s,w
 16224  15AC  00B2               	movwf	??_cmd_sc
 16225  15AD  0832               	movf	??_cmd_sc,w
 16226  15AE  00E1               	movwf	_t+2
 16227  15AF                     l5984:
 16228                           
 16229                           ;main.c: 853: sendOKMessage((uint8_t)0XC1);
 16230  15AF  30C1               	movlw	193
 16231  15B0  3191  2144  3195   	fcall	_sendOKMessage
 16232                           
 16233                           ;main.c: 854: } else {
 16234  15B3  2DB8               	goto	l1519
 16235  15B4                     l5986:
 16236                           
 16237                           ;main.c: 855: sendERRORMessage((uint8_t)0XC1);
 16238  15B4  30C1               	movlw	193
 16239  15B5  3191  21B3  3195   	fcall	_sendERRORMessage
 16240  15B8                     l1519:
 16241  15B8  0008               	return
 16242  15B9                     __end_of_cmd_sc:
 16243                           
 16244                           	psect	text34
 16245  133B                     __ptext34:	
 16246 ;; *************** function _cmd_rc *****************
 16247 ;; Defined at:
 16248 ;;		line 833 in file "main.c"
 16249 ;; Parameters:    Size  Location     Type
 16250 ;;  num             2   15[BANK0 ] int 
 16251 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 16252 ;;		 -> main@buff(20), 
 16253 ;; Auto vars:     Size  Location     Type
 16254 ;;  buff            6   19[BANK0 ] unsigned char [6]
 16255 ;; Return value:  Size  Location     Type
 16256 ;;                  1    wreg      void 
 16257 ;; Registers used:
 16258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16259 ;; Tracked objects:
 16260 ;;		On entry : 0/0
 16261 ;;		On exit  : 0/0
 16262 ;;		Unchanged: 0/0
 16263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16264 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16265 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16266 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16267 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16268 ;;Total ram usage:       10 bytes
 16269 ;; Hardware stack levels used:    1
 16270 ;; Hardware stack levels required when called:    8
 16271 ;; This function calls:
 16272 ;;		_sendMessage
 16273 ;; This function is called by:
 16274 ;;		_main
 16275 ;; This function uses a non-reentrant model
 16276 ;;
 16277                           
 16278                           
 16279                           ;psect for function _cmd_rc
 16280  133B                     _cmd_rc:
 16281  133B                     l5968:	
 16282                           ;incstack = 0
 16283                           ; Regs used in _cmd_rc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16284                           
 16285                           
 16286                           ;main.c: 834: uint8_t buff[6];;main.c: 835: buff[0] = (uint8_t)0xFD;
 16287  133B  30FD               	movlw	253
 16288  133C  0020               	movlb	0	; select bank0
 16289  133D  00B2               	movwf	??_cmd_rc
 16290  133E  0832               	movf	??_cmd_rc,w
 16291  133F  00B3               	movwf	cmd_rc@buff
 16292                           
 16293                           ;main.c: 836: buff[1] = (uint8_t)0xC0;
 16294  1340  30C0               	movlw	192
 16295  1341  00B2               	movwf	??_cmd_rc
 16296  1342  0832               	movf	??_cmd_rc,w
 16297  1343  00B4               	movwf	cmd_rc@buff+1
 16298                           
 16299                           ;main.c: 837: buff[2] = t.h;
 16300  1344  085F               	movf	_t,w
 16301  1345  00B2               	movwf	??_cmd_rc
 16302  1346  0832               	movf	??_cmd_rc,w
 16303  1347  00B5               	movwf	cmd_rc@buff+2
 16304                           
 16305                           ;main.c: 838: buff[3] = t.m;
 16306  1348  0860               	movf	_t+1,w
 16307  1349  00B2               	movwf	??_cmd_rc
 16308  134A  0832               	movf	??_cmd_rc,w
 16309  134B  00B6               	movwf	cmd_rc@buff+3
 16310                           
 16311                           ;main.c: 839: buff[4] = t.s;
 16312  134C  0861               	movf	_t+2,w
 16313  134D  00B2               	movwf	??_cmd_rc
 16314  134E  0832               	movf	??_cmd_rc,w
 16315  134F  00B7               	movwf	cmd_rc@buff+4
 16316                           
 16317                           ;main.c: 840: buff[5] = (uint8_t)0xFE;
 16318  1350  30FE               	movlw	254
 16319  1351  00B2               	movwf	??_cmd_rc
 16320  1352  0832               	movf	??_cmd_rc,w
 16321  1353  00B8               	movwf	cmd_rc@buff+5
 16322  1354                     l5970:
 16323                           
 16324                           ;main.c: 842: sendMessage(6,buff);
 16325  1354  3006               	movlw	6
 16326  1355  00A3               	movwf	sendMessage@num
 16327  1356  3000               	movlw	0
 16328  1357  00A4               	movwf	sendMessage@num+1
 16329  1358  3033               	movlw	(low (cmd_rc@buff| 0))& (0+255)
 16330  1359  00B2               	movwf	??_cmd_rc
 16331  135A  0832               	movf	??_cmd_rc,w
 16332  135B  00A5               	movwf	sendMessage@buffer
 16333  135C  3192  22CF  3193   	fcall	_sendMessage
 16334  135F                     l1514:
 16335  135F  0008               	return
 16336  1360                     __end_of_cmd_rc:
 16337                           
 16338                           	psect	text35
 16339  0A86                     __ptext35:	
 16340 ;; *************** function _cmd_tri *****************
 16341 ;; Defined at:
 16342 ;;		line 1025 in file "main.c"
 16343 ;; Parameters:    Size  Location     Type
 16344 ;;  num             2   15[BANK0 ] int 
 16345 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 16346 ;;		 -> main@buff(20), 
 16347 ;; Auto vars:     Size  Location     Type
 16348 ;;  buffData        5   25[BANK0 ] unsigned char [5]
 16349 ;;  buffInit        4   30[BANK0 ] unsigned char [4]
 16350 ;;  i               2   39[BANK0 ] int 
 16351 ;;  indexAux        2   34[BANK0 ] int 
 16352 ;;  nMessagesSen    2    0        int 
 16353 ;;  index           1   42[BANK0 ] unsigned char 
 16354 ;;  j               1   41[BANK0 ] unsigned char 
 16355 ;;  n               1   38[BANK0 ] unsigned char 
 16356 ;;  buffEOM         1   37[BANK0 ] unsigned char [1]
 16357 ;;  startingInde    1   36[BANK0 ] unsigned char 
 16358 ;; Return value:  Size  Location     Type
 16359 ;;                  1    wreg      void 
 16360 ;; Registers used:
 16361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16362 ;; Tracked objects:
 16363 ;;		On entry : 0/0
 16364 ;;		On exit  : 0/0
 16365 ;;		Unchanged: 0/0
 16366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16367 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16368 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16369 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16370 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16371 ;;Total ram usage:       28 bytes
 16372 ;; Hardware stack levels used:    1
 16373 ;; Hardware stack levels required when called:    9
 16374 ;; This function calls:
 16375 ;;		_DATAEE_ReadByte
 16376 ;;		___wmul
 16377 ;;		_sendERRORMessage
 16378 ;;		_sendMessage
 16379 ;; This function is called by:
 16380 ;;		_main
 16381 ;; This function uses a non-reentrant model
 16382 ;;
 16383                           
 16384                           
 16385                           ;psect for function _cmd_tri
 16386  0A86                     _cmd_tri:
 16387  0A86                     l6140:	
 16388                           ;incstack = 0
 16389                           ; Regs used in _cmd_tri: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16390                           
 16391                           
 16392                           ;main.c: 1026: if(num == 5){
 16393  0A86  3005               	movlw	5
 16394  0A87  0020               	movlb	0	; select bank0
 16395  0A88  062F               	xorwf	cmd_tri@num,w
 16396  0A89  0430               	iorwf	cmd_tri@num+1,w
 16397  0A8A  1D03               	btfss	3,2
 16398  0A8B  2A8D               	goto	u6111
 16399  0A8C  2A8E               	goto	u6110
 16400  0A8D                     u6111:
 16401  0A8D  2B73               	goto	l6202
 16402  0A8E                     u6110:
 16403  0A8E                     l6142:
 16404                           
 16405                           ;main.c: 1027: uint8_t n = buffer[2];
 16406  0A8E  0831               	movf	cmd_tri@buffer,w
 16407  0A8F  0086               	movwf	6
 16408  0A90  0187               	clrf	7
 16409  0A91  3F42               	moviw [2]fsr1
 16410  0A92  00C6               	movwf	cmd_tri@n
 16411                           
 16412                           ;main.c: 1028: uint8_t index = buffer[3];
 16413  0A93  0831               	movf	cmd_tri@buffer,w
 16414  0A94  0086               	movwf	6
 16415  0A95  0187               	clrf	7
 16416  0A96  3F43               	moviw [3]fsr1
 16417  0A97  00CA               	movwf	cmd_tri@index
 16418  0A98                     l6144:
 16419                           
 16420                           ;main.c: 1030: if((n > nr) || (index < 0) || (index > NREG-1)){
 16421  0A98  0846               	movf	cmd_tri@n,w
 16422  0A99  0021               	movlb	1	; select bank1
 16423  0A9A  0254               	subwf	_nr^(0+128),w
 16424  0A9B  1C03               	skipc
 16425  0A9C  2A9E               	goto	u6121
 16426  0A9D  2A9F               	goto	u6120
 16427  0A9E                     u6121:
 16428  0A9E  2AB4               	goto	l6148
 16429  0A9F                     u6120:
 16430  0A9F                     l6146:
 16431  0A9F  0020               	movlb	0	; select bank0
 16432  0AA0  086F               	movf	_NREG,w
 16433  0AA1  3EFF               	addlw	255
 16434  0AA2  00B2               	movwf	??_cmd_tri
 16435  0AA3  30FF               	movlw	255
 16436  0AA4  1803               	skipnc
 16437  0AA5  3000               	movlw	0
 16438  0AA6  00B3               	movwf	??_cmd_tri+1
 16439  0AA7  0833               	movf	??_cmd_tri+1,w
 16440  0AA8  3A80               	xorlw	128
 16441  0AA9  00B4               	movwf	??_cmd_tri+2
 16442  0AAA  3080               	movlw	128
 16443  0AAB  0234               	subwf	??_cmd_tri+2,w
 16444  0AAC  1D03               	skipz
 16445  0AAD  2AB0               	goto	u6135
 16446  0AAE  084A               	movf	cmd_tri@index,w
 16447  0AAF  0232               	subwf	??_cmd_tri,w
 16448  0AB0                     u6135:
 16449  0AB0  1803               	skipnc
 16450  0AB1  2AB3               	goto	u6131
 16451  0AB2  2AB4               	goto	u6130
 16452  0AB3                     u6131:
 16453  0AB3  2AB9               	goto	l6152
 16454  0AB4                     u6130:
 16455  0AB4                     l6148:
 16456                           
 16457                           ;main.c: 1031: sendERRORMessage((uint8_t)0XCC);
 16458  0AB4  30CC               	movlw	204
 16459  0AB5  3191  21B3  318A   	fcall	_sendERRORMessage
 16460  0AB8  2B77               	goto	l1582
 16461  0AB9                     l6152:
 16462                           
 16463                           ;main.c: 1033: };main.c: 1035: uint8_t startingIndex;;main.c: 1036: if(((iwrite-1)-index
      +                          ) < 0){
 16464  0AB9  087D               	movf	_iwrite,w
 16465  0ABA  0020               	movlb	0	; select bank0
 16466  0ABB  00B2               	movwf	??_cmd_tri
 16467  0ABC  01B3               	clrf	??_cmd_tri+1
 16468  0ABD  0833               	movf	??_cmd_tri+1,w
 16469  0ABE  00B5               	movwf	??_cmd_tri+3
 16470  0ABF  084A               	movf	cmd_tri@index,w
 16471  0AC0  0232               	subwf	??_cmd_tri,w
 16472  0AC1  00B4               	movwf	??_cmd_tri+2
 16473  0AC2  1C03               	skipc
 16474  0AC3  03B5               	decf	??_cmd_tri+3,f
 16475  0AC4  30FF               	movlw	255
 16476  0AC5  0734               	addwf	??_cmd_tri+2,w
 16477  0AC6  0835               	movf	??_cmd_tri+3,w
 16478  0AC7  1803               	skipnc
 16479  0AC8  0A35               	incf	??_cmd_tri+3,w
 16480  0AC9  3EFF               	addlw	255
 16481  0ACA  1F89               	btfss	9,7
 16482  0ACB  2ACD               	goto	u6141
 16483  0ACC  2ACE               	goto	u6140
 16484  0ACD                     u6141:
 16485  0ACD  2AD6               	goto	l6156
 16486  0ACE                     u6140:
 16487  0ACE                     l6154:
 16488                           
 16489                           ;main.c: 1037: startingIndex = NREG - ((iwrite-1)-index);
 16490  0ACE  087D               	movf	_iwrite,w
 16491  0ACF  026F               	subwf	_NREG,w
 16492  0AD0  074A               	addwf	cmd_tri@index,w
 16493  0AD1  3E01               	addlw	1
 16494  0AD2  00B2               	movwf	??_cmd_tri
 16495  0AD3  0832               	movf	??_cmd_tri,w
 16496  0AD4  00C4               	movwf	cmd_tri@startingIndex
 16497                           
 16498                           ;main.c: 1038: } else {
 16499  0AD5  2ADC               	goto	l6158
 16500  0AD6                     l6156:
 16501                           
 16502                           ;main.c: 1039: startingIndex = ((iwrite-1)-index);
 16503  0AD6  084A               	movf	cmd_tri@index,w
 16504  0AD7  027D               	subwf	_iwrite,w
 16505  0AD8  3EFF               	addlw	255
 16506  0AD9  00B2               	movwf	??_cmd_tri
 16507  0ADA  0832               	movf	??_cmd_tri,w
 16508  0ADB  00C4               	movwf	cmd_tri@startingIndex
 16509  0ADC                     l6158:
 16510                           
 16511                           ;main.c: 1040: };main.c: 1043: uint8_t buffInit[4];;main.c: 1044: buffInit[0] = (uint8_t
      +                          )0xFD;
 16512  0ADC  30FD               	movlw	253
 16513  0ADD  00B2               	movwf	??_cmd_tri
 16514  0ADE  0832               	movf	??_cmd_tri,w
 16515  0ADF  00BE               	movwf	cmd_tri@buffInit
 16516  0AE0                     l6160:
 16517                           
 16518                           ;main.c: 1045: buffInit[1] = (uint8_t)0XCB;
 16519  0AE0  30CB               	movlw	203
 16520  0AE1  00B2               	movwf	??_cmd_tri
 16521  0AE2  0832               	movf	??_cmd_tri,w
 16522  0AE3  00BF               	movwf	cmd_tri@buffInit+1
 16523  0AE4                     l6162:
 16524                           
 16525                           ;main.c: 1046: buffInit[2] = (uint8_t)n;
 16526  0AE4  0846               	movf	cmd_tri@n,w
 16527  0AE5  00B2               	movwf	??_cmd_tri
 16528  0AE6  0832               	movf	??_cmd_tri,w
 16529  0AE7  00C0               	movwf	cmd_tri@buffInit+2
 16530  0AE8                     l6164:
 16531                           
 16532                           ;main.c: 1047: buffInit[2] = (uint8_t)index;
 16533  0AE8  084A               	movf	cmd_tri@index,w
 16534  0AE9  00B2               	movwf	??_cmd_tri
 16535  0AEA  0832               	movf	??_cmd_tri,w
 16536  0AEB  00C0               	movwf	cmd_tri@buffInit+2
 16537  0AEC                     l6166:
 16538                           
 16539                           ;main.c: 1048: sendMessage(4,buffInit);
 16540  0AEC  3004               	movlw	4
 16541  0AED  00A3               	movwf	sendMessage@num
 16542  0AEE  3000               	movlw	0
 16543  0AEF  00A4               	movwf	sendMessage@num+1
 16544  0AF0  303E               	movlw	(low (cmd_tri@buffInit| 0))& (0+255)
 16545  0AF1  00B2               	movwf	??_cmd_tri
 16546  0AF2  0832               	movf	??_cmd_tri,w
 16547  0AF3  00A5               	movwf	sendMessage@buffer
 16548  0AF4  3192  22CF  318A   	fcall	_sendMessage
 16549  0AF7                     l6168:
 16550  0AF7                     l6170:
 16551                           
 16552                           ;main.c: 1052: int i = startingIndex;
 16553  0AF7  0020               	movlb	0	; select bank0
 16554  0AF8  0844               	movf	cmd_tri@startingIndex,w
 16555  0AF9  00B2               	movwf	??_cmd_tri
 16556  0AFA  01B3               	clrf	??_cmd_tri+1
 16557  0AFB  0832               	movf	??_cmd_tri,w
 16558  0AFC  00C7               	movwf	cmd_tri@i
 16559  0AFD  0833               	movf	??_cmd_tri+1,w
 16560  0AFE  00C8               	movwf	cmd_tri@i+1
 16561  0AFF                     l6172:
 16562                           
 16563                           ;main.c: 1053: int indexAux = index;
 16564  0AFF  084A               	movf	cmd_tri@index,w
 16565  0B00  00B2               	movwf	??_cmd_tri
 16566  0B01  01B3               	clrf	??_cmd_tri+1
 16567  0B02  0832               	movf	??_cmd_tri,w
 16568  0B03  00C2               	movwf	cmd_tri@indexAux
 16569  0B04  0833               	movf	??_cmd_tri+1,w
 16570  0B05  00C3               	movwf	cmd_tri@indexAux+1
 16571                           
 16572                           ;main.c: 1054: uint8_t j;;main.c: 1055: uint8_t buffData[5];;main.c: 1056: while(indexAu
      +                          x){
 16573  0B06  2B5C               	goto	l6196
 16574  0B07                     l6174:
 16575                           
 16576                           ;main.c: 1057: for(j = 0; j < 5; j++){
 16577  0B07  01C9               	clrf	cmd_tri@j
 16578  0B08                     l6180:
 16579                           
 16580                           ;main.c: 1058: buffData[j] = DATAEE_ReadByte( (i * 0x5) + 0x7014 + j);
 16581  0B08  0849               	movf	cmd_tri@j,w
 16582  0B09  00B2               	movwf	??_cmd_tri
 16583  0B0A  01B3               	clrf	??_cmd_tri+1
 16584  0B0B  0848               	movf	cmd_tri@i+1,w
 16585  0B0C  00A1               	movwf	___wmul@multiplier+1
 16586  0B0D  0847               	movf	cmd_tri@i,w
 16587  0B0E  00A0               	movwf	___wmul@multiplier
 16588  0B0F  3005               	movlw	5
 16589  0B10  00A2               	movwf	___wmul@multiplicand
 16590  0B11  3000               	movlw	0
 16591  0B12  00A3               	movwf	___wmul@multiplicand+1
 16592  0B13  3192  226C  318A   	fcall	___wmul
 16593  0B16  0020               	movlb	0	; select bank0
 16594  0B17  0832               	movf	??_cmd_tri,w
 16595  0B18  0720               	addwf	?___wmul,w
 16596  0B19  00B4               	movwf	??_cmd_tri+2
 16597  0B1A  0833               	movf	??_cmd_tri+1,w
 16598  0B1B  3D21               	addwfc	?___wmul+1,w
 16599  0B1C  00B5               	movwf	??_cmd_tri+3
 16600  0B1D  0834               	movf	??_cmd_tri+2,w
 16601  0B1E  3E14               	addlw	20
 16602  0B1F  00A6               	movwf	DATAEE_ReadByte@bAdd
 16603  0B20  3070               	movlw	112
 16604  0B21  3D35               	addwfc	??_cmd_tri+3,w
 16605  0B22  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 16606  0B23  3190  2076  318A   	fcall	_DATAEE_ReadByte
 16607  0B26  0020               	movlb	0	; select bank0
 16608  0B27  00B6               	movwf	??_cmd_tri+4
 16609  0B28  0849               	movf	cmd_tri@j,w
 16610  0B29  3E39               	addlw	(low (cmd_tri@buffData| 0))& (0+255)
 16611  0B2A  0086               	movwf	6
 16612  0B2B  0187               	clrf	7
 16613  0B2C  0836               	movf	??_cmd_tri+4,w
 16614  0B2D  0081               	movwf	1
 16615  0B2E                     l6182:
 16616  0B2E  3001               	movlw	1
 16617  0B2F  00B2               	movwf	??_cmd_tri
 16618  0B30  0832               	movf	??_cmd_tri,w
 16619  0B31  07C9               	addwf	cmd_tri@j,f
 16620  0B32                     l6184:
 16621  0B32  3005               	movlw	5
 16622  0B33  0249               	subwf	cmd_tri@j,w
 16623  0B34  1C03               	skipc
 16624  0B35  2B37               	goto	u6151
 16625  0B36  2B38               	goto	u6150
 16626  0B37                     u6151:
 16627  0B37  2B08               	goto	l6180
 16628  0B38                     u6150:
 16629  0B38                     l6186:
 16630                           
 16631                           ;main.c: 1059: };main.c: 1060: sendMessage(5,buffData);
 16632  0B38  3005               	movlw	5
 16633  0B39  00A3               	movwf	sendMessage@num
 16634  0B3A  3000               	movlw	0
 16635  0B3B  00A4               	movwf	sendMessage@num+1
 16636  0B3C  3039               	movlw	(low (cmd_tri@buffData| 0))& (0+255)
 16637  0B3D  00B2               	movwf	??_cmd_tri
 16638  0B3E  0832               	movf	??_cmd_tri,w
 16639  0B3F  00A5               	movwf	sendMessage@buffer
 16640  0B40  3192  22CF  318A   	fcall	_sendMessage
 16641  0B43                     l6188:
 16642                           
 16643                           ;main.c: 1061: i++;
 16644  0B43  3001               	movlw	1
 16645  0B44  0020               	movlb	0	; select bank0
 16646  0B45  07C7               	addwf	cmd_tri@i,f
 16647  0B46  3000               	movlw	0
 16648  0B47  3DC8               	addwfc	cmd_tri@i+1,f
 16649  0B48                     l6190:
 16650                           
 16651                           ;main.c: 1062: indexAux--;
 16652  0B48  30FF               	movlw	255
 16653  0B49  07C2               	addwf	cmd_tri@indexAux,f
 16654  0B4A  30FF               	movlw	255
 16655  0B4B  3DC3               	addwfc	cmd_tri@indexAux+1,f
 16656  0B4C                     l6192:
 16657                           
 16658                           ;main.c: 1063: if(i >= NREG){
 16659  0B4C  0848               	movf	cmd_tri@i+1,w
 16660  0B4D  3A80               	xorlw	128
 16661  0B4E  00B2               	movwf	??_cmd_tri
 16662  0B4F  3080               	movlw	128
 16663  0B50  0232               	subwf	??_cmd_tri,w
 16664  0B51  1D03               	skipz
 16665  0B52  2B55               	goto	u6165
 16666  0B53  086F               	movf	_NREG,w
 16667  0B54  0247               	subwf	cmd_tri@i,w
 16668  0B55                     u6165:
 16669  0B55  1C03               	skipc
 16670  0B56  2B58               	goto	u6161
 16671  0B57  2B59               	goto	u6160
 16672  0B58                     u6161:
 16673  0B58  2B5C               	goto	l6196
 16674  0B59                     u6160:
 16675  0B59                     l6194:
 16676                           
 16677                           ;main.c: 1064: i=0;
 16678  0B59  0020               	movlb	0	; select bank0
 16679  0B5A  01C7               	clrf	cmd_tri@i
 16680  0B5B  01C8               	clrf	cmd_tri@i+1
 16681  0B5C                     l6196:
 16682  0B5C  0020               	movlb	0	; select bank0
 16683  0B5D  0842               	movf	cmd_tri@indexAux,w
 16684  0B5E  0443               	iorwf	cmd_tri@indexAux+1,w
 16685  0B5F  1D03               	btfss	3,2
 16686  0B60  2B62               	goto	u6171
 16687  0B61  2B63               	goto	u6170
 16688  0B62                     u6171:
 16689  0B62  2B07               	goto	l6174
 16690  0B63                     u6170:
 16691  0B63                     l6198:
 16692                           
 16693                           ;main.c: 1065: };main.c: 1066: };main.c: 1069: uint8_t buffEOM[1];;main.c: 1070: buffEOM
      +                          [0] = (uint8_t)0xFE;
 16694  0B63  30FE               	movlw	254
 16695  0B64  00B2               	movwf	??_cmd_tri
 16696  0B65  0832               	movf	??_cmd_tri,w
 16697  0B66  00C5               	movwf	cmd_tri@buffEOM
 16698  0B67                     l6200:
 16699                           
 16700                           ;main.c: 1071: sendMessage(1,buffEOM);
 16701  0B67  3001               	movlw	1
 16702  0B68  00A3               	movwf	sendMessage@num
 16703  0B69  3000               	movlw	0
 16704  0B6A  00A4               	movwf	sendMessage@num+1
 16705  0B6B  3045               	movlw	(low (cmd_tri@buffEOM| 0))& (0+255)
 16706  0B6C  00B2               	movwf	??_cmd_tri
 16707  0B6D  0832               	movf	??_cmd_tri,w
 16708  0B6E  00A5               	movwf	sendMessage@buffer
 16709  0B6F  3192  22CF  318A   	fcall	_sendMessage
 16710                           
 16711                           ;main.c: 1072: } else{
 16712  0B72  2B77               	goto	l1582
 16713  0B73                     l6202:
 16714                           
 16715                           ;main.c: 1073: sendERRORMessage((uint8_t)0XCC);
 16716  0B73  30CC               	movlw	204
 16717  0B74  3191  21B3  318A   	fcall	_sendERRORMessage
 16718  0B77                     l1582:
 16719  0B77  0008               	return
 16720  0B78                     __end_of_cmd_tri:
 16721                           
 16722                           	psect	text36
 16723  126C                     __ptext36:	
 16724 ;; *************** function ___wmul *****************
 16725 ;; Defined at:
 16726 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 16727 ;; Parameters:    Size  Location     Type
 16728 ;;  multiplier      2    0[BANK0 ] unsigned int 
 16729 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 16730 ;; Auto vars:     Size  Location     Type
 16731 ;;  product         2    4[BANK0 ] unsigned int 
 16732 ;; Return value:  Size  Location     Type
 16733 ;;                  2    0[BANK0 ] unsigned int 
 16734 ;; Registers used:
 16735 ;;		wreg, status,2, status,0
 16736 ;; Tracked objects:
 16737 ;;		On entry : 0/0
 16738 ;;		On exit  : 0/0
 16739 ;;		Unchanged: 0/0
 16740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16741 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16744 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16745 ;;Total ram usage:        6 bytes
 16746 ;; Hardware stack levels used:    1
 16747 ;; Hardware stack levels required when called:    5
 16748 ;; This function calls:
 16749 ;;		Nothing
 16750 ;; This function is called by:
 16751 ;;		_cmd_trc
 16752 ;;		_cmd_tri
 16753 ;;		_main
 16754 ;;		_sprintf
 16755 ;;		_map
 16756 ;; This function uses a non-reentrant model
 16757 ;;
 16758                           
 16759                           
 16760                           ;psect for function ___wmul
 16761  126C                     ___wmul:
 16762  126C                     l4710:	
 16763                           ;incstack = 0
 16764                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16765                           
 16766  126C  0020               	movlb	0	; select bank0
 16767  126D  01A4               	clrf	___wmul@product
 16768  126E  01A5               	clrf	___wmul@product+1
 16769  126F                     l4712:
 16770  126F  1C20               	btfss	___wmul@multiplier,0
 16771  1270  2A72               	goto	u3631
 16772  1271  2A73               	goto	u3630
 16773  1272                     u3631:
 16774  1272  2A77               	goto	l1841
 16775  1273                     u3630:
 16776  1273                     l4714:
 16777  1273  0822               	movf	___wmul@multiplicand,w
 16778  1274  07A4               	addwf	___wmul@product,f
 16779  1275  0823               	movf	___wmul@multiplicand+1,w
 16780  1276  3DA5               	addwfc	___wmul@product+1,f
 16781  1277                     l1841:
 16782  1277  3001               	movlw	1
 16783  1278                     u3645:
 16784  1278  35A2               	lslf	___wmul@multiplicand,f
 16785  1279  0DA3               	rlf	___wmul@multiplicand+1,f
 16786  127A  0B89               	decfsz	9,f
 16787  127B  2A78               	goto	u3645
 16788  127C                     l4716:
 16789  127C  3001               	movlw	1
 16790  127D                     u3655:
 16791  127D  36A1               	lsrf	___wmul@multiplier+1,f
 16792  127E  0CA0               	rrf	___wmul@multiplier,f
 16793  127F  0B89               	decfsz	9,f
 16794  1280  2A7D               	goto	u3655
 16795  1281                     l4718:
 16796  1281  0820               	movf	___wmul@multiplier,w
 16797  1282  0421               	iorwf	___wmul@multiplier+1,w
 16798  1283  1D03               	btfss	3,2
 16799  1284  2A86               	goto	u3661
 16800  1285  2A87               	goto	u3660
 16801  1286                     u3661:
 16802  1286  2A6F               	goto	l4712
 16803  1287                     u3660:
 16804  1287                     l4720:
 16805  1287  0825               	movf	___wmul@product+1,w
 16806  1288  00A1               	movwf	?___wmul+1
 16807  1289  0824               	movf	___wmul@product,w
 16808  128A  00A0               	movwf	?___wmul
 16809  128B                     l1843:
 16810  128B  0008               	return
 16811  128C                     __end_of___wmul:
 16812                           
 16813                           	psect	text37
 16814  1076                     __ptext37:	
 16815 ;; *************** function _DATAEE_ReadByte *****************
 16816 ;; Defined at:
 16817 ;;		line 202 in file "mcc_generated_files/memory.c"
 16818 ;; Parameters:    Size  Location     Type
 16819 ;;  bAdd            2    6[BANK0 ] unsigned int 
 16820 ;; Auto vars:     Size  Location     Type
 16821 ;;		None
 16822 ;; Return value:  Size  Location     Type
 16823 ;;                  1    wreg      unsigned char 
 16824 ;; Registers used:
 16825 ;;		wreg, status,2
 16826 ;; Tracked objects:
 16827 ;;		On entry : 0/0
 16828 ;;		On exit  : 0/0
 16829 ;;		Unchanged: 0/0
 16830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16834 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16835 ;;Total ram usage:        2 bytes
 16836 ;; Hardware stack levels used:    1
 16837 ;; Hardware stack levels required when called:    5
 16838 ;; This function calls:
 16839 ;;		Nothing
 16840 ;; This function is called by:
 16841 ;;		_cmd_trc
 16842 ;;		_cmd_tri
 16843 ;;		_main
 16844 ;; This function uses a non-reentrant model
 16845 ;;
 16846                           
 16847                           
 16848                           ;psect for function _DATAEE_ReadByte
 16849  1076                     _DATAEE_ReadByte:
 16850  1076                     l5248:	
 16851                           ;incstack = 0
 16852                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 16853                           
 16854                           
 16855                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 16856  1076  0020               	movlb	0	; select bank0
 16857  1077  0827               	movf	DATAEE_ReadByte@bAdd+1,w
 16858  1078  0030               	movlb	16	; select bank16
 16859  1079  009B               	movwf	27	;volatile
 16860  107A                     l5250:
 16861                           
 16862                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 16863  107A  0020               	movlb	0	; select bank0
 16864  107B  0826               	movf	DATAEE_ReadByte@bAdd,w
 16865  107C  0030               	movlb	16	; select bank16
 16866  107D  009A               	movwf	26	;volatile
 16867  107E                     l5252:
 16868                           
 16869                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 16870  107E  171E               	bsf	30,6	;volsfr
 16871  107F                     l5254:
 16872                           
 16873                           ;memory.c: 207: NVMCON1bits.RD = 1;
 16874  107F  141E               	bsf	30,0	;volsfr
 16875  1080                     l5256:
 16876                           
 16877                           ;memory.c: 208: __nop();
 16878  1080  0000               	nop
 16879  1081                     l5258:
 16880                           
 16881                           ;memory.c: 209: __nop();
 16882  1081  0000               	nop
 16883  1082                     l5260:
 16884                           
 16885                           ;memory.c: 211: return (NVMDATL);
 16886  1082  0030               	movlb	16	; select bank16
 16887  1083  081C               	movf	28,w	;volatile
 16888  1084                     l807:
 16889  1084  0008               	return
 16890  1085                     __end_of_DATAEE_ReadByte:
 16891                           
 16892                           	psect	text38
 16893  1019                     __ptext38:	
 16894 ;; *************** function _setTimer5ReloadVal *****************
 16895 ;; Defined at:
 16896 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 16897 ;; Parameters:    Size  Location     Type
 16898 ;;  val             2    0[BANK0 ] unsigned int 
 16899 ;; Auto vars:     Size  Location     Type
 16900 ;;		None
 16901 ;; Return value:  Size  Location     Type
 16902 ;;                  1    wreg      void 
 16903 ;; Registers used:
 16904 ;;		wreg
 16905 ;; Tracked objects:
 16906 ;;		On entry : 0/0
 16907 ;;		On exit  : 0/0
 16908 ;;		Unchanged: 0/0
 16909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16910 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16913 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16914 ;;Total ram usage:        2 bytes
 16915 ;; Hardware stack levels used:    1
 16916 ;; Hardware stack levels required when called:    5
 16917 ;; This function calls:
 16918 ;;		Nothing
 16919 ;; This function is called by:
 16920 ;;		_cmd_mmp
 16921 ;; This function uses a non-reentrant model
 16922 ;;
 16923                           
 16924                           
 16925                           ;psect for function _setTimer5ReloadVal
 16926  1019                     _setTimer5ReloadVal:
 16927  1019                     l5226:	
 16928                           ;incstack = 0
 16929                           ; Regs used in _setTimer5ReloadVal: [wreg]
 16930                           
 16931                           
 16932                           ;tmr5.c: 100: timer5ReloadVal = val;
 16933  1019  0020               	movlb	0	; select bank0
 16934  101A  0821               	movf	setTimer5ReloadVal@val+1,w
 16935  101B  0021               	movlb	1	; select bank1
 16936  101C  00E0               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 16937  101D  0020               	movlb	0	; select bank0
 16938  101E  0820               	movf	setTimer5ReloadVal@val,w
 16939  101F  0021               	movlb	1	; select bank1
 16940  1020  00DF               	movwf	_timer5ReloadVal^(0+128)	;volatile
 16941  1021                     l646:
 16942  1021  0008               	return
 16943  1022                     __end_of_setTimer5ReloadVal:
 16944                           
 16945                           	psect	text39
 16946  1432                     __ptext39:	
 16947 ;; *************** function ___lmul *****************
 16948 ;; Defined at:
 16949 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 16950 ;; Parameters:    Size  Location     Type
 16951 ;;  multiplier      4    0[BANK0 ] unsigned long 
 16952 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 16953 ;; Auto vars:     Size  Location     Type
 16954 ;;  product         4    8[BANK0 ] unsigned long 
 16955 ;; Return value:  Size  Location     Type
 16956 ;;                  4    0[BANK0 ] unsigned long 
 16957 ;; Registers used:
 16958 ;;		wreg, status,2, status,0
 16959 ;; Tracked objects:
 16960 ;;		On entry : 0/0
 16961 ;;		On exit  : 0/0
 16962 ;;		Unchanged: 0/0
 16963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16964 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16965 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16967 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16968 ;;Total ram usage:       12 bytes
 16969 ;; Hardware stack levels used:    1
 16970 ;; Hardware stack levels required when called:    5
 16971 ;; This function calls:
 16972 ;;		Nothing
 16973 ;; This function is called by:
 16974 ;;		_cmd_mmp
 16975 ;; This function uses a non-reentrant model
 16976 ;;
 16977                           
 16978                           
 16979                           ;psect for function ___lmul
 16980  1432                     ___lmul:
 16981  1432                     l5604:	
 16982                           ;incstack = 0
 16983                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 16984                           
 16985  1432  3000               	movlw	0
 16986  1433  0020               	movlb	0	; select bank0
 16987  1434  00AB               	movwf	___lmul@product+3
 16988  1435  3000               	movlw	0
 16989  1436  00AA               	movwf	___lmul@product+2
 16990  1437  3000               	movlw	0
 16991  1438  00A9               	movwf	___lmul@product+1
 16992  1439  3000               	movlw	0
 16993  143A  00A8               	movwf	___lmul@product
 16994  143B                     l5606:
 16995  143B  1C20               	btfss	___lmul@multiplier,0
 16996  143C  2C3E               	goto	u5151
 16997  143D  2C3F               	goto	u5150
 16998  143E                     u5151:
 16999  143E  2C47               	goto	l5610
 17000  143F                     u5150:
 17001  143F                     l5608:
 17002  143F  0824               	movf	___lmul@multiplicand,w
 17003  1440  07A8               	addwf	___lmul@product,f
 17004  1441  0825               	movf	___lmul@multiplicand+1,w
 17005  1442  3DA9               	addwfc	___lmul@product+1,f
 17006  1443  0826               	movf	___lmul@multiplicand+2,w
 17007  1444  3DAA               	addwfc	___lmul@product+2,f
 17008  1445  0827               	movf	___lmul@multiplicand+3,w
 17009  1446  3DAB               	addwfc	___lmul@product+3,f
 17010  1447                     l5610:
 17011  1447  3001               	movlw	1
 17012  1448                     u5165:
 17013  1448  35A4               	lslf	___lmul@multiplicand,f
 17014  1449  0DA5               	rlf	___lmul@multiplicand+1,f
 17015  144A  0DA6               	rlf	___lmul@multiplicand+2,f
 17016  144B  0DA7               	rlf	___lmul@multiplicand+3,f
 17017  144C  0B89               	decfsz	9,f
 17018  144D  2C48               	goto	u5165
 17019  144E                     l5612:
 17020  144E  3001               	movlw	1
 17021  144F                     u5175:
 17022  144F  36A3               	lsrf	___lmul@multiplier+3,f
 17023  1450  0CA2               	rrf	___lmul@multiplier+2,f
 17024  1451  0CA1               	rrf	___lmul@multiplier+1,f
 17025  1452  0CA0               	rrf	___lmul@multiplier,f
 17026  1453  0B89               	decfsz	9,f
 17027  1454  2C4F               	goto	u5175
 17028  1455  0823               	movf	___lmul@multiplier+3,w
 17029  1456  0422               	iorwf	___lmul@multiplier+2,w
 17030  1457  0421               	iorwf	___lmul@multiplier+1,w
 17031  1458  0420               	iorwf	___lmul@multiplier,w
 17032  1459  1D03               	skipz
 17033  145A  2C5C               	goto	u5181
 17034  145B  2C5D               	goto	u5180
 17035  145C                     u5181:
 17036  145C  2C3B               	goto	l5606
 17037  145D                     u5180:
 17038  145D                     l5614:
 17039  145D  082B               	movf	___lmul@product+3,w
 17040  145E  00A3               	movwf	?___lmul+3
 17041  145F  082A               	movf	___lmul@product+2,w
 17042  1460  00A2               	movwf	?___lmul+2
 17043  1461  0829               	movf	___lmul@product+1,w
 17044  1462  00A1               	movwf	?___lmul+1
 17045  1463  0828               	movf	___lmul@product,w
 17046  1464  00A0               	movwf	?___lmul
 17047  1465                     l1855:
 17048  1465  0008               	return
 17049  1466                     __end_of___lmul:
 17050                           
 17051                           	psect	text40
 17052  1FA8                     __ptext40:	
 17053 ;; *************** function _TMR5_StopTimer *****************
 17054 ;; Defined at:
 17055 ;;		line 109 in file "mcc_generated_files/tmr5.c"
 17056 ;; Parameters:    Size  Location     Type
 17057 ;;		None
 17058 ;; Auto vars:     Size  Location     Type
 17059 ;;		None
 17060 ;; Return value:  Size  Location     Type
 17061 ;;                  1    wreg      void 
 17062 ;; Registers used:
 17063 ;;		None
 17064 ;; Tracked objects:
 17065 ;;		On entry : 0/0
 17066 ;;		On exit  : 0/0
 17067 ;;		Unchanged: 0/0
 17068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17073 ;;Total ram usage:        0 bytes
 17074 ;; Hardware stack levels used:    1
 17075 ;; Hardware stack levels required when called:    5
 17076 ;; This function calls:
 17077 ;;		Nothing
 17078 ;; This function is called by:
 17079 ;;		_cmd_mmp
 17080 ;; This function uses a non-reentrant model
 17081 ;;
 17082                           
 17083                           
 17084                           ;psect for function _TMR5_StopTimer
 17085  1FA8                     _TMR5_StopTimer:
 17086  1FA8                     l5230:	
 17087                           ;incstack = 0
 17088                           ; Regs used in _TMR5_StopTimer: []
 17089                           
 17090                           
 17091                           ;tmr5.c: 112: T5CONbits.TMR5ON = 0;
 17092  1FA8  0024               	movlb	4	; select bank4
 17093  1FA9  101A               	bcf	26,0	;volatile
 17094  1FAA                     l652:
 17095  1FAA  0008               	return
 17096  1FAB                     __end_of_TMR5_StopTimer:
 17097                           
 17098                           	psect	text41
 17099  1FA5                     __ptext41:	
 17100 ;; *************** function _TMR5_StartTimer *****************
 17101 ;; Defined at:
 17102 ;;		line 103 in file "mcc_generated_files/tmr5.c"
 17103 ;; Parameters:    Size  Location     Type
 17104 ;;		None
 17105 ;; Auto vars:     Size  Location     Type
 17106 ;;		None
 17107 ;; Return value:  Size  Location     Type
 17108 ;;                  1    wreg      void 
 17109 ;; Registers used:
 17110 ;;		None
 17111 ;; Tracked objects:
 17112 ;;		On entry : 0/0
 17113 ;;		On exit  : 0/0
 17114 ;;		Unchanged: 0/0
 17115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17120 ;;Total ram usage:        0 bytes
 17121 ;; Hardware stack levels used:    1
 17122 ;; Hardware stack levels required when called:    5
 17123 ;; This function calls:
 17124 ;;		Nothing
 17125 ;; This function is called by:
 17126 ;;		_cmd_mmp
 17127 ;; This function uses a non-reentrant model
 17128 ;;
 17129                           
 17130                           
 17131                           ;psect for function _TMR5_StartTimer
 17132  1FA5                     _TMR5_StartTimer:
 17133  1FA5                     l5228:	
 17134                           ;incstack = 0
 17135                           ; Regs used in _TMR5_StartTimer: []
 17136                           
 17137                           
 17138                           ;tmr5.c: 106: T5CONbits.TMR5ON = 1;
 17139  1FA5  0024               	movlb	4	; select bank4
 17140  1FA6  141A               	bsf	26,0	;volatile
 17141  1FA7                     l649:
 17142  1FA7  0008               	return
 17143  1FA8                     __end_of_TMR5_StartTimer:
 17144                           
 17145                           	psect	text42
 17146  1144                     __ptext42:	
 17147 ;; *************** function _sendOKMessage *****************
 17148 ;; Defined at:
 17149 ;;		line 813 in file "main.c"
 17150 ;; Parameters:    Size  Location     Type
 17151 ;;  cmd             1    wreg     unsigned char 
 17152 ;; Auto vars:     Size  Location     Type
 17153 ;;  cmd             1   10[BANK0 ] unsigned char 
 17154 ;;  bufw            4   11[BANK0 ] unsigned char [4]
 17155 ;; Return value:  Size  Location     Type
 17156 ;;                  1    wreg      void 
 17157 ;; Registers used:
 17158 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17159 ;; Tracked objects:
 17160 ;;		On entry : 0/0
 17161 ;;		On exit  : 0/0
 17162 ;;		Unchanged: 0/0
 17163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17165 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17166 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17167 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17168 ;;Total ram usage:        6 bytes
 17169 ;; Hardware stack levels used:    1
 17170 ;; Hardware stack levels required when called:    8
 17171 ;; This function calls:
 17172 ;;		_sendMessage
 17173 ;; This function is called by:
 17174 ;;		_cmd_sc
 17175 ;;		_cmd_mmp
 17176 ;;		_cmd_mta
 17177 ;;		_cmd_dac
 17178 ;;		_cmd_dtl
 17179 ;;		_cmd_aa
 17180 ;; This function uses a non-reentrant model
 17181 ;;
 17182                           
 17183                           
 17184                           ;psect for function _sendOKMessage
 17185  1144                     _sendOKMessage:
 17186                           
 17187                           ;incstack = 0
 17188                           ; Regs used in _sendOKMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17189                           ;sendOKMessage@cmd stored from wreg
 17190  1144  0020               	movlb	0	; select bank0
 17191  1145  00AA               	movwf	sendOKMessage@cmd
 17192  1146                     l5592:
 17193                           
 17194                           ;main.c: 814: uint8_t bufw[4];;main.c: 815: bufw[0] = (uint8_t)0xFD;
 17195  1146  30FD               	movlw	253
 17196  1147  00A9               	movwf	??_sendOKMessage
 17197  1148  0829               	movf	??_sendOKMessage,w
 17198  1149  00AB               	movwf	sendOKMessage@bufw
 17199                           
 17200                           ;main.c: 816: bufw[1] = (uint8_t)cmd;
 17201  114A  082A               	movf	sendOKMessage@cmd,w
 17202  114B  00A9               	movwf	??_sendOKMessage
 17203  114C  0829               	movf	??_sendOKMessage,w
 17204  114D  00AC               	movwf	sendOKMessage@bufw+1
 17205  114E                     l5594:
 17206                           
 17207                           ;main.c: 817: bufw[2] = (uint8_t)0;
 17208  114E  01AD               	clrf	sendOKMessage@bufw+2
 17209  114F                     l5596:
 17210                           
 17211                           ;main.c: 818: bufw[3] = (uint8_t)0xFE;
 17212  114F  30FE               	movlw	254
 17213  1150  00A9               	movwf	??_sendOKMessage
 17214  1151  0829               	movf	??_sendOKMessage,w
 17215  1152  00AE               	movwf	sendOKMessage@bufw+3
 17216  1153                     l5598:
 17217                           
 17218                           ;main.c: 820: sendMessage(4,bufw);
 17219  1153  3004               	movlw	4
 17220  1154  00A3               	movwf	sendMessage@num
 17221  1155  3000               	movlw	0
 17222  1156  00A4               	movwf	sendMessage@num+1
 17223  1157  302B               	movlw	(low (sendOKMessage@bufw| 0))& (0+255)
 17224  1158  00A9               	movwf	??_sendOKMessage
 17225  1159  0829               	movf	??_sendOKMessage,w
 17226  115A  00A5               	movwf	sendMessage@buffer
 17227  115B  3192  22CF  3191   	fcall	_sendMessage
 17228  115E                     l1508:
 17229  115E  0008               	return
 17230  115F                     __end_of_sendOKMessage:
 17231                           
 17232                           	psect	text43
 17233  11B3                     __ptext43:	
 17234 ;; *************** function _sendERRORMessage *****************
 17235 ;; Defined at:
 17236 ;;		line 823 in file "main.c"
 17237 ;; Parameters:    Size  Location     Type
 17238 ;;  cmd             1    wreg     unsigned char 
 17239 ;; Auto vars:     Size  Location     Type
 17240 ;;  cmd             1   10[BANK0 ] unsigned char 
 17241 ;;  bufw            4   11[BANK0 ] unsigned char [4]
 17242 ;; Return value:  Size  Location     Type
 17243 ;;                  1    wreg      void 
 17244 ;; Registers used:
 17245 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17246 ;; Tracked objects:
 17247 ;;		On entry : 0/0
 17248 ;;		On exit  : 0/0
 17249 ;;		Unchanged: 0/0
 17250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17252 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17253 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17254 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17255 ;;Total ram usage:        6 bytes
 17256 ;; Hardware stack levels used:    1
 17257 ;; Hardware stack levels required when called:    8
 17258 ;; This function calls:
 17259 ;;		_sendMessage
 17260 ;; This function is called by:
 17261 ;;		_cmd_sc
 17262 ;;		_cmd_mmp
 17263 ;;		_cmd_mta
 17264 ;;		_cmd_dac
 17265 ;;		_cmd_dtl
 17266 ;;		_cmd_aa
 17267 ;;		_cmd_trc
 17268 ;;		_cmd_tri
 17269 ;; This function uses a non-reentrant model
 17270 ;;
 17271                           
 17272                           
 17273                           ;psect for function _sendERRORMessage
 17274  11B3                     _sendERRORMessage:
 17275                           
 17276                           ;incstack = 0
 17277                           ; Regs used in _sendERRORMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17278                           ;sendERRORMessage@cmd stored from wreg
 17279  11B3  0020               	movlb	0	; select bank0
 17280  11B4  00AA               	movwf	sendERRORMessage@cmd
 17281  11B5                     l5600:
 17282                           
 17283                           ;main.c: 824: uint8_t bufw[4];;main.c: 825: bufw[0] = (uint8_t)0xFD;
 17284  11B5  30FD               	movlw	253
 17285  11B6  00A9               	movwf	??_sendERRORMessage
 17286  11B7  0829               	movf	??_sendERRORMessage,w
 17287  11B8  00AB               	movwf	sendERRORMessage@bufw
 17288                           
 17289                           ;main.c: 826: bufw[1] = (uint8_t)cmd;
 17290  11B9  082A               	movf	sendERRORMessage@cmd,w
 17291  11BA  00A9               	movwf	??_sendERRORMessage
 17292  11BB  0829               	movf	??_sendERRORMessage,w
 17293  11BC  00AC               	movwf	sendERRORMessage@bufw+1
 17294                           
 17295                           ;main.c: 827: bufw[2] = (uint8_t)0xFF;
 17296  11BD  30FF               	movlw	255
 17297  11BE  00A9               	movwf	??_sendERRORMessage
 17298  11BF  0829               	movf	??_sendERRORMessage,w
 17299  11C0  00AD               	movwf	sendERRORMessage@bufw+2
 17300                           
 17301                           ;main.c: 828: bufw[3] = (uint8_t)0xFE;
 17302  11C1  30FE               	movlw	254
 17303  11C2  00A9               	movwf	??_sendERRORMessage
 17304  11C3  0829               	movf	??_sendERRORMessage,w
 17305  11C4  00AE               	movwf	sendERRORMessage@bufw+3
 17306  11C5                     l5602:
 17307                           
 17308                           ;main.c: 830: sendMessage(4,bufw);
 17309  11C5  3004               	movlw	4
 17310  11C6  00A3               	movwf	sendMessage@num
 17311  11C7  3000               	movlw	0
 17312  11C8  00A4               	movwf	sendMessage@num+1
 17313  11C9  302B               	movlw	(low (sendERRORMessage@bufw| 0))& (0+255)
 17314  11CA  00A9               	movwf	??_sendERRORMessage
 17315  11CB  0829               	movf	??_sendERRORMessage,w
 17316  11CC  00A5               	movwf	sendMessage@buffer
 17317  11CD  3192  22CF  3191   	fcall	_sendMessage
 17318  11D0                     l1511:
 17319  11D0  0008               	return
 17320  11D1                     __end_of_sendERRORMessage:
 17321                           
 17322                           	psect	text44
 17323  12CF                     __ptext44:	
 17324 ;; *************** function _sendMessage *****************
 17325 ;; Defined at:
 17326 ;;		line 805 in file "main.c"
 17327 ;; Parameters:    Size  Location     Type
 17328 ;;  num             2    3[BANK0 ] int 
 17329 ;;  buffer          1    5[BANK0 ] PTR unsigned char 
 17330 ;;		 -> cmd_tri@buffEOM(1), cmd_tri@buffData(5), cmd_tri@buffInit(4), cmd_trc@buffEOM(1), 
 17331 ;;		 -> cmd_trc@buffData(5), cmd_trc@buffInit(3), cmd_ir@buff(7), cmd_ra@buff(9), 
 17332 ;;		 -> cmd_rp@buff(5), cmd_rtl@buff(5), cmd_rc@buff(6), sendERRORMessage@bufw(4), 
 17333 ;;		 -> sendOKMessage@bufw(4), 
 17334 ;; Auto vars:     Size  Location     Type
 17335 ;;  n               2    7[BANK0 ] int 
 17336 ;; Return value:  Size  Location     Type
 17337 ;;                  1    wreg      void 
 17338 ;; Registers used:
 17339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17340 ;; Tracked objects:
 17341 ;;		On entry : 0/0
 17342 ;;		On exit  : 0/0
 17343 ;;		Unchanged: 0/0
 17344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17345 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17346 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17347 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17348 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17349 ;;Total ram usage:        6 bytes
 17350 ;; Hardware stack levels used:    1
 17351 ;; Hardware stack levels required when called:    7
 17352 ;; This function calls:
 17353 ;;		_putch
 17354 ;; This function is called by:
 17355 ;;		_sendOKMessage
 17356 ;;		_sendERRORMessage
 17357 ;;		_cmd_rc
 17358 ;;		_cmd_rtl
 17359 ;;		_cmd_rp
 17360 ;;		_cmd_ra
 17361 ;;		_cmd_ir
 17362 ;;		_cmd_trc
 17363 ;;		_cmd_tri
 17364 ;; This function uses a non-reentrant model
 17365 ;;
 17366                           
 17367                           
 17368                           ;psect for function _sendMessage
 17369  12CF                     _sendMessage:
 17370  12CF                     l5018:	
 17371                           ;incstack = 0
 17372                           ; Regs used in _sendMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17373                           
 17374                           
 17375                           ;main.c: 806: int n = 0;
 17376  12CF  0020               	movlb	0	; select bank0
 17377  12D0  01A7               	clrf	sendMessage@n
 17378  12D1  01A8               	clrf	sendMessage@n+1
 17379                           
 17380                           ;main.c: 807: while(n<num){
 17381  12D2  2AE3               	goto	l5024
 17382  12D3                     l5020:
 17383                           
 17384                           ;main.c: 808: putch(buffer[n]);
 17385  12D3  0020               	movlb	0	; select bank0
 17386  12D4  0827               	movf	sendMessage@n,w
 17387  12D5  0725               	addwf	sendMessage@buffer,w
 17388  12D6  00A6               	movwf	??_sendMessage
 17389  12D7  0826               	movf	??_sendMessage,w
 17390  12D8  0086               	movwf	6
 17391  12D9  0187               	clrf	7
 17392  12DA  0801               	movf	1,w
 17393  12DB  3190  2000  3192   	fcall	_putch
 17394  12DE                     l5022:
 17395                           
 17396                           ;main.c: 809: n++;
 17397  12DE  3001               	movlw	1
 17398  12DF  0020               	movlb	0	; select bank0
 17399  12E0  07A7               	addwf	sendMessage@n,f
 17400  12E1  3000               	movlw	0
 17401  12E2  3DA8               	addwfc	sendMessage@n+1,f
 17402  12E3                     l5024:
 17403  12E3  0828               	movf	sendMessage@n+1,w
 17404  12E4  3A80               	xorlw	128
 17405  12E5  00A6               	movwf	??_sendMessage
 17406  12E6  0824               	movf	sendMessage@num+1,w
 17407  12E7  3A80               	xorlw	128
 17408  12E8  0226               	subwf	??_sendMessage,w
 17409  12E9  1D03               	skipz
 17410  12EA  2AED               	goto	u4375
 17411  12EB  0823               	movf	sendMessage@num,w
 17412  12EC  0227               	subwf	sendMessage@n,w
 17413  12ED                     u4375:
 17414  12ED  1C03               	skipc
 17415  12EE  2AF0               	goto	u4371
 17416  12EF  2AF1               	goto	u4370
 17417  12F0                     u4371:
 17418  12F0  2AD3               	goto	l5020
 17419  12F1                     u4370:
 17420  12F1                     l1505:
 17421  12F1  0008               	return
 17422  12F2                     __end_of_sendMessage:
 17423                           
 17424                           	psect	text45
 17425  1000                     __ptext45:	
 17426 ;; *************** function _putch *****************
 17427 ;; Defined at:
 17428 ;;		line 176 in file "mcc_generated_files/eusart.c"
 17429 ;; Parameters:    Size  Location     Type
 17430 ;;  txData          1    wreg     unsigned char 
 17431 ;; Auto vars:     Size  Location     Type
 17432 ;;  txData          1    2[BANK0 ] unsigned char 
 17433 ;; Return value:  Size  Location     Type
 17434 ;;                  1    wreg      void 
 17435 ;; Registers used:
 17436 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17437 ;; Tracked objects:
 17438 ;;		On entry : 0/0
 17439 ;;		On exit  : 0/0
 17440 ;;		Unchanged: 0/0
 17441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17443 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17445 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;Total ram usage:        1 bytes
 17447 ;; Hardware stack levels used:    1
 17448 ;; Hardware stack levels required when called:    6
 17449 ;; This function calls:
 17450 ;;		_EUSART_Write
 17451 ;; This function is called by:
 17452 ;;		_sendMessage
 17453 ;; This function uses a non-reentrant model
 17454 ;;
 17455                           
 17456                           
 17457                           ;psect for function _putch
 17458  1000                     _putch:
 17459                           
 17460                           ;incstack = 0
 17461                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17462                           ;putch@txData stored from wreg
 17463  1000  0020               	movlb	0	; select bank0
 17464  1001  00A2               	movwf	putch@txData
 17465  1002                     l4694:
 17466                           
 17467                           ;eusart.c: 178: EUSART_Write(txData);
 17468  1002  0822               	movf	putch@txData,w
 17469  1003  3194  2404  3190   	fcall	_EUSART_Write
 17470  1006                     l915:
 17471  1006  0008               	return
 17472  1007                     __end_of_putch:
 17473                           
 17474                           	psect	text46
 17475  1404                     __ptext46:	
 17476 ;; *************** function _EUSART_Write *****************
 17477 ;; Defined at:
 17478 ;;		line 148 in file "mcc_generated_files/eusart.c"
 17479 ;; Parameters:    Size  Location     Type
 17480 ;;  txData          1    wreg     unsigned char 
 17481 ;; Auto vars:     Size  Location     Type
 17482 ;;  txData          1    1[BANK0 ] unsigned char 
 17483 ;; Return value:  Size  Location     Type
 17484 ;;                  1    wreg      void 
 17485 ;; Registers used:
 17486 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17487 ;; Tracked objects:
 17488 ;;		On entry : 0/0
 17489 ;;		On exit  : 0/0
 17490 ;;		Unchanged: 0/0
 17491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17493 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17495 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17496 ;;Total ram usage:        2 bytes
 17497 ;; Hardware stack levels used:    1
 17498 ;; Hardware stack levels required when called:    5
 17499 ;; This function calls:
 17500 ;;		Nothing
 17501 ;; This function is called by:
 17502 ;;		_putch
 17503 ;; This function uses a non-reentrant model
 17504 ;;
 17505                           
 17506                           
 17507                           ;psect for function _EUSART_Write
 17508  1404                     _EUSART_Write:
 17509                           
 17510                           ;incstack = 0
 17511                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 17512                           ;EUSART_Write@txData stored from wreg
 17513  1404  0020               	movlb	0	; select bank0
 17514  1405  00A1               	movwf	EUSART_Write@txData
 17515  1406                     l4628:
 17516  1406                     l4630:	
 17517                           ;eusart.c: 150: while(0 == eusartTxBufferRemaining)
 17518                           
 17519  1406  0021               	movlb	1	; select bank1
 17520  1407  0865               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 17521  1408  1903               	btfsc	3,2
 17522  1409  2C0B               	goto	u3431
 17523  140A  2C0C               	goto	u3430
 17524  140B                     u3431:
 17525  140B  2C06               	goto	l4630
 17526  140C                     u3430:
 17527  140C                     l905:
 17528                           
 17529                           ;eusart.c: 152: };eusart.c: 154: if(0 == PIE3bits.TXIE)
 17530  140C  002E               	movlb	14	; select bank14
 17531  140D  1A19               	btfsc	25,4	;volatile
 17532  140E  2C10               	goto	u3441
 17533  140F  2C11               	goto	u3440
 17534  1410                     u3441:
 17535  1410  2C16               	goto	l906
 17536  1411                     u3440:
 17537  1411                     l4632:
 17538                           
 17539                           ;eusart.c: 155: {;eusart.c: 156: TX1REG = txData;
 17540  1411  0020               	movlb	0	; select bank0
 17541  1412  0821               	movf	EUSART_Write@txData,w
 17542  1413  0022               	movlb	2	; select bank2
 17543  1414  009A               	movwf	26	;volatile
 17544                           
 17545                           ;eusart.c: 157: }
 17546  1415  2C2F               	goto	l4644
 17547  1416                     l906:
 17548                           
 17549                           ;eusart.c: 158: else;eusart.c: 159: {;eusart.c: 160: PIE3bits.TXIE = 0;
 17550  1416  1219               	bcf	25,4	;volatile
 17551  1417                     l4634:
 17552                           
 17553                           ;eusart.c: 161: eusartTxBuffer[eusartTxHead++] = txData;
 17554  1417  0020               	movlb	0	; select bank0
 17555  1418  0821               	movf	EUSART_Write@txData,w
 17556  1419  00A0               	movwf	??_EUSART_Write
 17557  141A  086D               	movf	_eusartTxHead,w
 17558  141B  3EA0               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 17559  141C  0086               	movwf	6
 17560  141D  3001               	movlw	1	; select bank3/4
 17561  141E  0087               	movwf	7
 17562  141F  0820               	movf	??_EUSART_Write,w
 17563  1420  0081               	movwf	1
 17564  1421                     l4636:
 17565  1421  3001               	movlw	1
 17566  1422  00A0               	movwf	??_EUSART_Write
 17567  1423  0820               	movf	??_EUSART_Write,w
 17568  1424  07ED               	addwf	_eusartTxHead,f	;volatile
 17569  1425                     l4638:
 17570                           
 17571                           ;eusart.c: 162: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 17572  1425  3040               	movlw	64
 17573  1426  026D               	subwf	_eusartTxHead,w	;volatile
 17574  1427  1C03               	skipc
 17575  1428  2C2A               	goto	u3451
 17576  1429  2C2B               	goto	u3450
 17577  142A                     u3451:
 17578  142A  2C2C               	goto	l4642
 17579  142B                     u3450:
 17580  142B                     l4640:
 17581                           
 17582                           ;eusart.c: 163: {;eusart.c: 164: eusartTxHead = 0;
 17583  142B  01ED               	clrf	_eusartTxHead	;volatile
 17584  142C                     l4642:
 17585                           
 17586                           ;eusart.c: 165: };eusart.c: 166: eusartTxBufferRemaining--;
 17587  142C  3001               	movlw	1
 17588  142D  0021               	movlb	1	; select bank1
 17589  142E  02E5               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 17590  142F                     l4644:
 17591                           
 17592                           ;eusart.c: 167: };eusart.c: 168: PIE3bits.TXIE = 1;
 17593  142F  002E               	movlb	14	; select bank14
 17594  1430  1619               	bsf	25,4	;volatile
 17595  1431                     l909:
 17596  1431  0008               	return
 17597  1432                     __end_of_EUSART_Write:
 17598                           
 17599                           	psect	text47
 17600  1FB1                     __ptext47:	
 17601 ;; *************** function _TMR2_StartTimer *****************
 17602 ;; Defined at:
 17603 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 17604 ;; Parameters:    Size  Location     Type
 17605 ;;		None
 17606 ;; Auto vars:     Size  Location     Type
 17607 ;;		None
 17608 ;; Return value:  Size  Location     Type
 17609 ;;                  1    wreg      void 
 17610 ;; Registers used:
 17611 ;;		status,2, status,0, pclath, cstack
 17612 ;; Tracked objects:
 17613 ;;		On entry : 0/0
 17614 ;;		On exit  : 0/0
 17615 ;;		Unchanged: 0/0
 17616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17621 ;;Total ram usage:        0 bytes
 17622 ;; Hardware stack levels used:    1
 17623 ;; Hardware stack levels required when called:    6
 17624 ;; This function calls:
 17625 ;;		_TMR2_Start
 17626 ;; This function is called by:
 17627 ;;		_main
 17628 ;; This function uses a non-reentrant model
 17629 ;;
 17630                           
 17631                           
 17632                           ;psect for function _TMR2_StartTimer
 17633  1FB1                     _TMR2_StartTimer:
 17634  1FB1                     l5670:	
 17635                           ;incstack = 0
 17636                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 17637                           
 17638                           
 17639                           ;tmr2.c: 108: TMR2_Start();
 17640  1FB1  319F  27A2  319F   	fcall	_TMR2_Start
 17641  1FB4                     l732:
 17642  1FB4  0008               	return
 17643  1FB5                     __end_of_TMR2_StartTimer:
 17644                           
 17645                           	psect	text48
 17646  1FA2                     __ptext48:	
 17647 ;; *************** function _TMR2_Start *****************
 17648 ;; Defined at:
 17649 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 17650 ;; Parameters:    Size  Location     Type
 17651 ;;		None
 17652 ;; Auto vars:     Size  Location     Type
 17653 ;;		None
 17654 ;; Return value:  Size  Location     Type
 17655 ;;                  1    wreg      void 
 17656 ;; Registers used:
 17657 ;;		None
 17658 ;; Tracked objects:
 17659 ;;		On entry : 0/0
 17660 ;;		On exit  : 0/0
 17661 ;;		Unchanged: 0/0
 17662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17667 ;;Total ram usage:        0 bytes
 17668 ;; Hardware stack levels used:    1
 17669 ;; Hardware stack levels required when called:    5
 17670 ;; This function calls:
 17671 ;;		Nothing
 17672 ;; This function is called by:
 17673 ;;		_TMR2_StartTimer
 17674 ;; This function uses a non-reentrant model
 17675 ;;
 17676                           
 17677                           
 17678                           ;psect for function _TMR2_Start
 17679  1FA2                     _TMR2_Start:
 17680  1FA2                     l5246:	
 17681                           ;incstack = 0
 17682                           ; Regs used in _TMR2_Start: []
 17683                           
 17684                           
 17685                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 17686  1FA2  0025               	movlb	5	; select bank5
 17687  1FA3  178E               	bsf	14,7	;volatile
 17688  1FA4                     l729:
 17689  1FA4  0008               	return
 17690  1FA5                     __end_of_TMR2_Start:
 17691                           
 17692                           	psect	text49
 17693  122E                     __ptext49:	
 17694 ;; *************** function _SYSTEM_Initialize *****************
 17695 ;; Defined at:
 17696 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17697 ;; Parameters:    Size  Location     Type
 17698 ;;		None
 17699 ;; Auto vars:     Size  Location     Type
 17700 ;;		None
 17701 ;; Return value:  Size  Location     Type
 17702 ;;                  1    wreg      void 
 17703 ;; Registers used:
 17704 ;;		wreg, status,2, status,0, pclath, cstack
 17705 ;; Tracked objects:
 17706 ;;		On entry : 0/0
 17707 ;;		On exit  : 0/0
 17708 ;;		Unchanged: 0/0
 17709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17714 ;;Total ram usage:        0 bytes
 17715 ;; Hardware stack levels used:    1
 17716 ;; Hardware stack levels required when called:    7
 17717 ;; This function calls:
 17718 ;;		_ADCC_Initialize
 17719 ;;		_EUSART_Initialize
 17720 ;;		_EXT_INT_Initialize
 17721 ;;		_OSCILLATOR_Initialize
 17722 ;;		_PIN_MANAGER_Initialize
 17723 ;;		_PMD_Initialize
 17724 ;;		_PWM6_Initialize
 17725 ;;		_TMR1_Initialize
 17726 ;;		_TMR2_Initialize
 17727 ;;		_TMR5_Initialize
 17728 ;; This function is called by:
 17729 ;;		_main
 17730 ;; This function uses a non-reentrant model
 17731 ;;
 17732                           
 17733                           
 17734                           ;psect for function _SYSTEM_Initialize
 17735  122E                     _SYSTEM_Initialize:
 17736  122E                     l5618:	
 17737                           ;incstack = 0
 17738                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17739                           
 17740                           
 17741                           ;mcc.c: 52: PMD_Initialize();
 17742  122E  319F  27CB  3192   	fcall	_PMD_Initialize
 17743  1231                     l5620:
 17744                           
 17745                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 17746  1231  3196  263C  3192   	fcall	_PIN_MANAGER_Initialize
 17747  1234                     l5622:
 17748                           
 17749                           ;mcc.c: 54: OSCILLATOR_Initialize();
 17750  1234  319F  27F7  3192   	fcall	_OSCILLATOR_Initialize
 17751  1237                     l5624:
 17752                           
 17753                           ;mcc.c: 55: PWM6_Initialize();
 17754  1237  3190  204D  3192   	fcall	_PWM6_Initialize
 17755  123A                     l5626:
 17756                           
 17757                           ;mcc.c: 56: ADCC_Initialize();
 17758  123A  3190  20FA  3192   	fcall	_ADCC_Initialize
 17759  123D                     l5628:
 17760                           
 17761                           ;mcc.c: 57: TMR5_Initialize();
 17762  123D  3192  220F  3192   	fcall	_TMR5_Initialize
 17763  1240                     l5630:
 17764                           
 17765                           ;mcc.c: 58: TMR2_Initialize();
 17766  1240  3190  2068  3192   	fcall	_TMR2_Initialize
 17767  1243                     l5632:
 17768                           
 17769                           ;mcc.c: 59: TMR1_Initialize();
 17770  1243  3191  21F0  3192   	fcall	_TMR1_Initialize
 17771  1246                     l5634:
 17772                           
 17773                           ;mcc.c: 60: EXT_INT_Initialize();
 17774  1246  3190  205A  3192   	fcall	_EXT_INT_Initialize
 17775  1249                     l5636:
 17776                           
 17777                           ;mcc.c: 61: EUSART_Initialize();
 17778  1249  3193  23D6  3192   	fcall	_EUSART_Initialize
 17779  124C                     l184:
 17780  124C  0008               	return
 17781  124D                     __end_of_SYSTEM_Initialize:
 17782                           
 17783                           	psect	text50
 17784  120F                     __ptext50:	
 17785 ;; *************** function _TMR5_Initialize *****************
 17786 ;; Defined at:
 17787 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 17788 ;; Parameters:    Size  Location     Type
 17789 ;;		None
 17790 ;; Auto vars:     Size  Location     Type
 17791 ;;		None
 17792 ;; Return value:  Size  Location     Type
 17793 ;;                  1    wreg      void 
 17794 ;; Registers used:
 17795 ;;		wreg, status,2, status,0, pclath, cstack
 17796 ;; Tracked objects:
 17797 ;;		On entry : 0/0
 17798 ;;		On exit  : 0/0
 17799 ;;		Unchanged: 0/0
 17800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17805 ;;Total ram usage:        0 bytes
 17806 ;; Hardware stack levels used:    1
 17807 ;; Hardware stack levels required when called:    6
 17808 ;; This function calls:
 17809 ;;		_TMR5_SetInterruptHandler
 17810 ;; This function is called by:
 17811 ;;		_SYSTEM_Initialize
 17812 ;; This function uses a non-reentrant model
 17813 ;;
 17814                           
 17815                           
 17816                           ;psect for function _TMR5_Initialize
 17817  120F                     _TMR5_Initialize:
 17818  120F                     l5128:	
 17819                           ;incstack = 0
 17820                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17821                           
 17822                           
 17823                           ;tmr5.c: 69: T5GCON = 0x00;
 17824  120F  0024               	movlb	4	; select bank4
 17825  1210  019B               	clrf	27	;volatile
 17826                           
 17827                           ;tmr5.c: 72: T5GATE = 0x00;
 17828  1211  019C               	clrf	28	;volatile
 17829  1212                     l5130:
 17830                           
 17831                           ;tmr5.c: 75: T5CLK = 0x04;
 17832  1212  3004               	movlw	4
 17833  1213  009D               	movwf	29	;volatile
 17834  1214                     l5132:
 17835                           
 17836                           ;tmr5.c: 78: TMR5H = 0xD2;
 17837  1214  30D2               	movlw	210
 17838  1215  0099               	movwf	25	;volatile
 17839  1216                     l5134:
 17840                           
 17841                           ;tmr5.c: 81: TMR5L = 0x97;
 17842  1216  3097               	movlw	151
 17843  1217  0098               	movwf	24	;volatile
 17844  1218                     l5136:
 17845                           
 17846                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 17847  1218  0819               	movf	25,w	;volatile
 17848  1219  0021               	movlb	1	; select bank1
 17849  121A  00E0               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 17850  121B  0024               	movlb	4	; select bank4
 17851  121C  0818               	movf	24,w	;volatile
 17852  121D  0021               	movlb	1	; select bank1
 17853  121E  00DF               	movwf	_timer5ReloadVal^(0+128)	;volatile
 17854  121F                     l5138:
 17855                           
 17856                           ;tmr5.c: 87: PIR4bits.TMR5IF = 0;
 17857  121F  002E               	movlb	14	; select bank14
 17858  1220  1210               	bcf	16,4	;volatile
 17859  1221                     l5140:
 17860                           
 17861                           ;tmr5.c: 90: PIE4bits.TMR5IE = 1;
 17862  1221  161A               	bsf	26,4	;volatile
 17863  1222                     l5142:
 17864                           
 17865                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 17866  1222  3000               	movlw	low _TMR5_DefaultInterruptHandler
 17867  1223  0020               	movlb	0	; select bank0
 17868  1224  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler
 17869  1225  3008               	movlw	high _TMR5_DefaultInterruptHandler
 17870  1226  00A1               	movwf	TMR5_SetInterruptHandler@InterruptHandler+1
 17871  1227  3190  2010  3192   	fcall	_TMR5_SetInterruptHandler
 17872  122A                     l5144:
 17873                           
 17874                           ;tmr5.c: 96: T5CON = 0x15;
 17875  122A  3015               	movlw	21
 17876  122B  0024               	movlb	4	; select bank4
 17877  122C  009A               	movwf	26	;volatile
 17878  122D                     l643:
 17879  122D  0008               	return
 17880  122E                     __end_of_TMR5_Initialize:
 17881                           
 17882                           	psect	text51
 17883  1010                     __ptext51:	
 17884 ;; *************** function _TMR5_SetInterruptHandler *****************
 17885 ;; Defined at:
 17886 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 17887 ;; Parameters:    Size  Location     Type
 17888 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 17889 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
 17890 ;; Auto vars:     Size  Location     Type
 17891 ;;		None
 17892 ;; Return value:  Size  Location     Type
 17893 ;;                  1    wreg      void 
 17894 ;; Registers used:
 17895 ;;		wreg
 17896 ;; Tracked objects:
 17897 ;;		On entry : 0/0
 17898 ;;		On exit  : 0/0
 17899 ;;		Unchanged: 0/0
 17900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17901 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17904 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17905 ;;Total ram usage:        2 bytes
 17906 ;; Hardware stack levels used:    1
 17907 ;; Hardware stack levels required when called:    5
 17908 ;; This function calls:
 17909 ;;		Nothing
 17910 ;; This function is called by:
 17911 ;;		_TMR5_Initialize
 17912 ;;		_main
 17913 ;; This function uses a non-reentrant model
 17914 ;;
 17915                           
 17916                           
 17917                           ;psect for function _TMR5_SetInterruptHandler
 17918  1010                     _TMR5_SetInterruptHandler:
 17919  1010                     l4818:	
 17920                           ;incstack = 0
 17921                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
 17922                           
 17923                           
 17924                           ;tmr5.c: 183: TMR5_InterruptHandler = InterruptHandler;
 17925  1010  0020               	movlb	0	; select bank0
 17926  1011  0821               	movf	TMR5_SetInterruptHandler@InterruptHandler+1,w
 17927  1012  0021               	movlb	1	; select bank1
 17928  1013  00DE               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
 17929  1014  0020               	movlb	0	; select bank0
 17930  1015  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler,w
 17931  1016  0021               	movlb	1	; select bank1
 17932  1017  00DD               	movwf	_TMR5_InterruptHandler^(0+128)
 17933  1018                     l676:
 17934  1018  0008               	return
 17935  1019                     __end_of_TMR5_SetInterruptHandler:
 17936                           
 17937                           	psect	text52
 17938  1068                     __ptext52:	
 17939 ;; *************** function _TMR2_Initialize *****************
 17940 ;; Defined at:
 17941 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;		None
 17944 ;; Auto vars:     Size  Location     Type
 17945 ;;		None
 17946 ;; Return value:  Size  Location     Type
 17947 ;;                  1    wreg      void 
 17948 ;; Registers used:
 17949 ;;		wreg, status,2
 17950 ;; Tracked objects:
 17951 ;;		On entry : 0/0
 17952 ;;		On exit  : 0/0
 17953 ;;		Unchanged: 0/0
 17954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17959 ;;Total ram usage:        0 bytes
 17960 ;; Hardware stack levels used:    1
 17961 ;; Hardware stack levels required when called:    5
 17962 ;; This function calls:
 17963 ;;		Nothing
 17964 ;; This function is called by:
 17965 ;;		_SYSTEM_Initialize
 17966 ;; This function uses a non-reentrant model
 17967 ;;
 17968                           
 17969                           
 17970                           ;psect for function _TMR2_Initialize
 17971  1068                     _TMR2_Initialize:
 17972  1068                     l5146:	
 17973                           ;incstack = 0
 17974                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 17975                           
 17976                           
 17977                           ;tmr2.c: 67: T2CLKCON = 0x01;
 17978  1068  3001               	movlw	1
 17979  1069  0025               	movlb	5	; select bank5
 17980  106A  0090               	movwf	16	;volatile
 17981  106B                     l5148:
 17982                           
 17983                           ;tmr2.c: 70: T2HLT = 0x00;
 17984  106B  018F               	clrf	15	;volatile
 17985  106C                     l5150:
 17986                           
 17987                           ;tmr2.c: 73: T2RST = 0x00;
 17988  106C  0191               	clrf	17	;volatile
 17989                           
 17990                           ;tmr2.c: 76: T2PR = 0xFF;
 17991  106D  30FF               	movlw	255
 17992  106E  008D               	movwf	13	;volatile
 17993  106F                     l5152:
 17994                           
 17995                           ;tmr2.c: 79: T2TMR = 0x00;
 17996  106F  018C               	clrf	12	;volatile
 17997  1070                     l5154:
 17998                           
 17999                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 18000  1070  002E               	movlb	14	; select bank14
 18001  1071  1090               	bcf	16,1	;volatile
 18002  1072                     l5156:
 18003                           
 18004                           ;tmr2.c: 85: T2CON = 0x80;
 18005  1072  3080               	movlw	128
 18006  1073  0025               	movlb	5	; select bank5
 18007  1074  008E               	movwf	14	;volatile
 18008  1075                     l720:
 18009  1075  0008               	return
 18010  1076                     __end_of_TMR2_Initialize:
 18011                           
 18012                           	psect	text53
 18013  11F0                     __ptext53:	
 18014 ;; *************** function _TMR1_Initialize *****************
 18015 ;; Defined at:
 18016 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 18017 ;; Parameters:    Size  Location     Type
 18018 ;;		None
 18019 ;; Auto vars:     Size  Location     Type
 18020 ;;		None
 18021 ;; Return value:  Size  Location     Type
 18022 ;;                  1    wreg      void 
 18023 ;; Registers used:
 18024 ;;		wreg, status,2, status,0, pclath, cstack
 18025 ;; Tracked objects:
 18026 ;;		On entry : 0/0
 18027 ;;		On exit  : 0/0
 18028 ;;		Unchanged: 0/0
 18029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18034 ;;Total ram usage:        0 bytes
 18035 ;; Hardware stack levels used:    1
 18036 ;; Hardware stack levels required when called:    6
 18037 ;; This function calls:
 18038 ;;		_TMR1_SetInterruptHandler
 18039 ;; This function is called by:
 18040 ;;		_SYSTEM_Initialize
 18041 ;; This function uses a non-reentrant model
 18042 ;;
 18043                           
 18044                           
 18045                           ;psect for function _TMR1_Initialize
 18046  11F0                     _TMR1_Initialize:
 18047  11F0                     l5158:	
 18048                           ;incstack = 0
 18049                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18050                           
 18051                           
 18052                           ;tmr1.c: 69: T1GCON = 0x00;
 18053  11F0  0024               	movlb	4	; select bank4
 18054  11F1  018F               	clrf	15	;volatile
 18055                           
 18056                           ;tmr1.c: 72: T1GATE = 0x00;
 18057  11F2  0190               	clrf	16	;volatile
 18058  11F3                     l5160:
 18059                           
 18060                           ;tmr1.c: 75: T1CLK = 0x04;
 18061  11F3  3004               	movlw	4
 18062  11F4  0091               	movwf	17	;volatile
 18063  11F5                     l5162:
 18064                           
 18065                           ;tmr1.c: 78: TMR1H = 0x86;
 18066  11F5  3086               	movlw	134
 18067  11F6  008D               	movwf	13	;volatile
 18068  11F7                     l5164:
 18069                           
 18070                           ;tmr1.c: 81: TMR1L = 0xE8;
 18071  11F7  30E8               	movlw	232
 18072  11F8  008C               	movwf	12	;volatile
 18073  11F9                     l5166:
 18074                           
 18075                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 18076  11F9  080D               	movf	13,w	;volatile
 18077  11FA  0021               	movlb	1	; select bank1
 18078  11FB  00E4               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 18079  11FC  0024               	movlb	4	; select bank4
 18080  11FD  080C               	movf	12,w	;volatile
 18081  11FE  0021               	movlb	1	; select bank1
 18082  11FF  00E3               	movwf	_timer1ReloadVal^(0+128)	;volatile
 18083  1200                     l5168:
 18084                           
 18085                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 18086  1200  002E               	movlb	14	; select bank14
 18087  1201  1010               	bcf	16,0	;volatile
 18088  1202                     l5170:
 18089                           
 18090                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 18091  1202  141A               	bsf	26,0	;volatile
 18092  1203                     l5172:
 18093                           
 18094                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 18095  1203  309B               	movlw	low _TMR1_DefaultInterruptHandler
 18096  1204  0020               	movlb	0	; select bank0
 18097  1205  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 18098  1206  301F               	movlw	high _TMR1_DefaultInterruptHandler
 18099  1207  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 18100  1208  3190  2007  3191   	fcall	_TMR1_SetInterruptHandler
 18101  120B                     l5174:
 18102                           
 18103                           ;tmr1.c: 96: T1CON = 0x05;
 18104  120B  3005               	movlw	5
 18105  120C  0024               	movlb	4	; select bank4
 18106  120D  008E               	movwf	14	;volatile
 18107  120E                     l415:
 18108  120E  0008               	return
 18109  120F                     __end_of_TMR1_Initialize:
 18110                           
 18111                           	psect	text54
 18112  1007                     __ptext54:	
 18113 ;; *************** function _TMR1_SetInterruptHandler *****************
 18114 ;; Defined at:
 18115 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 18116 ;; Parameters:    Size  Location     Type
 18117 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 18118 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
 18119 ;; Auto vars:     Size  Location     Type
 18120 ;;		None
 18121 ;; Return value:  Size  Location     Type
 18122 ;;                  1    wreg      void 
 18123 ;; Registers used:
 18124 ;;		wreg
 18125 ;; Tracked objects:
 18126 ;;		On entry : 0/0
 18127 ;;		On exit  : 0/0
 18128 ;;		Unchanged: 0/0
 18129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18133 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18134 ;;Total ram usage:        2 bytes
 18135 ;; Hardware stack levels used:    1
 18136 ;; Hardware stack levels required when called:    5
 18137 ;; This function calls:
 18138 ;;		Nothing
 18139 ;; This function is called by:
 18140 ;;		_TMR1_Initialize
 18141 ;;		_main
 18142 ;; This function uses a non-reentrant model
 18143 ;;
 18144                           
 18145                           
 18146                           ;psect for function _TMR1_SetInterruptHandler
 18147  1007                     _TMR1_SetInterruptHandler:
 18148  1007                     l4802:	
 18149                           ;incstack = 0
 18150                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 18151                           
 18152                           
 18153                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 18154  1007  0020               	movlb	0	; select bank0
 18155  1008  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 18156  1009  0021               	movlb	1	; select bank1
 18157  100A  00E2               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 18158  100B  0020               	movlb	0	; select bank0
 18159  100C  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 18160  100D  0021               	movlb	1	; select bank1
 18161  100E  00E1               	movwf	_TMR1_InterruptHandler^(0+128)
 18162  100F                     l445:
 18163  100F  0008               	return
 18164  1010                     __end_of_TMR1_SetInterruptHandler:
 18165                           
 18166                           	psect	text55
 18167  104D                     __ptext55:	
 18168 ;; *************** function _PWM6_Initialize *****************
 18169 ;; Defined at:
 18170 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 18171 ;; Parameters:    Size  Location     Type
 18172 ;;		None
 18173 ;; Auto vars:     Size  Location     Type
 18174 ;;		None
 18175 ;; Return value:  Size  Location     Type
 18176 ;;                  1    wreg      void 
 18177 ;; Registers used:
 18178 ;;		wreg, status,2, status,0
 18179 ;; Tracked objects:
 18180 ;;		On entry : 0/0
 18181 ;;		On exit  : 0/0
 18182 ;;		Unchanged: 0/0
 18183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18188 ;;Total ram usage:        0 bytes
 18189 ;; Hardware stack levels used:    1
 18190 ;; Hardware stack levels required when called:    5
 18191 ;; This function calls:
 18192 ;;		Nothing
 18193 ;; This function is called by:
 18194 ;;		_SYSTEM_Initialize
 18195 ;; This function uses a non-reentrant model
 18196 ;;
 18197                           
 18198                           
 18199                           ;psect for function _PWM6_Initialize
 18200  104D                     _PWM6_Initialize:
 18201  104D                     l5118:	
 18202                           ;incstack = 0
 18203                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 18204                           
 18205                           
 18206                           ;pwm6.c: 62: PWM6CON = 0x80;
 18207  104D  3080               	movlw	128
 18208  104E  0027               	movlb	7	; select bank7
 18209  104F  008E               	movwf	14	;volatile
 18210                           
 18211                           ;pwm6.c: 65: PWM6DCH = 0xFF;
 18212  1050  30FF               	movlw	255
 18213  1051  008D               	movwf	13	;volatile
 18214                           
 18215                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 18216  1052  30C0               	movlw	192
 18217  1053  008C               	movwf	12	;volatile
 18218  1054                     l5120:
 18219                           
 18220                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 18221  1054  0024               	movlb	4	; select bank4
 18222  1055  081F               	movf	31,w	;volatile
 18223  1056  39F3               	andlw	-13
 18224  1057  3804               	iorlw	4
 18225  1058  009F               	movwf	31	;volatile
 18226  1059                     l690:
 18227  1059  0008               	return
 18228  105A                     __end_of_PWM6_Initialize:
 18229                           
 18230                           	psect	text56
 18231  1FCB                     __ptext56:	
 18232 ;; *************** function _PMD_Initialize *****************
 18233 ;; Defined at:
 18234 ;;		line 78 in file "mcc_generated_files/mcc.c"
 18235 ;; Parameters:    Size  Location     Type
 18236 ;;		None
 18237 ;; Auto vars:     Size  Location     Type
 18238 ;;		None
 18239 ;; Return value:  Size  Location     Type
 18240 ;;                  1    wreg      void 
 18241 ;; Registers used:
 18242 ;;		status,2
 18243 ;; Tracked objects:
 18244 ;;		On entry : 0/0
 18245 ;;		On exit  : 0/0
 18246 ;;		Unchanged: 0/0
 18247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18252 ;;Total ram usage:        0 bytes
 18253 ;; Hardware stack levels used:    1
 18254 ;; Hardware stack levels required when called:    5
 18255 ;; This function calls:
 18256 ;;		Nothing
 18257 ;; This function is called by:
 18258 ;;		_SYSTEM_Initialize
 18259 ;; This function uses a non-reentrant model
 18260 ;;
 18261                           
 18262                           
 18263                           ;psect for function _PMD_Initialize
 18264  1FCB                     _PMD_Initialize:
 18265  1FCB                     l5108:	
 18266                           ;incstack = 0
 18267                           ; Regs used in _PMD_Initialize: [status,2]
 18268                           
 18269                           
 18270                           ;mcc.c: 81: PMD0 = 0x00;
 18271  1FCB  002F               	movlb	15	; select bank15
 18272  1FCC  0196               	clrf	22	;volatile
 18273                           
 18274                           ;mcc.c: 83: PMD1 = 0x00;
 18275  1FCD  0197               	clrf	23	;volatile
 18276                           
 18277                           ;mcc.c: 85: PMD2 = 0x00;
 18278  1FCE  0198               	clrf	24	;volatile
 18279                           
 18280                           ;mcc.c: 87: PMD3 = 0x00;
 18281  1FCF  0199               	clrf	25	;volatile
 18282                           
 18283                           ;mcc.c: 89: PMD4 = 0x00;
 18284  1FD0  019A               	clrf	26	;volatile
 18285                           
 18286                           ;mcc.c: 91: PMD5 = 0x00;
 18287  1FD1  019B               	clrf	27	;volatile
 18288  1FD2                     l190:
 18289  1FD2  0008               	return
 18290  1FD3                     __end_of_PMD_Initialize:
 18291                           
 18292                           	psect	text57
 18293  163C                     __ptext57:	
 18294 ;; *************** function _PIN_MANAGER_Initialize *****************
 18295 ;; Defined at:
 18296 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 18297 ;; Parameters:    Size  Location     Type
 18298 ;;		None
 18299 ;; Auto vars:     Size  Location     Type
 18300 ;;		None
 18301 ;; Return value:  Size  Location     Type
 18302 ;;                  1    wreg      void 
 18303 ;; Registers used:
 18304 ;;		wreg, status,2
 18305 ;; Tracked objects:
 18306 ;;		On entry : 0/0
 18307 ;;		On exit  : 0/0
 18308 ;;		Unchanged: 0/0
 18309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18314 ;;Total ram usage:        0 bytes
 18315 ;; Hardware stack levels used:    1
 18316 ;; Hardware stack levels required when called:    5
 18317 ;; This function calls:
 18318 ;;		Nothing
 18319 ;; This function is called by:
 18320 ;;		_SYSTEM_Initialize
 18321 ;; This function uses a non-reentrant model
 18322 ;;
 18323                           
 18324                           
 18325                           ;psect for function _PIN_MANAGER_Initialize
 18326  163C                     _PIN_MANAGER_Initialize:
 18327  163C                     l5060:	
 18328                           ;incstack = 0
 18329                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 18330                           
 18331                           
 18332                           ;pin_manager.c: 62: LATE = 0x00;
 18333  163C  0020               	movlb	0	; select bank0
 18334  163D  019A               	clrf	26	;volatile
 18335                           
 18336                           ;pin_manager.c: 63: LATD = 0x00;
 18337  163E  0199               	clrf	25	;volatile
 18338                           
 18339                           ;pin_manager.c: 64: LATA = 0x00;
 18340  163F  0196               	clrf	22	;volatile
 18341                           
 18342                           ;pin_manager.c: 65: LATB = 0x00;
 18343  1640  0197               	clrf	23	;volatile
 18344                           
 18345                           ;pin_manager.c: 66: LATC = 0x00;
 18346  1641  0198               	clrf	24	;volatile
 18347  1642                     l5062:
 18348                           
 18349                           ;pin_manager.c: 71: TRISE = 0x07;
 18350  1642  3007               	movlw	7
 18351  1643  0095               	movwf	21	;volatile
 18352  1644                     l5064:
 18353                           
 18354                           ;pin_manager.c: 72: TRISA = 0x0F;
 18355  1644  300F               	movlw	15
 18356  1645  0091               	movwf	17	;volatile
 18357  1646                     l5066:
 18358                           
 18359                           ;pin_manager.c: 73: TRISB = 0xFF;
 18360  1646  30FF               	movlw	255
 18361  1647  0092               	movwf	18	;volatile
 18362  1648                     l5068:
 18363                           
 18364                           ;pin_manager.c: 74: TRISC = 0xBF;
 18365  1648  30BF               	movlw	191
 18366  1649  0093               	movwf	19	;volatile
 18367  164A                     l5070:
 18368                           
 18369                           ;pin_manager.c: 75: TRISD = 0xFF;
 18370  164A  30FF               	movlw	255
 18371  164B  0094               	movwf	20	;volatile
 18372  164C                     l5072:
 18373                           
 18374                           ;pin_manager.c: 80: ANSELD = 0xFF;
 18375  164C  30FF               	movlw	255
 18376  164D  003E               	movlb	30	; select bank30
 18377  164E  00D9               	movwf	89	;volatile
 18378  164F                     l5074:
 18379                           
 18380                           ;pin_manager.c: 81: ANSELC = 0x47;
 18381  164F  3047               	movlw	71
 18382  1650  00CE               	movwf	78	;volatile
 18383  1651                     l5076:
 18384                           
 18385                           ;pin_manager.c: 82: ANSELB = 0xEF;
 18386  1651  30EF               	movlw	239
 18387  1652  00C3               	movwf	67	;volatile
 18388  1653                     l5078:
 18389                           
 18390                           ;pin_manager.c: 83: ANSELE = 0x07;
 18391  1653  3007               	movlw	7
 18392  1654  00E4               	movwf	100	;volatile
 18393  1655                     l5080:
 18394                           
 18395                           ;pin_manager.c: 84: ANSELA = 0x4F;
 18396  1655  304F               	movlw	79
 18397  1656  00B8               	movwf	56	;volatile
 18398                           
 18399                           ;pin_manager.c: 89: WPUD = 0x00;
 18400  1657  01DA               	clrf	90	;volatile
 18401                           
 18402                           ;pin_manager.c: 90: WPUE = 0x00;
 18403  1658  01E5               	clrf	101	;volatile
 18404                           
 18405                           ;pin_manager.c: 91: WPUB = 0x00;
 18406  1659  01C4               	clrf	68	;volatile
 18407                           
 18408                           ;pin_manager.c: 92: WPUA = 0x00;
 18409  165A  01B9               	clrf	57	;volatile
 18410                           
 18411                           ;pin_manager.c: 93: WPUC = 0x00;
 18412  165B  01CF               	clrf	79	;volatile
 18413                           
 18414                           ;pin_manager.c: 98: ODCONE = 0x00;
 18415  165C  01E6               	clrf	102	;volatile
 18416                           
 18417                           ;pin_manager.c: 99: ODCONA = 0x00;
 18418  165D  01BA               	clrf	58	;volatile
 18419                           
 18420                           ;pin_manager.c: 100: ODCONB = 0x00;
 18421  165E  01C5               	clrf	69	;volatile
 18422                           
 18423                           ;pin_manager.c: 101: ODCONC = 0x00;
 18424  165F  01D0               	clrf	80	;volatile
 18425                           
 18426                           ;pin_manager.c: 102: ODCOND = 0x00;
 18427  1660  01DB               	clrf	91	;volatile
 18428  1661                     l5082:
 18429                           
 18430                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 18431  1661  30FF               	movlw	255
 18432  1662  00BB               	movwf	59	;volatile
 18433  1663                     l5084:
 18434                           
 18435                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 18436  1663  30FF               	movlw	255
 18437  1664  00C6               	movwf	70	;volatile
 18438  1665                     l5086:
 18439                           
 18440                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 18441  1665  30FF               	movlw	255
 18442  1666  00D1               	movwf	81	;volatile
 18443  1667                     l5088:
 18444                           
 18445                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 18446  1667  30FF               	movlw	255
 18447  1668  00DC               	movwf	92	;volatile
 18448  1669                     l5090:
 18449                           
 18450                           ;pin_manager.c: 111: SLRCONE = 0x07;
 18451  1669  3007               	movlw	7
 18452  166A  00E7               	movwf	103	;volatile
 18453  166B                     l5092:
 18454                           
 18455                           ;pin_manager.c: 120: INTPPS = 0x0C;
 18456  166B  300C               	movlw	12
 18457  166C  003D               	movlb	29	; select bank29
 18458  166D  0090               	movwf	16	;volatile
 18459  166E                     l5094:
 18460                           
 18461                           ;pin_manager.c: 121: RXPPS = 0x17;
 18462  166E  3017               	movlw	23
 18463  166F  00CB               	movwf	75	;volatile
 18464  1670                     l5096:
 18465                           
 18466                           ;pin_manager.c: 122: SSP1CLKPPS = 0x13;
 18467  1670  3013               	movlw	19
 18468  1671  00C5               	movwf	69	;volatile
 18469  1672                     l5098:
 18470                           
 18471                           ;pin_manager.c: 123: RC3PPS = 0x14;
 18472  1672  3014               	movlw	20
 18473  1673  003E               	movlb	30	; select bank30
 18474  1674  00A3               	movwf	35	;volatile
 18475  1675                     l5100:
 18476                           
 18477                           ;pin_manager.c: 124: RC4PPS = 0x15;
 18478  1675  3015               	movlw	21
 18479  1676  00A4               	movwf	36	;volatile
 18480  1677                     l5102:
 18481                           
 18482                           ;pin_manager.c: 125: RA6PPS = 0x0E;
 18483  1677  300E               	movlw	14
 18484  1678  0096               	movwf	22	;volatile
 18485  1679                     l5104:
 18486                           
 18487                           ;pin_manager.c: 126: RC6PPS = 0x10;
 18488  1679  3010               	movlw	16
 18489  167A  00A6               	movwf	38	;volatile
 18490  167B                     l5106:
 18491                           
 18492                           ;pin_manager.c: 127: SSP1DATPPS = 0x14;
 18493  167B  3014               	movlw	20
 18494  167C  003D               	movlb	29	; select bank29
 18495  167D  00C6               	movwf	70	;volatile
 18496  167E                     l128:
 18497  167E  0008               	return
 18498  167F                     __end_of_PIN_MANAGER_Initialize:
 18499                           
 18500                           	psect	text58
 18501  1FF7                     __ptext58:	
 18502 ;; *************** function _OSCILLATOR_Initialize *****************
 18503 ;; Defined at:
 18504 ;;		line 64 in file "mcc_generated_files/mcc.c"
 18505 ;; Parameters:    Size  Location     Type
 18506 ;;		None
 18507 ;; Auto vars:     Size  Location     Type
 18508 ;;		None
 18509 ;; Return value:  Size  Location     Type
 18510 ;;                  1    wreg      void 
 18511 ;; Registers used:
 18512 ;;		wreg, status,2
 18513 ;; Tracked objects:
 18514 ;;		On entry : 0/0
 18515 ;;		On exit  : 0/0
 18516 ;;		Unchanged: 0/0
 18517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18522 ;;Total ram usage:        0 bytes
 18523 ;; Hardware stack levels used:    1
 18524 ;; Hardware stack levels required when called:    5
 18525 ;; This function calls:
 18526 ;;		Nothing
 18527 ;; This function is called by:
 18528 ;;		_SYSTEM_Initialize
 18529 ;; This function uses a non-reentrant model
 18530 ;;
 18531                           
 18532                           
 18533                           ;psect for function _OSCILLATOR_Initialize
 18534  1FF7                     _OSCILLATOR_Initialize:
 18535  1FF7                     l5110:	
 18536                           ;incstack = 0
 18537                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 18538                           
 18539                           
 18540                           ;mcc.c: 67: OSCCON1 = 0x62;
 18541  1FF7  3062               	movlw	98
 18542  1FF8  0031               	movlb	17	; select bank17
 18543  1FF9  008D               	movwf	13	;volatile
 18544  1FFA                     l5112:
 18545                           
 18546                           ;mcc.c: 69: OSCCON3 = 0x00;
 18547  1FFA  018F               	clrf	15	;volatile
 18548  1FFB                     l5114:
 18549                           
 18550                           ;mcc.c: 71: OSCEN = 0x00;
 18551  1FFB  0191               	clrf	17	;volatile
 18552                           
 18553                           ;mcc.c: 73: OSCFRQ = 0x02;
 18554  1FFC  3002               	movlw	2
 18555  1FFD  0093               	movwf	19	;volatile
 18556  1FFE                     l5116:
 18557                           
 18558                           ;mcc.c: 75: OSCTUNE = 0x00;
 18559  1FFE  0192               	clrf	18	;volatile
 18560  1FFF                     l187:
 18561  1FFF  0008               	return
 18562  2000                     __end_of_OSCILLATOR_Initialize:
 18563                           
 18564                           	psect	text59
 18565  105A                     __ptext59:	
 18566 ;; *************** function _EXT_INT_Initialize *****************
 18567 ;; Defined at:
 18568 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 18569 ;; Parameters:    Size  Location     Type
 18570 ;;		None
 18571 ;; Auto vars:     Size  Location     Type
 18572 ;;		None
 18573 ;; Return value:  Size  Location     Type
 18574 ;;                  1    wreg      void 
 18575 ;; Registers used:
 18576 ;;		wreg, status,2, status,0, pclath, cstack
 18577 ;; Tracked objects:
 18578 ;;		On entry : 0/0
 18579 ;;		On exit  : 0/0
 18580 ;;		Unchanged: 0/0
 18581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18586 ;;Total ram usage:        0 bytes
 18587 ;; Hardware stack levels used:    1
 18588 ;; Hardware stack levels required when called:    6
 18589 ;; This function calls:
 18590 ;;		_INT_SetInterruptHandler
 18591 ;; This function is called by:
 18592 ;;		_SYSTEM_Initialize
 18593 ;; This function uses a non-reentrant model
 18594 ;;
 18595                           
 18596                           
 18597                           ;psect for function _EXT_INT_Initialize
 18598  105A                     _EXT_INT_Initialize:
 18599  105A                     l5176:	
 18600                           ;incstack = 0
 18601                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18602                           
 18603                           
 18604                           ;ext_int.c: 64: (PIR0bits.INTF = 0);
 18605  105A  002E               	movlb	14	; select bank14
 18606  105B  100C               	bcf	12,0	;volatile
 18607                           
 18608                           ;ext_int.c: 66: (INTCONbits.INTEDG = 1);
 18609  105C  140B               	bsf	11,0	;volatile
 18610  105D                     l5178:
 18611                           
 18612                           ;ext_int.c: 68: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
 18613  105D  309A               	movlw	low _INT_DefaultInterruptHandler
 18614  105E  0020               	movlb	0	; select bank0
 18615  105F  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
 18616  1060  301F               	movlw	high _INT_DefaultInterruptHandler
 18617  1061  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 18618  1062  319F  27EE  3190   	fcall	_INT_SetInterruptHandler
 18619  1065                     l5180:
 18620                           
 18621                           ;ext_int.c: 69: (PIE0bits.INTE = 1);
 18622  1065  002E               	movlb	14	; select bank14
 18623  1066  1416               	bsf	22,0	;volatile
 18624  1067                     l833:
 18625  1067  0008               	return
 18626  1068                     __end_of_EXT_INT_Initialize:
 18627                           
 18628                           	psect	text60
 18629  1FEE                     __ptext60:	
 18630 ;; *************** function _INT_SetInterruptHandler *****************
 18631 ;; Defined at:
 18632 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 18633 ;; Parameters:    Size  Location     Type
 18634 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 18635 ;;		 -> S1_ISR(1), INT_DefaultInterruptHandler(1), 
 18636 ;; Auto vars:     Size  Location     Type
 18637 ;;		None
 18638 ;; Return value:  Size  Location     Type
 18639 ;;                  1    wreg      void 
 18640 ;; Registers used:
 18641 ;;		wreg
 18642 ;; Tracked objects:
 18643 ;;		On entry : 0/0
 18644 ;;		On exit  : 0/0
 18645 ;;		Unchanged: 0/0
 18646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18647 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18650 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18651 ;;Total ram usage:        2 bytes
 18652 ;; Hardware stack levels used:    1
 18653 ;; Hardware stack levels required when called:    5
 18654 ;; This function calls:
 18655 ;;		Nothing
 18656 ;; This function is called by:
 18657 ;;		_EXT_INT_Initialize
 18658 ;;		_main
 18659 ;; This function uses a non-reentrant model
 18660 ;;
 18661                           
 18662                           
 18663                           ;psect for function _INT_SetInterruptHandler
 18664  1FEE                     _INT_SetInterruptHandler:
 18665  1FEE                     l4824:	
 18666                           ;incstack = 0
 18667                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 18668                           
 18669                           
 18670                           ;ext_int.c: 51: INT_InterruptHandler = InterruptHandler;
 18671  1FEE  0020               	movlb	0	; select bank0
 18672  1FEF  0821               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 18673  1FF0  0021               	movlb	1	; select bank1
 18674  1FF1  00DC               	movwf	(_INT_InterruptHandler+1)^(0+128)
 18675  1FF2  0020               	movlb	0	; select bank0
 18676  1FF3  0820               	movf	INT_SetInterruptHandler@InterruptHandler,w
 18677  1FF4  0021               	movlb	1	; select bank1
 18678  1FF5  00DB               	movwf	_INT_InterruptHandler^(0+128)
 18679  1FF6                     l827:
 18680  1FF6  0008               	return
 18681  1FF7                     __end_of_INT_SetInterruptHandler:
 18682                           
 18683                           	psect	text61
 18684  13D6                     __ptext61:	
 18685 ;; *************** function _EUSART_Initialize *****************
 18686 ;; Defined at:
 18687 ;;		line 75 in file "mcc_generated_files/eusart.c"
 18688 ;; Parameters:    Size  Location     Type
 18689 ;;		None
 18690 ;; Auto vars:     Size  Location     Type
 18691 ;;		None
 18692 ;; Return value:  Size  Location     Type
 18693 ;;                  1    wreg      void 
 18694 ;; Registers used:
 18695 ;;		wreg, status,2, status,0, pclath, cstack
 18696 ;; Tracked objects:
 18697 ;;		On entry : 0/0
 18698 ;;		On exit  : 0/0
 18699 ;;		Unchanged: 0/0
 18700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18703 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18704 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18705 ;;Total ram usage:        1 bytes
 18706 ;; Hardware stack levels used:    1
 18707 ;; Hardware stack levels required when called:    6
 18708 ;; This function calls:
 18709 ;;		_EUSART_SetRxInterruptHandler
 18710 ;;		_EUSART_SetTxInterruptHandler
 18711 ;; This function is called by:
 18712 ;;		_SYSTEM_Initialize
 18713 ;; This function uses a non-reentrant model
 18714 ;;
 18715                           
 18716                           
 18717                           ;psect for function _EUSART_Initialize
 18718  13D6                     _EUSART_Initialize:
 18719  13D6                     l5182:	
 18720                           ;incstack = 0
 18721                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18722                           
 18723                           
 18724                           ;eusart.c: 78: PIE3bits.RCIE = 0;
 18725  13D6  002E               	movlb	14	; select bank14
 18726  13D7  1299               	bcf	25,5	;volatile
 18727  13D8                     l5184:
 18728                           
 18729                           ;eusart.c: 79: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 18730  13D8  30AD               	movlw	low _EUSART_Receive_ISR
 18731  13D9  0020               	movlb	0	; select bank0
 18732  13DA  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 18733  13DB  3012               	movlw	high _EUSART_Receive_ISR
 18734  13DC  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 18735  13DD  319F  27DC  3193   	fcall	_EUSART_SetRxInterruptHandler
 18736  13E0                     l5186:
 18737                           
 18738                           ;eusart.c: 80: PIE3bits.TXIE = 0;
 18739  13E0  002E               	movlb	14	; select bank14
 18740  13E1  1219               	bcf	25,4	;volatile
 18741                           
 18742                           ;eusart.c: 81: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
 18743  13E2  3016               	movlw	low _EUSART_Transmit_ISR
 18744  13E3  0020               	movlb	0	; select bank0
 18745  13E4  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 18746  13E5  3013               	movlw	high _EUSART_Transmit_ISR
 18747  13E6  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 18748  13E7  319F  27E5  3193   	fcall	_EUSART_SetTxInterruptHandler
 18749  13EA                     l5188:
 18750                           
 18751                           ;eusart.c: 85: BAUD1CON = 0x08;
 18752  13EA  3008               	movlw	8
 18753  13EB  0022               	movlb	2	; select bank2
 18754  13EC  009F               	movwf	31	;volatile
 18755  13ED                     l5190:
 18756                           
 18757                           ;eusart.c: 88: RC1STA = 0x90;
 18758  13ED  3090               	movlw	144
 18759  13EE  009D               	movwf	29	;volatile
 18760  13EF                     l5192:
 18761                           
 18762                           ;eusart.c: 91: TX1STA = 0x24;
 18763  13EF  3024               	movlw	36
 18764  13F0  009E               	movwf	30	;volatile
 18765  13F1                     l5194:
 18766                           
 18767                           ;eusart.c: 94: SP1BRGL = 0x19;
 18768  13F1  3019               	movlw	25
 18769  13F2  009B               	movwf	27	;volatile
 18770  13F3                     l5196:
 18771                           
 18772                           ;eusart.c: 97: SP1BRGH = 0x00;
 18773  13F3  019C               	clrf	28	;volatile
 18774  13F4                     l5198:
 18775                           
 18776                           ;eusart.c: 101: eusartTxHead = 0;
 18777  13F4  0020               	movlb	0	; select bank0
 18778  13F5  01ED               	clrf	_eusartTxHead	;volatile
 18779  13F6                     l5200:
 18780                           
 18781                           ;eusart.c: 102: eusartTxTail = 0;
 18782  13F6  01EC               	clrf	_eusartTxTail	;volatile
 18783  13F7                     l5202:
 18784                           
 18785                           ;eusart.c: 103: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 18786  13F7  3040               	movlw	64
 18787  13F8  00A2               	movwf	??_EUSART_Initialize
 18788  13F9  0822               	movf	??_EUSART_Initialize,w
 18789  13FA  0021               	movlb	1	; select bank1
 18790  13FB  00E5               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 18791  13FC                     l5204:
 18792                           
 18793                           ;eusart.c: 105: eusartRxHead = 0;
 18794  13FC  0020               	movlb	0	; select bank0
 18795  13FD  01EB               	clrf	_eusartRxHead	;volatile
 18796  13FE                     l5206:
 18797                           
 18798                           ;eusart.c: 106: eusartRxTail = 0;
 18799  13FE  0021               	movlb	1	; select bank1
 18800  13FF  01DA               	clrf	_eusartRxTail^(0+128)	;volatile
 18801  1400                     l5208:
 18802                           
 18803                           ;eusart.c: 107: eusartRxCount = 0;
 18804  1400  01D9               	clrf	_eusartRxCount^(0+128)	;volatile
 18805  1401                     l5210:
 18806                           
 18807                           ;eusart.c: 110: PIE3bits.RCIE = 1;
 18808  1401  002E               	movlb	14	; select bank14
 18809  1402  1699               	bsf	25,5	;volatile
 18810  1403                     l884:
 18811  1403  0008               	return
 18812  1404                     __end_of_EUSART_Initialize:
 18813                           
 18814                           	psect	text62
 18815  1FE5                     __ptext62:	
 18816 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 18817 ;; Defined at:
 18818 ;;		line 220 in file "mcc_generated_files/eusart.c"
 18819 ;; Parameters:    Size  Location     Type
 18820 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 18821 ;;		 -> EUSART_Transmit_ISR(1), 
 18822 ;; Auto vars:     Size  Location     Type
 18823 ;;		None
 18824 ;; Return value:  Size  Location     Type
 18825 ;;                  1    wreg      void 
 18826 ;; Registers used:
 18827 ;;		wreg
 18828 ;; Tracked objects:
 18829 ;;		On entry : 0/0
 18830 ;;		On exit  : 0/0
 18831 ;;		Unchanged: 0/0
 18832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18833 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18836 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18837 ;;Total ram usage:        2 bytes
 18838 ;; Hardware stack levels used:    1
 18839 ;; Hardware stack levels required when called:    5
 18840 ;; This function calls:
 18841 ;;		Nothing
 18842 ;; This function is called by:
 18843 ;;		_EUSART_Initialize
 18844 ;; This function uses a non-reentrant model
 18845 ;;
 18846                           
 18847                           
 18848                           ;psect for function _EUSART_SetTxInterruptHandler
 18849  1FE5                     _EUSART_SetTxInterruptHandler:
 18850  1FE5                     l4828:	
 18851                           ;incstack = 0
 18852                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 18853                           
 18854                           
 18855                           ;eusart.c: 221: EUSART_TxDefaultInterruptHandler = interruptHandler;
 18856  1FE5  0020               	movlb	0	; select bank0
 18857  1FE6  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 18858  1FE7  0022               	movlb	2	; select bank2
 18859  1FE8  00B7               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
 18860  1FE9  0020               	movlb	0	; select bank0
 18861  1FEA  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 18862  1FEB  0022               	movlb	2	; select bank2
 18863  1FEC  00B6               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
 18864  1FED                     l929:
 18865  1FED  0008               	return
 18866  1FEE                     __end_of_EUSART_SetTxInterruptHandler:
 18867                           
 18868                           	psect	text63
 18869  1FDC                     __ptext63:	
 18870 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 18871 ;; Defined at:
 18872 ;;		line 224 in file "mcc_generated_files/eusart.c"
 18873 ;; Parameters:    Size  Location     Type
 18874 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 18875 ;;		 -> EUSART_Receive_ISR(1), 
 18876 ;; Auto vars:     Size  Location     Type
 18877 ;;		None
 18878 ;; Return value:  Size  Location     Type
 18879 ;;                  1    wreg      void 
 18880 ;; Registers used:
 18881 ;;		wreg
 18882 ;; Tracked objects:
 18883 ;;		On entry : 0/0
 18884 ;;		On exit  : 0/0
 18885 ;;		Unchanged: 0/0
 18886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18887 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18890 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18891 ;;Total ram usage:        2 bytes
 18892 ;; Hardware stack levels used:    1
 18893 ;; Hardware stack levels required when called:    5
 18894 ;; This function calls:
 18895 ;;		Nothing
 18896 ;; This function is called by:
 18897 ;;		_EUSART_Initialize
 18898 ;; This function uses a non-reentrant model
 18899 ;;
 18900                           
 18901                           
 18902                           ;psect for function _EUSART_SetRxInterruptHandler
 18903  1FDC                     _EUSART_SetRxInterruptHandler:
 18904  1FDC                     l4826:	
 18905                           ;incstack = 0
 18906                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 18907                           
 18908                           
 18909                           ;eusart.c: 225: EUSART_RxDefaultInterruptHandler = interruptHandler;
 18910  1FDC  0020               	movlb	0	; select bank0
 18911  1FDD  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 18912  1FDE  0022               	movlb	2	; select bank2
 18913  1FDF  00B5               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
 18914  1FE0  0020               	movlb	0	; select bank0
 18915  1FE1  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 18916  1FE2  0022               	movlb	2	; select bank2
 18917  1FE3  00B4               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
 18918  1FE4                     l932:
 18919  1FE4  0008               	return
 18920  1FE5                     __end_of_EUSART_SetRxInterruptHandler:
 18921                           
 18922                           	psect	text64
 18923  10FA                     __ptext64:	
 18924 ;; *************** function _ADCC_Initialize *****************
 18925 ;; Defined at:
 18926 ;;		line 63 in file "mcc_generated_files/adcc.c"
 18927 ;; Parameters:    Size  Location     Type
 18928 ;;		None
 18929 ;; Auto vars:     Size  Location     Type
 18930 ;;		None
 18931 ;; Return value:  Size  Location     Type
 18932 ;;                  1    wreg      void 
 18933 ;; Registers used:
 18934 ;;		wreg, status,2
 18935 ;; Tracked objects:
 18936 ;;		On entry : 0/0
 18937 ;;		On exit  : 0/0
 18938 ;;		Unchanged: 0/0
 18939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18944 ;;Total ram usage:        0 bytes
 18945 ;; Hardware stack levels used:    1
 18946 ;; Hardware stack levels required when called:    5
 18947 ;; This function calls:
 18948 ;;		Nothing
 18949 ;; This function is called by:
 18950 ;;		_SYSTEM_Initialize
 18951 ;; This function uses a non-reentrant model
 18952 ;;
 18953                           
 18954                           
 18955                           ;psect for function _ADCC_Initialize
 18956  10FA                     _ADCC_Initialize:
 18957  10FA                     l5122:	
 18958                           ;incstack = 0
 18959                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 18960                           
 18961                           
 18962                           ;adcc.c: 67: ADLTHL = 0x00;
 18963  10FA  0022               	movlb	2	; select bank2
 18964  10FB  018E               	clrf	14	;volatile
 18965                           
 18966                           ;adcc.c: 69: ADLTHH = 0x00;
 18967  10FC  018F               	clrf	15	;volatile
 18968                           
 18969                           ;adcc.c: 71: ADUTHL = 0x00;
 18970  10FD  0190               	clrf	16	;volatile
 18971                           
 18972                           ;adcc.c: 73: ADUTHH = 0x00;
 18973  10FE  0191               	clrf	17	;volatile
 18974                           
 18975                           ;adcc.c: 75: ADSTPTL = 0x00;
 18976  10FF  0192               	clrf	18	;volatile
 18977                           
 18978                           ;adcc.c: 77: ADSTPTH = 0x00;
 18979  1100  0193               	clrf	19	;volatile
 18980                           
 18981                           ;adcc.c: 79: ADRPT = 0x00;
 18982  1101  018D               	clrf	13	;volatile
 18983                           
 18984                           ;adcc.c: 81: ADPCH = 0x00;
 18985  1102  0021               	movlb	1	; select bank1
 18986  1103  019E               	clrf	30	;volatile
 18987                           
 18988                           ;adcc.c: 83: ADCAP = 0x00;
 18989  1104  019B               	clrf	27	;volatile
 18990                           
 18991                           ;adcc.c: 85: ADCON1 = 0x00;
 18992  1105  0194               	clrf	20	;volatile
 18993                           
 18994                           ;adcc.c: 87: ADCON2 = 0x00;
 18995  1106  0195               	clrf	21	;volatile
 18996                           
 18997                           ;adcc.c: 89: ADCON3 = 0x00;
 18998  1107  0196               	clrf	22	;volatile
 18999                           
 19000                           ;adcc.c: 91: ADSTAT = 0x00;
 19001  1108  0197               	clrf	23	;volatile
 19002                           
 19003                           ;adcc.c: 93: ADREF = 0x00;
 19004  1109  019A               	clrf	26	;volatile
 19005                           
 19006                           ;adcc.c: 95: ADACT = 0x00;
 19007  110A  0199               	clrf	25	;volatile
 19008                           
 19009                           ;adcc.c: 97: ADCLK = 0x00;
 19010  110B  0198               	clrf	24	;volatile
 19011  110C                     l5124:
 19012                           
 19013                           ;adcc.c: 99: ADCON0 = 0x80;
 19014  110C  3080               	movlw	128
 19015  110D  0093               	movwf	19	;volatile
 19016  110E                     l5126:
 19017                           
 19018                           ;adcc.c: 101: ADACQ = 0xFF;
 19019  110E  30FF               	movlw	255
 19020  110F  009D               	movwf	29	;volatile
 19021  1110                     l531:
 19022  1110  0008               	return
 19023  1111                     __end_of_ADCC_Initialize:
 19024                           
 19025                           	psect	text65
 19026  1F9F                     __ptext65:	
 19027 ;; *************** function _PWM_Output_D4_Enable *****************
 19028 ;; Defined at:
 19029 ;;		line 344 in file "main.c"
 19030 ;; Parameters:    Size  Location     Type
 19031 ;;		None
 19032 ;; Auto vars:     Size  Location     Type
 19033 ;;		None
 19034 ;; Return value:  Size  Location     Type
 19035 ;;                  1    wreg      void 
 19036 ;; Registers used:
 19037 ;;		None
 19038 ;; Tracked objects:
 19039 ;;		On entry : 0/0
 19040 ;;		On exit  : 0/0
 19041 ;;		Unchanged: 0/0
 19042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19047 ;;Total ram usage:        0 bytes
 19048 ;; Hardware stack levels used:    1
 19049 ;; Hardware stack levels required when called:    5
 19050 ;; This function calls:
 19051 ;;		Nothing
 19052 ;; This function is called by:
 19053 ;;		_main
 19054 ;; This function uses a non-reentrant model
 19055 ;;
 19056                           
 19057                           
 19058                           ;psect for function _PWM_Output_D4_Enable
 19059  1F9F                     _PWM_Output_D4_Enable:
 19060  1F9F                     l5826:	
 19061                           ;incstack = 0
 19062                           ; Regs used in _PWM_Output_D4_Enable: []
 19063                           
 19064                           
 19065                           ;main.c: 345: PWM6EN = 1;
 19066  1F9F  0027               	movlb	7	; select bank7
 19067  1FA0  178E               	bsf	14,7	;volatile
 19068  1FA1                     l1332:
 19069  1FA1  0008               	return
 19070  1FA2                     __end_of_PWM_Output_D4_Enable:
 19071                           
 19072                           	psect	text66
 19073  08BC                     __ptext66:	
 19074 ;; *************** function _LCDinit *****************
 19075 ;; Defined at:
 19076 ;;		line 281 in file "main.c"
 19077 ;; Parameters:    Size  Location     Type
 19078 ;;		None
 19079 ;; Auto vars:     Size  Location     Type
 19080 ;;		None
 19081 ;; Return value:  Size  Location     Type
 19082 ;;                  1    wreg      void 
 19083 ;; Registers used:
 19084 ;;		wreg, status,2, status,0, pclath, cstack
 19085 ;; Tracked objects:
 19086 ;;		On entry : 0/0
 19087 ;;		On exit  : 0/0
 19088 ;;		Unchanged: 0/0
 19089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19092 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19093 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19094 ;;Total ram usage:        1 bytes
 19095 ;; Hardware stack levels used:    1
 19096 ;; Hardware stack levels required when called:    7
 19097 ;; This function calls:
 19098 ;;		_LCDsend
 19099 ;;		_LCDsend2x4
 19100 ;; This function is called by:
 19101 ;;		_main
 19102 ;; This function uses a non-reentrant model
 19103 ;;
 19104                           
 19105                           
 19106                           ;psect for function _LCDinit
 19107  08BC                     _LCDinit:
 19108  08BC                     l5792:	
 19109                           ;incstack = 0
 19110                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 19111                           
 19112                           
 19113                           ;main.c: 283: _delay((unsigned long)((50)*(1000000/4000.0)));
 19114  08BC  3011               	movlw	17
 19115  08BD  0020               	movlb	0	; select bank0
 19116  08BE  00A8               	movwf	??_LCDinit
 19117  08BF  303A               	movlw	58
 19118  08C0                     u6657:
 19119  08C0  0B89               	decfsz	9,f
 19120  08C1  28C0               	goto	u6657
 19121  08C2  0BA8               	decfsz	??_LCDinit,f
 19122  08C3  28C0               	goto	u6657
 19123  08C4  0000               	nop
 19124  08C5                     l5794:
 19125                           
 19126                           ;main.c: 284: LCDsend(0x30);
 19127  08C5  3030               	movlw	48
 19128  08C6  3197  2753  3188   	fcall	_LCDsend
 19129  08C9                     l5796:
 19130                           
 19131                           ;main.c: 285: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 19132  08C9  3034               	movlw	52
 19133  08CA  3197  2753  3188   	fcall	_LCDsend
 19134  08CD  3029               	movlw	41
 19135  08CE                     u6667:
 19136  08CE  0B89               	decfsz	9,f
 19137  08CF  28CE               	goto	u6667
 19138  08D0  3200               	nop2
 19139  08D1                     l5798:
 19140  08D1  3030               	movlw	48
 19141  08D2  3197  2753  3188   	fcall	_LCDsend
 19142  08D5                     l5800:
 19143                           
 19144                           ;main.c: 286: _delay((unsigned long)((5)*(1000000/4000.0)));
 19145  08D5  30FA               	movlw	250
 19146  08D6                     u6677:
 19147  08D6  3200               	nop2
 19148  08D7  0B89               	decfsz	9,f
 19149  08D8  28D6               	goto	u6677
 19150                           
 19151                           ;main.c: 287: LCDsend(0x30);
 19152  08D9  3030               	movlw	48
 19153  08DA  3197  2753  3188   	fcall	_LCDsend
 19154                           
 19155                           ;main.c: 288: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 19156  08DD  3034               	movlw	52
 19157  08DE  3197  2753  3188   	fcall	_LCDsend
 19158  08E1                     l5802:
 19159  08E1  3029               	movlw	41
 19160  08E2                     u6687:
 19161  08E2  0B89               	decfsz	9,f
 19162  08E3  28E2               	goto	u6687
 19163  08E4  3200               	nop2
 19164  08E5                     l5804:
 19165  08E5  3030               	movlw	48
 19166  08E6  3197  2753  3188   	fcall	_LCDsend
 19167                           
 19168                           ;main.c: 289: _delay((unsigned long)((100)*(1000000/4000000.0)));
 19169  08E9  3008               	movlw	8
 19170  08EA                     u6697:
 19171  08EA  0B89               	decfsz	9,f
 19172  08EB  28EA               	goto	u6697
 19173  08EC  0000               	nop
 19174  08ED                     l5806:
 19175                           
 19176                           ;main.c: 290: LCDsend(0x30);
 19177  08ED  3030               	movlw	48
 19178  08EE  3197  2753  3188   	fcall	_LCDsend
 19179  08F1                     l5808:
 19180                           
 19181                           ;main.c: 291: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 19182  08F1  3034               	movlw	52
 19183  08F2  3197  2753  3188   	fcall	_LCDsend
 19184  08F5  3029               	movlw	41
 19185  08F6                     u6707:
 19186  08F6  0B89               	decfsz	9,f
 19187  08F7  28F6               	goto	u6707
 19188  08F8  3200               	nop2
 19189  08F9                     l5810:
 19190  08F9  3030               	movlw	48
 19191  08FA  3197  2753  3188   	fcall	_LCDsend
 19192  08FD                     l5812:
 19193                           
 19194                           ;main.c: 292: _delay((unsigned long)((100)*(1000000/4000000.0)));
 19195  08FD  3008               	movlw	8
 19196  08FE                     u6717:
 19197  08FE  0B89               	decfsz	9,f
 19198  08FF  28FE               	goto	u6717
 19199  0900  0000               	nop
 19200                           
 19201                           ;main.c: 293: LCDsend(0x20);
 19202  0901  3020               	movlw	32
 19203  0902  3197  2753  3188   	fcall	_LCDsend
 19204                           
 19205                           ;main.c: 294: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 19206  0905  3024               	movlw	36
 19207  0906  3197  2753  3188   	fcall	_LCDsend
 19208  0909                     l5814:
 19209  0909  3029               	movlw	41
 19210  090A                     u6727:
 19211  090A  0B89               	decfsz	9,f
 19212  090B  290A               	goto	u6727
 19213  090C  3200               	nop2
 19214  090D                     l5816:
 19215  090D  3020               	movlw	32
 19216  090E  3197  2753  3188   	fcall	_LCDsend
 19217                           
 19218                           ;main.c: 295: _delay((unsigned long)((5)*(1000000/4000.0)));
 19219  0911  30FA               	movlw	250
 19220  0912                     u6737:
 19221  0912  3200               	nop2
 19222  0913  0B89               	decfsz	9,f
 19223  0914  2912               	goto	u6737
 19224  0915                     l5818:
 19225                           
 19226                           ;main.c: 297: LCDsend2x4(0x28, 0);
 19227  0915  0020               	movlb	0	; select bank0
 19228  0916  01A2               	clrf	LCDsend2x4@mode
 19229  0917  3028               	movlw	40
 19230  0918  3189  21B2  3188   	fcall	_LCDsend2x4
 19231  091B                     l5820:
 19232                           
 19233                           ;main.c: 298: LCDsend2x4(0x06, 0);
 19234  091B  0020               	movlb	0	; select bank0
 19235  091C  01A2               	clrf	LCDsend2x4@mode
 19236  091D  3006               	movlw	6
 19237  091E  3189  21B2  3188   	fcall	_LCDsend2x4
 19238  0921                     l5822:
 19239                           
 19240                           ;main.c: 299: LCDsend2x4(0x0f, 0);
 19241  0921  0020               	movlb	0	; select bank0
 19242  0922  01A2               	clrf	LCDsend2x4@mode
 19243  0923  300F               	movlw	15
 19244  0924  3189  21B2  3188   	fcall	_LCDsend2x4
 19245  0927                     l5824:
 19246                           
 19247                           ;main.c: 300: LCDsend2x4(0x01, 0);
 19248  0927  0020               	movlb	0	; select bank0
 19249  0928  01A2               	clrf	LCDsend2x4@mode
 19250  0929  3001               	movlw	1
 19251  092A  3189  21B2  3188   	fcall	_LCDsend2x4
 19252                           
 19253                           ;main.c: 301: _delay((unsigned long)((2)*(1000000/4000.0)));
 19254  092D  30A6               	movlw	166
 19255  092E                     u6747:
 19256  092E  0B89               	decfsz	9,f
 19257  092F  292E               	goto	u6747
 19258  0930  3200               	nop2
 19259  0931                     l1304:
 19260  0931  0008               	return
 19261  0932                     __end_of_LCDinit:
 19262                           
 19263                           	psect	text67
 19264  09B2                     __ptext67:	
 19265 ;; *************** function _LCDsend2x4 *****************
 19266 ;; Defined at:
 19267 ;;		line 258 in file "main.c"
 19268 ;; Parameters:    Size  Location     Type
 19269 ;;  c               1    wreg     unsigned char 
 19270 ;;  mode            1    2[BANK0 ] unsigned char 
 19271 ;; Auto vars:     Size  Location     Type
 19272 ;;  c               1    5[BANK0 ] unsigned char 
 19273 ;;  lc              1    7[BANK0 ] unsigned char 
 19274 ;;  hc              1    6[BANK0 ] unsigned char 
 19275 ;; Return value:  Size  Location     Type
 19276 ;;                  1    wreg      void 
 19277 ;; Registers used:
 19278 ;;		wreg, status,2, status,0, pclath, cstack
 19279 ;; Tracked objects:
 19280 ;;		On entry : 0/0
 19281 ;;		On exit  : 0/0
 19282 ;;		Unchanged: 0/0
 19283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19284 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19285 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19286 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19287 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19288 ;;Total ram usage:        6 bytes
 19289 ;; Hardware stack levels used:    1
 19290 ;; Hardware stack levels required when called:    6
 19291 ;; This function calls:
 19292 ;;		_WriteI2C
 19293 ;; This function is called by:
 19294 ;;		_LCDinit
 19295 ;;		_LCDcmd
 19296 ;;		_LCDchar
 19297 ;; This function uses a non-reentrant model
 19298 ;;
 19299                           
 19300                           
 19301                           ;psect for function _LCDsend2x4
 19302  09B2                     _LCDsend2x4:
 19303                           
 19304                           ;incstack = 0
 19305                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 19306                           ;LCDsend2x4@c stored from wreg
 19307  09B2  0020               	movlb	0	; select bank0
 19308  09B3  00A5               	movwf	LCDsend2x4@c
 19309  09B4                     l4646:
 19310                           
 19311                           ;main.c: 260: unsigned char hc;;main.c: 261: unsigned char lc;;main.c: 263: hc = c & 0xf
      +                          0;
 19312  09B4  0825               	movf	LCDsend2x4@c,w
 19313  09B5  39F0               	andlw	240
 19314  09B6  00A3               	movwf	??_LCDsend2x4
 19315  09B7  0823               	movf	??_LCDsend2x4,w
 19316  09B8  00A6               	movwf	LCDsend2x4@hc
 19317  09B9                     l4648:
 19318                           
 19319                           ;main.c: 264: lc = (c << 4) & 0xf0;
 19320  09B9  0825               	movf	LCDsend2x4@c,w
 19321  09BA  00A3               	movwf	??_LCDsend2x4
 19322  09BB  3003               	movlw	3
 19323  09BC                     u3465:
 19324  09BC  35A3               	lslf	??_LCDsend2x4,f
 19325  09BD  3EFF               	addlw	-1
 19326  09BE  1D03               	skipz
 19327  09BF  29BC               	goto	u3465
 19328  09C0  3523               	lslf	??_LCDsend2x4,w
 19329  09C1  39F0               	andlw	240
 19330  09C2  00A4               	movwf	??_LCDsend2x4+1
 19331  09C3  0824               	movf	??_LCDsend2x4+1,w
 19332  09C4  00A7               	movwf	LCDsend2x4@lc
 19333  09C5                     l4650:	
 19334                           ;main.c: 266: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19335                           
 19336  09C5  0023               	movlb	3	; select bank3
 19337  09C6  0C0F               	rrf	15,w	;volatile
 19338  09C7  0C89               	rrf	9,f
 19339  09C8  3901               	andlw	1
 19340  09C9  0020               	movlb	0	; select bank0
 19341  09CA  00A3               	movwf	??_LCDsend2x4
 19342  09CB  0023               	movlb	3	; select bank3
 19343  09CC  0811               	movf	17,w	;volatile
 19344  09CD  391F               	andlw	31
 19345  09CE  0020               	movlb	0	; select bank0
 19346  09CF  0423               	iorwf	??_LCDsend2x4,w
 19347  09D0  1D03               	btfss	3,2
 19348  09D1  29D3               	goto	u3471
 19349  09D2  29D4               	goto	u3470
 19350  09D3                     u3471:
 19351  09D3  29C5               	goto	l4650
 19352  09D4                     u3470:
 19353  09D4                     l1270:
 19354                           
 19355                           ;main.c: 267: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 19356  09D4  0023               	movlb	3	; select bank3
 19357  09D5  1411               	bsf	17,0	;volatile
 19358  09D6                     l1271:
 19359  09D6  1811               	btfsc	17,0	;volatile
 19360  09D7  29D9               	goto	u3481
 19361  09D8  29DA               	goto	u3480
 19362  09D9                     u3481:
 19363  09D9  29D6               	goto	l1271
 19364  09DA                     u3480:
 19365  09DA                     l4652:
 19366  09DA  0023               	movlb	3	; select bank3
 19367  09DB  0C0F               	rrf	15,w	;volatile
 19368  09DC  0C89               	rrf	9,f
 19369  09DD  3901               	andlw	1
 19370  09DE  0020               	movlb	0	; select bank0
 19371  09DF  00A3               	movwf	??_LCDsend2x4
 19372  09E0  0023               	movlb	3	; select bank3
 19373  09E1  0811               	movf	17,w	;volatile
 19374  09E2  391F               	andlw	31
 19375  09E3  0020               	movlb	0	; select bank0
 19376  09E4  0423               	iorwf	??_LCDsend2x4,w
 19377  09E5  1D03               	btfss	3,2
 19378  09E6  29E8               	goto	u3491
 19379  09E7  29E9               	goto	u3490
 19380  09E8                     u3491:
 19381  09E8  29DA               	goto	l4652
 19382  09E9                     u3490:
 19383  09E9                     l4654:
 19384                           
 19385                           ;main.c: 268: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19386  09E9  304E               	movlw	78
 19387  09EA  3197  27A6  3189   	fcall	_WriteI2C
 19388  09ED                     l4656:
 19389  09ED  0023               	movlb	3	; select bank3
 19390  09EE  0C0F               	rrf	15,w	;volatile
 19391  09EF  0C89               	rrf	9,f
 19392  09F0  3901               	andlw	1
 19393  09F1  0020               	movlb	0	; select bank0
 19394  09F2  00A3               	movwf	??_LCDsend2x4
 19395  09F3  0023               	movlb	3	; select bank3
 19396  09F4  0811               	movf	17,w	;volatile
 19397  09F5  391F               	andlw	31
 19398  09F6  0020               	movlb	0	; select bank0
 19399  09F7  0423               	iorwf	??_LCDsend2x4,w
 19400  09F8  1D03               	btfss	3,2
 19401  09F9  29FB               	goto	u3501
 19402  09FA  29FC               	goto	u3500
 19403  09FB                     u3501:
 19404  09FB  29ED               	goto	l4656
 19405  09FC                     u3500:
 19406  09FC                     l4658:
 19407                           
 19408                           ;main.c: 269: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 19409  09FC  0826               	movf	LCDsend2x4@hc,w
 19410  09FD  0422               	iorwf	LCDsend2x4@mode,w
 19411  09FE  3808               	iorlw	8
 19412  09FF  3197  27A6  3189   	fcall	_WriteI2C
 19413  0A02                     l4660:
 19414  0A02  0023               	movlb	3	; select bank3
 19415  0A03  0C0F               	rrf	15,w	;volatile
 19416  0A04  0C89               	rrf	9,f
 19417  0A05  3901               	andlw	1
 19418  0A06  0020               	movlb	0	; select bank0
 19419  0A07  00A3               	movwf	??_LCDsend2x4
 19420  0A08  0023               	movlb	3	; select bank3
 19421  0A09  0811               	movf	17,w	;volatile
 19422  0A0A  391F               	andlw	31
 19423  0A0B  0020               	movlb	0	; select bank0
 19424  0A0C  0423               	iorwf	??_LCDsend2x4,w
 19425  0A0D  1D03               	btfss	3,2
 19426  0A0E  2A10               	goto	u3511
 19427  0A0F  2A11               	goto	u3510
 19428  0A10                     u3511:
 19429  0A10  2A02               	goto	l4660
 19430  0A11                     u3510:
 19431  0A11                     l4662:
 19432                           
 19433                           ;main.c: 270: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 19434  0A11  0826               	movf	LCDsend2x4@hc,w
 19435  0A12  0422               	iorwf	LCDsend2x4@mode,w
 19436  0A13  380C               	iorlw	12
 19437  0A14  3197  27A6  3189   	fcall	_WriteI2C
 19438  0A17                     l4664:
 19439  0A17  0023               	movlb	3	; select bank3
 19440  0A18  0C0F               	rrf	15,w	;volatile
 19441  0A19  0C89               	rrf	9,f
 19442  0A1A  3901               	andlw	1
 19443  0A1B  0020               	movlb	0	; select bank0
 19444  0A1C  00A3               	movwf	??_LCDsend2x4
 19445  0A1D  0023               	movlb	3	; select bank3
 19446  0A1E  0811               	movf	17,w	;volatile
 19447  0A1F  391F               	andlw	31
 19448  0A20  0020               	movlb	0	; select bank0
 19449  0A21  0423               	iorwf	??_LCDsend2x4,w
 19450  0A22  1D03               	btfss	3,2
 19451  0A23  2A25               	goto	u3521
 19452  0A24  2A26               	goto	u3520
 19453  0A25                     u3521:
 19454  0A25  2A17               	goto	l4664
 19455  0A26                     u3520:
 19456  0A26                     l1285:
 19457  0A26                     l4666:	
 19458                           ;main.c: 271: _delay((unsigned long)((1)*(1000000/4000000.0)));
 19459                           
 19460                           
 19461                           ;main.c: 272: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 19462  0A26  0020               	movlb	0	; select bank0
 19463  0A27  0826               	movf	LCDsend2x4@hc,w
 19464  0A28  0422               	iorwf	LCDsend2x4@mode,w
 19465  0A29  3808               	iorlw	8
 19466  0A2A  3197  27A6  3189   	fcall	_WriteI2C
 19467  0A2D                     l4668:
 19468  0A2D  0023               	movlb	3	; select bank3
 19469  0A2E  0C0F               	rrf	15,w	;volatile
 19470  0A2F  0C89               	rrf	9,f
 19471  0A30  3901               	andlw	1
 19472  0A31  0020               	movlb	0	; select bank0
 19473  0A32  00A3               	movwf	??_LCDsend2x4
 19474  0A33  0023               	movlb	3	; select bank3
 19475  0A34  0811               	movf	17,w	;volatile
 19476  0A35  391F               	andlw	31
 19477  0A36  0020               	movlb	0	; select bank0
 19478  0A37  0423               	iorwf	??_LCDsend2x4,w
 19479  0A38  1D03               	btfss	3,2
 19480  0A39  2A3B               	goto	u3531
 19481  0A3A  2A3C               	goto	u3530
 19482  0A3B                     u3531:
 19483  0A3B  2A2D               	goto	l4668
 19484  0A3C                     u3530:
 19485  0A3C                     l4670:
 19486                           
 19487                           ;main.c: 273: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 19488  0A3C  0827               	movf	LCDsend2x4@lc,w
 19489  0A3D  0422               	iorwf	LCDsend2x4@mode,w
 19490  0A3E  3808               	iorlw	8
 19491  0A3F  3197  27A6  3189   	fcall	_WriteI2C
 19492  0A42                     l4672:
 19493  0A42  0023               	movlb	3	; select bank3
 19494  0A43  0C0F               	rrf	15,w	;volatile
 19495  0A44  0C89               	rrf	9,f
 19496  0A45  3901               	andlw	1
 19497  0A46  0020               	movlb	0	; select bank0
 19498  0A47  00A3               	movwf	??_LCDsend2x4
 19499  0A48  0023               	movlb	3	; select bank3
 19500  0A49  0811               	movf	17,w	;volatile
 19501  0A4A  391F               	andlw	31
 19502  0A4B  0020               	movlb	0	; select bank0
 19503  0A4C  0423               	iorwf	??_LCDsend2x4,w
 19504  0A4D  1D03               	btfss	3,2
 19505  0A4E  2A50               	goto	u3541
 19506  0A4F  2A51               	goto	u3540
 19507  0A50                     u3541:
 19508  0A50  2A42               	goto	l4672
 19509  0A51                     u3540:
 19510  0A51                     l4674:
 19511                           
 19512                           ;main.c: 274: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 19513  0A51  0827               	movf	LCDsend2x4@lc,w
 19514  0A52  0422               	iorwf	LCDsend2x4@mode,w
 19515  0A53  380C               	iorlw	12
 19516  0A54  3197  27A6  3189   	fcall	_WriteI2C
 19517  0A57                     l4676:
 19518  0A57  0023               	movlb	3	; select bank3
 19519  0A58  0C0F               	rrf	15,w	;volatile
 19520  0A59  0C89               	rrf	9,f
 19521  0A5A  3901               	andlw	1
 19522  0A5B  0020               	movlb	0	; select bank0
 19523  0A5C  00A3               	movwf	??_LCDsend2x4
 19524  0A5D  0023               	movlb	3	; select bank3
 19525  0A5E  0811               	movf	17,w	;volatile
 19526  0A5F  391F               	andlw	31
 19527  0A60  0020               	movlb	0	; select bank0
 19528  0A61  0423               	iorwf	??_LCDsend2x4,w
 19529  0A62  1D03               	btfss	3,2
 19530  0A63  2A65               	goto	u3551
 19531  0A64  2A66               	goto	u3550
 19532  0A65                     u3551:
 19533  0A65  2A57               	goto	l4676
 19534  0A66                     u3550:
 19535  0A66                     l1294:
 19536  0A66                     l4678:	
 19537                           ;main.c: 275: _delay((unsigned long)((1)*(1000000/4000000.0)));
 19538                           
 19539                           
 19540                           ;main.c: 276: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 19541  0A66  0020               	movlb	0	; select bank0
 19542  0A67  0827               	movf	LCDsend2x4@lc,w
 19543  0A68  0422               	iorwf	LCDsend2x4@mode,w
 19544  0A69  3808               	iorlw	8
 19545  0A6A  3197  27A6  3189   	fcall	_WriteI2C
 19546  0A6D                     l4680:
 19547  0A6D  0023               	movlb	3	; select bank3
 19548  0A6E  0C0F               	rrf	15,w	;volatile
 19549  0A6F  0C89               	rrf	9,f
 19550  0A70  3901               	andlw	1
 19551  0A71  0020               	movlb	0	; select bank0
 19552  0A72  00A3               	movwf	??_LCDsend2x4
 19553  0A73  0023               	movlb	3	; select bank3
 19554  0A74  0811               	movf	17,w	;volatile
 19555  0A75  391F               	andlw	31
 19556  0A76  0020               	movlb	0	; select bank0
 19557  0A77  0423               	iorwf	??_LCDsend2x4,w
 19558  0A78  1D03               	btfss	3,2
 19559  0A79  2A7B               	goto	u3561
 19560  0A7A  2A7C               	goto	u3560
 19561  0A7B                     u3561:
 19562  0A7B  2A6D               	goto	l4680
 19563  0A7C                     u3560:
 19564  0A7C                     l1297:
 19565                           
 19566                           ;main.c: 277: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 19567  0A7C  0023               	movlb	3	; select bank3
 19568  0A7D  1511               	bsf	17,2	;volatile
 19569  0A7E                     l1298:
 19570  0A7E  1911               	btfsc	17,2	;volatile
 19571  0A7F  2A81               	goto	u3571
 19572  0A80  2A82               	goto	u3570
 19573  0A81                     u3571:
 19574  0A81  2A7E               	goto	l1298
 19575  0A82                     u3570:
 19576  0A82                     l4682:
 19577                           
 19578                           ;main.c: 278: _delay((unsigned long)((50)*(1000000/4000000.0)));
 19579  0A82  3004               	movlw	4
 19580  0A83                     u6757:
 19581  0A83  0B89               	decfsz	9,f
 19582  0A84  2A83               	goto	u6757
 19583  0A85                     l1301:
 19584  0A85  0008               	return
 19585  0A86                     __end_of_LCDsend2x4:
 19586                           
 19587                           	psect	text68
 19588  1753                     __ptext68:	
 19589 ;; *************** function _LCDsend *****************
 19590 ;; Defined at:
 19591 ;;		line 219 in file "main.c"
 19592 ;; Parameters:    Size  Location     Type
 19593 ;;  c               1    wreg     unsigned char 
 19594 ;; Auto vars:     Size  Location     Type
 19595 ;;  c               1    3[BANK0 ] unsigned char 
 19596 ;; Return value:  Size  Location     Type
 19597 ;;                  1    wreg      void 
 19598 ;; Registers used:
 19599 ;;		wreg, status,2, status,0, pclath, cstack
 19600 ;; Tracked objects:
 19601 ;;		On entry : 0/0
 19602 ;;		On exit  : 0/0
 19603 ;;		Unchanged: 0/0
 19604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19607 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19608 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19609 ;;Total ram usage:        2 bytes
 19610 ;; Hardware stack levels used:    1
 19611 ;; Hardware stack levels required when called:    6
 19612 ;; This function calls:
 19613 ;;		_WriteI2C
 19614 ;; This function is called by:
 19615 ;;		_LCDinit
 19616 ;; This function uses a non-reentrant model
 19617 ;;
 19618                           
 19619                           
 19620                           ;psect for function _LCDsend
 19621  1753                     _LCDsend:
 19622                           
 19623                           ;incstack = 0
 19624                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 19625                           ;LCDsend@c stored from wreg
 19626  1753  0020               	movlb	0	; select bank0
 19627  1754  00A3               	movwf	LCDsend@c
 19628  1755                     l5290:
 19629  1755                     l5292:	
 19630                           ;main.c: 221: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19631                           
 19632  1755  0023               	movlb	3	; select bank3
 19633  1756  0C0F               	rrf	15,w	;volatile
 19634  1757  0C89               	rrf	9,f
 19635  1758  3901               	andlw	1
 19636  1759  0020               	movlb	0	; select bank0
 19637  175A  00A2               	movwf	??_LCDsend
 19638  175B  0023               	movlb	3	; select bank3
 19639  175C  0811               	movf	17,w	;volatile
 19640  175D  391F               	andlw	31
 19641  175E  0020               	movlb	0	; select bank0
 19642  175F  0422               	iorwf	??_LCDsend,w
 19643  1760  1D03               	btfss	3,2
 19644  1761  2F63               	goto	u4481
 19645  1762  2F64               	goto	u4480
 19646  1763                     u4481:
 19647  1763  2F55               	goto	l5292
 19648  1764                     u4480:
 19649  1764                     l1168:
 19650                           
 19651                           ;main.c: 222: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 19652  1764  0023               	movlb	3	; select bank3
 19653  1765  1411               	bsf	17,0	;volatile
 19654  1766                     l1169:
 19655  1766  1811               	btfsc	17,0	;volatile
 19656  1767  2F69               	goto	u4491
 19657  1768  2F6A               	goto	u4490
 19658  1769                     u4491:
 19659  1769  2F66               	goto	l1169
 19660  176A                     u4490:
 19661  176A                     l5294:
 19662  176A  0023               	movlb	3	; select bank3
 19663  176B  0C0F               	rrf	15,w	;volatile
 19664  176C  0C89               	rrf	9,f
 19665  176D  3901               	andlw	1
 19666  176E  0020               	movlb	0	; select bank0
 19667  176F  00A2               	movwf	??_LCDsend
 19668  1770  0023               	movlb	3	; select bank3
 19669  1771  0811               	movf	17,w	;volatile
 19670  1772  391F               	andlw	31
 19671  1773  0020               	movlb	0	; select bank0
 19672  1774  0422               	iorwf	??_LCDsend,w
 19673  1775  1D03               	btfss	3,2
 19674  1776  2F78               	goto	u4501
 19675  1777  2F79               	goto	u4500
 19676  1778                     u4501:
 19677  1778  2F6A               	goto	l5294
 19678  1779                     u4500:
 19679  1779                     l5296:
 19680                           
 19681                           ;main.c: 223: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19682  1779  304E               	movlw	78
 19683  177A  3197  27A6  3197   	fcall	_WriteI2C
 19684  177D                     l5298:
 19685  177D  0023               	movlb	3	; select bank3
 19686  177E  0C0F               	rrf	15,w	;volatile
 19687  177F  0C89               	rrf	9,f
 19688  1780  3901               	andlw	1
 19689  1781  0020               	movlb	0	; select bank0
 19690  1782  00A2               	movwf	??_LCDsend
 19691  1783  0023               	movlb	3	; select bank3
 19692  1784  0811               	movf	17,w	;volatile
 19693  1785  391F               	andlw	31
 19694  1786  0020               	movlb	0	; select bank0
 19695  1787  0422               	iorwf	??_LCDsend,w
 19696  1788  1D03               	btfss	3,2
 19697  1789  2F8B               	goto	u4511
 19698  178A  2F8C               	goto	u4510
 19699  178B                     u4511:
 19700  178B  2F7D               	goto	l5298
 19701  178C                     u4510:
 19702  178C                     l5300:
 19703                           
 19704                           ;main.c: 224: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19705  178C  0823               	movf	LCDsend@c,w
 19706  178D  3197  27A6  3197   	fcall	_WriteI2C
 19707  1790                     l5302:
 19708  1790  0023               	movlb	3	; select bank3
 19709  1791  0C0F               	rrf	15,w	;volatile
 19710  1792  0C89               	rrf	9,f
 19711  1793  3901               	andlw	1
 19712  1794  0020               	movlb	0	; select bank0
 19713  1795  00A2               	movwf	??_LCDsend
 19714  1796  0023               	movlb	3	; select bank3
 19715  1797  0811               	movf	17,w	;volatile
 19716  1798  391F               	andlw	31
 19717  1799  0020               	movlb	0	; select bank0
 19718  179A  0422               	iorwf	??_LCDsend,w
 19719  179B  1D03               	btfss	3,2
 19720  179C  2F9E               	goto	u4521
 19721  179D  2F9F               	goto	u4520
 19722  179E                     u4521:
 19723  179E  2F90               	goto	l5302
 19724  179F                     u4520:
 19725  179F                     l1180:
 19726                           
 19727                           ;main.c: 225: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 19728  179F  0023               	movlb	3	; select bank3
 19729  17A0  1511               	bsf	17,2	;volatile
 19730  17A1                     l1181:
 19731  17A1  1911               	btfsc	17,2	;volatile
 19732  17A2  2FA4               	goto	u4531
 19733  17A3  2FA5               	goto	u4530
 19734  17A4                     u4531:
 19735  17A4  2FA1               	goto	l1181
 19736  17A5                     u4530:
 19737  17A5                     l1184:
 19738  17A5  0008               	return
 19739  17A6                     __end_of_LCDsend:
 19740                           
 19741                           	psect	text69
 19742  17A6                     __ptext69:	
 19743 ;; *************** function _WriteI2C *****************
 19744 ;; Defined at:
 19745 ;;		line 47 in file "I2C/i2c.c"
 19746 ;; Parameters:    Size  Location     Type
 19747 ;;  data_out        1    wreg     unsigned char 
 19748 ;; Auto vars:     Size  Location     Type
 19749 ;;  data_out        1    1[BANK0 ] unsigned char 
 19750 ;; Return value:  Size  Location     Type
 19751 ;;                  1    wreg      char 
 19752 ;; Registers used:
 19753 ;;		wreg, status,2, status,0
 19754 ;; Tracked objects:
 19755 ;;		On entry : 0/0
 19756 ;;		On exit  : 0/0
 19757 ;;		Unchanged: 0/0
 19758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19760 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19761 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19762 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19763 ;;Total ram usage:        2 bytes
 19764 ;; Hardware stack levels used:    1
 19765 ;; Hardware stack levels required when called:    5
 19766 ;; This function calls:
 19767 ;;		Nothing
 19768 ;; This function is called by:
 19769 ;;		_LCDsend
 19770 ;;		_LCDsend2x4
 19771 ;;		_LCDrecv
 19772 ;; This function uses a non-reentrant model
 19773 ;;
 19774                           
 19775                           
 19776                           ;psect for function _WriteI2C
 19777  17A6                     _WriteI2C:
 19778                           
 19779                           ;incstack = 0
 19780                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 19781                           ;WriteI2C@data_out stored from wreg
 19782  17A6  0020               	movlb	0	; select bank0
 19783  17A7  00A1               	movwf	WriteI2C@data_out
 19784  17A8                     l4598:
 19785                           
 19786                           ;i2c.c: 49: SSP1BUF = data_out;
 19787  17A8  0821               	movf	WriteI2C@data_out,w
 19788  17A9  0023               	movlb	3	; select bank3
 19789  17AA  008C               	movwf	12	;volatile
 19790  17AB                     l4600:
 19791                           
 19792                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 19793  17AB  1F90               	btfss	16,7	;volatile
 19794  17AC  2FAE               	goto	u3341
 19795  17AD  2FAF               	goto	u3340
 19796  17AE                     u3341:
 19797  17AE  2FB0               	goto	l4606
 19798  17AF                     u3340:
 19799  17AF  2FFF               	goto	l30
 19800  17B0                     l4606:
 19801                           
 19802                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 19803  17B0  300F               	movlw	15
 19804  17B1  0510               	andwf	16,w	;volatile
 19805  17B2  0020               	movlb	0	; select bank0
 19806  17B3  00A0               	movwf	??_WriteI2C
 19807  17B4  3008               	movlw	8
 19808  17B5  0620               	xorwf	??_WriteI2C,w
 19809  17B6  1903               	btfsc	3,2
 19810  17B7  2FB9               	goto	u3351
 19811  17B8  2FBA               	goto	u3350
 19812  17B9                     u3351:
 19813  17B9  2FD3               	goto	l4618
 19814  17BA                     u3350:
 19815  17BA                     l4608:
 19816  17BA  300F               	movlw	15
 19817  17BB  0023               	movlb	3	; select bank3
 19818  17BC  0510               	andwf	16,w	;volatile
 19819  17BD  0020               	movlb	0	; select bank0
 19820  17BE  00A0               	movwf	??_WriteI2C
 19821  17BF  300B               	movlw	11
 19822  17C0  0620               	xorwf	??_WriteI2C,w
 19823  17C1  1903               	btfsc	3,2
 19824  17C2  2FC4               	goto	u3361
 19825  17C3  2FC5               	goto	u3360
 19826  17C4                     u3361:
 19827  17C4  2FD3               	goto	l4618
 19828  17C5                     u3360:
 19829  17C5                     l4610:
 19830                           
 19831                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 19832  17C5  0023               	movlb	3	; select bank3
 19833  17C6  1610               	bsf	16,4	;volatile
 19834  17C7                     l33:	
 19835                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 19836                           
 19837  17C7  002E               	movlb	14	; select bank14
 19838  17C8  1C0F               	btfss	15,0	;volatile
 19839  17C9  2FCB               	goto	u3371
 19840  17CA  2FCC               	goto	u3370
 19841  17CB                     u3371:
 19842  17CB  2FC7               	goto	l33
 19843  17CC                     u3370:
 19844  17CC                     l35:
 19845                           
 19846                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 19847  17CC  0023               	movlb	3	; select bank3
 19848  17CD  190F               	btfsc	15,2	;volatile
 19849  17CE  2FD0               	goto	u3381
 19850  17CF  2FD1               	goto	u3380
 19851  17D0                     u3381:
 19852  17D0  2FFF               	goto	l30
 19853  17D1                     u3380:
 19854  17D1                     l4612:
 19855  17D1  080F               	movf	15,w	;volatile
 19856  17D2  2FFF               	goto	l30
 19857  17D3                     l4618:
 19858                           
 19859                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 19860  17D3  300F               	movlw	15
 19861  17D4  0023               	movlb	3	; select bank3
 19862  17D5  0510               	andwf	16,w	;volatile
 19863  17D6  0020               	movlb	0	; select bank0
 19864  17D7  00A0               	movwf	??_WriteI2C
 19865  17D8  3008               	movlw	8
 19866  17D9  0620               	xorwf	??_WriteI2C,w
 19867  17DA  1903               	btfsc	3,2
 19868  17DB  2FDD               	goto	u3391
 19869  17DC  2FDE               	goto	u3390
 19870  17DD                     u3391:
 19871  17DD  2FE9               	goto	l42
 19872  17DE                     u3390:
 19873  17DE                     l4620:
 19874  17DE  300F               	movlw	15
 19875  17DF  0023               	movlb	3	; select bank3
 19876  17E0  0510               	andwf	16,w	;volatile
 19877  17E1  0020               	movlb	0	; select bank0
 19878  17E2  00A0               	movwf	??_WriteI2C
 19879  17E3  300B               	movlw	11
 19880  17E4  0620               	xorwf	??_WriteI2C,w
 19881  17E5  1D03               	btfss	3,2
 19882  17E6  2FE8               	goto	u3401
 19883  17E7  2FE9               	goto	u3400
 19884  17E8                     u3401:
 19885  17E8  2FFF               	goto	l30
 19886  17E9                     u3400:
 19887  17E9                     l42:
 19888  17E9  0023               	movlb	3	; select bank3
 19889  17EA  180F               	btfsc	15,0	;volatile
 19890  17EB  2FED               	goto	u3411
 19891  17EC  2FEE               	goto	u3410
 19892  17ED                     u3411:
 19893  17ED  2FE9               	goto	l42
 19894  17EE                     u3410:
 19895  17EE                     l4622:
 19896  17EE  0023               	movlb	3	; select bank3
 19897  17EF  0C0F               	rrf	15,w	;volatile
 19898  17F0  0C89               	rrf	9,f
 19899  17F1  3901               	andlw	1
 19900  17F2  0020               	movlb	0	; select bank0
 19901  17F3  00A0               	movwf	??_WriteI2C
 19902  17F4  0023               	movlb	3	; select bank3
 19903  17F5  0811               	movf	17,w	;volatile
 19904  17F6  391F               	andlw	31
 19905  17F7  0020               	movlb	0	; select bank0
 19906  17F8  0420               	iorwf	??_WriteI2C,w
 19907  17F9  1D03               	btfss	3,2
 19908  17FA  2FFC               	goto	u3421
 19909  17FB  2FFD               	goto	u3420
 19910  17FC                     u3421:
 19911  17FC  2FEE               	goto	l4622
 19912  17FD                     u3420:
 19913  17FD                     l47:
 19914                           
 19915                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 19916  17FD  0023               	movlb	3	; select bank3
 19917  17FE  0811               	movf	17,w	;volatile
 19918  17FF                     l30:
 19919  17FF  0008               	return
 19920  1800                     __end_of_WriteI2C:
 19921                           
 19922                           	psect	text70
 19923  1F9C                     __ptext70:	
 19924 ;; *************** function _EUSART_is_rx_ready *****************
 19925 ;; Defined at:
 19926 ;;		line 118 in file "mcc_generated_files/eusart.c"
 19927 ;; Parameters:    Size  Location     Type
 19928 ;;		None
 19929 ;; Auto vars:     Size  Location     Type
 19930 ;;		None
 19931 ;; Return value:  Size  Location     Type
 19932 ;;                  1    wreg      unsigned char 
 19933 ;; Registers used:
 19934 ;;		wreg
 19935 ;; Tracked objects:
 19936 ;;		On entry : 0/0
 19937 ;;		On exit  : 0/0
 19938 ;;		Unchanged: 0/0
 19939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19944 ;;Total ram usage:        0 bytes
 19945 ;; Hardware stack levels used:    1
 19946 ;; Hardware stack levels required when called:    5
 19947 ;; This function calls:
 19948 ;;		Nothing
 19949 ;; This function is called by:
 19950 ;;		_main
 19951 ;; This function uses a non-reentrant model
 19952 ;;
 19953                           
 19954                           
 19955                           ;psect for function _EUSART_is_rx_ready
 19956  1F9C                     _EUSART_is_rx_ready:
 19957  1F9C                     l5692:	
 19958                           ;incstack = 0
 19959                           ; Regs used in _EUSART_is_rx_ready: [wreg]
 19960                           
 19961                           
 19962                           ;eusart.c: 120: return eusartRxCount;
 19963  1F9C  0021               	movlb	1	; select bank1
 19964  1F9D  0859               	movf	_eusartRxCount^(0+128),w	;volatile
 19965  1F9E                     l890:
 19966  1F9E  0008               	return
 19967  1F9F                     __end_of_EUSART_is_rx_ready:
 19968                           
 19969                           	psect	text71
 19970  12F2                     __ptext71:	
 19971 ;; *************** function _DATAEE_WriteByte *****************
 19972 ;; Defined at:
 19973 ;;		line 180 in file "mcc_generated_files/memory.c"
 19974 ;; Parameters:    Size  Location     Type
 19975 ;;  bAdd            2    0[BANK0 ] unsigned int 
 19976 ;;  bData           1    2[BANK0 ] unsigned char 
 19977 ;; Auto vars:     Size  Location     Type
 19978 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
 19979 ;; Return value:  Size  Location     Type
 19980 ;;                  1    wreg      void 
 19981 ;; Registers used:
 19982 ;;		wreg, status,2, status,0
 19983 ;; Tracked objects:
 19984 ;;		On entry : 0/0
 19985 ;;		On exit  : 0/0
 19986 ;;		Unchanged: 0/0
 19987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19988 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19991 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19992 ;;Total ram usage:        4 bytes
 19993 ;; Hardware stack levels used:    1
 19994 ;; Hardware stack levels required when called:    5
 19995 ;; This function calls:
 19996 ;;		Nothing
 19997 ;; This function is called by:
 19998 ;;		_main
 19999 ;; This function uses a non-reentrant model
 20000 ;;
 20001                           
 20002                           
 20003                           ;psect for function _DATAEE_WriteByte
 20004  12F2                     _DATAEE_WriteByte:
 20005  12F2                     l5672:	
 20006                           ;incstack = 0
 20007                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 20008                           
 20009                           
 20010                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 20011  12F2  3000               	movlw	0
 20012  12F3  1B8B               	btfsc	11,7	;volatile
 20013  12F4  3001               	movlw	1
 20014  12F5  0020               	movlb	0	; select bank0
 20015  12F6  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
 20016                           
 20017                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 20018  12F7  0821               	movf	DATAEE_WriteByte@bAdd+1,w
 20019  12F8  0030               	movlb	16	; select bank16
 20020  12F9  009B               	movwf	27	;volatile
 20021  12FA                     l5674:
 20022                           
 20023                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 20024  12FA  0020               	movlb	0	; select bank0
 20025  12FB  0820               	movf	DATAEE_WriteByte@bAdd,w
 20026  12FC  0030               	movlb	16	; select bank16
 20027  12FD  009A               	movwf	26	;volatile
 20028  12FE                     l5676:
 20029                           
 20030                           ;memory.c: 186: NVMDATL = bData;
 20031  12FE  0020               	movlb	0	; select bank0
 20032  12FF  0822               	movf	DATAEE_WriteByte@bData,w
 20033  1300  0030               	movlb	16	; select bank16
 20034  1301  009C               	movwf	28	;volatile
 20035  1302                     l5678:
 20036                           
 20037                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 20038  1302  171E               	bsf	30,6	;volsfr
 20039  1303                     l5680:
 20040                           
 20041                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 20042  1303  151E               	bsf	30,2	;volsfr
 20043  1304                     l5682:
 20044                           
 20045                           ;memory.c: 189: INTCONbits.GIE = 0;
 20046  1304  138B               	bcf	11,7	;volatile
 20047  1305                     l5684:
 20048                           
 20049                           ;memory.c: 190: NVMCON2 = 0x55;
 20050  1305  3055               	movlw	85
 20051  1306  009F               	movwf	31	;volsfr
 20052  1307                     l5686:
 20053                           
 20054                           ;memory.c: 191: NVMCON2 = 0xAA;
 20055  1307  30AA               	movlw	170
 20056  1308  009F               	movwf	31	;volsfr
 20057  1309                     l5688:
 20058                           
 20059                           ;memory.c: 192: NVMCON1bits.WR = 1;
 20060  1309  149E               	bsf	30,1	;volsfr
 20061  130A                     l801:	
 20062                           ;memory.c: 195: {
 20063                           
 20064  130A  189E               	btfsc	30,1	;volsfr
 20065  130B  2B0D               	goto	u5221
 20066  130C  2B0E               	goto	u5220
 20067  130D                     u5221:
 20068  130D  2B0A               	goto	l801
 20069  130E                     u5220:
 20070  130E                     l803:
 20071                           
 20072                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 20073  130E  111E               	bcf	30,2	;volsfr
 20074  130F                     l5690:
 20075                           
 20076                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 20077  130F  0020               	movlb	0	; select bank0
 20078  1310  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
 20079  1311  1C03               	skipc
 20080  1312  138B               	bcf	11,7	;volatile
 20081  1313  1803               	skipnc
 20082  1314  178B               	bsf	11,7	;volatile
 20083  1315                     l804:
 20084  1315  0008               	return
 20085  1316                     __end_of_DATAEE_WriteByte:
 20086                           
 20087                           	psect	intentry
 20088  0004                     __pintentry:	
 20089 ;; *************** function _INTERRUPT_InterruptManager *****************
 20090 ;; Defined at:
 20091 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 20092 ;; Parameters:    Size  Location     Type
 20093 ;;		None
 20094 ;; Auto vars:     Size  Location     Type
 20095 ;;		None
 20096 ;; Return value:  Size  Location     Type
 20097 ;;                  1    wreg      void 
 20098 ;; Registers used:
 20099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20100 ;; Tracked objects:
 20101 ;;		On entry : 0/0
 20102 ;;		On exit  : 0/0
 20103 ;;		Unchanged: 0/0
 20104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20109 ;;Total ram usage:        0 bytes
 20110 ;; Hardware stack levels used:    1
 20111 ;; Hardware stack levels required when called:    4
 20112 ;; This function calls:
 20113 ;;		Absolute function
 20114 ;;		_EUSART_Receive_ISR
 20115 ;;		_EUSART_Transmit_ISR
 20116 ;;		_INT_ISR
 20117 ;;		_TMR1_ISR
 20118 ;;		_TMR5_ISR
 20119 ;; This function is called by:
 20120 ;;		Interrupt level 1
 20121 ;; This function uses a non-reentrant model
 20122 ;;
 20123                           
 20124  0004                     _INTERRUPT_InterruptManager:
 20125                           
 20126                           ;incstack = 0
 20127  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 20128                           
 20129                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 20130  0005  3180               	pagesel	$
 20131  0006                     i1l6216:
 20132                           
 20133                           ;interrupt_manager.c: 55: if(PIE0bits.INTE == 1 && PIR0bits.INTF == 1)
 20134  0006  002E               	movlb	14	; select bank14
 20135  0007  1C16               	btfss	22,0	;volatile
 20136  0008  280A               	goto	u619_21
 20137  0009  280B               	goto	u619_20
 20138  000A                     u619_21:
 20139  000A  2813               	goto	i1l368
 20140  000B                     u619_20:
 20141  000B                     i1l6218:
 20142  000B  1C0C               	btfss	12,0	;volatile
 20143  000C  280E               	goto	u620_21
 20144  000D  280F               	goto	u620_20
 20145  000E                     u620_21:
 20146  000E  2813               	goto	i1l368
 20147  000F                     u620_20:
 20148  000F                     i1l6220:
 20149                           
 20150                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: INT_ISR();
 20151  000F  319F  27B9  3180   	fcall	_INT_ISR
 20152                           
 20153                           ;interrupt_manager.c: 58: }
 20154  0012  285C               	goto	i1l384
 20155  0013                     i1l368:
 20156                           
 20157                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
 20158  0013  1F0B               	btfss	11,6	;volatile
 20159  0014  2816               	goto	u621_21
 20160  0015  2817               	goto	u621_20
 20161  0016                     u621_21:
 20162  0016  285C               	goto	i1l384
 20163  0017                     u621_20:
 20164  0017                     i1l6222:
 20165                           
 20166                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE3bits.TXIE == 1 && PIR3bits.T
      +                          XIF == 1)
 20167  0017  1E19               	btfss	25,4	;volatile
 20168  0018  281A               	goto	u622_21
 20169  0019  281B               	goto	u622_20
 20170  001A                     u622_21:
 20171  001A  2826               	goto	i1l371
 20172  001B                     u622_20:
 20173  001B                     i1l6224:
 20174  001B  1E0F               	btfss	15,4	;volatile
 20175  001C  281E               	goto	u623_21
 20176  001D  281F               	goto	u623_20
 20177  001E                     u623_21:
 20178  001E  2826               	goto	i1l371
 20179  001F                     u623_20:
 20180  001F                     i1l6226:
 20181                           
 20182                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART_TxDefaultInterruptHandler();
 20183  001F  0022               	movlb	2	; select bank2
 20184  0020  0837               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
 20185  0021  008A               	movwf	10
 20186  0022  0836               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
 20187  0023  000A               	callw
 20188  0024  3180               	pagesel	$
 20189                           
 20190                           ;interrupt_manager.c: 64: }
 20191  0025  285C               	goto	i1l384
 20192  0026                     i1l371:
 20193                           
 20194                           ;interrupt_manager.c: 65: else if(PIE3bits.RCIE == 1 && PIR3bits.RCIF == 1)
 20195  0026  1E99               	btfss	25,5	;volatile
 20196  0027  2829               	goto	u624_21
 20197  0028  282A               	goto	u624_20
 20198  0029                     u624_21:
 20199  0029  2835               	goto	i1l373
 20200  002A                     u624_20:
 20201  002A                     i1l6228:
 20202  002A  1E8F               	btfss	15,5	;volatile
 20203  002B  282D               	goto	u625_21
 20204  002C  282E               	goto	u625_20
 20205  002D                     u625_21:
 20206  002D  2835               	goto	i1l373
 20207  002E                     u625_20:
 20208  002E                     i1l6230:
 20209                           
 20210                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: EUSART_RxDefaultInterruptHandler();
 20211  002E  0022               	movlb	2	; select bank2
 20212  002F  0835               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
 20213  0030  008A               	movwf	10
 20214  0031  0834               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
 20215  0032  000A               	callw
 20216  0033  3180               	pagesel	$
 20217                           
 20218                           ;interrupt_manager.c: 68: }
 20219  0034  285C               	goto	i1l384
 20220  0035                     i1l373:
 20221                           
 20222                           ;interrupt_manager.c: 69: else if(PIE4bits.TMR5IE == 1 && PIR4bits.TMR5IF == 1)
 20223  0035  1E1A               	btfss	26,4	;volatile
 20224  0036  2838               	goto	u626_21
 20225  0037  2839               	goto	u626_20
 20226  0038                     u626_21:
 20227  0038  2841               	goto	i1l375
 20228  0039                     u626_20:
 20229  0039                     i1l6232:
 20230  0039  1E10               	btfss	16,4	;volatile
 20231  003A  283C               	goto	u627_21
 20232  003B  283D               	goto	u627_20
 20233  003C                     u627_21:
 20234  003C  2841               	goto	i1l375
 20235  003D                     u627_20:
 20236  003D                     i1l6234:
 20237                           
 20238                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR5_ISR();
 20239  003D  3190  20E3  3180   	fcall	_TMR5_ISR
 20240                           
 20241                           ;interrupt_manager.c: 72: }
 20242  0040  285C               	goto	i1l384
 20243  0041                     i1l375:
 20244                           
 20245                           ;interrupt_manager.c: 73: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 20246  0041  1C1A               	btfss	26,0	;volatile
 20247  0042  2844               	goto	u628_21
 20248  0043  2845               	goto	u628_20
 20249  0044                     u628_21:
 20250  0044  284D               	goto	i1l377
 20251  0045                     u628_20:
 20252  0045                     i1l6236:
 20253  0045  1C10               	btfss	16,0	;volatile
 20254  0046  2848               	goto	u629_21
 20255  0047  2849               	goto	u629_20
 20256  0048                     u629_21:
 20257  0048  284D               	goto	i1l377
 20258  0049                     u629_20:
 20259  0049                     i1l6238:
 20260                           
 20261                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: TMR1_ISR();
 20262  0049  3190  20CC  3180   	fcall	_TMR1_ISR
 20263                           
 20264                           ;interrupt_manager.c: 76: }
 20265  004C  285C               	goto	i1l384
 20266  004D                     i1l377:
 20267                           
 20268                           ;interrupt_manager.c: 77: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 20269  004D  1C99               	btfss	25,1	;volatile
 20270  004E  2850               	goto	u630_21
 20271  004F  2851               	goto	u630_20
 20272  0050                     u630_21:
 20273  0050  2856               	goto	i1l379
 20274  0051                     u630_20:
 20275  0051                     i1l6240:
 20276                           
 20277                           ;interrupt_manager.c: 78: {;interrupt_manager.c: 79: i2c1_driver_busCollisionISR();
 20278  0051  1C8F               	btfss	15,1	;volatile
 20279  0052  2854               	goto	u631_21
 20280  0053  2855               	goto	u631_20
 20281  0054                     u631_21:
 20282  0054  2856               	goto	i1l379
 20283  0055                     u631_20:
 20284  0055  285C               	goto	i1l384
 20285  0056                     i1l379:
 20286                           
 20287                           ;interrupt_manager.c: 81: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 20288  0056  1C19               	btfss	25,0	;volatile
 20289  0057  2859               	goto	u632_21
 20290  0058  285A               	goto	u632_20
 20291  0059                     u632_21:
 20292  0059  285C               	goto	i1l378
 20293  005A                     u632_20:
 20294  005A                     i1l6244:
 20295                           
 20296                           ;interrupt_manager.c: 82: {;interrupt_manager.c: 83: i2c1_driver_i2cISR();
 20297  005A  080F               	movf	15,w	;volatile
 20298  005B  285C               	goto	i1l384
 20299  005C                     i1l378:
 20300  005C                     i1l384:
 20301  005C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 20302  005D  0009               	retfie
 20303  005E                     __end_of_INTERRUPT_InterruptManager:
 20304                           
 20305                           	psect	text73
 20306  10E3                     __ptext73:	
 20307 ;; *************** function _TMR5_ISR *****************
 20308 ;; Defined at:
 20309 ;;		line 168 in file "mcc_generated_files/tmr5.c"
 20310 ;; Parameters:    Size  Location     Type
 20311 ;;		None
 20312 ;; Auto vars:     Size  Location     Type
 20313 ;;		None
 20314 ;; Return value:  Size  Location     Type
 20315 ;;                  1    wreg      void 
 20316 ;; Registers used:
 20317 ;;		wreg, status,2, status,0, pclath, cstack
 20318 ;; Tracked objects:
 20319 ;;		On entry : 0/0
 20320 ;;		On exit  : 0/0
 20321 ;;		Unchanged: 0/0
 20322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20327 ;;Total ram usage:        0 bytes
 20328 ;; Hardware stack levels used:    1
 20329 ;; Hardware stack levels required when called:    3
 20330 ;; This function calls:
 20331 ;;		Absolute function
 20332 ;;		_TMR5_DefaultInterruptHandler
 20333 ;;		_TMR5_WriteTimer
 20334 ;;		_monitoring_ISR
 20335 ;; This function is called by:
 20336 ;;		_INTERRUPT_InterruptManager
 20337 ;; This function uses a non-reentrant model
 20338 ;;
 20339                           
 20340                           
 20341                           ;psect for function _TMR5_ISR
 20342  10E3                     _TMR5_ISR:
 20343  10E3                     i1l5654:	
 20344                           ;incstack = 0
 20345                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 20346                           
 20347                           
 20348                           ;tmr5.c: 172: PIR4bits.TMR5IF = 0;
 20349  10E3  002E               	movlb	14	; select bank14
 20350  10E4  1210               	bcf	16,4	;volatile
 20351  10E5                     i1l5656:
 20352                           
 20353                           ;tmr5.c: 173: TMR5_WriteTimer(timer5ReloadVal);
 20354  10E5  0021               	movlb	1	; select bank1
 20355  10E6  0860               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 20356  10E7  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 20357  10E8  085F               	movf	_timer5ReloadVal^(0+128),w	;volatile
 20358  10E9  00F0               	movwf	TMR5_WriteTimer@timerVal
 20359  10EA  3190  2096  3190   	fcall	_TMR5_WriteTimer
 20360  10ED                     i1l5658:
 20361                           
 20362                           ;tmr5.c: 175: if(TMR5_InterruptHandler)
 20363  10ED  0021               	movlb	1	; select bank1
 20364  10EE  085D               	movf	_TMR5_InterruptHandler^(0+128),w
 20365  10EF  045E               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 20366  10F0  1903               	btfsc	3,2
 20367  10F1  28F3               	goto	u520_21
 20368  10F2  28F4               	goto	u520_20
 20369  10F3                     u520_21:
 20370  10F3  28F9               	goto	i1l673
 20371  10F4                     u520_20:
 20372  10F4                     i1l5660:
 20373                           
 20374                           ;tmr5.c: 176: {;tmr5.c: 177: TMR5_InterruptHandler();
 20375  10F4  085E               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 20376  10F5  008A               	movwf	10
 20377  10F6  085D               	movf	_TMR5_InterruptHandler^(0+128),w
 20378  10F7  000A               	callw
 20379  10F8  3190               	pagesel	$
 20380  10F9                     i1l673:
 20381  10F9  0008               	return
 20382  10FA                     __end_of_TMR5_ISR:
 20383                           
 20384                           	psect	text74
 20385  0800                     __ptext74:	
 20386 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 20387 ;; Defined at:
 20388 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 20389 ;; Parameters:    Size  Location     Type
 20390 ;;		None
 20391 ;; Auto vars:     Size  Location     Type
 20392 ;;		None
 20393 ;; Return value:  Size  Location     Type
 20394 ;;                  1    wreg      void 
 20395 ;; Registers used:
 20396 ;;		None
 20397 ;; Tracked objects:
 20398 ;;		On entry : 0/0
 20399 ;;		On exit  : 0/0
 20400 ;;		Unchanged: 0/0
 20401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20406 ;;Total ram usage:        0 bytes
 20407 ;; Hardware stack levels used:    1
 20408 ;; This function calls:
 20409 ;;		Nothing
 20410 ;; This function is called by:
 20411 ;;		_TMR5_Initialize
 20412 ;;		_TMR5_ISR
 20413 ;; This function uses a non-reentrant model
 20414 ;;
 20415                           
 20416                           
 20417                           ;psect for function _TMR5_DefaultInterruptHandler
 20418  0800                     _TMR5_DefaultInterruptHandler:
 20419  0800                     i1l679:	
 20420                           ;incstack = 0
 20421                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 20422                           
 20423  0800  0008               	return
 20424  0801                     __end_of_TMR5_DefaultInterruptHandler:
 20425                           
 20426                           	psect	text75
 20427  0E8D                     __ptext75:	
 20428 ;; *************** function _monitoring_ISR *****************
 20429 ;; Defined at:
 20430 ;;		line 537 in file "main.c"
 20431 ;; Parameters:    Size  Location     Type
 20432 ;;		None
 20433 ;; Auto vars:     Size  Location     Type
 20434 ;;		None
 20435 ;; Return value:  Size  Location     Type
 20436 ;;                  1    wreg      void 
 20437 ;; Registers used:
 20438 ;;		wreg, status,2, status,0, pclath, cstack
 20439 ;; Tracked objects:
 20440 ;;		On entry : 0/0
 20441 ;;		On exit  : 0/0
 20442 ;;		Unchanged: 0/0
 20443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20446 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20447 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20448 ;;Total ram usage:        3 bytes
 20449 ;; Hardware stack levels used:    1
 20450 ;; Hardware stack levels required when called:    2
 20451 ;; This function calls:
 20452 ;;		_ADCC_GetSingleConversion
 20453 ;;		_tsttc
 20454 ;;		i1_DATAEE_WriteByte
 20455 ;;		i1___wmul
 20456 ;; This function is called by:
 20457 ;;		_main
 20458 ;;		_TMR5_ISR
 20459 ;; This function uses a non-reentrant model
 20460 ;;
 20461                           
 20462                           
 20463                           ;psect for function _monitoring_ISR
 20464  0E8D                     _monitoring_ISR:
 20465  0E8D                     i1l5496:	
 20466                           ;incstack = 0
 20467                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 20468                           
 20469                           
 20470                           ;main.c: 538: temp = (uint8_t)tsttc();
 20471  0E8D  318D  2580  318E   	fcall	_tsttc
 20472  0E90  00FA               	movwf	??_monitoring_ISR
 20473  0E91  087A               	movf	??_monitoring_ISR,w
 20474  0E92  0020               	movlb	0	; select bank0
 20475  0E93  00E9               	movwf	_temp
 20476                           
 20477                           ;main.c: 540: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 20478  0E94  3000               	movlw	0
 20479  0E95  3190  20A7  318E   	fcall	_ADCC_GetSingleConversion
 20480  0E98  0870               	movf	?_ADCC_GetSingleConversion,w
 20481  0E99  00FA               	movwf	??_monitoring_ISR
 20482  0E9A  0871               	movf	?_ADCC_GetSingleConversion+1,w
 20483  0E9B  00FB               	movwf	??_monitoring_ISR+1
 20484  0E9C  300D               	movlw	13
 20485  0E9D                     u492_25:
 20486  0E9D  36FB               	lsrf	??_monitoring_ISR+1,f
 20487  0E9E  0CFA               	rrf	??_monitoring_ISR,f
 20488  0E9F  0B89               	decfsz	9,f
 20489  0EA0  2E9D               	goto	u492_25
 20490  0EA1  087A               	movf	??_monitoring_ISR,w
 20491  0EA2  00FC               	movwf	??_monitoring_ISR+2
 20492  0EA3  087C               	movf	??_monitoring_ISR+2,w
 20493  0EA4  0020               	movlb	0	; select bank0
 20494  0EA5  00E8               	movwf	_lumLevel
 20495  0EA6                     i1l5498:
 20496                           
 20497                           ;main.c: 542: if(prevTemp != temp || prevLumLevel != lumLevel){
 20498  0EA6  0869               	movf	_temp,w
 20499  0EA7  00FA               	movwf	??_monitoring_ISR
 20500  0EA8  01FB               	clrf	??_monitoring_ISR+1
 20501  0EA9  0021               	movlb	1	; select bank1
 20502  0EAA  086C               	movf	(_prevTemp+1)^(0+128),w
 20503  0EAB  067B               	xorwf	??_monitoring_ISR+1,w
 20504  0EAC  1D03               	skipz
 20505  0EAD  2EB0               	goto	u493_25
 20506  0EAE  086B               	movf	_prevTemp^(0+128),w
 20507  0EAF  067A               	xorwf	??_monitoring_ISR,w
 20508  0EB0                     u493_25:
 20509  0EB0  1D03               	skipz
 20510  0EB1  2EB3               	goto	u493_21
 20511  0EB2  2EB4               	goto	u493_20
 20512  0EB3                     u493_21:
 20513  0EB3  2EC3               	goto	i1l5502
 20514  0EB4                     u493_20:
 20515  0EB4                     i1l5500:
 20516  0EB4  0020               	movlb	0	; select bank0
 20517  0EB5  0868               	movf	_lumLevel,w
 20518  0EB6  00FA               	movwf	??_monitoring_ISR
 20519  0EB7  01FB               	clrf	??_monitoring_ISR+1
 20520  0EB8  0021               	movlb	1	; select bank1
 20521  0EB9  086A               	movf	(_prevLumLevel+1)^(0+128),w
 20522  0EBA  067B               	xorwf	??_monitoring_ISR+1,w
 20523  0EBB  1D03               	skipz
 20524  0EBC  2EBF               	goto	u494_25
 20525  0EBD  0869               	movf	_prevLumLevel^(0+128),w
 20526  0EBE  067A               	xorwf	??_monitoring_ISR,w
 20527  0EBF                     u494_25:
 20528  0EBF  1903               	skipnz
 20529  0EC0  2EC2               	goto	u494_21
 20530  0EC1  2EC3               	goto	u494_20
 20531  0EC2                     u494_21:
 20532  0EC2  2FB7               	goto	i1l5530
 20533  0EC3                     u494_20:
 20534  0EC3                     i1l5502:
 20535                           
 20536                           ;main.c: 549: DATAEE_WriteByte( (iwrite * 0x5) + 0x7014 + 0x0 , t.h);
 20537  0EC3  087D               	movf	_iwrite,w
 20538  0EC4  00FA               	movwf	??_monitoring_ISR
 20539  0EC5  01FB               	clrf	??_monitoring_ISR+1
 20540  0EC6  087A               	movf	??_monitoring_ISR,w
 20541  0EC7  00F0               	movwf	i1___wmul@multiplier
 20542  0EC8  087B               	movf	??_monitoring_ISR+1,w
 20543  0EC9  00F1               	movwf	i1___wmul@multiplier+1
 20544  0ECA  3005               	movlw	5
 20545  0ECB  00F2               	movwf	i1___wmul@multiplicand
 20546  0ECC  3000               	movlw	0
 20547  0ECD  00F3               	movwf	i1___wmul@multiplicand+1
 20548  0ECE  3191  21D1  318E   	fcall	i1___wmul
 20549  0ED1  0870               	movf	?i1___wmul,w
 20550  0ED2  3E14               	addlw	20
 20551  0ED3  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20552  0ED4  3070               	movlw	112
 20553  0ED5  3D71               	addwfc	?i1___wmul+1,w
 20554  0ED6  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20555  0ED7  0020               	movlb	0	; select bank0
 20556  0ED8  085F               	movf	_t,w
 20557  0ED9  00FC               	movwf	??_monitoring_ISR+2
 20558  0EDA  087C               	movf	??_monitoring_ISR+2,w
 20559  0EDB  00F8               	movwf	i1DATAEE_WriteByte@bData
 20560  0EDC  3191  2195  318E   	fcall	i1_DATAEE_WriteByte
 20561                           
 20562                           ;main.c: 550: DATAEE_WriteByte( (iwrite * 0x5) + 0x7014 + 0x1 , t.m);
 20563  0EDF  087D               	movf	_iwrite,w
 20564  0EE0  00FA               	movwf	??_monitoring_ISR
 20565  0EE1  01FB               	clrf	??_monitoring_ISR+1
 20566  0EE2  087A               	movf	??_monitoring_ISR,w
 20567  0EE3  00F0               	movwf	i1___wmul@multiplier
 20568  0EE4  087B               	movf	??_monitoring_ISR+1,w
 20569  0EE5  00F1               	movwf	i1___wmul@multiplier+1
 20570  0EE6  3005               	movlw	5
 20571  0EE7  00F2               	movwf	i1___wmul@multiplicand
 20572  0EE8  3000               	movlw	0
 20573  0EE9  00F3               	movwf	i1___wmul@multiplicand+1
 20574  0EEA  3191  21D1  318E   	fcall	i1___wmul
 20575  0EED  0870               	movf	?i1___wmul,w
 20576  0EEE  3E15               	addlw	21
 20577  0EEF  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20578  0EF0  3070               	movlw	112
 20579  0EF1  3D71               	addwfc	?i1___wmul+1,w
 20580  0EF2  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20581  0EF3  0020               	movlb	0	; select bank0
 20582  0EF4  0860               	movf	_t+1,w
 20583  0EF5  00FC               	movwf	??_monitoring_ISR+2
 20584  0EF6  087C               	movf	??_monitoring_ISR+2,w
 20585  0EF7  00F8               	movwf	i1DATAEE_WriteByte@bData
 20586  0EF8  3191  2195  318E   	fcall	i1_DATAEE_WriteByte
 20587                           
 20588                           ;main.c: 551: DATAEE_WriteByte( (iwrite * 0x5) + 0x7014 + 0x2 , t.s);
 20589  0EFB  087D               	movf	_iwrite,w
 20590  0EFC  00FA               	movwf	??_monitoring_ISR
 20591  0EFD  01FB               	clrf	??_monitoring_ISR+1
 20592  0EFE  087A               	movf	??_monitoring_ISR,w
 20593  0EFF  00F0               	movwf	i1___wmul@multiplier
 20594  0F00  087B               	movf	??_monitoring_ISR+1,w
 20595  0F01  00F1               	movwf	i1___wmul@multiplier+1
 20596  0F02  3005               	movlw	5
 20597  0F03  00F2               	movwf	i1___wmul@multiplicand
 20598  0F04  3000               	movlw	0
 20599  0F05  00F3               	movwf	i1___wmul@multiplicand+1
 20600  0F06  3191  21D1  318E   	fcall	i1___wmul
 20601  0F09  0870               	movf	?i1___wmul,w
 20602  0F0A  3E16               	addlw	22
 20603  0F0B  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20604  0F0C  3070               	movlw	112
 20605  0F0D  3D71               	addwfc	?i1___wmul+1,w
 20606  0F0E  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20607  0F0F  0020               	movlb	0	; select bank0
 20608  0F10  0861               	movf	_t+2,w
 20609  0F11  00FC               	movwf	??_monitoring_ISR+2
 20610  0F12  087C               	movf	??_monitoring_ISR+2,w
 20611  0F13  00F8               	movwf	i1DATAEE_WriteByte@bData
 20612  0F14  3191  2195  318E   	fcall	i1_DATAEE_WriteByte
 20613                           
 20614                           ;main.c: 552: DATAEE_WriteByte( (iwrite * 0x5) + 0x7014 + 0x3 , temp);
 20615  0F17  087D               	movf	_iwrite,w
 20616  0F18  00FA               	movwf	??_monitoring_ISR
 20617  0F19  01FB               	clrf	??_monitoring_ISR+1
 20618  0F1A  087A               	movf	??_monitoring_ISR,w
 20619  0F1B  00F0               	movwf	i1___wmul@multiplier
 20620  0F1C  087B               	movf	??_monitoring_ISR+1,w
 20621  0F1D  00F1               	movwf	i1___wmul@multiplier+1
 20622  0F1E  3005               	movlw	5
 20623  0F1F  00F2               	movwf	i1___wmul@multiplicand
 20624  0F20  3000               	movlw	0
 20625  0F21  00F3               	movwf	i1___wmul@multiplicand+1
 20626  0F22  3191  21D1  318E   	fcall	i1___wmul
 20627  0F25  0870               	movf	?i1___wmul,w
 20628  0F26  3E17               	addlw	23
 20629  0F27  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20630  0F28  3070               	movlw	112
 20631  0F29  3D71               	addwfc	?i1___wmul+1,w
 20632  0F2A  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20633  0F2B  0020               	movlb	0	; select bank0
 20634  0F2C  0869               	movf	_temp,w
 20635  0F2D  00FC               	movwf	??_monitoring_ISR+2
 20636  0F2E  087C               	movf	??_monitoring_ISR+2,w
 20637  0F2F  00F8               	movwf	i1DATAEE_WriteByte@bData
 20638  0F30  3191  2195  318E   	fcall	i1_DATAEE_WriteByte
 20639                           
 20640                           ;main.c: 553: DATAEE_WriteByte( (iwrite * 0x5) + 0x7014 + 0x4 , lumLevel);
 20641  0F33  087D               	movf	_iwrite,w
 20642  0F34  00FA               	movwf	??_monitoring_ISR
 20643  0F35  01FB               	clrf	??_monitoring_ISR+1
 20644  0F36  087A               	movf	??_monitoring_ISR,w
 20645  0F37  00F0               	movwf	i1___wmul@multiplier
 20646  0F38  087B               	movf	??_monitoring_ISR+1,w
 20647  0F39  00F1               	movwf	i1___wmul@multiplier+1
 20648  0F3A  3005               	movlw	5
 20649  0F3B  00F2               	movwf	i1___wmul@multiplicand
 20650  0F3C  3000               	movlw	0
 20651  0F3D  00F3               	movwf	i1___wmul@multiplicand+1
 20652  0F3E  3191  21D1  318E   	fcall	i1___wmul
 20653  0F41  0870               	movf	?i1___wmul,w
 20654  0F42  3E18               	addlw	24
 20655  0F43  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20656  0F44  3070               	movlw	112
 20657  0F45  3D71               	addwfc	?i1___wmul+1,w
 20658  0F46  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20659  0F47  0020               	movlb	0	; select bank0
 20660  0F48  0868               	movf	_lumLevel,w
 20661  0F49  00FC               	movwf	??_monitoring_ISR+2
 20662  0F4A  087C               	movf	??_monitoring_ISR+2,w
 20663  0F4B  00F8               	movwf	i1DATAEE_WriteByte@bData
 20664  0F4C  3191  2195  318E   	fcall	i1_DATAEE_WriteByte
 20665  0F4F                     i1l5504:
 20666                           
 20667                           ;main.c: 555: if((nr == NREG) && (iread == iwrite)){
 20668  0F4F  0021               	movlb	1	; select bank1
 20669  0F50  0854               	movf	_nr^(0+128),w
 20670  0F51  0020               	movlb	0	; select bank0
 20671  0F52  066F               	xorwf	_NREG,w
 20672  0F53  1D03               	skipz
 20673  0F54  2F56               	goto	u495_21
 20674  0F55  2F57               	goto	u495_20
 20675  0F56                     u495_21:
 20676  0F56  2F61               	goto	i1l1404
 20677  0F57                     u495_20:
 20678  0F57                     i1l5506:
 20679  0F57  0866               	movf	_iread,w
 20680  0F58  067D               	xorwf	_iwrite,w
 20681  0F59  1D03               	skipz
 20682  0F5A  2F5C               	goto	u496_21
 20683  0F5B  2F5D               	goto	u496_20
 20684  0F5C                     u496_21:
 20685  0F5C  2F61               	goto	i1l1404
 20686  0F5D                     u496_20:
 20687  0F5D                     i1l5508:
 20688                           
 20689                           ;main.c: 556: iread++;
 20690  0F5D  3001               	movlw	1
 20691  0F5E  00FA               	movwf	??_monitoring_ISR
 20692  0F5F  087A               	movf	??_monitoring_ISR,w
 20693  0F60  07E6               	addwf	_iread,f
 20694  0F61                     i1l1404:
 20695                           
 20696                           ;main.c: 557: };main.c: 559: iwrite++;
 20697  0F61  3001               	movlw	1
 20698  0F62  00FA               	movwf	??_monitoring_ISR
 20699  0F63  087A               	movf	??_monitoring_ISR,w
 20700  0F64  07FD               	addwf	_iwrite,f
 20701  0F65                     i1l5510:
 20702                           
 20703                           ;main.c: 560: if(iwrite > NREG - 1){
 20704  0F65  086F               	movf	_NREG,w
 20705  0F66  3EFF               	addlw	255
 20706  0F67  00FA               	movwf	??_monitoring_ISR
 20707  0F68  30FF               	movlw	255
 20708  0F69  1803               	skipnc
 20709  0F6A  3000               	movlw	0
 20710  0F6B  00FB               	movwf	??_monitoring_ISR+1
 20711  0F6C  087B               	movf	??_monitoring_ISR+1,w
 20712  0F6D  3A80               	xorlw	128
 20713  0F6E  00FC               	movwf	??_monitoring_ISR+2
 20714  0F6F  3080               	movlw	128
 20715  0F70  027C               	subwf	??_monitoring_ISR+2,w
 20716  0F71  1D03               	skipz
 20717  0F72  2F75               	goto	u497_25
 20718  0F73  087D               	movf	_iwrite,w
 20719  0F74  027A               	subwf	??_monitoring_ISR,w
 20720  0F75                     u497_25:
 20721  0F75  1803               	skipnc
 20722  0F76  2F78               	goto	u497_21
 20723  0F77  2F79               	goto	u497_20
 20724  0F78                     u497_21:
 20725  0F78  2F7D               	goto	i1l5516
 20726  0F79                     u497_20:
 20727  0F79                     i1l5512:
 20728                           
 20729                           ;main.c: 561: flagNr = 1;
 20730  0F79  0021               	movlb	1	; select bank1
 20731  0F7A  01D3               	clrf	_flagNr^(0+128)
 20732  0F7B  0AD3               	incf	_flagNr^(0+128),f
 20733  0F7C                     i1l5514:
 20734                           
 20735                           ;main.c: 562: iwrite = 0;
 20736  0F7C  01FD               	clrf	_iwrite
 20737  0F7D                     i1l5516:
 20738                           
 20739                           ;main.c: 563: };main.c: 564: if(flagNr){
 20740  0F7D  0021               	movlb	1	; select bank1
 20741  0F7E  0853               	movf	_flagNr^(0+128),w
 20742  0F7F  1903               	btfsc	3,2
 20743  0F80  2F82               	goto	u498_21
 20744  0F81  2F83               	goto	u498_20
 20745  0F82                     u498_21:
 20746  0F82  2F8A               	goto	i1l5520
 20747  0F83                     u498_20:
 20748  0F83                     i1l5518:
 20749                           
 20750                           ;main.c: 565: nr = NREG;
 20751  0F83  0020               	movlb	0	; select bank0
 20752  0F84  086F               	movf	_NREG,w
 20753  0F85  00FA               	movwf	??_monitoring_ISR
 20754  0F86  087A               	movf	??_monitoring_ISR,w
 20755  0F87  0021               	movlb	1	; select bank1
 20756  0F88  00D4               	movwf	_nr^(0+128)
 20757                           
 20758                           ;main.c: 566: } else{
 20759  0F89  2F8E               	goto	i1l5522
 20760  0F8A                     i1l5520:
 20761                           
 20762                           ;main.c: 567: nr++;
 20763  0F8A  3001               	movlw	1
 20764  0F8B  00FA               	movwf	??_monitoring_ISR
 20765  0F8C  087A               	movf	??_monitoring_ISR,w
 20766  0F8D  07D4               	addwf	_nr^(0+128),f
 20767  0F8E                     i1l5522:
 20768                           
 20769                           ;main.c: 568: };main.c: 570: if(iread > NREG-1){
 20770  0F8E  0020               	movlb	0	; select bank0
 20771  0F8F  086F               	movf	_NREG,w
 20772  0F90  3EFF               	addlw	255
 20773  0F91  00FA               	movwf	??_monitoring_ISR
 20774  0F92  30FF               	movlw	255
 20775  0F93  1803               	skipnc
 20776  0F94  3000               	movlw	0
 20777  0F95  00FB               	movwf	??_monitoring_ISR+1
 20778  0F96  087B               	movf	??_monitoring_ISR+1,w
 20779  0F97  3A80               	xorlw	128
 20780  0F98  00FC               	movwf	??_monitoring_ISR+2
 20781  0F99  3080               	movlw	128
 20782  0F9A  027C               	subwf	??_monitoring_ISR+2,w
 20783  0F9B  1D03               	skipz
 20784  0F9C  2F9F               	goto	u499_25
 20785  0F9D  0866               	movf	_iread,w
 20786  0F9E  027A               	subwf	??_monitoring_ISR,w
 20787  0F9F                     u499_25:
 20788  0F9F  1803               	skipnc
 20789  0FA0  2FA2               	goto	u499_21
 20790  0FA1  2FA3               	goto	u499_20
 20791  0FA2                     u499_21:
 20792  0FA2  2FA5               	goto	i1l5526
 20793  0FA3                     u499_20:
 20794  0FA3                     i1l5524:
 20795                           
 20796                           ;main.c: 571: iread = 0;
 20797  0FA3  0020               	movlb	0	; select bank0
 20798  0FA4  01E6               	clrf	_iread
 20799  0FA5                     i1l5526:
 20800                           
 20801                           ;main.c: 572: };main.c: 574: prevTemp = temp;
 20802  0FA5  0020               	movlb	0	; select bank0
 20803  0FA6  0869               	movf	_temp,w
 20804  0FA7  00FA               	movwf	??_monitoring_ISR
 20805  0FA8  01FB               	clrf	??_monitoring_ISR+1
 20806  0FA9  087A               	movf	??_monitoring_ISR,w
 20807  0FAA  0021               	movlb	1	; select bank1
 20808  0FAB  00EB               	movwf	_prevTemp^(0+128)
 20809  0FAC  087B               	movf	??_monitoring_ISR+1,w
 20810  0FAD  00EC               	movwf	(_prevTemp+1)^(0+128)
 20811  0FAE                     i1l5528:
 20812                           
 20813                           ;main.c: 575: prevLumLevel = lumLevel;
 20814  0FAE  0020               	movlb	0	; select bank0
 20815  0FAF  0868               	movf	_lumLevel,w
 20816  0FB0  00FA               	movwf	??_monitoring_ISR
 20817  0FB1  01FB               	clrf	??_monitoring_ISR+1
 20818  0FB2  087A               	movf	??_monitoring_ISR,w
 20819  0FB3  0021               	movlb	1	; select bank1
 20820  0FB4  00E9               	movwf	_prevLumLevel^(0+128)
 20821  0FB5  087B               	movf	??_monitoring_ISR+1,w
 20822  0FB6  00EA               	movwf	(_prevLumLevel+1)^(0+128)
 20823  0FB7                     i1l5530:
 20824                           
 20825                           ;main.c: 576: };main.c: 579: if(ALAF == 'A'){
 20826  0FB7  3041               	movlw	65
 20827  0FB8  0020               	movlb	0	; select bank0
 20828  0FB9  066A               	xorwf	_ALAF,w
 20829  0FBA  1D03               	btfss	3,2
 20830  0FBB  2FBD               	goto	u500_21
 20831  0FBC  2FBE               	goto	u500_20
 20832  0FBD                     u500_21:
 20833  0FBD  2FFF               	goto	i1l1424
 20834  0FBE                     u500_20:
 20835  0FBE                     i1l5532:
 20836                           
 20837                           ;main.c: 581: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 20838  0FBE  0021               	movlb	1	; select bank1
 20839  0FBF  0847               	movf	_lumAlarm^(0+128),w
 20840  0FC0  0020               	movlb	0	; select bank0
 20841  0FC1  0268               	subwf	_lumLevel,w
 20842  0FC2  1803               	skipnc
 20843  0FC3  2FC5               	goto	u501_21
 20844  0FC4  2FC6               	goto	u501_20
 20845  0FC5                     u501_21:
 20846  0FC5  2FDC               	goto	i1l5546
 20847  0FC6                     u501_20:
 20848  0FC6                     i1l5534:
 20849  0FC6  0021               	movlb	1	; select bank1
 20850  0FC7  0856               	movf	_editingLumAlarm^(0+128),w
 20851  0FC8  1D03               	btfss	3,2
 20852  0FC9  2FCB               	goto	u502_21
 20853  0FCA  2FCC               	goto	u502_20
 20854  0FCB                     u502_21:
 20855  0FCB  2FDC               	goto	i1l5546
 20856  0FCC                     u502_20:
 20857  0FCC                     i1l5536:
 20858                           
 20859                           ;main.c: 582: if(!lumAlarm.triggered){
 20860  0FCC  0849               	movf	(_lumAlarm^(0+128)+2),w
 20861  0FCD  1D03               	btfss	3,2
 20862  0FCE  2FD0               	goto	u503_21
 20863  0FCF  2FD1               	goto	u503_20
 20864  0FD0                     u503_21:
 20865  0FD0  2FD5               	goto	i1l5540
 20866  0FD1                     u503_20:
 20867  0FD1                     i1l5538:
 20868                           
 20869                           ;main.c: 583: alarmPWMStart.h = 0xff;
 20870  0FD1  30FF               	movlw	255
 20871  0FD2  00FA               	movwf	??_monitoring_ISR
 20872  0FD3  087A               	movf	??_monitoring_ISR,w
 20873  0FD4  00E6               	movwf	_alarmPWMStart^(0+128)
 20874  0FD5                     i1l5540:
 20875                           
 20876                           ;main.c: 584: };main.c: 585: lumAlarm.triggered = 1;
 20877  0FD5  01C9               	clrf	(_lumAlarm^(0+128)+2)
 20878  0FD6  0AC9               	incf	(_lumAlarm^(0+128)+2),f
 20879  0FD7                     i1l5542:
 20880                           
 20881                           ;main.c: 587: lumAlarm.trigger = 1;
 20882  0FD7  01C8               	clrf	(_lumAlarm^(0+128)+1)
 20883  0FD8  0AC8               	incf	(_lumAlarm^(0+128)+1),f
 20884  0FD9                     i1l5544:
 20885  0FD9  0020               	movlb	0	; select bank0
 20886  0FDA  1616               	bsf	22,4	;volatile
 20887  0FDB  2FE0               	goto	i1l5550
 20888  0FDC                     i1l5546:
 20889                           
 20890                           ;main.c: 590: lumAlarm.triggered = 0;
 20891  0FDC  0021               	movlb	1	; select bank1
 20892  0FDD  01C9               	clrf	(_lumAlarm^(0+128)+2)
 20893  0FDE                     i1l5548:
 20894  0FDE  0020               	movlb	0	; select bank0
 20895  0FDF  1216               	bcf	22,4	;volatile
 20896  0FE0                     i1l5550:
 20897                           
 20898                           ;main.c: 592: };main.c: 595: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 20899  0FE0  0869               	movf	_temp,w
 20900  0FE1  0021               	movlb	1	; select bank1
 20901  0FE2  024A               	subwf	_tempAlarm^(0+128),w
 20902  0FE3  1803               	skipnc
 20903  0FE4  2FE6               	goto	u504_21
 20904  0FE5  2FE7               	goto	u504_20
 20905  0FE6                     u504_21:
 20906  0FE6  2FFC               	goto	i1l5564
 20907  0FE7                     u504_20:
 20908  0FE7                     i1l5552:
 20909  0FE7  0857               	movf	_editingTempAlarm^(0+128),w
 20910  0FE8  1D03               	btfss	3,2
 20911  0FE9  2FEB               	goto	u505_21
 20912  0FEA  2FEC               	goto	u505_20
 20913  0FEB                     u505_21:
 20914  0FEB  2FFC               	goto	i1l5564
 20915  0FEC                     u505_20:
 20916  0FEC                     i1l5554:
 20917                           
 20918                           ;main.c: 596: if(!tempAlarm.triggered){
 20919  0FEC  084C               	movf	(_tempAlarm^(0+128)+2),w
 20920  0FED  1D03               	btfss	3,2
 20921  0FEE  2FF0               	goto	u506_21
 20922  0FEF  2FF1               	goto	u506_20
 20923  0FF0                     u506_21:
 20924  0FF0  2FF5               	goto	i1l5558
 20925  0FF1                     u506_20:
 20926  0FF1                     i1l5556:
 20927                           
 20928                           ;main.c: 597: alarmPWMStart.h = 0xff;
 20929  0FF1  30FF               	movlw	255
 20930  0FF2  00FA               	movwf	??_monitoring_ISR
 20931  0FF3  087A               	movf	??_monitoring_ISR,w
 20932  0FF4  00E6               	movwf	_alarmPWMStart^(0+128)
 20933  0FF5                     i1l5558:
 20934                           
 20935                           ;main.c: 598: };main.c: 600: tempAlarm.triggered = 1;
 20936  0FF5  01CC               	clrf	(_tempAlarm^(0+128)+2)
 20937  0FF6  0ACC               	incf	(_tempAlarm^(0+128)+2),f
 20938  0FF7                     i1l5560:
 20939                           
 20940                           ;main.c: 602: tempAlarm.trigger = 1;
 20941  0FF7  01CB               	clrf	(_tempAlarm^(0+128)+1)
 20942  0FF8  0ACB               	incf	(_tempAlarm^(0+128)+1),f
 20943  0FF9                     i1l5562:
 20944  0FF9  0020               	movlb	0	; select bank0
 20945  0FFA  1696               	bsf	22,5	;volatile
 20946  0FFB  2FFF               	goto	i1l1424
 20947  0FFC                     i1l5564:
 20948                           
 20949                           ;main.c: 606: tempAlarm.triggered = 0;
 20950  0FFC  01CC               	clrf	(_tempAlarm^(0+128)+2)
 20951  0FFD                     i1l5566:
 20952  0FFD  0020               	movlb	0	; select bank0
 20953  0FFE  1296               	bcf	22,5	;volatile
 20954  0FFF                     i1l1424:
 20955  0FFF  0008               	return
 20956  1000                     __end_of_monitoring_ISR:
 20957                           
 20958                           	psect	text76
 20959  11D1                     __ptext76:	
 20960 ;; *************** function i1___wmul *****************
 20961 ;; Defined at:
 20962 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 20963 ;; Parameters:    Size  Location     Type
 20964 ;;  multiplier      2    0[COMMON] unsigned int 
 20965 ;;  multiplicand    2    2[COMMON] unsigned int 
 20966 ;; Auto vars:     Size  Location     Type
 20967 ;;  product         2    4[COMMON] unsigned int 
 20968 ;; Return value:  Size  Location     Type
 20969 ;;                  2    0[COMMON] unsigned int 
 20970 ;; Registers used:
 20971 ;;		wreg, status,2, status,0
 20972 ;; Tracked objects:
 20973 ;;		On entry : 0/0
 20974 ;;		On exit  : 0/0
 20975 ;;		Unchanged: 0/0
 20976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20980 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20981 ;;Total ram usage:        6 bytes
 20982 ;; Hardware stack levels used:    1
 20983 ;; This function calls:
 20984 ;;		Nothing
 20985 ;; This function is called by:
 20986 ;;		_monitoring_ISR
 20987 ;; This function uses a non-reentrant model
 20988 ;;
 20989                           
 20990                           
 20991                           ;psect for function i1___wmul
 20992  11D1                     i1___wmul:
 20993  11D1                     i1l5046:	
 20994                           ;incstack = 0
 20995                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 20996                           
 20997  11D1  01F4               	clrf	i1___wmul@product
 20998  11D2  01F5               	clrf	i1___wmul@product+1
 20999  11D3                     i1l5048:
 21000  11D3  1C70               	btfss	i1___wmul@multiplier,0
 21001  11D4  29D6               	goto	u439_21
 21002  11D5  29D7               	goto	u439_20
 21003  11D6                     u439_21:
 21004  11D6  29DB               	goto	i1l1841
 21005  11D7                     u439_20:
 21006  11D7                     i1l5050:
 21007  11D7  0872               	movf	i1___wmul@multiplicand,w
 21008  11D8  07F4               	addwf	i1___wmul@product,f
 21009  11D9  0873               	movf	i1___wmul@multiplicand+1,w
 21010  11DA  3DF5               	addwfc	i1___wmul@product+1,f
 21011  11DB                     i1l1841:
 21012  11DB  3001               	movlw	1
 21013  11DC                     u440_25:
 21014  11DC  35F2               	lslf	i1___wmul@multiplicand,f
 21015  11DD  0DF3               	rlf	i1___wmul@multiplicand+1,f
 21016  11DE  0B89               	decfsz	9,f
 21017  11DF  29DC               	goto	u440_25
 21018  11E0                     i1l5052:
 21019  11E0  3001               	movlw	1
 21020  11E1                     u441_25:
 21021  11E1  36F1               	lsrf	i1___wmul@multiplier+1,f
 21022  11E2  0CF0               	rrf	i1___wmul@multiplier,f
 21023  11E3  0B89               	decfsz	9,f
 21024  11E4  29E1               	goto	u441_25
 21025  11E5                     i1l5054:
 21026  11E5  0870               	movf	i1___wmul@multiplier,w
 21027  11E6  0471               	iorwf	i1___wmul@multiplier+1,w
 21028  11E7  1D03               	btfss	3,2
 21029  11E8  29EA               	goto	u442_21
 21030  11E9  29EB               	goto	u442_20
 21031  11EA                     u442_21:
 21032  11EA  29D3               	goto	i1l5048
 21033  11EB                     u442_20:
 21034  11EB                     i1l5056:
 21035  11EB  0875               	movf	i1___wmul@product+1,w
 21036  11EC  00F1               	movwf	?i1___wmul+1
 21037  11ED  0874               	movf	i1___wmul@product,w
 21038  11EE  00F0               	movwf	?i1___wmul
 21039  11EF                     i1l1843:
 21040  11EF  0008               	return
 21041  11F0                     __end_ofi1___wmul:
 21042                           
 21043                           	psect	text77
 21044  0D80                     __ptext77:	
 21045 ;; *************** function _tsttc *****************
 21046 ;; Defined at:
 21047 ;;		line 190 in file "main.c"
 21048 ;; Parameters:    Size  Location     Type
 21049 ;;		None
 21050 ;; Auto vars:     Size  Location     Type
 21051 ;;  value           1    3[COMMON] unsigned char 
 21052 ;; Return value:  Size  Location     Type
 21053 ;;                  1    wreg      unsigned char 
 21054 ;; Registers used:
 21055 ;;		wreg, status,2, status,0, pclath, cstack
 21056 ;; Tracked objects:
 21057 ;;		On entry : 0/0
 21058 ;;		On exit  : 0/0
 21059 ;;		Unchanged: 0/0
 21060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21063 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21064 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21065 ;;Total ram usage:        2 bytes
 21066 ;; Hardware stack levels used:    1
 21067 ;; Hardware stack levels required when called:    1
 21068 ;; This function calls:
 21069 ;;		_ReadI2C
 21070 ;;		i1_WriteI2C
 21071 ;; This function is called by:
 21072 ;;		_monitoring_ISR
 21073 ;; This function uses a non-reentrant model
 21074 ;;
 21075                           
 21076                           
 21077                           ;psect for function _tsttc
 21078  0D80                     _tsttc:
 21079  0D80                     i1l1089:	
 21080                           ;incstack = 0
 21081                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 21082                           ;main.c: 192: unsigned char value;;main.c: 193: do{
 21083                           
 21084  0D80                     i1l4830:	
 21085                           ;main.c: 194: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21086                           
 21087  0D80  0023               	movlb	3	; select bank3
 21088  0D81  0C0F               	rrf	15,w	;volatile
 21089  0D82  0C89               	rrf	9,f
 21090  0D83  3901               	andlw	1
 21091  0D84  00F2               	movwf	??_tsttc
 21092  0D85  0811               	movf	17,w	;volatile
 21093  0D86  391F               	andlw	31
 21094  0D87  0472               	iorwf	??_tsttc,w
 21095  0D88  1D03               	btfss	3,2
 21096  0D89  2D8B               	goto	u391_21
 21097  0D8A  2D8C               	goto	u391_20
 21098  0D8B                     u391_21:
 21099  0D8B  2D80               	goto	i1l4830
 21100  0D8C                     u391_20:
 21101  0D8C                     i1l1092:
 21102                           
 21103                           ;main.c: 195: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 21104  0D8C  1411               	bsf	17,0	;volatile
 21105  0D8D                     i1l1093:
 21106  0D8D  1811               	btfsc	17,0	;volatile
 21107  0D8E  2D90               	goto	u392_21
 21108  0D8F  2D91               	goto	u392_20
 21109  0D90                     u392_21:
 21110  0D90  2D8D               	goto	i1l1093
 21111  0D91                     u392_20:
 21112  0D91                     i1l4832:
 21113  0D91  0C0F               	rrf	15,w	;volatile
 21114  0D92  0C89               	rrf	9,f
 21115  0D93  3901               	andlw	1
 21116  0D94  00F2               	movwf	??_tsttc
 21117  0D95  0811               	movf	17,w	;volatile
 21118  0D96  391F               	andlw	31
 21119  0D97  0472               	iorwf	??_tsttc,w
 21120  0D98  1D03               	btfss	3,2
 21121  0D99  2D9B               	goto	u393_21
 21122  0D9A  2D9C               	goto	u393_20
 21123  0D9B                     u393_21:
 21124  0D9B  2D91               	goto	i1l4832
 21125  0D9C                     u393_20:
 21126  0D9C                     i1l4834:
 21127                           
 21128                           ;main.c: 197: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21129  0D9C  309A               	movlw	154
 21130  0D9D  3188  2005  318D   	fcall	i1_WriteI2C
 21131  0DA0                     i1l4836:
 21132  0DA0  0023               	movlb	3	; select bank3
 21133  0DA1  0C0F               	rrf	15,w	;volatile
 21134  0DA2  0C89               	rrf	9,f
 21135  0DA3  3901               	andlw	1
 21136  0DA4  00F2               	movwf	??_tsttc
 21137  0DA5  0811               	movf	17,w	;volatile
 21138  0DA6  391F               	andlw	31
 21139  0DA7  0472               	iorwf	??_tsttc,w
 21140  0DA8  1D03               	btfss	3,2
 21141  0DA9  2DAB               	goto	u394_21
 21142  0DAA  2DAC               	goto	u394_20
 21143  0DAB                     u394_21:
 21144  0DAB  2DA0               	goto	i1l4836
 21145  0DAC                     u394_20:
 21146  0DAC                     i1l4838:
 21147                           
 21148                           ;main.c: 198: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21149  0DAC  3001               	movlw	1
 21150  0DAD  3188  2005  318D   	fcall	i1_WriteI2C
 21151  0DB0                     i1l4840:
 21152  0DB0  0023               	movlb	3	; select bank3
 21153  0DB1  0C0F               	rrf	15,w	;volatile
 21154  0DB2  0C89               	rrf	9,f
 21155  0DB3  3901               	andlw	1
 21156  0DB4  00F2               	movwf	??_tsttc
 21157  0DB5  0811               	movf	17,w	;volatile
 21158  0DB6  391F               	andlw	31
 21159  0DB7  0472               	iorwf	??_tsttc,w
 21160  0DB8  1D03               	btfss	3,2
 21161  0DB9  2DBB               	goto	u395_21
 21162  0DBA  2DBC               	goto	u395_20
 21163  0DBB                     u395_21:
 21164  0DBB  2DB0               	goto	i1l4840
 21165  0DBC                     u395_20:
 21166  0DBC                     i1l1104:
 21167                           
 21168                           ;main.c: 199: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
 21169  0DBC  1491               	bsf	17,1	;volatile
 21170  0DBD                     i1l1105:
 21171  0DBD  1891               	btfsc	17,1	;volatile
 21172  0DBE  2DC0               	goto	u396_21
 21173  0DBF  2DC1               	goto	u396_20
 21174  0DC0                     u396_21:
 21175  0DC0  2DBD               	goto	i1l1105
 21176  0DC1                     u396_20:
 21177  0DC1                     i1l4842:
 21178  0DC1  0C0F               	rrf	15,w	;volatile
 21179  0DC2  0C89               	rrf	9,f
 21180  0DC3  3901               	andlw	1
 21181  0DC4  00F2               	movwf	??_tsttc
 21182  0DC5  0811               	movf	17,w	;volatile
 21183  0DC6  391F               	andlw	31
 21184  0DC7  0472               	iorwf	??_tsttc,w
 21185  0DC8  1D03               	btfss	3,2
 21186  0DC9  2DCB               	goto	u397_21
 21187  0DCA  2DCC               	goto	u397_20
 21188  0DCB                     u397_21:
 21189  0DCB  2DC1               	goto	i1l4842
 21190  0DCC                     u397_20:
 21191  0DCC                     i1l4844:
 21192                           
 21193                           ;main.c: 200: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21194  0DCC  309B               	movlw	155
 21195  0DCD  3188  2005  318D   	fcall	i1_WriteI2C
 21196  0DD0                     i1l4846:
 21197  0DD0  0023               	movlb	3	; select bank3
 21198  0DD1  0C0F               	rrf	15,w	;volatile
 21199  0DD2  0C89               	rrf	9,f
 21200  0DD3  3901               	andlw	1
 21201  0DD4  00F2               	movwf	??_tsttc
 21202  0DD5  0811               	movf	17,w	;volatile
 21203  0DD6  391F               	andlw	31
 21204  0DD7  0472               	iorwf	??_tsttc,w
 21205  0DD8  1D03               	btfss	3,2
 21206  0DD9  2DDB               	goto	u398_21
 21207  0DDA  2DDC               	goto	u398_20
 21208  0DDB                     u398_21:
 21209  0DDB  2DD0               	goto	i1l4846
 21210  0DDC                     u398_20:
 21211  0DDC                     i1l4848:
 21212                           
 21213                           ;main.c: 201: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21214  0DDC  3191  212A  318D   	fcall	_ReadI2C
 21215  0DDF  00F2               	movwf	??_tsttc
 21216  0DE0  0872               	movf	??_tsttc,w
 21217  0DE1  00F3               	movwf	tsttc@value
 21218  0DE2                     i1l4850:
 21219  0DE2  0023               	movlb	3	; select bank3
 21220  0DE3  0C0F               	rrf	15,w	;volatile
 21221  0DE4  0C89               	rrf	9,f
 21222  0DE5  3901               	andlw	1
 21223  0DE6  00F2               	movwf	??_tsttc
 21224  0DE7  0811               	movf	17,w	;volatile
 21225  0DE8  391F               	andlw	31
 21226  0DE9  0472               	iorwf	??_tsttc,w
 21227  0DEA  1D03               	btfss	3,2
 21228  0DEB  2DED               	goto	u399_21
 21229  0DEC  2DEE               	goto	u399_20
 21230  0DED                     u399_21:
 21231  0DED  2DE2               	goto	i1l4850
 21232  0DEE                     u399_20:
 21233  0DEE                     i1l1116:
 21234                           
 21235                           ;main.c: 202: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21236  0DEE  1691               	bsf	17,5	;volatile
 21237  0DEF  1611               	bsf	17,4	;volatile
 21238  0DF0                     i1l1117:
 21239  0DF0  1A11               	btfsc	17,4	;volatile
 21240  0DF1  2DF3               	goto	u400_21
 21241  0DF2  2DF4               	goto	u400_20
 21242  0DF3                     u400_21:
 21243  0DF3  2DF0               	goto	i1l1117
 21244  0DF4                     u400_20:
 21245  0DF4                     i1l4852:
 21246  0DF4  0C0F               	rrf	15,w	;volatile
 21247  0DF5  0C89               	rrf	9,f
 21248  0DF6  3901               	andlw	1
 21249  0DF7  00F2               	movwf	??_tsttc
 21250  0DF8  0811               	movf	17,w	;volatile
 21251  0DF9  391F               	andlw	31
 21252  0DFA  0472               	iorwf	??_tsttc,w
 21253  0DFB  1D03               	btfss	3,2
 21254  0DFC  2DFE               	goto	u401_21
 21255  0DFD  2DFF               	goto	u401_20
 21256  0DFE                     u401_21:
 21257  0DFE  2DF4               	goto	i1l4852
 21258  0DFF                     u401_20:
 21259  0DFF                     i1l1122:
 21260                           
 21261                           ;main.c: 203: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 21262  0DFF  1511               	bsf	17,2	;volatile
 21263  0E00                     i1l1123:
 21264  0E00  1911               	btfsc	17,2	;volatile
 21265  0E01  2E03               	goto	u402_21
 21266  0E02  2E04               	goto	u402_20
 21267  0E03                     u402_21:
 21268  0E03  2E00               	goto	i1l1123
 21269  0E04                     u402_20:
 21270  0E04                     i1l1125:
 21271                           
 21272                           ;main.c: 204: } while (!(value & 0x40));
 21273  0E04  1F73               	btfss	tsttc@value,6
 21274  0E05  2E07               	goto	u403_21
 21275  0E06  2E08               	goto	u403_20
 21276  0E07                     u403_21:
 21277  0E07  2D80               	goto	i1l1089
 21278  0E08                     u403_20:
 21279  0E08                     i1l4854:
 21280  0E08  0C0F               	rrf	15,w	;volatile
 21281  0E09  0C89               	rrf	9,f
 21282  0E0A  3901               	andlw	1
 21283  0E0B  00F2               	movwf	??_tsttc
 21284  0E0C  0811               	movf	17,w	;volatile
 21285  0E0D  391F               	andlw	31
 21286  0E0E  0472               	iorwf	??_tsttc,w
 21287  0E0F  1D03               	btfss	3,2
 21288  0E10  2E12               	goto	u404_21
 21289  0E11  2E13               	goto	u404_20
 21290  0E12                     u404_21:
 21291  0E12  2E08               	goto	i1l4854
 21292  0E13                     u404_20:
 21293  0E13                     i1l1129:
 21294                           
 21295                           ;main.c: 207: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 21296  0E13  1411               	bsf	17,0	;volatile
 21297  0E14                     i1l1130:
 21298  0E14  1811               	btfsc	17,0	;volatile
 21299  0E15  2E17               	goto	u405_21
 21300  0E16  2E18               	goto	u405_20
 21301  0E17                     u405_21:
 21302  0E17  2E14               	goto	i1l1130
 21303  0E18                     u405_20:
 21304  0E18                     i1l4856:
 21305  0E18  0C0F               	rrf	15,w	;volatile
 21306  0E19  0C89               	rrf	9,f
 21307  0E1A  3901               	andlw	1
 21308  0E1B  00F2               	movwf	??_tsttc
 21309  0E1C  0811               	movf	17,w	;volatile
 21310  0E1D  391F               	andlw	31
 21311  0E1E  0472               	iorwf	??_tsttc,w
 21312  0E1F  1D03               	btfss	3,2
 21313  0E20  2E22               	goto	u406_21
 21314  0E21  2E23               	goto	u406_20
 21315  0E22                     u406_21:
 21316  0E22  2E18               	goto	i1l4856
 21317  0E23                     u406_20:
 21318  0E23                     i1l4858:
 21319                           
 21320                           ;main.c: 208: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21321  0E23  309A               	movlw	154
 21322  0E24  3188  2005  318D   	fcall	i1_WriteI2C
 21323  0E27                     i1l4860:
 21324  0E27  0023               	movlb	3	; select bank3
 21325  0E28  0C0F               	rrf	15,w	;volatile
 21326  0E29  0C89               	rrf	9,f
 21327  0E2A  3901               	andlw	1
 21328  0E2B  00F2               	movwf	??_tsttc
 21329  0E2C  0811               	movf	17,w	;volatile
 21330  0E2D  391F               	andlw	31
 21331  0E2E  0472               	iorwf	??_tsttc,w
 21332  0E2F  1D03               	btfss	3,2
 21333  0E30  2E32               	goto	u407_21
 21334  0E31  2E33               	goto	u407_20
 21335  0E32                     u407_21:
 21336  0E32  2E27               	goto	i1l4860
 21337  0E33                     u407_20:
 21338  0E33                     i1l4862:
 21339                           
 21340                           ;main.c: 209: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21341  0E33  3000               	movlw	0
 21342  0E34  3188  2005  318D   	fcall	i1_WriteI2C
 21343  0E37                     i1l4864:
 21344  0E37  0023               	movlb	3	; select bank3
 21345  0E38  0C0F               	rrf	15,w	;volatile
 21346  0E39  0C89               	rrf	9,f
 21347  0E3A  3901               	andlw	1
 21348  0E3B  00F2               	movwf	??_tsttc
 21349  0E3C  0811               	movf	17,w	;volatile
 21350  0E3D  391F               	andlw	31
 21351  0E3E  0472               	iorwf	??_tsttc,w
 21352  0E3F  1D03               	btfss	3,2
 21353  0E40  2E42               	goto	u408_21
 21354  0E41  2E43               	goto	u408_20
 21355  0E42                     u408_21:
 21356  0E42  2E37               	goto	i1l4864
 21357  0E43                     u408_20:
 21358  0E43                     i1l1141:
 21359                           
 21360                           ;main.c: 210: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
 21361  0E43  1491               	bsf	17,1	;volatile
 21362  0E44                     i1l1142:
 21363  0E44  1891               	btfsc	17,1	;volatile
 21364  0E45  2E47               	goto	u409_21
 21365  0E46  2E48               	goto	u409_20
 21366  0E47                     u409_21:
 21367  0E47  2E44               	goto	i1l1142
 21368  0E48                     u409_20:
 21369  0E48                     i1l4866:
 21370  0E48  0C0F               	rrf	15,w	;volatile
 21371  0E49  0C89               	rrf	9,f
 21372  0E4A  3901               	andlw	1
 21373  0E4B  00F2               	movwf	??_tsttc
 21374  0E4C  0811               	movf	17,w	;volatile
 21375  0E4D  391F               	andlw	31
 21376  0E4E  0472               	iorwf	??_tsttc,w
 21377  0E4F  1D03               	btfss	3,2
 21378  0E50  2E52               	goto	u410_21
 21379  0E51  2E53               	goto	u410_20
 21380  0E52                     u410_21:
 21381  0E52  2E48               	goto	i1l4866
 21382  0E53                     u410_20:
 21383  0E53                     i1l4868:
 21384                           
 21385                           ;main.c: 211: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21386  0E53  309B               	movlw	155
 21387  0E54  3188  2005  318D   	fcall	i1_WriteI2C
 21388  0E57                     i1l4870:
 21389  0E57  0023               	movlb	3	; select bank3
 21390  0E58  0C0F               	rrf	15,w	;volatile
 21391  0E59  0C89               	rrf	9,f
 21392  0E5A  3901               	andlw	1
 21393  0E5B  00F2               	movwf	??_tsttc
 21394  0E5C  0811               	movf	17,w	;volatile
 21395  0E5D  391F               	andlw	31
 21396  0E5E  0472               	iorwf	??_tsttc,w
 21397  0E5F  1D03               	btfss	3,2
 21398  0E60  2E62               	goto	u411_21
 21399  0E61  2E63               	goto	u411_20
 21400  0E62                     u411_21:
 21401  0E62  2E57               	goto	i1l4870
 21402  0E63                     u411_20:
 21403  0E63                     i1l4872:
 21404                           
 21405                           ;main.c: 212: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21406  0E63  3191  212A  318D   	fcall	_ReadI2C
 21407  0E66  00F2               	movwf	??_tsttc
 21408  0E67  0872               	movf	??_tsttc,w
 21409  0E68  00F3               	movwf	tsttc@value
 21410  0E69                     i1l4874:
 21411  0E69  0023               	movlb	3	; select bank3
 21412  0E6A  0C0F               	rrf	15,w	;volatile
 21413  0E6B  0C89               	rrf	9,f
 21414  0E6C  3901               	andlw	1
 21415  0E6D  00F2               	movwf	??_tsttc
 21416  0E6E  0811               	movf	17,w	;volatile
 21417  0E6F  391F               	andlw	31
 21418  0E70  0472               	iorwf	??_tsttc,w
 21419  0E71  1D03               	btfss	3,2
 21420  0E72  2E74               	goto	u412_21
 21421  0E73  2E75               	goto	u412_20
 21422  0E74                     u412_21:
 21423  0E74  2E69               	goto	i1l4874
 21424  0E75                     u412_20:
 21425  0E75                     i1l1153:
 21426                           
 21427                           ;main.c: 213: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21428  0E75  1691               	bsf	17,5	;volatile
 21429  0E76  1611               	bsf	17,4	;volatile
 21430  0E77                     i1l1154:
 21431  0E77  1A11               	btfsc	17,4	;volatile
 21432  0E78  2E7A               	goto	u413_21
 21433  0E79  2E7B               	goto	u413_20
 21434  0E7A                     u413_21:
 21435  0E7A  2E77               	goto	i1l1154
 21436  0E7B                     u413_20:
 21437  0E7B                     i1l4876:
 21438  0E7B  0C0F               	rrf	15,w	;volatile
 21439  0E7C  0C89               	rrf	9,f
 21440  0E7D  3901               	andlw	1
 21441  0E7E  00F2               	movwf	??_tsttc
 21442  0E7F  0811               	movf	17,w	;volatile
 21443  0E80  391F               	andlw	31
 21444  0E81  0472               	iorwf	??_tsttc,w
 21445  0E82  1D03               	btfss	3,2
 21446  0E83  2E85               	goto	u414_21
 21447  0E84  2E86               	goto	u414_20
 21448  0E85                     u414_21:
 21449  0E85  2E7B               	goto	i1l4876
 21450  0E86                     u414_20:
 21451  0E86                     i1l1159:
 21452                           
 21453                           ;main.c: 214: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 21454  0E86  1511               	bsf	17,2	;volatile
 21455  0E87                     i1l1160:
 21456  0E87  1911               	btfsc	17,2	;volatile
 21457  0E88  2E8A               	goto	u415_21
 21458  0E89  2E8B               	goto	u415_20
 21459  0E8A                     u415_21:
 21460  0E8A  2E87               	goto	i1l1160
 21461  0E8B                     u415_20:
 21462  0E8B                     i1l4878:
 21463                           
 21464                           ;main.c: 216: return value;
 21465  0E8B  0873               	movf	tsttc@value,w
 21466  0E8C                     i1l1163:
 21467  0E8C  0008               	return
 21468  0E8D                     __end_of_tsttc:
 21469                           
 21470                           	psect	text78
 21471  0805                     __ptext78:	
 21472 ;; *************** function i1_WriteI2C *****************
 21473 ;; Defined at:
 21474 ;;		line 47 in file "I2C/i2c.c"
 21475 ;; Parameters:    Size  Location     Type
 21476 ;;  data_out        1    wreg     unsigned char 
 21477 ;; Auto vars:     Size  Location     Type
 21478 ;;  data_out        1    1[COMMON] unsigned char 
 21479 ;; Return value:  Size  Location     Type
 21480 ;;                  1    wreg      char 
 21481 ;; Registers used:
 21482 ;;		wreg, status,2, status,0
 21483 ;; Tracked objects:
 21484 ;;		On entry : 0/0
 21485 ;;		On exit  : 0/0
 21486 ;;		Unchanged: 0/0
 21487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21490 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21492 ;;Total ram usage:        2 bytes
 21493 ;; Hardware stack levels used:    1
 21494 ;; This function calls:
 21495 ;;		Nothing
 21496 ;; This function is called by:
 21497 ;;		_tsttc
 21498 ;; This function uses a non-reentrant model
 21499 ;;
 21500                           
 21501                           
 21502                           ;psect for function i1_WriteI2C
 21503  0805                     i1_WriteI2C:
 21504                           
 21505                           ;incstack = 0
 21506                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 21507                           ;i1WriteI2C@data_out stored from wreg
 21508  0805  00F1               	movwf	i1WriteI2C@data_out
 21509  0806                     i1l4772:
 21510                           
 21511                           ;i2c.c: 49: SSP1BUF = data_out;
 21512  0806  0871               	movf	i1WriteI2C@data_out,w
 21513  0807  0023               	movlb	3	; select bank3
 21514  0808  008C               	movwf	12	;volatile
 21515  0809                     i1l4774:
 21516                           
 21517                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 21518  0809  1F90               	btfss	16,7	;volatile
 21519  080A  280C               	goto	u380_21
 21520  080B  280D               	goto	u380_20
 21521  080C                     u380_21:
 21522  080C  280E               	goto	i1l4780
 21523  080D                     u380_20:
 21524  080D  284F               	goto	i1l30
 21525  080E                     i1l4780:
 21526                           
 21527                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 21528  080E  300F               	movlw	15
 21529  080F  0510               	andwf	16,w	;volatile
 21530  0810  00F0               	movwf	??i1_WriteI2C
 21531  0811  3008               	movlw	8
 21532  0812  0670               	xorwf	??i1_WriteI2C,w
 21533  0813  1903               	btfsc	3,2
 21534  0814  2816               	goto	u381_21
 21535  0815  2817               	goto	u381_20
 21536  0816                     u381_21:
 21537  0816  282D               	goto	i1l4792
 21538  0817                     u381_20:
 21539  0817                     i1l4782:
 21540  0817  300F               	movlw	15
 21541  0818  0510               	andwf	16,w	;volatile
 21542  0819  00F0               	movwf	??i1_WriteI2C
 21543  081A  300B               	movlw	11
 21544  081B  0670               	xorwf	??i1_WriteI2C,w
 21545  081C  1903               	btfsc	3,2
 21546  081D  281F               	goto	u382_21
 21547  081E  2820               	goto	u382_20
 21548  081F                     u382_21:
 21549  081F  282D               	goto	i1l4792
 21550  0820                     u382_20:
 21551  0820                     i1l4784:
 21552                           
 21553                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 21554  0820  1610               	bsf	16,4	;volatile
 21555  0821                     i1l33:	
 21556                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 21557                           
 21558  0821  002E               	movlb	14	; select bank14
 21559  0822  1C0F               	btfss	15,0	;volatile
 21560  0823  2825               	goto	u383_21
 21561  0824  2826               	goto	u383_20
 21562  0825                     u383_21:
 21563  0825  2821               	goto	i1l33
 21564  0826                     u383_20:
 21565  0826                     i1l35:
 21566                           
 21567                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 21568  0826  0023               	movlb	3	; select bank3
 21569  0827  190F               	btfsc	15,2	;volatile
 21570  0828  282A               	goto	u384_21
 21571  0829  282B               	goto	u384_20
 21572  082A                     u384_21:
 21573  082A  284F               	goto	i1l30
 21574  082B                     u384_20:
 21575  082B                     i1l4786:
 21576  082B  080F               	movf	15,w	;volatile
 21577  082C  284F               	goto	i1l30
 21578  082D                     i1l4792:
 21579                           
 21580                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 21581  082D  300F               	movlw	15
 21582  082E  0510               	andwf	16,w	;volatile
 21583  082F  00F0               	movwf	??i1_WriteI2C
 21584  0830  3008               	movlw	8
 21585  0831  0670               	xorwf	??i1_WriteI2C,w
 21586  0832  1903               	btfsc	3,2
 21587  0833  2835               	goto	u385_21
 21588  0834  2836               	goto	u385_20
 21589  0835                     u385_21:
 21590  0835  283F               	goto	i1l42
 21591  0836                     u385_20:
 21592  0836                     i1l4794:
 21593  0836  300F               	movlw	15
 21594  0837  0510               	andwf	16,w	;volatile
 21595  0838  00F0               	movwf	??i1_WriteI2C
 21596  0839  300B               	movlw	11
 21597  083A  0670               	xorwf	??i1_WriteI2C,w
 21598  083B  1D03               	btfss	3,2
 21599  083C  283E               	goto	u386_21
 21600  083D  283F               	goto	u386_20
 21601  083E                     u386_21:
 21602  083E  284F               	goto	i1l30
 21603  083F                     u386_20:
 21604  083F                     i1l42:
 21605  083F  180F               	btfsc	15,0	;volatile
 21606  0840  2842               	goto	u387_21
 21607  0841  2843               	goto	u387_20
 21608  0842                     u387_21:
 21609  0842  283F               	goto	i1l42
 21610  0843                     u387_20:
 21611  0843                     i1l4796:
 21612  0843  0C0F               	rrf	15,w	;volatile
 21613  0844  0C89               	rrf	9,f
 21614  0845  3901               	andlw	1
 21615  0846  00F0               	movwf	??i1_WriteI2C
 21616  0847  0811               	movf	17,w	;volatile
 21617  0848  391F               	andlw	31
 21618  0849  0470               	iorwf	??i1_WriteI2C,w
 21619  084A  1D03               	btfss	3,2
 21620  084B  284D               	goto	u388_21
 21621  084C  284E               	goto	u388_20
 21622  084D                     u388_21:
 21623  084D  2843               	goto	i1l4796
 21624  084E                     u388_20:
 21625  084E                     i1l47:
 21626                           
 21627                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 21628  084E  0811               	movf	17,w	;volatile
 21629  084F                     i1l30:
 21630  084F  0008               	return
 21631  0850                     __end_ofi1_WriteI2C:
 21632                           
 21633                           	psect	text79
 21634  112A                     __ptext79:	
 21635 ;; *************** function _ReadI2C *****************
 21636 ;; Defined at:
 21637 ;;		line 32 in file "I2C/i2c.c"
 21638 ;; Parameters:    Size  Location     Type
 21639 ;;		None
 21640 ;; Auto vars:     Size  Location     Type
 21641 ;;		None
 21642 ;; Return value:  Size  Location     Type
 21643 ;;                  1    wreg      unsigned char 
 21644 ;; Registers used:
 21645 ;;		wreg, status,2, status,0
 21646 ;; Tracked objects:
 21647 ;;		On entry : 0/0
 21648 ;;		On exit  : 0/0
 21649 ;;		Unchanged: 0/0
 21650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21653 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21655 ;;Total ram usage:        1 bytes
 21656 ;; Hardware stack levels used:    1
 21657 ;; This function calls:
 21658 ;;		Nothing
 21659 ;; This function is called by:
 21660 ;;		_tsttc
 21661 ;;		_LCDrecv
 21662 ;; This function uses a non-reentrant model
 21663 ;;
 21664                           
 21665                           
 21666                           ;psect for function _ReadI2C
 21667  112A                     _ReadI2C:
 21668  112A                     i1l4684:	
 21669                           ;incstack = 0
 21670                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 21671                           
 21672                           
 21673                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 21674  112A  300F               	movlw	15
 21675  112B  0023               	movlb	3	; select bank3
 21676  112C  0510               	andwf	16,w	;volatile
 21677  112D  00F0               	movwf	??_ReadI2C
 21678  112E  3008               	movlw	8
 21679  112F  0670               	xorwf	??_ReadI2C,w
 21680  1130  1903               	btfsc	3,2
 21681  1131  2933               	goto	u358_21
 21682  1132  2934               	goto	u358_20
 21683  1133                     u358_21:
 21684  1133  293D               	goto	i1l22
 21685  1134                     u358_20:
 21686  1134                     i1l4686:
 21687  1134  300F               	movlw	15
 21688  1135  0510               	andwf	16,w	;volatile
 21689  1136  00F0               	movwf	??_ReadI2C
 21690  1137  300B               	movlw	11
 21691  1138  0670               	xorwf	??_ReadI2C,w
 21692  1139  1D03               	btfss	3,2
 21693  113A  293C               	goto	u359_21
 21694  113B  293D               	goto	u359_20
 21695  113C                     u359_21:
 21696  113C  293E               	goto	i1l23
 21697  113D                     u359_20:
 21698  113D                     i1l22:
 21699                           
 21700                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 21701  113D  1591               	bsf	17,3	;volatile
 21702  113E                     i1l23:
 21703  113E  1C0F               	btfss	15,0	;volatile
 21704  113F  2941               	goto	u360_21
 21705  1140  2942               	goto	u360_20
 21706  1141                     u360_21:
 21707  1141  293E               	goto	i1l23
 21708  1142                     u360_20:
 21709  1142                     i1l4688:
 21710                           
 21711                           ;i2c.c: 37: return ( SSP1BUF );
 21712  1142  080C               	movf	12,w	;volatile
 21713  1143                     i1l26:
 21714  1143  0008               	return
 21715  1144                     __end_of_ReadI2C:
 21716                           
 21717                           	psect	text80
 21718  10A7                     __ptext80:	
 21719 ;; *************** function _ADCC_GetSingleConversion *****************
 21720 ;; Defined at:
 21721 ;;		line 130 in file "mcc_generated_files/adcc.c"
 21722 ;; Parameters:    Size  Location     Type
 21723 ;;  channel         1    wreg     enum E12086
 21724 ;; Auto vars:     Size  Location     Type
 21725 ;;  channel         1    3[COMMON] enum E12086
 21726 ;; Return value:  Size  Location     Type
 21727 ;;                  2    0[COMMON] unsigned int 
 21728 ;; Registers used:
 21729 ;;		wreg
 21730 ;; Tracked objects:
 21731 ;;		On entry : 0/0
 21732 ;;		On exit  : 0/0
 21733 ;;		Unchanged: 0/0
 21734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21735 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21738 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21739 ;;Total ram usage:        4 bytes
 21740 ;; Hardware stack levels used:    1
 21741 ;; This function calls:
 21742 ;;		Nothing
 21743 ;; This function is called by:
 21744 ;;		_monitoring_ISR
 21745 ;; This function uses a non-reentrant model
 21746 ;;
 21747                           
 21748                           
 21749                           ;psect for function _ADCC_GetSingleConversion
 21750  10A7                     _ADCC_GetSingleConversion:
 21751                           
 21752                           ;incstack = 0
 21753                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 21754                           ;ADCC_GetSingleConversion@channel stored from wreg
 21755  10A7  00F3               	movwf	ADCC_GetSingleConversion@channel
 21756  10A8                     i1l4804:
 21757                           
 21758                           ;adcc.c: 133: ADPCH = channel;
 21759  10A8  0873               	movf	ADCC_GetSingleConversion@channel,w
 21760  10A9  0021               	movlb	1	; select bank1
 21761  10AA  009E               	movwf	30	;volatile
 21762  10AB                     i1l4806:
 21763                           
 21764                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 21765  10AB  1793               	bsf	19,7	;volatile
 21766  10AC                     i1l4808:
 21767                           
 21768                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 21769  10AC  1313               	bcf	19,6	;volatile
 21770  10AD                     i1l4810:
 21771                           
 21772                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 21773  10AD  1413               	bsf	19,0	;volatile
 21774  10AE                     i1l4812:
 21775                           
 21776                           ;adcc.c: 145: __nop();
 21777  10AE  0000               	nop
 21778  10AF                     i1l543:	
 21779                           ;adcc.c: 149: {
 21780                           
 21781  10AF  0021               	movlb	1	; select bank1
 21782  10B0  1813               	btfsc	19,0	;volatile
 21783  10B1  28B3               	goto	u389_21
 21784  10B2  28B4               	goto	u389_20
 21785  10B3                     u389_21:
 21786  10B3  28AF               	goto	i1l543
 21787  10B4                     u389_20:
 21788  10B4                     i1l4814:
 21789                           
 21790                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 21791  10B4  080D               	movf	13,w	;volatile
 21792  10B5  00F1               	movwf	?_ADCC_GetSingleConversion+1
 21793  10B6  080C               	movf	12,w	;volatile
 21794  10B7  00F0               	movwf	?_ADCC_GetSingleConversion
 21795  10B8                     i1l546:
 21796  10B8  0008               	return
 21797  10B9                     __end_of_ADCC_GetSingleConversion:
 21798                           
 21799                           	psect	text81
 21800  1096                     __ptext81:	
 21801 ;; *************** function _TMR5_WriteTimer *****************
 21802 ;; Defined at:
 21803 ;;		line 131 in file "mcc_generated_files/tmr5.c"
 21804 ;; Parameters:    Size  Location     Type
 21805 ;;  timerVal        2    0[COMMON] unsigned int 
 21806 ;; Auto vars:     Size  Location     Type
 21807 ;;		None
 21808 ;; Return value:  Size  Location     Type
 21809 ;;                  1    wreg      void 
 21810 ;; Registers used:
 21811 ;;		wreg, status,2
 21812 ;; Tracked objects:
 21813 ;;		On entry : 0/0
 21814 ;;		On exit  : 0/0
 21815 ;;		Unchanged: 0/0
 21816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21821 ;;Total ram usage:        2 bytes
 21822 ;; Hardware stack levels used:    1
 21823 ;; This function calls:
 21824 ;;		Nothing
 21825 ;; This function is called by:
 21826 ;;		_TMR5_ISR
 21827 ;;		_TMR5_Reload
 21828 ;; This function uses a non-reentrant model
 21829 ;;
 21830                           
 21831                           
 21832                           ;psect for function _TMR5_WriteTimer
 21833  1096                     _TMR5_WriteTimer:
 21834  1096                     i1l5232:	
 21835                           ;incstack = 0
 21836                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 21837                           
 21838                           
 21839                           ;tmr5.c: 133: if (T5CONbits.nT5SYNC == 1)
 21840  1096  0024               	movlb	4	; select bank4
 21841  1097  1D1A               	btfss	26,2	;volatile
 21842  1098  289A               	goto	u444_21
 21843  1099  289B               	goto	u444_20
 21844  109A                     u444_21:
 21845  109A  28A2               	goto	i1l5242
 21846  109B                     u444_20:
 21847  109B                     i1l5234:
 21848                           
 21849                           ;tmr5.c: 134: {;tmr5.c: 136: T5CONbits.TMR5ON = 0;
 21850  109B  101A               	bcf	26,0	;volatile
 21851  109C                     i1l5236:
 21852                           
 21853                           ;tmr5.c: 139: TMR5H = (timerVal >> 8);
 21854  109C  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 21855  109D  0099               	movwf	25	;volatile
 21856  109E                     i1l5238:
 21857                           
 21858                           ;tmr5.c: 140: TMR5L = timerVal;
 21859  109E  0870               	movf	TMR5_WriteTimer@timerVal,w
 21860  109F  0098               	movwf	24	;volatile
 21861  10A0                     i1l5240:
 21862                           
 21863                           ;tmr5.c: 143: T5CONbits.TMR5ON =1;
 21864  10A0  141A               	bsf	26,0	;volatile
 21865                           
 21866                           ;tmr5.c: 144: }
 21867  10A1  28A6               	goto	i1l660
 21868  10A2                     i1l5242:
 21869                           
 21870                           ;tmr5.c: 145: else;tmr5.c: 146: {;tmr5.c: 148: TMR5H = (timerVal >> 8);
 21871  10A2  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 21872  10A3  0099               	movwf	25	;volatile
 21873  10A4                     i1l5244:
 21874                           
 21875                           ;tmr5.c: 149: TMR5L = timerVal;
 21876  10A4  0870               	movf	TMR5_WriteTimer@timerVal,w
 21877  10A5  0098               	movwf	24	;volatile
 21878  10A6                     i1l660:
 21879  10A6  0008               	return
 21880  10A7                     __end_of_TMR5_WriteTimer:
 21881                           
 21882                           	psect	text82
 21883  10CC                     __ptext82:	
 21884 ;; *************** function _TMR1_ISR *****************
 21885 ;; Defined at:
 21886 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 21887 ;; Parameters:    Size  Location     Type
 21888 ;;		None
 21889 ;; Auto vars:     Size  Location     Type
 21890 ;;		None
 21891 ;; Return value:  Size  Location     Type
 21892 ;;                  1    wreg      void 
 21893 ;; Registers used:
 21894 ;;		wreg, status,2, status,0, pclath, cstack
 21895 ;; Tracked objects:
 21896 ;;		On entry : 0/0
 21897 ;;		On exit  : 0/0
 21898 ;;		Unchanged: 0/0
 21899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21904 ;;Total ram usage:        0 bytes
 21905 ;; Hardware stack levels used:    1
 21906 ;; Hardware stack levels required when called:    2
 21907 ;; This function calls:
 21908 ;;		Absolute function
 21909 ;;		_Clock_ISR
 21910 ;;		_TMR1_DefaultInterruptHandler
 21911 ;;		_TMR1_WriteTimer
 21912 ;; This function is called by:
 21913 ;;		_INTERRUPT_InterruptManager
 21914 ;; This function uses a non-reentrant model
 21915 ;;
 21916                           
 21917                           
 21918                           ;psect for function _TMR1_ISR
 21919  10CC                     _TMR1_ISR:
 21920  10CC                     i1l5662:	
 21921                           ;incstack = 0
 21922                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 21923                           
 21924                           
 21925                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 21926  10CC  002E               	movlb	14	; select bank14
 21927  10CD  1010               	bcf	16,0	;volatile
 21928  10CE                     i1l5664:
 21929                           
 21930                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 21931  10CE  0021               	movlb	1	; select bank1
 21932  10CF  0864               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 21933  10D0  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 21934  10D1  0863               	movf	_timer1ReloadVal^(0+128),w	;volatile
 21935  10D2  00F0               	movwf	TMR1_WriteTimer@timerVal
 21936  10D3  3190  2085  3190   	fcall	_TMR1_WriteTimer
 21937  10D6                     i1l5666:
 21938                           
 21939                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 21940  10D6  0021               	movlb	1	; select bank1
 21941  10D7  0861               	movf	_TMR1_InterruptHandler^(0+128),w
 21942  10D8  0462               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 21943  10D9  1903               	btfsc	3,2
 21944  10DA  28DC               	goto	u521_21
 21945  10DB  28DD               	goto	u521_20
 21946  10DC                     u521_21:
 21947  10DC  28E2               	goto	i1l442
 21948  10DD                     u521_20:
 21949  10DD                     i1l5668:
 21950                           
 21951                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 21952  10DD  0862               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 21953  10DE  008A               	movwf	10
 21954  10DF  0861               	movf	_TMR1_InterruptHandler^(0+128),w
 21955  10E0  000A               	callw
 21956  10E1  3190               	pagesel	$
 21957  10E2                     i1l442:
 21958  10E2  0008               	return
 21959  10E3                     __end_of_TMR1_ISR:
 21960                           
 21961                           	psect	text83
 21962  1085                     __ptext83:	
 21963 ;; *************** function _TMR1_WriteTimer *****************
 21964 ;; Defined at:
 21965 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 21966 ;; Parameters:    Size  Location     Type
 21967 ;;  timerVal        2    0[COMMON] unsigned int 
 21968 ;; Auto vars:     Size  Location     Type
 21969 ;;		None
 21970 ;; Return value:  Size  Location     Type
 21971 ;;                  1    wreg      void 
 21972 ;; Registers used:
 21973 ;;		wreg, status,2
 21974 ;; Tracked objects:
 21975 ;;		On entry : 0/0
 21976 ;;		On exit  : 0/0
 21977 ;;		Unchanged: 0/0
 21978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21983 ;;Total ram usage:        2 bytes
 21984 ;; Hardware stack levels used:    1
 21985 ;; This function calls:
 21986 ;;		Nothing
 21987 ;; This function is called by:
 21988 ;;		_TMR1_ISR
 21989 ;;		_TMR1_Reload
 21990 ;; This function uses a non-reentrant model
 21991 ;;
 21992                           
 21993                           
 21994                           ;psect for function _TMR1_WriteTimer
 21995  1085                     _TMR1_WriteTimer:
 21996  1085                     i1l5212:	
 21997                           ;incstack = 0
 21998                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 21999                           
 22000                           
 22001                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 22002  1085  0024               	movlb	4	; select bank4
 22003  1086  1D0E               	btfss	14,2	;volatile
 22004  1087  2889               	goto	u443_21
 22005  1088  288A               	goto	u443_20
 22006  1089                     u443_21:
 22007  1089  2891               	goto	i1l5222
 22008  108A                     u443_20:
 22009  108A                     i1l5214:
 22010                           
 22011                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 22012  108A  100E               	bcf	14,0	;volatile
 22013  108B                     i1l5216:
 22014                           
 22015                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 22016  108B  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 22017  108C  008D               	movwf	13	;volatile
 22018  108D                     i1l5218:
 22019                           
 22020                           ;tmr1.c: 136: TMR1L = timerVal;
 22021  108D  0870               	movf	TMR1_WriteTimer@timerVal,w
 22022  108E  008C               	movwf	12	;volatile
 22023  108F                     i1l5220:
 22024                           
 22025                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 22026  108F  140E               	bsf	14,0	;volatile
 22027                           
 22028                           ;tmr1.c: 140: }
 22029  1090  2895               	goto	i1l429
 22030  1091                     i1l5222:
 22031                           
 22032                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 22033  1091  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 22034  1092  008D               	movwf	13	;volatile
 22035  1093                     i1l5224:
 22036                           
 22037                           ;tmr1.c: 145: TMR1L = timerVal;
 22038  1093  0870               	movf	TMR1_WriteTimer@timerVal,w
 22039  1094  008C               	movwf	12	;volatile
 22040  1095                     i1l429:
 22041  1095  0008               	return
 22042  1096                     __end_of_TMR1_WriteTimer:
 22043                           
 22044                           	psect	text84
 22045  0C75                     __ptext84:	
 22046 ;; *************** function _Clock_ISR *****************
 22047 ;; Defined at:
 22048 ;;		line 356 in file "main.c"
 22049 ;; Parameters:    Size  Location     Type
 22050 ;;		None
 22051 ;; Auto vars:     Size  Location     Type
 22052 ;;		None
 22053 ;; Return value:  Size  Location     Type
 22054 ;;                  1    wreg      void 
 22055 ;; Registers used:
 22056 ;;		wreg, status,2, status,0, pclath, cstack
 22057 ;; Tracked objects:
 22058 ;;		On entry : 0/0
 22059 ;;		On exit  : 0/0
 22060 ;;		Unchanged: 0/0
 22061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22066 ;;Total ram usage:        1 bytes
 22067 ;; Hardware stack levels used:    1
 22068 ;; Hardware stack levels required when called:    1
 22069 ;; This function calls:
 22070 ;;		i1_DATAEE_WriteByte
 22071 ;; This function is called by:
 22072 ;;		_main
 22073 ;;		_TMR1_ISR
 22074 ;; This function uses a non-reentrant model
 22075 ;;
 22076                           
 22077                           
 22078                           ;psect for function _Clock_ISR
 22079  0C75                     _Clock_ISR:
 22080  0C75                     i1l5304:	
 22081                           ;incstack = 0
 22082                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0+pclath+cstack]
 22083                           
 22084                           
 22085                           ;main.c: 358: t.s++;
 22086  0C75  3001               	movlw	1
 22087  0C76  00FA               	movwf	??_Clock_ISR
 22088  0C77  087A               	movf	??_Clock_ISR,w
 22089  0C78  0020               	movlb	0	; select bank0
 22090  0C79  07E1               	addwf	_t+2,f
 22091                           
 22092                           ;main.c: 360: if(t.s==60){
 22093  0C7A  303C               	movlw	60
 22094  0C7B  0661               	xorwf	_t+2,w
 22095  0C7C  1D03               	btfss	3,2
 22096  0C7D  2C7F               	goto	u454_21
 22097  0C7E  2C80               	goto	u454_20
 22098  0C7F                     u454_21:
 22099  0C7F  2D2F               	goto	i1l5336
 22100  0C80                     u454_20:
 22101  0C80                     i1l5306:
 22102                           
 22103                           ;main.c: 361: t.m++;
 22104  0C80  3001               	movlw	1
 22105  0C81  00FA               	movwf	??_Clock_ISR
 22106  0C82  087A               	movf	??_Clock_ISR,w
 22107  0C83  07E0               	addwf	_t+1,f
 22108  0C84                     i1l5308:
 22109                           
 22110                           ;main.c: 362: t.s=0;
 22111  0C84  01E1               	clrf	_t+2
 22112  0C85                     i1l5310:
 22113                           
 22114                           ;main.c: 365: DATAEE_WriteByte( 0x7000 + (1 * 8), NREG);
 22115  0C85  3008               	movlw	8
 22116  0C86  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22117  0C87  3070               	movlw	112
 22118  0C88  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22119  0C89  086F               	movf	_NREG,w
 22120  0C8A  00FA               	movwf	??_Clock_ISR
 22121  0C8B  087A               	movf	??_Clock_ISR,w
 22122  0C8C  00F8               	movwf	i1DATAEE_WriteByte@bData
 22123  0C8D  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22124  0C90                     i1l5312:
 22125                           
 22126                           ;main.c: 366: DATAEE_WriteByte( 0x7000 + (2 * 8), PMON);
 22127  0C90  3010               	movlw	16
 22128  0C91  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22129  0C92  3070               	movlw	112
 22130  0C93  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22131  0C94  0021               	movlb	1	; select bank1
 22132  0C95  086E               	movf	_PMON^(0+128),w
 22133  0C96  00FA               	movwf	??_Clock_ISR
 22134  0C97  087A               	movf	??_Clock_ISR,w
 22135  0C98  00F8               	movwf	i1DATAEE_WriteByte@bData
 22136  0C99  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22137  0C9C                     i1l5314:
 22138                           
 22139                           ;main.c: 367: DATAEE_WriteByte( 0x7000 + (3 * 8), TALA);
 22140  0C9C  3018               	movlw	24
 22141  0C9D  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22142  0C9E  3070               	movlw	112
 22143  0C9F  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22144  0CA0  0021               	movlb	1	; select bank1
 22145  0CA1  086D               	movf	_TALA^(0+128),w
 22146  0CA2  00FA               	movwf	??_Clock_ISR
 22147  0CA3  087A               	movf	??_Clock_ISR,w
 22148  0CA4  00F8               	movwf	i1DATAEE_WriteByte@bData
 22149  0CA5  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22150  0CA8                     i1l5316:
 22151                           
 22152                           ;main.c: 368: DATAEE_WriteByte( 0x7000 + (4 * 8), clkAlarm.alarmVal.h);
 22153  0CA8  3020               	movlw	32
 22154  0CA9  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22155  0CAA  3070               	movlw	112
 22156  0CAB  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22157  0CAC  0021               	movlb	1	; select bank1
 22158  0CAD  0840               	movf	_clkAlarm^(0+128),w
 22159  0CAE  00FA               	movwf	??_Clock_ISR
 22160  0CAF  087A               	movf	??_Clock_ISR,w
 22161  0CB0  00F8               	movwf	i1DATAEE_WriteByte@bData
 22162  0CB1  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22163  0CB4                     i1l5318:
 22164                           
 22165                           ;main.c: 369: DATAEE_WriteByte( 0x7000 + (5 * 8), clkAlarm.alarmVal.m);
 22166  0CB4  3028               	movlw	40
 22167  0CB5  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22168  0CB6  3070               	movlw	112
 22169  0CB7  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22170  0CB8  0021               	movlb	1	; select bank1
 22171  0CB9  0841               	movf	(_clkAlarm^(0+128)+1),w
 22172  0CBA  00FA               	movwf	??_Clock_ISR
 22173  0CBB  087A               	movf	??_Clock_ISR,w
 22174  0CBC  00F8               	movwf	i1DATAEE_WriteByte@bData
 22175  0CBD  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22176  0CC0                     i1l5320:
 22177                           
 22178                           ;main.c: 370: DATAEE_WriteByte( 0x7000 + (6 * 8), clkAlarm.alarmVal.s);
 22179  0CC0  3030               	movlw	48
 22180  0CC1  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22181  0CC2  3070               	movlw	112
 22182  0CC3  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22183  0CC4  0021               	movlb	1	; select bank1
 22184  0CC5  0842               	movf	(_clkAlarm^(0+128)+2),w
 22185  0CC6  00FA               	movwf	??_Clock_ISR
 22186  0CC7  087A               	movf	??_Clock_ISR,w
 22187  0CC8  00F8               	movwf	i1DATAEE_WriteByte@bData
 22188  0CC9  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22189  0CCC                     i1l5322:
 22190                           
 22191                           ;main.c: 371: DATAEE_WriteByte( 0x7000 + (7 * 8), tempAlarm.alarmTemp);
 22192  0CCC  3038               	movlw	56
 22193  0CCD  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22194  0CCE  3070               	movlw	112
 22195  0CCF  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22196  0CD0  0021               	movlb	1	; select bank1
 22197  0CD1  084A               	movf	_tempAlarm^(0+128),w
 22198  0CD2  00FA               	movwf	??_Clock_ISR
 22199  0CD3  087A               	movf	??_Clock_ISR,w
 22200  0CD4  00F8               	movwf	i1DATAEE_WriteByte@bData
 22201  0CD5  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22202  0CD8                     i1l5324:
 22203                           
 22204                           ;main.c: 372: DATAEE_WriteByte( 0x7000 + (8 * 8), lumAlarm.alarmLum);
 22205  0CD8  3040               	movlw	64
 22206  0CD9  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22207  0CDA  3070               	movlw	112
 22208  0CDB  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22209  0CDC  0021               	movlb	1	; select bank1
 22210  0CDD  0847               	movf	_lumAlarm^(0+128),w
 22211  0CDE  00FA               	movwf	??_Clock_ISR
 22212  0CDF  087A               	movf	??_Clock_ISR,w
 22213  0CE0  00F8               	movwf	i1DATAEE_WriteByte@bData
 22214  0CE1  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22215  0CE4                     i1l5326:
 22216                           
 22217                           ;main.c: 373: DATAEE_WriteByte( 0x7000 + (9 * 8), ALAF);
 22218  0CE4  3048               	movlw	72
 22219  0CE5  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22220  0CE6  3070               	movlw	112
 22221  0CE7  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22222  0CE8  0020               	movlb	0	; select bank0
 22223  0CE9  086A               	movf	_ALAF,w
 22224  0CEA  00FA               	movwf	??_Clock_ISR
 22225  0CEB  087A               	movf	??_Clock_ISR,w
 22226  0CEC  00F8               	movwf	i1DATAEE_WriteByte@bData
 22227  0CED  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22228  0CF0                     i1l5328:
 22229                           
 22230                           ;main.c: 374: DATAEE_WriteByte( 0x7000 + (10 * 8), t.h);
 22231  0CF0  3050               	movlw	80
 22232  0CF1  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22233  0CF2  3070               	movlw	112
 22234  0CF3  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22235  0CF4  0020               	movlb	0	; select bank0
 22236  0CF5  085F               	movf	_t,w
 22237  0CF6  00FA               	movwf	??_Clock_ISR
 22238  0CF7  087A               	movf	??_Clock_ISR,w
 22239  0CF8  00F8               	movwf	i1DATAEE_WriteByte@bData
 22240  0CF9  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22241  0CFC                     i1l5330:
 22242                           
 22243                           ;main.c: 375: DATAEE_WriteByte( 0x7000 + (11 * 8), t.m);
 22244  0CFC  3058               	movlw	88
 22245  0CFD  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22246  0CFE  3070               	movlw	112
 22247  0CFF  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22248  0D00  0020               	movlb	0	; select bank0
 22249  0D01  0860               	movf	_t+1,w
 22250  0D02  00FA               	movwf	??_Clock_ISR
 22251  0D03  087A               	movf	??_Clock_ISR,w
 22252  0D04  00F8               	movwf	i1DATAEE_WriteByte@bData
 22253  0D05  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22254  0D08                     i1l5332:
 22255                           
 22256                           ;main.c: 376: DATAEE_WriteByte( 0x7000 + (12 * 8), iwrite);
 22257  0D08  3060               	movlw	96
 22258  0D09  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22259  0D0A  3070               	movlw	112
 22260  0D0B  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22261  0D0C  087D               	movf	_iwrite,w
 22262  0D0D  00FA               	movwf	??_Clock_ISR
 22263  0D0E  087A               	movf	??_Clock_ISR,w
 22264  0D0F  00F8               	movwf	i1DATAEE_WriteByte@bData
 22265  0D10  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22266  0D13                     i1l5334:
 22267                           
 22268                           ;main.c: 377: DATAEE_WriteByte( 0x7000 + (13 * 8), NREG + PMON + TALA + clkAlarm.alarmVa
      +                          l.h + clkAlarm.alarmVal.m + clkAlarm.alarmVal.s + tempAlarm.alarmTemp + lumAlarm.alarmLu
      +                          m + ALAF + t.h + t.m + iwrite);
 22269  0D13  3068               	movlw	104
 22270  0D14  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22271  0D15  3070               	movlw	112
 22272  0D16  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22273  0D17  0021               	movlb	1	; select bank1
 22274  0D18  0841               	movf	(_clkAlarm^(0+128)+1),w
 22275  0D19  0742               	addwf	(_clkAlarm^(0+128)+2),w
 22276  0D1A  0020               	movlb	0	; select bank0
 22277  0D1B  0760               	addwf	_t+1,w
 22278  0D1C  0021               	movlb	1	; select bank1
 22279  0D1D  0740               	addwf	_clkAlarm^(0+128),w
 22280  0D1E  074A               	addwf	_tempAlarm^(0+128),w
 22281  0D1F  0747               	addwf	_lumAlarm^(0+128),w
 22282  0D20  0020               	movlb	0	; select bank0
 22283  0D21  075F               	addwf	_t,w
 22284  0D22  076F               	addwf	_NREG,w
 22285  0D23  0021               	movlb	1	; select bank1
 22286  0D24  076E               	addwf	_PMON^(0+128),w
 22287  0D25  076D               	addwf	_TALA^(0+128),w
 22288  0D26  0020               	movlb	0	; select bank0
 22289  0D27  076A               	addwf	_ALAF,w
 22290  0D28  077D               	addwf	_iwrite,w
 22291  0D29  00FA               	movwf	??_Clock_ISR
 22292  0D2A  087A               	movf	??_Clock_ISR,w
 22293  0D2B  00F8               	movwf	i1DATAEE_WriteByte@bData
 22294  0D2C  3191  2195  318C   	fcall	i1_DATAEE_WriteByte
 22295  0D2F                     i1l5336:
 22296                           
 22297                           ;main.c: 378: };main.c: 379: if(t.m==60){
 22298  0D2F  303C               	movlw	60
 22299  0D30  0020               	movlb	0	; select bank0
 22300  0D31  0660               	xorwf	_t+1,w
 22301  0D32  1D03               	btfss	3,2
 22302  0D33  2D35               	goto	u455_21
 22303  0D34  2D36               	goto	u455_20
 22304  0D35                     u455_21:
 22305  0D35  2D3B               	goto	i1l5342
 22306  0D36                     u455_20:
 22307  0D36                     i1l5338:
 22308                           
 22309                           ;main.c: 380: t.h++;
 22310  0D36  3001               	movlw	1
 22311  0D37  00FA               	movwf	??_Clock_ISR
 22312  0D38  087A               	movf	??_Clock_ISR,w
 22313  0D39  07DF               	addwf	_t,f
 22314  0D3A                     i1l5340:
 22315                           
 22316                           ;main.c: 381: t.m=0;
 22317  0D3A  01E0               	clrf	_t+1
 22318  0D3B                     i1l5342:
 22319                           
 22320                           ;main.c: 382: };main.c: 383: if(t.h==24){
 22321  0D3B  3018               	movlw	24
 22322  0D3C  065F               	xorwf	_t,w
 22323  0D3D  1D03               	btfss	3,2
 22324  0D3E  2D40               	goto	u456_21
 22325  0D3F  2D41               	goto	u456_20
 22326  0D40                     u456_21:
 22327  0D40  2D42               	goto	i1l5346
 22328  0D41                     u456_20:
 22329  0D41                     i1l5344:
 22330                           
 22331                           ;main.c: 384: t.h=0;
 22332  0D41  01DF               	clrf	_t
 22333  0D42                     i1l5346:
 22334                           
 22335                           ;main.c: 385: };main.c: 388: if((ALAF == 'A') && t.s >= clkAlarm.alarmVal.s && t.m >= cl
      +                          kAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 22336  0D42  3041               	movlw	65
 22337  0D43  066A               	xorwf	_ALAF,w
 22338  0D44  1D03               	btfss	3,2
 22339  0D45  2D47               	goto	u457_21
 22340  0D46  2D48               	goto	u457_20
 22341  0D47                     u457_21:
 22342  0D47  2D71               	goto	i1l5360
 22343  0D48                     u457_20:
 22344  0D48                     i1l5348:
 22345  0D48  0021               	movlb	1	; select bank1
 22346  0D49  0842               	movf	(_clkAlarm^(0+128)+2),w
 22347  0D4A  0020               	movlb	0	; select bank0
 22348  0D4B  0261               	subwf	_t+2,w
 22349  0D4C  1C03               	skipc
 22350  0D4D  2D4F               	goto	u458_21
 22351  0D4E  2D50               	goto	u458_20
 22352  0D4F                     u458_21:
 22353  0D4F  2D71               	goto	i1l5360
 22354  0D50                     u458_20:
 22355  0D50                     i1l5350:
 22356  0D50  0021               	movlb	1	; select bank1
 22357  0D51  0841               	movf	(_clkAlarm^(0+128)+1),w
 22358  0D52  0020               	movlb	0	; select bank0
 22359  0D53  0260               	subwf	_t+1,w
 22360  0D54  1C03               	skipc
 22361  0D55  2D57               	goto	u459_21
 22362  0D56  2D58               	goto	u459_20
 22363  0D57                     u459_21:
 22364  0D57  2D71               	goto	i1l5360
 22365  0D58                     u459_20:
 22366  0D58                     i1l5352:
 22367  0D58  0021               	movlb	1	; select bank1
 22368  0D59  0840               	movf	_clkAlarm^(0+128),w
 22369  0D5A  0020               	movlb	0	; select bank0
 22370  0D5B  025F               	subwf	_t,w
 22371  0D5C  1C03               	skipc
 22372  0D5D  2D5F               	goto	u460_21
 22373  0D5E  2D60               	goto	u460_20
 22374  0D5F                     u460_21:
 22375  0D5F  2D71               	goto	i1l5360
 22376  0D60                     u460_20:
 22377  0D60                     i1l5354:
 22378  0D60  0864               	movf	_editingClockAlarm,w
 22379  0D61  0465               	iorwf	_editingClockAlarm+1,w
 22380  0D62  1D03               	btfss	3,2
 22381  0D63  2D65               	goto	u461_21
 22382  0D64  2D66               	goto	u461_20
 22383  0D65                     u461_21:
 22384  0D65  2D71               	goto	i1l5360
 22385  0D66                     u461_20:
 22386  0D66                     i1l5356:
 22387                           
 22388                           ;main.c: 389: alarmPWMStart.h = 0xff;
 22389  0D66  30FF               	movlw	255
 22390  0D67  00FA               	movwf	??_Clock_ISR
 22391  0D68  087A               	movf	??_Clock_ISR,w
 22392  0D69  0021               	movlb	1	; select bank1
 22393  0D6A  00E6               	movwf	_alarmPWMStart^(0+128)
 22394  0D6B                     i1l5358:
 22395                           
 22396                           ;main.c: 390: clkAlarm.trigger = 1;
 22397  0D6B  01C3               	clrf	(_clkAlarm^(0+128)+3)
 22398  0D6C  0AC3               	incf	(_clkAlarm^(0+128)+3),f
 22399                           
 22400                           ;main.c: 391: clkAlarm.alarmVal.h = 25;
 22401  0D6D  3019               	movlw	25
 22402  0D6E  00FA               	movwf	??_Clock_ISR
 22403  0D6F  087A               	movf	??_Clock_ISR,w
 22404  0D70  00C0               	movwf	_clkAlarm^(0+128)
 22405  0D71                     i1l5360:
 22406  0D71  1003               	clrc
 22407  0D72  0020               	movlb	0	; select bank0
 22408  0D73  1F96               	btfss	22,7	;volatile
 22409  0D74  1403               	setc
 22410  0D75  1803               	btfsc	3,0
 22411  0D76  2D78               	goto	u462_21
 22412  0D77  2D7B               	goto	u462_20
 22413  0D78                     u462_21:
 22414  0D78  0020               	movlb	0	; select bank0
 22415  0D79  1796               	bsf	22,7	;volatile
 22416  0D7A  2D7D               	goto	u463_24
 22417  0D7B                     u462_20:
 22418  0D7B  0020               	movlb	0	; select bank0
 22419  0D7C  1396               	bcf	22,7	;volatile
 22420  0D7D                     u463_24:
 22421  0D7D                     i1l5362:
 22422                           
 22423                           ;main.c: 395: updateLCD = 1;
 22424  0D7D  01EE               	clrf	_updateLCD
 22425  0D7E  0AEE               	incf	_updateLCD,f
 22426  0D7F                     i1l1347:
 22427  0D7F  0008               	return
 22428  0D80                     __end_of_Clock_ISR:
 22429                           
 22430                           	psect	text85
 22431  1F9B                     __ptext85:	
 22432 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 22433 ;; Defined at:
 22434 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 22435 ;; Parameters:    Size  Location     Type
 22436 ;;		None
 22437 ;; Auto vars:     Size  Location     Type
 22438 ;;		None
 22439 ;; Return value:  Size  Location     Type
 22440 ;;                  1    wreg      void 
 22441 ;; Registers used:
 22442 ;;		None
 22443 ;; Tracked objects:
 22444 ;;		On entry : 0/0
 22445 ;;		On exit  : 0/0
 22446 ;;		Unchanged: 0/0
 22447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22452 ;;Total ram usage:        0 bytes
 22453 ;; Hardware stack levels used:    1
 22454 ;; This function calls:
 22455 ;;		Nothing
 22456 ;; This function is called by:
 22457 ;;		_TMR1_Initialize
 22458 ;;		_TMR1_ISR
 22459 ;; This function uses a non-reentrant model
 22460 ;;
 22461                           
 22462                           
 22463                           ;psect for function _TMR1_DefaultInterruptHandler
 22464  1F9B                     _TMR1_DefaultInterruptHandler:
 22465  1F9B                     i1l448:	
 22466                           ;incstack = 0
 22467                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 22468                           
 22469  1F9B  0008               	return
 22470  1F9C                     __end_of_TMR1_DefaultInterruptHandler:
 22471                           
 22472                           	psect	text86
 22473  1195                     __ptext86:	
 22474 ;; *************** function i1_DATAEE_WriteByte *****************
 22475 ;; Defined at:
 22476 ;;		line 180 in file "mcc_generated_files/memory.c"
 22477 ;; Parameters:    Size  Location     Type
 22478 ;;  bAdd            2    6[COMMON] unsigned int 
 22479 ;;  bData           1    8[COMMON] unsigned char 
 22480 ;; Auto vars:     Size  Location     Type
 22481 ;;  GIEBitValue     1    9[COMMON] unsigned char 
 22482 ;; Return value:  Size  Location     Type
 22483 ;;                  1    wreg      void 
 22484 ;; Registers used:
 22485 ;;		wreg, status,2, status,0
 22486 ;; Tracked objects:
 22487 ;;		On entry : 0/0
 22488 ;;		On exit  : 0/0
 22489 ;;		Unchanged: 0/0
 22490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22491 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22494 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22495 ;;Total ram usage:        4 bytes
 22496 ;; Hardware stack levels used:    1
 22497 ;; This function calls:
 22498 ;;		Nothing
 22499 ;; This function is called by:
 22500 ;;		_Clock_ISR
 22501 ;;		_monitoring_ISR
 22502 ;; This function uses a non-reentrant model
 22503 ;;
 22504                           
 22505                           
 22506                           ;psect for function i1_DATAEE_WriteByte
 22507  1195                     i1_DATAEE_WriteByte:
 22508  1195                     i1l5026:	
 22509                           ;incstack = 0
 22510                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 22511                           
 22512                           
 22513                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 22514  1195  3000               	movlw	0
 22515  1196  1B8B               	btfsc	11,7	;volatile
 22516  1197  3001               	movlw	1
 22517  1198  00F9               	movwf	i1DATAEE_WriteByte@GIEBitValue
 22518                           
 22519                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 22520  1199  0877               	movf	i1DATAEE_WriteByte@bAdd+1,w
 22521  119A  0030               	movlb	16	; select bank16
 22522  119B  009B               	movwf	27	;volatile
 22523  119C                     i1l5028:
 22524                           
 22525                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 22526  119C  0876               	movf	i1DATAEE_WriteByte@bAdd,w
 22527  119D  009A               	movwf	26	;volatile
 22528  119E                     i1l5030:
 22529                           
 22530                           ;memory.c: 186: NVMDATL = bData;
 22531  119E  0878               	movf	i1DATAEE_WriteByte@bData,w
 22532  119F  009C               	movwf	28	;volatile
 22533  11A0                     i1l5032:
 22534                           
 22535                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 22536  11A0  171E               	bsf	30,6	;volsfr
 22537  11A1                     i1l5034:
 22538                           
 22539                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 22540  11A1  151E               	bsf	30,2	;volsfr
 22541  11A2                     i1l5036:
 22542                           
 22543                           ;memory.c: 189: INTCONbits.GIE = 0;
 22544  11A2  138B               	bcf	11,7	;volatile
 22545  11A3                     i1l5038:
 22546                           
 22547                           ;memory.c: 190: NVMCON2 = 0x55;
 22548  11A3  3055               	movlw	85
 22549  11A4  009F               	movwf	31	;volsfr
 22550  11A5                     i1l5040:
 22551                           
 22552                           ;memory.c: 191: NVMCON2 = 0xAA;
 22553  11A5  30AA               	movlw	170
 22554  11A6  009F               	movwf	31	;volsfr
 22555  11A7                     i1l5042:
 22556                           
 22557                           ;memory.c: 192: NVMCON1bits.WR = 1;
 22558  11A7  149E               	bsf	30,1	;volsfr
 22559  11A8                     i1l801:	
 22560                           ;memory.c: 195: {
 22561                           
 22562  11A8  189E               	btfsc	30,1	;volsfr
 22563  11A9  29AB               	goto	u438_21
 22564  11AA  29AC               	goto	u438_20
 22565  11AB                     u438_21:
 22566  11AB  29A8               	goto	i1l801
 22567  11AC                     u438_20:
 22568  11AC                     i1l803:
 22569                           
 22570                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 22571  11AC  111E               	bcf	30,2	;volsfr
 22572  11AD                     i1l5044:
 22573                           
 22574                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 22575  11AD  0C79               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 22576  11AE  1C03               	skipc
 22577  11AF  138B               	bcf	11,7	;volatile
 22578  11B0  1803               	skipnc
 22579  11B1  178B               	bsf	11,7	;volatile
 22580  11B2                     i1l804:
 22581  11B2  0008               	return
 22582  11B3                     __end_ofi1_DATAEE_WriteByte:
 22583                           
 22584                           	psect	text87
 22585  1FB9                     __ptext87:	
 22586 ;; *************** function _INT_ISR *****************
 22587 ;; Defined at:
 22588 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 22589 ;; Parameters:    Size  Location     Type
 22590 ;;		None
 22591 ;; Auto vars:     Size  Location     Type
 22592 ;;		None
 22593 ;; Return value:  Size  Location     Type
 22594 ;;                  1    wreg      void 
 22595 ;; Registers used:
 22596 ;;		wreg, status,2, status,0, pclath, cstack
 22597 ;; Tracked objects:
 22598 ;;		On entry : 0/0
 22599 ;;		On exit  : 0/0
 22600 ;;		Unchanged: 0/0
 22601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22606 ;;Total ram usage:        0 bytes
 22607 ;; Hardware stack levels used:    1
 22608 ;; Hardware stack levels required when called:    2
 22609 ;; This function calls:
 22610 ;;		_INT_CallBack
 22611 ;; This function is called by:
 22612 ;;		_INTERRUPT_InterruptManager
 22613 ;; This function uses a non-reentrant model
 22614 ;;
 22615                           
 22616                           
 22617                           ;psect for function _INT_ISR
 22618  1FB9                     _INT_ISR:
 22619  1FB9                     i1l5650:	
 22620                           ;incstack = 0
 22621                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 22622                           
 22623                           
 22624                           ;ext_int.c: 34: (PIR0bits.INTF = 0);
 22625  1FB9  002E               	movlb	14	; select bank14
 22626  1FBA  100C               	bcf	12,0	;volatile
 22627  1FBB                     i1l5652:
 22628                           
 22629                           ;ext_int.c: 37: INT_CallBack();
 22630  1FBB  3190  2040  319F   	fcall	_INT_CallBack
 22631  1FBE                     i1l820:
 22632  1FBE  0008               	return
 22633  1FBF                     __end_of_INT_ISR:
 22634                           
 22635                           	psect	text88
 22636  1040                     __ptext88:	
 22637 ;; *************** function _INT_CallBack *****************
 22638 ;; Defined at:
 22639 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 22640 ;; Parameters:    Size  Location     Type
 22641 ;;		None
 22642 ;; Auto vars:     Size  Location     Type
 22643 ;;		None
 22644 ;; Return value:  Size  Location     Type
 22645 ;;                  1    wreg      void 
 22646 ;; Registers used:
 22647 ;;		wreg, status,2, status,0, pclath, cstack
 22648 ;; Tracked objects:
 22649 ;;		On entry : 0/0
 22650 ;;		On exit  : 0/0
 22651 ;;		Unchanged: 0/0
 22652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22657 ;;Total ram usage:        0 bytes
 22658 ;; Hardware stack levels used:    1
 22659 ;; Hardware stack levels required when called:    1
 22660 ;; This function calls:
 22661 ;;		Absolute function
 22662 ;;		_INT_DefaultInterruptHandler
 22663 ;;		_S1_ISR
 22664 ;; This function is called by:
 22665 ;;		_INT_ISR
 22666 ;; This function uses a non-reentrant model
 22667 ;;
 22668                           
 22669                           
 22670                           ;psect for function _INT_CallBack
 22671  1040                     _INT_CallBack:
 22672  1040                     i1l5264:	
 22673                           ;incstack = 0
 22674                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 22675                           
 22676                           
 22677                           ;ext_int.c: 44: if(INT_InterruptHandler)
 22678  1040  0021               	movlb	1	; select bank1
 22679  1041  085B               	movf	_INT_InterruptHandler^(0+128),w
 22680  1042  045C               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 22681  1043  1903               	btfsc	3,2
 22682  1044  2846               	goto	u445_21
 22683  1045  2847               	goto	u445_20
 22684  1046                     u445_21:
 22685  1046  284C               	goto	i1l824
 22686  1047                     u445_20:
 22687  1047                     i1l5266:
 22688                           
 22689                           ;ext_int.c: 45: {;ext_int.c: 46: INT_InterruptHandler();
 22690  1047  085C               	movf	(_INT_InterruptHandler+1)^(0+128),w
 22691  1048  008A               	movwf	10
 22692  1049  085B               	movf	_INT_InterruptHandler^(0+128),w
 22693  104A  000A               	callw
 22694  104B  3190               	pagesel	$
 22695  104C                     i1l824:
 22696  104C  0008               	return
 22697  104D                     __end_of_INT_CallBack:
 22698                           
 22699                           	psect	text89
 22700  1F9A                     __ptext89:	
 22701 ;; *************** function _INT_DefaultInterruptHandler *****************
 22702 ;; Defined at:
 22703 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 22704 ;; Parameters:    Size  Location     Type
 22705 ;;		None
 22706 ;; Auto vars:     Size  Location     Type
 22707 ;;		None
 22708 ;; Return value:  Size  Location     Type
 22709 ;;                  1    wreg      void 
 22710 ;; Registers used:
 22711 ;;		None
 22712 ;; Tracked objects:
 22713 ;;		On entry : 0/0
 22714 ;;		On exit  : 0/0
 22715 ;;		Unchanged: 0/0
 22716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22721 ;;Total ram usage:        0 bytes
 22722 ;; Hardware stack levels used:    1
 22723 ;; This function calls:
 22724 ;;		Nothing
 22725 ;; This function is called by:
 22726 ;;		_EXT_INT_Initialize
 22727 ;;		_INT_CallBack
 22728 ;; This function uses a non-reentrant model
 22729 ;;
 22730                           
 22731                           
 22732                           ;psect for function _INT_DefaultInterruptHandler
 22733  1F9A                     _INT_DefaultInterruptHandler:
 22734  1F9A                     i1l830:	
 22735                           ;incstack = 0
 22736                           ; Regs used in _INT_DefaultInterruptHandler: []
 22737                           
 22738  1F9A  0008               	return
 22739  1F9B                     __end_of_INT_DefaultInterruptHandler:
 22740                           
 22741                           	psect	text90
 22742  1FD3                     __ptext90:	
 22743 ;; *************** function _S1_ISR *****************
 22744 ;; Defined at:
 22745 ;;		line 776 in file "main.c"
 22746 ;; Parameters:    Size  Location     Type
 22747 ;;		None
 22748 ;; Auto vars:     Size  Location     Type
 22749 ;;		None
 22750 ;; Return value:  Size  Location     Type
 22751 ;;                  1    wreg      void 
 22752 ;; Registers used:
 22753 ;;		None
 22754 ;; Tracked objects:
 22755 ;;		On entry : 0/0
 22756 ;;		On exit  : 0/0
 22757 ;;		Unchanged: 0/0
 22758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22763 ;;Total ram usage:        0 bytes
 22764 ;; Hardware stack levels used:    1
 22765 ;; This function calls:
 22766 ;;		Nothing
 22767 ;; This function is called by:
 22768 ;;		_main
 22769 ;;		_INT_CallBack
 22770 ;; This function uses a non-reentrant model
 22771 ;;
 22772                           
 22773                           
 22774                           ;psect for function _S1_ISR
 22775  1FD3                     _S1_ISR:
 22776  1FD3                     i1l5016:	
 22777                           ;incstack = 0
 22778                           ; Regs used in _S1_ISR: []
 22779                           
 22780                           
 22781                           ;main.c: 777: PIE0bits.INTE = 0;
 22782  1FD3  002E               	movlb	14	; select bank14
 22783  1FD4  1016               	bcf	22,0	;volatile
 22784                           
 22785                           ;main.c: 778: flagS1pushed = 1;
 22786  1FD5  0020               	movlb	0	; select bank0
 22787  1FD6  01E7               	clrf	_flagS1pushed
 22788  1FD7  0AE7               	incf	_flagS1pushed,f
 22789                           
 22790                           ;main.c: 797: (PIR0bits.INTF = 0);
 22791  1FD8  002E               	movlb	14	; select bank14
 22792  1FD9  100C               	bcf	12,0	;volatile
 22793                           
 22794                           ;main.c: 798: PIE0bits.INTE = 1;
 22795  1FDA  1416               	bsf	22,0	;volatile
 22796  1FDB                     i1l1499:
 22797  1FDB  0008               	return
 22798  1FDC                     __end_of_S1_ISR:
 22799                           
 22800                           	psect	text91
 22801  1316                     __ptext91:	
 22802 ;; *************** function _EUSART_Transmit_ISR *****************
 22803 ;; Defined at:
 22804 ;;		line 181 in file "mcc_generated_files/eusart.c"
 22805 ;; Parameters:    Size  Location     Type
 22806 ;;		None
 22807 ;; Auto vars:     Size  Location     Type
 22808 ;;		None
 22809 ;; Return value:  Size  Location     Type
 22810 ;;                  1    wreg      void 
 22811 ;; Registers used:
 22812 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22813 ;; Tracked objects:
 22814 ;;		On entry : 0/0
 22815 ;;		On exit  : 0/0
 22816 ;;		Unchanged: 0/0
 22817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22820 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22822 ;;Total ram usage:        1 bytes
 22823 ;; Hardware stack levels used:    1
 22824 ;; This function calls:
 22825 ;;		Nothing
 22826 ;; This function is called by:
 22827 ;;		_EUSART_Initialize
 22828 ;;		_INTERRUPT_InterruptManager
 22829 ;; This function uses a non-reentrant model
 22830 ;;
 22831                           
 22832                           
 22833                           ;psect for function _EUSART_Transmit_ISR
 22834  1316                     _EUSART_Transmit_ISR:
 22835  1316                     i1l5700:	
 22836                           ;incstack = 0
 22837                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 22838                           
 22839                           
 22840                           ;eusart.c: 185: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 22841  1316  3040               	movlw	64
 22842  1317  0021               	movlb	1	; select bank1
 22843  1318  0265               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 22844  1319  1803               	skipnc
 22845  131A  2B1C               	goto	u523_21
 22846  131B  2B1D               	goto	u523_20
 22847  131C                     u523_21:
 22848  131C  2B38               	goto	i1l918
 22849  131D                     u523_20:
 22850  131D                     i1l5702:
 22851                           
 22852                           ;eusart.c: 186: {;eusart.c: 187: TX1REG = eusartTxBuffer[eusartTxTail++];
 22853  131D  0020               	movlb	0	; select bank0
 22854  131E  086C               	movf	_eusartTxTail,w
 22855  131F  3EA0               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 22856  1320  0086               	movwf	6
 22857  1321  3001               	movlw	1	; select bank3/4
 22858  1322  0087               	movwf	7
 22859  1323  0801               	movf	1,w
 22860  1324  0022               	movlb	2	; select bank2
 22861  1325  009A               	movwf	26	;volatile
 22862  1326                     i1l5704:
 22863  1326  3001               	movlw	1
 22864  1327  00F0               	movwf	??_EUSART_Transmit_ISR
 22865  1328  0870               	movf	??_EUSART_Transmit_ISR,w
 22866  1329  0020               	movlb	0	; select bank0
 22867  132A  07EC               	addwf	_eusartTxTail,f	;volatile
 22868  132B                     i1l5706:
 22869                           
 22870                           ;eusart.c: 188: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 22871  132B  3040               	movlw	64
 22872  132C  026C               	subwf	_eusartTxTail,w	;volatile
 22873  132D  1C03               	skipc
 22874  132E  2B30               	goto	u524_21
 22875  132F  2B31               	goto	u524_20
 22876  1330                     u524_21:
 22877  1330  2B32               	goto	i1l5710
 22878  1331                     u524_20:
 22879  1331                     i1l5708:
 22880                           
 22881                           ;eusart.c: 189: {;eusart.c: 190: eusartTxTail = 0;
 22882  1331  01EC               	clrf	_eusartTxTail	;volatile
 22883  1332                     i1l5710:
 22884                           
 22885                           ;eusart.c: 191: };eusart.c: 192: eusartTxBufferRemaining++;
 22886  1332  3001               	movlw	1
 22887  1333  00F0               	movwf	??_EUSART_Transmit_ISR
 22888  1334  0870               	movf	??_EUSART_Transmit_ISR,w
 22889  1335  0021               	movlb	1	; select bank1
 22890  1336  07E5               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 22891                           
 22892                           ;eusart.c: 193: }
 22893  1337  2B3A               	goto	i1l921
 22894  1338                     i1l918:
 22895                           
 22896                           ;eusart.c: 194: else;eusart.c: 195: {;eusart.c: 196: PIE3bits.TXIE = 0;
 22897  1338  002E               	movlb	14	; select bank14
 22898  1339  1219               	bcf	25,4	;volatile
 22899  133A                     i1l921:
 22900  133A  0008               	return
 22901  133B                     __end_of_EUSART_Transmit_ISR:
 22902                           
 22903                           	psect	text92
 22904  12AD                     __ptext92:	
 22905 ;; *************** function _EUSART_Receive_ISR *****************
 22906 ;; Defined at:
 22907 ;;		line 200 in file "mcc_generated_files/eusart.c"
 22908 ;; Parameters:    Size  Location     Type
 22909 ;;		None
 22910 ;; Auto vars:     Size  Location     Type
 22911 ;;		None
 22912 ;; Return value:  Size  Location     Type
 22913 ;;                  1    wreg      void 
 22914 ;; Registers used:
 22915 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22916 ;; Tracked objects:
 22917 ;;		On entry : 0/0
 22918 ;;		On exit  : 0/0
 22919 ;;		Unchanged: 0/0
 22920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22923 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22925 ;;Total ram usage:        1 bytes
 22926 ;; Hardware stack levels used:    1
 22927 ;; This function calls:
 22928 ;;		Nothing
 22929 ;; This function is called by:
 22930 ;;		_EUSART_Initialize
 22931 ;;		_INTERRUPT_InterruptManager
 22932 ;; This function uses a non-reentrant model
 22933 ;;
 22934                           
 22935                           
 22936                           ;psect for function _EUSART_Receive_ISR
 22937  12AD                     _EUSART_Receive_ISR:
 22938  12AD                     i1l5712:	
 22939                           ;incstack = 0
 22940                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 22941                           
 22942                           
 22943                           ;eusart.c: 203: if(1 == RC1STAbits.OERR)
 22944  12AD  0022               	movlb	2	; select bank2
 22945  12AE  1C9D               	btfss	29,1	;volatile
 22946  12AF  2AB1               	goto	u525_21
 22947  12B0  2AB2               	goto	u525_20
 22948  12B1                     u525_21:
 22949  12B1  2AB4               	goto	i1l5716
 22950  12B2                     u525_20:
 22951  12B2                     i1l5714:
 22952                           
 22953                           ;eusart.c: 204: {;eusart.c: 207: RC1STAbits.CREN = 0;
 22954  12B2  121D               	bcf	29,4	;volatile
 22955                           
 22956                           ;eusart.c: 208: RC1STAbits.CREN = 1;
 22957  12B3  161D               	bsf	29,4	;volatile
 22958  12B4                     i1l5716:
 22959                           
 22960                           ;eusart.c: 209: };eusart.c: 212: eusartRxBuffer[eusartRxHead++] = RC1REG;
 22961  12B4  0819               	movf	25,w	;volatile
 22962  12B5  00F0               	movwf	??_EUSART_Receive_ISR
 22963  12B6  0020               	movlb	0	; select bank0
 22964  12B7  086B               	movf	_eusartRxHead,w
 22965  12B8  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 22966  12B9  0086               	movwf	6
 22967  12BA  3002               	movlw	2	; select bank4/5
 22968  12BB  0087               	movwf	7
 22969  12BC  0870               	movf	??_EUSART_Receive_ISR,w
 22970  12BD  0081               	movwf	1
 22971  12BE                     i1l5718:
 22972  12BE  3001               	movlw	1
 22973  12BF  00F0               	movwf	??_EUSART_Receive_ISR
 22974  12C0  0870               	movf	??_EUSART_Receive_ISR,w
 22975  12C1  07EB               	addwf	_eusartRxHead,f	;volatile
 22976  12C2                     i1l5720:
 22977                           
 22978                           ;eusart.c: 213: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 22979  12C2  3040               	movlw	64
 22980  12C3  026B               	subwf	_eusartRxHead,w	;volatile
 22981  12C4  1C03               	skipc
 22982  12C5  2AC7               	goto	u526_21
 22983  12C6  2AC8               	goto	u526_20
 22984  12C7                     u526_21:
 22985  12C7  2AC9               	goto	i1l5724
 22986  12C8                     u526_20:
 22987  12C8                     i1l5722:
 22988                           
 22989                           ;eusart.c: 214: {;eusart.c: 215: eusartRxHead = 0;
 22990  12C8  01EB               	clrf	_eusartRxHead	;volatile
 22991  12C9                     i1l5724:
 22992                           
 22993                           ;eusart.c: 216: };eusart.c: 217: eusartRxCount++;
 22994  12C9  3001               	movlw	1
 22995  12CA  00F0               	movwf	??_EUSART_Receive_ISR
 22996  12CB  0870               	movf	??_EUSART_Receive_ISR,w
 22997  12CC  0021               	movlb	1	; select bank1
 22998  12CD  07D9               	addwf	_eusartRxCount^(0+128),f	;volatile
 22999  12CE                     i1l926:
 23000  12CE  0008               	return
 23001  12CF                     __end_of_EUSART_Receive_ISR:
 23002  007E                     btemp	set	126	;btemp
 23003  007E                     int$flags	set	126
 23004  007E                     wtemp0	set	126
 23005                           
 23006                           	psect	config
 23007                           
 23008                           ;Config register CONFIG1 @ 0x8007
 23009                           ;	External Oscillator mode selection bits
 23010                           ;	FEXTOSC = OFF, Oscillator not enabled
 23011                           ;	Power-up default value for COSC bits
 23012                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 23013                           ;	Clock Out Enable bit
 23014                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 23015                           ;	Clock Switch Enable bit
 23016                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 23017                           ;	Fail-Safe Clock Monitor Enable bit
 23018                           ;	FCMEN = ON, FSCM timer enabled
 23019  8007                     	org	32775
 23020  8007  3FEC               	dw	16364
 23021                           
 23022                           ;Config register CONFIG2 @ 0x8008
 23023                           ;	Master Clear Enable bit
 23024                           ;	MCLRE = ON, MCLR pin is Master Clear function
 23025                           ;	Power-up Timer Enable bit
 23026                           ;	PWRTE = OFF, PWRT disabled
 23027                           ;	Low-Power BOR enable bit
 23028                           ;	LPBOREN = OFF, ULPBOR disabled
 23029                           ;	Brown-out reset enable bits
 23030                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 23031                           ;	Brown-out Reset Voltage Selection
 23032                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 23033                           ;	Zero-cross detect disable
 23034                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 23035                           ;	Peripheral Pin Select one-way control
 23036                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 23037                           ;	Stack Overflow/Underflow Reset Enable bit
 23038                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 23039                           ;	Background Debugger
 23040                           ;	DEBUG = OFF, Background Debugger disabled
 23041  8008                     	org	32776
 23042  8008  3FFF               	dw	16383
 23043                           
 23044                           ;Config register CONFIG3 @ 0x8009
 23045                           ;	WDT Period Select bits
 23046                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 23047                           ;	WDT operating mode
 23048                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 23049                           ;	WDT Window Select bits
 23050                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 23051                           ;	WDT input clock selector
 23052                           ;	WDTCCS = SC, Software Control
 23053  8009                     	org	32777
 23054  8009  3F9F               	dw	16287
 23055                           
 23056                           ;Config register CONFIG4 @ 0x800A
 23057                           ;	UserNVM self-write protection bits
 23058                           ;	WRT = OFF, Write protection off
 23059                           ;	Scanner Enable bit
 23060                           ;	SCANE = available, Scanner module is available for use
 23061                           ;	Low Voltage Programming Enable bit
 23062                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 23063  800A                     	org	32778
 23064  800A  3FFF               	dw	16383
 23065                           
 23066                           ;Config register CONFIG5 @ 0x800B
 23067                           ;	UserNVM Program memory code protection bit
 23068                           ;	CP = OFF, Program Memory code protection disabled
 23069                           ;	DataNVM code protection bit
 23070                           ;	CPD = OFF, Data EEPROM code protection disabled
 23071  800B                     	org	32779
 23072  800B  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    49
    Data        11
    BSS         191
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     63      80
    BANK1            80     32      79
    BANK2            80      0      24
    BANK3            80      0      64
    BANK4            80      0      64
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    main$3687$1	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    main$3687	const PTR FTN(int ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> cmd_tri(), cmd_trc(), cmd_ir(), cmd_aa(), 
		 -> cmd_dtl(), cmd_dac(), cmd_ra(), cmd_mta(), 
		 -> cmd_mmp(), cmd_rp(), cmd_rtl(), cmd_sc(), 
		 -> cmd_rc(), 

    cmd_rc@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_rtl@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_rp@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_ra@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_ir@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    S2057$0$1	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    memset@p1	PTR void  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    memset@p	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> update_menuLCD@l(BANK0[3]), update_menuLCD@tt(BANK0[4]), update_menuLCD@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__memset	PTR void  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_tri@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_trc@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_aa@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_dtl@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_dac@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_mta@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_mmp@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_sc@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    sendMessage@buffer	PTR unsigned char  size(1) Largest target is 9
		 -> cmd_tri@buffEOM(BANK0[1]), cmd_tri@buffData(BANK0[5]), cmd_tri@buffInit(BANK0[4]), cmd_trc@buffEOM(BANK0[1]), 
		 -> cmd_trc@buffData(BANK0[5]), cmd_trc@buffInit(BANK0[3]), cmd_ir@buff(BANK0[7]), cmd_ra@buff(BANK0[9]), 
		 -> cmd_rp@buff(BANK0[5]), cmd_rtl@buff(BANK0[5]), cmd_rc@buff(BANK0[6]), sendERRORMessage@bufw(BANK0[4]), 
		 -> sendOKMessage@bufw(BANK0[4]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 3
		 -> update_menuLCD@diff(BANK0[3]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[4]), update_menuLCD@l(BANK0[3]), update_menuLCD@tt(BANK0[4]), update_menuLCD@str(BANK0[8]), 

    S2057command_d$cmd_fnct	PTR FTN(int ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> cmd_tri(), cmd_trc(), cmd_ir(), cmd_aa(), 
		 -> cmd_dtl(), cmd_dac(), cmd_ra(), cmd_mta(), 
		 -> cmd_mmp(), cmd_rp(), cmd_rtl(), cmd_sc(), 
		 -> cmd_rc(), 

    commands.cmd_fnct	PTR FTN(int ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> cmd_tri(), cmd_trc(), cmd_ir(), cmd_aa(), 
		 -> cmd_dtl(), cmd_dac(), cmd_ra(), cmd_mta(), 
		 -> cmd_mmp(), cmd_rp(), cmd_rtl(), cmd_sc(), 
		 -> cmd_rc(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_ISR(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_ISR(), INT_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->i1_DATAEE_WriteByte
    _tsttc->i1_WriteI2C
    _TMR1_ISR->_Clock_ISR
    _Clock_ISR->i1_DATAEE_WriteByte
    i1_DATAEE_WriteByte->i1___wmul

Critical Paths under _main in BANK0

    _main->_editClock
    _main->_editLum
    _main->_editTemp
    _main->_toggleAlarms
    _toggleAlarms->_update_menuLCD
    _getch->_EUSART_Read
    _editTemp->_update_menuLCD
    _editLum->_update_menuLCD
    _editClock->_update_menuLCD
    _update_menuLCD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDcmd->_LCDsend2x4
    _cmd_tri->_sendERRORMessage
    _cmd_trc->_sendERRORMessage
    _DATAEE_ReadByte->___wmul
    _cmd_sc->_sendERRORMessage
    _cmd_sc->_sendOKMessage
    _cmd_mta->_sendERRORMessage
    _cmd_mta->_sendOKMessage
    _cmd_mmp->_sendERRORMessage
    _cmd_mmp->_sendOKMessage
    _cmd_dtl->_sendERRORMessage
    _cmd_dtl->_sendOKMessage
    _cmd_dac->_sendERRORMessage
    _cmd_dac->_sendOKMessage
    _cmd_aa->_sendERRORMessage
    _cmd_aa->_sendOKMessage
    _sendOKMessage->_sendMessage
    _sendERRORMessage->_sendMessage
    _sendMessage->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0  104695
                                             60 BANK0      3     3      0
                                              0 BANK1     32    32      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                 _EUSART_is_rx_ready
            _INT_SetInterruptHandler
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
               _PWM_Output_D4_Enable
                           _S1button
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR2_StartTimer
                     _TMR2_StopTimer
           _TMR5_SetInterruptHandler
                             ___wmul
                             _cmd_aa *
                            _cmd_dac *
                            _cmd_dtl *
                             _cmd_ir *
                            _cmd_mmp *
                            _cmd_mta *
                             _cmd_ra *
                             _cmd_rc *
                             _cmd_rp *
                            _cmd_rtl *
                             _cmd_sc *
                            _cmd_trc *
                            _cmd_tri *
                          _editClock
                            _editLum
                           _editTemp
                              _getch
                   _i2c1_driver_open
                             _memset
                       _toggleAlarms
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0    7776
                                             59 BANK0      1     1      0
                           _S1button
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     651
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0      24
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0    7776
                                             59 BANK0      1     1      0
                           _S1button
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0    7776
                                             59 BANK0      1     1      0
                           _S1button
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0    7776
                                             59 BANK0      1     1      0
                           _S1button
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _update_menuLCD                                      24    24      0    7776
                                             35 BANK0     24    24      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                     _TMR2_StopTimer
        _differenceBetweenTimePeriod
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    21      8    3759
                                             14 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _differenceBetweenTimePeriod                          8     1      7     595
                                              0 BANK0      8     1      7
 ---------------------------------------------------------------------------------
 (2) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (3) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     348
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCDstr                                               6     4      2    1159
                                              9 BANK0      6     4      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (3) _LCDchar                                              1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _S1button                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cmd_tri                                             28    25      3    7925
                                             15 BANK0     28    25      3
                    _DATAEE_ReadByte
                             ___wmul
                   _sendERRORMessage
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_trc                                             27    24      3    7682
                                             15 BANK0     27    24      3
                    _DATAEE_ReadByte
                             ___wmul
                   _sendERRORMessage
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1504
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2    1336
                                              6 BANK0      2     0      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _cmd_sc                                               7     4      3    4723
                                             15 BANK0      7     4      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_rtl                                              9     6      3    2252
                                             15 BANK0      9     6      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_rp                                               9     6      3    2252
                                             15 BANK0      9     6      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_rc                                              10     7      3    2276
                                             15 BANK0     10     7      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_ra                                              13    10      3    2348
                                             15 BANK0     13    10      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_mta                                              3     0      3    4544
                                             15 BANK0      3     0      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_mmp                                             15    12      3    4953
                                             15 BANK0     15    12      3
                    _TMR5_StartTimer
                     _TMR5_StopTimer
                             ___lmul
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
                 _setTimer5ReloadVal
 ---------------------------------------------------------------------------------
 (2) _setTimer5ReloadVal                                   2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cmd_ir                                              11     8      3    2300
                                             15 BANK0     11     8      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_dtl                                              5     2      3    4656
                                             15 BANK0      5     2      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_dac                                              7     4      3    4723
                                             15 BANK0      7     4      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_aa                                               4     1      3    4588
                                             15 BANK0      4     1      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (2) _sendOKMessage                                        6     6      0    2250
                                              9 BANK0      6     6      0
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _sendERRORMessage                                     6     6      0    2250
                                              9 BANK0      6     6      0
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _sendMessage                                          6     3      3    2132
                                              3 BANK0      6     3      3
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     718
                    _ADCC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     196
                                              2 BANK0      1     1      0
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 BANK0      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (4) _LCDsend2x4                                           6     5      1     788
                                              2 BANK0      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK0      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (5) _WriteI2C                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    4017
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0    2972
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                            _INT_ISR
                           _TMR1_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR5_ISR                                             0     0      0    1707
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (9) _monitoring_ISR                                       3     3      0    1467
                                             10 COMMON     3     3      0
           _ADCC_GetSingleConversion
                              _tsttc
                 i1_DATAEE_WriteByte
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) _tsttc                                               2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (11) i1_WriteI2C                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _ReadI2C                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_GetSingleConversion                            4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (9) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0    1265
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Clock_ISR                                            1     1      0    1025
                                             10 COMMON     1     1      0
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (10) i1_DATAEE_WriteByte                                  4     1      3    1025
                                              6 COMMON     4     1      3
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
                             _S1_ISR *
 ---------------------------------------------------------------------------------
 (10) _S1_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
     ___wmul (ARG)
   _DATAEE_WriteByte
   _EUSART_is_rx_ready
   _INT_SetInterruptHandler
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _PWM_Output_D4_Enable
   _S1button
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StartTimer
     _TMR2_Start
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR5_SetInterruptHandler
   ___wmul
   _cmd_aa *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_dac *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_dtl *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_ir *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_mmp *
     _TMR5_StartTimer
     _TMR5_StopTimer
     ___lmul
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _setTimer5ReloadVal (ARG)
   _cmd_mta *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_ra *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_rc *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_rp *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_rtl *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_sc *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_trc *
     _DATAEE_ReadByte
       ___wmul (ARG)
     ___wmul
     _sendERRORMessage
       _sendMessage
         _putch
           _EUSART_Write
     _sendMessage
       _putch
         _EUSART_Write
   _cmd_tri *
     _DATAEE_ReadByte
       ___wmul (ARG)
     ___wmul
     _sendERRORMessage
       _sendMessage
         _putch
           _EUSART_Write
     _sendMessage
       _putch
         _EUSART_Write
   _editClock *
     _S1button
     _update_menuLCD
       _LCDchar
         _LCDsend2x4
           _WriteI2C
       _LCDcmd
         _LCDsend2x4
           _WriteI2C
       _LCDstr
         _LCDchar
           _LCDsend2x4
             _WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Disable
       _TMR2_StopTimer
         _TMR2_Stop
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _editLum *
     _S1button
     _update_menuLCD
       _LCDchar
         _LCDsend2x4
           _WriteI2C
       _LCDcmd
         _LCDsend2x4
           _WriteI2C
       _LCDstr
         _LCDchar
           _LCDsend2x4
             _WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Disable
       _TMR2_StopTimer
         _TMR2_Stop
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _editTemp *
     _S1button
     _update_menuLCD
       _LCDchar
         _LCDsend2x4
           _WriteI2C
       _LCDcmd
         _LCDsend2x4
           _WriteI2C
       _LCDstr
         _LCDchar
           _LCDsend2x4
             _WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Disable
       _TMR2_StopTimer
         _TMR2_Stop
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _getch *
     _EUSART_Read
   _i2c1_driver_open *
   _memset *
   _toggleAlarms *
     _S1button
     _update_menuLCD
       _LCDchar
         _LCDsend2x4
           _WriteI2C
       _LCDcmd
         _LCDsend2x4
           _WriteI2C
       _LCDstr
         _LCDchar
           _LCDsend2x4
             _WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Disable
       _TMR2_StopTimer
         _TMR2_Stop
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _update_menuLCD *
     _LCDchar
       _LCDsend2x4
         _WriteI2C
     _LCDcmd
       _LCDsend2x4
         _WriteI2C
     _LCDstr
       _LCDchar
         _LCDsend2x4
           _WriteI2C
     _PWM6_LoadDutyValue
     _PWM_Output_D4_Disable
     _TMR2_StopTimer
       _TMR2_Stop
     _differenceBetweenTimePeriod
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _S1_ISR *
   _TMR1_ISR *
     Absolute function(Fake) *
     _Clock_ISR *
       i1_DATAEE_WriteByte
         i1___wmul (ARG)
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       _tsttc
         _ReadI2C
         i1_WriteI2C
       i1_DATAEE_WriteByte
         i1___wmul (ARG)
       i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     20      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     145      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     145      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Dec 06 16:17:38 2020

               ?_EUSART_SetRxInterruptHandler 0020                                             _t 005F  
            __end_of_TMR5_SetInterruptHandler 1019                                    i1_WriteI2C 0805  
                                          l30 17FF                                            l33 17C7  
                                          l42 17E9                                            l35 17CC  
                                          l47 17FD                                            _nr 00D4  
                         ___wmul@multiplicand 0022                              i1___wmul@product 0074  
                           ??_TMR5_WriteTimer 0072                   __size_of_PWM6_LoadDutyValue 0019  
                           sendMessage@buffer 0025                                _update_menuLCD 03E1  
                                         l128 167E                                           l190 1FD2  
                                         l415 120E                                           l255 103F  
                                         l184 124C                                           l531 1110  
                                         l187 1FFF                                           l445 100F  
                                         l720 1075                                           l801 130A  
                                         l803 130E                                           l643 122D  
                                         l804 1315                                           l732 1FB4  
                                         l652 1FAA                                           l900 13AA  
                                         l646 1021                                           l807 1084  
                                         l735 1FB0                                           l912 0804  
                                         l833 1067                                           l729 1FA4  
                                         l905 140C                                           l649 1FA7  
                                         l690 1059                                           l906 1416  
                                         l738 1FB8                                           l827 1FF6  
                                         l915 1006                                           l932 1FE4  
                                         l676 1018                                           l909 1431  
                                         l693 1129                                           l929 1FED  
                                         l890 1F9E                                           l884 1403  
                                         _PR2 028D                               _timer1ReloadVal 00E3  
                     __size_of_PMD_Initialize 0008                               _TMR2_Initialize 1068  
                                         wreg 0009                                  ?_EUSART_Read 0070  
                                 ?_LCDsend2x4 0022                            _setTimer5ReloadVal 1019  
                             __end_of_LCDchar 102B                                          l1301 0A85  
                                        l1310 102A                                          l1304 0931  
                                        l2113 1579                                          l1307 07FF  
                                        l2123 1504                                          l1180 179F  
                                        l1332 1FA1                                          l1316 1194  
                                        l2300 126B                                          l1181 17A1  
                                        l1270 09D4                                          l1430 07EE  
                                        l1271 09D6                                          l1511 11D0  
                                        l1335 1FAD                                          l1184 17A5  
                                        l1168 1764                                          l1432 07D2  
                                        l1169 1766                                          l1505 12F1  
                                        l1329 14CF                                          l1514 135F  
                                        l1522 12AC                                          l1362 050A  
                                        l1435 07F7                                          l1371 0510  
                                        l1508 115E                                          l1532 08BB  
                                        l1540 163B                                          l1380 05C2  
                                        l1285 0A26                                          l1525 1384  
                                        l1365 04C6                                          l1461 170B  
                                        l1294 0A66                                          l1550 149A  
                                        l1446 0990                                          l1438 0932  
                                        l1606 02D0                                          l1519 15B8  
                                        l1359 048F                                          l1471 1752  
                                        l1560 13D5                                          l5000 0741  
                                        l1368 04F5                                          l1297 0A7C  
                                        l1529 08B7                                          l1537 1179  
                                        l1545 16C2                                          l1298 0A7E  
                                        l5002 0746                                          l1802 061A  
                                        l5010 0782                                          l1458 09B1  
                                        l1474 16C3                                          l1491 15D7  
                                        l5100 1675                                          l5020 12D3  
                                        l5004 076E                                          l1820 06CD  
                                        l5012 0796                                          l1396 05FC  
                                        l1484 170A                                          l1557 153C  
                                        l5110 1FF7                                          l5102 1677  
                                        l5022 12DE                                          l1582 0B77  
                                        l2294 10CB                                          l5006 0775  
                                        l1487 15B9                                          l5200 13F6  
                                        l5112 1FFA                                          l5104 1679  
                                        l5120 1054                                          l5024 12E3  
                                        l6000 085E                                          l1568 0C74  
                                        l5008 0779                                          l1496 15F9  
                                        l1841 1277                                          l5122 10FA  
                                        l5210 1401                                          l5202 13F7  
                                        l5114 1FFB                                          l5106 167B  
                                        l5130 1212                                          l5018 12CF  
                                        l6010 08AF                                          l6002 0867  
                                        l1843 128B                                          l5300 178C  
                                        l5124 110C                                          l5204 13FC  
                                        l5116 1FFE                                          l5060 163C  
                                        l5108 1FCB                                          l5140 1221  
                                        l5132 1214                                          l6004 0871  
                                        l6012 08B3                                          l6020 1175  
                                        l6100 0BD1                                          l1837 079A  
                                        l5302 1790                                          l5126 110E  
                                        l5206 13FE                                          l5070 164A  
                                        l5062 1642                                          l5118 104D  
                                        l5150 106C                                          l5142 1222  
                                        l5134 1216                                          l5230 1FA8  
                                        l6006 0877                                          l6014 115F  
                                        l6022 15FA                                          l6030 167F  
                                        l6102 0BDE                                          l1855 1465  
                                        l4600 17AB                                          l5208 1400  
                                        l5080 1655                                          l5072 164C  
                                        l5064 1644                                          l5160 11F3  
                                        l5152 106F                                          l5144 122A  
                                        l5136 1218                                          l5128 120F  
                                        l6200 0B67                                          l6008 08A8  
                                        l6016 116A                                          l6024 1621  
                                        l6040 16A8                                          l6032 168F  
                                        l6120 0C20                                          l6104 0BE9  
                                        l5400 049F                                          l4610 17C5  
                                        l5090 1669                                          l5082 1661  
                                        l5074 164F                                          l5066 1646  
                                        l5170 1202                                          l5162 11F5  
                                        l5154 1070                                          l5146 1068  
                                        l5138 121F                                          l5226 1019  
                                        l5250 107A                                          l6202 0B73  
                                        l6018 1170                                          l6026 162C  
                                        l6042 16B9                                          l6034 1695  
                                        l6050 1477                                          l6130 0C4C  
                                        l6122 0C26                                          l6114 0BEF  
                                        l6106 0BE9                                          l5410 04D1  
                                        l5402 04A5                                          l6210 125F  
                                        l4620 17DE                                          l4612 17D1  
                                        l5180 1065                                          l5092 166B  
                                        l5084 1663                                          l5076 1651  
                                        l5068 1648                                          l5172 1203  
                                        l5164 11F7                                          l5156 1072  
                                        l5148 106B                                          l5228 1FA5  
                                        l5260 1082                                          l5252 107E  
                                        l6140 0A86                                          l6028 1630  
                                        l6036 169B                                          l6044 16BE  
                                        l6052 147D                                          l6060 1505  
                                        l6124 0C31                                          l6116 0C0D  
                                        l6108 0BED                                          l6132 0C51  
                                        l4700 10BC                                          l5420 0503  
                                        l5412 04EA                                          l5404 04AA  
                                        l6204 124F                                          l6300 01D0  
                                        l4622 17EE                                          l4606 17B0  
                                        l5190 13ED                                          l5182 13D6  
                                        l5094 166E                                          l5086 1665  
                                        l5078 1653                                          l5174 120B  
                                        l5166 11F9                                          l5158 11F0  
                                        l5246 1FA2                                          l4630 1406  
                                        l5254 107F                                          l4710 126C  
                                        l6142 0A8E                                          l6038 16A1  
                                        l6054 1484                                          l6046 1466  
                                        l6070 1528                                          l6062 150F  
                                        l6134 0C5F                                          l6126 0C36  
                                        l6118 0C1C                                          l4702 10C2  
                                        l5422 0506                                          l5414 04F2  
                                        l5406 04AF                                          l5270 1385  
                                        l6206 1254                                          l6310 0210  
                                        l6302 01DC                                          l4608 17BA  
                                        l5192 13EF                                          l5184 13D8  
                                        l5176 105A                                          l5096 1670  
                                        l5088 1667                                          l5168 1200  
                                        l4640 142B                                          l4632 1411  
                                        l5600 11B5                                          l5256 1080  
                                        l5248 1076                                          l4720 1287  
                                        l4712 126F                                          l6160 0AE0  
                                        l6152 0AB9                                          l6144 0A98  
                                        l6056 1491                                          l6048 1471  
                                        l6072 152F                                          l6064 1516  
                                        l6080 13CA                                          l6136 0C64  
                                        l6128 0C4A                                          l4704 10C8  
                                        l5440 053D                                          l5416 04FA  
                                        l5408 04B4                                          l5432 0510  
                                        l5280 13A1                                          l5272 138B  
                                        l6208 125B                                          l6400 034B  
                                        l6320 024C                                          l6312 021D  
                                        l6304 01E9                               __end_of_LCDinit 0932  
                                        l4618 17D3                                          l5290 1755  
                                        l4650 09C5                                          l5194 13F1  
                                        l5186 13E0                                          l5178 105D  
                                        l5098 1672                                          l4802 1007  
                                        l4642 142C                                          l4634 1417  
                                        l5602 11C5                                          l5610 1447  
                                        l5258 1081                                          l4714 1273  
                                        l6170 0AF7                                          l6162 0AE4  
                                        l6154 0ACE                                          l6146 0A9F  
                                        l6058 1496                                          l6074 1533  
                                        l6066 151A                                          l6090 0B9F  
                                        l6138 0C70                                          l6082 0B78  
                                        l4730 1549                                          l4706 10CA  
                                        l5450 0572                                          l5442 0545  
                                        l5434 0514                                          l5418 04FC  
                                        l5370 0429                                          l5282 13A3  
                                        l5274 1395                                          l6410 0359  
                                        l6402 034B                                          l6330 025C  
                                        l6322 0257                                          l6314 022A  
                                        l6306 01F6                                          l5292 1755  
                                        l4660 0A02                                          l4652 09DA  
                                        l5196 13F3                                          l5188 13EA  
                                        l5620 1231                                          l4636 1421  
                                        l4644 142F                                          l4628 1406  
                                        l5612 144E                                          l5604 1432  
                                        l4716 127C                                          l6180 0B08  
                                        l6172 0AFF                                          l6164 0AE8  
                                        l6156 0AD6                                          l6148 0AB4  
                                        l6076 1538                                          l6068 151F  
                                        l6092 0BB1                                          l6084 0B80  
                                        l4820 1111                                          l4900 14B9  
                                        l4740 1569                                          l4732 154E  
                                        l4724 153D                                          l5460 0594  
                                        l5452 057A                                          l5444 0549  
                                        l5436 051A                                          l5380 044B  
                                        l5372 042D                                          l5364 03E1  
                                        l5284 13A6                                          l5276 139A  
                                        l5268 1385                                          l6420 0380  
                                        l6412 035F                                          l6404 034E  
                                        l6340 0265                                          l6332 025D  
                                        l6324 0259                                          l6316 0236  
                                        l6308 0203                                          l6260 00A1  
                                        l5294 176A                                          l4670 0A3C  
                                        l4662 0A11                                          l4654 09E9  
                                        l4646 09B4                                          l5198 13F4  
                                        l5630 1240                                          l5622 1234  
                                        l4638 1425                                          l5614 145D  
                                        l5606 143B                                          l4718 1281  
                                        l6190 0B48                                          l6182 0B2E  
                                        l6174 0B07                                          l6166 0AEC  
                                        l6158 0ADC                                          l6078 13AB  
                                        l6094 0BBD                                          l6086 0B8B  
                                        l4822 1FB5                                          l4902 14BF  
                                        l4742 156A                                          l4734 1552  
                                        l4726 1540                                          l4750 14D0  
                                        l4910 060A                                          l5470 05B1  
                                        l5462 059A                                          l5454 0581  
                                        l5446 054F                                          l5438 052D  
                                        l5390 0471                                          l5382 0453  
                                        l5374 0435                                          l5366 03E8  
                                        l5286 13A8                                          l5278 13A0  
                                        l6430 039D                                          l6422 0383  
                                        l6414 0364                                          l6406 0354  
                                        l6350 0276                                          l6342 0266  
                                        l6334 0260                                          l6326 025A  
                                        l6318 0241                                          l6270 00CD  
                                        l6262 00AB                                          l5296 1779  
                                        l4680 0A6D                                          l4672 0A42  
                                        l4664 0A17                                          l4656 09ED  
                                        l4648 09B9                                          l5800 08D5  
                                        l4824 1FEE                                          l5632 1243  
                                        l5624 1237                                          l5608 143F  
                                        l6192 0B4C                                          l6184 0B32  
                                        l6168 0AF7                                          l6096 0BCC  
                                        l6088 0B9B                                          l4904 1FAB  
                                        l4744 156F                                          l4736 1556  
                                        l4728 1546                                          l4760 14E7  
                                        l4752 14D7                                          l4920 061F  
                                        l4912 0611                                          l5480 05D0  
                                        l5472 05B6                                          l5464 059F  
                                        l5456 0585                                          l5448 0562  
                                        l5392 0477                                          l5384 0459  
                                        l5376 043B                                          l5368 040C  
                                        l5640 1039                                          l6440 03B4  
                                        l6432 03A0                                          l6424 038D  
                                        l6416 036A                                          l6408 0357  
                                        l6360 028E                                          l6352 0279  
                                        l6344 0269                                          l6336 0262  
                                        l6328 025B                                          l6272 00CE  
                                        l6264 00AE                                          l5298 177D  
                                        l4682 0A82                                          l4674 0A51  
                                        l4666 0A26                                          l4658 09FC  
                                        l5810 08F9                                          l5802 08E1  
                                        l4826 1FDC                                          l4818 1010  
                                        l5634 1246                                          l5626 123A  
                                        l5618 122E                                          l6194 0B59  
                                        l6186 0B38                                          l5570 07A2  
                                        l4738 1565                                          l4746 1575  
                                        l4762 14F1                                          l4754 14DA  
                                        l4930 0657                                          l4922 0628  
                                        l4914 0616                                          l4906 05FF  
                                        l5490 05EC                                          l5482 05D5  
                                        l5474 05BD                                          l5466 05A5  
                                        l5458 058D                                          l5394 0480  
                                        l5386 0462                                          l5378 0444  
                                        l5642 103A                                          l6450 03CE  
                                        l6442 03B8                                          l6434 03A3  
                                        l6418 037A                                          l6426 0391  
                                        l6370 02B3                                          l6362 0294  
                                        l6354 027A                                          l6346 026A  
                                        l6338 0263                                          l6290 011E  
                                        l6282 00E1                                          l6274 00DB  
                                        l6266 00C9                                          l4676 0A57  
                                        l4668 0A2D                                          l5820 091B  
                                        l5812 08FD                                          l5804 08E5  
                                        l4828 1FE5                                          l5636 1249  
                                        l5628 123D                                          l6188 0B43  
                                        l6196 0B5C                                          l5572 07A8  
                                        l5580 07B9                                          l4692 1FAE  
                                        l4764 14F5                                          l4756 14DF  
                                        l4940 0686                                          l4932 065B  
                                        l4924 0634                                          l4916 061B  
                                        l4908 0604                                          l5492 05F1  
                                        l5484 05DA                                          l5468 05AA  
                                        l5476 05C3                                          l5396 0487  
                                        l5388 0469                                          l5900 173C  
                                        l5644 103C                                          l6452 03DB  
                                        l6444 03BF                                          l6436 03A9  
                                        l6428 0398                                          l6372 02BA  
                                        l6364 02A0                                          l6356 0282  
                                        l6380 02D0                                          l6348 026B  
                                        l6284 00FD                                          l6276 00DD  
                                        l6292 0120                                          l6268 00CB  
                                        l4598 17A8                                          l4678 0A66  
                                        l5822 0921                                          l5814 0909  
                                        l5806 08ED                                          l5670 1FB1  
                                        l4694 1002                                          l6198 0B63  
                                        l5590 07EA                                          l5582 07C0  
                                        l5574 07AD                                          l4766 14FA  
                                        l4758 14E3                                          l4942 068A  
                                        l4926 0637                                          l5494 05F8  
                                        l5486 05E1                                          l5478 05CA  
                                        l5398 0498                                          l5830 0938  
                                        l5910 16C3                                          l5902 1744  
                                        l5638 1034                                          l6446 03C3  
                                        l6438 03AD                                          l6390 02E6  
                                        l6382 02D8                                          l6374 02C6  
                                        l6366 02A3                                          l6358 0288  
                                        l6294 0126                                          l6286 0101  
                                        l5680 1303                                          l5672 12F2  
                                        l5824 0927                                          l5816 090D  
                                        l5808 08F1                                          l5592 1146  
                                        l5584 07CD                                          l5576 07B2  
                                        l5568 079B                                          l4696 1024  
                                        l4768 1500                                          l4960 06BD  
                                        l4944 068E                                          l4928 0648  
                                        l4936 0667                                          l5488 05E7  
                                        l5840 094C                                          l5832 093B  
                                        l5920 16D8                                          l5912 16C9  
                                        l5904 1747                                          l6448 03CA  
                                        l6392 0304                                          l6384 02E4  
                                        l6368 02AE                                          l6376 02C9  
                                        l6296 012B                                          l6288 0110  
                                        l5690 130F                                          l5682 1304  
                                        l5674 12FA                                          l5818 0915  
                                        l5826 1F9F                                          l5594 114E  
                                        l5586 07E0                                          l5578 07B5  
                                        l4882 07FA                                          l4890 149B  
                                        l4698 10BB                                          l4970 06E4  
                                        l4962 06C3                                          l4954 0699  
                                        l4946 0692                                          l4938 067F  
                                        l5850 0969                                          l5842 0952  
                                        l5834 093D                                          l5930 16F1  
                                        l5922 16DB                                          l5914 16CC  
                                        l5906 174C                                          l6394 0320  
                                        l6298 01C4                                          l5684 1305  
                                        l5676 12FE                                          l5692 1F9C  
                                        l5596 114F                                          l5588 07E3  
                                        l4884 117A                                          l4892 149C  
                                        l4980 06FF                                          l4972 06E8  
                                        l4964 06C9                                          l4948 0697  
                                        l5860 0987                                          l5852 0970  
                                        l5844 0959                                          l5836 0941  
                                        l5828 0932                                          l5940 1707  
                                        l5924 16E1                                          l5932 16F4  
                                        l5916 16CE                                          l5908 174F  
                                        l6396 0332                                          l5686 1307  
                                        l5678 1302                                          l5598 1153  
                                        l4886 117B                                          l4894 14A2  
                                        l4990 0722                                          l4982 0706  
                                        l4974 06EE                                          l4966 06D8  
                                        l4958 06B3                                          l5870 09A3  
                                        l5862 0989                                          l5854 0972  
                                        l5846 095B                                          l5838 0947  
                                        l5934 16FC                                          l5926 16E7  
                                        l5918 16D2                                          l5950 15C8  
                                        l5942 15B9                                          l6398 033F  
                                        l5688 1309                                          l5792 08BC  
                                        l4888 117F                                          l4896 14A9  
                                        l4992 0726                                          l4984 070A  
                                        l4976 06F5                                          l4968 06E1  
                                        l5872 09A6                                          l5856 0979  
                                        l5848 0962                                          l5864 0990  
                                        l5936 16FF                                          l5928 16E8  
                                        l5880 1711                                          l5696 0801  
                                        l5960 15EB                                          l5952 15CE  
                                        l5944 15BF                                          l5794 08C5  
                                        l5970 1354                                          l4898 14B3  
                                        l4994 0730                                          l4978 06F9  
                                        l4986 0715                                          l5874 09AB  
                                        l5866 0999                                          l5858 0980  
                                        l5938 1704                                          l5890 1723  
                                        l5882 1714                                          l5962 15EE  
                                        l5954 15D3                                          l5946 15C2  
                                        l5796 08C9                                          l5980 159C  
                                        l5972 157A                                          l4996 0736  
                                        l4988 071B                                          l5876 09AE  
                                        l5868 099C                                          l5892 1729  
                                        l5884 1716                                          l5964 15F3  
                                        l5956 15E0                                          l5948 15C4  
                                        l5798 08D1                                          l5982 15A3  
                                        l5974 158A                                          l5990 12A1  
                                        l4998 073D                                          l5894 172F  
                                        l5886 171A                                          l5878 170B  
                                        l5966 15F6                                          l5958 15E3  
                                        l5968 133B                                          l5984 15AF  
                                        l5976 1590                                          l5992 1360  
                                        l5896 1730                                          l5888 1720  
                                        _ALAF 006A                                          l5978 1596  
                                        l5986 15B4                                          l5994 1379  
                                        l5898 1739                                          l5988 128C  
                                        l5996 0850                                          l5998 085A  
                             __end_of_LCDsend 17A6                                          STR_1 1827  
                                        STR_2 1827                                          STR_3 1840  
                                        STR_4 1840                                          STR_5 1847  
                                        STR_6 1847                                          STR_7 184C  
                                        _LATA 0016                                          _LATB 0017  
                             __end_of_INT_ISR 1FBF                                          _LATC 0018  
                                        _LATD 0019                                          _LATE 001A  
                                        u3400 17E9                                          u4200 0634  
                                        u3401 17E8                                          u4201 0633  
                                        u3410 17EE                                          u4210 0667  
                                        _T2PR 028D                                          u3411 17ED  
                                        u4211 0666                                          u3420 17FD  
                                        u3340 17AF                                          u3500 09FC  
                                        u5100 07B2                                          u4300 06FF  
                                        u4220 068E                                          u3421 17FC  
                                        u3341 17AE                                          u3501 09FB  
                                        u5101 07B1                                          u4301 06FE  
                                        u4221 068D                                          u3350 17BA  
                                        u3510 0A11                                          u3430 140C  
                                        u5110 07C0                                          u4310 0714  
                                        u4230 06B2                                          u3351 17B9  
                                        u3511 0A10                                          u3431 140B  
                                        u5111 07BF                                          u4311 0713  
                                        u4231 06B1                                          u3360 17C5  
                                        u3520 0A26                                          u3440 1411  
                                        u6000 150F                                          u5120 07CD  
                                        u4160 1194                                          u4320 071B  
                                        u4240 06BD                                          u3361 17C4  
                                        u3521 0A25                                          u3441 1410  
                                        u6001 150E                                          u5121 07CC  
                                        u4161 1193                                          u4321 071A  
                                        u4241 06BC                                          u3370 17CC  
                                        u3530 0A3C                                          u3450 142B  
                                        u6010 1516                                          u5130 07E0  
                                        u4170 14A9                                          u3610 10C2  
                                        u4330 0730                                          u4250 06C3  
                                        u3371 17CB                                          u3531 0A3B  
                                        u3451 142A                                          u6011 1515  
                                        u5131 07DF                                          u4171 14A8  
                                        u3611 10C1                                          u4331 072F  
                                        u4251 06C2                                          u4235 06AE  
                                        u5220 130E                                          u3380 17D1  
                                        u4500 1779                                          u3540 0A51  
                                        u6020 1528                                          u6100 0C5F  
                                        u5140 07EA                                          u4180 14BF  
                                        u3620 10C8                                          u4340 0736  
                                        u4260 06C9                                          u5221 130D  
                                        u3381 17D0                                          u4501 1778  
                                        u3541 0A50                                          u6021 1527  
                                        u6101 0C5E                                          u5141 07E9  
                                        u5125 07C9                                          u4181 14BE  
                                        u3621 10C7                                          u4341 0735  
                                        u4261 06C8                                          u3390 17DE  
                                        u4510 178C                                          u3550 0A66  
                                        u3470 09D4                                          u5150 143F  
                                        u3630 1273                                          u6110 0A8E  
                                        u6030 152F                                          u5070 07A2  
                                        u3710 1565                                          u4350 0782  
                                        u4270 06D8                                          u4190 060A  
                                        u3391 17DD                                          u4511 178B  
                                        u3551 0A65                                          u3471 09D3  
                                        u5151 143E                                          u3631 1272  
                                        u6111 0A8D                                          u6031 152E  
                                        u5135 07DC                                          u5071 07A1  
                                        u3711 1564                                          u4351 0781  
                                        u4271 06D7                                          u4191 0609  
                                        u4520 179F                                          u3560 0A7C  
                                        u3480 09DA                                          u6120 0A9F  
                                        u6040 0B80                                          u5080 07A8  
                                        u4360 0796                                          u4280 06E8  
                                        u4521 179E                                          u3561 0A7B  
                                        u3481 09D9                                          u3465 09BC  
                                        u6121 0A9E                                          u6105 0C5B  
                                        u6041 0B7F                                          u5081 07A7  
                                        u3705 1557                                          u4361 0795  
                                        u4281 06E7                                          u4530 17A5  
                                        u3570 0A82                                          u3490 09E9  
                                        u4370 12F1                                          u6130 0AB4  
                                        u6050 0B9F                                          u5090 07AD  
                                        u3730 1575                                          u4290 06EE  
                                        u4531 17A4                                          u3571 0A81  
                                        u3491 09E8                                          u4371 12F0  
                                        u6131 0AB3                                          u6051 0B9E  
                                        u5091 07AC                                          u3731 1574  
                                        u3715 1561                                          u4291 06ED  
                                        u4275 06D4                                          u5180 145D  
                                        u3660 1287                                          u6140 0ACE  
                                        u6060 0BBD                                          u3740 14D7  
                                        u4700 0487                                          u4460 138B  
                                        _PMD0 0796                                          u5181 145C  
                                        u5165 1448                                          u3661 1286  
                                        u3645 1278                                          u6141 0ACD  
                                        u6061 0BBC                                          u3725 156B  
                                        u3741 14D6                                          u4701 0486  
                                        u4461 138A                                          _PMD1 0797  
                                        i1l22 113D                                          i1l30 084F  
                                        u6150 0B38                                          u6070 0BCC  
                                        u3670 1546                                          u4710 049F  
                                        u4470 13A0                                          u5190 1039  
                                        _PMD2 0798                                          i1l23 113E  
                                        u4375 12ED                                          u5175 144F  
                                        u3655 127D                                          u6151 0B37  
                                        u6135 0AB0                                          u6071 0BCB  
                                        u3671 1545                                          u4711 049E  
                                        u4471 139F                                          u5191 1038  
                                        _PMD3 0799                                          u4480 1764  
                                        u6160 0B59                                          u6080 0C26  
                                        u3760 14E7                                          u4800 054F  
                                        u4720 04A5                                          u4640 03E8  
                                        u5600 0970                                          u6400 028E  
                                        _PMD4 079A                                          i1l33 0821  
                                        u4481 1763                                          u6161 0B58  
                                        u6081 0C25                                          u6065 0BB9  
                                        u3905 1122                                          u3761 14E6  
                                        u4801 054E                                          u4721 04A4  
                                        u4641 03E7                                          u5601 096F  
                                        u6401 028D                                          _PMD5 079B  
                                        i1l26 1143                                          i1l42 083F  
                                        u4490 176A                                          u6170 0B63  
                                        u6090 0C4A                                          u3690 1556  
                                        u3770 14F1                                          u4810 0581  
                                        u4730 04AA                                          u4650 043B  
                                        u5610 0980                                          u6410 0294  
                                        u6330 00DB                                          i1l35 0826  
                                        u4491 1769                                          u6171 0B62  
                                        u6091 0C49                                          u6075 0BC8  
                                        u3691 1555                                          u3771 14F0  
                                        u3755 14DB                                          u4811 0580  
                                        u4731 04A9                                          u4651 043A  
                                        u5611 097F                                          u6411 0293  
                                        u6331 00DA                                          u4900 05E7  
                                        u4820 0594                                          u4740 04AF  
                                        u4660 044B                                          u5620 0987  
                                        u5540 0938                                          u5700 174C  
                                        u6180 126B                                          u6500 0364  
                                        u6420 02BA                                          u6340 0110  
                                        u6165 0B55                                          u3685 154A  
                                        u4901 05E6                                          u4821 0593  
                                        u4741 04AE                                          u4661 044A  
                                        u5621 0986                                          u5541 0937  
                                        u5701 174B                                          u6181 126A  
                                        u6501 0363                                          u6421 02B9  
                                        u6341 010F                                          u3790 1500  
                                        u4910 05F8                                          u4830 059A  
                                        u4750 04B4                                          u4670 0459  
                                        u5630 09A3                                          u5550 0941  
                                        u5710 16C9                                          u6510 037A  
                                        u6430 02CF                                          u6350 011E  
                                        i1l47 084E                                          u6095 0C46  
                                        u3791 14FF                                          u3775 14ED  
                                        u4911 05F7                                          u4831 0599  
                                        u4751 04B3                                          u4671 0458  
                                        u5631 09A2                                          u5551 0940  
                                        u5711 16C8                                          u6511 0379  
                                        u6431 02CE                                          u6351 011D  
                                        u4840 05A5                                          u4760 04F2  
                                        u4680 0469                                          u5640 09AB  
                                        u5560 0947                                          u5720 16D2  
                                        u5800 15EB                                          u6520 0398  
                                        u6440 02D8                                          u6360 0126  
                                        u3785 14F6                                          u4841 05A4  
                                        u4761 04F1                                          u4681 0468  
                                        u5641 09AA                                          u5561 0946  
                                        u5721 16D1                                          u5801 15EA  
                                        u6521 0397                                          u6441 02D7  
                                        u6361 0125                                          u6345 010C  
                                        u4850 05B1                                          u4770 04FA  
                                        u4690 0477                                          u5570 0952  
                                        u5730 16D8                                          u5650 1711  
                                        u5810 15F3                                          u6530 039D  
                                        u6450 02E4                                          u6370 012B  
                                        u4851 05B0                                          u4771 04F9  
                                        u4691 0476                                          u5571 0951  
                                        u5731 16D7                                          u5651 1710  
                                        u5811 15F2                                          u6531 039C  
                                        u6515 0376                                          u6451 02E3  
                                        u6371 012A                                          u5820 1590  
                                        u5900 116A                                          u4860 05BD  
                                        u4780 050F                                          u5580 0959  
                                        u5740 16E7                                          u5660 171A  
                                        u6540 03A9                                          u6460 0304  
                                        u6380 0273                                          u5821 158F  
                                        u5901 1169                                          u4861 05BC  
                                        u4781 050E                                          u5581 0958  
                                        u5741 16E6                                          u5661 1719  
                                        u6541 03A8                                          u6461 0303  
                                        _TALA 00ED                                          u5830 1596  
                                        u5910 1628                                          u4870 05CA  
                                        u4790 051A                                          u5590 0969  
                                        u5750 16FC                                          u5670 1720  
                                        u6550 03B4                                          u6470 033F  
                                        u6390 0288                                          u5831 1595  
                                        u5911 1626                                          u4871 05C9  
                                        u4791 0519                                          u5591 0968  
                                        u5751 16FB                                          u5671 171F  
                                        u6607 15DB                                          u6551 03B3  
                                        u6471 033E                                          u6391 0287  
                                        u5840 159C                                          u5920 1629  
                                        u4880 05D0                                          u5760 1704  
                                        u5680 172F                                          u6560 03BF  
                                        u6480 0354                                          u5841 159B  
                                        u4881 05CF                                          u5761 1703  
                                        u6617 1734                                          u5681 172E  
                                        u6561 03BE                                          u6481 0353  
                                        u5850 15A3                                          u5930 1695  
                                        u4890 05E1                                          u5690 1744  
                                        u5770 15BF                                          u6570 03CA  
                                        u6490 035F                                          u6707 08F6  
                                        u5851 15A2                                          u5931 1694  
                                        u4891 05E0                                          u6627 16EC  
                                        u5691 1743                                          u5771 15BE  
                                        u6571 03C9                                          u6491 035E  
                                        u5860 085A                                          u5940 169B  
                                        u5780 15C8                                          u6580 03DB  
                                        u6717 08FE                                          u5861 0859  
                                        u5941 169A                                          u6637 0994  
                                        u5781 15C7                                          u6581 03DA  
                                        u5870 0867                                          u5950 16A1  
                                        u5790 15CE                                          u6727 090A  
                                        u5871 0866                                          u5951 16A0  
                                        u6647 07F2                                          u5791 15CD  
                                        u5880 0871                                          u5960 16A8  
                                        u6737 0912                                          u6657 08C0  
                                        u5881 0870                                          u5961 16A7  
                                        u6585 03D7                                          _NREG 006F  
                                        u5890 089E                                          u5970 1477  
                                        u6747 092E                                          u6667 08CE  
                                        u5971 1476                                          u5980 147D  
                                        u6757 0A83                                          u6677 08D6  
                                        u5981 147C                                          u6597 038E  
                                        u5990 1484                                          u6687 08E2  
                                        u5895 089A                                          u5991 1483  
                                        u6697 08EA                                          _PMON 00EE  
                                        _TMR2 028C                                          _WPUA 0F39  
                                        _WPUB 0F44                                          _WPUC 0F4F  
                                        _WPUD 0F5A                                          _WPUE 0F65  
                                 main@notInit 00B7                                          _main 00A1  
                                        _temp 0069                                          fsr0h 0005  
                                        fsr1h 0007                                          indf0 0000  
                                        fsr0l 0004                                          indf1 0001  
                                        fsr1l 0006                                          btemp 007E  
                         ?_setTimer5ReloadVal 0020           __end_of_INT_DefaultInterruptHandler 1F9B  
                 _INT_DefaultInterruptHandler 1F9A                                          start 005E  
                             _timer5ReloadVal 00DF                                cmd_dtl@tempAux 0032  
             __end_of_INT_SetInterruptHandler 1FF7                    ??_TMR1_SetInterruptHandler 0022  
                             __end_of_ReadI2C 1144                     __size_of_DATAEE_WriteByte 0024  
                      __end_of_update_menuLCD 05FD                                 ?_EUSART_Write 0070  
              __size_of_OSCILLATOR_Initialize 0009                 __end_of_OSCILLATOR_Initialize 2000  
                                       _ADACQ 009D                                         _ADCAP 009B  
                                       _ADACT 0099                      __end_of_i2c1_driver_open 1040  
                                       ?_main 0070                                         _ADCLK 0098  
                                       _ADCNT 010C                                         _ADPCH 009E  
                                       _ADREF 009A                                         _ADPRE 009C  
                                       _ADRPT 010D                          ??_setTimer5ReloadVal 0022  
                                       _T1CLK 0211                                         _T1CON 020E  
                                       _T2CON 028E                                         _T5CLK 021D  
                                       _T2HLT 028F                                         _T5CON 021A  
                             __end_of___lwdiv 157A                                         _T2TMR 028C  
                                       _T2RST 0291                               __end_of___lwmod 1505  
                                       i1l442 10E2                                         i1l371 0026  
                                       i1l429 1095                                         i1l373 0035  
                                       i1l543 10AF                                         i1l375 0041  
                                       i1l448 1F9B                                         i1l384 005C  
                                       i1l368 0013                                         i1l801 11A8  
                                       i1l377 004D                                         i1l546 10B8  
                                       i1l378 005C                                         i1l803 11AC  
                                       i1l379 0056                                         i1l820 1FBE  
                                       i1l804 11B2                                         i1l660 10A6  
                                       i1l830 1F9A                                         i1l824 104C  
                                       i1l921 133A                                         i1l673 10F9  
                                       i1l926 12CE                                         i1l918 1338  
                                       i1l679 0800                                         _OSCEN 0891  
                                       _TMR1H 020D                                         _TMR1L 020C  
                                       _TMR5H 0219                                         _TMR5L 0218  
                                       _TRISA 0011                                         _TRISB 0012  
                                       _TRISC 0013                                         _TRISD 0014  
                                       _TRISE 0015                                         _WPUC3 7A7B  
                                       _WPUC4 7A7C                                         _RXPPS 0ECB  
                             __end_of_cmd_dac 16C3                               __end_of_editLum 170B  
                             __end_of_cmd_dtl 149B                               _PWM6_Initialize 104D  
                             __end_of_cmd_mta 117A                               __end_of_cmd_mmp 08BC  
                             __end_of_cmd_trc 0C75                           ___lmul@multiplicand 0024  
                             __end_of_cmd_rtl 12AD                               __end_of_cmd_tri 0B78  
                            __end_of_TMR1_ISR 10E3                              __end_of_TMR5_ISR 10FA  
                            __end_of_S1button 07F8                               _DATAEE_ReadByte 1076  
                                       _getch 0801                               __end_of_dpowers 1840  
                          __size_of_TMR2_Stop 0003                                   ?_TMR2_Start 0070  
                                       _iread 0066                               __end_of_isdigit 10CC  
                                       _putch 1000                                         main@c 00BD  
                                       main@i 00B9                                         main@n 00BE  
                                       _tsttc 0D80                       __end_of_TMR1_Initialize 120F  
                                       pclath 000A                              __end_ofi1___wmul 11F0  
                                       status 0003                           i1___wmul@multiplier 0070  
                                       wtemp0 007E                               __end_of_sprintf 079B  
                      ??_PWM_Output_D4_Enable 0020                               _TMR2_StartTimer 1FB1  
                             _TMR1_WriteTimer 1085                               _TMR5_Initialize 120F  
                             __initialization 0060                                  __end_of_main 03E1  
                                 ?i1_WriteI2C 0070                           __size_of_LCDsend2x4 00D4  
                              ??_EUSART_Write 0020                               ?_update_menuLCD 0070  
                     __end_of_TMR2_Initialize 1076                   ?_INTERRUPT_InterruptManager 0070  
              ??_EUSART_SetRxInterruptHandler 0022                                        ??_main 005C  
                             update_menuLCD@l 0055                                  ?_sendMessage 0023  
                    _TMR5_SetInterruptHandler 1010                     __size_of_sendERRORMessage 001E  
                          __size_of_Clock_ISR 010B              differenceBetweenTimePeriod@start 0020  
                                   ??_LCDchar 0028                                     ??_LCDinit 0028  
                                   ??_LCDsend 0022                                     ??_INT_ISR 0070  
                  __end_ofi1_DATAEE_WriteByte 11B3                                        _ADACCH 0091  
                                      _ADACCL 0090                                        ?_getch 0070  
                                      _ADCON0 0093                                        _ADCON1 0094  
                                      _ADCON2 0095                                        _ADCON3 0096  
                                      _ADERRH 0117                                        _ADERRL 0116  
                                      _ADLTHH 010F                                        _ADLTHL 010E  
                                      _ADRESH 008D                                        _ADRESL 008C  
                                      _ADSTAT 0097                                        _ADUTHH 0111  
                                      _ADUTHL 0110                              __end_of_WriteI2C 1800  
                                      _ANSELA 0F38                                        ?_putch 0070  
                                      _ANSELB 0F43                                        _ANSELC 0F4E  
                                      _ANSELD 0F59                                        _ANSELE 0F64  
                  __end_of_EUSART_is_rx_ready 1F9F                                        _T1GATE 0210  
                                      _T1GCON 020F                                        ?_tsttc 0070  
                                      _T5GATE 021C                                        _T5GCON 021B  
                                      _RC1REG 0119                                        _RC1STA 011D  
                                      _RA6PPS 0F16                                        _RC3PPS 0F23  
                                      i1l1104 0DBC                                        i1l1105 0DBD  
                                      i1l1130 0E14                                        i1l1122 0DFF  
                     TMR1_WriteTimer@timerVal 0070                                        i1l1123 0E00  
                                      _RC4PPS 0F24                                        i1l1116 0DEE  
                                      i1l1141 0E43                                        i1l1125 0E04  
                                      i1l1117 0DF0                                        i1l1142 0E44  
                                      i1l1160 0E87                                        i1l1153 0E75  
                                      i1l1129 0E13                                        i1l1154 0E77  
                                      i1l1163 0E8C                                        i1l1092 0D8C  
                                      i1l1404 0F61                                        i1l1093 0D8D  
                                      i1l1159 0E86                                        i1l1424 0FFF  
                                      i1l1089 0D80                                        _ODCONA 0F3A  
                                      _ODCONB 0F45                                        i1l1347 0D7F  
                                      _ODCONC 0F50                                        _RC6PPS 0F26  
                                      _ODCOND 0F5B                                        _ODCONE 0F66  
                                      i1l5030 119E                                        i1l5016 1FD3  
                                      i1l5040 11A5                                        i1l5032 11A0  
                                      i1l1841 11DB                                        i1l5042 11A7  
                                      i1l5034 11A1                                        i1l5026 1195  
                                      i1l5050 11D7                                        i1l1499 1FDB  
                                      i1l1843 11EF                                        i1l5044 11AD  
                                      i1l5036 11A2                                        i1l5028 119C  
                                      i1l5220 108F                                        i1l5212 1085  
                                      i1l5052 11E0                                        i1l5038 11A3  
                                      i1l5310 0C85                                        i1l5214 108A  
                                      i1l5222 1091                                        i1l5054 11E5  
                                      i1l5046 11D1                                        i1l5320 0CC0  
                                      i1l5312 0C90                                        i1l5304 0C75  
                                      i1l5224 1093                                        i1l5216 108B  
                                      i1l5240 10A0                                        i1l5232 1096  
                                      i1l5056 11EB                                        i1l5048 11D3  
                                      i1l5330 0CFC                                        i1l5322 0CCC  
                                      i1l5314 0C9C                                        i1l5306 0C80  
                                      i1l5218 108D                                        i1l5234 109B  
                                      i1l5242 10A2                                        i1l5340 0D3A  
                                      i1l5332 0D08                                        i1l5324 0CD8  
                                      i1l5316 0CA8                                        i1l5308 0C84  
                                      i1l5244 10A4                                        i1l5236 109C  
                                      i1l5500 0EB4                                        i1l6220 000F  
                                      i1l5350 0D50                                        i1l5342 0D3B  
                                      i1l5334 0D13                                        i1l5326 0CE4  
                                      i1l5318 0CB4                                        i1l5238 109E  
                                      i1l5510 0F65                                        i1l5502 0EC3  
                                      i1l6230 002E                                        i1l6222 0017  
                                      i1l5264 1040                                        i1l5352 0D58  
                                      i1l5360 0D71                                        i1l5344 0D41  
                                      i1l5328 0CF0                                        i1l5336 0D2F  
                                      i1l5520 0F8A                                        i1l5512 0F79  
                                      i1l5504 0F4F                                        i1l6240 0051  
                                      i1l6232 0039                                        i1l6224 001B  
                                      i1l6216 0006                                        i1l5266 1047  
                                      i1l5362 0D7D                                        i1l5354 0D60  
                                      i1l5346 0D42                                        i1l5338 0D36  
                                      i1l4810 10AD                                        i1l5522 0F8E  
                                      i1l5514 0F7C                                        i1l5506 0F57  
                                      i1l5530 0FB7                                        i1l6234 003D  
                                      i1l6226 001F                                        i1l6218 000B  
                                      i1l5700 1316                                        i1l5356 0D66  
                                      i1l5348 0D48                                        i1l4812 10AE  
                                      i1l4804 10A8                                        i1l5540 0FD5  
                                      i1l5532 0FBE                                        i1l5524 0FA3  
                                      i1l5516 0F7D                                        i1l5508 0F5D  
                                      i1l6244 005A                                        i1l6236 0045  
                                      i1l6228 002A                                        i1l5710 1332  
                                      i1l5702 131D                                        i1l5358 0D6B  
                                      i1l4814 10B4                                        i1l4806 10AB  
                                      i1l4830 0D80                                        i1l5550 0FE0  
                                      i1l5542 0FD7                                        i1l5534 0FC6  
                                      i1l5526 0FA5                                        i1l5518 0F83  
                                      i1l6238 0049                                        i1l5720 12C2  
                                      i1l5712 12AD                                        i1l5704 1326  
                                      i1l4808 10AC                                        i1l4840 0DB0  
                                      i1l4832 0D91                                        i1l5560 0FF7  
                                      i1l5552 0FE7                                        i1l5544 0FD9  
                                      i1l5536 0FCC                                        i1l5528 0FAE  
                                      i1l5722 12C8                                        i1l5714 12B2  
                                      i1l5706 132B                                        i1l5650 1FB9  
                                      i1l4850 0DE2                                        i1l4842 0DC1  
                                      i1l4834 0D9C                                        i1l5562 0FF9  
                                      i1l5554 0FEC                                        i1l5538 0FD1  
                                      i1l5546 0FDC                                        i1l5724 12C9  
                                      i1l5716 12B4                                        i1l5708 1331  
                                      i1l5652 1FBB                                        i1l4684 112A  
                                      i1l4780 080E                                        i1l4772 0806  
                                      i1l4860 0E27                                        i1l4852 0DF4  
                                      i1l4844 0DCC                                        i1l4836 0DA0  
                                      i1l5556 0FF1                                        i1l5564 0FFC  
                                      i1l5548 0FDE                                        i1l5660 10F4  
                                      i1l5718 12BE                                        i1l5662 10CC  
                                      i1l4686 1134                                        i1l4782 0817  
                                      i1l4774 0809                                        i1l4870 0E57  
                                      i1l4862 0E33                                        i1l4854 0E08  
                                      i1l4846 0DD0                                        i1l4838 0DAC  
                                      i1l5566 0FFD                                        i1l5558 0FF5  
                                      i1l5654 10E3                                        i1l5664 10CE  
                                      i1l4688 1142                                        i1l4784 0820  
                                      i1l4792 082D                                        i1l4872 0E63  
                                      i1l4864 0E37                                        i1l4856 0E18  
                                      i1l4848 0DDC                                        i1l5496 0E8D  
                                      i1l5656 10E5                                        i1l5666 10D6  
                                      i1l4794 0836                                        i1l4786 082B  
                                      i1l4874 0E69                                        i1l4866 0E48  
                                      i1l4858 0E23                                        i1l5498 0EA6  
                                      i1l5658 10ED                                        i1l5668 10DD  
                                      i1l4796 0843                                        i1l4876 0E7B  
                                      i1l4868 0E53                                        _S1_ISR 1FD3  
                                      i1l4878 0E8B                                        u400_20 0DF4  
                                      u400_21 0DF3                                        u401_20 0DFF  
                                      u401_21 0DFE                                        _LCDcmd 07F8  
                                      u410_20 0E53                                        u402_20 0E04  
                                      u410_21 0E52                                        u402_21 0E03  
                                      u411_20 0E63                                        u403_20 0E08  
                                      u411_21 0E62                                        u403_21 0E07  
                                      u412_20 0E75                                        u404_20 0E13  
                                      u500_20 0FBE                                        u412_21 0E74  
                                      u404_21 0E12                                        u500_21 0FBD  
                                      u413_20 0E7B                                        u405_20 0E18  
                                      u501_20 0FC6                                        u413_21 0E7A  
                                      u405_21 0E17                                        u501_21 0FC5  
                                      u414_20 0E86                                        u406_20 0E23  
                                      u502_20 0FCC                                        u414_21 0E85  
                                      u406_21 0E22                                        u502_21 0FCB  
                                      u415_20 0E8B                                        u407_20 0E33  
                                      u503_20 0FD1                                        u415_21 0E8A  
                                      u407_21 0E32                                        u503_21 0FD0  
                                      u360_20 1142                                        u408_20 0E43  
                                      u504_20 0FE7                                        u520_20 10F4  
                                      u360_21 1141                                        u408_21 0E42  
                                      u504_21 0FE6                                        u520_21 10F3  
                                      _INTPPS 0E90                                        u440_25 11DC  
                                      u521_20 10DD                                        u409_20 0E48  
                                      u505_20 0FEC                                        u521_21 10DC  
                                      u409_21 0E47                                        u505_21 0FEB  
                                      u441_25 11E1                                        u442_20 11EB  
                                      u506_20 0FF1                                        u442_21 11EA  
                                      u506_21 0FF0                                 main@corrupted 00B8  
                                      u523_20 131D                                        u443_20 108A  
                                      u523_21 131C                                        u443_21 1089  
                                      u524_20 1331                                        u460_20 0D60  
                                      u444_20 109B                                        u380_20 080D  
                                      u620_20 000F                                        u524_21 1330  
                                      u460_21 0D5F                                        u444_21 109A  
                                      u380_21 080C                                        u620_21 000E  
                                      _LCDstr 117A                                        u525_20 12B2  
                                      u445_20 1047                                        u461_20 0D66  
                                      u381_20 0817                                        u621_20 0017  
                                      u525_21 12B1                                        u445_21 1046  
                                      u461_21 0D65                                        u381_21 0816  
                                      u621_21 0016                                        u526_20 12C8  
                                      u438_20 11AC                                        u462_20 0D7B  
                                      u454_20 0C80                                        u358_20 1134  
                                      u382_20 0820                                        u630_20 0051  
                                      u622_20 001B                                        u526_21 12C7  
                                      u438_21 11AB                                        u462_21 0D78  
                                      u454_21 0C7F                                        u358_21 1133  
                                      u382_21 081F                                        u630_21 0050  
                                      u622_21 001A                                        u455_20 0D36  
                                      u359_20 113D                                        u383_20 0826  
                                      u391_20 0D8C                                        u439_20 11D7  
                                      u631_20 0055                                        u623_20 001F  
                                      u455_21 0D35                                        u359_21 113C  
                                      u383_21 0825                                        u391_21 0D8B  
                                      u439_21 11D6                                        u631_21 0054  
                                      u623_21 001E                                        u463_24 0D7D  
                                      u456_20 0D41                                        u384_20 082B  
                                      u392_20 0D91                                        u632_20 005A  
                                      u624_20 002A                                        u456_21 0D40  
                                      u384_21 082A                                        u392_21 0D90  
                                      u632_21 0059                                        u624_21 0029  
                                      u457_20 0D48                                        u385_20 0836  
                                      u393_20 0D9C                                        u625_20 002E  
                                      u457_21 0D47                                        u385_21 0835  
                                      u393_21 0D9B                                        u625_21 002D  
                                      u458_20 0D50                                        u386_20 083F  
                                      u394_20 0DAC                                        u626_20 0039  
                                      u458_21 0D4F                                        u386_21 083E  
                                      u394_21 0DAB                                        u626_21 0038  
                                      u459_20 0D58                                        u387_20 0843  
                                      u395_20 0DBC                                        u627_20 003D  
                                      u619_20 000B                                        u459_21 0D57  
                                      u387_21 0842                                        u395_21 0DBB  
                                      u627_21 003C                                        u619_21 000A  
                                      u388_20 084E                                        u396_20 0DC1  
                                      u628_20 0045                                        u388_21 084D  
                                      u396_21 0DC0                                        u628_21 0044  
                                      u492_25 0E9D                                        _OSCFRQ 0893  
                                      u389_20 10B4                                        u397_20 0DCC  
                                      u493_20 0EB4                                        u629_20 0049  
                                      u389_21 10B3                                        u397_21 0DCB  
                                      u493_21 0EB3                                        u629_21 0048  
                                      u493_25 0EB0                                        u398_20 0DDC  
                                      u494_20 0EC3                                        u398_21 0DDB  
                                      u494_21 0EC2                                        u494_25 0EBF  
                                      u399_20 0DEE                                        u495_20 0F57  
                                      u399_21 0DED                                        u495_21 0F56  
                                      u496_20 0F5D                                        u496_21 0F5C  
                                      u497_20 0F79                                        u497_21 0F78  
                                      u497_25 0F75                                        u498_20 0F83  
                                      u498_21 0F82                                        u499_20 0FA3  
                                      u499_21 0FA2                                        u499_25 0F9F  
                                      _PWM6EN 1C77                                        _TX1REG 011A  
                                      _TX1STA 011E                                     ??_ReadI2C 0070  
                                      _PWM_on 00D5                                   LCDsend2x4@c 0025  
                            __end_of_editTemp 1753          __end_of_TMR1_DefaultInterruptHandler 1F9C  
       __size_of_TMR1_DefaultInterruptHandler 0001                  _TMR1_DefaultInterruptHandler 1F9B  
                                _CCPTMRS1bits 021F                              __end_of_commands 1827  
                                      ___lmul 1432                                        ___wmul 126C  
                           __end_of_TMR2_Stop 1FB1                                        _cmd_aa 1505  
                                      _cmd_ir 13AB                                        _cmd_ra 15FA  
                                      _cmd_rc 133B                                        _cmd_sc 157A  
                                      _cmd_rp 1360                                        _flagNr 00D3  
                                   ??___lwdiv 0024                                     ??___lwmod 002C  
                         __size_of_TMR2_Start 0003                           _EUSART_Transmit_ISR 1316  
                                      _memset 124D                       __end_of_PWM6_Initialize 105A  
                                   ??_cmd_dac 0032                                     ??_editLum 005B  
                                   ??_cmd_dtl 0032                                     ??_cmd_mta 0032  
                                   ??_cmd_mmp 0032                                        _iwrite 007D  
                                   ??_cmd_trc 0032                                     ??_cmd_rtl 0032  
                                   ??_cmd_tri 0032                                 ?_INT_CallBack 0070  
                     __end_of_DATAEE_ReadByte 1085                       __size_of_monitoring_ISR 0173  
                             _TMR5_StartTimer 1FA5                               _ADCC_Initialize 10FA  
                              _PMD_Initialize 1FCB                                     ??_isdigit 0020  
                           sendOKMessage@bufw 002B                            update_menuLCD@diff 0058  
               i1DATAEE_WriteByte@GIEBitValue 0079             __size_of_ADCC_GetSingleConversion 0012  
            __size_of_INT_SetInterruptHandler 0009                     ?_ADCC_GetSingleConversion 0070  
                     __end_of_TMR2_StartTimer 1FB5       INT_SetInterruptHandler@InterruptHandler 0020  
    TMR5_SetInterruptHandler@InterruptHandler 0020      TMR1_SetInterruptHandler@InterruptHandler 0020  
                                   ??_sprintf 0036                       __end_of_TMR1_WriteTimer 1096  
                     ??_PWM_Output_D4_Disable 0020                          ?_EUSART_Transmit_ISR 0070  
                         __size_ofi1_WriteI2C 004B                              ?_TMR1_Initialize 0070  
                     __end_of_TMR5_Initialize 122E                          __size_of_EUSART_Read 0026  
                           _SYSTEM_Initialize 122E                       __end_of__initialization 009D  
                              cmd_trc@address 0042                            ?_SYSTEM_Initialize 0070  
                           __end_of_Clock_ISR 0D80                               _TMR5_WriteTimer 1096  
                              cmd_trc@buffEOM 0044          __end_of_EUSART_SetTxInterruptHandler 1FEE  
       __size_of_EUSART_SetTxInterruptHandler 0009                  _EUSART_SetTxInterruptHandler 1FE5  
                              __pcstackCOMMON 0070                                  __pidataBANK0 0002  
                                __pidataBANK1 102B                           ??_SYSTEM_Initialize 0023  
                                   ?_TMR1_ISR 0070                 ?_TMR1_DefaultInterruptHandler 0070  
                                   ?_TMR5_ISR 0070                                 __end_of_getch 0805  
                                   ?_S1button 0070                              _DATAEE_WriteByte 12F2  
                               __end_of_putch 1007                            __size_of_editClock 0080  
             differenceBetweenTimePeriod@diff 0026                                 __end_of_tsttc 0E8D  
                            ?_TMR2_Initialize 0070                                ??_INT_CallBack 0070  
             differenceBetweenTimePeriod@stop 0023                        __end_of_PMD_Initialize 1FD3  
                              cmd_tri@buffEOM 0045                                     ?i1___wmul 0070  
                 __size_of_EXT_INT_Initialize 000E                                  ??_LCDsend2x4 0023  
                                     ??_getch 0022                     __end_of_SYSTEM_Initialize 124D  
                       ??_EUSART_Transmit_ISR 0070                                  sprintf@width 003F  
                            update_menuLCD@tt 0051                                       ??_putch 0022  
                                     ??_tsttc 0072                                    __pbssBANK0 005F  
                                  __pbssBANK1 00C0                                    __pbssBANK2 0120  
                                  __pbssBANK3 01A0                                    __pbssBANK4 0220  
                      i1DATAEE_WriteByte@bAdd 0076                                       ?_S1_ISR 0070  
                                     ?_LCDcmd 0070                          __end_of_EUSART_Write 1432  
                                     ?_LCDstr 0029                                  _flagS1pushed 0067  
                                     LCDcmd@c 0028                   __size_of_EUSART_Receive_ISR 0022  
                                     LCDstr@c 002E                                       LCDstr@p 0029  
                                  __pmaintext 00A1                 ?_EUSART_SetTxInterruptHandler 0020  
            _EUSART_TxDefaultInterruptHandler 0136                                       ?___lmul 0020  
                                     ?___wmul 0020                                    ??_TMR1_ISR 007B  
                     __end_of_TMR5_StartTimer 1FA8                                       ?_cmd_aa 002F  
                     __end_of_ADCC_Initialize 1111                    __end_of_PWM6_LoadDutyValue 112A  
                                  ??_TMR5_ISR 007D                                       ?_cmd_ir 002F  
                                     ?_cmd_ra 002F                                       ?_cmd_rc 002F  
                                     ?_cmd_sc 002F                                       ?_cmd_rp 002F  
                                  ??_S1button 0020                                    __pintentry 0004  
                                     _ADFLTRH 0115                                       _ADFLTRL 0114  
                                     ?_memset 0020                            __end_of_LCDsend2x4 0A86  
                              ___lmul@product 0028                                       _ADPREVH 008F  
                                     _ADPREVL 008E                                     ?_WriteI2C 0070  
                            ?_PWM6_Initialize 0070                                       _ADSTPTH 0113  
                                     _ADSTPTL 0112                               ?_PMD_Initialize 0070  
                                  ??i1___wmul 0074                              _sendERRORMessage 11B3  
                            ?_DATAEE_ReadByte 0026                             ?_i2c1_driver_open 0070  
                               _eusartRxCount 00D9                                       _LCDchar 1022  
                                     _LCDinit 08BC                                       _SP1BRGH 011C  
                                     _SP1BRGL 011B                                       _LCDsend 1753  
                        __size_of_sendMessage 0023                            ??_i2c1_driver_open 0020  
                                     _INT_ISR 1FB9                                       _OSCCON1 088D  
                                     _OSCCON3 088F                                     ?_editTemp 0070  
                      __size_of_sendOKMessage 001B                                       _NVMADRH 081B  
                                     _NVMADRL 081A                                       _NVMDATH 081D  
                                     _OSCTUNE 0892                                       _NVMDATL 081C  
                                     _NVMCON2 081F                                       _PWM6DCH 038D  
                                     _PWM6DCL 038C                                       _PWM6CON 038E  
                                     _SSP1ADD 018D                                       _SLRCONA 0F3B  
                                     _SLRCONB 0F46                                       _SLRCONC 0F51  
                                     _SLRCOND 0F5C                                       _SLRCONE 0F67  
                                     _SSP1BUF 018C                                       _SSP1MSK 018E  
                                ??_TMR2_Start 0020                       __size_of_TMR2_StopTimer 0004  
                            ?_TMR2_StartTimer 0070                              ?_TMR1_WriteTimer 0070  
                     __end_of_TMR5_WriteTimer 10A7                                  LCDsend2x4@hc 0026  
                                LCDsend2x4@lc 0027                             cmd_mmp@timerValue 003C  
                           __end_of_editClock 09B2                              ?_TMR5_Initialize 0070  
                             __size_of_S1_ISR 0009                               __size_of_LCDcmd 0008  
                        DATAEE_WriteByte@bAdd 0020                            _i2c1_driver_i2cISR 00CF  
                             __size_of_LCDstr 001B                                       _ReadI2C 112A  
                            ??_update_menuLCD 0043                    ??_TMR5_SetInterruptHandler 0022  
                                ??i1_WriteI2C 0070                               __size_of___lmul 0034  
                             __size_of___wmul 0020                                       ___lwdiv 153D  
                             __size_of_cmd_aa 0038                                       ___lwmod 14D0  
                             __size_of_cmd_ir 002B                               __size_of_cmd_ra 0042  
                             __size_of_cmd_rc 0025                               __size_of_cmd_sc 003F  
                             __size_of_cmd_rp 0025                            __end_of_TMR2_Start 1FA5  
                                  ??_WriteI2C 0020                                       _cmd_dac 167F  
                             __size_of_memset 001F                                       _editLum 16C3  
                                     _cmd_dtl 1466                                       _cmd_mta 115F  
                                     _cmd_mmp 0850                                       _cmd_trc 0B78  
                                     _cmd_rtl 128C                                       _cmd_tri 0A86  
                                     __ptext1 15B9                                       __ptext2 124D  
                                     __ptext3 1034                                       __ptext4 0801  
                                     __ptext5 1385                                       __ptext6 170B  
                                     __ptext7 16C3                                       __ptext8 0932  
                                     __ptext9 03E1                                _monitoring_ISR 0E8D  
              ??_TMR1_DefaultInterruptHandler 0070                       __size_of_TMR5_StopTimer 0003  
                 __size_of_setTimer5ReloadVal 0009                                     _T1CONbits 020E  
                               cmd_dac@buffer 0031                                       _dpowers 1836  
                       _OSCILLATOR_Initialize 1FF7                                     _T2CONbits 028E  
                                     _isdigit 10B9                                    cmd_dac@num 002F  
           __size_of_TMR1_SetInterruptHandler 0009                                       cmd_sc@h 0033  
                                     cmd_sc@m 0034                                       cmd_sc@s 0035  
                    ??_PIN_MANAGER_Initialize 0020                     ?_TMR1_SetInterruptHandler 0020  
                                   _T2HLTbits 028F                       _INT_SetInterruptHandler 1FEE  
                                   _T5CONbits 021A                                    ??_editTemp 005B  
                                  cmd_ir@buff 0033                                    cmd_ra@buff 0033  
                                  cmd_rc@buff 0033                    __size_of_SYSTEM_Initialize 001F  
                                     _sprintf 05FD                                       clrloop0 1FC0  
                                  cmd_dtl@num 002F                          end_of_initialization 009D  
                                   _T2RSTbits 0291                                    cmd_rp@buff 0033  
                                  cmd_mta@num 002F                                    cmd_mmp@num 002F  
                          __end_ofi1_WriteI2C 0850                                       init_ram 1FC5  
                                     memset@c 0020                                       memset@n 0022  
                                     memset@p 0025                                       initloop 1FC6  
                        __end_of_INT_CallBack 104D                                    cmd_trc@aux 0045  
                                  cmd_trc@num 002F                                    cmd_rtl@num 002F  
                                  cmd_tri@num 002F                            i1_DATAEE_WriteByte 1195  
                           _EUSART_Initialize 13D6                 __size_of_PWM_Output_D4_Enable 0003  
                               _sendOKMessage 1144                            ?_EUSART_Initialize 0070  
                          _EUSART_is_rx_ready 1F9C                  ?_differenceBetweenTimePeriod 0020  
                         ?i1_DATAEE_WriteByte 0076                                    main@F13077 0120  
                            ?_TMR5_StartTimer 0070                              ?_ADCC_Initialize 0070  
            __end_of_ADCC_GetSingleConversion 10B9                         i1___wmul@multiplicand 0072  
                      __end_of_monitoring_ISR 1000                           ??_EUSART_Initialize 0022  
              ??_EUSART_SetTxInterruptHandler 0022                           ?_EUSART_is_rx_ready 0070  
                                   _PORTCbits 000E                                     _TMR2_Stop 1FAE  
                       _TMR5_InterruptHandler 00DD                                     _TRISCbits 0013  
                       __size_of_EUSART_Write 002E                                 ?_toggleAlarms 0070  
                                  main@i_2704 00BB                          ??i1_DATAEE_WriteByte 0079  
                    __end_of_DATAEE_WriteByte 1316                                 _alarmPWMStart 00E6  
                            ?_TMR5_WriteTimer 0070                       TMR5_WriteTimer@timerVal 0070  
              __size_of_PWM_Output_D4_Disable 0003                     __end_of_EUSART_Initialize 1404  
                        ??_EUSART_is_rx_ready 0020                 __end_of_PWM_Output_D4_Disable 1FAE  
                              __end_of_S1_ISR 1FDC                                __end_of_LCDcmd 0800  
                              __end_of_LCDstr 1195                               cmd_trc@buffData 0038  
                               cmd_dtl@buffer 0031                                LCDsend2x4@mode 0022  
                             cmd_trc@buffInit 003D                                 cmd_dtl@lumAux 0033  
                              ?_sendOKMessage 0070                                     _Clock_ISR 0C75  
                              __end_of___lmul 1466                                __end_of___wmul 128C  
                             ?_monitoring_ISR 0070                                __end_of_cmd_aa 153D  
                              __end_of_cmd_ir 13D6                                __end_of_cmd_ra 163C  
                              __end_of_cmd_rc 1360                                __end_of_cmd_sc 15B9  
                              __end_of_cmd_rp 1385                                  _EUSART_Write 1404  
                           __size_of_TMR1_ISR 0017                             __size_of_TMR5_ISR 0017  
                           __size_of_S1button 005D                                    ?_TMR2_Stop 0070  
                      ?_OSCILLATOR_Initialize 0070                                __end_of_memset 126C  
                   ??_INT_SetInterruptHandler 0022                               main@checkSumAux 00B6  
                         start_initialization 0060                             __size_ofi1___wmul 001F  
        __end_of_TMR5_DefaultInterruptHandler 0801         __size_of_TMR5_DefaultInterruptHandler 0001  
                _TMR5_DefaultInterruptHandler 0800                                ??_toggleAlarms 005B  
             __size_of_PIN_MANAGER_Initialize 0043                                _TMR2_StopTimer 1FB5  
                               ??_EUSART_Read 0020  EUSART_SetRxInterruptHandler@interruptHandler 0020  
EUSART_SetTxInterruptHandler@interruptHandler 0020                               cmd_tri@buffData 0039  
                            WriteI2C@data_out 0021                               cmd_tri@buffInit 003E  
                                 putch@txData 0022                                 cmd_mta@buffer 0031  
                               cmd_mmp@buffer 0031                                      ??_S1_ISR 0070  
                                    ??_LCDcmd 0028                                      ??_LCDstr 002B  
                             cmd_tri@indexAux 0042                      __end_of_sendERRORMessage 11D1  
                         DATAEE_ReadByte@bAdd 0026                  ?_INT_DefaultInterruptHandler 0070  
                    __size_of_TMR1_Initialize 001F                              ??_PMD_Initialize 0020  
                                  ?_Clock_ISR 0070                                      ??___lmul 0028  
                                    ??___wmul 0024                                      ??_cmd_aa 0032  
                                    ??_cmd_ir 0032                                      ??_cmd_ra 0032  
                                    ??_cmd_rc 0032                                      ??_cmd_sc 0032  
                                    ??_cmd_rp 0032                                   __pdataBANK0 006E  
                                 __pdataBANK1 00E6                                      ??_memset 0024  
                            sendOKMessage@cmd 002A                    __end_of_EXT_INT_Initialize 1068  
                           _editingClockAlarm 0064                             update_menuLCD@str 0049  
                              _TMR5_StopTimer 1FA8                             __size_of_WriteI2C 005A  
                    _ADCC_GetSingleConversion 10A7                       i1DATAEE_WriteByte@bData 0078  
                 __end_of_EUSART_Transmit_ISR 133B                        __end_of_TMR2_StopTimer 1FB9  
                                    ?_LCDchar 0070                                   __pbssCOMMON 007D  
                                    ?_LCDinit 0070                                      ?_LCDsend 0070  
                                   ___latbits 0002                                      ?_INT_ISR 0070  
                               __pcstackBANK0 0020                                 cmd_trc@buffer 0031  
                               __pcstackBANK1 00A0                            _PWM6_LoadDutyValue 1111  
                    __size_of_TMR2_Initialize 000E                                  _isdigit$3164 0020  
                       __size_of_INT_CallBack 000D                 ?_TMR5_DefaultInterruptHandler 0070  
        __size_of_differenceBetweenTimePeriod 0035                                      LCDchar@c 0028  
                           __size_of_editTemp 0048                                 cmd_rtl@buffer 0031  
                               cmd_tri@buffer 0031                    __end_of_EUSART_Receive_ISR 12CF  
                                    LCDsend@c 0023                           ?_PWM6_LoadDutyValue 0020  
                  __size_of_EUSART_Initialize 002E                                   sprintf@flag 003E  
                   __size_of_i2c1_driver_open 000C                                   sprintf@prec 003B  
            _EUSART_RxDefaultInterruptHandler 0134                               ??_sendOKMessage 0029  
                         __end_of_EUSART_Read 13AB                                      ?_ReadI2C 0070  
                                   __pnvBANK1 00DB                                     __pnvBANK2 0134  
                                   _editClock 0932                                     _main$3687 00B4  
                            ___lwdiv@dividend 0022                        _PIN_MANAGER_Initialize 163C  
               ??_INT_DefaultInterruptHandler 0070                          EUSART_Read@readValue 0021  
            __end_of_TMR1_SetInterruptHandler 1010               ADCC_GetSingleConversion@channel 0073  
                                   _dimingLed 00CD                                      ?___lwdiv 0020  
                                    ?___lwmod 0028                   _i2c1_driver_busCollisionISR 00D1  
                                _eusartRxHead 006B                        __end_of_TMR5_StopTimer 1FAB  
                                _eusartTxHead 006D                                  _eusartRxTail 00DA  
                                _eusartTxTail 006C                          ??_PWM6_LoadDutyValue 0022  
                                    ?_cmd_dac 002F                                      ?_editLum 0070  
                                    ?_cmd_dtl 002F                                      ?_cmd_mta 002F  
                                    ?_cmd_mmp 002F                                  cmd_aa@buffer 0031  
                ??_INTERRUPT_InterruptManager 007D                                      ?_cmd_trc 002F  
                                    ?_cmd_rtl 002F                                      ?_cmd_tri 002F  
                               ??_sendMessage 0026                                   ??_TMR2_Stop 0020  
                                sendMessage@n 0027                       _eusartTxBufferRemaining 00E5  
                                _INT_CallBack 1040                                      _BAUD1CON 011F  
                                    ?_isdigit 0070                               ?_TMR2_StopTimer 0070  
                    __size_of_PWM6_Initialize 000D                              ___lwdiv@quotient 0025  
                              __size_of_getch 0004                                      ?_sprintf 002E  
                                    _T2CLKCON 0290                      __size_of_DATAEE_ReadByte 000F  
                        cmd_tri@startingIndex 0044                                __size_of_putch 0007  
                                   cmd_aa@num 002F                                __size_of_tsttc 010D  
                              _eusartRxBuffer 0220                                _eusartTxBuffer 01A0  
                              ___wmul@product 0024                                     cmd_ir@num 002F  
                                   cmd_ra@num 002F                                      _LATAbits 0016  
                                   cmd_rc@num 002F                                     cmd_sc@num 002F  
                                   clear_ram0 1FBF                                     cmd_rp@num 002F  
                                    _PIE0bits 0716                                      _PIE3bits 0719  
                                    _PIE4bits 071A                      __size_of_TMR2_StartTimer 0004  
                                  ?_editClock 0070                                     _tempAlarm 00CA  
                                    _S1_Value 00D8                      __size_of_TMR1_WriteTimer 0011  
         __size_of_INTERRUPT_InterruptManager 005A                                      _PIR0bits 070C  
                                    _PIR3bits 070F                                      _PIR4bits 0710  
                    __size_of_TMR5_Initialize 001F                                   ??_Clock_ISR 007A  
                        __end_of_toggleAlarms 15FA                                      _SSP1CON1 0190  
                                    _SSP1CON2 0191                                      _TMR1_ISR 10CC  
                                    _TMR5_ISR 10E3                                      _S1button 079B  
                                    _SSP1STAT 018F                               ?_TMR5_StopTimer 0070  
                                   _updateLCD 006E                    __end_of_setTimer5ReloadVal 1022  
                           ??_TMR1_Initialize 0022                                    _ADCON0bits 0093  
                                  _ADCON1bits 0094                                sendMessage@num 0023  
                                  _ADCON2bits 0095                                    _ADCON3bits 0096  
                                cmd_ir@buffer 0031                             ___wmul@multiplier 0020  
                                    i1___wmul 11D1                                  cmd_ra@buffer 0031  
                          i1WriteI2C@data_out 0071                  __end_of_PWM_Output_D4_Enable 1FA2  
                                cmd_rc@buffer 0031          __size_of_INT_DefaultInterruptHandler 0001  
                                cmd_sc@buffer 0031             __size_of_TMR5_SetInterruptHandler 0009  
                            __size_of_LCDchar 0009                     ?_TMR5_SetInterruptHandler 0020  
                       DATAEE_WriteByte@bData 0022                              __size_of_LCDinit 0076  
                            __size_of_LCDsend 0053                              __size_of_INT_ISR 0006  
                         __end_of_sendMessage 12F2                                   _EUSART_Read 1385  
                           ___lmul@multiplier 0020                             ?_DATAEE_WriteByte 0020  
                           ??_TMR2_Initialize 0020                         setTimer5ReloadVal@val 0020  
                                cmd_rp@buffer 0031                ??_TMR5_DefaultInterruptHandler 0070  
                          ??_DATAEE_WriteByte 0023                              __size_of_ReadI2C 001A  
                                  _ADSTATbits 0097                              ??_monitoring_ISR 007A  
                     ??_OSCILLATOR_Initialize 0020                              __size_of___lwdiv 003D  
                            __size_of___lwmod 0035                                      _WriteI2C 17A6  
                    _TMR1_SetInterruptHandler 1007                              __size_of_cmd_dac 0044  
                            __size_of_editLum 0048                              __size_of_cmd_dtl 0035  
                     __size_of_update_menuLCD 021C                              __size_of_cmd_mta 001B  
                            __size_of_cmd_mmp 006C                              __size_of_cmd_trc 00FD  
                            __size_of_cmd_rtl 0021                              __size_of_cmd_tri 00F2  
                                cmd_tri@index 004A                         _TMR1_InterruptHandler 00E1  
                                  sprintf@val 003C                                      _clkAlarm 00C0  
                    __size_of_TMR5_StartTimer 0003                      __size_of_ADCC_Initialize 0017  
                            __size_of_isdigit 0013                                      _editTemp 170B  
                             ___lwdiv@divisor 0020                               ___lwdiv@counter 0027  
                                    __ptext10 05FD                                      __ptext11 10B9  
                                    __ptext20 1022                                      __ptext12 14D0  
                                    __ptext21 07F8                                      __ptext13 153D  
                                  _T1GCONbits 020F                                      __ptext30 0850  
                                    __ptext22 079B                                      __ptext14 149B  
                                    __ptext31 1360                                      __ptext23 0B78  
                                    __ptext15 1FB5                                      __ptext40 1FA8  
                                    __ptext32 128C                                      __ptext24 13AB  
                                    __ptext16 1FAE                                      __ptext41 1FA5  
                                    __ptext33 157A                                      __ptext25 1505  
                                    __ptext17 1FAB                                      __ptext50 120F  
                                    __ptext42 1144                                      __ptext34 133B  
                                    __ptext26 1466                                      __ptext18 1111  
                                    __ptext51 1010                                      __ptext43 11B3  
                                    __ptext35 0A86                                      __ptext27 167F  
                                    __ptext19 117A                                      __ptext60 1FEE  
                                    __ptext52 1068                                      __ptext44 12CF  
                                    __ptext36 126C                                      __ptext28 15FA  
                                    __ptext61 13D6                                      __ptext53 11F0  
                                    __ptext45 1000                                      __ptext37 1076  
                                    __ptext29 115F                                      __ptext70 1F9C  
                                    __ptext62 1FE5                                      __ptext54 1007  
                                    __ptext46 1404                                      __ptext38 1019  
                                    __ptext71 12F2                                      __ptext63 1FDC  
                                    __ptext55 104D                                      __ptext47 1FB1  
                                    __ptext39 1432                                      __ptext80 10A7  
                                    __ptext64 10FA                                      __ptext56 1FCB  
                                    __ptext48 1FA2                                      __ptext81 1096  
                                    __ptext73 10E3                                      __ptext65 1F9F  
                                    __ptext57 163C                                      __ptext49 122E  
                                    __ptext90 1FD3                                      __ptext82 10CC  
                                    __ptext74 0800                                      __ptext66 08BC  
                                    __ptext58 1FF7                                      __ptext91 1316  
                                    __ptext83 1085                                      __ptext75 0E8D  
                                    __ptext67 09B2                                      __ptext59 105A  
                                    __ptext92 12AD                                      __ptext84 0C75  
                                    __ptext76 11D1                                      __ptext68 1753  
                                    __ptext85 1F9B                                      __ptext77 0D80  
                                    __ptext69 17A6                                      __ptext86 1195  
                                    __ptext78 0805                                      __ptext87 1FB9  
                                    __ptext79 112A                                      __ptext88 1040  
                                    __ptext89 1F9A                                  _SSP1CON1bits 0190  
                                _SSP1CON2bits 0191                   __size_ofi1_DATAEE_WriteByte 001E  
                                    _commands 1800                              __size_of_sprintf 019E  
                 DATAEE_WriteByte@GIEBitValue 0023                              _i2c1_driver_open 1034  
                                    _modeFlag 0062                             ??_PWM6_Initialize 0020  
                 __size_of_EUSART_is_rx_ready 0003                                 __size_of_main 0340  
                                  _T5GCONbits 021B                                      cmd_dac@h 0033  
                                    cmd_dac@m 0034                                      _lumAlarm 00C7  
                                    cmd_dac@s 0035                             ?_sendERRORMessage 0070  
                           ??_DATAEE_ReadByte 0028                                      _lumLevel 0068  
                       _PWM_Output_D4_Disable 1FAB                                   ??_editClock 005B  
                                    cmd_trc@i 0040                                      cmd_trc@j 0049  
                                    cmd_trc@n 0047                                      cmd_tri@i 0047  
                                    cmd_tri@j 0049                                      cmd_tri@n 0046  
                            _editingTempAlarm 00D7                      __size_of_TMR5_WriteTimer 0011  
                                  _RC1STAbits 011D                            ??_sendERRORMessage 0029  
                                    _prevTemp 00EB                                    tsttc@value 0073  
                  ??_ADCC_GetSingleConversion 0073                                      int$flags 007E  
                           ??_TMR2_StartTimer 0020            __end_of_INTERRUPT_InterruptManager 005E  
                  _INTERRUPT_InterruptManager 0004                                      main@buff 00A0  
                                _SSP1STATbits 018F                             ??_TMR1_WriteTimer 0072  
                           ??_TMR5_Initialize 0022                                   _sendMessage 12CF  
                        update_menuLCD@F12927 00C4                                    _INTCONbits 000B  
                                 _NVMCON1bits 081E                                  _prevLumLevel 00E9  
                        _INT_InterruptHandler 00DB                                      isdigit@c 0021  
                                    memset@p1 0026                                    _LCDsend2x4 09B2  
                          _EXT_INT_Initialize 105A                                   cmd_rtl@buff 0033  
                                    intlevel1 0000                                     sprintf@ap 003A  
                                   sprintf@sp 0042                              ___lwmod@dividend 002A  
                     ?_PIN_MANAGER_Initialize 0070                          sendERRORMessage@bufw 002B  
                       __size_of_toggleAlarms 0041                           ?_EXT_INT_Initialize 0070  
                             _editingLumAlarm 00D6          __end_of_EUSART_SetRxInterruptHandler 1FE5  
       __size_of_EUSART_SetRxInterruptHandler 0009                  _EUSART_SetRxInterruptHandler 1FDC  
                        _PWM_Output_D4_Enable 1F9F           __end_of_differenceBetweenTimePeriod 14D0  
                 _differenceBetweenTimePeriod 149B                            _EUSART_Receive_ISR 12AD  
                    ?_INT_SetInterruptHandler 0020                              ??_TMR2_StopTimer 0020  
                               __pstringtext1 1800                                 __pstringtext2 1836  
                               __pstringtext3 1827                                 __pstringtext4 1840  
                               __pstringtext5 1847                                 __pstringtext6 184C  
                               __pstringtext7 0000                          ??_EXT_INT_Initialize 0022  
               ??_differenceBetweenTimePeriod 0027                                      sprintf@c 0041  
                                    sprintf@f 002E                           ?_EUSART_Receive_ISR 0070  
                                  _SSP1DATPPS 0EC6                                    _SSP1CLKPPS 0EC5  
                             ___lwmod@divisor 0028                           sendERRORMessage@cmd 002A  
                             ___lwmod@counter 002D                   PWM6_LoadDutyValue@dutyValue 0020  
                                  _TX1STAbits 011E                                  _toggleAlarms 15B9  
                                  _TMR2_Start 1FA2                            EUSART_Write@txData 0021  
                __size_of_EUSART_Transmit_ISR 0025                             ??_TMR5_StartTimer 0020  
              __end_of_PIN_MANAGER_Initialize 167F                             ??_ADCC_Initialize 0020  
                      ?_PWM_Output_D4_Disable 0070                          ??_EUSART_Receive_ISR 0070  
                       ?_PWM_Output_D4_Enable 0070                               _TMR1_Initialize 11F0  
                       __end_of_sendOKMessage 115F                              ??_TMR5_StopTimer 0020  
