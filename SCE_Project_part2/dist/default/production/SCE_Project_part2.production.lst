

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Nov 28 13:12:58 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2,group=3
    86                           	psect	text61,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text62,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text63,local,class=CODE,merge=1,delta=2
    89                           	psect	text64,local,class=CODE,merge=1,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,delta=2
    92                           	psect	text67,local,class=CODE,merge=1,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,delta=2
    95                           	psect	text70,local,class=CODE,merge=1,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	psect	text78,local,class=CODE,merge=1,delta=2
   104                           	psect	text79,local,class=CODE,merge=1,delta=2
   105                           	psect	text80,local,class=CODE,merge=1,delta=2
   106                           	psect	text81,local,class=CODE,merge=1,delta=2
   107                           	psect	text82,local,class=CODE,merge=1,delta=2
   108                           	psect	text83,local,class=CODE,merge=1,delta=2
   109                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   110                           	dabs	1,0x7E,2
   111  0000                     
   112                           ; Version 2.30
   113                           ; Generated 15/09/2020 GMT
   114                           ; 
   115                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   116                           ; All rights reserved.
   117                           ; 
   118                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   119                           ; 
   120                           ; Redistribution and use in source and binary forms, with or without modification, are
   121                           ; permitted provided that the following conditions are met:
   122                           ; 
   123                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   124                           ;        conditions and the following disclaimer.
   125                           ; 
   126                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   127                           ;        of conditions and the following disclaimer in the documentation and/or other
   128                           ;        materials provided with the distribution. Publication is not required when
   129                           ;        this file is used in an embedded application.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC16F18875 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001C                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  008C                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0110                     	;# 
   207  0110                     	;# 
   208  0111                     	;# 
   209  0112                     	;# 
   210  0112                     	;# 
   211  0113                     	;# 
   212  0114                     	;# 
   213  0114                     	;# 
   214  0115                     	;# 
   215  0116                     	;# 
   216  0116                     	;# 
   217  0117                     	;# 
   218  0119                     	;# 
   219  0119                     	;# 
   220  0119                     	;# 
   221  011A                     	;# 
   222  011A                     	;# 
   223  011A                     	;# 
   224  011B                     	;# 
   225  011B                     	;# 
   226  011B                     	;# 
   227  011B                     	;# 
   228  011B                     	;# 
   229  011C                     	;# 
   230  011C                     	;# 
   231  011C                     	;# 
   232  011D                     	;# 
   233  011D                     	;# 
   234  011D                     	;# 
   235  011E                     	;# 
   236  011E                     	;# 
   237  011E                     	;# 
   238  011F                     	;# 
   239  011F                     	;# 
   240  011F                     	;# 
   241  011F                     	;# 
   242  011F                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  018E                     	;# 
   246  018F                     	;# 
   247  0190                     	;# 
   248  0191                     	;# 
   249  0192                     	;# 
   250  0196                     	;# 
   251  0197                     	;# 
   252  0198                     	;# 
   253  0199                     	;# 
   254  019A                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  020C                     	;# 
   258  020C                     	;# 
   259  020D                     	;# 
   260  020E                     	;# 
   261  020F                     	;# 
   262  020F                     	;# 
   263  0210                     	;# 
   264  0210                     	;# 
   265  0211                     	;# 
   266  0211                     	;# 
   267  0212                     	;# 
   268  0212                     	;# 
   269  0213                     	;# 
   270  0214                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0218                     	;# 
   278  0218                     	;# 
   279  0219                     	;# 
   280  021A                     	;# 
   281  021B                     	;# 
   282  021B                     	;# 
   283  021C                     	;# 
   284  021C                     	;# 
   285  021D                     	;# 
   286  021D                     	;# 
   287  021E                     	;# 
   288  021F                     	;# 
   289  028C                     	;# 
   290  028C                     	;# 
   291  028D                     	;# 
   292  028D                     	;# 
   293  028E                     	;# 
   294  028F                     	;# 
   295  0290                     	;# 
   296  0290                     	;# 
   297  0291                     	;# 
   298  0292                     	;# 
   299  0292                     	;# 
   300  0293                     	;# 
   301  0293                     	;# 
   302  0294                     	;# 
   303  0295                     	;# 
   304  0296                     	;# 
   305  0296                     	;# 
   306  0297                     	;# 
   307  0298                     	;# 
   308  0298                     	;# 
   309  0299                     	;# 
   310  0299                     	;# 
   311  029A                     	;# 
   312  029B                     	;# 
   313  029C                     	;# 
   314  029C                     	;# 
   315  029D                     	;# 
   316  030C                     	;# 
   317  030C                     	;# 
   318  030D                     	;# 
   319  030E                     	;# 
   320  030F                     	;# 
   321  0310                     	;# 
   322  0310                     	;# 
   323  0311                     	;# 
   324  0312                     	;# 
   325  0313                     	;# 
   326  0314                     	;# 
   327  0314                     	;# 
   328  0315                     	;# 
   329  0316                     	;# 
   330  0317                     	;# 
   331  0318                     	;# 
   332  0318                     	;# 
   333  0319                     	;# 
   334  031A                     	;# 
   335  031B                     	;# 
   336  031C                     	;# 
   337  031C                     	;# 
   338  031D                     	;# 
   339  031E                     	;# 
   340  031F                     	;# 
   341  038C                     	;# 
   342  038C                     	;# 
   343  038D                     	;# 
   344  038E                     	;# 
   345  0390                     	;# 
   346  0390                     	;# 
   347  0391                     	;# 
   348  0392                     	;# 
   349  040C                     	;# 
   350  040D                     	;# 
   351  040E                     	;# 
   352  040F                     	;# 
   353  0410                     	;# 
   354  0411                     	;# 
   355  0416                     	;# 
   356  0416                     	;# 
   357  0417                     	;# 
   358  0418                     	;# 
   359  0418                     	;# 
   360  0419                     	;# 
   361  041A                     	;# 
   362  041A                     	;# 
   363  041B                     	;# 
   364  041C                     	;# 
   365  041C                     	;# 
   366  041D                     	;# 
   367  041E                     	;# 
   368  041F                     	;# 
   369  048C                     	;# 
   370  048C                     	;# 
   371  048D                     	;# 
   372  048E                     	;# 
   373  048F                     	;# 
   374  048F                     	;# 
   375  0490                     	;# 
   376  0491                     	;# 
   377  0492                     	;# 
   378  0492                     	;# 
   379  0493                     	;# 
   380  0494                     	;# 
   381  0495                     	;# 
   382  0495                     	;# 
   383  0496                     	;# 
   384  0497                     	;# 
   385  0498                     	;# 
   386  0499                     	;# 
   387  049A                     	;# 
   388  049B                     	;# 
   389  049C                     	;# 
   390  049D                     	;# 
   391  050C                     	;# 
   392  050C                     	;# 
   393  050D                     	;# 
   394  050E                     	;# 
   395  050F                     	;# 
   396  050F                     	;# 
   397  0510                     	;# 
   398  0511                     	;# 
   399  0512                     	;# 
   400  0512                     	;# 
   401  0513                     	;# 
   402  0514                     	;# 
   403  0515                     	;# 
   404  0515                     	;# 
   405  0516                     	;# 
   406  0517                     	;# 
   407  0518                     	;# 
   408  0519                     	;# 
   409  051A                     	;# 
   410  051B                     	;# 
   411  051C                     	;# 
   412  051D                     	;# 
   413  058C                     	;# 
   414  058C                     	;# 
   415  058D                     	;# 
   416  058E                     	;# 
   417  058F                     	;# 
   418  058F                     	;# 
   419  0590                     	;# 
   420  0591                     	;# 
   421  0592                     	;# 
   422  0593                     	;# 
   423  060C                     	;# 
   424  060D                     	;# 
   425  060E                     	;# 
   426  060F                     	;# 
   427  0610                     	;# 
   428  0611                     	;# 
   429  0612                     	;# 
   430  0613                     	;# 
   431  0614                     	;# 
   432  0616                     	;# 
   433  0617                     	;# 
   434  0618                     	;# 
   435  0619                     	;# 
   436  061A                     	;# 
   437  061B                     	;# 
   438  061C                     	;# 
   439  061D                     	;# 
   440  061E                     	;# 
   441  068C                     	;# 
   442  068D                     	;# 
   443  068E                     	;# 
   444  068F                     	;# 
   445  0690                     	;# 
   446  0691                     	;# 
   447  0692                     	;# 
   448  0693                     	;# 
   449  0694                     	;# 
   450  070C                     	;# 
   451  070D                     	;# 
   452  070E                     	;# 
   453  070F                     	;# 
   454  0710                     	;# 
   455  0711                     	;# 
   456  0712                     	;# 
   457  0713                     	;# 
   458  0714                     	;# 
   459  0716                     	;# 
   460  0717                     	;# 
   461  0718                     	;# 
   462  0719                     	;# 
   463  071A                     	;# 
   464  071B                     	;# 
   465  071C                     	;# 
   466  071D                     	;# 
   467  071E                     	;# 
   468  0796                     	;# 
   469  0797                     	;# 
   470  0798                     	;# 
   471  0799                     	;# 
   472  079A                     	;# 
   473  079B                     	;# 
   474  080C                     	;# 
   475  080D                     	;# 
   476  080E                     	;# 
   477  080F                     	;# 
   478  0810                     	;# 
   479  0811                     	;# 
   480  0812                     	;# 
   481  0813                     	;# 
   482  0814                     	;# 
   483  081A                     	;# 
   484  081B                     	;# 
   485  081C                     	;# 
   486  081D                     	;# 
   487  081E                     	;# 
   488  081F                     	;# 
   489  088C                     	;# 
   490  088D                     	;# 
   491  088E                     	;# 
   492  088F                     	;# 
   493  0890                     	;# 
   494  0891                     	;# 
   495  0892                     	;# 
   496  0893                     	;# 
   497  0895                     	;# 
   498  0896                     	;# 
   499  0897                     	;# 
   500  0898                     	;# 
   501  0899                     	;# 
   502  089A                     	;# 
   503  089B                     	;# 
   504  090C                     	;# 
   505  090E                     	;# 
   506  090F                     	;# 
   507  091F                     	;# 
   508  091F                     	;# 
   509  098F                     	;# 
   510  098F                     	;# 
   511  0990                     	;# 
   512  0991                     	;# 
   513  0992                     	;# 
   514  0993                     	;# 
   515  0994                     	;# 
   516  0995                     	;# 
   517  0996                     	;# 
   518  0997                     	;# 
   519  0E0F                     	;# 
   520  0E10                     	;# 
   521  0E11                     	;# 
   522  0E12                     	;# 
   523  0E13                     	;# 
   524  0E14                     	;# 
   525  0E15                     	;# 
   526  0E16                     	;# 
   527  0E17                     	;# 
   528  0E18                     	;# 
   529  0E19                     	;# 
   530  0E1A                     	;# 
   531  0E1B                     	;# 
   532  0E1C                     	;# 
   533  0E1D                     	;# 
   534  0E1E                     	;# 
   535  0E1F                     	;# 
   536  0E20                     	;# 
   537  0E21                     	;# 
   538  0E22                     	;# 
   539  0E23                     	;# 
   540  0E24                     	;# 
   541  0E25                     	;# 
   542  0E26                     	;# 
   543  0E27                     	;# 
   544  0E28                     	;# 
   545  0E29                     	;# 
   546  0E2A                     	;# 
   547  0E2B                     	;# 
   548  0E2C                     	;# 
   549  0E2D                     	;# 
   550  0E2E                     	;# 
   551  0E2F                     	;# 
   552  0E30                     	;# 
   553  0E31                     	;# 
   554  0E32                     	;# 
   555  0E33                     	;# 
   556  0E34                     	;# 
   557  0E35                     	;# 
   558  0E36                     	;# 
   559  0E37                     	;# 
   560  0E8F                     	;# 
   561  0E90                     	;# 
   562  0E91                     	;# 
   563  0E92                     	;# 
   564  0E93                     	;# 
   565  0E94                     	;# 
   566  0E95                     	;# 
   567  0E96                     	;# 
   568  0E97                     	;# 
   569  0E9C                     	;# 
   570  0E9D                     	;# 
   571  0E9E                     	;# 
   572  0EA1                     	;# 
   573  0EA2                     	;# 
   574  0EA3                     	;# 
   575  0EA4                     	;# 
   576  0EA5                     	;# 
   577  0EA9                     	;# 
   578  0EAA                     	;# 
   579  0EAB                     	;# 
   580  0EAC                     	;# 
   581  0EB1                     	;# 
   582  0EB2                     	;# 
   583  0EB3                     	;# 
   584  0EB8                     	;# 
   585  0EB9                     	;# 
   586  0EBA                     	;# 
   587  0EBB                     	;# 
   588  0EBC                     	;# 
   589  0EBD                     	;# 
   590  0EBE                     	;# 
   591  0EC3                     	;# 
   592  0EC5                     	;# 
   593  0EC6                     	;# 
   594  0EC7                     	;# 
   595  0EC8                     	;# 
   596  0EC9                     	;# 
   597  0ECA                     	;# 
   598  0ECB                     	;# 
   599  0ECC                     	;# 
   600  0F10                     	;# 
   601  0F11                     	;# 
   602  0F12                     	;# 
   603  0F13                     	;# 
   604  0F14                     	;# 
   605  0F15                     	;# 
   606  0F16                     	;# 
   607  0F17                     	;# 
   608  0F18                     	;# 
   609  0F19                     	;# 
   610  0F1A                     	;# 
   611  0F1B                     	;# 
   612  0F1C                     	;# 
   613  0F1D                     	;# 
   614  0F1E                     	;# 
   615  0F1F                     	;# 
   616  0F20                     	;# 
   617  0F21                     	;# 
   618  0F22                     	;# 
   619  0F23                     	;# 
   620  0F24                     	;# 
   621  0F25                     	;# 
   622  0F26                     	;# 
   623  0F27                     	;# 
   624  0F28                     	;# 
   625  0F29                     	;# 
   626  0F2A                     	;# 
   627  0F2B                     	;# 
   628  0F2C                     	;# 
   629  0F2D                     	;# 
   630  0F2E                     	;# 
   631  0F2F                     	;# 
   632  0F30                     	;# 
   633  0F31                     	;# 
   634  0F32                     	;# 
   635  0F38                     	;# 
   636  0F39                     	;# 
   637  0F3A                     	;# 
   638  0F3B                     	;# 
   639  0F3C                     	;# 
   640  0F3D                     	;# 
   641  0F3E                     	;# 
   642  0F3F                     	;# 
   643  0F40                     	;# 
   644  0F41                     	;# 
   645  0F43                     	;# 
   646  0F44                     	;# 
   647  0F45                     	;# 
   648  0F46                     	;# 
   649  0F47                     	;# 
   650  0F48                     	;# 
   651  0F49                     	;# 
   652  0F4A                     	;# 
   653  0F4B                     	;# 
   654  0F4C                     	;# 
   655  0F4E                     	;# 
   656  0F4F                     	;# 
   657  0F50                     	;# 
   658  0F51                     	;# 
   659  0F52                     	;# 
   660  0F53                     	;# 
   661  0F54                     	;# 
   662  0F55                     	;# 
   663  0F56                     	;# 
   664  0F57                     	;# 
   665  0F59                     	;# 
   666  0F5A                     	;# 
   667  0F5B                     	;# 
   668  0F5C                     	;# 
   669  0F5D                     	;# 
   670  0F61                     	;# 
   671  0F62                     	;# 
   672  0F64                     	;# 
   673  0F65                     	;# 
   674  0F66                     	;# 
   675  0F67                     	;# 
   676  0F68                     	;# 
   677  0F69                     	;# 
   678  0F6A                     	;# 
   679  0F6B                     	;# 
   680  0F6C                     	;# 
   681  0F6D                     	;# 
   682  0FE4                     	;# 
   683  0FE5                     	;# 
   684  0FE6                     	;# 
   685  0FE7                     	;# 
   686  0FE8                     	;# 
   687  0FE9                     	;# 
   688  0FEA                     	;# 
   689  0FEB                     	;# 
   690  0FED                     	;# 
   691  0FEE                     	;# 
   692  0FEF                     	;# 
   693  0000                     	;# 
   694  0001                     	;# 
   695  0002                     	;# 
   696  0003                     	;# 
   697  0004                     	;# 
   698  0005                     	;# 
   699  0006                     	;# 
   700  0007                     	;# 
   701  0008                     	;# 
   702  0009                     	;# 
   703  000A                     	;# 
   704  000B                     	;# 
   705  000C                     	;# 
   706  000D                     	;# 
   707  000E                     	;# 
   708  000F                     	;# 
   709  0010                     	;# 
   710  0011                     	;# 
   711  0012                     	;# 
   712  0013                     	;# 
   713  0014                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0017                     	;# 
   717  0018                     	;# 
   718  0019                     	;# 
   719  001A                     	;# 
   720  001C                     	;# 
   721  001C                     	;# 
   722  001D                     	;# 
   723  001D                     	;# 
   724  001E                     	;# 
   725  001F                     	;# 
   726  008C                     	;# 
   727  008C                     	;# 
   728  008D                     	;# 
   729  008E                     	;# 
   730  008E                     	;# 
   731  008F                     	;# 
   732  0090                     	;# 
   733  0090                     	;# 
   734  0091                     	;# 
   735  0093                     	;# 
   736  0094                     	;# 
   737  0095                     	;# 
   738  0096                     	;# 
   739  0097                     	;# 
   740  0098                     	;# 
   741  0099                     	;# 
   742  009A                     	;# 
   743  009B                     	;# 
   744  009C                     	;# 
   745  009D                     	;# 
   746  009E                     	;# 
   747  010C                     	;# 
   748  010D                     	;# 
   749  010E                     	;# 
   750  010E                     	;# 
   751  010F                     	;# 
   752  0110                     	;# 
   753  0110                     	;# 
   754  0111                     	;# 
   755  0112                     	;# 
   756  0112                     	;# 
   757  0113                     	;# 
   758  0114                     	;# 
   759  0114                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0116                     	;# 
   763  0117                     	;# 
   764  0119                     	;# 
   765  0119                     	;# 
   766  0119                     	;# 
   767  011A                     	;# 
   768  011A                     	;# 
   769  011A                     	;# 
   770  011B                     	;# 
   771  011B                     	;# 
   772  011B                     	;# 
   773  011B                     	;# 
   774  011B                     	;# 
   775  011C                     	;# 
   776  011C                     	;# 
   777  011C                     	;# 
   778  011D                     	;# 
   779  011D                     	;# 
   780  011D                     	;# 
   781  011E                     	;# 
   782  011E                     	;# 
   783  011E                     	;# 
   784  011F                     	;# 
   785  011F                     	;# 
   786  011F                     	;# 
   787  011F                     	;# 
   788  011F                     	;# 
   789  018C                     	;# 
   790  018D                     	;# 
   791  018E                     	;# 
   792  018F                     	;# 
   793  0190                     	;# 
   794  0191                     	;# 
   795  0192                     	;# 
   796  0196                     	;# 
   797  0197                     	;# 
   798  0198                     	;# 
   799  0199                     	;# 
   800  019A                     	;# 
   801  019B                     	;# 
   802  019C                     	;# 
   803  020C                     	;# 
   804  020C                     	;# 
   805  020D                     	;# 
   806  020E                     	;# 
   807  020F                     	;# 
   808  020F                     	;# 
   809  0210                     	;# 
   810  0210                     	;# 
   811  0211                     	;# 
   812  0211                     	;# 
   813  0212                     	;# 
   814  0212                     	;# 
   815  0213                     	;# 
   816  0214                     	;# 
   817  0215                     	;# 
   818  0215                     	;# 
   819  0216                     	;# 
   820  0216                     	;# 
   821  0217                     	;# 
   822  0217                     	;# 
   823  0218                     	;# 
   824  0218                     	;# 
   825  0219                     	;# 
   826  021A                     	;# 
   827  021B                     	;# 
   828  021B                     	;# 
   829  021C                     	;# 
   830  021C                     	;# 
   831  021D                     	;# 
   832  021D                     	;# 
   833  021E                     	;# 
   834  021F                     	;# 
   835  028C                     	;# 
   836  028C                     	;# 
   837  028D                     	;# 
   838  028D                     	;# 
   839  028E                     	;# 
   840  028F                     	;# 
   841  0290                     	;# 
   842  0290                     	;# 
   843  0291                     	;# 
   844  0292                     	;# 
   845  0292                     	;# 
   846  0293                     	;# 
   847  0293                     	;# 
   848  0294                     	;# 
   849  0295                     	;# 
   850  0296                     	;# 
   851  0296                     	;# 
   852  0297                     	;# 
   853  0298                     	;# 
   854  0298                     	;# 
   855  0299                     	;# 
   856  0299                     	;# 
   857  029A                     	;# 
   858  029B                     	;# 
   859  029C                     	;# 
   860  029C                     	;# 
   861  029D                     	;# 
   862  030C                     	;# 
   863  030C                     	;# 
   864  030D                     	;# 
   865  030E                     	;# 
   866  030F                     	;# 
   867  0310                     	;# 
   868  0310                     	;# 
   869  0311                     	;# 
   870  0312                     	;# 
   871  0313                     	;# 
   872  0314                     	;# 
   873  0314                     	;# 
   874  0315                     	;# 
   875  0316                     	;# 
   876  0317                     	;# 
   877  0318                     	;# 
   878  0318                     	;# 
   879  0319                     	;# 
   880  031A                     	;# 
   881  031B                     	;# 
   882  031C                     	;# 
   883  031C                     	;# 
   884  031D                     	;# 
   885  031E                     	;# 
   886  031F                     	;# 
   887  038C                     	;# 
   888  038C                     	;# 
   889  038D                     	;# 
   890  038E                     	;# 
   891  0390                     	;# 
   892  0390                     	;# 
   893  0391                     	;# 
   894  0392                     	;# 
   895  040C                     	;# 
   896  040D                     	;# 
   897  040E                     	;# 
   898  040F                     	;# 
   899  0410                     	;# 
   900  0411                     	;# 
   901  0416                     	;# 
   902  0416                     	;# 
   903  0417                     	;# 
   904  0418                     	;# 
   905  0418                     	;# 
   906  0419                     	;# 
   907  041A                     	;# 
   908  041A                     	;# 
   909  041B                     	;# 
   910  041C                     	;# 
   911  041C                     	;# 
   912  041D                     	;# 
   913  041E                     	;# 
   914  041F                     	;# 
   915  048C                     	;# 
   916  048C                     	;# 
   917  048D                     	;# 
   918  048E                     	;# 
   919  048F                     	;# 
   920  048F                     	;# 
   921  0490                     	;# 
   922  0491                     	;# 
   923  0492                     	;# 
   924  0492                     	;# 
   925  0493                     	;# 
   926  0494                     	;# 
   927  0495                     	;# 
   928  0495                     	;# 
   929  0496                     	;# 
   930  0497                     	;# 
   931  0498                     	;# 
   932  0499                     	;# 
   933  049A                     	;# 
   934  049B                     	;# 
   935  049C                     	;# 
   936  049D                     	;# 
   937  050C                     	;# 
   938  050C                     	;# 
   939  050D                     	;# 
   940  050E                     	;# 
   941  050F                     	;# 
   942  050F                     	;# 
   943  0510                     	;# 
   944  0511                     	;# 
   945  0512                     	;# 
   946  0512                     	;# 
   947  0513                     	;# 
   948  0514                     	;# 
   949  0515                     	;# 
   950  0515                     	;# 
   951  0516                     	;# 
   952  0517                     	;# 
   953  0518                     	;# 
   954  0519                     	;# 
   955  051A                     	;# 
   956  051B                     	;# 
   957  051C                     	;# 
   958  051D                     	;# 
   959  058C                     	;# 
   960  058C                     	;# 
   961  058D                     	;# 
   962  058E                     	;# 
   963  058F                     	;# 
   964  058F                     	;# 
   965  0590                     	;# 
   966  0591                     	;# 
   967  0592                     	;# 
   968  0593                     	;# 
   969  060C                     	;# 
   970  060D                     	;# 
   971  060E                     	;# 
   972  060F                     	;# 
   973  0610                     	;# 
   974  0611                     	;# 
   975  0612                     	;# 
   976  0613                     	;# 
   977  0614                     	;# 
   978  0616                     	;# 
   979  0617                     	;# 
   980  0618                     	;# 
   981  0619                     	;# 
   982  061A                     	;# 
   983  061B                     	;# 
   984  061C                     	;# 
   985  061D                     	;# 
   986  061E                     	;# 
   987  068C                     	;# 
   988  068D                     	;# 
   989  068E                     	;# 
   990  068F                     	;# 
   991  0690                     	;# 
   992  0691                     	;# 
   993  0692                     	;# 
   994  0693                     	;# 
   995  0694                     	;# 
   996  070C                     	;# 
   997  070D                     	;# 
   998  070E                     	;# 
   999  070F                     	;# 
  1000  0710                     	;# 
  1001  0711                     	;# 
  1002  0712                     	;# 
  1003  0713                     	;# 
  1004  0714                     	;# 
  1005  0716                     	;# 
  1006  0717                     	;# 
  1007  0718                     	;# 
  1008  0719                     	;# 
  1009  071A                     	;# 
  1010  071B                     	;# 
  1011  071C                     	;# 
  1012  071D                     	;# 
  1013  071E                     	;# 
  1014  0796                     	;# 
  1015  0797                     	;# 
  1016  0798                     	;# 
  1017  0799                     	;# 
  1018  079A                     	;# 
  1019  079B                     	;# 
  1020  080C                     	;# 
  1021  080D                     	;# 
  1022  080E                     	;# 
  1023  080F                     	;# 
  1024  0810                     	;# 
  1025  0811                     	;# 
  1026  0812                     	;# 
  1027  0813                     	;# 
  1028  0814                     	;# 
  1029  081A                     	;# 
  1030  081B                     	;# 
  1031  081C                     	;# 
  1032  081D                     	;# 
  1033  081E                     	;# 
  1034  081F                     	;# 
  1035  088C                     	;# 
  1036  088D                     	;# 
  1037  088E                     	;# 
  1038  088F                     	;# 
  1039  0890                     	;# 
  1040  0891                     	;# 
  1041  0892                     	;# 
  1042  0893                     	;# 
  1043  0895                     	;# 
  1044  0896                     	;# 
  1045  0897                     	;# 
  1046  0898                     	;# 
  1047  0899                     	;# 
  1048  089A                     	;# 
  1049  089B                     	;# 
  1050  090C                     	;# 
  1051  090E                     	;# 
  1052  090F                     	;# 
  1053  091F                     	;# 
  1054  091F                     	;# 
  1055  098F                     	;# 
  1056  098F                     	;# 
  1057  0990                     	;# 
  1058  0991                     	;# 
  1059  0992                     	;# 
  1060  0993                     	;# 
  1061  0994                     	;# 
  1062  0995                     	;# 
  1063  0996                     	;# 
  1064  0997                     	;# 
  1065  0E0F                     	;# 
  1066  0E10                     	;# 
  1067  0E11                     	;# 
  1068  0E12                     	;# 
  1069  0E13                     	;# 
  1070  0E14                     	;# 
  1071  0E15                     	;# 
  1072  0E16                     	;# 
  1073  0E17                     	;# 
  1074  0E18                     	;# 
  1075  0E19                     	;# 
  1076  0E1A                     	;# 
  1077  0E1B                     	;# 
  1078  0E1C                     	;# 
  1079  0E1D                     	;# 
  1080  0E1E                     	;# 
  1081  0E1F                     	;# 
  1082  0E20                     	;# 
  1083  0E21                     	;# 
  1084  0E22                     	;# 
  1085  0E23                     	;# 
  1086  0E24                     	;# 
  1087  0E25                     	;# 
  1088  0E26                     	;# 
  1089  0E27                     	;# 
  1090  0E28                     	;# 
  1091  0E29                     	;# 
  1092  0E2A                     	;# 
  1093  0E2B                     	;# 
  1094  0E2C                     	;# 
  1095  0E2D                     	;# 
  1096  0E2E                     	;# 
  1097  0E2F                     	;# 
  1098  0E30                     	;# 
  1099  0E31                     	;# 
  1100  0E32                     	;# 
  1101  0E33                     	;# 
  1102  0E34                     	;# 
  1103  0E35                     	;# 
  1104  0E36                     	;# 
  1105  0E37                     	;# 
  1106  0E8F                     	;# 
  1107  0E90                     	;# 
  1108  0E91                     	;# 
  1109  0E92                     	;# 
  1110  0E93                     	;# 
  1111  0E94                     	;# 
  1112  0E95                     	;# 
  1113  0E96                     	;# 
  1114  0E97                     	;# 
  1115  0E9C                     	;# 
  1116  0E9D                     	;# 
  1117  0E9E                     	;# 
  1118  0EA1                     	;# 
  1119  0EA2                     	;# 
  1120  0EA3                     	;# 
  1121  0EA4                     	;# 
  1122  0EA5                     	;# 
  1123  0EA9                     	;# 
  1124  0EAA                     	;# 
  1125  0EAB                     	;# 
  1126  0EAC                     	;# 
  1127  0EB1                     	;# 
  1128  0EB2                     	;# 
  1129  0EB3                     	;# 
  1130  0EB8                     	;# 
  1131  0EB9                     	;# 
  1132  0EBA                     	;# 
  1133  0EBB                     	;# 
  1134  0EBC                     	;# 
  1135  0EBD                     	;# 
  1136  0EBE                     	;# 
  1137  0EC3                     	;# 
  1138  0EC5                     	;# 
  1139  0EC6                     	;# 
  1140  0EC7                     	;# 
  1141  0EC8                     	;# 
  1142  0EC9                     	;# 
  1143  0ECA                     	;# 
  1144  0ECB                     	;# 
  1145  0ECC                     	;# 
  1146  0F10                     	;# 
  1147  0F11                     	;# 
  1148  0F12                     	;# 
  1149  0F13                     	;# 
  1150  0F14                     	;# 
  1151  0F15                     	;# 
  1152  0F16                     	;# 
  1153  0F17                     	;# 
  1154  0F18                     	;# 
  1155  0F19                     	;# 
  1156  0F1A                     	;# 
  1157  0F1B                     	;# 
  1158  0F1C                     	;# 
  1159  0F1D                     	;# 
  1160  0F1E                     	;# 
  1161  0F1F                     	;# 
  1162  0F20                     	;# 
  1163  0F21                     	;# 
  1164  0F22                     	;# 
  1165  0F23                     	;# 
  1166  0F24                     	;# 
  1167  0F25                     	;# 
  1168  0F26                     	;# 
  1169  0F27                     	;# 
  1170  0F28                     	;# 
  1171  0F29                     	;# 
  1172  0F2A                     	;# 
  1173  0F2B                     	;# 
  1174  0F2C                     	;# 
  1175  0F2D                     	;# 
  1176  0F2E                     	;# 
  1177  0F2F                     	;# 
  1178  0F30                     	;# 
  1179  0F31                     	;# 
  1180  0F32                     	;# 
  1181  0F38                     	;# 
  1182  0F39                     	;# 
  1183  0F3A                     	;# 
  1184  0F3B                     	;# 
  1185  0F3C                     	;# 
  1186  0F3D                     	;# 
  1187  0F3E                     	;# 
  1188  0F3F                     	;# 
  1189  0F40                     	;# 
  1190  0F41                     	;# 
  1191  0F43                     	;# 
  1192  0F44                     	;# 
  1193  0F45                     	;# 
  1194  0F46                     	;# 
  1195  0F47                     	;# 
  1196  0F48                     	;# 
  1197  0F49                     	;# 
  1198  0F4A                     	;# 
  1199  0F4B                     	;# 
  1200  0F4C                     	;# 
  1201  0F4E                     	;# 
  1202  0F4F                     	;# 
  1203  0F50                     	;# 
  1204  0F51                     	;# 
  1205  0F52                     	;# 
  1206  0F53                     	;# 
  1207  0F54                     	;# 
  1208  0F55                     	;# 
  1209  0F56                     	;# 
  1210  0F57                     	;# 
  1211  0F59                     	;# 
  1212  0F5A                     	;# 
  1213  0F5B                     	;# 
  1214  0F5C                     	;# 
  1215  0F5D                     	;# 
  1216  0F61                     	;# 
  1217  0F62                     	;# 
  1218  0F64                     	;# 
  1219  0F65                     	;# 
  1220  0F66                     	;# 
  1221  0F67                     	;# 
  1222  0F68                     	;# 
  1223  0F69                     	;# 
  1224  0F6A                     	;# 
  1225  0F6B                     	;# 
  1226  0F6C                     	;# 
  1227  0F6D                     	;# 
  1228  0FE4                     	;# 
  1229  0FE5                     	;# 
  1230  0FE6                     	;# 
  1231  0FE7                     	;# 
  1232  0FE8                     	;# 
  1233  0FE9                     	;# 
  1234  0FEA                     	;# 
  1235  0FEB                     	;# 
  1236  0FED                     	;# 
  1237  0FEE                     	;# 
  1238  0FEF                     	;# 
  1239  0000                     	;# 
  1240  0001                     	;# 
  1241  0002                     	;# 
  1242  0003                     	;# 
  1243  0004                     	;# 
  1244  0005                     	;# 
  1245  0006                     	;# 
  1246  0007                     	;# 
  1247  0008                     	;# 
  1248  0009                     	;# 
  1249  000A                     	;# 
  1250  000B                     	;# 
  1251  000C                     	;# 
  1252  000D                     	;# 
  1253  000E                     	;# 
  1254  000F                     	;# 
  1255  0010                     	;# 
  1256  0011                     	;# 
  1257  0012                     	;# 
  1258  0013                     	;# 
  1259  0014                     	;# 
  1260  0015                     	;# 
  1261  0016                     	;# 
  1262  0017                     	;# 
  1263  0018                     	;# 
  1264  0019                     	;# 
  1265  001A                     	;# 
  1266  001C                     	;# 
  1267  001C                     	;# 
  1268  001D                     	;# 
  1269  001D                     	;# 
  1270  001E                     	;# 
  1271  001F                     	;# 
  1272  008C                     	;# 
  1273  008C                     	;# 
  1274  008D                     	;# 
  1275  008E                     	;# 
  1276  008E                     	;# 
  1277  008F                     	;# 
  1278  0090                     	;# 
  1279  0090                     	;# 
  1280  0091                     	;# 
  1281  0093                     	;# 
  1282  0094                     	;# 
  1283  0095                     	;# 
  1284  0096                     	;# 
  1285  0097                     	;# 
  1286  0098                     	;# 
  1287  0099                     	;# 
  1288  009A                     	;# 
  1289  009B                     	;# 
  1290  009C                     	;# 
  1291  009D                     	;# 
  1292  009E                     	;# 
  1293  010C                     	;# 
  1294  010D                     	;# 
  1295  010E                     	;# 
  1296  010E                     	;# 
  1297  010F                     	;# 
  1298  0110                     	;# 
  1299  0110                     	;# 
  1300  0111                     	;# 
  1301  0112                     	;# 
  1302  0112                     	;# 
  1303  0113                     	;# 
  1304  0114                     	;# 
  1305  0114                     	;# 
  1306  0115                     	;# 
  1307  0116                     	;# 
  1308  0116                     	;# 
  1309  0117                     	;# 
  1310  0119                     	;# 
  1311  0119                     	;# 
  1312  0119                     	;# 
  1313  011A                     	;# 
  1314  011A                     	;# 
  1315  011A                     	;# 
  1316  011B                     	;# 
  1317  011B                     	;# 
  1318  011B                     	;# 
  1319  011B                     	;# 
  1320  011B                     	;# 
  1321  011C                     	;# 
  1322  011C                     	;# 
  1323  011C                     	;# 
  1324  011D                     	;# 
  1325  011D                     	;# 
  1326  011D                     	;# 
  1327  011E                     	;# 
  1328  011E                     	;# 
  1329  011E                     	;# 
  1330  011F                     	;# 
  1331  011F                     	;# 
  1332  011F                     	;# 
  1333  011F                     	;# 
  1334  011F                     	;# 
  1335  018C                     	;# 
  1336  018D                     	;# 
  1337  018E                     	;# 
  1338  018F                     	;# 
  1339  0190                     	;# 
  1340  0191                     	;# 
  1341  0192                     	;# 
  1342  0196                     	;# 
  1343  0197                     	;# 
  1344  0198                     	;# 
  1345  0199                     	;# 
  1346  019A                     	;# 
  1347  019B                     	;# 
  1348  019C                     	;# 
  1349  020C                     	;# 
  1350  020C                     	;# 
  1351  020D                     	;# 
  1352  020E                     	;# 
  1353  020F                     	;# 
  1354  020F                     	;# 
  1355  0210                     	;# 
  1356  0210                     	;# 
  1357  0211                     	;# 
  1358  0211                     	;# 
  1359  0212                     	;# 
  1360  0212                     	;# 
  1361  0213                     	;# 
  1362  0214                     	;# 
  1363  0215                     	;# 
  1364  0215                     	;# 
  1365  0216                     	;# 
  1366  0216                     	;# 
  1367  0217                     	;# 
  1368  0217                     	;# 
  1369  0218                     	;# 
  1370  0218                     	;# 
  1371  0219                     	;# 
  1372  021A                     	;# 
  1373  021B                     	;# 
  1374  021B                     	;# 
  1375  021C                     	;# 
  1376  021C                     	;# 
  1377  021D                     	;# 
  1378  021D                     	;# 
  1379  021E                     	;# 
  1380  021F                     	;# 
  1381  028C                     	;# 
  1382  028C                     	;# 
  1383  028D                     	;# 
  1384  028D                     	;# 
  1385  028E                     	;# 
  1386  028F                     	;# 
  1387  0290                     	;# 
  1388  0290                     	;# 
  1389  0291                     	;# 
  1390  0292                     	;# 
  1391  0292                     	;# 
  1392  0293                     	;# 
  1393  0293                     	;# 
  1394  0294                     	;# 
  1395  0295                     	;# 
  1396  0296                     	;# 
  1397  0296                     	;# 
  1398  0297                     	;# 
  1399  0298                     	;# 
  1400  0298                     	;# 
  1401  0299                     	;# 
  1402  0299                     	;# 
  1403  029A                     	;# 
  1404  029B                     	;# 
  1405  029C                     	;# 
  1406  029C                     	;# 
  1407  029D                     	;# 
  1408  030C                     	;# 
  1409  030C                     	;# 
  1410  030D                     	;# 
  1411  030E                     	;# 
  1412  030F                     	;# 
  1413  0310                     	;# 
  1414  0310                     	;# 
  1415  0311                     	;# 
  1416  0312                     	;# 
  1417  0313                     	;# 
  1418  0314                     	;# 
  1419  0314                     	;# 
  1420  0315                     	;# 
  1421  0316                     	;# 
  1422  0317                     	;# 
  1423  0318                     	;# 
  1424  0318                     	;# 
  1425  0319                     	;# 
  1426  031A                     	;# 
  1427  031B                     	;# 
  1428  031C                     	;# 
  1429  031C                     	;# 
  1430  031D                     	;# 
  1431  031E                     	;# 
  1432  031F                     	;# 
  1433  038C                     	;# 
  1434  038C                     	;# 
  1435  038D                     	;# 
  1436  038E                     	;# 
  1437  0390                     	;# 
  1438  0390                     	;# 
  1439  0391                     	;# 
  1440  0392                     	;# 
  1441  040C                     	;# 
  1442  040D                     	;# 
  1443  040E                     	;# 
  1444  040F                     	;# 
  1445  0410                     	;# 
  1446  0411                     	;# 
  1447  0416                     	;# 
  1448  0416                     	;# 
  1449  0417                     	;# 
  1450  0418                     	;# 
  1451  0418                     	;# 
  1452  0419                     	;# 
  1453  041A                     	;# 
  1454  041A                     	;# 
  1455  041B                     	;# 
  1456  041C                     	;# 
  1457  041C                     	;# 
  1458  041D                     	;# 
  1459  041E                     	;# 
  1460  041F                     	;# 
  1461  048C                     	;# 
  1462  048C                     	;# 
  1463  048D                     	;# 
  1464  048E                     	;# 
  1465  048F                     	;# 
  1466  048F                     	;# 
  1467  0490                     	;# 
  1468  0491                     	;# 
  1469  0492                     	;# 
  1470  0492                     	;# 
  1471  0493                     	;# 
  1472  0494                     	;# 
  1473  0495                     	;# 
  1474  0495                     	;# 
  1475  0496                     	;# 
  1476  0497                     	;# 
  1477  0498                     	;# 
  1478  0499                     	;# 
  1479  049A                     	;# 
  1480  049B                     	;# 
  1481  049C                     	;# 
  1482  049D                     	;# 
  1483  050C                     	;# 
  1484  050C                     	;# 
  1485  050D                     	;# 
  1486  050E                     	;# 
  1487  050F                     	;# 
  1488  050F                     	;# 
  1489  0510                     	;# 
  1490  0511                     	;# 
  1491  0512                     	;# 
  1492  0512                     	;# 
  1493  0513                     	;# 
  1494  0514                     	;# 
  1495  0515                     	;# 
  1496  0515                     	;# 
  1497  0516                     	;# 
  1498  0517                     	;# 
  1499  0518                     	;# 
  1500  0519                     	;# 
  1501  051A                     	;# 
  1502  051B                     	;# 
  1503  051C                     	;# 
  1504  051D                     	;# 
  1505  058C                     	;# 
  1506  058C                     	;# 
  1507  058D                     	;# 
  1508  058E                     	;# 
  1509  058F                     	;# 
  1510  058F                     	;# 
  1511  0590                     	;# 
  1512  0591                     	;# 
  1513  0592                     	;# 
  1514  0593                     	;# 
  1515  060C                     	;# 
  1516  060D                     	;# 
  1517  060E                     	;# 
  1518  060F                     	;# 
  1519  0610                     	;# 
  1520  0611                     	;# 
  1521  0612                     	;# 
  1522  0613                     	;# 
  1523  0614                     	;# 
  1524  0616                     	;# 
  1525  0617                     	;# 
  1526  0618                     	;# 
  1527  0619                     	;# 
  1528  061A                     	;# 
  1529  061B                     	;# 
  1530  061C                     	;# 
  1531  061D                     	;# 
  1532  061E                     	;# 
  1533  068C                     	;# 
  1534  068D                     	;# 
  1535  068E                     	;# 
  1536  068F                     	;# 
  1537  0690                     	;# 
  1538  0691                     	;# 
  1539  0692                     	;# 
  1540  0693                     	;# 
  1541  0694                     	;# 
  1542  070C                     	;# 
  1543  070D                     	;# 
  1544  070E                     	;# 
  1545  070F                     	;# 
  1546  0710                     	;# 
  1547  0711                     	;# 
  1548  0712                     	;# 
  1549  0713                     	;# 
  1550  0714                     	;# 
  1551  0716                     	;# 
  1552  0717                     	;# 
  1553  0718                     	;# 
  1554  0719                     	;# 
  1555  071A                     	;# 
  1556  071B                     	;# 
  1557  071C                     	;# 
  1558  071D                     	;# 
  1559  071E                     	;# 
  1560  0796                     	;# 
  1561  0797                     	;# 
  1562  0798                     	;# 
  1563  0799                     	;# 
  1564  079A                     	;# 
  1565  079B                     	;# 
  1566  080C                     	;# 
  1567  080D                     	;# 
  1568  080E                     	;# 
  1569  080F                     	;# 
  1570  0810                     	;# 
  1571  0811                     	;# 
  1572  0812                     	;# 
  1573  0813                     	;# 
  1574  0814                     	;# 
  1575  081A                     	;# 
  1576  081B                     	;# 
  1577  081C                     	;# 
  1578  081D                     	;# 
  1579  081E                     	;# 
  1580  081F                     	;# 
  1581  088C                     	;# 
  1582  088D                     	;# 
  1583  088E                     	;# 
  1584  088F                     	;# 
  1585  0890                     	;# 
  1586  0891                     	;# 
  1587  0892                     	;# 
  1588  0893                     	;# 
  1589  0895                     	;# 
  1590  0896                     	;# 
  1591  0897                     	;# 
  1592  0898                     	;# 
  1593  0899                     	;# 
  1594  089A                     	;# 
  1595  089B                     	;# 
  1596  090C                     	;# 
  1597  090E                     	;# 
  1598  090F                     	;# 
  1599  091F                     	;# 
  1600  091F                     	;# 
  1601  098F                     	;# 
  1602  098F                     	;# 
  1603  0990                     	;# 
  1604  0991                     	;# 
  1605  0992                     	;# 
  1606  0993                     	;# 
  1607  0994                     	;# 
  1608  0995                     	;# 
  1609  0996                     	;# 
  1610  0997                     	;# 
  1611  0E0F                     	;# 
  1612  0E10                     	;# 
  1613  0E11                     	;# 
  1614  0E12                     	;# 
  1615  0E13                     	;# 
  1616  0E14                     	;# 
  1617  0E15                     	;# 
  1618  0E16                     	;# 
  1619  0E17                     	;# 
  1620  0E18                     	;# 
  1621  0E19                     	;# 
  1622  0E1A                     	;# 
  1623  0E1B                     	;# 
  1624  0E1C                     	;# 
  1625  0E1D                     	;# 
  1626  0E1E                     	;# 
  1627  0E1F                     	;# 
  1628  0E20                     	;# 
  1629  0E21                     	;# 
  1630  0E22                     	;# 
  1631  0E23                     	;# 
  1632  0E24                     	;# 
  1633  0E25                     	;# 
  1634  0E26                     	;# 
  1635  0E27                     	;# 
  1636  0E28                     	;# 
  1637  0E29                     	;# 
  1638  0E2A                     	;# 
  1639  0E2B                     	;# 
  1640  0E2C                     	;# 
  1641  0E2D                     	;# 
  1642  0E2E                     	;# 
  1643  0E2F                     	;# 
  1644  0E30                     	;# 
  1645  0E31                     	;# 
  1646  0E32                     	;# 
  1647  0E33                     	;# 
  1648  0E34                     	;# 
  1649  0E35                     	;# 
  1650  0E36                     	;# 
  1651  0E37                     	;# 
  1652  0E8F                     	;# 
  1653  0E90                     	;# 
  1654  0E91                     	;# 
  1655  0E92                     	;# 
  1656  0E93                     	;# 
  1657  0E94                     	;# 
  1658  0E95                     	;# 
  1659  0E96                     	;# 
  1660  0E97                     	;# 
  1661  0E9C                     	;# 
  1662  0E9D                     	;# 
  1663  0E9E                     	;# 
  1664  0EA1                     	;# 
  1665  0EA2                     	;# 
  1666  0EA3                     	;# 
  1667  0EA4                     	;# 
  1668  0EA5                     	;# 
  1669  0EA9                     	;# 
  1670  0EAA                     	;# 
  1671  0EAB                     	;# 
  1672  0EAC                     	;# 
  1673  0EB1                     	;# 
  1674  0EB2                     	;# 
  1675  0EB3                     	;# 
  1676  0EB8                     	;# 
  1677  0EB9                     	;# 
  1678  0EBA                     	;# 
  1679  0EBB                     	;# 
  1680  0EBC                     	;# 
  1681  0EBD                     	;# 
  1682  0EBE                     	;# 
  1683  0EC3                     	;# 
  1684  0EC5                     	;# 
  1685  0EC6                     	;# 
  1686  0EC7                     	;# 
  1687  0EC8                     	;# 
  1688  0EC9                     	;# 
  1689  0ECA                     	;# 
  1690  0ECB                     	;# 
  1691  0ECC                     	;# 
  1692  0F10                     	;# 
  1693  0F11                     	;# 
  1694  0F12                     	;# 
  1695  0F13                     	;# 
  1696  0F14                     	;# 
  1697  0F15                     	;# 
  1698  0F16                     	;# 
  1699  0F17                     	;# 
  1700  0F18                     	;# 
  1701  0F19                     	;# 
  1702  0F1A                     	;# 
  1703  0F1B                     	;# 
  1704  0F1C                     	;# 
  1705  0F1D                     	;# 
  1706  0F1E                     	;# 
  1707  0F1F                     	;# 
  1708  0F20                     	;# 
  1709  0F21                     	;# 
  1710  0F22                     	;# 
  1711  0F23                     	;# 
  1712  0F24                     	;# 
  1713  0F25                     	;# 
  1714  0F26                     	;# 
  1715  0F27                     	;# 
  1716  0F28                     	;# 
  1717  0F29                     	;# 
  1718  0F2A                     	;# 
  1719  0F2B                     	;# 
  1720  0F2C                     	;# 
  1721  0F2D                     	;# 
  1722  0F2E                     	;# 
  1723  0F2F                     	;# 
  1724  0F30                     	;# 
  1725  0F31                     	;# 
  1726  0F32                     	;# 
  1727  0F38                     	;# 
  1728  0F39                     	;# 
  1729  0F3A                     	;# 
  1730  0F3B                     	;# 
  1731  0F3C                     	;# 
  1732  0F3D                     	;# 
  1733  0F3E                     	;# 
  1734  0F3F                     	;# 
  1735  0F40                     	;# 
  1736  0F41                     	;# 
  1737  0F43                     	;# 
  1738  0F44                     	;# 
  1739  0F45                     	;# 
  1740  0F46                     	;# 
  1741  0F47                     	;# 
  1742  0F48                     	;# 
  1743  0F49                     	;# 
  1744  0F4A                     	;# 
  1745  0F4B                     	;# 
  1746  0F4C                     	;# 
  1747  0F4E                     	;# 
  1748  0F4F                     	;# 
  1749  0F50                     	;# 
  1750  0F51                     	;# 
  1751  0F52                     	;# 
  1752  0F53                     	;# 
  1753  0F54                     	;# 
  1754  0F55                     	;# 
  1755  0F56                     	;# 
  1756  0F57                     	;# 
  1757  0F59                     	;# 
  1758  0F5A                     	;# 
  1759  0F5B                     	;# 
  1760  0F5C                     	;# 
  1761  0F5D                     	;# 
  1762  0F61                     	;# 
  1763  0F62                     	;# 
  1764  0F64                     	;# 
  1765  0F65                     	;# 
  1766  0F66                     	;# 
  1767  0F67                     	;# 
  1768  0F68                     	;# 
  1769  0F69                     	;# 
  1770  0F6A                     	;# 
  1771  0F6B                     	;# 
  1772  0F6C                     	;# 
  1773  0F6D                     	;# 
  1774  0FE4                     	;# 
  1775  0FE5                     	;# 
  1776  0FE6                     	;# 
  1777  0FE7                     	;# 
  1778  0FE8                     	;# 
  1779  0FE9                     	;# 
  1780  0FEA                     	;# 
  1781  0FEB                     	;# 
  1782  0FED                     	;# 
  1783  0FEE                     	;# 
  1784  0FEF                     	;# 
  1785  0000                     	;# 
  1786  0001                     	;# 
  1787  0002                     	;# 
  1788  0003                     	;# 
  1789  0004                     	;# 
  1790  0005                     	;# 
  1791  0006                     	;# 
  1792  0007                     	;# 
  1793  0008                     	;# 
  1794  0009                     	;# 
  1795  000A                     	;# 
  1796  000B                     	;# 
  1797  000C                     	;# 
  1798  000D                     	;# 
  1799  000E                     	;# 
  1800  000F                     	;# 
  1801  0010                     	;# 
  1802  0011                     	;# 
  1803  0012                     	;# 
  1804  0013                     	;# 
  1805  0014                     	;# 
  1806  0015                     	;# 
  1807  0016                     	;# 
  1808  0017                     	;# 
  1809  0018                     	;# 
  1810  0019                     	;# 
  1811  001A                     	;# 
  1812  001C                     	;# 
  1813  001C                     	;# 
  1814  001D                     	;# 
  1815  001D                     	;# 
  1816  001E                     	;# 
  1817  001F                     	;# 
  1818  008C                     	;# 
  1819  008C                     	;# 
  1820  008D                     	;# 
  1821  008E                     	;# 
  1822  008E                     	;# 
  1823  008F                     	;# 
  1824  0090                     	;# 
  1825  0090                     	;# 
  1826  0091                     	;# 
  1827  0093                     	;# 
  1828  0094                     	;# 
  1829  0095                     	;# 
  1830  0096                     	;# 
  1831  0097                     	;# 
  1832  0098                     	;# 
  1833  0099                     	;# 
  1834  009A                     	;# 
  1835  009B                     	;# 
  1836  009C                     	;# 
  1837  009D                     	;# 
  1838  009E                     	;# 
  1839  010C                     	;# 
  1840  010D                     	;# 
  1841  010E                     	;# 
  1842  010E                     	;# 
  1843  010F                     	;# 
  1844  0110                     	;# 
  1845  0110                     	;# 
  1846  0111                     	;# 
  1847  0112                     	;# 
  1848  0112                     	;# 
  1849  0113                     	;# 
  1850  0114                     	;# 
  1851  0114                     	;# 
  1852  0115                     	;# 
  1853  0116                     	;# 
  1854  0116                     	;# 
  1855  0117                     	;# 
  1856  0119                     	;# 
  1857  0119                     	;# 
  1858  0119                     	;# 
  1859  011A                     	;# 
  1860  011A                     	;# 
  1861  011A                     	;# 
  1862  011B                     	;# 
  1863  011B                     	;# 
  1864  011B                     	;# 
  1865  011B                     	;# 
  1866  011B                     	;# 
  1867  011C                     	;# 
  1868  011C                     	;# 
  1869  011C                     	;# 
  1870  011D                     	;# 
  1871  011D                     	;# 
  1872  011D                     	;# 
  1873  011E                     	;# 
  1874  011E                     	;# 
  1875  011E                     	;# 
  1876  011F                     	;# 
  1877  011F                     	;# 
  1878  011F                     	;# 
  1879  011F                     	;# 
  1880  011F                     	;# 
  1881  018C                     	;# 
  1882  018D                     	;# 
  1883  018E                     	;# 
  1884  018F                     	;# 
  1885  0190                     	;# 
  1886  0191                     	;# 
  1887  0192                     	;# 
  1888  0196                     	;# 
  1889  0197                     	;# 
  1890  0198                     	;# 
  1891  0199                     	;# 
  1892  019A                     	;# 
  1893  019B                     	;# 
  1894  019C                     	;# 
  1895  020C                     	;# 
  1896  020C                     	;# 
  1897  020D                     	;# 
  1898  020E                     	;# 
  1899  020F                     	;# 
  1900  020F                     	;# 
  1901  0210                     	;# 
  1902  0210                     	;# 
  1903  0211                     	;# 
  1904  0211                     	;# 
  1905  0212                     	;# 
  1906  0212                     	;# 
  1907  0213                     	;# 
  1908  0214                     	;# 
  1909  0215                     	;# 
  1910  0215                     	;# 
  1911  0216                     	;# 
  1912  0216                     	;# 
  1913  0217                     	;# 
  1914  0217                     	;# 
  1915  0218                     	;# 
  1916  0218                     	;# 
  1917  0219                     	;# 
  1918  021A                     	;# 
  1919  021B                     	;# 
  1920  021B                     	;# 
  1921  021C                     	;# 
  1922  021C                     	;# 
  1923  021D                     	;# 
  1924  021D                     	;# 
  1925  021E                     	;# 
  1926  021F                     	;# 
  1927  028C                     	;# 
  1928  028C                     	;# 
  1929  028D                     	;# 
  1930  028D                     	;# 
  1931  028E                     	;# 
  1932  028F                     	;# 
  1933  0290                     	;# 
  1934  0290                     	;# 
  1935  0291                     	;# 
  1936  0292                     	;# 
  1937  0292                     	;# 
  1938  0293                     	;# 
  1939  0293                     	;# 
  1940  0294                     	;# 
  1941  0295                     	;# 
  1942  0296                     	;# 
  1943  0296                     	;# 
  1944  0297                     	;# 
  1945  0298                     	;# 
  1946  0298                     	;# 
  1947  0299                     	;# 
  1948  0299                     	;# 
  1949  029A                     	;# 
  1950  029B                     	;# 
  1951  029C                     	;# 
  1952  029C                     	;# 
  1953  029D                     	;# 
  1954  030C                     	;# 
  1955  030C                     	;# 
  1956  030D                     	;# 
  1957  030E                     	;# 
  1958  030F                     	;# 
  1959  0310                     	;# 
  1960  0310                     	;# 
  1961  0311                     	;# 
  1962  0312                     	;# 
  1963  0313                     	;# 
  1964  0314                     	;# 
  1965  0314                     	;# 
  1966  0315                     	;# 
  1967  0316                     	;# 
  1968  0317                     	;# 
  1969  0318                     	;# 
  1970  0318                     	;# 
  1971  0319                     	;# 
  1972  031A                     	;# 
  1973  031B                     	;# 
  1974  031C                     	;# 
  1975  031C                     	;# 
  1976  031D                     	;# 
  1977  031E                     	;# 
  1978  031F                     	;# 
  1979  038C                     	;# 
  1980  038C                     	;# 
  1981  038D                     	;# 
  1982  038E                     	;# 
  1983  0390                     	;# 
  1984  0390                     	;# 
  1985  0391                     	;# 
  1986  0392                     	;# 
  1987  040C                     	;# 
  1988  040D                     	;# 
  1989  040E                     	;# 
  1990  040F                     	;# 
  1991  0410                     	;# 
  1992  0411                     	;# 
  1993  0416                     	;# 
  1994  0416                     	;# 
  1995  0417                     	;# 
  1996  0418                     	;# 
  1997  0418                     	;# 
  1998  0419                     	;# 
  1999  041A                     	;# 
  2000  041A                     	;# 
  2001  041B                     	;# 
  2002  041C                     	;# 
  2003  041C                     	;# 
  2004  041D                     	;# 
  2005  041E                     	;# 
  2006  041F                     	;# 
  2007  048C                     	;# 
  2008  048C                     	;# 
  2009  048D                     	;# 
  2010  048E                     	;# 
  2011  048F                     	;# 
  2012  048F                     	;# 
  2013  0490                     	;# 
  2014  0491                     	;# 
  2015  0492                     	;# 
  2016  0492                     	;# 
  2017  0493                     	;# 
  2018  0494                     	;# 
  2019  0495                     	;# 
  2020  0495                     	;# 
  2021  0496                     	;# 
  2022  0497                     	;# 
  2023  0498                     	;# 
  2024  0499                     	;# 
  2025  049A                     	;# 
  2026  049B                     	;# 
  2027  049C                     	;# 
  2028  049D                     	;# 
  2029  050C                     	;# 
  2030  050C                     	;# 
  2031  050D                     	;# 
  2032  050E                     	;# 
  2033  050F                     	;# 
  2034  050F                     	;# 
  2035  0510                     	;# 
  2036  0511                     	;# 
  2037  0512                     	;# 
  2038  0512                     	;# 
  2039  0513                     	;# 
  2040  0514                     	;# 
  2041  0515                     	;# 
  2042  0515                     	;# 
  2043  0516                     	;# 
  2044  0517                     	;# 
  2045  0518                     	;# 
  2046  0519                     	;# 
  2047  051A                     	;# 
  2048  051B                     	;# 
  2049  051C                     	;# 
  2050  051D                     	;# 
  2051  058C                     	;# 
  2052  058C                     	;# 
  2053  058D                     	;# 
  2054  058E                     	;# 
  2055  058F                     	;# 
  2056  058F                     	;# 
  2057  0590                     	;# 
  2058  0591                     	;# 
  2059  0592                     	;# 
  2060  0593                     	;# 
  2061  060C                     	;# 
  2062  060D                     	;# 
  2063  060E                     	;# 
  2064  060F                     	;# 
  2065  0610                     	;# 
  2066  0611                     	;# 
  2067  0612                     	;# 
  2068  0613                     	;# 
  2069  0614                     	;# 
  2070  0616                     	;# 
  2071  0617                     	;# 
  2072  0618                     	;# 
  2073  0619                     	;# 
  2074  061A                     	;# 
  2075  061B                     	;# 
  2076  061C                     	;# 
  2077  061D                     	;# 
  2078  061E                     	;# 
  2079  068C                     	;# 
  2080  068D                     	;# 
  2081  068E                     	;# 
  2082  068F                     	;# 
  2083  0690                     	;# 
  2084  0691                     	;# 
  2085  0692                     	;# 
  2086  0693                     	;# 
  2087  0694                     	;# 
  2088  070C                     	;# 
  2089  070D                     	;# 
  2090  070E                     	;# 
  2091  070F                     	;# 
  2092  0710                     	;# 
  2093  0711                     	;# 
  2094  0712                     	;# 
  2095  0713                     	;# 
  2096  0714                     	;# 
  2097  0716                     	;# 
  2098  0717                     	;# 
  2099  0718                     	;# 
  2100  0719                     	;# 
  2101  071A                     	;# 
  2102  071B                     	;# 
  2103  071C                     	;# 
  2104  071D                     	;# 
  2105  071E                     	;# 
  2106  0796                     	;# 
  2107  0797                     	;# 
  2108  0798                     	;# 
  2109  0799                     	;# 
  2110  079A                     	;# 
  2111  079B                     	;# 
  2112  080C                     	;# 
  2113  080D                     	;# 
  2114  080E                     	;# 
  2115  080F                     	;# 
  2116  0810                     	;# 
  2117  0811                     	;# 
  2118  0812                     	;# 
  2119  0813                     	;# 
  2120  0814                     	;# 
  2121  081A                     	;# 
  2122  081B                     	;# 
  2123  081C                     	;# 
  2124  081D                     	;# 
  2125  081E                     	;# 
  2126  081F                     	;# 
  2127  088C                     	;# 
  2128  088D                     	;# 
  2129  088E                     	;# 
  2130  088F                     	;# 
  2131  0890                     	;# 
  2132  0891                     	;# 
  2133  0892                     	;# 
  2134  0893                     	;# 
  2135  0895                     	;# 
  2136  0896                     	;# 
  2137  0897                     	;# 
  2138  0898                     	;# 
  2139  0899                     	;# 
  2140  089A                     	;# 
  2141  089B                     	;# 
  2142  090C                     	;# 
  2143  090E                     	;# 
  2144  090F                     	;# 
  2145  091F                     	;# 
  2146  091F                     	;# 
  2147  098F                     	;# 
  2148  098F                     	;# 
  2149  0990                     	;# 
  2150  0991                     	;# 
  2151  0992                     	;# 
  2152  0993                     	;# 
  2153  0994                     	;# 
  2154  0995                     	;# 
  2155  0996                     	;# 
  2156  0997                     	;# 
  2157  0E0F                     	;# 
  2158  0E10                     	;# 
  2159  0E11                     	;# 
  2160  0E12                     	;# 
  2161  0E13                     	;# 
  2162  0E14                     	;# 
  2163  0E15                     	;# 
  2164  0E16                     	;# 
  2165  0E17                     	;# 
  2166  0E18                     	;# 
  2167  0E19                     	;# 
  2168  0E1A                     	;# 
  2169  0E1B                     	;# 
  2170  0E1C                     	;# 
  2171  0E1D                     	;# 
  2172  0E1E                     	;# 
  2173  0E1F                     	;# 
  2174  0E20                     	;# 
  2175  0E21                     	;# 
  2176  0E22                     	;# 
  2177  0E23                     	;# 
  2178  0E24                     	;# 
  2179  0E25                     	;# 
  2180  0E26                     	;# 
  2181  0E27                     	;# 
  2182  0E28                     	;# 
  2183  0E29                     	;# 
  2184  0E2A                     	;# 
  2185  0E2B                     	;# 
  2186  0E2C                     	;# 
  2187  0E2D                     	;# 
  2188  0E2E                     	;# 
  2189  0E2F                     	;# 
  2190  0E30                     	;# 
  2191  0E31                     	;# 
  2192  0E32                     	;# 
  2193  0E33                     	;# 
  2194  0E34                     	;# 
  2195  0E35                     	;# 
  2196  0E36                     	;# 
  2197  0E37                     	;# 
  2198  0E8F                     	;# 
  2199  0E90                     	;# 
  2200  0E91                     	;# 
  2201  0E92                     	;# 
  2202  0E93                     	;# 
  2203  0E94                     	;# 
  2204  0E95                     	;# 
  2205  0E96                     	;# 
  2206  0E97                     	;# 
  2207  0E9C                     	;# 
  2208  0E9D                     	;# 
  2209  0E9E                     	;# 
  2210  0EA1                     	;# 
  2211  0EA2                     	;# 
  2212  0EA3                     	;# 
  2213  0EA4                     	;# 
  2214  0EA5                     	;# 
  2215  0EA9                     	;# 
  2216  0EAA                     	;# 
  2217  0EAB                     	;# 
  2218  0EAC                     	;# 
  2219  0EB1                     	;# 
  2220  0EB2                     	;# 
  2221  0EB3                     	;# 
  2222  0EB8                     	;# 
  2223  0EB9                     	;# 
  2224  0EBA                     	;# 
  2225  0EBB                     	;# 
  2226  0EBC                     	;# 
  2227  0EBD                     	;# 
  2228  0EBE                     	;# 
  2229  0EC3                     	;# 
  2230  0EC5                     	;# 
  2231  0EC6                     	;# 
  2232  0EC7                     	;# 
  2233  0EC8                     	;# 
  2234  0EC9                     	;# 
  2235  0ECA                     	;# 
  2236  0ECB                     	;# 
  2237  0ECC                     	;# 
  2238  0F10                     	;# 
  2239  0F11                     	;# 
  2240  0F12                     	;# 
  2241  0F13                     	;# 
  2242  0F14                     	;# 
  2243  0F15                     	;# 
  2244  0F16                     	;# 
  2245  0F17                     	;# 
  2246  0F18                     	;# 
  2247  0F19                     	;# 
  2248  0F1A                     	;# 
  2249  0F1B                     	;# 
  2250  0F1C                     	;# 
  2251  0F1D                     	;# 
  2252  0F1E                     	;# 
  2253  0F1F                     	;# 
  2254  0F20                     	;# 
  2255  0F21                     	;# 
  2256  0F22                     	;# 
  2257  0F23                     	;# 
  2258  0F24                     	;# 
  2259  0F25                     	;# 
  2260  0F26                     	;# 
  2261  0F27                     	;# 
  2262  0F28                     	;# 
  2263  0F29                     	;# 
  2264  0F2A                     	;# 
  2265  0F2B                     	;# 
  2266  0F2C                     	;# 
  2267  0F2D                     	;# 
  2268  0F2E                     	;# 
  2269  0F2F                     	;# 
  2270  0F30                     	;# 
  2271  0F31                     	;# 
  2272  0F32                     	;# 
  2273  0F38                     	;# 
  2274  0F39                     	;# 
  2275  0F3A                     	;# 
  2276  0F3B                     	;# 
  2277  0F3C                     	;# 
  2278  0F3D                     	;# 
  2279  0F3E                     	;# 
  2280  0F3F                     	;# 
  2281  0F40                     	;# 
  2282  0F41                     	;# 
  2283  0F43                     	;# 
  2284  0F44                     	;# 
  2285  0F45                     	;# 
  2286  0F46                     	;# 
  2287  0F47                     	;# 
  2288  0F48                     	;# 
  2289  0F49                     	;# 
  2290  0F4A                     	;# 
  2291  0F4B                     	;# 
  2292  0F4C                     	;# 
  2293  0F4E                     	;# 
  2294  0F4F                     	;# 
  2295  0F50                     	;# 
  2296  0F51                     	;# 
  2297  0F52                     	;# 
  2298  0F53                     	;# 
  2299  0F54                     	;# 
  2300  0F55                     	;# 
  2301  0F56                     	;# 
  2302  0F57                     	;# 
  2303  0F59                     	;# 
  2304  0F5A                     	;# 
  2305  0F5B                     	;# 
  2306  0F5C                     	;# 
  2307  0F5D                     	;# 
  2308  0F61                     	;# 
  2309  0F62                     	;# 
  2310  0F64                     	;# 
  2311  0F65                     	;# 
  2312  0F66                     	;# 
  2313  0F67                     	;# 
  2314  0F68                     	;# 
  2315  0F69                     	;# 
  2316  0F6A                     	;# 
  2317  0F6B                     	;# 
  2318  0F6C                     	;# 
  2319  0F6D                     	;# 
  2320  0FE4                     	;# 
  2321  0FE5                     	;# 
  2322  0FE6                     	;# 
  2323  0FE7                     	;# 
  2324  0FE8                     	;# 
  2325  0FE9                     	;# 
  2326  0FEA                     	;# 
  2327  0FEB                     	;# 
  2328  0FED                     	;# 
  2329  0FEE                     	;# 
  2330  0FEF                     	;# 
  2331  0000                     	;# 
  2332  0001                     	;# 
  2333  0002                     	;# 
  2334  0003                     	;# 
  2335  0004                     	;# 
  2336  0005                     	;# 
  2337  0006                     	;# 
  2338  0007                     	;# 
  2339  0008                     	;# 
  2340  0009                     	;# 
  2341  000A                     	;# 
  2342  000B                     	;# 
  2343  000C                     	;# 
  2344  000D                     	;# 
  2345  000E                     	;# 
  2346  000F                     	;# 
  2347  0010                     	;# 
  2348  0011                     	;# 
  2349  0012                     	;# 
  2350  0013                     	;# 
  2351  0014                     	;# 
  2352  0015                     	;# 
  2353  0016                     	;# 
  2354  0017                     	;# 
  2355  0018                     	;# 
  2356  0019                     	;# 
  2357  001A                     	;# 
  2358  001C                     	;# 
  2359  001C                     	;# 
  2360  001D                     	;# 
  2361  001D                     	;# 
  2362  001E                     	;# 
  2363  001F                     	;# 
  2364  008C                     	;# 
  2365  008C                     	;# 
  2366  008D                     	;# 
  2367  008E                     	;# 
  2368  008E                     	;# 
  2369  008F                     	;# 
  2370  0090                     	;# 
  2371  0090                     	;# 
  2372  0091                     	;# 
  2373  0093                     	;# 
  2374  0094                     	;# 
  2375  0095                     	;# 
  2376  0096                     	;# 
  2377  0097                     	;# 
  2378  0098                     	;# 
  2379  0099                     	;# 
  2380  009A                     	;# 
  2381  009B                     	;# 
  2382  009C                     	;# 
  2383  009D                     	;# 
  2384  009E                     	;# 
  2385  010C                     	;# 
  2386  010D                     	;# 
  2387  010E                     	;# 
  2388  010E                     	;# 
  2389  010F                     	;# 
  2390  0110                     	;# 
  2391  0110                     	;# 
  2392  0111                     	;# 
  2393  0112                     	;# 
  2394  0112                     	;# 
  2395  0113                     	;# 
  2396  0114                     	;# 
  2397  0114                     	;# 
  2398  0115                     	;# 
  2399  0116                     	;# 
  2400  0116                     	;# 
  2401  0117                     	;# 
  2402  0119                     	;# 
  2403  0119                     	;# 
  2404  0119                     	;# 
  2405  011A                     	;# 
  2406  011A                     	;# 
  2407  011A                     	;# 
  2408  011B                     	;# 
  2409  011B                     	;# 
  2410  011B                     	;# 
  2411  011B                     	;# 
  2412  011B                     	;# 
  2413  011C                     	;# 
  2414  011C                     	;# 
  2415  011C                     	;# 
  2416  011D                     	;# 
  2417  011D                     	;# 
  2418  011D                     	;# 
  2419  011E                     	;# 
  2420  011E                     	;# 
  2421  011E                     	;# 
  2422  011F                     	;# 
  2423  011F                     	;# 
  2424  011F                     	;# 
  2425  011F                     	;# 
  2426  011F                     	;# 
  2427  018C                     	;# 
  2428  018D                     	;# 
  2429  018E                     	;# 
  2430  018F                     	;# 
  2431  0190                     	;# 
  2432  0191                     	;# 
  2433  0192                     	;# 
  2434  0196                     	;# 
  2435  0197                     	;# 
  2436  0198                     	;# 
  2437  0199                     	;# 
  2438  019A                     	;# 
  2439  019B                     	;# 
  2440  019C                     	;# 
  2441  020C                     	;# 
  2442  020C                     	;# 
  2443  020D                     	;# 
  2444  020E                     	;# 
  2445  020F                     	;# 
  2446  020F                     	;# 
  2447  0210                     	;# 
  2448  0210                     	;# 
  2449  0211                     	;# 
  2450  0211                     	;# 
  2451  0212                     	;# 
  2452  0212                     	;# 
  2453  0213                     	;# 
  2454  0214                     	;# 
  2455  0215                     	;# 
  2456  0215                     	;# 
  2457  0216                     	;# 
  2458  0216                     	;# 
  2459  0217                     	;# 
  2460  0217                     	;# 
  2461  0218                     	;# 
  2462  0218                     	;# 
  2463  0219                     	;# 
  2464  021A                     	;# 
  2465  021B                     	;# 
  2466  021B                     	;# 
  2467  021C                     	;# 
  2468  021C                     	;# 
  2469  021D                     	;# 
  2470  021D                     	;# 
  2471  021E                     	;# 
  2472  021F                     	;# 
  2473  028C                     	;# 
  2474  028C                     	;# 
  2475  028D                     	;# 
  2476  028D                     	;# 
  2477  028E                     	;# 
  2478  028F                     	;# 
  2479  0290                     	;# 
  2480  0290                     	;# 
  2481  0291                     	;# 
  2482  0292                     	;# 
  2483  0292                     	;# 
  2484  0293                     	;# 
  2485  0293                     	;# 
  2486  0294                     	;# 
  2487  0295                     	;# 
  2488  0296                     	;# 
  2489  0296                     	;# 
  2490  0297                     	;# 
  2491  0298                     	;# 
  2492  0298                     	;# 
  2493  0299                     	;# 
  2494  0299                     	;# 
  2495  029A                     	;# 
  2496  029B                     	;# 
  2497  029C                     	;# 
  2498  029C                     	;# 
  2499  029D                     	;# 
  2500  030C                     	;# 
  2501  030C                     	;# 
  2502  030D                     	;# 
  2503  030E                     	;# 
  2504  030F                     	;# 
  2505  0310                     	;# 
  2506  0310                     	;# 
  2507  0311                     	;# 
  2508  0312                     	;# 
  2509  0313                     	;# 
  2510  0314                     	;# 
  2511  0314                     	;# 
  2512  0315                     	;# 
  2513  0316                     	;# 
  2514  0317                     	;# 
  2515  0318                     	;# 
  2516  0318                     	;# 
  2517  0319                     	;# 
  2518  031A                     	;# 
  2519  031B                     	;# 
  2520  031C                     	;# 
  2521  031C                     	;# 
  2522  031D                     	;# 
  2523  031E                     	;# 
  2524  031F                     	;# 
  2525  038C                     	;# 
  2526  038C                     	;# 
  2527  038D                     	;# 
  2528  038E                     	;# 
  2529  0390                     	;# 
  2530  0390                     	;# 
  2531  0391                     	;# 
  2532  0392                     	;# 
  2533  040C                     	;# 
  2534  040D                     	;# 
  2535  040E                     	;# 
  2536  040F                     	;# 
  2537  0410                     	;# 
  2538  0411                     	;# 
  2539  0416                     	;# 
  2540  0416                     	;# 
  2541  0417                     	;# 
  2542  0418                     	;# 
  2543  0418                     	;# 
  2544  0419                     	;# 
  2545  041A                     	;# 
  2546  041A                     	;# 
  2547  041B                     	;# 
  2548  041C                     	;# 
  2549  041C                     	;# 
  2550  041D                     	;# 
  2551  041E                     	;# 
  2552  041F                     	;# 
  2553  048C                     	;# 
  2554  048C                     	;# 
  2555  048D                     	;# 
  2556  048E                     	;# 
  2557  048F                     	;# 
  2558  048F                     	;# 
  2559  0490                     	;# 
  2560  0491                     	;# 
  2561  0492                     	;# 
  2562  0492                     	;# 
  2563  0493                     	;# 
  2564  0494                     	;# 
  2565  0495                     	;# 
  2566  0495                     	;# 
  2567  0496                     	;# 
  2568  0497                     	;# 
  2569  0498                     	;# 
  2570  0499                     	;# 
  2571  049A                     	;# 
  2572  049B                     	;# 
  2573  049C                     	;# 
  2574  049D                     	;# 
  2575  050C                     	;# 
  2576  050C                     	;# 
  2577  050D                     	;# 
  2578  050E                     	;# 
  2579  050F                     	;# 
  2580  050F                     	;# 
  2581  0510                     	;# 
  2582  0511                     	;# 
  2583  0512                     	;# 
  2584  0512                     	;# 
  2585  0513                     	;# 
  2586  0514                     	;# 
  2587  0515                     	;# 
  2588  0515                     	;# 
  2589  0516                     	;# 
  2590  0517                     	;# 
  2591  0518                     	;# 
  2592  0519                     	;# 
  2593  051A                     	;# 
  2594  051B                     	;# 
  2595  051C                     	;# 
  2596  051D                     	;# 
  2597  058C                     	;# 
  2598  058C                     	;# 
  2599  058D                     	;# 
  2600  058E                     	;# 
  2601  058F                     	;# 
  2602  058F                     	;# 
  2603  0590                     	;# 
  2604  0591                     	;# 
  2605  0592                     	;# 
  2606  0593                     	;# 
  2607  060C                     	;# 
  2608  060D                     	;# 
  2609  060E                     	;# 
  2610  060F                     	;# 
  2611  0610                     	;# 
  2612  0611                     	;# 
  2613  0612                     	;# 
  2614  0613                     	;# 
  2615  0614                     	;# 
  2616  0616                     	;# 
  2617  0617                     	;# 
  2618  0618                     	;# 
  2619  0619                     	;# 
  2620  061A                     	;# 
  2621  061B                     	;# 
  2622  061C                     	;# 
  2623  061D                     	;# 
  2624  061E                     	;# 
  2625  068C                     	;# 
  2626  068D                     	;# 
  2627  068E                     	;# 
  2628  068F                     	;# 
  2629  0690                     	;# 
  2630  0691                     	;# 
  2631  0692                     	;# 
  2632  0693                     	;# 
  2633  0694                     	;# 
  2634  070C                     	;# 
  2635  070D                     	;# 
  2636  070E                     	;# 
  2637  070F                     	;# 
  2638  0710                     	;# 
  2639  0711                     	;# 
  2640  0712                     	;# 
  2641  0713                     	;# 
  2642  0714                     	;# 
  2643  0716                     	;# 
  2644  0717                     	;# 
  2645  0718                     	;# 
  2646  0719                     	;# 
  2647  071A                     	;# 
  2648  071B                     	;# 
  2649  071C                     	;# 
  2650  071D                     	;# 
  2651  071E                     	;# 
  2652  0796                     	;# 
  2653  0797                     	;# 
  2654  0798                     	;# 
  2655  0799                     	;# 
  2656  079A                     	;# 
  2657  079B                     	;# 
  2658  080C                     	;# 
  2659  080D                     	;# 
  2660  080E                     	;# 
  2661  080F                     	;# 
  2662  0810                     	;# 
  2663  0811                     	;# 
  2664  0812                     	;# 
  2665  0813                     	;# 
  2666  0814                     	;# 
  2667  081A                     	;# 
  2668  081B                     	;# 
  2669  081C                     	;# 
  2670  081D                     	;# 
  2671  081E                     	;# 
  2672  081F                     	;# 
  2673  088C                     	;# 
  2674  088D                     	;# 
  2675  088E                     	;# 
  2676  088F                     	;# 
  2677  0890                     	;# 
  2678  0891                     	;# 
  2679  0892                     	;# 
  2680  0893                     	;# 
  2681  0895                     	;# 
  2682  0896                     	;# 
  2683  0897                     	;# 
  2684  0898                     	;# 
  2685  0899                     	;# 
  2686  089A                     	;# 
  2687  089B                     	;# 
  2688  090C                     	;# 
  2689  090E                     	;# 
  2690  090F                     	;# 
  2691  091F                     	;# 
  2692  091F                     	;# 
  2693  098F                     	;# 
  2694  098F                     	;# 
  2695  0990                     	;# 
  2696  0991                     	;# 
  2697  0992                     	;# 
  2698  0993                     	;# 
  2699  0994                     	;# 
  2700  0995                     	;# 
  2701  0996                     	;# 
  2702  0997                     	;# 
  2703  0E0F                     	;# 
  2704  0E10                     	;# 
  2705  0E11                     	;# 
  2706  0E12                     	;# 
  2707  0E13                     	;# 
  2708  0E14                     	;# 
  2709  0E15                     	;# 
  2710  0E16                     	;# 
  2711  0E17                     	;# 
  2712  0E18                     	;# 
  2713  0E19                     	;# 
  2714  0E1A                     	;# 
  2715  0E1B                     	;# 
  2716  0E1C                     	;# 
  2717  0E1D                     	;# 
  2718  0E1E                     	;# 
  2719  0E1F                     	;# 
  2720  0E20                     	;# 
  2721  0E21                     	;# 
  2722  0E22                     	;# 
  2723  0E23                     	;# 
  2724  0E24                     	;# 
  2725  0E25                     	;# 
  2726  0E26                     	;# 
  2727  0E27                     	;# 
  2728  0E28                     	;# 
  2729  0E29                     	;# 
  2730  0E2A                     	;# 
  2731  0E2B                     	;# 
  2732  0E2C                     	;# 
  2733  0E2D                     	;# 
  2734  0E2E                     	;# 
  2735  0E2F                     	;# 
  2736  0E30                     	;# 
  2737  0E31                     	;# 
  2738  0E32                     	;# 
  2739  0E33                     	;# 
  2740  0E34                     	;# 
  2741  0E35                     	;# 
  2742  0E36                     	;# 
  2743  0E37                     	;# 
  2744  0E8F                     	;# 
  2745  0E90                     	;# 
  2746  0E91                     	;# 
  2747  0E92                     	;# 
  2748  0E93                     	;# 
  2749  0E94                     	;# 
  2750  0E95                     	;# 
  2751  0E96                     	;# 
  2752  0E97                     	;# 
  2753  0E9C                     	;# 
  2754  0E9D                     	;# 
  2755  0E9E                     	;# 
  2756  0EA1                     	;# 
  2757  0EA2                     	;# 
  2758  0EA3                     	;# 
  2759  0EA4                     	;# 
  2760  0EA5                     	;# 
  2761  0EA9                     	;# 
  2762  0EAA                     	;# 
  2763  0EAB                     	;# 
  2764  0EAC                     	;# 
  2765  0EB1                     	;# 
  2766  0EB2                     	;# 
  2767  0EB3                     	;# 
  2768  0EB8                     	;# 
  2769  0EB9                     	;# 
  2770  0EBA                     	;# 
  2771  0EBB                     	;# 
  2772  0EBC                     	;# 
  2773  0EBD                     	;# 
  2774  0EBE                     	;# 
  2775  0EC3                     	;# 
  2776  0EC5                     	;# 
  2777  0EC6                     	;# 
  2778  0EC7                     	;# 
  2779  0EC8                     	;# 
  2780  0EC9                     	;# 
  2781  0ECA                     	;# 
  2782  0ECB                     	;# 
  2783  0ECC                     	;# 
  2784  0F10                     	;# 
  2785  0F11                     	;# 
  2786  0F12                     	;# 
  2787  0F13                     	;# 
  2788  0F14                     	;# 
  2789  0F15                     	;# 
  2790  0F16                     	;# 
  2791  0F17                     	;# 
  2792  0F18                     	;# 
  2793  0F19                     	;# 
  2794  0F1A                     	;# 
  2795  0F1B                     	;# 
  2796  0F1C                     	;# 
  2797  0F1D                     	;# 
  2798  0F1E                     	;# 
  2799  0F1F                     	;# 
  2800  0F20                     	;# 
  2801  0F21                     	;# 
  2802  0F22                     	;# 
  2803  0F23                     	;# 
  2804  0F24                     	;# 
  2805  0F25                     	;# 
  2806  0F26                     	;# 
  2807  0F27                     	;# 
  2808  0F28                     	;# 
  2809  0F29                     	;# 
  2810  0F2A                     	;# 
  2811  0F2B                     	;# 
  2812  0F2C                     	;# 
  2813  0F2D                     	;# 
  2814  0F2E                     	;# 
  2815  0F2F                     	;# 
  2816  0F30                     	;# 
  2817  0F31                     	;# 
  2818  0F32                     	;# 
  2819  0F38                     	;# 
  2820  0F39                     	;# 
  2821  0F3A                     	;# 
  2822  0F3B                     	;# 
  2823  0F3C                     	;# 
  2824  0F3D                     	;# 
  2825  0F3E                     	;# 
  2826  0F3F                     	;# 
  2827  0F40                     	;# 
  2828  0F41                     	;# 
  2829  0F43                     	;# 
  2830  0F44                     	;# 
  2831  0F45                     	;# 
  2832  0F46                     	;# 
  2833  0F47                     	;# 
  2834  0F48                     	;# 
  2835  0F49                     	;# 
  2836  0F4A                     	;# 
  2837  0F4B                     	;# 
  2838  0F4C                     	;# 
  2839  0F4E                     	;# 
  2840  0F4F                     	;# 
  2841  0F50                     	;# 
  2842  0F51                     	;# 
  2843  0F52                     	;# 
  2844  0F53                     	;# 
  2845  0F54                     	;# 
  2846  0F55                     	;# 
  2847  0F56                     	;# 
  2848  0F57                     	;# 
  2849  0F59                     	;# 
  2850  0F5A                     	;# 
  2851  0F5B                     	;# 
  2852  0F5C                     	;# 
  2853  0F5D                     	;# 
  2854  0F61                     	;# 
  2855  0F62                     	;# 
  2856  0F64                     	;# 
  2857  0F65                     	;# 
  2858  0F66                     	;# 
  2859  0F67                     	;# 
  2860  0F68                     	;# 
  2861  0F69                     	;# 
  2862  0F6A                     	;# 
  2863  0F6B                     	;# 
  2864  0F6C                     	;# 
  2865  0F6D                     	;# 
  2866  0FE4                     	;# 
  2867  0FE5                     	;# 
  2868  0FE6                     	;# 
  2869  0FE7                     	;# 
  2870  0FE8                     	;# 
  2871  0FE9                     	;# 
  2872  0FEA                     	;# 
  2873  0FEB                     	;# 
  2874  0FED                     	;# 
  2875  0FEE                     	;# 
  2876  0FEF                     	;# 
  2877  0000                     	;# 
  2878  0001                     	;# 
  2879  0002                     	;# 
  2880  0003                     	;# 
  2881  0004                     	;# 
  2882  0005                     	;# 
  2883  0006                     	;# 
  2884  0007                     	;# 
  2885  0008                     	;# 
  2886  0009                     	;# 
  2887  000A                     	;# 
  2888  000B                     	;# 
  2889  000C                     	;# 
  2890  000D                     	;# 
  2891  000E                     	;# 
  2892  000F                     	;# 
  2893  0010                     	;# 
  2894  0011                     	;# 
  2895  0012                     	;# 
  2896  0013                     	;# 
  2897  0014                     	;# 
  2898  0015                     	;# 
  2899  0016                     	;# 
  2900  0017                     	;# 
  2901  0018                     	;# 
  2902  0019                     	;# 
  2903  001A                     	;# 
  2904  001C                     	;# 
  2905  001C                     	;# 
  2906  001D                     	;# 
  2907  001D                     	;# 
  2908  001E                     	;# 
  2909  001F                     	;# 
  2910  008C                     	;# 
  2911  008C                     	;# 
  2912  008D                     	;# 
  2913  008E                     	;# 
  2914  008E                     	;# 
  2915  008F                     	;# 
  2916  0090                     	;# 
  2917  0090                     	;# 
  2918  0091                     	;# 
  2919  0093                     	;# 
  2920  0094                     	;# 
  2921  0095                     	;# 
  2922  0096                     	;# 
  2923  0097                     	;# 
  2924  0098                     	;# 
  2925  0099                     	;# 
  2926  009A                     	;# 
  2927  009B                     	;# 
  2928  009C                     	;# 
  2929  009D                     	;# 
  2930  009E                     	;# 
  2931  010C                     	;# 
  2932  010D                     	;# 
  2933  010E                     	;# 
  2934  010E                     	;# 
  2935  010F                     	;# 
  2936  0110                     	;# 
  2937  0110                     	;# 
  2938  0111                     	;# 
  2939  0112                     	;# 
  2940  0112                     	;# 
  2941  0113                     	;# 
  2942  0114                     	;# 
  2943  0114                     	;# 
  2944  0115                     	;# 
  2945  0116                     	;# 
  2946  0116                     	;# 
  2947  0117                     	;# 
  2948  0119                     	;# 
  2949  0119                     	;# 
  2950  0119                     	;# 
  2951  011A                     	;# 
  2952  011A                     	;# 
  2953  011A                     	;# 
  2954  011B                     	;# 
  2955  011B                     	;# 
  2956  011B                     	;# 
  2957  011B                     	;# 
  2958  011B                     	;# 
  2959  011C                     	;# 
  2960  011C                     	;# 
  2961  011C                     	;# 
  2962  011D                     	;# 
  2963  011D                     	;# 
  2964  011D                     	;# 
  2965  011E                     	;# 
  2966  011E                     	;# 
  2967  011E                     	;# 
  2968  011F                     	;# 
  2969  011F                     	;# 
  2970  011F                     	;# 
  2971  011F                     	;# 
  2972  011F                     	;# 
  2973  018C                     	;# 
  2974  018D                     	;# 
  2975  018E                     	;# 
  2976  018F                     	;# 
  2977  0190                     	;# 
  2978  0191                     	;# 
  2979  0192                     	;# 
  2980  0196                     	;# 
  2981  0197                     	;# 
  2982  0198                     	;# 
  2983  0199                     	;# 
  2984  019A                     	;# 
  2985  019B                     	;# 
  2986  019C                     	;# 
  2987  020C                     	;# 
  2988  020C                     	;# 
  2989  020D                     	;# 
  2990  020E                     	;# 
  2991  020F                     	;# 
  2992  020F                     	;# 
  2993  0210                     	;# 
  2994  0210                     	;# 
  2995  0211                     	;# 
  2996  0211                     	;# 
  2997  0212                     	;# 
  2998  0212                     	;# 
  2999  0213                     	;# 
  3000  0214                     	;# 
  3001  0215                     	;# 
  3002  0215                     	;# 
  3003  0216                     	;# 
  3004  0216                     	;# 
  3005  0217                     	;# 
  3006  0217                     	;# 
  3007  0218                     	;# 
  3008  0218                     	;# 
  3009  0219                     	;# 
  3010  021A                     	;# 
  3011  021B                     	;# 
  3012  021B                     	;# 
  3013  021C                     	;# 
  3014  021C                     	;# 
  3015  021D                     	;# 
  3016  021D                     	;# 
  3017  021E                     	;# 
  3018  021F                     	;# 
  3019  028C                     	;# 
  3020  028C                     	;# 
  3021  028D                     	;# 
  3022  028D                     	;# 
  3023  028E                     	;# 
  3024  028F                     	;# 
  3025  0290                     	;# 
  3026  0290                     	;# 
  3027  0291                     	;# 
  3028  0292                     	;# 
  3029  0292                     	;# 
  3030  0293                     	;# 
  3031  0293                     	;# 
  3032  0294                     	;# 
  3033  0295                     	;# 
  3034  0296                     	;# 
  3035  0296                     	;# 
  3036  0297                     	;# 
  3037  0298                     	;# 
  3038  0298                     	;# 
  3039  0299                     	;# 
  3040  0299                     	;# 
  3041  029A                     	;# 
  3042  029B                     	;# 
  3043  029C                     	;# 
  3044  029C                     	;# 
  3045  029D                     	;# 
  3046  030C                     	;# 
  3047  030C                     	;# 
  3048  030D                     	;# 
  3049  030E                     	;# 
  3050  030F                     	;# 
  3051  0310                     	;# 
  3052  0310                     	;# 
  3053  0311                     	;# 
  3054  0312                     	;# 
  3055  0313                     	;# 
  3056  0314                     	;# 
  3057  0314                     	;# 
  3058  0315                     	;# 
  3059  0316                     	;# 
  3060  0317                     	;# 
  3061  0318                     	;# 
  3062  0318                     	;# 
  3063  0319                     	;# 
  3064  031A                     	;# 
  3065  031B                     	;# 
  3066  031C                     	;# 
  3067  031C                     	;# 
  3068  031D                     	;# 
  3069  031E                     	;# 
  3070  031F                     	;# 
  3071  038C                     	;# 
  3072  038C                     	;# 
  3073  038D                     	;# 
  3074  038E                     	;# 
  3075  0390                     	;# 
  3076  0390                     	;# 
  3077  0391                     	;# 
  3078  0392                     	;# 
  3079  040C                     	;# 
  3080  040D                     	;# 
  3081  040E                     	;# 
  3082  040F                     	;# 
  3083  0410                     	;# 
  3084  0411                     	;# 
  3085  0416                     	;# 
  3086  0416                     	;# 
  3087  0417                     	;# 
  3088  0418                     	;# 
  3089  0418                     	;# 
  3090  0419                     	;# 
  3091  041A                     	;# 
  3092  041A                     	;# 
  3093  041B                     	;# 
  3094  041C                     	;# 
  3095  041C                     	;# 
  3096  041D                     	;# 
  3097  041E                     	;# 
  3098  041F                     	;# 
  3099  048C                     	;# 
  3100  048C                     	;# 
  3101  048D                     	;# 
  3102  048E                     	;# 
  3103  048F                     	;# 
  3104  048F                     	;# 
  3105  0490                     	;# 
  3106  0491                     	;# 
  3107  0492                     	;# 
  3108  0492                     	;# 
  3109  0493                     	;# 
  3110  0494                     	;# 
  3111  0495                     	;# 
  3112  0495                     	;# 
  3113  0496                     	;# 
  3114  0497                     	;# 
  3115  0498                     	;# 
  3116  0499                     	;# 
  3117  049A                     	;# 
  3118  049B                     	;# 
  3119  049C                     	;# 
  3120  049D                     	;# 
  3121  050C                     	;# 
  3122  050C                     	;# 
  3123  050D                     	;# 
  3124  050E                     	;# 
  3125  050F                     	;# 
  3126  050F                     	;# 
  3127  0510                     	;# 
  3128  0511                     	;# 
  3129  0512                     	;# 
  3130  0512                     	;# 
  3131  0513                     	;# 
  3132  0514                     	;# 
  3133  0515                     	;# 
  3134  0515                     	;# 
  3135  0516                     	;# 
  3136  0517                     	;# 
  3137  0518                     	;# 
  3138  0519                     	;# 
  3139  051A                     	;# 
  3140  051B                     	;# 
  3141  051C                     	;# 
  3142  051D                     	;# 
  3143  058C                     	;# 
  3144  058C                     	;# 
  3145  058D                     	;# 
  3146  058E                     	;# 
  3147  058F                     	;# 
  3148  058F                     	;# 
  3149  0590                     	;# 
  3150  0591                     	;# 
  3151  0592                     	;# 
  3152  0593                     	;# 
  3153  060C                     	;# 
  3154  060D                     	;# 
  3155  060E                     	;# 
  3156  060F                     	;# 
  3157  0610                     	;# 
  3158  0611                     	;# 
  3159  0612                     	;# 
  3160  0613                     	;# 
  3161  0614                     	;# 
  3162  0616                     	;# 
  3163  0617                     	;# 
  3164  0618                     	;# 
  3165  0619                     	;# 
  3166  061A                     	;# 
  3167  061B                     	;# 
  3168  061C                     	;# 
  3169  061D                     	;# 
  3170  061E                     	;# 
  3171  068C                     	;# 
  3172  068D                     	;# 
  3173  068E                     	;# 
  3174  068F                     	;# 
  3175  0690                     	;# 
  3176  0691                     	;# 
  3177  0692                     	;# 
  3178  0693                     	;# 
  3179  0694                     	;# 
  3180  070C                     	;# 
  3181  070D                     	;# 
  3182  070E                     	;# 
  3183  070F                     	;# 
  3184  0710                     	;# 
  3185  0711                     	;# 
  3186  0712                     	;# 
  3187  0713                     	;# 
  3188  0714                     	;# 
  3189  0716                     	;# 
  3190  0717                     	;# 
  3191  0718                     	;# 
  3192  0719                     	;# 
  3193  071A                     	;# 
  3194  071B                     	;# 
  3195  071C                     	;# 
  3196  071D                     	;# 
  3197  071E                     	;# 
  3198  0796                     	;# 
  3199  0797                     	;# 
  3200  0798                     	;# 
  3201  0799                     	;# 
  3202  079A                     	;# 
  3203  079B                     	;# 
  3204  080C                     	;# 
  3205  080D                     	;# 
  3206  080E                     	;# 
  3207  080F                     	;# 
  3208  0810                     	;# 
  3209  0811                     	;# 
  3210  0812                     	;# 
  3211  0813                     	;# 
  3212  0814                     	;# 
  3213  081A                     	;# 
  3214  081B                     	;# 
  3215  081C                     	;# 
  3216  081D                     	;# 
  3217  081E                     	;# 
  3218  081F                     	;# 
  3219  088C                     	;# 
  3220  088D                     	;# 
  3221  088E                     	;# 
  3222  088F                     	;# 
  3223  0890                     	;# 
  3224  0891                     	;# 
  3225  0892                     	;# 
  3226  0893                     	;# 
  3227  0895                     	;# 
  3228  0896                     	;# 
  3229  0897                     	;# 
  3230  0898                     	;# 
  3231  0899                     	;# 
  3232  089A                     	;# 
  3233  089B                     	;# 
  3234  090C                     	;# 
  3235  090E                     	;# 
  3236  090F                     	;# 
  3237  091F                     	;# 
  3238  091F                     	;# 
  3239  098F                     	;# 
  3240  098F                     	;# 
  3241  0990                     	;# 
  3242  0991                     	;# 
  3243  0992                     	;# 
  3244  0993                     	;# 
  3245  0994                     	;# 
  3246  0995                     	;# 
  3247  0996                     	;# 
  3248  0997                     	;# 
  3249  0E0F                     	;# 
  3250  0E10                     	;# 
  3251  0E11                     	;# 
  3252  0E12                     	;# 
  3253  0E13                     	;# 
  3254  0E14                     	;# 
  3255  0E15                     	;# 
  3256  0E16                     	;# 
  3257  0E17                     	;# 
  3258  0E18                     	;# 
  3259  0E19                     	;# 
  3260  0E1A                     	;# 
  3261  0E1B                     	;# 
  3262  0E1C                     	;# 
  3263  0E1D                     	;# 
  3264  0E1E                     	;# 
  3265  0E1F                     	;# 
  3266  0E20                     	;# 
  3267  0E21                     	;# 
  3268  0E22                     	;# 
  3269  0E23                     	;# 
  3270  0E24                     	;# 
  3271  0E25                     	;# 
  3272  0E26                     	;# 
  3273  0E27                     	;# 
  3274  0E28                     	;# 
  3275  0E29                     	;# 
  3276  0E2A                     	;# 
  3277  0E2B                     	;# 
  3278  0E2C                     	;# 
  3279  0E2D                     	;# 
  3280  0E2E                     	;# 
  3281  0E2F                     	;# 
  3282  0E30                     	;# 
  3283  0E31                     	;# 
  3284  0E32                     	;# 
  3285  0E33                     	;# 
  3286  0E34                     	;# 
  3287  0E35                     	;# 
  3288  0E36                     	;# 
  3289  0E37                     	;# 
  3290  0E8F                     	;# 
  3291  0E90                     	;# 
  3292  0E91                     	;# 
  3293  0E92                     	;# 
  3294  0E93                     	;# 
  3295  0E94                     	;# 
  3296  0E95                     	;# 
  3297  0E96                     	;# 
  3298  0E97                     	;# 
  3299  0E9C                     	;# 
  3300  0E9D                     	;# 
  3301  0E9E                     	;# 
  3302  0EA1                     	;# 
  3303  0EA2                     	;# 
  3304  0EA3                     	;# 
  3305  0EA4                     	;# 
  3306  0EA5                     	;# 
  3307  0EA9                     	;# 
  3308  0EAA                     	;# 
  3309  0EAB                     	;# 
  3310  0EAC                     	;# 
  3311  0EB1                     	;# 
  3312  0EB2                     	;# 
  3313  0EB3                     	;# 
  3314  0EB8                     	;# 
  3315  0EB9                     	;# 
  3316  0EBA                     	;# 
  3317  0EBB                     	;# 
  3318  0EBC                     	;# 
  3319  0EBD                     	;# 
  3320  0EBE                     	;# 
  3321  0EC3                     	;# 
  3322  0EC5                     	;# 
  3323  0EC6                     	;# 
  3324  0EC7                     	;# 
  3325  0EC8                     	;# 
  3326  0EC9                     	;# 
  3327  0ECA                     	;# 
  3328  0ECB                     	;# 
  3329  0ECC                     	;# 
  3330  0F10                     	;# 
  3331  0F11                     	;# 
  3332  0F12                     	;# 
  3333  0F13                     	;# 
  3334  0F14                     	;# 
  3335  0F15                     	;# 
  3336  0F16                     	;# 
  3337  0F17                     	;# 
  3338  0F18                     	;# 
  3339  0F19                     	;# 
  3340  0F1A                     	;# 
  3341  0F1B                     	;# 
  3342  0F1C                     	;# 
  3343  0F1D                     	;# 
  3344  0F1E                     	;# 
  3345  0F1F                     	;# 
  3346  0F20                     	;# 
  3347  0F21                     	;# 
  3348  0F22                     	;# 
  3349  0F23                     	;# 
  3350  0F24                     	;# 
  3351  0F25                     	;# 
  3352  0F26                     	;# 
  3353  0F27                     	;# 
  3354  0F28                     	;# 
  3355  0F29                     	;# 
  3356  0F2A                     	;# 
  3357  0F2B                     	;# 
  3358  0F2C                     	;# 
  3359  0F2D                     	;# 
  3360  0F2E                     	;# 
  3361  0F2F                     	;# 
  3362  0F30                     	;# 
  3363  0F31                     	;# 
  3364  0F32                     	;# 
  3365  0F38                     	;# 
  3366  0F39                     	;# 
  3367  0F3A                     	;# 
  3368  0F3B                     	;# 
  3369  0F3C                     	;# 
  3370  0F3D                     	;# 
  3371  0F3E                     	;# 
  3372  0F3F                     	;# 
  3373  0F40                     	;# 
  3374  0F41                     	;# 
  3375  0F43                     	;# 
  3376  0F44                     	;# 
  3377  0F45                     	;# 
  3378  0F46                     	;# 
  3379  0F47                     	;# 
  3380  0F48                     	;# 
  3381  0F49                     	;# 
  3382  0F4A                     	;# 
  3383  0F4B                     	;# 
  3384  0F4C                     	;# 
  3385  0F4E                     	;# 
  3386  0F4F                     	;# 
  3387  0F50                     	;# 
  3388  0F51                     	;# 
  3389  0F52                     	;# 
  3390  0F53                     	;# 
  3391  0F54                     	;# 
  3392  0F55                     	;# 
  3393  0F56                     	;# 
  3394  0F57                     	;# 
  3395  0F59                     	;# 
  3396  0F5A                     	;# 
  3397  0F5B                     	;# 
  3398  0F5C                     	;# 
  3399  0F5D                     	;# 
  3400  0F61                     	;# 
  3401  0F62                     	;# 
  3402  0F64                     	;# 
  3403  0F65                     	;# 
  3404  0F66                     	;# 
  3405  0F67                     	;# 
  3406  0F68                     	;# 
  3407  0F69                     	;# 
  3408  0F6A                     	;# 
  3409  0F6B                     	;# 
  3410  0F6C                     	;# 
  3411  0F6D                     	;# 
  3412  0FE4                     	;# 
  3413  0FE5                     	;# 
  3414  0FE6                     	;# 
  3415  0FE7                     	;# 
  3416  0FE8                     	;# 
  3417  0FE9                     	;# 
  3418  0FEA                     	;# 
  3419  0FEB                     	;# 
  3420  0FED                     	;# 
  3421  0FEE                     	;# 
  3422  0FEF                     	;# 
  3423  0000                     	;# 
  3424  0001                     	;# 
  3425  0002                     	;# 
  3426  0003                     	;# 
  3427  0004                     	;# 
  3428  0005                     	;# 
  3429  0006                     	;# 
  3430  0007                     	;# 
  3431  0008                     	;# 
  3432  0009                     	;# 
  3433  000A                     	;# 
  3434  000B                     	;# 
  3435  000C                     	;# 
  3436  000D                     	;# 
  3437  000E                     	;# 
  3438  000F                     	;# 
  3439  0010                     	;# 
  3440  0011                     	;# 
  3441  0012                     	;# 
  3442  0013                     	;# 
  3443  0014                     	;# 
  3444  0015                     	;# 
  3445  0016                     	;# 
  3446  0017                     	;# 
  3447  0018                     	;# 
  3448  0019                     	;# 
  3449  001A                     	;# 
  3450  001C                     	;# 
  3451  001C                     	;# 
  3452  001D                     	;# 
  3453  001D                     	;# 
  3454  001E                     	;# 
  3455  001F                     	;# 
  3456  008C                     	;# 
  3457  008C                     	;# 
  3458  008D                     	;# 
  3459  008E                     	;# 
  3460  008E                     	;# 
  3461  008F                     	;# 
  3462  0090                     	;# 
  3463  0090                     	;# 
  3464  0091                     	;# 
  3465  0093                     	;# 
  3466  0094                     	;# 
  3467  0095                     	;# 
  3468  0096                     	;# 
  3469  0097                     	;# 
  3470  0098                     	;# 
  3471  0099                     	;# 
  3472  009A                     	;# 
  3473  009B                     	;# 
  3474  009C                     	;# 
  3475  009D                     	;# 
  3476  009E                     	;# 
  3477  010C                     	;# 
  3478  010D                     	;# 
  3479  010E                     	;# 
  3480  010E                     	;# 
  3481  010F                     	;# 
  3482  0110                     	;# 
  3483  0110                     	;# 
  3484  0111                     	;# 
  3485  0112                     	;# 
  3486  0112                     	;# 
  3487  0113                     	;# 
  3488  0114                     	;# 
  3489  0114                     	;# 
  3490  0115                     	;# 
  3491  0116                     	;# 
  3492  0116                     	;# 
  3493  0117                     	;# 
  3494  0119                     	;# 
  3495  0119                     	;# 
  3496  0119                     	;# 
  3497  011A                     	;# 
  3498  011A                     	;# 
  3499  011A                     	;# 
  3500  011B                     	;# 
  3501  011B                     	;# 
  3502  011B                     	;# 
  3503  011B                     	;# 
  3504  011B                     	;# 
  3505  011C                     	;# 
  3506  011C                     	;# 
  3507  011C                     	;# 
  3508  011D                     	;# 
  3509  011D                     	;# 
  3510  011D                     	;# 
  3511  011E                     	;# 
  3512  011E                     	;# 
  3513  011E                     	;# 
  3514  011F                     	;# 
  3515  011F                     	;# 
  3516  011F                     	;# 
  3517  011F                     	;# 
  3518  011F                     	;# 
  3519  018C                     	;# 
  3520  018D                     	;# 
  3521  018E                     	;# 
  3522  018F                     	;# 
  3523  0190                     	;# 
  3524  0191                     	;# 
  3525  0192                     	;# 
  3526  0196                     	;# 
  3527  0197                     	;# 
  3528  0198                     	;# 
  3529  0199                     	;# 
  3530  019A                     	;# 
  3531  019B                     	;# 
  3532  019C                     	;# 
  3533  020C                     	;# 
  3534  020C                     	;# 
  3535  020D                     	;# 
  3536  020E                     	;# 
  3537  020F                     	;# 
  3538  020F                     	;# 
  3539  0210                     	;# 
  3540  0210                     	;# 
  3541  0211                     	;# 
  3542  0211                     	;# 
  3543  0212                     	;# 
  3544  0212                     	;# 
  3545  0213                     	;# 
  3546  0214                     	;# 
  3547  0215                     	;# 
  3548  0215                     	;# 
  3549  0216                     	;# 
  3550  0216                     	;# 
  3551  0217                     	;# 
  3552  0217                     	;# 
  3553  0218                     	;# 
  3554  0218                     	;# 
  3555  0219                     	;# 
  3556  021A                     	;# 
  3557  021B                     	;# 
  3558  021B                     	;# 
  3559  021C                     	;# 
  3560  021C                     	;# 
  3561  021D                     	;# 
  3562  021D                     	;# 
  3563  021E                     	;# 
  3564  021F                     	;# 
  3565  028C                     	;# 
  3566  028C                     	;# 
  3567  028D                     	;# 
  3568  028D                     	;# 
  3569  028E                     	;# 
  3570  028F                     	;# 
  3571  0290                     	;# 
  3572  0290                     	;# 
  3573  0291                     	;# 
  3574  0292                     	;# 
  3575  0292                     	;# 
  3576  0293                     	;# 
  3577  0293                     	;# 
  3578  0294                     	;# 
  3579  0295                     	;# 
  3580  0296                     	;# 
  3581  0296                     	;# 
  3582  0297                     	;# 
  3583  0298                     	;# 
  3584  0298                     	;# 
  3585  0299                     	;# 
  3586  0299                     	;# 
  3587  029A                     	;# 
  3588  029B                     	;# 
  3589  029C                     	;# 
  3590  029C                     	;# 
  3591  029D                     	;# 
  3592  030C                     	;# 
  3593  030C                     	;# 
  3594  030D                     	;# 
  3595  030E                     	;# 
  3596  030F                     	;# 
  3597  0310                     	;# 
  3598  0310                     	;# 
  3599  0311                     	;# 
  3600  0312                     	;# 
  3601  0313                     	;# 
  3602  0314                     	;# 
  3603  0314                     	;# 
  3604  0315                     	;# 
  3605  0316                     	;# 
  3606  0317                     	;# 
  3607  0318                     	;# 
  3608  0318                     	;# 
  3609  0319                     	;# 
  3610  031A                     	;# 
  3611  031B                     	;# 
  3612  031C                     	;# 
  3613  031C                     	;# 
  3614  031D                     	;# 
  3615  031E                     	;# 
  3616  031F                     	;# 
  3617  038C                     	;# 
  3618  038C                     	;# 
  3619  038D                     	;# 
  3620  038E                     	;# 
  3621  0390                     	;# 
  3622  0390                     	;# 
  3623  0391                     	;# 
  3624  0392                     	;# 
  3625  040C                     	;# 
  3626  040D                     	;# 
  3627  040E                     	;# 
  3628  040F                     	;# 
  3629  0410                     	;# 
  3630  0411                     	;# 
  3631  0416                     	;# 
  3632  0416                     	;# 
  3633  0417                     	;# 
  3634  0418                     	;# 
  3635  0418                     	;# 
  3636  0419                     	;# 
  3637  041A                     	;# 
  3638  041A                     	;# 
  3639  041B                     	;# 
  3640  041C                     	;# 
  3641  041C                     	;# 
  3642  041D                     	;# 
  3643  041E                     	;# 
  3644  041F                     	;# 
  3645  048C                     	;# 
  3646  048C                     	;# 
  3647  048D                     	;# 
  3648  048E                     	;# 
  3649  048F                     	;# 
  3650  048F                     	;# 
  3651  0490                     	;# 
  3652  0491                     	;# 
  3653  0492                     	;# 
  3654  0492                     	;# 
  3655  0493                     	;# 
  3656  0494                     	;# 
  3657  0495                     	;# 
  3658  0495                     	;# 
  3659  0496                     	;# 
  3660  0497                     	;# 
  3661  0498                     	;# 
  3662  0499                     	;# 
  3663  049A                     	;# 
  3664  049B                     	;# 
  3665  049C                     	;# 
  3666  049D                     	;# 
  3667  050C                     	;# 
  3668  050C                     	;# 
  3669  050D                     	;# 
  3670  050E                     	;# 
  3671  050F                     	;# 
  3672  050F                     	;# 
  3673  0510                     	;# 
  3674  0511                     	;# 
  3675  0512                     	;# 
  3676  0512                     	;# 
  3677  0513                     	;# 
  3678  0514                     	;# 
  3679  0515                     	;# 
  3680  0515                     	;# 
  3681  0516                     	;# 
  3682  0517                     	;# 
  3683  0518                     	;# 
  3684  0519                     	;# 
  3685  051A                     	;# 
  3686  051B                     	;# 
  3687  051C                     	;# 
  3688  051D                     	;# 
  3689  058C                     	;# 
  3690  058C                     	;# 
  3691  058D                     	;# 
  3692  058E                     	;# 
  3693  058F                     	;# 
  3694  058F                     	;# 
  3695  0590                     	;# 
  3696  0591                     	;# 
  3697  0592                     	;# 
  3698  0593                     	;# 
  3699  060C                     	;# 
  3700  060D                     	;# 
  3701  060E                     	;# 
  3702  060F                     	;# 
  3703  0610                     	;# 
  3704  0611                     	;# 
  3705  0612                     	;# 
  3706  0613                     	;# 
  3707  0614                     	;# 
  3708  0616                     	;# 
  3709  0617                     	;# 
  3710  0618                     	;# 
  3711  0619                     	;# 
  3712  061A                     	;# 
  3713  061B                     	;# 
  3714  061C                     	;# 
  3715  061D                     	;# 
  3716  061E                     	;# 
  3717  068C                     	;# 
  3718  068D                     	;# 
  3719  068E                     	;# 
  3720  068F                     	;# 
  3721  0690                     	;# 
  3722  0691                     	;# 
  3723  0692                     	;# 
  3724  0693                     	;# 
  3725  0694                     	;# 
  3726  070C                     	;# 
  3727  070D                     	;# 
  3728  070E                     	;# 
  3729  070F                     	;# 
  3730  0710                     	;# 
  3731  0711                     	;# 
  3732  0712                     	;# 
  3733  0713                     	;# 
  3734  0714                     	;# 
  3735  0716                     	;# 
  3736  0717                     	;# 
  3737  0718                     	;# 
  3738  0719                     	;# 
  3739  071A                     	;# 
  3740  071B                     	;# 
  3741  071C                     	;# 
  3742  071D                     	;# 
  3743  071E                     	;# 
  3744  0796                     	;# 
  3745  0797                     	;# 
  3746  0798                     	;# 
  3747  0799                     	;# 
  3748  079A                     	;# 
  3749  079B                     	;# 
  3750  080C                     	;# 
  3751  080D                     	;# 
  3752  080E                     	;# 
  3753  080F                     	;# 
  3754  0810                     	;# 
  3755  0811                     	;# 
  3756  0812                     	;# 
  3757  0813                     	;# 
  3758  0814                     	;# 
  3759  081A                     	;# 
  3760  081B                     	;# 
  3761  081C                     	;# 
  3762  081D                     	;# 
  3763  081E                     	;# 
  3764  081F                     	;# 
  3765  088C                     	;# 
  3766  088D                     	;# 
  3767  088E                     	;# 
  3768  088F                     	;# 
  3769  0890                     	;# 
  3770  0891                     	;# 
  3771  0892                     	;# 
  3772  0893                     	;# 
  3773  0895                     	;# 
  3774  0896                     	;# 
  3775  0897                     	;# 
  3776  0898                     	;# 
  3777  0899                     	;# 
  3778  089A                     	;# 
  3779  089B                     	;# 
  3780  090C                     	;# 
  3781  090E                     	;# 
  3782  090F                     	;# 
  3783  091F                     	;# 
  3784  091F                     	;# 
  3785  098F                     	;# 
  3786  098F                     	;# 
  3787  0990                     	;# 
  3788  0991                     	;# 
  3789  0992                     	;# 
  3790  0993                     	;# 
  3791  0994                     	;# 
  3792  0995                     	;# 
  3793  0996                     	;# 
  3794  0997                     	;# 
  3795  0E0F                     	;# 
  3796  0E10                     	;# 
  3797  0E11                     	;# 
  3798  0E12                     	;# 
  3799  0E13                     	;# 
  3800  0E14                     	;# 
  3801  0E15                     	;# 
  3802  0E16                     	;# 
  3803  0E17                     	;# 
  3804  0E18                     	;# 
  3805  0E19                     	;# 
  3806  0E1A                     	;# 
  3807  0E1B                     	;# 
  3808  0E1C                     	;# 
  3809  0E1D                     	;# 
  3810  0E1E                     	;# 
  3811  0E1F                     	;# 
  3812  0E20                     	;# 
  3813  0E21                     	;# 
  3814  0E22                     	;# 
  3815  0E23                     	;# 
  3816  0E24                     	;# 
  3817  0E25                     	;# 
  3818  0E26                     	;# 
  3819  0E27                     	;# 
  3820  0E28                     	;# 
  3821  0E29                     	;# 
  3822  0E2A                     	;# 
  3823  0E2B                     	;# 
  3824  0E2C                     	;# 
  3825  0E2D                     	;# 
  3826  0E2E                     	;# 
  3827  0E2F                     	;# 
  3828  0E30                     	;# 
  3829  0E31                     	;# 
  3830  0E32                     	;# 
  3831  0E33                     	;# 
  3832  0E34                     	;# 
  3833  0E35                     	;# 
  3834  0E36                     	;# 
  3835  0E37                     	;# 
  3836  0E8F                     	;# 
  3837  0E90                     	;# 
  3838  0E91                     	;# 
  3839  0E92                     	;# 
  3840  0E93                     	;# 
  3841  0E94                     	;# 
  3842  0E95                     	;# 
  3843  0E96                     	;# 
  3844  0E97                     	;# 
  3845  0E9C                     	;# 
  3846  0E9D                     	;# 
  3847  0E9E                     	;# 
  3848  0EA1                     	;# 
  3849  0EA2                     	;# 
  3850  0EA3                     	;# 
  3851  0EA4                     	;# 
  3852  0EA5                     	;# 
  3853  0EA9                     	;# 
  3854  0EAA                     	;# 
  3855  0EAB                     	;# 
  3856  0EAC                     	;# 
  3857  0EB1                     	;# 
  3858  0EB2                     	;# 
  3859  0EB3                     	;# 
  3860  0EB8                     	;# 
  3861  0EB9                     	;# 
  3862  0EBA                     	;# 
  3863  0EBB                     	;# 
  3864  0EBC                     	;# 
  3865  0EBD                     	;# 
  3866  0EBE                     	;# 
  3867  0EC3                     	;# 
  3868  0EC5                     	;# 
  3869  0EC6                     	;# 
  3870  0EC7                     	;# 
  3871  0EC8                     	;# 
  3872  0EC9                     	;# 
  3873  0ECA                     	;# 
  3874  0ECB                     	;# 
  3875  0ECC                     	;# 
  3876  0F10                     	;# 
  3877  0F11                     	;# 
  3878  0F12                     	;# 
  3879  0F13                     	;# 
  3880  0F14                     	;# 
  3881  0F15                     	;# 
  3882  0F16                     	;# 
  3883  0F17                     	;# 
  3884  0F18                     	;# 
  3885  0F19                     	;# 
  3886  0F1A                     	;# 
  3887  0F1B                     	;# 
  3888  0F1C                     	;# 
  3889  0F1D                     	;# 
  3890  0F1E                     	;# 
  3891  0F1F                     	;# 
  3892  0F20                     	;# 
  3893  0F21                     	;# 
  3894  0F22                     	;# 
  3895  0F23                     	;# 
  3896  0F24                     	;# 
  3897  0F25                     	;# 
  3898  0F26                     	;# 
  3899  0F27                     	;# 
  3900  0F28                     	;# 
  3901  0F29                     	;# 
  3902  0F2A                     	;# 
  3903  0F2B                     	;# 
  3904  0F2C                     	;# 
  3905  0F2D                     	;# 
  3906  0F2E                     	;# 
  3907  0F2F                     	;# 
  3908  0F30                     	;# 
  3909  0F31                     	;# 
  3910  0F32                     	;# 
  3911  0F38                     	;# 
  3912  0F39                     	;# 
  3913  0F3A                     	;# 
  3914  0F3B                     	;# 
  3915  0F3C                     	;# 
  3916  0F3D                     	;# 
  3917  0F3E                     	;# 
  3918  0F3F                     	;# 
  3919  0F40                     	;# 
  3920  0F41                     	;# 
  3921  0F43                     	;# 
  3922  0F44                     	;# 
  3923  0F45                     	;# 
  3924  0F46                     	;# 
  3925  0F47                     	;# 
  3926  0F48                     	;# 
  3927  0F49                     	;# 
  3928  0F4A                     	;# 
  3929  0F4B                     	;# 
  3930  0F4C                     	;# 
  3931  0F4E                     	;# 
  3932  0F4F                     	;# 
  3933  0F50                     	;# 
  3934  0F51                     	;# 
  3935  0F52                     	;# 
  3936  0F53                     	;# 
  3937  0F54                     	;# 
  3938  0F55                     	;# 
  3939  0F56                     	;# 
  3940  0F57                     	;# 
  3941  0F59                     	;# 
  3942  0F5A                     	;# 
  3943  0F5B                     	;# 
  3944  0F5C                     	;# 
  3945  0F5D                     	;# 
  3946  0F61                     	;# 
  3947  0F62                     	;# 
  3948  0F64                     	;# 
  3949  0F65                     	;# 
  3950  0F66                     	;# 
  3951  0F67                     	;# 
  3952  0F68                     	;# 
  3953  0F69                     	;# 
  3954  0F6A                     	;# 
  3955  0F6B                     	;# 
  3956  0F6C                     	;# 
  3957  0F6D                     	;# 
  3958  0FE4                     	;# 
  3959  0FE5                     	;# 
  3960  0FE6                     	;# 
  3961  0FE7                     	;# 
  3962  0FE8                     	;# 
  3963  0FE9                     	;# 
  3964  0FEA                     	;# 
  3965  0FEB                     	;# 
  3966  0FED                     	;# 
  3967  0FEE                     	;# 
  3968  0FEF                     	;# 
  3969  0000                     	;# 
  3970  0001                     	;# 
  3971  0002                     	;# 
  3972  0003                     	;# 
  3973  0004                     	;# 
  3974  0005                     	;# 
  3975  0006                     	;# 
  3976  0007                     	;# 
  3977  0008                     	;# 
  3978  0009                     	;# 
  3979  000A                     	;# 
  3980  000B                     	;# 
  3981  000C                     	;# 
  3982  000D                     	;# 
  3983  000E                     	;# 
  3984  000F                     	;# 
  3985  0010                     	;# 
  3986  0011                     	;# 
  3987  0012                     	;# 
  3988  0013                     	;# 
  3989  0014                     	;# 
  3990  0015                     	;# 
  3991  0016                     	;# 
  3992  0017                     	;# 
  3993  0018                     	;# 
  3994  0019                     	;# 
  3995  001A                     	;# 
  3996  001C                     	;# 
  3997  001C                     	;# 
  3998  001D                     	;# 
  3999  001D                     	;# 
  4000  001E                     	;# 
  4001  001F                     	;# 
  4002  008C                     	;# 
  4003  008C                     	;# 
  4004  008D                     	;# 
  4005  008E                     	;# 
  4006  008E                     	;# 
  4007  008F                     	;# 
  4008  0090                     	;# 
  4009  0090                     	;# 
  4010  0091                     	;# 
  4011  0093                     	;# 
  4012  0094                     	;# 
  4013  0095                     	;# 
  4014  0096                     	;# 
  4015  0097                     	;# 
  4016  0098                     	;# 
  4017  0099                     	;# 
  4018  009A                     	;# 
  4019  009B                     	;# 
  4020  009C                     	;# 
  4021  009D                     	;# 
  4022  009E                     	;# 
  4023  010C                     	;# 
  4024  010D                     	;# 
  4025  010E                     	;# 
  4026  010E                     	;# 
  4027  010F                     	;# 
  4028  0110                     	;# 
  4029  0110                     	;# 
  4030  0111                     	;# 
  4031  0112                     	;# 
  4032  0112                     	;# 
  4033  0113                     	;# 
  4034  0114                     	;# 
  4035  0114                     	;# 
  4036  0115                     	;# 
  4037  0116                     	;# 
  4038  0116                     	;# 
  4039  0117                     	;# 
  4040  0119                     	;# 
  4041  0119                     	;# 
  4042  0119                     	;# 
  4043  011A                     	;# 
  4044  011A                     	;# 
  4045  011A                     	;# 
  4046  011B                     	;# 
  4047  011B                     	;# 
  4048  011B                     	;# 
  4049  011B                     	;# 
  4050  011B                     	;# 
  4051  011C                     	;# 
  4052  011C                     	;# 
  4053  011C                     	;# 
  4054  011D                     	;# 
  4055  011D                     	;# 
  4056  011D                     	;# 
  4057  011E                     	;# 
  4058  011E                     	;# 
  4059  011E                     	;# 
  4060  011F                     	;# 
  4061  011F                     	;# 
  4062  011F                     	;# 
  4063  011F                     	;# 
  4064  011F                     	;# 
  4065  018C                     	;# 
  4066  018D                     	;# 
  4067  018E                     	;# 
  4068  018F                     	;# 
  4069  0190                     	;# 
  4070  0191                     	;# 
  4071  0192                     	;# 
  4072  0196                     	;# 
  4073  0197                     	;# 
  4074  0198                     	;# 
  4075  0199                     	;# 
  4076  019A                     	;# 
  4077  019B                     	;# 
  4078  019C                     	;# 
  4079  020C                     	;# 
  4080  020C                     	;# 
  4081  020D                     	;# 
  4082  020E                     	;# 
  4083  020F                     	;# 
  4084  020F                     	;# 
  4085  0210                     	;# 
  4086  0210                     	;# 
  4087  0211                     	;# 
  4088  0211                     	;# 
  4089  0212                     	;# 
  4090  0212                     	;# 
  4091  0213                     	;# 
  4092  0214                     	;# 
  4093  0215                     	;# 
  4094  0215                     	;# 
  4095  0216                     	;# 
  4096  0216                     	;# 
  4097  0217                     	;# 
  4098  0217                     	;# 
  4099  0218                     	;# 
  4100  0218                     	;# 
  4101  0219                     	;# 
  4102  021A                     	;# 
  4103  021B                     	;# 
  4104  021B                     	;# 
  4105  021C                     	;# 
  4106  021C                     	;# 
  4107  021D                     	;# 
  4108  021D                     	;# 
  4109  021E                     	;# 
  4110  021F                     	;# 
  4111  028C                     	;# 
  4112  028C                     	;# 
  4113  028D                     	;# 
  4114  028D                     	;# 
  4115  028E                     	;# 
  4116  028F                     	;# 
  4117  0290                     	;# 
  4118  0290                     	;# 
  4119  0291                     	;# 
  4120  0292                     	;# 
  4121  0292                     	;# 
  4122  0293                     	;# 
  4123  0293                     	;# 
  4124  0294                     	;# 
  4125  0295                     	;# 
  4126  0296                     	;# 
  4127  0296                     	;# 
  4128  0297                     	;# 
  4129  0298                     	;# 
  4130  0298                     	;# 
  4131  0299                     	;# 
  4132  0299                     	;# 
  4133  029A                     	;# 
  4134  029B                     	;# 
  4135  029C                     	;# 
  4136  029C                     	;# 
  4137  029D                     	;# 
  4138  030C                     	;# 
  4139  030C                     	;# 
  4140  030D                     	;# 
  4141  030E                     	;# 
  4142  030F                     	;# 
  4143  0310                     	;# 
  4144  0310                     	;# 
  4145  0311                     	;# 
  4146  0312                     	;# 
  4147  0313                     	;# 
  4148  0314                     	;# 
  4149  0314                     	;# 
  4150  0315                     	;# 
  4151  0316                     	;# 
  4152  0317                     	;# 
  4153  0318                     	;# 
  4154  0318                     	;# 
  4155  0319                     	;# 
  4156  031A                     	;# 
  4157  031B                     	;# 
  4158  031C                     	;# 
  4159  031C                     	;# 
  4160  031D                     	;# 
  4161  031E                     	;# 
  4162  031F                     	;# 
  4163  038C                     	;# 
  4164  038C                     	;# 
  4165  038D                     	;# 
  4166  038E                     	;# 
  4167  0390                     	;# 
  4168  0390                     	;# 
  4169  0391                     	;# 
  4170  0392                     	;# 
  4171  040C                     	;# 
  4172  040D                     	;# 
  4173  040E                     	;# 
  4174  040F                     	;# 
  4175  0410                     	;# 
  4176  0411                     	;# 
  4177  0416                     	;# 
  4178  0416                     	;# 
  4179  0417                     	;# 
  4180  0418                     	;# 
  4181  0418                     	;# 
  4182  0419                     	;# 
  4183  041A                     	;# 
  4184  041A                     	;# 
  4185  041B                     	;# 
  4186  041C                     	;# 
  4187  041C                     	;# 
  4188  041D                     	;# 
  4189  041E                     	;# 
  4190  041F                     	;# 
  4191  048C                     	;# 
  4192  048C                     	;# 
  4193  048D                     	;# 
  4194  048E                     	;# 
  4195  048F                     	;# 
  4196  048F                     	;# 
  4197  0490                     	;# 
  4198  0491                     	;# 
  4199  0492                     	;# 
  4200  0492                     	;# 
  4201  0493                     	;# 
  4202  0494                     	;# 
  4203  0495                     	;# 
  4204  0495                     	;# 
  4205  0496                     	;# 
  4206  0497                     	;# 
  4207  0498                     	;# 
  4208  0499                     	;# 
  4209  049A                     	;# 
  4210  049B                     	;# 
  4211  049C                     	;# 
  4212  049D                     	;# 
  4213  050C                     	;# 
  4214  050C                     	;# 
  4215  050D                     	;# 
  4216  050E                     	;# 
  4217  050F                     	;# 
  4218  050F                     	;# 
  4219  0510                     	;# 
  4220  0511                     	;# 
  4221  0512                     	;# 
  4222  0512                     	;# 
  4223  0513                     	;# 
  4224  0514                     	;# 
  4225  0515                     	;# 
  4226  0515                     	;# 
  4227  0516                     	;# 
  4228  0517                     	;# 
  4229  0518                     	;# 
  4230  0519                     	;# 
  4231  051A                     	;# 
  4232  051B                     	;# 
  4233  051C                     	;# 
  4234  051D                     	;# 
  4235  058C                     	;# 
  4236  058C                     	;# 
  4237  058D                     	;# 
  4238  058E                     	;# 
  4239  058F                     	;# 
  4240  058F                     	;# 
  4241  0590                     	;# 
  4242  0591                     	;# 
  4243  0592                     	;# 
  4244  0593                     	;# 
  4245  060C                     	;# 
  4246  060D                     	;# 
  4247  060E                     	;# 
  4248  060F                     	;# 
  4249  0610                     	;# 
  4250  0611                     	;# 
  4251  0612                     	;# 
  4252  0613                     	;# 
  4253  0614                     	;# 
  4254  0616                     	;# 
  4255  0617                     	;# 
  4256  0618                     	;# 
  4257  0619                     	;# 
  4258  061A                     	;# 
  4259  061B                     	;# 
  4260  061C                     	;# 
  4261  061D                     	;# 
  4262  061E                     	;# 
  4263  068C                     	;# 
  4264  068D                     	;# 
  4265  068E                     	;# 
  4266  068F                     	;# 
  4267  0690                     	;# 
  4268  0691                     	;# 
  4269  0692                     	;# 
  4270  0693                     	;# 
  4271  0694                     	;# 
  4272  070C                     	;# 
  4273  070D                     	;# 
  4274  070E                     	;# 
  4275  070F                     	;# 
  4276  0710                     	;# 
  4277  0711                     	;# 
  4278  0712                     	;# 
  4279  0713                     	;# 
  4280  0714                     	;# 
  4281  0716                     	;# 
  4282  0717                     	;# 
  4283  0718                     	;# 
  4284  0719                     	;# 
  4285  071A                     	;# 
  4286  071B                     	;# 
  4287  071C                     	;# 
  4288  071D                     	;# 
  4289  071E                     	;# 
  4290  0796                     	;# 
  4291  0797                     	;# 
  4292  0798                     	;# 
  4293  0799                     	;# 
  4294  079A                     	;# 
  4295  079B                     	;# 
  4296  080C                     	;# 
  4297  080D                     	;# 
  4298  080E                     	;# 
  4299  080F                     	;# 
  4300  0810                     	;# 
  4301  0811                     	;# 
  4302  0812                     	;# 
  4303  0813                     	;# 
  4304  0814                     	;# 
  4305  081A                     	;# 
  4306  081B                     	;# 
  4307  081C                     	;# 
  4308  081D                     	;# 
  4309  081E                     	;# 
  4310  081F                     	;# 
  4311  088C                     	;# 
  4312  088D                     	;# 
  4313  088E                     	;# 
  4314  088F                     	;# 
  4315  0890                     	;# 
  4316  0891                     	;# 
  4317  0892                     	;# 
  4318  0893                     	;# 
  4319  0895                     	;# 
  4320  0896                     	;# 
  4321  0897                     	;# 
  4322  0898                     	;# 
  4323  0899                     	;# 
  4324  089A                     	;# 
  4325  089B                     	;# 
  4326  090C                     	;# 
  4327  090E                     	;# 
  4328  090F                     	;# 
  4329  091F                     	;# 
  4330  091F                     	;# 
  4331  098F                     	;# 
  4332  098F                     	;# 
  4333  0990                     	;# 
  4334  0991                     	;# 
  4335  0992                     	;# 
  4336  0993                     	;# 
  4337  0994                     	;# 
  4338  0995                     	;# 
  4339  0996                     	;# 
  4340  0997                     	;# 
  4341  0E0F                     	;# 
  4342  0E10                     	;# 
  4343  0E11                     	;# 
  4344  0E12                     	;# 
  4345  0E13                     	;# 
  4346  0E14                     	;# 
  4347  0E15                     	;# 
  4348  0E16                     	;# 
  4349  0E17                     	;# 
  4350  0E18                     	;# 
  4351  0E19                     	;# 
  4352  0E1A                     	;# 
  4353  0E1B                     	;# 
  4354  0E1C                     	;# 
  4355  0E1D                     	;# 
  4356  0E1E                     	;# 
  4357  0E1F                     	;# 
  4358  0E20                     	;# 
  4359  0E21                     	;# 
  4360  0E22                     	;# 
  4361  0E23                     	;# 
  4362  0E24                     	;# 
  4363  0E25                     	;# 
  4364  0E26                     	;# 
  4365  0E27                     	;# 
  4366  0E28                     	;# 
  4367  0E29                     	;# 
  4368  0E2A                     	;# 
  4369  0E2B                     	;# 
  4370  0E2C                     	;# 
  4371  0E2D                     	;# 
  4372  0E2E                     	;# 
  4373  0E2F                     	;# 
  4374  0E30                     	;# 
  4375  0E31                     	;# 
  4376  0E32                     	;# 
  4377  0E33                     	;# 
  4378  0E34                     	;# 
  4379  0E35                     	;# 
  4380  0E36                     	;# 
  4381  0E37                     	;# 
  4382  0E8F                     	;# 
  4383  0E90                     	;# 
  4384  0E91                     	;# 
  4385  0E92                     	;# 
  4386  0E93                     	;# 
  4387  0E94                     	;# 
  4388  0E95                     	;# 
  4389  0E96                     	;# 
  4390  0E97                     	;# 
  4391  0E9C                     	;# 
  4392  0E9D                     	;# 
  4393  0E9E                     	;# 
  4394  0EA1                     	;# 
  4395  0EA2                     	;# 
  4396  0EA3                     	;# 
  4397  0EA4                     	;# 
  4398  0EA5                     	;# 
  4399  0EA9                     	;# 
  4400  0EAA                     	;# 
  4401  0EAB                     	;# 
  4402  0EAC                     	;# 
  4403  0EB1                     	;# 
  4404  0EB2                     	;# 
  4405  0EB3                     	;# 
  4406  0EB8                     	;# 
  4407  0EB9                     	;# 
  4408  0EBA                     	;# 
  4409  0EBB                     	;# 
  4410  0EBC                     	;# 
  4411  0EBD                     	;# 
  4412  0EBE                     	;# 
  4413  0EC3                     	;# 
  4414  0EC5                     	;# 
  4415  0EC6                     	;# 
  4416  0EC7                     	;# 
  4417  0EC8                     	;# 
  4418  0EC9                     	;# 
  4419  0ECA                     	;# 
  4420  0ECB                     	;# 
  4421  0ECC                     	;# 
  4422  0F10                     	;# 
  4423  0F11                     	;# 
  4424  0F12                     	;# 
  4425  0F13                     	;# 
  4426  0F14                     	;# 
  4427  0F15                     	;# 
  4428  0F16                     	;# 
  4429  0F17                     	;# 
  4430  0F18                     	;# 
  4431  0F19                     	;# 
  4432  0F1A                     	;# 
  4433  0F1B                     	;# 
  4434  0F1C                     	;# 
  4435  0F1D                     	;# 
  4436  0F1E                     	;# 
  4437  0F1F                     	;# 
  4438  0F20                     	;# 
  4439  0F21                     	;# 
  4440  0F22                     	;# 
  4441  0F23                     	;# 
  4442  0F24                     	;# 
  4443  0F25                     	;# 
  4444  0F26                     	;# 
  4445  0F27                     	;# 
  4446  0F28                     	;# 
  4447  0F29                     	;# 
  4448  0F2A                     	;# 
  4449  0F2B                     	;# 
  4450  0F2C                     	;# 
  4451  0F2D                     	;# 
  4452  0F2E                     	;# 
  4453  0F2F                     	;# 
  4454  0F30                     	;# 
  4455  0F31                     	;# 
  4456  0F32                     	;# 
  4457  0F38                     	;# 
  4458  0F39                     	;# 
  4459  0F3A                     	;# 
  4460  0F3B                     	;# 
  4461  0F3C                     	;# 
  4462  0F3D                     	;# 
  4463  0F3E                     	;# 
  4464  0F3F                     	;# 
  4465  0F40                     	;# 
  4466  0F41                     	;# 
  4467  0F43                     	;# 
  4468  0F44                     	;# 
  4469  0F45                     	;# 
  4470  0F46                     	;# 
  4471  0F47                     	;# 
  4472  0F48                     	;# 
  4473  0F49                     	;# 
  4474  0F4A                     	;# 
  4475  0F4B                     	;# 
  4476  0F4C                     	;# 
  4477  0F4E                     	;# 
  4478  0F4F                     	;# 
  4479  0F50                     	;# 
  4480  0F51                     	;# 
  4481  0F52                     	;# 
  4482  0F53                     	;# 
  4483  0F54                     	;# 
  4484  0F55                     	;# 
  4485  0F56                     	;# 
  4486  0F57                     	;# 
  4487  0F59                     	;# 
  4488  0F5A                     	;# 
  4489  0F5B                     	;# 
  4490  0F5C                     	;# 
  4491  0F5D                     	;# 
  4492  0F61                     	;# 
  4493  0F62                     	;# 
  4494  0F64                     	;# 
  4495  0F65                     	;# 
  4496  0F66                     	;# 
  4497  0F67                     	;# 
  4498  0F68                     	;# 
  4499  0F69                     	;# 
  4500  0F6A                     	;# 
  4501  0F6B                     	;# 
  4502  0F6C                     	;# 
  4503  0F6D                     	;# 
  4504  0FE4                     	;# 
  4505  0FE5                     	;# 
  4506  0FE6                     	;# 
  4507  0FE7                     	;# 
  4508  0FE8                     	;# 
  4509  0FE9                     	;# 
  4510  0FEA                     	;# 
  4511  0FEB                     	;# 
  4512  0FED                     	;# 
  4513  0FEE                     	;# 
  4514  0FEF                     	;# 
  4515  0000                     	;# 
  4516  0001                     	;# 
  4517  0002                     	;# 
  4518  0003                     	;# 
  4519  0004                     	;# 
  4520  0005                     	;# 
  4521  0006                     	;# 
  4522  0007                     	;# 
  4523  0008                     	;# 
  4524  0009                     	;# 
  4525  000A                     	;# 
  4526  000B                     	;# 
  4527  000C                     	;# 
  4528  000D                     	;# 
  4529  000E                     	;# 
  4530  000F                     	;# 
  4531  0010                     	;# 
  4532  0011                     	;# 
  4533  0012                     	;# 
  4534  0013                     	;# 
  4535  0014                     	;# 
  4536  0015                     	;# 
  4537  0016                     	;# 
  4538  0017                     	;# 
  4539  0018                     	;# 
  4540  0019                     	;# 
  4541  001A                     	;# 
  4542  001C                     	;# 
  4543  001C                     	;# 
  4544  001D                     	;# 
  4545  001D                     	;# 
  4546  001E                     	;# 
  4547  001F                     	;# 
  4548  008C                     	;# 
  4549  008C                     	;# 
  4550  008D                     	;# 
  4551  008E                     	;# 
  4552  008E                     	;# 
  4553  008F                     	;# 
  4554  0090                     	;# 
  4555  0090                     	;# 
  4556  0091                     	;# 
  4557  0093                     	;# 
  4558  0094                     	;# 
  4559  0095                     	;# 
  4560  0096                     	;# 
  4561  0097                     	;# 
  4562  0098                     	;# 
  4563  0099                     	;# 
  4564  009A                     	;# 
  4565  009B                     	;# 
  4566  009C                     	;# 
  4567  009D                     	;# 
  4568  009E                     	;# 
  4569  010C                     	;# 
  4570  010D                     	;# 
  4571  010E                     	;# 
  4572  010E                     	;# 
  4573  010F                     	;# 
  4574  0110                     	;# 
  4575  0110                     	;# 
  4576  0111                     	;# 
  4577  0112                     	;# 
  4578  0112                     	;# 
  4579  0113                     	;# 
  4580  0114                     	;# 
  4581  0114                     	;# 
  4582  0115                     	;# 
  4583  0116                     	;# 
  4584  0116                     	;# 
  4585  0117                     	;# 
  4586  0119                     	;# 
  4587  0119                     	;# 
  4588  0119                     	;# 
  4589  011A                     	;# 
  4590  011A                     	;# 
  4591  011A                     	;# 
  4592  011B                     	;# 
  4593  011B                     	;# 
  4594  011B                     	;# 
  4595  011B                     	;# 
  4596  011B                     	;# 
  4597  011C                     	;# 
  4598  011C                     	;# 
  4599  011C                     	;# 
  4600  011D                     	;# 
  4601  011D                     	;# 
  4602  011D                     	;# 
  4603  011E                     	;# 
  4604  011E                     	;# 
  4605  011E                     	;# 
  4606  011F                     	;# 
  4607  011F                     	;# 
  4608  011F                     	;# 
  4609  011F                     	;# 
  4610  011F                     	;# 
  4611  018C                     	;# 
  4612  018D                     	;# 
  4613  018E                     	;# 
  4614  018F                     	;# 
  4615  0190                     	;# 
  4616  0191                     	;# 
  4617  0192                     	;# 
  4618  0196                     	;# 
  4619  0197                     	;# 
  4620  0198                     	;# 
  4621  0199                     	;# 
  4622  019A                     	;# 
  4623  019B                     	;# 
  4624  019C                     	;# 
  4625  020C                     	;# 
  4626  020C                     	;# 
  4627  020D                     	;# 
  4628  020E                     	;# 
  4629  020F                     	;# 
  4630  020F                     	;# 
  4631  0210                     	;# 
  4632  0210                     	;# 
  4633  0211                     	;# 
  4634  0211                     	;# 
  4635  0212                     	;# 
  4636  0212                     	;# 
  4637  0213                     	;# 
  4638  0214                     	;# 
  4639  0215                     	;# 
  4640  0215                     	;# 
  4641  0216                     	;# 
  4642  0216                     	;# 
  4643  0217                     	;# 
  4644  0217                     	;# 
  4645  0218                     	;# 
  4646  0218                     	;# 
  4647  0219                     	;# 
  4648  021A                     	;# 
  4649  021B                     	;# 
  4650  021B                     	;# 
  4651  021C                     	;# 
  4652  021C                     	;# 
  4653  021D                     	;# 
  4654  021D                     	;# 
  4655  021E                     	;# 
  4656  021F                     	;# 
  4657  028C                     	;# 
  4658  028C                     	;# 
  4659  028D                     	;# 
  4660  028D                     	;# 
  4661  028E                     	;# 
  4662  028F                     	;# 
  4663  0290                     	;# 
  4664  0290                     	;# 
  4665  0291                     	;# 
  4666  0292                     	;# 
  4667  0292                     	;# 
  4668  0293                     	;# 
  4669  0293                     	;# 
  4670  0294                     	;# 
  4671  0295                     	;# 
  4672  0296                     	;# 
  4673  0296                     	;# 
  4674  0297                     	;# 
  4675  0298                     	;# 
  4676  0298                     	;# 
  4677  0299                     	;# 
  4678  0299                     	;# 
  4679  029A                     	;# 
  4680  029B                     	;# 
  4681  029C                     	;# 
  4682  029C                     	;# 
  4683  029D                     	;# 
  4684  030C                     	;# 
  4685  030C                     	;# 
  4686  030D                     	;# 
  4687  030E                     	;# 
  4688  030F                     	;# 
  4689  0310                     	;# 
  4690  0310                     	;# 
  4691  0311                     	;# 
  4692  0312                     	;# 
  4693  0313                     	;# 
  4694  0314                     	;# 
  4695  0314                     	;# 
  4696  0315                     	;# 
  4697  0316                     	;# 
  4698  0317                     	;# 
  4699  0318                     	;# 
  4700  0318                     	;# 
  4701  0319                     	;# 
  4702  031A                     	;# 
  4703  031B                     	;# 
  4704  031C                     	;# 
  4705  031C                     	;# 
  4706  031D                     	;# 
  4707  031E                     	;# 
  4708  031F                     	;# 
  4709  038C                     	;# 
  4710  038C                     	;# 
  4711  038D                     	;# 
  4712  038E                     	;# 
  4713  0390                     	;# 
  4714  0390                     	;# 
  4715  0391                     	;# 
  4716  0392                     	;# 
  4717  040C                     	;# 
  4718  040D                     	;# 
  4719  040E                     	;# 
  4720  040F                     	;# 
  4721  0410                     	;# 
  4722  0411                     	;# 
  4723  0416                     	;# 
  4724  0416                     	;# 
  4725  0417                     	;# 
  4726  0418                     	;# 
  4727  0418                     	;# 
  4728  0419                     	;# 
  4729  041A                     	;# 
  4730  041A                     	;# 
  4731  041B                     	;# 
  4732  041C                     	;# 
  4733  041C                     	;# 
  4734  041D                     	;# 
  4735  041E                     	;# 
  4736  041F                     	;# 
  4737  048C                     	;# 
  4738  048C                     	;# 
  4739  048D                     	;# 
  4740  048E                     	;# 
  4741  048F                     	;# 
  4742  048F                     	;# 
  4743  0490                     	;# 
  4744  0491                     	;# 
  4745  0492                     	;# 
  4746  0492                     	;# 
  4747  0493                     	;# 
  4748  0494                     	;# 
  4749  0495                     	;# 
  4750  0495                     	;# 
  4751  0496                     	;# 
  4752  0497                     	;# 
  4753  0498                     	;# 
  4754  0499                     	;# 
  4755  049A                     	;# 
  4756  049B                     	;# 
  4757  049C                     	;# 
  4758  049D                     	;# 
  4759  050C                     	;# 
  4760  050C                     	;# 
  4761  050D                     	;# 
  4762  050E                     	;# 
  4763  050F                     	;# 
  4764  050F                     	;# 
  4765  0510                     	;# 
  4766  0511                     	;# 
  4767  0512                     	;# 
  4768  0512                     	;# 
  4769  0513                     	;# 
  4770  0514                     	;# 
  4771  0515                     	;# 
  4772  0515                     	;# 
  4773  0516                     	;# 
  4774  0517                     	;# 
  4775  0518                     	;# 
  4776  0519                     	;# 
  4777  051A                     	;# 
  4778  051B                     	;# 
  4779  051C                     	;# 
  4780  051D                     	;# 
  4781  058C                     	;# 
  4782  058C                     	;# 
  4783  058D                     	;# 
  4784  058E                     	;# 
  4785  058F                     	;# 
  4786  058F                     	;# 
  4787  0590                     	;# 
  4788  0591                     	;# 
  4789  0592                     	;# 
  4790  0593                     	;# 
  4791  060C                     	;# 
  4792  060D                     	;# 
  4793  060E                     	;# 
  4794  060F                     	;# 
  4795  0610                     	;# 
  4796  0611                     	;# 
  4797  0612                     	;# 
  4798  0613                     	;# 
  4799  0614                     	;# 
  4800  0616                     	;# 
  4801  0617                     	;# 
  4802  0618                     	;# 
  4803  0619                     	;# 
  4804  061A                     	;# 
  4805  061B                     	;# 
  4806  061C                     	;# 
  4807  061D                     	;# 
  4808  061E                     	;# 
  4809  068C                     	;# 
  4810  068D                     	;# 
  4811  068E                     	;# 
  4812  068F                     	;# 
  4813  0690                     	;# 
  4814  0691                     	;# 
  4815  0692                     	;# 
  4816  0693                     	;# 
  4817  0694                     	;# 
  4818  070C                     	;# 
  4819  070D                     	;# 
  4820  070E                     	;# 
  4821  070F                     	;# 
  4822  0710                     	;# 
  4823  0711                     	;# 
  4824  0712                     	;# 
  4825  0713                     	;# 
  4826  0714                     	;# 
  4827  0716                     	;# 
  4828  0717                     	;# 
  4829  0718                     	;# 
  4830  0719                     	;# 
  4831  071A                     	;# 
  4832  071B                     	;# 
  4833  071C                     	;# 
  4834  071D                     	;# 
  4835  071E                     	;# 
  4836  0796                     	;# 
  4837  0797                     	;# 
  4838  0798                     	;# 
  4839  0799                     	;# 
  4840  079A                     	;# 
  4841  079B                     	;# 
  4842  080C                     	;# 
  4843  080D                     	;# 
  4844  080E                     	;# 
  4845  080F                     	;# 
  4846  0810                     	;# 
  4847  0811                     	;# 
  4848  0812                     	;# 
  4849  0813                     	;# 
  4850  0814                     	;# 
  4851  081A                     	;# 
  4852  081B                     	;# 
  4853  081C                     	;# 
  4854  081D                     	;# 
  4855  081E                     	;# 
  4856  081F                     	;# 
  4857  088C                     	;# 
  4858  088D                     	;# 
  4859  088E                     	;# 
  4860  088F                     	;# 
  4861  0890                     	;# 
  4862  0891                     	;# 
  4863  0892                     	;# 
  4864  0893                     	;# 
  4865  0895                     	;# 
  4866  0896                     	;# 
  4867  0897                     	;# 
  4868  0898                     	;# 
  4869  0899                     	;# 
  4870  089A                     	;# 
  4871  089B                     	;# 
  4872  090C                     	;# 
  4873  090E                     	;# 
  4874  090F                     	;# 
  4875  091F                     	;# 
  4876  091F                     	;# 
  4877  098F                     	;# 
  4878  098F                     	;# 
  4879  0990                     	;# 
  4880  0991                     	;# 
  4881  0992                     	;# 
  4882  0993                     	;# 
  4883  0994                     	;# 
  4884  0995                     	;# 
  4885  0996                     	;# 
  4886  0997                     	;# 
  4887  0E0F                     	;# 
  4888  0E10                     	;# 
  4889  0E11                     	;# 
  4890  0E12                     	;# 
  4891  0E13                     	;# 
  4892  0E14                     	;# 
  4893  0E15                     	;# 
  4894  0E16                     	;# 
  4895  0E17                     	;# 
  4896  0E18                     	;# 
  4897  0E19                     	;# 
  4898  0E1A                     	;# 
  4899  0E1B                     	;# 
  4900  0E1C                     	;# 
  4901  0E1D                     	;# 
  4902  0E1E                     	;# 
  4903  0E1F                     	;# 
  4904  0E20                     	;# 
  4905  0E21                     	;# 
  4906  0E22                     	;# 
  4907  0E23                     	;# 
  4908  0E24                     	;# 
  4909  0E25                     	;# 
  4910  0E26                     	;# 
  4911  0E27                     	;# 
  4912  0E28                     	;# 
  4913  0E29                     	;# 
  4914  0E2A                     	;# 
  4915  0E2B                     	;# 
  4916  0E2C                     	;# 
  4917  0E2D                     	;# 
  4918  0E2E                     	;# 
  4919  0E2F                     	;# 
  4920  0E30                     	;# 
  4921  0E31                     	;# 
  4922  0E32                     	;# 
  4923  0E33                     	;# 
  4924  0E34                     	;# 
  4925  0E35                     	;# 
  4926  0E36                     	;# 
  4927  0E37                     	;# 
  4928  0E8F                     	;# 
  4929  0E90                     	;# 
  4930  0E91                     	;# 
  4931  0E92                     	;# 
  4932  0E93                     	;# 
  4933  0E94                     	;# 
  4934  0E95                     	;# 
  4935  0E96                     	;# 
  4936  0E97                     	;# 
  4937  0E9C                     	;# 
  4938  0E9D                     	;# 
  4939  0E9E                     	;# 
  4940  0EA1                     	;# 
  4941  0EA2                     	;# 
  4942  0EA3                     	;# 
  4943  0EA4                     	;# 
  4944  0EA5                     	;# 
  4945  0EA9                     	;# 
  4946  0EAA                     	;# 
  4947  0EAB                     	;# 
  4948  0EAC                     	;# 
  4949  0EB1                     	;# 
  4950  0EB2                     	;# 
  4951  0EB3                     	;# 
  4952  0EB8                     	;# 
  4953  0EB9                     	;# 
  4954  0EBA                     	;# 
  4955  0EBB                     	;# 
  4956  0EBC                     	;# 
  4957  0EBD                     	;# 
  4958  0EBE                     	;# 
  4959  0EC3                     	;# 
  4960  0EC5                     	;# 
  4961  0EC6                     	;# 
  4962  0EC7                     	;# 
  4963  0EC8                     	;# 
  4964  0EC9                     	;# 
  4965  0ECA                     	;# 
  4966  0ECB                     	;# 
  4967  0ECC                     	;# 
  4968  0F10                     	;# 
  4969  0F11                     	;# 
  4970  0F12                     	;# 
  4971  0F13                     	;# 
  4972  0F14                     	;# 
  4973  0F15                     	;# 
  4974  0F16                     	;# 
  4975  0F17                     	;# 
  4976  0F18                     	;# 
  4977  0F19                     	;# 
  4978  0F1A                     	;# 
  4979  0F1B                     	;# 
  4980  0F1C                     	;# 
  4981  0F1D                     	;# 
  4982  0F1E                     	;# 
  4983  0F1F                     	;# 
  4984  0F20                     	;# 
  4985  0F21                     	;# 
  4986  0F22                     	;# 
  4987  0F23                     	;# 
  4988  0F24                     	;# 
  4989  0F25                     	;# 
  4990  0F26                     	;# 
  4991  0F27                     	;# 
  4992  0F28                     	;# 
  4993  0F29                     	;# 
  4994  0F2A                     	;# 
  4995  0F2B                     	;# 
  4996  0F2C                     	;# 
  4997  0F2D                     	;# 
  4998  0F2E                     	;# 
  4999  0F2F                     	;# 
  5000  0F30                     	;# 
  5001  0F31                     	;# 
  5002  0F32                     	;# 
  5003  0F38                     	;# 
  5004  0F39                     	;# 
  5005  0F3A                     	;# 
  5006  0F3B                     	;# 
  5007  0F3C                     	;# 
  5008  0F3D                     	;# 
  5009  0F3E                     	;# 
  5010  0F3F                     	;# 
  5011  0F40                     	;# 
  5012  0F41                     	;# 
  5013  0F43                     	;# 
  5014  0F44                     	;# 
  5015  0F45                     	;# 
  5016  0F46                     	;# 
  5017  0F47                     	;# 
  5018  0F48                     	;# 
  5019  0F49                     	;# 
  5020  0F4A                     	;# 
  5021  0F4B                     	;# 
  5022  0F4C                     	;# 
  5023  0F4E                     	;# 
  5024  0F4F                     	;# 
  5025  0F50                     	;# 
  5026  0F51                     	;# 
  5027  0F52                     	;# 
  5028  0F53                     	;# 
  5029  0F54                     	;# 
  5030  0F55                     	;# 
  5031  0F56                     	;# 
  5032  0F57                     	;# 
  5033  0F59                     	;# 
  5034  0F5A                     	;# 
  5035  0F5B                     	;# 
  5036  0F5C                     	;# 
  5037  0F5D                     	;# 
  5038  0F61                     	;# 
  5039  0F62                     	;# 
  5040  0F64                     	;# 
  5041  0F65                     	;# 
  5042  0F66                     	;# 
  5043  0F67                     	;# 
  5044  0F68                     	;# 
  5045  0F69                     	;# 
  5046  0F6A                     	;# 
  5047  0F6B                     	;# 
  5048  0F6C                     	;# 
  5049  0F6D                     	;# 
  5050  0FE4                     	;# 
  5051  0FE5                     	;# 
  5052  0FE6                     	;# 
  5053  0FE7                     	;# 
  5054  0FE8                     	;# 
  5055  0FE9                     	;# 
  5056  0FEA                     	;# 
  5057  0FEB                     	;# 
  5058  0FED                     	;# 
  5059  0FEE                     	;# 
  5060  0FEF                     	;# 
  5061  0000                     	;# 
  5062  0001                     	;# 
  5063  0002                     	;# 
  5064  0003                     	;# 
  5065  0004                     	;# 
  5066  0005                     	;# 
  5067  0006                     	;# 
  5068  0007                     	;# 
  5069  0008                     	;# 
  5070  0009                     	;# 
  5071  000A                     	;# 
  5072  000B                     	;# 
  5073  000C                     	;# 
  5074  000D                     	;# 
  5075  000E                     	;# 
  5076  000F                     	;# 
  5077  0010                     	;# 
  5078  0011                     	;# 
  5079  0012                     	;# 
  5080  0013                     	;# 
  5081  0014                     	;# 
  5082  0015                     	;# 
  5083  0016                     	;# 
  5084  0017                     	;# 
  5085  0018                     	;# 
  5086  0019                     	;# 
  5087  001A                     	;# 
  5088  001C                     	;# 
  5089  001C                     	;# 
  5090  001D                     	;# 
  5091  001D                     	;# 
  5092  001E                     	;# 
  5093  001F                     	;# 
  5094  008C                     	;# 
  5095  008C                     	;# 
  5096  008D                     	;# 
  5097  008E                     	;# 
  5098  008E                     	;# 
  5099  008F                     	;# 
  5100  0090                     	;# 
  5101  0090                     	;# 
  5102  0091                     	;# 
  5103  0093                     	;# 
  5104  0094                     	;# 
  5105  0095                     	;# 
  5106  0096                     	;# 
  5107  0097                     	;# 
  5108  0098                     	;# 
  5109  0099                     	;# 
  5110  009A                     	;# 
  5111  009B                     	;# 
  5112  009C                     	;# 
  5113  009D                     	;# 
  5114  009E                     	;# 
  5115  010C                     	;# 
  5116  010D                     	;# 
  5117  010E                     	;# 
  5118  010E                     	;# 
  5119  010F                     	;# 
  5120  0110                     	;# 
  5121  0110                     	;# 
  5122  0111                     	;# 
  5123  0112                     	;# 
  5124  0112                     	;# 
  5125  0113                     	;# 
  5126  0114                     	;# 
  5127  0114                     	;# 
  5128  0115                     	;# 
  5129  0116                     	;# 
  5130  0116                     	;# 
  5131  0117                     	;# 
  5132  0119                     	;# 
  5133  0119                     	;# 
  5134  0119                     	;# 
  5135  011A                     	;# 
  5136  011A                     	;# 
  5137  011A                     	;# 
  5138  011B                     	;# 
  5139  011B                     	;# 
  5140  011B                     	;# 
  5141  011B                     	;# 
  5142  011B                     	;# 
  5143  011C                     	;# 
  5144  011C                     	;# 
  5145  011C                     	;# 
  5146  011D                     	;# 
  5147  011D                     	;# 
  5148  011D                     	;# 
  5149  011E                     	;# 
  5150  011E                     	;# 
  5151  011E                     	;# 
  5152  011F                     	;# 
  5153  011F                     	;# 
  5154  011F                     	;# 
  5155  011F                     	;# 
  5156  011F                     	;# 
  5157  018C                     	;# 
  5158  018D                     	;# 
  5159  018E                     	;# 
  5160  018F                     	;# 
  5161  0190                     	;# 
  5162  0191                     	;# 
  5163  0192                     	;# 
  5164  0196                     	;# 
  5165  0197                     	;# 
  5166  0198                     	;# 
  5167  0199                     	;# 
  5168  019A                     	;# 
  5169  019B                     	;# 
  5170  019C                     	;# 
  5171  020C                     	;# 
  5172  020C                     	;# 
  5173  020D                     	;# 
  5174  020E                     	;# 
  5175  020F                     	;# 
  5176  020F                     	;# 
  5177  0210                     	;# 
  5178  0210                     	;# 
  5179  0211                     	;# 
  5180  0211                     	;# 
  5181  0212                     	;# 
  5182  0212                     	;# 
  5183  0213                     	;# 
  5184  0214                     	;# 
  5185  0215                     	;# 
  5186  0215                     	;# 
  5187  0216                     	;# 
  5188  0216                     	;# 
  5189  0217                     	;# 
  5190  0217                     	;# 
  5191  0218                     	;# 
  5192  0218                     	;# 
  5193  0219                     	;# 
  5194  021A                     	;# 
  5195  021B                     	;# 
  5196  021B                     	;# 
  5197  021C                     	;# 
  5198  021C                     	;# 
  5199  021D                     	;# 
  5200  021D                     	;# 
  5201  021E                     	;# 
  5202  021F                     	;# 
  5203  028C                     	;# 
  5204  028C                     	;# 
  5205  028D                     	;# 
  5206  028D                     	;# 
  5207  028E                     	;# 
  5208  028F                     	;# 
  5209  0290                     	;# 
  5210  0290                     	;# 
  5211  0291                     	;# 
  5212  0292                     	;# 
  5213  0292                     	;# 
  5214  0293                     	;# 
  5215  0293                     	;# 
  5216  0294                     	;# 
  5217  0295                     	;# 
  5218  0296                     	;# 
  5219  0296                     	;# 
  5220  0297                     	;# 
  5221  0298                     	;# 
  5222  0298                     	;# 
  5223  0299                     	;# 
  5224  0299                     	;# 
  5225  029A                     	;# 
  5226  029B                     	;# 
  5227  029C                     	;# 
  5228  029C                     	;# 
  5229  029D                     	;# 
  5230  030C                     	;# 
  5231  030C                     	;# 
  5232  030D                     	;# 
  5233  030E                     	;# 
  5234  030F                     	;# 
  5235  0310                     	;# 
  5236  0310                     	;# 
  5237  0311                     	;# 
  5238  0312                     	;# 
  5239  0313                     	;# 
  5240  0314                     	;# 
  5241  0314                     	;# 
  5242  0315                     	;# 
  5243  0316                     	;# 
  5244  0317                     	;# 
  5245  0318                     	;# 
  5246  0318                     	;# 
  5247  0319                     	;# 
  5248  031A                     	;# 
  5249  031B                     	;# 
  5250  031C                     	;# 
  5251  031C                     	;# 
  5252  031D                     	;# 
  5253  031E                     	;# 
  5254  031F                     	;# 
  5255  038C                     	;# 
  5256  038C                     	;# 
  5257  038D                     	;# 
  5258  038E                     	;# 
  5259  0390                     	;# 
  5260  0390                     	;# 
  5261  0391                     	;# 
  5262  0392                     	;# 
  5263  040C                     	;# 
  5264  040D                     	;# 
  5265  040E                     	;# 
  5266  040F                     	;# 
  5267  0410                     	;# 
  5268  0411                     	;# 
  5269  0416                     	;# 
  5270  0416                     	;# 
  5271  0417                     	;# 
  5272  0418                     	;# 
  5273  0418                     	;# 
  5274  0419                     	;# 
  5275  041A                     	;# 
  5276  041A                     	;# 
  5277  041B                     	;# 
  5278  041C                     	;# 
  5279  041C                     	;# 
  5280  041D                     	;# 
  5281  041E                     	;# 
  5282  041F                     	;# 
  5283  048C                     	;# 
  5284  048C                     	;# 
  5285  048D                     	;# 
  5286  048E                     	;# 
  5287  048F                     	;# 
  5288  048F                     	;# 
  5289  0490                     	;# 
  5290  0491                     	;# 
  5291  0492                     	;# 
  5292  0492                     	;# 
  5293  0493                     	;# 
  5294  0494                     	;# 
  5295  0495                     	;# 
  5296  0495                     	;# 
  5297  0496                     	;# 
  5298  0497                     	;# 
  5299  0498                     	;# 
  5300  0499                     	;# 
  5301  049A                     	;# 
  5302  049B                     	;# 
  5303  049C                     	;# 
  5304  049D                     	;# 
  5305  050C                     	;# 
  5306  050C                     	;# 
  5307  050D                     	;# 
  5308  050E                     	;# 
  5309  050F                     	;# 
  5310  050F                     	;# 
  5311  0510                     	;# 
  5312  0511                     	;# 
  5313  0512                     	;# 
  5314  0512                     	;# 
  5315  0513                     	;# 
  5316  0514                     	;# 
  5317  0515                     	;# 
  5318  0515                     	;# 
  5319  0516                     	;# 
  5320  0517                     	;# 
  5321  0518                     	;# 
  5322  0519                     	;# 
  5323  051A                     	;# 
  5324  051B                     	;# 
  5325  051C                     	;# 
  5326  051D                     	;# 
  5327  058C                     	;# 
  5328  058C                     	;# 
  5329  058D                     	;# 
  5330  058E                     	;# 
  5331  058F                     	;# 
  5332  058F                     	;# 
  5333  0590                     	;# 
  5334  0591                     	;# 
  5335  0592                     	;# 
  5336  0593                     	;# 
  5337  060C                     	;# 
  5338  060D                     	;# 
  5339  060E                     	;# 
  5340  060F                     	;# 
  5341  0610                     	;# 
  5342  0611                     	;# 
  5343  0612                     	;# 
  5344  0613                     	;# 
  5345  0614                     	;# 
  5346  0616                     	;# 
  5347  0617                     	;# 
  5348  0618                     	;# 
  5349  0619                     	;# 
  5350  061A                     	;# 
  5351  061B                     	;# 
  5352  061C                     	;# 
  5353  061D                     	;# 
  5354  061E                     	;# 
  5355  068C                     	;# 
  5356  068D                     	;# 
  5357  068E                     	;# 
  5358  068F                     	;# 
  5359  0690                     	;# 
  5360  0691                     	;# 
  5361  0692                     	;# 
  5362  0693                     	;# 
  5363  0694                     	;# 
  5364  070C                     	;# 
  5365  070D                     	;# 
  5366  070E                     	;# 
  5367  070F                     	;# 
  5368  0710                     	;# 
  5369  0711                     	;# 
  5370  0712                     	;# 
  5371  0713                     	;# 
  5372  0714                     	;# 
  5373  0716                     	;# 
  5374  0717                     	;# 
  5375  0718                     	;# 
  5376  0719                     	;# 
  5377  071A                     	;# 
  5378  071B                     	;# 
  5379  071C                     	;# 
  5380  071D                     	;# 
  5381  071E                     	;# 
  5382  0796                     	;# 
  5383  0797                     	;# 
  5384  0798                     	;# 
  5385  0799                     	;# 
  5386  079A                     	;# 
  5387  079B                     	;# 
  5388  080C                     	;# 
  5389  080D                     	;# 
  5390  080E                     	;# 
  5391  080F                     	;# 
  5392  0810                     	;# 
  5393  0811                     	;# 
  5394  0812                     	;# 
  5395  0813                     	;# 
  5396  0814                     	;# 
  5397  081A                     	;# 
  5398  081B                     	;# 
  5399  081C                     	;# 
  5400  081D                     	;# 
  5401  081E                     	;# 
  5402  081F                     	;# 
  5403  088C                     	;# 
  5404  088D                     	;# 
  5405  088E                     	;# 
  5406  088F                     	;# 
  5407  0890                     	;# 
  5408  0891                     	;# 
  5409  0892                     	;# 
  5410  0893                     	;# 
  5411  0895                     	;# 
  5412  0896                     	;# 
  5413  0897                     	;# 
  5414  0898                     	;# 
  5415  0899                     	;# 
  5416  089A                     	;# 
  5417  089B                     	;# 
  5418  090C                     	;# 
  5419  090E                     	;# 
  5420  090F                     	;# 
  5421  091F                     	;# 
  5422  091F                     	;# 
  5423  098F                     	;# 
  5424  098F                     	;# 
  5425  0990                     	;# 
  5426  0991                     	;# 
  5427  0992                     	;# 
  5428  0993                     	;# 
  5429  0994                     	;# 
  5430  0995                     	;# 
  5431  0996                     	;# 
  5432  0997                     	;# 
  5433  0E0F                     	;# 
  5434  0E10                     	;# 
  5435  0E11                     	;# 
  5436  0E12                     	;# 
  5437  0E13                     	;# 
  5438  0E14                     	;# 
  5439  0E15                     	;# 
  5440  0E16                     	;# 
  5441  0E17                     	;# 
  5442  0E18                     	;# 
  5443  0E19                     	;# 
  5444  0E1A                     	;# 
  5445  0E1B                     	;# 
  5446  0E1C                     	;# 
  5447  0E1D                     	;# 
  5448  0E1E                     	;# 
  5449  0E1F                     	;# 
  5450  0E20                     	;# 
  5451  0E21                     	;# 
  5452  0E22                     	;# 
  5453  0E23                     	;# 
  5454  0E24                     	;# 
  5455  0E25                     	;# 
  5456  0E26                     	;# 
  5457  0E27                     	;# 
  5458  0E28                     	;# 
  5459  0E29                     	;# 
  5460  0E2A                     	;# 
  5461  0E2B                     	;# 
  5462  0E2C                     	;# 
  5463  0E2D                     	;# 
  5464  0E2E                     	;# 
  5465  0E2F                     	;# 
  5466  0E30                     	;# 
  5467  0E31                     	;# 
  5468  0E32                     	;# 
  5469  0E33                     	;# 
  5470  0E34                     	;# 
  5471  0E35                     	;# 
  5472  0E36                     	;# 
  5473  0E37                     	;# 
  5474  0E8F                     	;# 
  5475  0E90                     	;# 
  5476  0E91                     	;# 
  5477  0E92                     	;# 
  5478  0E93                     	;# 
  5479  0E94                     	;# 
  5480  0E95                     	;# 
  5481  0E96                     	;# 
  5482  0E97                     	;# 
  5483  0E9C                     	;# 
  5484  0E9D                     	;# 
  5485  0E9E                     	;# 
  5486  0EA1                     	;# 
  5487  0EA2                     	;# 
  5488  0EA3                     	;# 
  5489  0EA4                     	;# 
  5490  0EA5                     	;# 
  5491  0EA9                     	;# 
  5492  0EAA                     	;# 
  5493  0EAB                     	;# 
  5494  0EAC                     	;# 
  5495  0EB1                     	;# 
  5496  0EB2                     	;# 
  5497  0EB3                     	;# 
  5498  0EB8                     	;# 
  5499  0EB9                     	;# 
  5500  0EBA                     	;# 
  5501  0EBB                     	;# 
  5502  0EBC                     	;# 
  5503  0EBD                     	;# 
  5504  0EBE                     	;# 
  5505  0EC3                     	;# 
  5506  0EC5                     	;# 
  5507  0EC6                     	;# 
  5508  0EC7                     	;# 
  5509  0EC8                     	;# 
  5510  0EC9                     	;# 
  5511  0ECA                     	;# 
  5512  0ECB                     	;# 
  5513  0ECC                     	;# 
  5514  0F10                     	;# 
  5515  0F11                     	;# 
  5516  0F12                     	;# 
  5517  0F13                     	;# 
  5518  0F14                     	;# 
  5519  0F15                     	;# 
  5520  0F16                     	;# 
  5521  0F17                     	;# 
  5522  0F18                     	;# 
  5523  0F19                     	;# 
  5524  0F1A                     	;# 
  5525  0F1B                     	;# 
  5526  0F1C                     	;# 
  5527  0F1D                     	;# 
  5528  0F1E                     	;# 
  5529  0F1F                     	;# 
  5530  0F20                     	;# 
  5531  0F21                     	;# 
  5532  0F22                     	;# 
  5533  0F23                     	;# 
  5534  0F24                     	;# 
  5535  0F25                     	;# 
  5536  0F26                     	;# 
  5537  0F27                     	;# 
  5538  0F28                     	;# 
  5539  0F29                     	;# 
  5540  0F2A                     	;# 
  5541  0F2B                     	;# 
  5542  0F2C                     	;# 
  5543  0F2D                     	;# 
  5544  0F2E                     	;# 
  5545  0F2F                     	;# 
  5546  0F30                     	;# 
  5547  0F31                     	;# 
  5548  0F32                     	;# 
  5549  0F38                     	;# 
  5550  0F39                     	;# 
  5551  0F3A                     	;# 
  5552  0F3B                     	;# 
  5553  0F3C                     	;# 
  5554  0F3D                     	;# 
  5555  0F3E                     	;# 
  5556  0F3F                     	;# 
  5557  0F40                     	;# 
  5558  0F41                     	;# 
  5559  0F43                     	;# 
  5560  0F44                     	;# 
  5561  0F45                     	;# 
  5562  0F46                     	;# 
  5563  0F47                     	;# 
  5564  0F48                     	;# 
  5565  0F49                     	;# 
  5566  0F4A                     	;# 
  5567  0F4B                     	;# 
  5568  0F4C                     	;# 
  5569  0F4E                     	;# 
  5570  0F4F                     	;# 
  5571  0F50                     	;# 
  5572  0F51                     	;# 
  5573  0F52                     	;# 
  5574  0F53                     	;# 
  5575  0F54                     	;# 
  5576  0F55                     	;# 
  5577  0F56                     	;# 
  5578  0F57                     	;# 
  5579  0F59                     	;# 
  5580  0F5A                     	;# 
  5581  0F5B                     	;# 
  5582  0F5C                     	;# 
  5583  0F5D                     	;# 
  5584  0F61                     	;# 
  5585  0F62                     	;# 
  5586  0F64                     	;# 
  5587  0F65                     	;# 
  5588  0F66                     	;# 
  5589  0F67                     	;# 
  5590  0F68                     	;# 
  5591  0F69                     	;# 
  5592  0F6A                     	;# 
  5593  0F6B                     	;# 
  5594  0F6C                     	;# 
  5595  0F6D                     	;# 
  5596  0FE4                     	;# 
  5597  0FE5                     	;# 
  5598  0FE6                     	;# 
  5599  0FE7                     	;# 
  5600  0FE8                     	;# 
  5601  0FE9                     	;# 
  5602  0FEA                     	;# 
  5603  0FEB                     	;# 
  5604  0FED                     	;# 
  5605  0FEE                     	;# 
  5606  0FEF                     	;# 
  5607  0000                     	;# 
  5608  0001                     	;# 
  5609  0002                     	;# 
  5610  0003                     	;# 
  5611  0004                     	;# 
  5612  0005                     	;# 
  5613  0006                     	;# 
  5614  0007                     	;# 
  5615  0008                     	;# 
  5616  0009                     	;# 
  5617  000A                     	;# 
  5618  000B                     	;# 
  5619  000C                     	;# 
  5620  000D                     	;# 
  5621  000E                     	;# 
  5622  000F                     	;# 
  5623  0010                     	;# 
  5624  0011                     	;# 
  5625  0012                     	;# 
  5626  0013                     	;# 
  5627  0014                     	;# 
  5628  0015                     	;# 
  5629  0016                     	;# 
  5630  0017                     	;# 
  5631  0018                     	;# 
  5632  0019                     	;# 
  5633  001A                     	;# 
  5634  001C                     	;# 
  5635  001C                     	;# 
  5636  001D                     	;# 
  5637  001D                     	;# 
  5638  001E                     	;# 
  5639  001F                     	;# 
  5640  008C                     	;# 
  5641  008C                     	;# 
  5642  008D                     	;# 
  5643  008E                     	;# 
  5644  008E                     	;# 
  5645  008F                     	;# 
  5646  0090                     	;# 
  5647  0090                     	;# 
  5648  0091                     	;# 
  5649  0093                     	;# 
  5650  0094                     	;# 
  5651  0095                     	;# 
  5652  0096                     	;# 
  5653  0097                     	;# 
  5654  0098                     	;# 
  5655  0099                     	;# 
  5656  009A                     	;# 
  5657  009B                     	;# 
  5658  009C                     	;# 
  5659  009D                     	;# 
  5660  009E                     	;# 
  5661  010C                     	;# 
  5662  010D                     	;# 
  5663  010E                     	;# 
  5664  010E                     	;# 
  5665  010F                     	;# 
  5666  0110                     	;# 
  5667  0110                     	;# 
  5668  0111                     	;# 
  5669  0112                     	;# 
  5670  0112                     	;# 
  5671  0113                     	;# 
  5672  0114                     	;# 
  5673  0114                     	;# 
  5674  0115                     	;# 
  5675  0116                     	;# 
  5676  0116                     	;# 
  5677  0117                     	;# 
  5678  0119                     	;# 
  5679  0119                     	;# 
  5680  0119                     	;# 
  5681  011A                     	;# 
  5682  011A                     	;# 
  5683  011A                     	;# 
  5684  011B                     	;# 
  5685  011B                     	;# 
  5686  011B                     	;# 
  5687  011B                     	;# 
  5688  011B                     	;# 
  5689  011C                     	;# 
  5690  011C                     	;# 
  5691  011C                     	;# 
  5692  011D                     	;# 
  5693  011D                     	;# 
  5694  011D                     	;# 
  5695  011E                     	;# 
  5696  011E                     	;# 
  5697  011E                     	;# 
  5698  011F                     	;# 
  5699  011F                     	;# 
  5700  011F                     	;# 
  5701  011F                     	;# 
  5702  011F                     	;# 
  5703  018C                     	;# 
  5704  018D                     	;# 
  5705  018E                     	;# 
  5706  018F                     	;# 
  5707  0190                     	;# 
  5708  0191                     	;# 
  5709  0192                     	;# 
  5710  0196                     	;# 
  5711  0197                     	;# 
  5712  0198                     	;# 
  5713  0199                     	;# 
  5714  019A                     	;# 
  5715  019B                     	;# 
  5716  019C                     	;# 
  5717  020C                     	;# 
  5718  020C                     	;# 
  5719  020D                     	;# 
  5720  020E                     	;# 
  5721  020F                     	;# 
  5722  020F                     	;# 
  5723  0210                     	;# 
  5724  0210                     	;# 
  5725  0211                     	;# 
  5726  0211                     	;# 
  5727  0212                     	;# 
  5728  0212                     	;# 
  5729  0213                     	;# 
  5730  0214                     	;# 
  5731  0215                     	;# 
  5732  0215                     	;# 
  5733  0216                     	;# 
  5734  0216                     	;# 
  5735  0217                     	;# 
  5736  0217                     	;# 
  5737  0218                     	;# 
  5738  0218                     	;# 
  5739  0219                     	;# 
  5740  021A                     	;# 
  5741  021B                     	;# 
  5742  021B                     	;# 
  5743  021C                     	;# 
  5744  021C                     	;# 
  5745  021D                     	;# 
  5746  021D                     	;# 
  5747  021E                     	;# 
  5748  021F                     	;# 
  5749  028C                     	;# 
  5750  028C                     	;# 
  5751  028D                     	;# 
  5752  028D                     	;# 
  5753  028E                     	;# 
  5754  028F                     	;# 
  5755  0290                     	;# 
  5756  0290                     	;# 
  5757  0291                     	;# 
  5758  0292                     	;# 
  5759  0292                     	;# 
  5760  0293                     	;# 
  5761  0293                     	;# 
  5762  0294                     	;# 
  5763  0295                     	;# 
  5764  0296                     	;# 
  5765  0296                     	;# 
  5766  0297                     	;# 
  5767  0298                     	;# 
  5768  0298                     	;# 
  5769  0299                     	;# 
  5770  0299                     	;# 
  5771  029A                     	;# 
  5772  029B                     	;# 
  5773  029C                     	;# 
  5774  029C                     	;# 
  5775  029D                     	;# 
  5776  030C                     	;# 
  5777  030C                     	;# 
  5778  030D                     	;# 
  5779  030E                     	;# 
  5780  030F                     	;# 
  5781  0310                     	;# 
  5782  0310                     	;# 
  5783  0311                     	;# 
  5784  0312                     	;# 
  5785  0313                     	;# 
  5786  0314                     	;# 
  5787  0314                     	;# 
  5788  0315                     	;# 
  5789  0316                     	;# 
  5790  0317                     	;# 
  5791  0318                     	;# 
  5792  0318                     	;# 
  5793  0319                     	;# 
  5794  031A                     	;# 
  5795  031B                     	;# 
  5796  031C                     	;# 
  5797  031C                     	;# 
  5798  031D                     	;# 
  5799  031E                     	;# 
  5800  031F                     	;# 
  5801  038C                     	;# 
  5802  038C                     	;# 
  5803  038D                     	;# 
  5804  038E                     	;# 
  5805  0390                     	;# 
  5806  0390                     	;# 
  5807  0391                     	;# 
  5808  0392                     	;# 
  5809  040C                     	;# 
  5810  040D                     	;# 
  5811  040E                     	;# 
  5812  040F                     	;# 
  5813  0410                     	;# 
  5814  0411                     	;# 
  5815  0416                     	;# 
  5816  0416                     	;# 
  5817  0417                     	;# 
  5818  0418                     	;# 
  5819  0418                     	;# 
  5820  0419                     	;# 
  5821  041A                     	;# 
  5822  041A                     	;# 
  5823  041B                     	;# 
  5824  041C                     	;# 
  5825  041C                     	;# 
  5826  041D                     	;# 
  5827  041E                     	;# 
  5828  041F                     	;# 
  5829  048C                     	;# 
  5830  048C                     	;# 
  5831  048D                     	;# 
  5832  048E                     	;# 
  5833  048F                     	;# 
  5834  048F                     	;# 
  5835  0490                     	;# 
  5836  0491                     	;# 
  5837  0492                     	;# 
  5838  0492                     	;# 
  5839  0493                     	;# 
  5840  0494                     	;# 
  5841  0495                     	;# 
  5842  0495                     	;# 
  5843  0496                     	;# 
  5844  0497                     	;# 
  5845  0498                     	;# 
  5846  0499                     	;# 
  5847  049A                     	;# 
  5848  049B                     	;# 
  5849  049C                     	;# 
  5850  049D                     	;# 
  5851  050C                     	;# 
  5852  050C                     	;# 
  5853  050D                     	;# 
  5854  050E                     	;# 
  5855  050F                     	;# 
  5856  050F                     	;# 
  5857  0510                     	;# 
  5858  0511                     	;# 
  5859  0512                     	;# 
  5860  0512                     	;# 
  5861  0513                     	;# 
  5862  0514                     	;# 
  5863  0515                     	;# 
  5864  0515                     	;# 
  5865  0516                     	;# 
  5866  0517                     	;# 
  5867  0518                     	;# 
  5868  0519                     	;# 
  5869  051A                     	;# 
  5870  051B                     	;# 
  5871  051C                     	;# 
  5872  051D                     	;# 
  5873  058C                     	;# 
  5874  058C                     	;# 
  5875  058D                     	;# 
  5876  058E                     	;# 
  5877  058F                     	;# 
  5878  058F                     	;# 
  5879  0590                     	;# 
  5880  0591                     	;# 
  5881  0592                     	;# 
  5882  0593                     	;# 
  5883  060C                     	;# 
  5884  060D                     	;# 
  5885  060E                     	;# 
  5886  060F                     	;# 
  5887  0610                     	;# 
  5888  0611                     	;# 
  5889  0612                     	;# 
  5890  0613                     	;# 
  5891  0614                     	;# 
  5892  0616                     	;# 
  5893  0617                     	;# 
  5894  0618                     	;# 
  5895  0619                     	;# 
  5896  061A                     	;# 
  5897  061B                     	;# 
  5898  061C                     	;# 
  5899  061D                     	;# 
  5900  061E                     	;# 
  5901  068C                     	;# 
  5902  068D                     	;# 
  5903  068E                     	;# 
  5904  068F                     	;# 
  5905  0690                     	;# 
  5906  0691                     	;# 
  5907  0692                     	;# 
  5908  0693                     	;# 
  5909  0694                     	;# 
  5910  070C                     	;# 
  5911  070D                     	;# 
  5912  070E                     	;# 
  5913  070F                     	;# 
  5914  0710                     	;# 
  5915  0711                     	;# 
  5916  0712                     	;# 
  5917  0713                     	;# 
  5918  0714                     	;# 
  5919  0716                     	;# 
  5920  0717                     	;# 
  5921  0718                     	;# 
  5922  0719                     	;# 
  5923  071A                     	;# 
  5924  071B                     	;# 
  5925  071C                     	;# 
  5926  071D                     	;# 
  5927  071E                     	;# 
  5928  0796                     	;# 
  5929  0797                     	;# 
  5930  0798                     	;# 
  5931  0799                     	;# 
  5932  079A                     	;# 
  5933  079B                     	;# 
  5934  080C                     	;# 
  5935  080D                     	;# 
  5936  080E                     	;# 
  5937  080F                     	;# 
  5938  0810                     	;# 
  5939  0811                     	;# 
  5940  0812                     	;# 
  5941  0813                     	;# 
  5942  0814                     	;# 
  5943  081A                     	;# 
  5944  081B                     	;# 
  5945  081C                     	;# 
  5946  081D                     	;# 
  5947  081E                     	;# 
  5948  081F                     	;# 
  5949  088C                     	;# 
  5950  088D                     	;# 
  5951  088E                     	;# 
  5952  088F                     	;# 
  5953  0890                     	;# 
  5954  0891                     	;# 
  5955  0892                     	;# 
  5956  0893                     	;# 
  5957  0895                     	;# 
  5958  0896                     	;# 
  5959  0897                     	;# 
  5960  0898                     	;# 
  5961  0899                     	;# 
  5962  089A                     	;# 
  5963  089B                     	;# 
  5964  090C                     	;# 
  5965  090E                     	;# 
  5966  090F                     	;# 
  5967  091F                     	;# 
  5968  091F                     	;# 
  5969  098F                     	;# 
  5970  098F                     	;# 
  5971  0990                     	;# 
  5972  0991                     	;# 
  5973  0992                     	;# 
  5974  0993                     	;# 
  5975  0994                     	;# 
  5976  0995                     	;# 
  5977  0996                     	;# 
  5978  0997                     	;# 
  5979  0E0F                     	;# 
  5980  0E10                     	;# 
  5981  0E11                     	;# 
  5982  0E12                     	;# 
  5983  0E13                     	;# 
  5984  0E14                     	;# 
  5985  0E15                     	;# 
  5986  0E16                     	;# 
  5987  0E17                     	;# 
  5988  0E18                     	;# 
  5989  0E19                     	;# 
  5990  0E1A                     	;# 
  5991  0E1B                     	;# 
  5992  0E1C                     	;# 
  5993  0E1D                     	;# 
  5994  0E1E                     	;# 
  5995  0E1F                     	;# 
  5996  0E20                     	;# 
  5997  0E21                     	;# 
  5998  0E22                     	;# 
  5999  0E23                     	;# 
  6000  0E24                     	;# 
  6001  0E25                     	;# 
  6002  0E26                     	;# 
  6003  0E27                     	;# 
  6004  0E28                     	;# 
  6005  0E29                     	;# 
  6006  0E2A                     	;# 
  6007  0E2B                     	;# 
  6008  0E2C                     	;# 
  6009  0E2D                     	;# 
  6010  0E2E                     	;# 
  6011  0E2F                     	;# 
  6012  0E30                     	;# 
  6013  0E31                     	;# 
  6014  0E32                     	;# 
  6015  0E33                     	;# 
  6016  0E34                     	;# 
  6017  0E35                     	;# 
  6018  0E36                     	;# 
  6019  0E37                     	;# 
  6020  0E8F                     	;# 
  6021  0E90                     	;# 
  6022  0E91                     	;# 
  6023  0E92                     	;# 
  6024  0E93                     	;# 
  6025  0E94                     	;# 
  6026  0E95                     	;# 
  6027  0E96                     	;# 
  6028  0E97                     	;# 
  6029  0E9C                     	;# 
  6030  0E9D                     	;# 
  6031  0E9E                     	;# 
  6032  0EA1                     	;# 
  6033  0EA2                     	;# 
  6034  0EA3                     	;# 
  6035  0EA4                     	;# 
  6036  0EA5                     	;# 
  6037  0EA9                     	;# 
  6038  0EAA                     	;# 
  6039  0EAB                     	;# 
  6040  0EAC                     	;# 
  6041  0EB1                     	;# 
  6042  0EB2                     	;# 
  6043  0EB3                     	;# 
  6044  0EB8                     	;# 
  6045  0EB9                     	;# 
  6046  0EBA                     	;# 
  6047  0EBB                     	;# 
  6048  0EBC                     	;# 
  6049  0EBD                     	;# 
  6050  0EBE                     	;# 
  6051  0EC3                     	;# 
  6052  0EC5                     	;# 
  6053  0EC6                     	;# 
  6054  0EC7                     	;# 
  6055  0EC8                     	;# 
  6056  0EC9                     	;# 
  6057  0ECA                     	;# 
  6058  0ECB                     	;# 
  6059  0ECC                     	;# 
  6060  0F10                     	;# 
  6061  0F11                     	;# 
  6062  0F12                     	;# 
  6063  0F13                     	;# 
  6064  0F14                     	;# 
  6065  0F15                     	;# 
  6066  0F16                     	;# 
  6067  0F17                     	;# 
  6068  0F18                     	;# 
  6069  0F19                     	;# 
  6070  0F1A                     	;# 
  6071  0F1B                     	;# 
  6072  0F1C                     	;# 
  6073  0F1D                     	;# 
  6074  0F1E                     	;# 
  6075  0F1F                     	;# 
  6076  0F20                     	;# 
  6077  0F21                     	;# 
  6078  0F22                     	;# 
  6079  0F23                     	;# 
  6080  0F24                     	;# 
  6081  0F25                     	;# 
  6082  0F26                     	;# 
  6083  0F27                     	;# 
  6084  0F28                     	;# 
  6085  0F29                     	;# 
  6086  0F2A                     	;# 
  6087  0F2B                     	;# 
  6088  0F2C                     	;# 
  6089  0F2D                     	;# 
  6090  0F2E                     	;# 
  6091  0F2F                     	;# 
  6092  0F30                     	;# 
  6093  0F31                     	;# 
  6094  0F32                     	;# 
  6095  0F38                     	;# 
  6096  0F39                     	;# 
  6097  0F3A                     	;# 
  6098  0F3B                     	;# 
  6099  0F3C                     	;# 
  6100  0F3D                     	;# 
  6101  0F3E                     	;# 
  6102  0F3F                     	;# 
  6103  0F40                     	;# 
  6104  0F41                     	;# 
  6105  0F43                     	;# 
  6106  0F44                     	;# 
  6107  0F45                     	;# 
  6108  0F46                     	;# 
  6109  0F47                     	;# 
  6110  0F48                     	;# 
  6111  0F49                     	;# 
  6112  0F4A                     	;# 
  6113  0F4B                     	;# 
  6114  0F4C                     	;# 
  6115  0F4E                     	;# 
  6116  0F4F                     	;# 
  6117  0F50                     	;# 
  6118  0F51                     	;# 
  6119  0F52                     	;# 
  6120  0F53                     	;# 
  6121  0F54                     	;# 
  6122  0F55                     	;# 
  6123  0F56                     	;# 
  6124  0F57                     	;# 
  6125  0F59                     	;# 
  6126  0F5A                     	;# 
  6127  0F5B                     	;# 
  6128  0F5C                     	;# 
  6129  0F5D                     	;# 
  6130  0F61                     	;# 
  6131  0F62                     	;# 
  6132  0F64                     	;# 
  6133  0F65                     	;# 
  6134  0F66                     	;# 
  6135  0F67                     	;# 
  6136  0F68                     	;# 
  6137  0F69                     	;# 
  6138  0F6A                     	;# 
  6139  0F6B                     	;# 
  6140  0F6C                     	;# 
  6141  0F6D                     	;# 
  6142  0FE4                     	;# 
  6143  0FE5                     	;# 
  6144  0FE6                     	;# 
  6145  0FE7                     	;# 
  6146  0FE8                     	;# 
  6147  0FE9                     	;# 
  6148  0FEA                     	;# 
  6149  0FEB                     	;# 
  6150  0FED                     	;# 
  6151  0FEE                     	;# 
  6152  0FEF                     	;# 
  6153  0000                     	;# 
  6154  0001                     	;# 
  6155  0002                     	;# 
  6156  0003                     	;# 
  6157  0004                     	;# 
  6158  0005                     	;# 
  6159  0006                     	;# 
  6160  0007                     	;# 
  6161  0008                     	;# 
  6162  0009                     	;# 
  6163  000A                     	;# 
  6164  000B                     	;# 
  6165  000C                     	;# 
  6166  000D                     	;# 
  6167  000E                     	;# 
  6168  000F                     	;# 
  6169  0010                     	;# 
  6170  0011                     	;# 
  6171  0012                     	;# 
  6172  0013                     	;# 
  6173  0014                     	;# 
  6174  0015                     	;# 
  6175  0016                     	;# 
  6176  0017                     	;# 
  6177  0018                     	;# 
  6178  0019                     	;# 
  6179  001A                     	;# 
  6180  001C                     	;# 
  6181  001C                     	;# 
  6182  001D                     	;# 
  6183  001D                     	;# 
  6184  001E                     	;# 
  6185  001F                     	;# 
  6186  008C                     	;# 
  6187  008C                     	;# 
  6188  008D                     	;# 
  6189  008E                     	;# 
  6190  008E                     	;# 
  6191  008F                     	;# 
  6192  0090                     	;# 
  6193  0090                     	;# 
  6194  0091                     	;# 
  6195  0093                     	;# 
  6196  0094                     	;# 
  6197  0095                     	;# 
  6198  0096                     	;# 
  6199  0097                     	;# 
  6200  0098                     	;# 
  6201  0099                     	;# 
  6202  009A                     	;# 
  6203  009B                     	;# 
  6204  009C                     	;# 
  6205  009D                     	;# 
  6206  009E                     	;# 
  6207  010C                     	;# 
  6208  010D                     	;# 
  6209  010E                     	;# 
  6210  010E                     	;# 
  6211  010F                     	;# 
  6212  0110                     	;# 
  6213  0110                     	;# 
  6214  0111                     	;# 
  6215  0112                     	;# 
  6216  0112                     	;# 
  6217  0113                     	;# 
  6218  0114                     	;# 
  6219  0114                     	;# 
  6220  0115                     	;# 
  6221  0116                     	;# 
  6222  0116                     	;# 
  6223  0117                     	;# 
  6224  0119                     	;# 
  6225  0119                     	;# 
  6226  0119                     	;# 
  6227  011A                     	;# 
  6228  011A                     	;# 
  6229  011A                     	;# 
  6230  011B                     	;# 
  6231  011B                     	;# 
  6232  011B                     	;# 
  6233  011B                     	;# 
  6234  011B                     	;# 
  6235  011C                     	;# 
  6236  011C                     	;# 
  6237  011C                     	;# 
  6238  011D                     	;# 
  6239  011D                     	;# 
  6240  011D                     	;# 
  6241  011E                     	;# 
  6242  011E                     	;# 
  6243  011E                     	;# 
  6244  011F                     	;# 
  6245  011F                     	;# 
  6246  011F                     	;# 
  6247  011F                     	;# 
  6248  011F                     	;# 
  6249  018C                     	;# 
  6250  018D                     	;# 
  6251  018E                     	;# 
  6252  018F                     	;# 
  6253  0190                     	;# 
  6254  0191                     	;# 
  6255  0192                     	;# 
  6256  0196                     	;# 
  6257  0197                     	;# 
  6258  0198                     	;# 
  6259  0199                     	;# 
  6260  019A                     	;# 
  6261  019B                     	;# 
  6262  019C                     	;# 
  6263  020C                     	;# 
  6264  020C                     	;# 
  6265  020D                     	;# 
  6266  020E                     	;# 
  6267  020F                     	;# 
  6268  020F                     	;# 
  6269  0210                     	;# 
  6270  0210                     	;# 
  6271  0211                     	;# 
  6272  0211                     	;# 
  6273  0212                     	;# 
  6274  0212                     	;# 
  6275  0213                     	;# 
  6276  0214                     	;# 
  6277  0215                     	;# 
  6278  0215                     	;# 
  6279  0216                     	;# 
  6280  0216                     	;# 
  6281  0217                     	;# 
  6282  0217                     	;# 
  6283  0218                     	;# 
  6284  0218                     	;# 
  6285  0219                     	;# 
  6286  021A                     	;# 
  6287  021B                     	;# 
  6288  021B                     	;# 
  6289  021C                     	;# 
  6290  021C                     	;# 
  6291  021D                     	;# 
  6292  021D                     	;# 
  6293  021E                     	;# 
  6294  021F                     	;# 
  6295  028C                     	;# 
  6296  028C                     	;# 
  6297  028D                     	;# 
  6298  028D                     	;# 
  6299  028E                     	;# 
  6300  028F                     	;# 
  6301  0290                     	;# 
  6302  0290                     	;# 
  6303  0291                     	;# 
  6304  0292                     	;# 
  6305  0292                     	;# 
  6306  0293                     	;# 
  6307  0293                     	;# 
  6308  0294                     	;# 
  6309  0295                     	;# 
  6310  0296                     	;# 
  6311  0296                     	;# 
  6312  0297                     	;# 
  6313  0298                     	;# 
  6314  0298                     	;# 
  6315  0299                     	;# 
  6316  0299                     	;# 
  6317  029A                     	;# 
  6318  029B                     	;# 
  6319  029C                     	;# 
  6320  029C                     	;# 
  6321  029D                     	;# 
  6322  030C                     	;# 
  6323  030C                     	;# 
  6324  030D                     	;# 
  6325  030E                     	;# 
  6326  030F                     	;# 
  6327  0310                     	;# 
  6328  0310                     	;# 
  6329  0311                     	;# 
  6330  0312                     	;# 
  6331  0313                     	;# 
  6332  0314                     	;# 
  6333  0314                     	;# 
  6334  0315                     	;# 
  6335  0316                     	;# 
  6336  0317                     	;# 
  6337  0318                     	;# 
  6338  0318                     	;# 
  6339  0319                     	;# 
  6340  031A                     	;# 
  6341  031B                     	;# 
  6342  031C                     	;# 
  6343  031C                     	;# 
  6344  031D                     	;# 
  6345  031E                     	;# 
  6346  031F                     	;# 
  6347  038C                     	;# 
  6348  038C                     	;# 
  6349  038D                     	;# 
  6350  038E                     	;# 
  6351  0390                     	;# 
  6352  0390                     	;# 
  6353  0391                     	;# 
  6354  0392                     	;# 
  6355  040C                     	;# 
  6356  040D                     	;# 
  6357  040E                     	;# 
  6358  040F                     	;# 
  6359  0410                     	;# 
  6360  0411                     	;# 
  6361  0416                     	;# 
  6362  0416                     	;# 
  6363  0417                     	;# 
  6364  0418                     	;# 
  6365  0418                     	;# 
  6366  0419                     	;# 
  6367  041A                     	;# 
  6368  041A                     	;# 
  6369  041B                     	;# 
  6370  041C                     	;# 
  6371  041C                     	;# 
  6372  041D                     	;# 
  6373  041E                     	;# 
  6374  041F                     	;# 
  6375  048C                     	;# 
  6376  048C                     	;# 
  6377  048D                     	;# 
  6378  048E                     	;# 
  6379  048F                     	;# 
  6380  048F                     	;# 
  6381  0490                     	;# 
  6382  0491                     	;# 
  6383  0492                     	;# 
  6384  0492                     	;# 
  6385  0493                     	;# 
  6386  0494                     	;# 
  6387  0495                     	;# 
  6388  0495                     	;# 
  6389  0496                     	;# 
  6390  0497                     	;# 
  6391  0498                     	;# 
  6392  0499                     	;# 
  6393  049A                     	;# 
  6394  049B                     	;# 
  6395  049C                     	;# 
  6396  049D                     	;# 
  6397  050C                     	;# 
  6398  050C                     	;# 
  6399  050D                     	;# 
  6400  050E                     	;# 
  6401  050F                     	;# 
  6402  050F                     	;# 
  6403  0510                     	;# 
  6404  0511                     	;# 
  6405  0512                     	;# 
  6406  0512                     	;# 
  6407  0513                     	;# 
  6408  0514                     	;# 
  6409  0515                     	;# 
  6410  0515                     	;# 
  6411  0516                     	;# 
  6412  0517                     	;# 
  6413  0518                     	;# 
  6414  0519                     	;# 
  6415  051A                     	;# 
  6416  051B                     	;# 
  6417  051C                     	;# 
  6418  051D                     	;# 
  6419  058C                     	;# 
  6420  058C                     	;# 
  6421  058D                     	;# 
  6422  058E                     	;# 
  6423  058F                     	;# 
  6424  058F                     	;# 
  6425  0590                     	;# 
  6426  0591                     	;# 
  6427  0592                     	;# 
  6428  0593                     	;# 
  6429  060C                     	;# 
  6430  060D                     	;# 
  6431  060E                     	;# 
  6432  060F                     	;# 
  6433  0610                     	;# 
  6434  0611                     	;# 
  6435  0612                     	;# 
  6436  0613                     	;# 
  6437  0614                     	;# 
  6438  0616                     	;# 
  6439  0617                     	;# 
  6440  0618                     	;# 
  6441  0619                     	;# 
  6442  061A                     	;# 
  6443  061B                     	;# 
  6444  061C                     	;# 
  6445  061D                     	;# 
  6446  061E                     	;# 
  6447  068C                     	;# 
  6448  068D                     	;# 
  6449  068E                     	;# 
  6450  068F                     	;# 
  6451  0690                     	;# 
  6452  0691                     	;# 
  6453  0692                     	;# 
  6454  0693                     	;# 
  6455  0694                     	;# 
  6456  070C                     	;# 
  6457  070D                     	;# 
  6458  070E                     	;# 
  6459  070F                     	;# 
  6460  0710                     	;# 
  6461  0711                     	;# 
  6462  0712                     	;# 
  6463  0713                     	;# 
  6464  0714                     	;# 
  6465  0716                     	;# 
  6466  0717                     	;# 
  6467  0718                     	;# 
  6468  0719                     	;# 
  6469  071A                     	;# 
  6470  071B                     	;# 
  6471  071C                     	;# 
  6472  071D                     	;# 
  6473  071E                     	;# 
  6474  0796                     	;# 
  6475  0797                     	;# 
  6476  0798                     	;# 
  6477  0799                     	;# 
  6478  079A                     	;# 
  6479  079B                     	;# 
  6480  080C                     	;# 
  6481  080D                     	;# 
  6482  080E                     	;# 
  6483  080F                     	;# 
  6484  0810                     	;# 
  6485  0811                     	;# 
  6486  0812                     	;# 
  6487  0813                     	;# 
  6488  0814                     	;# 
  6489  081A                     	;# 
  6490  081B                     	;# 
  6491  081C                     	;# 
  6492  081D                     	;# 
  6493  081E                     	;# 
  6494  081F                     	;# 
  6495  088C                     	;# 
  6496  088D                     	;# 
  6497  088E                     	;# 
  6498  088F                     	;# 
  6499  0890                     	;# 
  6500  0891                     	;# 
  6501  0892                     	;# 
  6502  0893                     	;# 
  6503  0895                     	;# 
  6504  0896                     	;# 
  6505  0897                     	;# 
  6506  0898                     	;# 
  6507  0899                     	;# 
  6508  089A                     	;# 
  6509  089B                     	;# 
  6510  090C                     	;# 
  6511  090E                     	;# 
  6512  090F                     	;# 
  6513  091F                     	;# 
  6514  091F                     	;# 
  6515  098F                     	;# 
  6516  098F                     	;# 
  6517  0990                     	;# 
  6518  0991                     	;# 
  6519  0992                     	;# 
  6520  0993                     	;# 
  6521  0994                     	;# 
  6522  0995                     	;# 
  6523  0996                     	;# 
  6524  0997                     	;# 
  6525  0E0F                     	;# 
  6526  0E10                     	;# 
  6527  0E11                     	;# 
  6528  0E12                     	;# 
  6529  0E13                     	;# 
  6530  0E14                     	;# 
  6531  0E15                     	;# 
  6532  0E16                     	;# 
  6533  0E17                     	;# 
  6534  0E18                     	;# 
  6535  0E19                     	;# 
  6536  0E1A                     	;# 
  6537  0E1B                     	;# 
  6538  0E1C                     	;# 
  6539  0E1D                     	;# 
  6540  0E1E                     	;# 
  6541  0E1F                     	;# 
  6542  0E20                     	;# 
  6543  0E21                     	;# 
  6544  0E22                     	;# 
  6545  0E23                     	;# 
  6546  0E24                     	;# 
  6547  0E25                     	;# 
  6548  0E26                     	;# 
  6549  0E27                     	;# 
  6550  0E28                     	;# 
  6551  0E29                     	;# 
  6552  0E2A                     	;# 
  6553  0E2B                     	;# 
  6554  0E2C                     	;# 
  6555  0E2D                     	;# 
  6556  0E2E                     	;# 
  6557  0E2F                     	;# 
  6558  0E30                     	;# 
  6559  0E31                     	;# 
  6560  0E32                     	;# 
  6561  0E33                     	;# 
  6562  0E34                     	;# 
  6563  0E35                     	;# 
  6564  0E36                     	;# 
  6565  0E37                     	;# 
  6566  0E8F                     	;# 
  6567  0E90                     	;# 
  6568  0E91                     	;# 
  6569  0E92                     	;# 
  6570  0E93                     	;# 
  6571  0E94                     	;# 
  6572  0E95                     	;# 
  6573  0E96                     	;# 
  6574  0E97                     	;# 
  6575  0E9C                     	;# 
  6576  0E9D                     	;# 
  6577  0E9E                     	;# 
  6578  0EA1                     	;# 
  6579  0EA2                     	;# 
  6580  0EA3                     	;# 
  6581  0EA4                     	;# 
  6582  0EA5                     	;# 
  6583  0EA9                     	;# 
  6584  0EAA                     	;# 
  6585  0EAB                     	;# 
  6586  0EAC                     	;# 
  6587  0EB1                     	;# 
  6588  0EB2                     	;# 
  6589  0EB3                     	;# 
  6590  0EB8                     	;# 
  6591  0EB9                     	;# 
  6592  0EBA                     	;# 
  6593  0EBB                     	;# 
  6594  0EBC                     	;# 
  6595  0EBD                     	;# 
  6596  0EBE                     	;# 
  6597  0EC3                     	;# 
  6598  0EC5                     	;# 
  6599  0EC6                     	;# 
  6600  0EC7                     	;# 
  6601  0EC8                     	;# 
  6602  0EC9                     	;# 
  6603  0ECA                     	;# 
  6604  0ECB                     	;# 
  6605  0ECC                     	;# 
  6606  0F10                     	;# 
  6607  0F11                     	;# 
  6608  0F12                     	;# 
  6609  0F13                     	;# 
  6610  0F14                     	;# 
  6611  0F15                     	;# 
  6612  0F16                     	;# 
  6613  0F17                     	;# 
  6614  0F18                     	;# 
  6615  0F19                     	;# 
  6616  0F1A                     	;# 
  6617  0F1B                     	;# 
  6618  0F1C                     	;# 
  6619  0F1D                     	;# 
  6620  0F1E                     	;# 
  6621  0F1F                     	;# 
  6622  0F20                     	;# 
  6623  0F21                     	;# 
  6624  0F22                     	;# 
  6625  0F23                     	;# 
  6626  0F24                     	;# 
  6627  0F25                     	;# 
  6628  0F26                     	;# 
  6629  0F27                     	;# 
  6630  0F28                     	;# 
  6631  0F29                     	;# 
  6632  0F2A                     	;# 
  6633  0F2B                     	;# 
  6634  0F2C                     	;# 
  6635  0F2D                     	;# 
  6636  0F2E                     	;# 
  6637  0F2F                     	;# 
  6638  0F30                     	;# 
  6639  0F31                     	;# 
  6640  0F32                     	;# 
  6641  0F38                     	;# 
  6642  0F39                     	;# 
  6643  0F3A                     	;# 
  6644  0F3B                     	;# 
  6645  0F3C                     	;# 
  6646  0F3D                     	;# 
  6647  0F3E                     	;# 
  6648  0F3F                     	;# 
  6649  0F40                     	;# 
  6650  0F41                     	;# 
  6651  0F43                     	;# 
  6652  0F44                     	;# 
  6653  0F45                     	;# 
  6654  0F46                     	;# 
  6655  0F47                     	;# 
  6656  0F48                     	;# 
  6657  0F49                     	;# 
  6658  0F4A                     	;# 
  6659  0F4B                     	;# 
  6660  0F4C                     	;# 
  6661  0F4E                     	;# 
  6662  0F4F                     	;# 
  6663  0F50                     	;# 
  6664  0F51                     	;# 
  6665  0F52                     	;# 
  6666  0F53                     	;# 
  6667  0F54                     	;# 
  6668  0F55                     	;# 
  6669  0F56                     	;# 
  6670  0F57                     	;# 
  6671  0F59                     	;# 
  6672  0F5A                     	;# 
  6673  0F5B                     	;# 
  6674  0F5C                     	;# 
  6675  0F5D                     	;# 
  6676  0F61                     	;# 
  6677  0F62                     	;# 
  6678  0F64                     	;# 
  6679  0F65                     	;# 
  6680  0F66                     	;# 
  6681  0F67                     	;# 
  6682  0F68                     	;# 
  6683  0F69                     	;# 
  6684  0F6A                     	;# 
  6685  0F6B                     	;# 
  6686  0F6C                     	;# 
  6687  0F6D                     	;# 
  6688  0FE4                     	;# 
  6689  0FE5                     	;# 
  6690  0FE6                     	;# 
  6691  0FE7                     	;# 
  6692  0FE8                     	;# 
  6693  0FE9                     	;# 
  6694  0FEA                     	;# 
  6695  0FEB                     	;# 
  6696  0FED                     	;# 
  6697  0FEE                     	;# 
  6698  0FEF                     	;# 
  6699  0000                     	;# 
  6700  0001                     	;# 
  6701  0002                     	;# 
  6702  0003                     	;# 
  6703  0004                     	;# 
  6704  0005                     	;# 
  6705  0006                     	;# 
  6706  0007                     	;# 
  6707  0008                     	;# 
  6708  0009                     	;# 
  6709  000A                     	;# 
  6710  000B                     	;# 
  6711  000C                     	;# 
  6712  000D                     	;# 
  6713  000E                     	;# 
  6714  000F                     	;# 
  6715  0010                     	;# 
  6716  0011                     	;# 
  6717  0012                     	;# 
  6718  0013                     	;# 
  6719  0014                     	;# 
  6720  0015                     	;# 
  6721  0016                     	;# 
  6722  0017                     	;# 
  6723  0018                     	;# 
  6724  0019                     	;# 
  6725  001A                     	;# 
  6726  001C                     	;# 
  6727  001C                     	;# 
  6728  001D                     	;# 
  6729  001D                     	;# 
  6730  001E                     	;# 
  6731  001F                     	;# 
  6732  008C                     	;# 
  6733  008C                     	;# 
  6734  008D                     	;# 
  6735  008E                     	;# 
  6736  008E                     	;# 
  6737  008F                     	;# 
  6738  0090                     	;# 
  6739  0090                     	;# 
  6740  0091                     	;# 
  6741  0093                     	;# 
  6742  0094                     	;# 
  6743  0095                     	;# 
  6744  0096                     	;# 
  6745  0097                     	;# 
  6746  0098                     	;# 
  6747  0099                     	;# 
  6748  009A                     	;# 
  6749  009B                     	;# 
  6750  009C                     	;# 
  6751  009D                     	;# 
  6752  009E                     	;# 
  6753  010C                     	;# 
  6754  010D                     	;# 
  6755  010E                     	;# 
  6756  010E                     	;# 
  6757  010F                     	;# 
  6758  0110                     	;# 
  6759  0110                     	;# 
  6760  0111                     	;# 
  6761  0112                     	;# 
  6762  0112                     	;# 
  6763  0113                     	;# 
  6764  0114                     	;# 
  6765  0114                     	;# 
  6766  0115                     	;# 
  6767  0116                     	;# 
  6768  0116                     	;# 
  6769  0117                     	;# 
  6770  0119                     	;# 
  6771  0119                     	;# 
  6772  0119                     	;# 
  6773  011A                     	;# 
  6774  011A                     	;# 
  6775  011A                     	;# 
  6776  011B                     	;# 
  6777  011B                     	;# 
  6778  011B                     	;# 
  6779  011B                     	;# 
  6780  011B                     	;# 
  6781  011C                     	;# 
  6782  011C                     	;# 
  6783  011C                     	;# 
  6784  011D                     	;# 
  6785  011D                     	;# 
  6786  011D                     	;# 
  6787  011E                     	;# 
  6788  011E                     	;# 
  6789  011E                     	;# 
  6790  011F                     	;# 
  6791  011F                     	;# 
  6792  011F                     	;# 
  6793  011F                     	;# 
  6794  011F                     	;# 
  6795  018C                     	;# 
  6796  018D                     	;# 
  6797  018E                     	;# 
  6798  018F                     	;# 
  6799  0190                     	;# 
  6800  0191                     	;# 
  6801  0192                     	;# 
  6802  0196                     	;# 
  6803  0197                     	;# 
  6804  0198                     	;# 
  6805  0199                     	;# 
  6806  019A                     	;# 
  6807  019B                     	;# 
  6808  019C                     	;# 
  6809  020C                     	;# 
  6810  020C                     	;# 
  6811  020D                     	;# 
  6812  020E                     	;# 
  6813  020F                     	;# 
  6814  020F                     	;# 
  6815  0210                     	;# 
  6816  0210                     	;# 
  6817  0211                     	;# 
  6818  0211                     	;# 
  6819  0212                     	;# 
  6820  0212                     	;# 
  6821  0213                     	;# 
  6822  0214                     	;# 
  6823  0215                     	;# 
  6824  0215                     	;# 
  6825  0216                     	;# 
  6826  0216                     	;# 
  6827  0217                     	;# 
  6828  0217                     	;# 
  6829  0218                     	;# 
  6830  0218                     	;# 
  6831  0219                     	;# 
  6832  021A                     	;# 
  6833  021B                     	;# 
  6834  021B                     	;# 
  6835  021C                     	;# 
  6836  021C                     	;# 
  6837  021D                     	;# 
  6838  021D                     	;# 
  6839  021E                     	;# 
  6840  021F                     	;# 
  6841  028C                     	;# 
  6842  028C                     	;# 
  6843  028D                     	;# 
  6844  028D                     	;# 
  6845  028E                     	;# 
  6846  028F                     	;# 
  6847  0290                     	;# 
  6848  0290                     	;# 
  6849  0291                     	;# 
  6850  0292                     	;# 
  6851  0292                     	;# 
  6852  0293                     	;# 
  6853  0293                     	;# 
  6854  0294                     	;# 
  6855  0295                     	;# 
  6856  0296                     	;# 
  6857  0296                     	;# 
  6858  0297                     	;# 
  6859  0298                     	;# 
  6860  0298                     	;# 
  6861  0299                     	;# 
  6862  0299                     	;# 
  6863  029A                     	;# 
  6864  029B                     	;# 
  6865  029C                     	;# 
  6866  029C                     	;# 
  6867  029D                     	;# 
  6868  030C                     	;# 
  6869  030C                     	;# 
  6870  030D                     	;# 
  6871  030E                     	;# 
  6872  030F                     	;# 
  6873  0310                     	;# 
  6874  0310                     	;# 
  6875  0311                     	;# 
  6876  0312                     	;# 
  6877  0313                     	;# 
  6878  0314                     	;# 
  6879  0314                     	;# 
  6880  0315                     	;# 
  6881  0316                     	;# 
  6882  0317                     	;# 
  6883  0318                     	;# 
  6884  0318                     	;# 
  6885  0319                     	;# 
  6886  031A                     	;# 
  6887  031B                     	;# 
  6888  031C                     	;# 
  6889  031C                     	;# 
  6890  031D                     	;# 
  6891  031E                     	;# 
  6892  031F                     	;# 
  6893  038C                     	;# 
  6894  038C                     	;# 
  6895  038D                     	;# 
  6896  038E                     	;# 
  6897  0390                     	;# 
  6898  0390                     	;# 
  6899  0391                     	;# 
  6900  0392                     	;# 
  6901  040C                     	;# 
  6902  040D                     	;# 
  6903  040E                     	;# 
  6904  040F                     	;# 
  6905  0410                     	;# 
  6906  0411                     	;# 
  6907  0416                     	;# 
  6908  0416                     	;# 
  6909  0417                     	;# 
  6910  0418                     	;# 
  6911  0418                     	;# 
  6912  0419                     	;# 
  6913  041A                     	;# 
  6914  041A                     	;# 
  6915  041B                     	;# 
  6916  041C                     	;# 
  6917  041C                     	;# 
  6918  041D                     	;# 
  6919  041E                     	;# 
  6920  041F                     	;# 
  6921  048C                     	;# 
  6922  048C                     	;# 
  6923  048D                     	;# 
  6924  048E                     	;# 
  6925  048F                     	;# 
  6926  048F                     	;# 
  6927  0490                     	;# 
  6928  0491                     	;# 
  6929  0492                     	;# 
  6930  0492                     	;# 
  6931  0493                     	;# 
  6932  0494                     	;# 
  6933  0495                     	;# 
  6934  0495                     	;# 
  6935  0496                     	;# 
  6936  0497                     	;# 
  6937  0498                     	;# 
  6938  0499                     	;# 
  6939  049A                     	;# 
  6940  049B                     	;# 
  6941  049C                     	;# 
  6942  049D                     	;# 
  6943  050C                     	;# 
  6944  050C                     	;# 
  6945  050D                     	;# 
  6946  050E                     	;# 
  6947  050F                     	;# 
  6948  050F                     	;# 
  6949  0510                     	;# 
  6950  0511                     	;# 
  6951  0512                     	;# 
  6952  0512                     	;# 
  6953  0513                     	;# 
  6954  0514                     	;# 
  6955  0515                     	;# 
  6956  0515                     	;# 
  6957  0516                     	;# 
  6958  0517                     	;# 
  6959  0518                     	;# 
  6960  0519                     	;# 
  6961  051A                     	;# 
  6962  051B                     	;# 
  6963  051C                     	;# 
  6964  051D                     	;# 
  6965  058C                     	;# 
  6966  058C                     	;# 
  6967  058D                     	;# 
  6968  058E                     	;# 
  6969  058F                     	;# 
  6970  058F                     	;# 
  6971  0590                     	;# 
  6972  0591                     	;# 
  6973  0592                     	;# 
  6974  0593                     	;# 
  6975  060C                     	;# 
  6976  060D                     	;# 
  6977  060E                     	;# 
  6978  060F                     	;# 
  6979  0610                     	;# 
  6980  0611                     	;# 
  6981  0612                     	;# 
  6982  0613                     	;# 
  6983  0614                     	;# 
  6984  0616                     	;# 
  6985  0617                     	;# 
  6986  0618                     	;# 
  6987  0619                     	;# 
  6988  061A                     	;# 
  6989  061B                     	;# 
  6990  061C                     	;# 
  6991  061D                     	;# 
  6992  061E                     	;# 
  6993  068C                     	;# 
  6994  068D                     	;# 
  6995  068E                     	;# 
  6996  068F                     	;# 
  6997  0690                     	;# 
  6998  0691                     	;# 
  6999  0692                     	;# 
  7000  0693                     	;# 
  7001  0694                     	;# 
  7002  070C                     	;# 
  7003  070D                     	;# 
  7004  070E                     	;# 
  7005  070F                     	;# 
  7006  0710                     	;# 
  7007  0711                     	;# 
  7008  0712                     	;# 
  7009  0713                     	;# 
  7010  0714                     	;# 
  7011  0716                     	;# 
  7012  0717                     	;# 
  7013  0718                     	;# 
  7014  0719                     	;# 
  7015  071A                     	;# 
  7016  071B                     	;# 
  7017  071C                     	;# 
  7018  071D                     	;# 
  7019  071E                     	;# 
  7020  0796                     	;# 
  7021  0797                     	;# 
  7022  0798                     	;# 
  7023  0799                     	;# 
  7024  079A                     	;# 
  7025  079B                     	;# 
  7026  080C                     	;# 
  7027  080D                     	;# 
  7028  080E                     	;# 
  7029  080F                     	;# 
  7030  0810                     	;# 
  7031  0811                     	;# 
  7032  0812                     	;# 
  7033  0813                     	;# 
  7034  0814                     	;# 
  7035  081A                     	;# 
  7036  081B                     	;# 
  7037  081C                     	;# 
  7038  081D                     	;# 
  7039  081E                     	;# 
  7040  081F                     	;# 
  7041  088C                     	;# 
  7042  088D                     	;# 
  7043  088E                     	;# 
  7044  088F                     	;# 
  7045  0890                     	;# 
  7046  0891                     	;# 
  7047  0892                     	;# 
  7048  0893                     	;# 
  7049  0895                     	;# 
  7050  0896                     	;# 
  7051  0897                     	;# 
  7052  0898                     	;# 
  7053  0899                     	;# 
  7054  089A                     	;# 
  7055  089B                     	;# 
  7056  090C                     	;# 
  7057  090E                     	;# 
  7058  090F                     	;# 
  7059  091F                     	;# 
  7060  091F                     	;# 
  7061  098F                     	;# 
  7062  098F                     	;# 
  7063  0990                     	;# 
  7064  0991                     	;# 
  7065  0992                     	;# 
  7066  0993                     	;# 
  7067  0994                     	;# 
  7068  0995                     	;# 
  7069  0996                     	;# 
  7070  0997                     	;# 
  7071  0E0F                     	;# 
  7072  0E10                     	;# 
  7073  0E11                     	;# 
  7074  0E12                     	;# 
  7075  0E13                     	;# 
  7076  0E14                     	;# 
  7077  0E15                     	;# 
  7078  0E16                     	;# 
  7079  0E17                     	;# 
  7080  0E18                     	;# 
  7081  0E19                     	;# 
  7082  0E1A                     	;# 
  7083  0E1B                     	;# 
  7084  0E1C                     	;# 
  7085  0E1D                     	;# 
  7086  0E1E                     	;# 
  7087  0E1F                     	;# 
  7088  0E20                     	;# 
  7089  0E21                     	;# 
  7090  0E22                     	;# 
  7091  0E23                     	;# 
  7092  0E24                     	;# 
  7093  0E25                     	;# 
  7094  0E26                     	;# 
  7095  0E27                     	;# 
  7096  0E28                     	;# 
  7097  0E29                     	;# 
  7098  0E2A                     	;# 
  7099  0E2B                     	;# 
  7100  0E2C                     	;# 
  7101  0E2D                     	;# 
  7102  0E2E                     	;# 
  7103  0E2F                     	;# 
  7104  0E30                     	;# 
  7105  0E31                     	;# 
  7106  0E32                     	;# 
  7107  0E33                     	;# 
  7108  0E34                     	;# 
  7109  0E35                     	;# 
  7110  0E36                     	;# 
  7111  0E37                     	;# 
  7112  0E8F                     	;# 
  7113  0E90                     	;# 
  7114  0E91                     	;# 
  7115  0E92                     	;# 
  7116  0E93                     	;# 
  7117  0E94                     	;# 
  7118  0E95                     	;# 
  7119  0E96                     	;# 
  7120  0E97                     	;# 
  7121  0E9C                     	;# 
  7122  0E9D                     	;# 
  7123  0E9E                     	;# 
  7124  0EA1                     	;# 
  7125  0EA2                     	;# 
  7126  0EA3                     	;# 
  7127  0EA4                     	;# 
  7128  0EA5                     	;# 
  7129  0EA9                     	;# 
  7130  0EAA                     	;# 
  7131  0EAB                     	;# 
  7132  0EAC                     	;# 
  7133  0EB1                     	;# 
  7134  0EB2                     	;# 
  7135  0EB3                     	;# 
  7136  0EB8                     	;# 
  7137  0EB9                     	;# 
  7138  0EBA                     	;# 
  7139  0EBB                     	;# 
  7140  0EBC                     	;# 
  7141  0EBD                     	;# 
  7142  0EBE                     	;# 
  7143  0EC3                     	;# 
  7144  0EC5                     	;# 
  7145  0EC6                     	;# 
  7146  0EC7                     	;# 
  7147  0EC8                     	;# 
  7148  0EC9                     	;# 
  7149  0ECA                     	;# 
  7150  0ECB                     	;# 
  7151  0ECC                     	;# 
  7152  0F10                     	;# 
  7153  0F11                     	;# 
  7154  0F12                     	;# 
  7155  0F13                     	;# 
  7156  0F14                     	;# 
  7157  0F15                     	;# 
  7158  0F16                     	;# 
  7159  0F17                     	;# 
  7160  0F18                     	;# 
  7161  0F19                     	;# 
  7162  0F1A                     	;# 
  7163  0F1B                     	;# 
  7164  0F1C                     	;# 
  7165  0F1D                     	;# 
  7166  0F1E                     	;# 
  7167  0F1F                     	;# 
  7168  0F20                     	;# 
  7169  0F21                     	;# 
  7170  0F22                     	;# 
  7171  0F23                     	;# 
  7172  0F24                     	;# 
  7173  0F25                     	;# 
  7174  0F26                     	;# 
  7175  0F27                     	;# 
  7176  0F28                     	;# 
  7177  0F29                     	;# 
  7178  0F2A                     	;# 
  7179  0F2B                     	;# 
  7180  0F2C                     	;# 
  7181  0F2D                     	;# 
  7182  0F2E                     	;# 
  7183  0F2F                     	;# 
  7184  0F30                     	;# 
  7185  0F31                     	;# 
  7186  0F32                     	;# 
  7187  0F38                     	;# 
  7188  0F39                     	;# 
  7189  0F3A                     	;# 
  7190  0F3B                     	;# 
  7191  0F3C                     	;# 
  7192  0F3D                     	;# 
  7193  0F3E                     	;# 
  7194  0F3F                     	;# 
  7195  0F40                     	;# 
  7196  0F41                     	;# 
  7197  0F43                     	;# 
  7198  0F44                     	;# 
  7199  0F45                     	;# 
  7200  0F46                     	;# 
  7201  0F47                     	;# 
  7202  0F48                     	;# 
  7203  0F49                     	;# 
  7204  0F4A                     	;# 
  7205  0F4B                     	;# 
  7206  0F4C                     	;# 
  7207  0F4E                     	;# 
  7208  0F4F                     	;# 
  7209  0F50                     	;# 
  7210  0F51                     	;# 
  7211  0F52                     	;# 
  7212  0F53                     	;# 
  7213  0F54                     	;# 
  7214  0F55                     	;# 
  7215  0F56                     	;# 
  7216  0F57                     	;# 
  7217  0F59                     	;# 
  7218  0F5A                     	;# 
  7219  0F5B                     	;# 
  7220  0F5C                     	;# 
  7221  0F5D                     	;# 
  7222  0F61                     	;# 
  7223  0F62                     	;# 
  7224  0F64                     	;# 
  7225  0F65                     	;# 
  7226  0F66                     	;# 
  7227  0F67                     	;# 
  7228  0F68                     	;# 
  7229  0F69                     	;# 
  7230  0F6A                     	;# 
  7231  0F6B                     	;# 
  7232  0F6C                     	;# 
  7233  0F6D                     	;# 
  7234  0FE4                     	;# 
  7235  0FE5                     	;# 
  7236  0FE6                     	;# 
  7237  0FE7                     	;# 
  7238  0FE8                     	;# 
  7239  0FE9                     	;# 
  7240  0FEA                     	;# 
  7241  0FEB                     	;# 
  7242  0FED                     	;# 
  7243  0FEE                     	;# 
  7244  0FEF                     	;# 
  7245  0000                     	;# 
  7246  0001                     	;# 
  7247  0002                     	;# 
  7248  0003                     	;# 
  7249  0004                     	;# 
  7250  0005                     	;# 
  7251  0006                     	;# 
  7252  0007                     	;# 
  7253  0008                     	;# 
  7254  0009                     	;# 
  7255  000A                     	;# 
  7256  000B                     	;# 
  7257  000C                     	;# 
  7258  000D                     	;# 
  7259  000E                     	;# 
  7260  000F                     	;# 
  7261  0010                     	;# 
  7262  0011                     	;# 
  7263  0012                     	;# 
  7264  0013                     	;# 
  7265  0014                     	;# 
  7266  0015                     	;# 
  7267  0016                     	;# 
  7268  0017                     	;# 
  7269  0018                     	;# 
  7270  0019                     	;# 
  7271  001A                     	;# 
  7272  001C                     	;# 
  7273  001C                     	;# 
  7274  001D                     	;# 
  7275  001D                     	;# 
  7276  001E                     	;# 
  7277  001F                     	;# 
  7278  008C                     	;# 
  7279  008C                     	;# 
  7280  008D                     	;# 
  7281  008E                     	;# 
  7282  008E                     	;# 
  7283  008F                     	;# 
  7284  0090                     	;# 
  7285  0090                     	;# 
  7286  0091                     	;# 
  7287  0093                     	;# 
  7288  0094                     	;# 
  7289  0095                     	;# 
  7290  0096                     	;# 
  7291  0097                     	;# 
  7292  0098                     	;# 
  7293  0099                     	;# 
  7294  009A                     	;# 
  7295  009B                     	;# 
  7296  009C                     	;# 
  7297  009D                     	;# 
  7298  009E                     	;# 
  7299  010C                     	;# 
  7300  010D                     	;# 
  7301  010E                     	;# 
  7302  010E                     	;# 
  7303  010F                     	;# 
  7304  0110                     	;# 
  7305  0110                     	;# 
  7306  0111                     	;# 
  7307  0112                     	;# 
  7308  0112                     	;# 
  7309  0113                     	;# 
  7310  0114                     	;# 
  7311  0114                     	;# 
  7312  0115                     	;# 
  7313  0116                     	;# 
  7314  0116                     	;# 
  7315  0117                     	;# 
  7316  0119                     	;# 
  7317  0119                     	;# 
  7318  0119                     	;# 
  7319  011A                     	;# 
  7320  011A                     	;# 
  7321  011A                     	;# 
  7322  011B                     	;# 
  7323  011B                     	;# 
  7324  011B                     	;# 
  7325  011B                     	;# 
  7326  011B                     	;# 
  7327  011C                     	;# 
  7328  011C                     	;# 
  7329  011C                     	;# 
  7330  011D                     	;# 
  7331  011D                     	;# 
  7332  011D                     	;# 
  7333  011E                     	;# 
  7334  011E                     	;# 
  7335  011E                     	;# 
  7336  011F                     	;# 
  7337  011F                     	;# 
  7338  011F                     	;# 
  7339  011F                     	;# 
  7340  011F                     	;# 
  7341  018C                     	;# 
  7342  018D                     	;# 
  7343  018E                     	;# 
  7344  018F                     	;# 
  7345  0190                     	;# 
  7346  0191                     	;# 
  7347  0192                     	;# 
  7348  0196                     	;# 
  7349  0197                     	;# 
  7350  0198                     	;# 
  7351  0199                     	;# 
  7352  019A                     	;# 
  7353  019B                     	;# 
  7354  019C                     	;# 
  7355  020C                     	;# 
  7356  020C                     	;# 
  7357  020D                     	;# 
  7358  020E                     	;# 
  7359  020F                     	;# 
  7360  020F                     	;# 
  7361  0210                     	;# 
  7362  0210                     	;# 
  7363  0211                     	;# 
  7364  0211                     	;# 
  7365  0212                     	;# 
  7366  0212                     	;# 
  7367  0213                     	;# 
  7368  0214                     	;# 
  7369  0215                     	;# 
  7370  0215                     	;# 
  7371  0216                     	;# 
  7372  0216                     	;# 
  7373  0217                     	;# 
  7374  0217                     	;# 
  7375  0218                     	;# 
  7376  0218                     	;# 
  7377  0219                     	;# 
  7378  021A                     	;# 
  7379  021B                     	;# 
  7380  021B                     	;# 
  7381  021C                     	;# 
  7382  021C                     	;# 
  7383  021D                     	;# 
  7384  021D                     	;# 
  7385  021E                     	;# 
  7386  021F                     	;# 
  7387  028C                     	;# 
  7388  028C                     	;# 
  7389  028D                     	;# 
  7390  028D                     	;# 
  7391  028E                     	;# 
  7392  028F                     	;# 
  7393  0290                     	;# 
  7394  0290                     	;# 
  7395  0291                     	;# 
  7396  0292                     	;# 
  7397  0292                     	;# 
  7398  0293                     	;# 
  7399  0293                     	;# 
  7400  0294                     	;# 
  7401  0295                     	;# 
  7402  0296                     	;# 
  7403  0296                     	;# 
  7404  0297                     	;# 
  7405  0298                     	;# 
  7406  0298                     	;# 
  7407  0299                     	;# 
  7408  0299                     	;# 
  7409  029A                     	;# 
  7410  029B                     	;# 
  7411  029C                     	;# 
  7412  029C                     	;# 
  7413  029D                     	;# 
  7414  030C                     	;# 
  7415  030C                     	;# 
  7416  030D                     	;# 
  7417  030E                     	;# 
  7418  030F                     	;# 
  7419  0310                     	;# 
  7420  0310                     	;# 
  7421  0311                     	;# 
  7422  0312                     	;# 
  7423  0313                     	;# 
  7424  0314                     	;# 
  7425  0314                     	;# 
  7426  0315                     	;# 
  7427  0316                     	;# 
  7428  0317                     	;# 
  7429  0318                     	;# 
  7430  0318                     	;# 
  7431  0319                     	;# 
  7432  031A                     	;# 
  7433  031B                     	;# 
  7434  031C                     	;# 
  7435  031C                     	;# 
  7436  031D                     	;# 
  7437  031E                     	;# 
  7438  031F                     	;# 
  7439  038C                     	;# 
  7440  038C                     	;# 
  7441  038D                     	;# 
  7442  038E                     	;# 
  7443  0390                     	;# 
  7444  0390                     	;# 
  7445  0391                     	;# 
  7446  0392                     	;# 
  7447  040C                     	;# 
  7448  040D                     	;# 
  7449  040E                     	;# 
  7450  040F                     	;# 
  7451  0410                     	;# 
  7452  0411                     	;# 
  7453  0416                     	;# 
  7454  0416                     	;# 
  7455  0417                     	;# 
  7456  0418                     	;# 
  7457  0418                     	;# 
  7458  0419                     	;# 
  7459  041A                     	;# 
  7460  041A                     	;# 
  7461  041B                     	;# 
  7462  041C                     	;# 
  7463  041C                     	;# 
  7464  041D                     	;# 
  7465  041E                     	;# 
  7466  041F                     	;# 
  7467  048C                     	;# 
  7468  048C                     	;# 
  7469  048D                     	;# 
  7470  048E                     	;# 
  7471  048F                     	;# 
  7472  048F                     	;# 
  7473  0490                     	;# 
  7474  0491                     	;# 
  7475  0492                     	;# 
  7476  0492                     	;# 
  7477  0493                     	;# 
  7478  0494                     	;# 
  7479  0495                     	;# 
  7480  0495                     	;# 
  7481  0496                     	;# 
  7482  0497                     	;# 
  7483  0498                     	;# 
  7484  0499                     	;# 
  7485  049A                     	;# 
  7486  049B                     	;# 
  7487  049C                     	;# 
  7488  049D                     	;# 
  7489  050C                     	;# 
  7490  050C                     	;# 
  7491  050D                     	;# 
  7492  050E                     	;# 
  7493  050F                     	;# 
  7494  050F                     	;# 
  7495  0510                     	;# 
  7496  0511                     	;# 
  7497  0512                     	;# 
  7498  0512                     	;# 
  7499  0513                     	;# 
  7500  0514                     	;# 
  7501  0515                     	;# 
  7502  0515                     	;# 
  7503  0516                     	;# 
  7504  0517                     	;# 
  7505  0518                     	;# 
  7506  0519                     	;# 
  7507  051A                     	;# 
  7508  051B                     	;# 
  7509  051C                     	;# 
  7510  051D                     	;# 
  7511  058C                     	;# 
  7512  058C                     	;# 
  7513  058D                     	;# 
  7514  058E                     	;# 
  7515  058F                     	;# 
  7516  058F                     	;# 
  7517  0590                     	;# 
  7518  0591                     	;# 
  7519  0592                     	;# 
  7520  0593                     	;# 
  7521  060C                     	;# 
  7522  060D                     	;# 
  7523  060E                     	;# 
  7524  060F                     	;# 
  7525  0610                     	;# 
  7526  0611                     	;# 
  7527  0612                     	;# 
  7528  0613                     	;# 
  7529  0614                     	;# 
  7530  0616                     	;# 
  7531  0617                     	;# 
  7532  0618                     	;# 
  7533  0619                     	;# 
  7534  061A                     	;# 
  7535  061B                     	;# 
  7536  061C                     	;# 
  7537  061D                     	;# 
  7538  061E                     	;# 
  7539  068C                     	;# 
  7540  068D                     	;# 
  7541  068E                     	;# 
  7542  068F                     	;# 
  7543  0690                     	;# 
  7544  0691                     	;# 
  7545  0692                     	;# 
  7546  0693                     	;# 
  7547  0694                     	;# 
  7548  070C                     	;# 
  7549  070D                     	;# 
  7550  070E                     	;# 
  7551  070F                     	;# 
  7552  0710                     	;# 
  7553  0711                     	;# 
  7554  0712                     	;# 
  7555  0713                     	;# 
  7556  0714                     	;# 
  7557  0716                     	;# 
  7558  0717                     	;# 
  7559  0718                     	;# 
  7560  0719                     	;# 
  7561  071A                     	;# 
  7562  071B                     	;# 
  7563  071C                     	;# 
  7564  071D                     	;# 
  7565  071E                     	;# 
  7566  0796                     	;# 
  7567  0797                     	;# 
  7568  0798                     	;# 
  7569  0799                     	;# 
  7570  079A                     	;# 
  7571  079B                     	;# 
  7572  080C                     	;# 
  7573  080D                     	;# 
  7574  080E                     	;# 
  7575  080F                     	;# 
  7576  0810                     	;# 
  7577  0811                     	;# 
  7578  0812                     	;# 
  7579  0813                     	;# 
  7580  0814                     	;# 
  7581  081A                     	;# 
  7582  081B                     	;# 
  7583  081C                     	;# 
  7584  081D                     	;# 
  7585  081E                     	;# 
  7586  081F                     	;# 
  7587  088C                     	;# 
  7588  088D                     	;# 
  7589  088E                     	;# 
  7590  088F                     	;# 
  7591  0890                     	;# 
  7592  0891                     	;# 
  7593  0892                     	;# 
  7594  0893                     	;# 
  7595  0895                     	;# 
  7596  0896                     	;# 
  7597  0897                     	;# 
  7598  0898                     	;# 
  7599  0899                     	;# 
  7600  089A                     	;# 
  7601  089B                     	;# 
  7602  090C                     	;# 
  7603  090E                     	;# 
  7604  090F                     	;# 
  7605  091F                     	;# 
  7606  091F                     	;# 
  7607  098F                     	;# 
  7608  098F                     	;# 
  7609  0990                     	;# 
  7610  0991                     	;# 
  7611  0992                     	;# 
  7612  0993                     	;# 
  7613  0994                     	;# 
  7614  0995                     	;# 
  7615  0996                     	;# 
  7616  0997                     	;# 
  7617  0E0F                     	;# 
  7618  0E10                     	;# 
  7619  0E11                     	;# 
  7620  0E12                     	;# 
  7621  0E13                     	;# 
  7622  0E14                     	;# 
  7623  0E15                     	;# 
  7624  0E16                     	;# 
  7625  0E17                     	;# 
  7626  0E18                     	;# 
  7627  0E19                     	;# 
  7628  0E1A                     	;# 
  7629  0E1B                     	;# 
  7630  0E1C                     	;# 
  7631  0E1D                     	;# 
  7632  0E1E                     	;# 
  7633  0E1F                     	;# 
  7634  0E20                     	;# 
  7635  0E21                     	;# 
  7636  0E22                     	;# 
  7637  0E23                     	;# 
  7638  0E24                     	;# 
  7639  0E25                     	;# 
  7640  0E26                     	;# 
  7641  0E27                     	;# 
  7642  0E28                     	;# 
  7643  0E29                     	;# 
  7644  0E2A                     	;# 
  7645  0E2B                     	;# 
  7646  0E2C                     	;# 
  7647  0E2D                     	;# 
  7648  0E2E                     	;# 
  7649  0E2F                     	;# 
  7650  0E30                     	;# 
  7651  0E31                     	;# 
  7652  0E32                     	;# 
  7653  0E33                     	;# 
  7654  0E34                     	;# 
  7655  0E35                     	;# 
  7656  0E36                     	;# 
  7657  0E37                     	;# 
  7658  0E8F                     	;# 
  7659  0E90                     	;# 
  7660  0E91                     	;# 
  7661  0E92                     	;# 
  7662  0E93                     	;# 
  7663  0E94                     	;# 
  7664  0E95                     	;# 
  7665  0E96                     	;# 
  7666  0E97                     	;# 
  7667  0E9C                     	;# 
  7668  0E9D                     	;# 
  7669  0E9E                     	;# 
  7670  0EA1                     	;# 
  7671  0EA2                     	;# 
  7672  0EA3                     	;# 
  7673  0EA4                     	;# 
  7674  0EA5                     	;# 
  7675  0EA9                     	;# 
  7676  0EAA                     	;# 
  7677  0EAB                     	;# 
  7678  0EAC                     	;# 
  7679  0EB1                     	;# 
  7680  0EB2                     	;# 
  7681  0EB3                     	;# 
  7682  0EB8                     	;# 
  7683  0EB9                     	;# 
  7684  0EBA                     	;# 
  7685  0EBB                     	;# 
  7686  0EBC                     	;# 
  7687  0EBD                     	;# 
  7688  0EBE                     	;# 
  7689  0EC3                     	;# 
  7690  0EC5                     	;# 
  7691  0EC6                     	;# 
  7692  0EC7                     	;# 
  7693  0EC8                     	;# 
  7694  0EC9                     	;# 
  7695  0ECA                     	;# 
  7696  0ECB                     	;# 
  7697  0ECC                     	;# 
  7698  0F10                     	;# 
  7699  0F11                     	;# 
  7700  0F12                     	;# 
  7701  0F13                     	;# 
  7702  0F14                     	;# 
  7703  0F15                     	;# 
  7704  0F16                     	;# 
  7705  0F17                     	;# 
  7706  0F18                     	;# 
  7707  0F19                     	;# 
  7708  0F1A                     	;# 
  7709  0F1B                     	;# 
  7710  0F1C                     	;# 
  7711  0F1D                     	;# 
  7712  0F1E                     	;# 
  7713  0F1F                     	;# 
  7714  0F20                     	;# 
  7715  0F21                     	;# 
  7716  0F22                     	;# 
  7717  0F23                     	;# 
  7718  0F24                     	;# 
  7719  0F25                     	;# 
  7720  0F26                     	;# 
  7721  0F27                     	;# 
  7722  0F28                     	;# 
  7723  0F29                     	;# 
  7724  0F2A                     	;# 
  7725  0F2B                     	;# 
  7726  0F2C                     	;# 
  7727  0F2D                     	;# 
  7728  0F2E                     	;# 
  7729  0F2F                     	;# 
  7730  0F30                     	;# 
  7731  0F31                     	;# 
  7732  0F32                     	;# 
  7733  0F38                     	;# 
  7734  0F39                     	;# 
  7735  0F3A                     	;# 
  7736  0F3B                     	;# 
  7737  0F3C                     	;# 
  7738  0F3D                     	;# 
  7739  0F3E                     	;# 
  7740  0F3F                     	;# 
  7741  0F40                     	;# 
  7742  0F41                     	;# 
  7743  0F43                     	;# 
  7744  0F44                     	;# 
  7745  0F45                     	;# 
  7746  0F46                     	;# 
  7747  0F47                     	;# 
  7748  0F48                     	;# 
  7749  0F49                     	;# 
  7750  0F4A                     	;# 
  7751  0F4B                     	;# 
  7752  0F4C                     	;# 
  7753  0F4E                     	;# 
  7754  0F4F                     	;# 
  7755  0F50                     	;# 
  7756  0F51                     	;# 
  7757  0F52                     	;# 
  7758  0F53                     	;# 
  7759  0F54                     	;# 
  7760  0F55                     	;# 
  7761  0F56                     	;# 
  7762  0F57                     	;# 
  7763  0F59                     	;# 
  7764  0F5A                     	;# 
  7765  0F5B                     	;# 
  7766  0F5C                     	;# 
  7767  0F5D                     	;# 
  7768  0F61                     	;# 
  7769  0F62                     	;# 
  7770  0F64                     	;# 
  7771  0F65                     	;# 
  7772  0F66                     	;# 
  7773  0F67                     	;# 
  7774  0F68                     	;# 
  7775  0F69                     	;# 
  7776  0F6A                     	;# 
  7777  0F6B                     	;# 
  7778  0F6C                     	;# 
  7779  0F6D                     	;# 
  7780  0FE4                     	;# 
  7781  0FE5                     	;# 
  7782  0FE6                     	;# 
  7783  0FE7                     	;# 
  7784  0FE8                     	;# 
  7785  0FE9                     	;# 
  7786  0FEA                     	;# 
  7787  0FEB                     	;# 
  7788  0FED                     	;# 
  7789  0FEE                     	;# 
  7790  0FEF                     	;# 
  7791  0000                     	;# 
  7792  0001                     	;# 
  7793  0002                     	;# 
  7794  0003                     	;# 
  7795  0004                     	;# 
  7796  0005                     	;# 
  7797  0006                     	;# 
  7798  0007                     	;# 
  7799  0008                     	;# 
  7800  0009                     	;# 
  7801  000A                     	;# 
  7802  000B                     	;# 
  7803  000C                     	;# 
  7804  000D                     	;# 
  7805  000E                     	;# 
  7806  000F                     	;# 
  7807  0010                     	;# 
  7808  0011                     	;# 
  7809  0012                     	;# 
  7810  0013                     	;# 
  7811  0014                     	;# 
  7812  0015                     	;# 
  7813  0016                     	;# 
  7814  0017                     	;# 
  7815  0018                     	;# 
  7816  0019                     	;# 
  7817  001A                     	;# 
  7818  001C                     	;# 
  7819  001C                     	;# 
  7820  001D                     	;# 
  7821  001D                     	;# 
  7822  001E                     	;# 
  7823  001F                     	;# 
  7824  008C                     	;# 
  7825  008C                     	;# 
  7826  008D                     	;# 
  7827  008E                     	;# 
  7828  008E                     	;# 
  7829  008F                     	;# 
  7830  0090                     	;# 
  7831  0090                     	;# 
  7832  0091                     	;# 
  7833  0093                     	;# 
  7834  0094                     	;# 
  7835  0095                     	;# 
  7836  0096                     	;# 
  7837  0097                     	;# 
  7838  0098                     	;# 
  7839  0099                     	;# 
  7840  009A                     	;# 
  7841  009B                     	;# 
  7842  009C                     	;# 
  7843  009D                     	;# 
  7844  009E                     	;# 
  7845  010C                     	;# 
  7846  010D                     	;# 
  7847  010E                     	;# 
  7848  010E                     	;# 
  7849  010F                     	;# 
  7850  0110                     	;# 
  7851  0110                     	;# 
  7852  0111                     	;# 
  7853  0112                     	;# 
  7854  0112                     	;# 
  7855  0113                     	;# 
  7856  0114                     	;# 
  7857  0114                     	;# 
  7858  0115                     	;# 
  7859  0116                     	;# 
  7860  0116                     	;# 
  7861  0117                     	;# 
  7862  0119                     	;# 
  7863  0119                     	;# 
  7864  0119                     	;# 
  7865  011A                     	;# 
  7866  011A                     	;# 
  7867  011A                     	;# 
  7868  011B                     	;# 
  7869  011B                     	;# 
  7870  011B                     	;# 
  7871  011B                     	;# 
  7872  011B                     	;# 
  7873  011C                     	;# 
  7874  011C                     	;# 
  7875  011C                     	;# 
  7876  011D                     	;# 
  7877  011D                     	;# 
  7878  011D                     	;# 
  7879  011E                     	;# 
  7880  011E                     	;# 
  7881  011E                     	;# 
  7882  011F                     	;# 
  7883  011F                     	;# 
  7884  011F                     	;# 
  7885  011F                     	;# 
  7886  011F                     	;# 
  7887  018C                     	;# 
  7888  018D                     	;# 
  7889  018E                     	;# 
  7890  018F                     	;# 
  7891  0190                     	;# 
  7892  0191                     	;# 
  7893  0192                     	;# 
  7894  0196                     	;# 
  7895  0197                     	;# 
  7896  0198                     	;# 
  7897  0199                     	;# 
  7898  019A                     	;# 
  7899  019B                     	;# 
  7900  019C                     	;# 
  7901  020C                     	;# 
  7902  020C                     	;# 
  7903  020D                     	;# 
  7904  020E                     	;# 
  7905  020F                     	;# 
  7906  020F                     	;# 
  7907  0210                     	;# 
  7908  0210                     	;# 
  7909  0211                     	;# 
  7910  0211                     	;# 
  7911  0212                     	;# 
  7912  0212                     	;# 
  7913  0213                     	;# 
  7914  0214                     	;# 
  7915  0215                     	;# 
  7916  0215                     	;# 
  7917  0216                     	;# 
  7918  0216                     	;# 
  7919  0217                     	;# 
  7920  0217                     	;# 
  7921  0218                     	;# 
  7922  0218                     	;# 
  7923  0219                     	;# 
  7924  021A                     	;# 
  7925  021B                     	;# 
  7926  021B                     	;# 
  7927  021C                     	;# 
  7928  021C                     	;# 
  7929  021D                     	;# 
  7930  021D                     	;# 
  7931  021E                     	;# 
  7932  021F                     	;# 
  7933  028C                     	;# 
  7934  028C                     	;# 
  7935  028D                     	;# 
  7936  028D                     	;# 
  7937  028E                     	;# 
  7938  028F                     	;# 
  7939  0290                     	;# 
  7940  0290                     	;# 
  7941  0291                     	;# 
  7942  0292                     	;# 
  7943  0292                     	;# 
  7944  0293                     	;# 
  7945  0293                     	;# 
  7946  0294                     	;# 
  7947  0295                     	;# 
  7948  0296                     	;# 
  7949  0296                     	;# 
  7950  0297                     	;# 
  7951  0298                     	;# 
  7952  0298                     	;# 
  7953  0299                     	;# 
  7954  0299                     	;# 
  7955  029A                     	;# 
  7956  029B                     	;# 
  7957  029C                     	;# 
  7958  029C                     	;# 
  7959  029D                     	;# 
  7960  030C                     	;# 
  7961  030C                     	;# 
  7962  030D                     	;# 
  7963  030E                     	;# 
  7964  030F                     	;# 
  7965  0310                     	;# 
  7966  0310                     	;# 
  7967  0311                     	;# 
  7968  0312                     	;# 
  7969  0313                     	;# 
  7970  0314                     	;# 
  7971  0314                     	;# 
  7972  0315                     	;# 
  7973  0316                     	;# 
  7974  0317                     	;# 
  7975  0318                     	;# 
  7976  0318                     	;# 
  7977  0319                     	;# 
  7978  031A                     	;# 
  7979  031B                     	;# 
  7980  031C                     	;# 
  7981  031C                     	;# 
  7982  031D                     	;# 
  7983  031E                     	;# 
  7984  031F                     	;# 
  7985  038C                     	;# 
  7986  038C                     	;# 
  7987  038D                     	;# 
  7988  038E                     	;# 
  7989  0390                     	;# 
  7990  0390                     	;# 
  7991  0391                     	;# 
  7992  0392                     	;# 
  7993  040C                     	;# 
  7994  040D                     	;# 
  7995  040E                     	;# 
  7996  040F                     	;# 
  7997  0410                     	;# 
  7998  0411                     	;# 
  7999  0416                     	;# 
  8000  0416                     	;# 
  8001  0417                     	;# 
  8002  0418                     	;# 
  8003  0418                     	;# 
  8004  0419                     	;# 
  8005  041A                     	;# 
  8006  041A                     	;# 
  8007  041B                     	;# 
  8008  041C                     	;# 
  8009  041C                     	;# 
  8010  041D                     	;# 
  8011  041E                     	;# 
  8012  041F                     	;# 
  8013  048C                     	;# 
  8014  048C                     	;# 
  8015  048D                     	;# 
  8016  048E                     	;# 
  8017  048F                     	;# 
  8018  048F                     	;# 
  8019  0490                     	;# 
  8020  0491                     	;# 
  8021  0492                     	;# 
  8022  0492                     	;# 
  8023  0493                     	;# 
  8024  0494                     	;# 
  8025  0495                     	;# 
  8026  0495                     	;# 
  8027  0496                     	;# 
  8028  0497                     	;# 
  8029  0498                     	;# 
  8030  0499                     	;# 
  8031  049A                     	;# 
  8032  049B                     	;# 
  8033  049C                     	;# 
  8034  049D                     	;# 
  8035  050C                     	;# 
  8036  050C                     	;# 
  8037  050D                     	;# 
  8038  050E                     	;# 
  8039  050F                     	;# 
  8040  050F                     	;# 
  8041  0510                     	;# 
  8042  0511                     	;# 
  8043  0512                     	;# 
  8044  0512                     	;# 
  8045  0513                     	;# 
  8046  0514                     	;# 
  8047  0515                     	;# 
  8048  0515                     	;# 
  8049  0516                     	;# 
  8050  0517                     	;# 
  8051  0518                     	;# 
  8052  0519                     	;# 
  8053  051A                     	;# 
  8054  051B                     	;# 
  8055  051C                     	;# 
  8056  051D                     	;# 
  8057  058C                     	;# 
  8058  058C                     	;# 
  8059  058D                     	;# 
  8060  058E                     	;# 
  8061  058F                     	;# 
  8062  058F                     	;# 
  8063  0590                     	;# 
  8064  0591                     	;# 
  8065  0592                     	;# 
  8066  0593                     	;# 
  8067  060C                     	;# 
  8068  060D                     	;# 
  8069  060E                     	;# 
  8070  060F                     	;# 
  8071  0610                     	;# 
  8072  0611                     	;# 
  8073  0612                     	;# 
  8074  0613                     	;# 
  8075  0614                     	;# 
  8076  0616                     	;# 
  8077  0617                     	;# 
  8078  0618                     	;# 
  8079  0619                     	;# 
  8080  061A                     	;# 
  8081  061B                     	;# 
  8082  061C                     	;# 
  8083  061D                     	;# 
  8084  061E                     	;# 
  8085  068C                     	;# 
  8086  068D                     	;# 
  8087  068E                     	;# 
  8088  068F                     	;# 
  8089  0690                     	;# 
  8090  0691                     	;# 
  8091  0692                     	;# 
  8092  0693                     	;# 
  8093  0694                     	;# 
  8094  070C                     	;# 
  8095  070D                     	;# 
  8096  070E                     	;# 
  8097  070F                     	;# 
  8098  0710                     	;# 
  8099  0711                     	;# 
  8100  0712                     	;# 
  8101  0713                     	;# 
  8102  0714                     	;# 
  8103  0716                     	;# 
  8104  0717                     	;# 
  8105  0718                     	;# 
  8106  0719                     	;# 
  8107  071A                     	;# 
  8108  071B                     	;# 
  8109  071C                     	;# 
  8110  071D                     	;# 
  8111  071E                     	;# 
  8112  0796                     	;# 
  8113  0797                     	;# 
  8114  0798                     	;# 
  8115  0799                     	;# 
  8116  079A                     	;# 
  8117  079B                     	;# 
  8118  080C                     	;# 
  8119  080D                     	;# 
  8120  080E                     	;# 
  8121  080F                     	;# 
  8122  0810                     	;# 
  8123  0811                     	;# 
  8124  0812                     	;# 
  8125  0813                     	;# 
  8126  0814                     	;# 
  8127  081A                     	;# 
  8128  081B                     	;# 
  8129  081C                     	;# 
  8130  081D                     	;# 
  8131  081E                     	;# 
  8132  081F                     	;# 
  8133  088C                     	;# 
  8134  088D                     	;# 
  8135  088E                     	;# 
  8136  088F                     	;# 
  8137  0890                     	;# 
  8138  0891                     	;# 
  8139  0892                     	;# 
  8140  0893                     	;# 
  8141  0895                     	;# 
  8142  0896                     	;# 
  8143  0897                     	;# 
  8144  0898                     	;# 
  8145  0899                     	;# 
  8146  089A                     	;# 
  8147  089B                     	;# 
  8148  090C                     	;# 
  8149  090E                     	;# 
  8150  090F                     	;# 
  8151  091F                     	;# 
  8152  091F                     	;# 
  8153  098F                     	;# 
  8154  098F                     	;# 
  8155  0990                     	;# 
  8156  0991                     	;# 
  8157  0992                     	;# 
  8158  0993                     	;# 
  8159  0994                     	;# 
  8160  0995                     	;# 
  8161  0996                     	;# 
  8162  0997                     	;# 
  8163  0E0F                     	;# 
  8164  0E10                     	;# 
  8165  0E11                     	;# 
  8166  0E12                     	;# 
  8167  0E13                     	;# 
  8168  0E14                     	;# 
  8169  0E15                     	;# 
  8170  0E16                     	;# 
  8171  0E17                     	;# 
  8172  0E18                     	;# 
  8173  0E19                     	;# 
  8174  0E1A                     	;# 
  8175  0E1B                     	;# 
  8176  0E1C                     	;# 
  8177  0E1D                     	;# 
  8178  0E1E                     	;# 
  8179  0E1F                     	;# 
  8180  0E20                     	;# 
  8181  0E21                     	;# 
  8182  0E22                     	;# 
  8183  0E23                     	;# 
  8184  0E24                     	;# 
  8185  0E25                     	;# 
  8186  0E26                     	;# 
  8187  0E27                     	;# 
  8188  0E28                     	;# 
  8189  0E29                     	;# 
  8190  0E2A                     	;# 
  8191  0E2B                     	;# 
  8192  0E2C                     	;# 
  8193  0E2D                     	;# 
  8194  0E2E                     	;# 
  8195  0E2F                     	;# 
  8196  0E30                     	;# 
  8197  0E31                     	;# 
  8198  0E32                     	;# 
  8199  0E33                     	;# 
  8200  0E34                     	;# 
  8201  0E35                     	;# 
  8202  0E36                     	;# 
  8203  0E37                     	;# 
  8204  0E8F                     	;# 
  8205  0E90                     	;# 
  8206  0E91                     	;# 
  8207  0E92                     	;# 
  8208  0E93                     	;# 
  8209  0E94                     	;# 
  8210  0E95                     	;# 
  8211  0E96                     	;# 
  8212  0E97                     	;# 
  8213  0E9C                     	;# 
  8214  0E9D                     	;# 
  8215  0E9E                     	;# 
  8216  0EA1                     	;# 
  8217  0EA2                     	;# 
  8218  0EA3                     	;# 
  8219  0EA4                     	;# 
  8220  0EA5                     	;# 
  8221  0EA9                     	;# 
  8222  0EAA                     	;# 
  8223  0EAB                     	;# 
  8224  0EAC                     	;# 
  8225  0EB1                     	;# 
  8226  0EB2                     	;# 
  8227  0EB3                     	;# 
  8228  0EB8                     	;# 
  8229  0EB9                     	;# 
  8230  0EBA                     	;# 
  8231  0EBB                     	;# 
  8232  0EBC                     	;# 
  8233  0EBD                     	;# 
  8234  0EBE                     	;# 
  8235  0EC3                     	;# 
  8236  0EC5                     	;# 
  8237  0EC6                     	;# 
  8238  0EC7                     	;# 
  8239  0EC8                     	;# 
  8240  0EC9                     	;# 
  8241  0ECA                     	;# 
  8242  0ECB                     	;# 
  8243  0ECC                     	;# 
  8244  0F10                     	;# 
  8245  0F11                     	;# 
  8246  0F12                     	;# 
  8247  0F13                     	;# 
  8248  0F14                     	;# 
  8249  0F15                     	;# 
  8250  0F16                     	;# 
  8251  0F17                     	;# 
  8252  0F18                     	;# 
  8253  0F19                     	;# 
  8254  0F1A                     	;# 
  8255  0F1B                     	;# 
  8256  0F1C                     	;# 
  8257  0F1D                     	;# 
  8258  0F1E                     	;# 
  8259  0F1F                     	;# 
  8260  0F20                     	;# 
  8261  0F21                     	;# 
  8262  0F22                     	;# 
  8263  0F23                     	;# 
  8264  0F24                     	;# 
  8265  0F25                     	;# 
  8266  0F26                     	;# 
  8267  0F27                     	;# 
  8268  0F28                     	;# 
  8269  0F29                     	;# 
  8270  0F2A                     	;# 
  8271  0F2B                     	;# 
  8272  0F2C                     	;# 
  8273  0F2D                     	;# 
  8274  0F2E                     	;# 
  8275  0F2F                     	;# 
  8276  0F30                     	;# 
  8277  0F31                     	;# 
  8278  0F32                     	;# 
  8279  0F38                     	;# 
  8280  0F39                     	;# 
  8281  0F3A                     	;# 
  8282  0F3B                     	;# 
  8283  0F3C                     	;# 
  8284  0F3D                     	;# 
  8285  0F3E                     	;# 
  8286  0F3F                     	;# 
  8287  0F40                     	;# 
  8288  0F41                     	;# 
  8289  0F43                     	;# 
  8290  0F44                     	;# 
  8291  0F45                     	;# 
  8292  0F46                     	;# 
  8293  0F47                     	;# 
  8294  0F48                     	;# 
  8295  0F49                     	;# 
  8296  0F4A                     	;# 
  8297  0F4B                     	;# 
  8298  0F4C                     	;# 
  8299  0F4E                     	;# 
  8300  0F4F                     	;# 
  8301  0F50                     	;# 
  8302  0F51                     	;# 
  8303  0F52                     	;# 
  8304  0F53                     	;# 
  8305  0F54                     	;# 
  8306  0F55                     	;# 
  8307  0F56                     	;# 
  8308  0F57                     	;# 
  8309  0F59                     	;# 
  8310  0F5A                     	;# 
  8311  0F5B                     	;# 
  8312  0F5C                     	;# 
  8313  0F5D                     	;# 
  8314  0F61                     	;# 
  8315  0F62                     	;# 
  8316  0F64                     	;# 
  8317  0F65                     	;# 
  8318  0F66                     	;# 
  8319  0F67                     	;# 
  8320  0F68                     	;# 
  8321  0F69                     	;# 
  8322  0F6A                     	;# 
  8323  0F6B                     	;# 
  8324  0F6C                     	;# 
  8325  0F6D                     	;# 
  8326  0FE4                     	;# 
  8327  0FE5                     	;# 
  8328  0FE6                     	;# 
  8329  0FE7                     	;# 
  8330  0FE8                     	;# 
  8331  0FE9                     	;# 
  8332  0FEA                     	;# 
  8333  0FEB                     	;# 
  8334  0FED                     	;# 
  8335  0FEE                     	;# 
  8336  0FEF                     	;# 
  8337  0000                     	;# 
  8338  0001                     	;# 
  8339  0002                     	;# 
  8340  0003                     	;# 
  8341  0004                     	;# 
  8342  0005                     	;# 
  8343  0006                     	;# 
  8344  0007                     	;# 
  8345  0008                     	;# 
  8346  0009                     	;# 
  8347  000A                     	;# 
  8348  000B                     	;# 
  8349  000C                     	;# 
  8350  000D                     	;# 
  8351  000E                     	;# 
  8352  000F                     	;# 
  8353  0010                     	;# 
  8354  0011                     	;# 
  8355  0012                     	;# 
  8356  0013                     	;# 
  8357  0014                     	;# 
  8358  0015                     	;# 
  8359  0016                     	;# 
  8360  0017                     	;# 
  8361  0018                     	;# 
  8362  0019                     	;# 
  8363  001A                     	;# 
  8364  001C                     	;# 
  8365  001C                     	;# 
  8366  001D                     	;# 
  8367  001D                     	;# 
  8368  001E                     	;# 
  8369  001F                     	;# 
  8370  008C                     	;# 
  8371  008C                     	;# 
  8372  008D                     	;# 
  8373  008E                     	;# 
  8374  008E                     	;# 
  8375  008F                     	;# 
  8376  0090                     	;# 
  8377  0090                     	;# 
  8378  0091                     	;# 
  8379  0093                     	;# 
  8380  0094                     	;# 
  8381  0095                     	;# 
  8382  0096                     	;# 
  8383  0097                     	;# 
  8384  0098                     	;# 
  8385  0099                     	;# 
  8386  009A                     	;# 
  8387  009B                     	;# 
  8388  009C                     	;# 
  8389  009D                     	;# 
  8390  009E                     	;# 
  8391  010C                     	;# 
  8392  010D                     	;# 
  8393  010E                     	;# 
  8394  010E                     	;# 
  8395  010F                     	;# 
  8396  0110                     	;# 
  8397  0110                     	;# 
  8398  0111                     	;# 
  8399  0112                     	;# 
  8400  0112                     	;# 
  8401  0113                     	;# 
  8402  0114                     	;# 
  8403  0114                     	;# 
  8404  0115                     	;# 
  8405  0116                     	;# 
  8406  0116                     	;# 
  8407  0117                     	;# 
  8408  0119                     	;# 
  8409  0119                     	;# 
  8410  0119                     	;# 
  8411  011A                     	;# 
  8412  011A                     	;# 
  8413  011A                     	;# 
  8414  011B                     	;# 
  8415  011B                     	;# 
  8416  011B                     	;# 
  8417  011B                     	;# 
  8418  011B                     	;# 
  8419  011C                     	;# 
  8420  011C                     	;# 
  8421  011C                     	;# 
  8422  011D                     	;# 
  8423  011D                     	;# 
  8424  011D                     	;# 
  8425  011E                     	;# 
  8426  011E                     	;# 
  8427  011E                     	;# 
  8428  011F                     	;# 
  8429  011F                     	;# 
  8430  011F                     	;# 
  8431  011F                     	;# 
  8432  011F                     	;# 
  8433  018C                     	;# 
  8434  018D                     	;# 
  8435  018E                     	;# 
  8436  018F                     	;# 
  8437  0190                     	;# 
  8438  0191                     	;# 
  8439  0192                     	;# 
  8440  0196                     	;# 
  8441  0197                     	;# 
  8442  0198                     	;# 
  8443  0199                     	;# 
  8444  019A                     	;# 
  8445  019B                     	;# 
  8446  019C                     	;# 
  8447  020C                     	;# 
  8448  020C                     	;# 
  8449  020D                     	;# 
  8450  020E                     	;# 
  8451  020F                     	;# 
  8452  020F                     	;# 
  8453  0210                     	;# 
  8454  0210                     	;# 
  8455  0211                     	;# 
  8456  0211                     	;# 
  8457  0212                     	;# 
  8458  0212                     	;# 
  8459  0213                     	;# 
  8460  0214                     	;# 
  8461  0215                     	;# 
  8462  0215                     	;# 
  8463  0216                     	;# 
  8464  0216                     	;# 
  8465  0217                     	;# 
  8466  0217                     	;# 
  8467  0218                     	;# 
  8468  0218                     	;# 
  8469  0219                     	;# 
  8470  021A                     	;# 
  8471  021B                     	;# 
  8472  021B                     	;# 
  8473  021C                     	;# 
  8474  021C                     	;# 
  8475  021D                     	;# 
  8476  021D                     	;# 
  8477  021E                     	;# 
  8478  021F                     	;# 
  8479  028C                     	;# 
  8480  028C                     	;# 
  8481  028D                     	;# 
  8482  028D                     	;# 
  8483  028E                     	;# 
  8484  028F                     	;# 
  8485  0290                     	;# 
  8486  0290                     	;# 
  8487  0291                     	;# 
  8488  0292                     	;# 
  8489  0292                     	;# 
  8490  0293                     	;# 
  8491  0293                     	;# 
  8492  0294                     	;# 
  8493  0295                     	;# 
  8494  0296                     	;# 
  8495  0296                     	;# 
  8496  0297                     	;# 
  8497  0298                     	;# 
  8498  0298                     	;# 
  8499  0299                     	;# 
  8500  0299                     	;# 
  8501  029A                     	;# 
  8502  029B                     	;# 
  8503  029C                     	;# 
  8504  029C                     	;# 
  8505  029D                     	;# 
  8506  030C                     	;# 
  8507  030C                     	;# 
  8508  030D                     	;# 
  8509  030E                     	;# 
  8510  030F                     	;# 
  8511  0310                     	;# 
  8512  0310                     	;# 
  8513  0311                     	;# 
  8514  0312                     	;# 
  8515  0313                     	;# 
  8516  0314                     	;# 
  8517  0314                     	;# 
  8518  0315                     	;# 
  8519  0316                     	;# 
  8520  0317                     	;# 
  8521  0318                     	;# 
  8522  0318                     	;# 
  8523  0319                     	;# 
  8524  031A                     	;# 
  8525  031B                     	;# 
  8526  031C                     	;# 
  8527  031C                     	;# 
  8528  031D                     	;# 
  8529  031E                     	;# 
  8530  031F                     	;# 
  8531  038C                     	;# 
  8532  038C                     	;# 
  8533  038D                     	;# 
  8534  038E                     	;# 
  8535  0390                     	;# 
  8536  0390                     	;# 
  8537  0391                     	;# 
  8538  0392                     	;# 
  8539  040C                     	;# 
  8540  040D                     	;# 
  8541  040E                     	;# 
  8542  040F                     	;# 
  8543  0410                     	;# 
  8544  0411                     	;# 
  8545  0416                     	;# 
  8546  0416                     	;# 
  8547  0417                     	;# 
  8548  0418                     	;# 
  8549  0418                     	;# 
  8550  0419                     	;# 
  8551  041A                     	;# 
  8552  041A                     	;# 
  8553  041B                     	;# 
  8554  041C                     	;# 
  8555  041C                     	;# 
  8556  041D                     	;# 
  8557  041E                     	;# 
  8558  041F                     	;# 
  8559  048C                     	;# 
  8560  048C                     	;# 
  8561  048D                     	;# 
  8562  048E                     	;# 
  8563  048F                     	;# 
  8564  048F                     	;# 
  8565  0490                     	;# 
  8566  0491                     	;# 
  8567  0492                     	;# 
  8568  0492                     	;# 
  8569  0493                     	;# 
  8570  0494                     	;# 
  8571  0495                     	;# 
  8572  0495                     	;# 
  8573  0496                     	;# 
  8574  0497                     	;# 
  8575  0498                     	;# 
  8576  0499                     	;# 
  8577  049A                     	;# 
  8578  049B                     	;# 
  8579  049C                     	;# 
  8580  049D                     	;# 
  8581  050C                     	;# 
  8582  050C                     	;# 
  8583  050D                     	;# 
  8584  050E                     	;# 
  8585  050F                     	;# 
  8586  050F                     	;# 
  8587  0510                     	;# 
  8588  0511                     	;# 
  8589  0512                     	;# 
  8590  0512                     	;# 
  8591  0513                     	;# 
  8592  0514                     	;# 
  8593  0515                     	;# 
  8594  0515                     	;# 
  8595  0516                     	;# 
  8596  0517                     	;# 
  8597  0518                     	;# 
  8598  0519                     	;# 
  8599  051A                     	;# 
  8600  051B                     	;# 
  8601  051C                     	;# 
  8602  051D                     	;# 
  8603  058C                     	;# 
  8604  058C                     	;# 
  8605  058D                     	;# 
  8606  058E                     	;# 
  8607  058F                     	;# 
  8608  058F                     	;# 
  8609  0590                     	;# 
  8610  0591                     	;# 
  8611  0592                     	;# 
  8612  0593                     	;# 
  8613  060C                     	;# 
  8614  060D                     	;# 
  8615  060E                     	;# 
  8616  060F                     	;# 
  8617  0610                     	;# 
  8618  0611                     	;# 
  8619  0612                     	;# 
  8620  0613                     	;# 
  8621  0614                     	;# 
  8622  0616                     	;# 
  8623  0617                     	;# 
  8624  0618                     	;# 
  8625  0619                     	;# 
  8626  061A                     	;# 
  8627  061B                     	;# 
  8628  061C                     	;# 
  8629  061D                     	;# 
  8630  061E                     	;# 
  8631  068C                     	;# 
  8632  068D                     	;# 
  8633  068E                     	;# 
  8634  068F                     	;# 
  8635  0690                     	;# 
  8636  0691                     	;# 
  8637  0692                     	;# 
  8638  0693                     	;# 
  8639  0694                     	;# 
  8640  070C                     	;# 
  8641  070D                     	;# 
  8642  070E                     	;# 
  8643  070F                     	;# 
  8644  0710                     	;# 
  8645  0711                     	;# 
  8646  0712                     	;# 
  8647  0713                     	;# 
  8648  0714                     	;# 
  8649  0716                     	;# 
  8650  0717                     	;# 
  8651  0718                     	;# 
  8652  0719                     	;# 
  8653  071A                     	;# 
  8654  071B                     	;# 
  8655  071C                     	;# 
  8656  071D                     	;# 
  8657  071E                     	;# 
  8658  0796                     	;# 
  8659  0797                     	;# 
  8660  0798                     	;# 
  8661  0799                     	;# 
  8662  079A                     	;# 
  8663  079B                     	;# 
  8664  080C                     	;# 
  8665  080D                     	;# 
  8666  080E                     	;# 
  8667  080F                     	;# 
  8668  0810                     	;# 
  8669  0811                     	;# 
  8670  0812                     	;# 
  8671  0813                     	;# 
  8672  0814                     	;# 
  8673  081A                     	;# 
  8674  081B                     	;# 
  8675  081C                     	;# 
  8676  081D                     	;# 
  8677  081E                     	;# 
  8678  081F                     	;# 
  8679  088C                     	;# 
  8680  088D                     	;# 
  8681  088E                     	;# 
  8682  088F                     	;# 
  8683  0890                     	;# 
  8684  0891                     	;# 
  8685  0892                     	;# 
  8686  0893                     	;# 
  8687  0895                     	;# 
  8688  0896                     	;# 
  8689  0897                     	;# 
  8690  0898                     	;# 
  8691  0899                     	;# 
  8692  089A                     	;# 
  8693  089B                     	;# 
  8694  090C                     	;# 
  8695  090E                     	;# 
  8696  090F                     	;# 
  8697  091F                     	;# 
  8698  091F                     	;# 
  8699  098F                     	;# 
  8700  098F                     	;# 
  8701  0990                     	;# 
  8702  0991                     	;# 
  8703  0992                     	;# 
  8704  0993                     	;# 
  8705  0994                     	;# 
  8706  0995                     	;# 
  8707  0996                     	;# 
  8708  0997                     	;# 
  8709  0E0F                     	;# 
  8710  0E10                     	;# 
  8711  0E11                     	;# 
  8712  0E12                     	;# 
  8713  0E13                     	;# 
  8714  0E14                     	;# 
  8715  0E15                     	;# 
  8716  0E16                     	;# 
  8717  0E17                     	;# 
  8718  0E18                     	;# 
  8719  0E19                     	;# 
  8720  0E1A                     	;# 
  8721  0E1B                     	;# 
  8722  0E1C                     	;# 
  8723  0E1D                     	;# 
  8724  0E1E                     	;# 
  8725  0E1F                     	;# 
  8726  0E20                     	;# 
  8727  0E21                     	;# 
  8728  0E22                     	;# 
  8729  0E23                     	;# 
  8730  0E24                     	;# 
  8731  0E25                     	;# 
  8732  0E26                     	;# 
  8733  0E27                     	;# 
  8734  0E28                     	;# 
  8735  0E29                     	;# 
  8736  0E2A                     	;# 
  8737  0E2B                     	;# 
  8738  0E2C                     	;# 
  8739  0E2D                     	;# 
  8740  0E2E                     	;# 
  8741  0E2F                     	;# 
  8742  0E30                     	;# 
  8743  0E31                     	;# 
  8744  0E32                     	;# 
  8745  0E33                     	;# 
  8746  0E34                     	;# 
  8747  0E35                     	;# 
  8748  0E36                     	;# 
  8749  0E37                     	;# 
  8750  0E8F                     	;# 
  8751  0E90                     	;# 
  8752  0E91                     	;# 
  8753  0E92                     	;# 
  8754  0E93                     	;# 
  8755  0E94                     	;# 
  8756  0E95                     	;# 
  8757  0E96                     	;# 
  8758  0E97                     	;# 
  8759  0E9C                     	;# 
  8760  0E9D                     	;# 
  8761  0E9E                     	;# 
  8762  0EA1                     	;# 
  8763  0EA2                     	;# 
  8764  0EA3                     	;# 
  8765  0EA4                     	;# 
  8766  0EA5                     	;# 
  8767  0EA9                     	;# 
  8768  0EAA                     	;# 
  8769  0EAB                     	;# 
  8770  0EAC                     	;# 
  8771  0EB1                     	;# 
  8772  0EB2                     	;# 
  8773  0EB3                     	;# 
  8774  0EB8                     	;# 
  8775  0EB9                     	;# 
  8776  0EBA                     	;# 
  8777  0EBB                     	;# 
  8778  0EBC                     	;# 
  8779  0EBD                     	;# 
  8780  0EBE                     	;# 
  8781  0EC3                     	;# 
  8782  0EC5                     	;# 
  8783  0EC6                     	;# 
  8784  0EC7                     	;# 
  8785  0EC8                     	;# 
  8786  0EC9                     	;# 
  8787  0ECA                     	;# 
  8788  0ECB                     	;# 
  8789  0ECC                     	;# 
  8790  0F10                     	;# 
  8791  0F11                     	;# 
  8792  0F12                     	;# 
  8793  0F13                     	;# 
  8794  0F14                     	;# 
  8795  0F15                     	;# 
  8796  0F16                     	;# 
  8797  0F17                     	;# 
  8798  0F18                     	;# 
  8799  0F19                     	;# 
  8800  0F1A                     	;# 
  8801  0F1B                     	;# 
  8802  0F1C                     	;# 
  8803  0F1D                     	;# 
  8804  0F1E                     	;# 
  8805  0F1F                     	;# 
  8806  0F20                     	;# 
  8807  0F21                     	;# 
  8808  0F22                     	;# 
  8809  0F23                     	;# 
  8810  0F24                     	;# 
  8811  0F25                     	;# 
  8812  0F26                     	;# 
  8813  0F27                     	;# 
  8814  0F28                     	;# 
  8815  0F29                     	;# 
  8816  0F2A                     	;# 
  8817  0F2B                     	;# 
  8818  0F2C                     	;# 
  8819  0F2D                     	;# 
  8820  0F2E                     	;# 
  8821  0F2F                     	;# 
  8822  0F30                     	;# 
  8823  0F31                     	;# 
  8824  0F32                     	;# 
  8825  0F38                     	;# 
  8826  0F39                     	;# 
  8827  0F3A                     	;# 
  8828  0F3B                     	;# 
  8829  0F3C                     	;# 
  8830  0F3D                     	;# 
  8831  0F3E                     	;# 
  8832  0F3F                     	;# 
  8833  0F40                     	;# 
  8834  0F41                     	;# 
  8835  0F43                     	;# 
  8836  0F44                     	;# 
  8837  0F45                     	;# 
  8838  0F46                     	;# 
  8839  0F47                     	;# 
  8840  0F48                     	;# 
  8841  0F49                     	;# 
  8842  0F4A                     	;# 
  8843  0F4B                     	;# 
  8844  0F4C                     	;# 
  8845  0F4E                     	;# 
  8846  0F4F                     	;# 
  8847  0F50                     	;# 
  8848  0F51                     	;# 
  8849  0F52                     	;# 
  8850  0F53                     	;# 
  8851  0F54                     	;# 
  8852  0F55                     	;# 
  8853  0F56                     	;# 
  8854  0F57                     	;# 
  8855  0F59                     	;# 
  8856  0F5A                     	;# 
  8857  0F5B                     	;# 
  8858  0F5C                     	;# 
  8859  0F5D                     	;# 
  8860  0F61                     	;# 
  8861  0F62                     	;# 
  8862  0F64                     	;# 
  8863  0F65                     	;# 
  8864  0F66                     	;# 
  8865  0F67                     	;# 
  8866  0F68                     	;# 
  8867  0F69                     	;# 
  8868  0F6A                     	;# 
  8869  0F6B                     	;# 
  8870  0F6C                     	;# 
  8871  0F6D                     	;# 
  8872  0FE4                     	;# 
  8873  0FE5                     	;# 
  8874  0FE6                     	;# 
  8875  0FE7                     	;# 
  8876  0FE8                     	;# 
  8877  0FE9                     	;# 
  8878  0FEA                     	;# 
  8879  0FEB                     	;# 
  8880  0FED                     	;# 
  8881  0FEE                     	;# 
  8882  0FEF                     	;# 
  8883                           
  8884                           	psect	idataBANK0
  8885  1496                     __pidataBANK0:
  8886                           
  8887                           ;initializer for _alarmPWMStart
  8888  1496  34FF               	retlw	255
  8889  1497  34FF               	retlw	255
  8890  1498  34FF               	retlw	255
  8891                           
  8892                           ;initializer for _prevLumLevel
  8893  1499  34FF               	retlw	255
  8894  149A  34FF               	retlw	255
  8895                           
  8896                           ;initializer for _prevTemp
  8897  149B  34FF               	retlw	255
  8898  149C  34FF               	retlw	255
  8899                           
  8900                           	psect	stringtext1
  8901  180F                     __pstringtext1:
  8902  180F                     _dpowers:
  8903  180F  3401               	retlw	1
  8904  1810  3400               	retlw	0
  8905  1811  340A               	retlw	10
  8906  1812  3400               	retlw	0
  8907  1813  3464               	retlw	100
  8908  1814  3400               	retlw	0
  8909  1815  34E8               	retlw	232
  8910  1816  3403               	retlw	3
  8911  1817  3410               	retlw	16
  8912  1818  3427               	retlw	39
  8913  1819                     __end_of_dpowers:
  8914                           
  8915                           	psect	stringtext2
  8916  1819                     __pstringtext2:
  8917  1819                     _commands:
  8918  1819  3448               	retlw	low _cmd_rc
  8919  181A  3409               	retlw	high _cmd_rc
  8920  181B  34C0               	retlw	192
  8921  181C  34D4               	retlw	low _cmd_rtl
  8922  181D  3408               	retlw	high _cmd_rtl
  8923  181E  34C2               	retlw	194
  8924  181F  3467               	retlw	low _cmd_ra
  8925  1820  340A               	retlw	high _cmd_ra
  8926  1821  34C6               	retlw	198
  8927  1822                     __end_of_commands:
  8928                           
  8929                           	psect	nvBANK0
  8930  006E                     __pnvBANK0:
  8931  006E                     _timer3ReloadVal:
  8932  006E                     	ds	2
  8933                           
  8934                           	psect	nvBANK1
  8935  00D6                     __pnvBANK1:
  8936  00D6                     _INT_InterruptHandler:
  8937  00D6                     	ds	2
  8938  00D8                     _TMR5_InterruptHandler:
  8939  00D8                     	ds	2
  8940  00DA                     _timer5ReloadVal:
  8941  00DA                     	ds	2
  8942  00DC                     _TMR3_InterruptHandler:
  8943  00DC                     	ds	2
  8944  00DE                     _TMR1_InterruptHandler:
  8945  00DE                     	ds	2
  8946  00E0                     _timer1ReloadVal:
  8947  00E0                     	ds	2
  8948  00E2                     _eusartTxBufferRemaining:
  8949  00E2                     	ds	1
  8950                           
  8951                           	psect	nvBANK2
  8952  0133                     __pnvBANK2:
  8953  0133                     _EUSART_RxDefaultInterruptHandler:
  8954  0133                     	ds	2
  8955  0135                     _EUSART_TxDefaultInterruptHandler:
  8956  0135                     	ds	2
  8957  0013                     _TRISCbits	set	19
  8958  000E                     _PORTCbits	set	14
  8959  0016                     _LATAbits	set	22
  8960  000B                     _INTCONbits	set	11
  8961  0014                     _TRISD	set	20
  8962  0013                     _TRISC	set	19
  8963  0012                     _TRISB	set	18
  8964  0011                     _TRISA	set	17
  8965  0015                     _TRISE	set	21
  8966  0018                     _LATC	set	24
  8967  0017                     _LATB	set	23
  8968  0016                     _LATA	set	22
  8969  0019                     _LATD	set	25
  8970  001A                     _LATE	set	26
  8971  0094                     _ADCON1bits	set	148
  8972  008E                     _ADPREVL	set	142
  8973  008F                     _ADPREVH	set	143
  8974  0097                     _ADSTATbits	set	151
  8975  0090                     _ADACCL	set	144
  8976  0091                     _ADACCH	set	145
  8977  0095                     _ADCON2bits	set	149
  8978  009C                     _ADPRE	set	156
  8979  0096                     _ADCON3bits	set	150
  8980  008C                     _ADRESL	set	140
  8981  008D                     _ADRESH	set	141
  8982  0093                     _ADCON0bits	set	147
  8983  009D                     _ADACQ	set	157
  8984  0093                     _ADCON0	set	147
  8985  0098                     _ADCLK	set	152
  8986  0099                     _ADACT	set	153
  8987  009A                     _ADREF	set	154
  8988  0097                     _ADSTAT	set	151
  8989  0096                     _ADCON3	set	150
  8990  0095                     _ADCON2	set	149
  8991  0094                     _ADCON1	set	148
  8992  009B                     _ADCAP	set	155
  8993  009E                     _ADPCH	set	158
  8994  0119                     _RC1REG	set	281
  8995  011D                     _RC1STAbits	set	285
  8996  011A                     _TX1REG	set	282
  8997  011E                     _TX1STAbits	set	286
  8998  011C                     _SP1BRGH	set	284
  8999  011B                     _SP1BRGL	set	283
  9000  011E                     _TX1STA	set	286
  9001  011D                     _RC1STA	set	285
  9002  011F                     _BAUD1CON	set	287
  9003  0116                     _ADERRL	set	278
  9004  0117                     _ADERRH	set	279
  9005  0114                     _ADFLTRL	set	276
  9006  0115                     _ADFLTRH	set	277
  9007  010C                     _ADCNT	set	268
  9008  010D                     _ADRPT	set	269
  9009  0113                     _ADSTPTH	set	275
  9010  0112                     _ADSTPTL	set	274
  9011  0111                     _ADUTHH	set	273
  9012  0110                     _ADUTHL	set	272
  9013  010F                     _ADLTHH	set	271
  9014  010E                     _ADLTHL	set	270
  9015  018E                     _SSP1MSK	set	398
  9016  018D                     _SSP1ADD	set	397
  9017  018F                     _SSP1STAT	set	399
  9018  0191                     _SSP1CON2	set	401
  9019  0190                     _SSP1CON1bits	set	400
  9020  018C                     _SSP1BUF	set	396
  9021  018F                     _SSP1STATbits	set	399
  9022  0191                     _SSP1CON2bits	set	401
  9023  0190                     _SSP1CON1	set	400
  9024  021F                     _CCPTMRS1bits	set	543
  9025  021B                     _T5GCONbits	set	539
  9026  021A                     _T5CONbits	set	538
  9027  021A                     _T5CON	set	538
  9028  0218                     _TMR5L	set	536
  9029  0219                     _TMR5H	set	537
  9030  021D                     _T5CLK	set	541
  9031  021C                     _T5GATE	set	540
  9032  021B                     _T5GCON	set	539
  9033  0215                     _T3GCONbits	set	533
  9034  0214                     _T3CONbits	set	532
  9035  0214                     _T3CON	set	532
  9036  0212                     _TMR3L	set	530
  9037  0213                     _TMR3H	set	531
  9038  0217                     _T3CLK	set	535
  9039  0216                     _T3GATE	set	534
  9040  0215                     _T3GCON	set	533
  9041  020F                     _T1GCONbits	set	527
  9042  020E                     _T1CONbits	set	526
  9043  020E                     _T1CON	set	526
  9044  020C                     _TMR1L	set	524
  9045  020D                     _TMR1H	set	525
  9046  0211                     _T1CLK	set	529
  9047  0210                     _T1GATE	set	528
  9048  020F                     _T1GCON	set	527
  9049  028D                     _PR2	set	653
  9050  028C                     _TMR2	set	652
  9051  028E                     _T2CONbits	set	654
  9052  0291                     _T2RSTbits	set	657
  9053  028F                     _T2HLTbits	set	655
  9054  028E                     _T2CON	set	654
  9055  028C                     _T2TMR	set	652
  9056  028D                     _T2PR	set	653
  9057  0291                     _T2RST	set	657
  9058  028F                     _T2HLT	set	655
  9059  0290                     _T2CLKCON	set	656
  9060  038C                     _PWM6DCL	set	908
  9061  038D                     _PWM6DCH	set	909
  9062  038E                     _PWM6CON	set	910
  9063  1C77                     _PWM6EN	set	7287
  9064  0710                     _PIR4bits	set	1808
  9065  071A                     _PIE4bits	set	1818
  9066  070C                     _PIR0bits	set	1804
  9067  0716                     _PIE0bits	set	1814
  9068  0719                     _PIE3bits	set	1817
  9069  070F                     _PIR3bits	set	1807
  9070  079B                     _PMD5	set	1947
  9071  079A                     _PMD4	set	1946
  9072  0799                     _PMD3	set	1945
  9073  0798                     _PMD2	set	1944
  9074  0797                     _PMD1	set	1943
  9075  0796                     _PMD0	set	1942
  9076  081F                     _NVMCON2	set	2079
  9077  081C                     _NVMDATL	set	2076
  9078  081D                     _NVMDATH	set	2077
  9079  081E                     _NVMCON1bits	set	2078
  9080  081B                     _NVMADRH	set	2075
  9081  081A                     _NVMADRL	set	2074
  9082  0892                     _OSCTUNE	set	2194
  9083  0893                     _OSCFRQ	set	2195
  9084  0891                     _OSCEN	set	2193
  9085  088F                     _OSCCON3	set	2191
  9086  088D                     _OSCCON1	set	2189
  9087  0EC6                     _SSP1DATPPS	set	3782
  9088  0EC5                     _SSP1CLKPPS	set	3781
  9089  0ECB                     _RXPPS	set	3787
  9090  0E90                     _INTPPS	set	3728
  9091  0F26                     _RC6PPS	set	3878
  9092  0F16                     _RA6PPS	set	3862
  9093  0F24                     _RC4PPS	set	3876
  9094  0F23                     _RC3PPS	set	3875
  9095  0F67                     _SLRCONE	set	3943
  9096  0F5C                     _SLRCOND	set	3932
  9097  0F51                     _SLRCONC	set	3921
  9098  0F46                     _SLRCONB	set	3910
  9099  0F3B                     _SLRCONA	set	3899
  9100  0F5B                     _ODCOND	set	3931
  9101  0F50                     _ODCONC	set	3920
  9102  0F45                     _ODCONB	set	3909
  9103  0F3A                     _ODCONA	set	3898
  9104  0F66                     _ODCONE	set	3942
  9105  0F4F                     _WPUC	set	3919
  9106  0F39                     _WPUA	set	3897
  9107  0F44                     _WPUB	set	3908
  9108  0F65                     _WPUE	set	3941
  9109  0F5A                     _WPUD	set	3930
  9110  0F38                     _ANSELA	set	3896
  9111  0F64                     _ANSELE	set	3940
  9112  0F43                     _ANSELB	set	3907
  9113  0F4E                     _ANSELC	set	3918
  9114  0F59                     _ANSELD	set	3929
  9115  7A7C                     _WPUC4	set	31356
  9116  7A7B                     _WPUC3	set	31355
  9117                           
  9118                           	psect	stringtext3
  9119  1800                     __pstringtext3:
  9120  1800                     STR_1:
  9121  1800  3425               	retlw	37	;'%'
  9122  1801  3430               	retlw	48	;'0'
  9123  1802  3432               	retlw	50	;'2'
  9124  1803  3464               	retlw	100	;'d'
  9125  1804  343A               	retlw	58	;':'
  9126  1805  3425               	retlw	37	;'%'
  9127  1806  3430               	retlw	48	;'0'
  9128  1807  3432               	retlw	50	;'2'
  9129  1808  3464               	retlw	100	;'d'
  9130  1809  343A               	retlw	58	;':'
  9131  180A  3425               	retlw	37	;'%'
  9132  180B  3430               	retlw	48	;'0'
  9133  180C  3432               	retlw	50	;'2'
  9134  180D  3464               	retlw	100	;'d'
  9135  180E  3400               	retlw	0
  9136                           
  9137                           	psect	stringtext4
  9138  1822                     __pstringtext4:
  9139  1822                     STR_3:
  9140  1822  3425               	retlw	37	;'%'
  9141  1823  3430               	retlw	48	;'0'
  9142  1824  3432               	retlw	50	;'2'
  9143  1825  3464               	retlw	100	;'d'
  9144  1826  3420               	retlw	32	;' '
  9145  1827  3443               	retlw	67	;'C'
  9146  1828  3400               	retlw	0
  9147                           
  9148                           	psect	stringtext5
  9149  1829                     __pstringtext5:
  9150  1829                     STR_5:
  9151  1829  344C               	retlw	76	;'L'
  9152  182A  3420               	retlw	32	;' '
  9153  182B  3425               	retlw	37	;'%'
  9154  182C  3464               	retlw	100	;'d'
  9155  182D  3400               	retlw	0
  9156                           
  9157                           	psect	stringtext6
  9158  182E                     __pstringtext6:
  9159  182E                     STR_7:
  9160  182E  3443               	retlw	67	;'C'
  9161  182F  3454               	retlw	84	;'T'
  9162  1830  344C               	retlw	76	;'L'
  9163  1831  3400               	retlw	0
  9164                           
  9165                           	psect	stringtext7
  9166  0000                     __pstringtext7:
  9167  1822                     
  9168                           	psect	cinit
  9169  006C                     start_initialization:	
  9170                           ; #config settings
  9171                           
  9172  006C                     __initialization:
  9173                           
  9174                           ; Initialize objects allocated to BANK0
  9175  006C  3096               	movlw	low __pidataBANK0
  9176  006D  0084               	movwf	4
  9177  006E  3094               	movlw	(high __pidataBANK0)| (0+128)
  9178  006F  0085               	movwf	5
  9179  0070  3067               	movlw	low __pdataBANK0
  9180  0071  0086               	movwf	6
  9181  0072  3000               	movlw	high __pdataBANK0
  9182  0073  0087               	movwf	7
  9183  0074  3007               	movlw	7
  9184  0075  3194  2482  3180   	fcall	init_ram
  9185                           
  9186                           ; Clear objects allocated to BANK0
  9187  0078  304D               	movlw	low __pbssBANK0
  9188  0079  0084               	movwf	4
  9189  007A  3000               	movlw	high __pbssBANK0
  9190  007B  0085               	movwf	5
  9191  007C  301A               	movlw	26
  9192  007D  3194  247C  3180   	fcall	clear_ram0
  9193                           
  9194                           ; Clear objects allocated to BANK1
  9195  0080  30E3               	movlw	low __pbssBANK1
  9196  0081  0084               	movwf	4
  9197  0082  3000               	movlw	high __pbssBANK1
  9198  0083  0085               	movwf	5
  9199  0084  300D               	movlw	13
  9200  0085  3194  247C  3180   	fcall	clear_ram0
  9201                           
  9202                           ; Clear objects allocated to BANK2
  9203  0088  3020               	movlw	low __pbssBANK2
  9204  0089  0084               	movwf	4
  9205  008A  3001               	movlw	high __pbssBANK2
  9206  008B  0085               	movwf	5
  9207  008C  3013               	movlw	19
  9208  008D  3194  247C  3180   	fcall	clear_ram0
  9209  0090                     end_of_initialization:	
  9210                           ;End of C runtime variable initialization code
  9211                           
  9212  0090                     __end_of__initialization:
  9213  0090  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9214  0091  0020               	movlb	0
  9215  0092  3180  2894         	ljmp	_main	;jump to C main() function
  9216                           
  9217                           	psect	bssBANK0
  9218  004D                     __pbssBANK0:
  9219  004D                     _clkAlarm:
  9220  004D                     	ds	4
  9221  0051                     _lumAlarm:
  9222  0051                     	ds	3
  9223  0054                     _tempAlarm:
  9224  0054                     	ds	3
  9225  0057                     _t:
  9226  0057                     	ds	3
  9227  005A                     _modeFlag:
  9228  005A                     	ds	2
  9229  005C                     _editingClockAlarm:
  9230  005C                     	ds	2
  9231  005E                     _dimingLed:
  9232  005E                     	ds	2
  9233  0060                     _editingLumAlarm:
  9234  0060                     	ds	1
  9235  0061                     _editingTempAlarm:
  9236  0061                     	ds	1
  9237  0062                     _lumLevel:
  9238  0062                     	ds	1
  9239  0063                     _temp:
  9240  0063                     	ds	1
  9241  0064                     _S1_Value:
  9242  0064                     	ds	1
  9243  0065                     _ALAF:
  9244  0065                     	ds	1
  9245  0066                     _TALA:
  9246  0066                     	ds	1
  9247                           
  9248                           	psect	dataBANK0
  9249  0067                     __pdataBANK0:
  9250  0067                     _alarmPWMStart:
  9251  0067                     	ds	3
  9252  006A                     _prevLumLevel:
  9253  006A                     	ds	2
  9254  006C                     _prevTemp:
  9255  006C                     	ds	2
  9256                           
  9257                           	psect	bssBANK1
  9258  00E3                     __pbssBANK1:
  9259  00E3                     _i2c1_driver_i2cISR:
  9260  00E3                     	ds	2
  9261  00E5                     _i2c1_driver_busCollisionISR:
  9262  00E5                     	ds	2
  9263  00E7                     _eusartRxCount:
  9264  00E7                     	ds	1
  9265  00E8                     _eusartRxTail:
  9266  00E8                     	ds	1
  9267  00E9                     _eusartRxHead:
  9268  00E9                     	ds	1
  9269  00EA                     _eusartTxTail:
  9270  00EA                     	ds	1
  9271  00EB                     _eusartTxHead:
  9272  00EB                     	ds	1
  9273  00EC                     _PWM_on:
  9274  00EC                     	ds	1
  9275  00ED                     _idx_RingBuffer:
  9276  00ED                     	ds	1
  9277  00EE                     _PMON:
  9278  00EE                     	ds	1
  9279  00EF                     _NREG:
  9280  00EF                     	ds	1
  9281                           
  9282                           	psect	bssBANK2
  9283  0120                     __pbssBANK2:
  9284  0120                     _eusartRxBuffer:
  9285  0120                     	ds	8
  9286  0128                     _eusartTxBuffer:
  9287  0128                     	ds	8
  9288  0130                     menuLCD_ISR@F12906:
  9289  0130                     	ds	3
  9290                           
  9291                           	psect	inittext
  9292  1482                     init_ram:
  9293  1482  00FE               	movwf	btemp
  9294  1483                     initloop:
  9295  1483  0012               	moviw fsr0++
  9296  1484  001E               	movwi fsr1++
  9297  1485  0BFE               	decfsz	btemp,f
  9298  1486  2C83               	goto	initloop
  9299  1487  3400               	retlw	0
  9300                           
  9301                           	psect	clrtext
  9302  147C                     clear_ram0:	
  9303                           ;	Called with FSR0 containing the base address, and
  9304                           ;	WREG with the size to clear
  9305                           
  9306  147C  0064               	clrwdt	;clear the watchdog before getting into this loop
  9307  147D                     clrloop0:
  9308  147D  0180               	clrf	0	;clear RAM location pointed to by FSR
  9309  147E  3101               	addfsr 0,1
  9310  147F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9311  1480  2C7D               	goto	clrloop0	;have we reached the end yet?
  9312  1481  3400               	retlw	0	;all done for this memory range, return
  9313                           
  9314                           	psect	cstackBANK1
  9315  00A0                     __pcstackBANK1:
  9316  00A0                     ??_PMD_Initialize:
  9317  00A0                     ??_OSCILLATOR_Initialize:	
  9318                           ; 1 bytes @ 0x0
  9319                           
  9320  00A0                     ??_PWM6_Initialize:	
  9321                           ; 1 bytes @ 0x0
  9322                           
  9323  00A0                     ??_ADCC_Initialize:	
  9324                           ; 1 bytes @ 0x0
  9325                           
  9326  00A0                     ??_TMR2_Initialize:	
  9327                           ; 1 bytes @ 0x0
  9328                           
  9329  00A0                     ?_TMR1_SetInterruptHandler:	
  9330                           ; 1 bytes @ 0x0
  9331                           
  9332  00A0                     ?_TMR3_SetInterruptHandler:	
  9333                           ; 1 bytes @ 0x0
  9334                           
  9335  00A0                     ?_TMR5_SetInterruptHandler:	
  9336                           ; 1 bytes @ 0x0
  9337                           
  9338  00A0                     ??_EUSART_is_rx_ready:	
  9339                           ; 1 bytes @ 0x0
  9340                           
  9341  00A0                     ?_EUSART_SetRxInterruptHandler:	
  9342                           ; 1 bytes @ 0x0
  9343                           
  9344  00A0                     ?_EUSART_SetTxInterruptHandler:	
  9345                           ; 1 bytes @ 0x0
  9346                           
  9347  00A0                     ??_WriteI2C:	
  9348                           ; 1 bytes @ 0x0
  9349                           
  9350  00A0                     ??_PIN_MANAGER_Initialize:	
  9351                           ; 1 bytes @ 0x0
  9352                           
  9353  00A0                     ??_i2c1_driver_open:	
  9354                           ; 1 bytes @ 0x0
  9355                           
  9356  00A0                     ?_PWM6_LoadDutyValue:	
  9357                           ; 1 bytes @ 0x0
  9358                           
  9359  00A0                     ??_TMR2_Stop:	
  9360                           ; 1 bytes @ 0x0
  9361                           
  9362  00A0                     ??_TMR2_StopTimer:	
  9363                           ; 1 bytes @ 0x0
  9364                           
  9365  00A0                     ?_DATAEE_WriteByte:	
  9366                           ; 1 bytes @ 0x0
  9367                           
  9368  00A0                     ?_DATAEE_ReadByte:	
  9369                           ; 1 bytes @ 0x0
  9370                           
  9371  00A0                     ?_INT_SetInterruptHandler:	
  9372                           ; 1 bytes @ 0x0
  9373                           
  9374  00A0                     ??_PWM_Output_D4_Disable:	
  9375                           ; 1 bytes @ 0x0
  9376                           
  9377  00A0                     ??_editClock:	
  9378                           ; 1 bytes @ 0x0
  9379                           
  9380  00A0                     ??_editTemp:	
  9381                           ; 1 bytes @ 0x0
  9382                           
  9383  00A0                     ??_editLum:	
  9384                           ; 1 bytes @ 0x0
  9385                           
  9386  00A0                     ??_toggleAlarms:	
  9387                           ; 1 bytes @ 0x0
  9388                           
  9389  00A0                     ??_EUSART_Read:	
  9390                           ; 1 bytes @ 0x0
  9391                           
  9392  00A0                     ??_EUSART_Write:	
  9393                           ; 1 bytes @ 0x0
  9394                           
  9395  00A0                     ?___wmul:	
  9396                           ; 1 bytes @ 0x0
  9397                           
  9398  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  9399                           ; 2 bytes @ 0x0
  9400                           
  9401  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  9402                           ; 2 bytes @ 0x0
  9403                           
  9404  00A0                     TMR5_SetInterruptHandler@InterruptHandler:	
  9405                           ; 2 bytes @ 0x0
  9406                           
  9407  00A0                     PWM6_LoadDutyValue@dutyValue:	
  9408                           ; 2 bytes @ 0x0
  9409                           
  9410  00A0                     DATAEE_WriteByte@bAdd:	
  9411                           ; 2 bytes @ 0x0
  9412                           
  9413  00A0                     DATAEE_ReadByte@bAdd:	
  9414                           ; 2 bytes @ 0x0
  9415                           
  9416  00A0                     INT_SetInterruptHandler@InterruptHandler:	
  9417                           ; 2 bytes @ 0x0
  9418                           
  9419  00A0                     EUSART_SetTxInterruptHandler@interruptHandler:	
  9420                           ; 2 bytes @ 0x0
  9421                           
  9422  00A0                     EUSART_SetRxInterruptHandler@interruptHandler:	
  9423                           ; 2 bytes @ 0x0
  9424                           
  9425  00A0                     ___wmul@multiplier:	
  9426                           ; 2 bytes @ 0x0
  9427                           
  9428                           
  9429                           ; 2 bytes @ 0x0
  9430  00A0                     	ds	1
  9431  00A1                     WriteI2C@data_out:
  9432  00A1                     EUSART_Read@readValue:	
  9433                           ; 1 bytes @ 0x1
  9434                           
  9435  00A1                     EUSART_Write@txData:	
  9436                           ; 1 bytes @ 0x1
  9437                           
  9438                           
  9439                           ; 1 bytes @ 0x1
  9440  00A1                     	ds	1
  9441  00A2                     ??_TMR3_Initialize:
  9442  00A2                     ??_TMR5_Initialize:	
  9443                           ; 1 bytes @ 0x2
  9444                           
  9445  00A2                     ??_EXT_INT_Initialize:	
  9446                           ; 1 bytes @ 0x2
  9447                           
  9448  00A2                     ??_TMR1_Initialize:	
  9449                           ; 1 bytes @ 0x2
  9450                           
  9451  00A2                     ??_EUSART_Initialize:	
  9452                           ; 1 bytes @ 0x2
  9453                           
  9454  00A2                     ??_TMR1_SetInterruptHandler:	
  9455                           ; 1 bytes @ 0x2
  9456                           
  9457  00A2                     ??_TMR3_SetInterruptHandler:	
  9458                           ; 1 bytes @ 0x2
  9459                           
  9460  00A2                     ??_TMR5_SetInterruptHandler:	
  9461                           ; 1 bytes @ 0x2
  9462                           
  9463  00A2                     ??_putch:	
  9464                           ; 1 bytes @ 0x2
  9465                           
  9466  00A2                     ??_getch:	
  9467                           ; 1 bytes @ 0x2
  9468                           
  9469  00A2                     ??_EUSART_SetRxInterruptHandler:	
  9470                           ; 1 bytes @ 0x2
  9471                           
  9472  00A2                     ??_EUSART_SetTxInterruptHandler:	
  9473                           ; 1 bytes @ 0x2
  9474                           
  9475  00A2                     ??_PWM6_LoadDutyValue:	
  9476                           ; 1 bytes @ 0x2
  9477                           
  9478  00A2                     ??_DATAEE_ReadByte:	
  9479                           ; 1 bytes @ 0x2
  9480                           
  9481  00A2                     ??_INT_SetInterruptHandler:	
  9482                           ; 1 bytes @ 0x2
  9483                           
  9484  00A2                     ??_LCDsend:	
  9485                           ; 1 bytes @ 0x2
  9486                           
  9487  00A2                     ?_LCDsend2x4:	
  9488                           ; 1 bytes @ 0x2
  9489                           
  9490  00A2                     DATAEE_WriteByte@bData:	
  9491                           ; 1 bytes @ 0x2
  9492                           
  9493  00A2                     LCDsend2x4@mode:	
  9494                           ; 1 bytes @ 0x2
  9495                           
  9496  00A2                     putch@txData:	
  9497                           ; 1 bytes @ 0x2
  9498                           
  9499  00A2                     ___wmul@multiplicand:	
  9500                           ; 1 bytes @ 0x2
  9501                           
  9502                           
  9503                           ; 2 bytes @ 0x2
  9504  00A2                     	ds	1
  9505  00A3                     ??_SYSTEM_Initialize:
  9506  00A3                     ??_DATAEE_WriteByte:	
  9507                           ; 1 bytes @ 0x3
  9508                           
  9509  00A3                     ??_LCDsend2x4:	
  9510                           ; 1 bytes @ 0x3
  9511                           
  9512  00A3                     DATAEE_WriteByte@GIEBitValue:	
  9513                           ; 1 bytes @ 0x3
  9514                           
  9515  00A3                     LCDsend@c:	
  9516                           ; 1 bytes @ 0x3
  9517                           
  9518                           
  9519                           ; 1 bytes @ 0x3
  9520  00A3                     	ds	1
  9521  00A4                     ??___wmul:
  9522  00A4                     ___wmul@product:	
  9523                           ; 1 bytes @ 0x4
  9524                           
  9525                           
  9526                           ; 2 bytes @ 0x4
  9527  00A4                     	ds	1
  9528  00A5                     LCDsend2x4@c:
  9529                           
  9530                           ; 1 bytes @ 0x5
  9531  00A5                     	ds	1
  9532  00A6                     ?_cmd_rc:
  9533  00A6                     ?_cmd_rtl:	
  9534                           ; 1 bytes @ 0x6
  9535                           
  9536  00A6                     ?_cmd_ra:	
  9537                           ; 1 bytes @ 0x6
  9538                           
  9539  00A6                     LCDsend2x4@hc:	
  9540                           ; 1 bytes @ 0x6
  9541                           
  9542  00A6                     cmd_rc@12923:	
  9543                           ; 1 bytes @ 0x6
  9544                           
  9545  00A6                     cmd_rtl@12930:	
  9546                           ; 2 bytes @ 0x6
  9547                           
  9548  00A6                     cmd_ra@12937:	
  9549                           ; 2 bytes @ 0x6
  9550                           
  9551                           
  9552                           ; 2 bytes @ 0x6
  9553  00A6                     	ds	1
  9554  00A7                     LCDsend2x4@lc:
  9555                           
  9556                           ; 1 bytes @ 0x7
  9557  00A7                     	ds	1
  9558  00A8                     ??_LCDinit:
  9559  00A8                     cmd_rc@12924:	
  9560                           ; 1 bytes @ 0x8
  9561                           
  9562  00A8                     cmd_rtl@12931:	
  9563                           ; 1 bytes @ 0x8
  9564                           
  9565  00A8                     cmd_ra@12938:	
  9566                           ; 1 bytes @ 0x8
  9567                           
  9568                           
  9569                           ; 1 bytes @ 0x8
  9570  00A8                     	ds	1
  9571  00A9                     ??_cmd_rc:
  9572  00A9                     ??_cmd_rtl:	
  9573                           ; 1 bytes @ 0x9
  9574                           
  9575  00A9                     ??_cmd_ra:	
  9576                           ; 1 bytes @ 0x9
  9577                           
  9578                           
  9579                           ; 1 bytes @ 0x9
  9580  00A9                     	ds	1
  9581  00AA                     cmd_rtl@buff:
  9582  00AA                     cmd_rc@buff:	
  9583                           ; 5 bytes @ 0xA
  9584                           
  9585  00AA                     cmd_ra@buff:	
  9586                           ; 6 bytes @ 0xA
  9587                           
  9588                           
  9589                           ; 9 bytes @ 0xA
  9590  00AA                     	ds	5
  9591  00AF                     cmd_rtl@n:
  9592                           
  9593                           ; 2 bytes @ 0xF
  9594  00AF                     	ds	1
  9595  00B0                     cmd_rc@n:
  9596                           
  9597                           ; 2 bytes @ 0x10
  9598  00B0                     	ds	3
  9599  00B3                     cmd_ra@n:
  9600                           
  9601                           ; 2 bytes @ 0x13
  9602  00B3                     	ds	2
  9603  00B5                     ??_main:
  9604                           
  9605                           ; 1 bytes @ 0x15
  9606  00B5                     	ds	3
  9607  00B8                     main@buff:
  9608                           
  9609                           ; 20 bytes @ 0x18
  9610  00B8                     	ds	20
  9611  00CC                     main@checkSumAux:
  9612                           
  9613                           ; 1 bytes @ 0x2C
  9614  00CC                     	ds	1
  9615  00CD                     main@notInit:
  9616                           
  9617                           ; 1 bytes @ 0x2D
  9618  00CD                     	ds	1
  9619  00CE                     main@corrupted:
  9620                           
  9621                           ; 1 bytes @ 0x2E
  9622  00CE                     	ds	1
  9623  00CF                     main@i:
  9624                           
  9625                           ; 2 bytes @ 0x2F
  9626  00CF                     	ds	2
  9627  00D1                     main@c:
  9628                           
  9629                           ; 1 bytes @ 0x31
  9630  00D1                     	ds	1
  9631  00D2                     main@n:
  9632                           
  9633                           ; 2 bytes @ 0x32
  9634  00D2                     	ds	2
  9635  00D4                     main@i_2606:
  9636                           
  9637                           ; 2 bytes @ 0x34
  9638  00D4                     	ds	2
  9639                           
  9640                           	psect	cstackCOMMON
  9641  0070                     __pcstackCOMMON:
  9642  0070                     ?_isdigit:
  9643  0070                     ?_i2c1_driver_open:	
  9644                           ; 1 bit 
  9645                           
  9646  0070                     ?_PMD_Initialize:	
  9647                           ; 1 bit 
  9648                           
  9649  0070                     ?_OSCILLATOR_Initialize:	
  9650                           ; 1 bytes @ 0x0
  9651                           
  9652  0070                     ?_PWM6_Initialize:	
  9653                           ; 1 bytes @ 0x0
  9654                           
  9655  0070                     ?_ADCC_Initialize:	
  9656                           ; 1 bytes @ 0x0
  9657                           
  9658  0070                     ?_TMR3_Initialize:	
  9659                           ; 1 bytes @ 0x0
  9660                           
  9661  0070                     ?_TMR2_Initialize:	
  9662                           ; 1 bytes @ 0x0
  9663                           
  9664  0070                     ?_TMR5_Initialize:	
  9665                           ; 1 bytes @ 0x0
  9666                           
  9667  0070                     ?_EXT_INT_Initialize:	
  9668                           ; 1 bytes @ 0x0
  9669                           
  9670  0070                     ?_TMR1_Initialize:	
  9671                           ; 1 bytes @ 0x0
  9672                           
  9673  0070                     ?_EUSART_Initialize:	
  9674                           ; 1 bytes @ 0x0
  9675                           
  9676  0070                     ?_INT_ISR:	
  9677                           ; 1 bytes @ 0x0
  9678                           
  9679  0070                     ?_TMR5_ISR:	
  9680                           ; 1 bytes @ 0x0
  9681                           
  9682  0070                     ?_TMR3_ISR:	
  9683                           ; 1 bytes @ 0x0
  9684                           
  9685  0070                     ?_TMR1_ISR:	
  9686                           ; 1 bytes @ 0x0
  9687                           
  9688  0070                     ?_TMR1_DefaultInterruptHandler:	
  9689                           ; 1 bytes @ 0x0
  9690                           
  9691  0070                     ??_TMR1_DefaultInterruptHandler:	
  9692                           ; 1 bytes @ 0x0
  9693                           
  9694  0070                     ?_TMR3_DefaultInterruptHandler:	
  9695                           ; 1 bytes @ 0x0
  9696                           
  9697  0070                     ??_TMR3_DefaultInterruptHandler:	
  9698                           ; 1 bytes @ 0x0
  9699                           
  9700  0070                     ?_TMR5_DefaultInterruptHandler:	
  9701                           ; 1 bytes @ 0x0
  9702                           
  9703  0070                     ??_TMR5_DefaultInterruptHandler:	
  9704                           ; 1 bytes @ 0x0
  9705                           
  9706  0070                     ?_INT_CallBack:	
  9707                           ; 1 bytes @ 0x0
  9708                           
  9709  0070                     ?_putch:	
  9710                           ; 1 bytes @ 0x0
  9711                           
  9712  0070                     ?_getch:	
  9713                           ; 1 bytes @ 0x0
  9714                           
  9715  0070                     ?_EUSART_is_rx_ready:	
  9716                           ; 1 bytes @ 0x0
  9717                           
  9718  0070                     ?_EUSART_Receive_ISR:	
  9719                           ; 1 bytes @ 0x0
  9720                           
  9721  0070                     ??_EUSART_Receive_ISR:	
  9722                           ; 1 bytes @ 0x0
  9723                           
  9724  0070                     ?_EUSART_Transmit_ISR:	
  9725                           ; 1 bytes @ 0x0
  9726                           
  9727  0070                     ??_EUSART_Transmit_ISR:	
  9728                           ; 1 bytes @ 0x0
  9729                           
  9730  0070                     ??_isdigit:	
  9731                           ; 1 bytes @ 0x0
  9732                           
  9733  0070                     ?_ReadI2C:	
  9734                           ; 1 bytes @ 0x0
  9735                           
  9736  0070                     ??_ReadI2C:	
  9737                           ; 1 bytes @ 0x0
  9738                           
  9739  0070                     ?_WriteI2C:	
  9740                           ; 1 bytes @ 0x0
  9741                           
  9742  0070                     ?_PIN_MANAGER_Initialize:	
  9743                           ; 1 bytes @ 0x0
  9744                           
  9745  0070                     ?_SYSTEM_Initialize:	
  9746                           ; 1 bytes @ 0x0
  9747                           
  9748  0070                     ?_INTERRUPT_InterruptManager:	
  9749                           ; 1 bytes @ 0x0
  9750                           
  9751  0070                     ?_TMR1_WriteTimer:	
  9752                           ; 1 bytes @ 0x0
  9753                           
  9754  0070                     ?_TMR3_WriteTimer:	
  9755                           ; 1 bytes @ 0x0
  9756                           
  9757  0070                     ?_TMR5_WriteTimer:	
  9758                           ; 1 bytes @ 0x0
  9759                           
  9760  0070                     ?_TMR2_Start:	
  9761                           ; 1 bytes @ 0x0
  9762                           
  9763  0070                     ??_TMR2_Start:	
  9764                           ; 1 bytes @ 0x0
  9765                           
  9766  0070                     ?_TMR2_StartTimer:	
  9767                           ; 1 bytes @ 0x0
  9768                           
  9769  0070                     ??_TMR2_StartTimer:	
  9770                           ; 1 bytes @ 0x0
  9771                           
  9772  0070                     ?_TMR2_Stop:	
  9773                           ; 1 bytes @ 0x0
  9774                           
  9775  0070                     ?_TMR2_StopTimer:	
  9776                           ; 1 bytes @ 0x0
  9777                           
  9778  0070                     ?_INT_DefaultInterruptHandler:	
  9779                           ; 1 bytes @ 0x0
  9780                           
  9781  0070                     ??_INT_DefaultInterruptHandler:	
  9782                           ; 1 bytes @ 0x0
  9783                           
  9784  0070                     ?_tsttc:	
  9785                           ; 1 bytes @ 0x0
  9786                           
  9787  0070                     ?_LCDsend:	
  9788                           ; 1 bytes @ 0x0
  9789                           
  9790  0070                     ?_LCDinit:	
  9791                           ; 1 bytes @ 0x0
  9792                           
  9793  0070                     ?_LCDcmd:	
  9794                           ; 1 bytes @ 0x0
  9795                           
  9796  0070                     ?_LCDchar:	
  9797                           ; 1 bytes @ 0x0
  9798                           
  9799  0070                     ?_differenceBetweenTimePeriod:	
  9800                           ; 1 bytes @ 0x0
  9801                           
  9802  0070                     ?_PWM_Output_D4_Enable:	
  9803                           ; 1 bytes @ 0x0
  9804                           
  9805  0070                     ??_PWM_Output_D4_Enable:	
  9806                           ; 1 bytes @ 0x0
  9807                           
  9808  0070                     ?_PWM_Output_D4_Disable:	
  9809                           ; 1 bytes @ 0x0
  9810                           
  9811  0070                     ?_Clock_ISR:	
  9812                           ; 1 bytes @ 0x0
  9813                           
  9814  0070                     ?_menuLCD_ISR:	
  9815                           ; 1 bytes @ 0x0
  9816                           
  9817  0070                     ?_monitoring_ISR:	
  9818                           ; 1 bytes @ 0x0
  9819                           
  9820  0070                     ?_editClock:	
  9821                           ; 1 bytes @ 0x0
  9822                           
  9823  0070                     ?_editTemp:	
  9824                           ; 1 bytes @ 0x0
  9825                           
  9826  0070                     ?_editLum:	
  9827                           ; 1 bytes @ 0x0
  9828                           
  9829  0070                     ?_toggleAlarms:	
  9830                           ; 1 bytes @ 0x0
  9831                           
  9832  0070                     ?_S1_ISR:	
  9833                           ; 1 bytes @ 0x0
  9834                           
  9835  0070                     ??_S1_ISR:	
  9836                           ; 1 bytes @ 0x0
  9837                           
  9838  0070                     ?_main:	
  9839                           ; 1 bytes @ 0x0
  9840                           
  9841  0070                     ?_EUSART_Read:	
  9842                           ; 1 bytes @ 0x0
  9843                           
  9844  0070                     ?_EUSART_Write:	
  9845                           ; 1 bytes @ 0x0
  9846                           
  9847  0070                     ?i1_WriteI2C:	
  9848                           ; 1 bytes @ 0x0
  9849                           
  9850  0070                     ??i1_WriteI2C:	
  9851                           ; 1 bytes @ 0x0
  9852                           
  9853  0070                     ?i1_PWM6_LoadDutyValue:	
  9854                           ; 1 bytes @ 0x0
  9855                           
  9856  0070                     ?i1_TMR2_Stop:	
  9857                           ; 1 bytes @ 0x0
  9858                           
  9859  0070                     ??i1_TMR2_Stop:	
  9860                           ; 1 bytes @ 0x0
  9861                           
  9862  0070                     ?i1_TMR2_StopTimer:	
  9863                           ; 1 bytes @ 0x0
  9864                           
  9865  0070                     ??i1_TMR2_StopTimer:	
  9866                           ; 1 bytes @ 0x0
  9867                           
  9868  0070                     ?i1_PWM_Output_D4_Disable:	
  9869                           ; 1 bytes @ 0x0
  9870                           
  9871  0070                     ??i1_PWM_Output_D4_Disable:	
  9872                           ; 1 bytes @ 0x0
  9873                           
  9874  0070                     ?_ADCC_GetSingleConversion:	
  9875                           ; 1 bytes @ 0x0
  9876                           
  9877  0070                     ?___lwdiv:	
  9878                           ; 2 bytes @ 0x0
  9879                           
  9880  0070                     ?i1___wmul:	
  9881                           ; 2 bytes @ 0x0
  9882                           
  9883  0070                     _isdigit$3191:	
  9884                           ; 2 bytes @ 0x0
  9885                           
  9886  0070                     TMR1_WriteTimer@timerVal:	
  9887                           ; 1 bytes @ 0x0
  9888                           
  9889  0070                     TMR3_WriteTimer@timerVal:	
  9890                           ; 2 bytes @ 0x0
  9891                           
  9892  0070                     TMR5_WriteTimer@timerVal:	
  9893                           ; 2 bytes @ 0x0
  9894                           
  9895  0070                     ___lwdiv@divisor:	
  9896                           ; 2 bytes @ 0x0
  9897                           
  9898  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9899                           ; 2 bytes @ 0x0
  9900                           
  9901  0070                     i1___wmul@multiplier:	
  9902                           ; 2 bytes @ 0x0
  9903                           
  9904  0070                     differenceBetweenTimePeriod@start:	
  9905                           ; 2 bytes @ 0x0
  9906                           
  9907                           
  9908                           ; 3 bytes @ 0x0
  9909  0070                     	ds	1
  9910  0071                     ??_INT_ISR:
  9911  0071                     ??_INT_CallBack:	
  9912                           ; 1 bytes @ 0x1
  9913                           
  9914  0071                     isdigit@c:	
  9915                           ; 1 bytes @ 0x1
  9916                           
  9917  0071                     i1WriteI2C@data_out:	
  9918                           ; 1 bytes @ 0x1
  9919                           
  9920                           
  9921                           ; 1 bytes @ 0x1
  9922  0071                     	ds	1
  9923  0072                     ??_TMR1_WriteTimer:
  9924  0072                     ??_TMR3_WriteTimer:	
  9925                           ; 1 bytes @ 0x2
  9926                           
  9927  0072                     ??_TMR5_WriteTimer:	
  9928                           ; 1 bytes @ 0x2
  9929                           
  9930  0072                     ??_tsttc:	
  9931                           ; 1 bytes @ 0x2
  9932                           
  9933  0072                     ??i1_PWM6_LoadDutyValue:	
  9934                           ; 1 bytes @ 0x2
  9935                           
  9936  0072                     ?i1_LCDsend2x4:	
  9937                           ; 1 bytes @ 0x2
  9938                           
  9939  0072                     i1LCDsend2x4@mode:	
  9940                           ; 1 bytes @ 0x2
  9941                           
  9942  0072                     ___lwdiv@dividend:	
  9943                           ; 1 bytes @ 0x2
  9944                           
  9945  0072                     i1___wmul@multiplicand:	
  9946                           ; 2 bytes @ 0x2
  9947                           
  9948                           
  9949                           ; 2 bytes @ 0x2
  9950  0072                     	ds	1
  9951  0073                     ??_ADCC_GetSingleConversion:
  9952  0073                     ??i1_LCDsend2x4:	
  9953                           ; 1 bytes @ 0x3
  9954                           
  9955  0073                     ADCC_GetSingleConversion@channel:	
  9956                           ; 1 bytes @ 0x3
  9957                           
  9958  0073                     tsttc@value:	
  9959                           ; 1 bytes @ 0x3
  9960                           
  9961  0073                     differenceBetweenTimePeriod@stop:	
  9962                           ; 1 bytes @ 0x3
  9963                           
  9964                           
  9965                           ; 3 bytes @ 0x3
  9966  0073                     	ds	1
  9967  0074                     ??___lwdiv:
  9968  0074                     ??i1___wmul:	
  9969                           ; 1 bytes @ 0x4
  9970                           
  9971  0074                     i1___wmul@product:	
  9972                           ; 1 bytes @ 0x4
  9973                           
  9974                           
  9975                           ; 2 bytes @ 0x4
  9976  0074                     	ds	1
  9977  0075                     i1LCDsend2x4@c:
  9978  0075                     ___lwdiv@quotient:	
  9979                           ; 1 bytes @ 0x5
  9980                           
  9981                           
  9982                           ; 2 bytes @ 0x5
  9983  0075                     	ds	1
  9984  0076                     ?i1_DATAEE_WriteByte:
  9985  0076                     differenceBetweenTimePeriod@diff:	
  9986                           ; 1 bytes @ 0x6
  9987                           
  9988  0076                     i1LCDsend2x4@hc:	
  9989                           ; 1 bytes @ 0x6
  9990                           
  9991  0076                     i1DATAEE_WriteByte@bAdd:	
  9992                           ; 1 bytes @ 0x6
  9993                           
  9994                           
  9995                           ; 2 bytes @ 0x6
  9996  0076                     	ds	1
  9997  0077                     ??_differenceBetweenTimePeriod:
  9998  0077                     ___lwdiv@counter:	
  9999                           ; 1 bytes @ 0x7
 10000                           
 10001  0077                     i1LCDsend2x4@lc:	
 10002                           ; 1 bytes @ 0x7
 10003                           
 10004                           
 10005                           ; 1 bytes @ 0x7
 10006  0077                     	ds	1
 10007  0078                     ??_LCDcmd:
 10008  0078                     ??_LCDchar:	
 10009                           ; 1 bytes @ 0x8
 10010                           
 10011  0078                     ?___lwmod:	
 10012                           ; 1 bytes @ 0x8
 10013                           
 10014  0078                     LCDcmd@c:	
 10015                           ; 2 bytes @ 0x8
 10016                           
 10017  0078                     LCDchar@c:	
 10018                           ; 1 bytes @ 0x8
 10019                           
 10020  0078                     i1DATAEE_WriteByte@bData:	
 10021                           ; 1 bytes @ 0x8
 10022                           
 10023  0078                     ___lwmod@divisor:	
 10024                           ; 1 bytes @ 0x8
 10025                           
 10026                           
 10027                           ; 2 bytes @ 0x8
 10028  0078                     	ds	1
 10029  0079                     ?_LCDstr:
 10030  0079                     ??i1_DATAEE_WriteByte:	
 10031                           ; 1 bytes @ 0x9
 10032                           
 10033  0079                     i1DATAEE_WriteByte@GIEBitValue:	
 10034                           ; 1 bytes @ 0x9
 10035                           
 10036  0079                     LCDstr@p:	
 10037                           ; 1 bytes @ 0x9
 10038                           
 10039                           
 10040                           ; 2 bytes @ 0x9
 10041  0079                     	ds	1
 10042  007A                     ??_Clock_ISR:
 10043  007A                     ??_monitoring_ISR:	
 10044                           ; 1 bytes @ 0xA
 10045                           
 10046  007A                     ___lwmod@dividend:	
 10047                           ; 1 bytes @ 0xA
 10048                           
 10049                           
 10050                           ; 2 bytes @ 0xA
 10051  007A                     	ds	1
 10052  007B                     ??_TMR1_ISR:
 10053  007B                     ??_LCDstr:	
 10054                           ; 1 bytes @ 0xB
 10055                           
 10056                           
 10057                           ; 1 bytes @ 0xB
 10058  007B                     	ds	1
 10059  007C                     ??___lwmod:
 10060                           
 10061                           ; 1 bytes @ 0xC
 10062  007C                     	ds	1
 10063  007D                     ??_TMR5_ISR:
 10064  007D                     ___lwmod@counter:	
 10065                           ; 1 bytes @ 0xD
 10066                           
 10067                           
 10068                           ; 1 bytes @ 0xD
 10069  007D                     	ds	1
 10070  007E                     ??_TMR3_ISR:
 10071  007E                     ??_INTERRUPT_InterruptManager:	
 10072                           ; 1 bytes @ 0xE
 10073                           
 10074                           
 10075                           	psect	cstackBANK0
 10076  0020                     __pcstackBANK0:	
 10077                           ; 1 bytes @ 0xE
 10078                           
 10079  0020                     ?_sprintf:
 10080  0020                     LCDstr@c:	
 10081                           ; 2 bytes @ 0x0
 10082                           
 10083  0020                     sprintf@f:	
 10084                           ; 1 bytes @ 0x0
 10085                           
 10086                           
 10087                           ; 2 bytes @ 0x0
 10088  0020                     	ds	8
 10089  0028                     ??_sprintf:
 10090                           
 10091                           ; 1 bytes @ 0x8
 10092  0028                     	ds	4
 10093  002C                     sprintf@ap:
 10094                           
 10095                           ; 1 bytes @ 0xC
 10096  002C                     	ds	1
 10097  002D                     sprintf@prec:
 10098                           
 10099                           ; 1 bytes @ 0xD
 10100  002D                     	ds	1
 10101  002E                     sprintf@val:
 10102                           
 10103                           ; 2 bytes @ 0xE
 10104  002E                     	ds	2
 10105  0030                     sprintf@flag:
 10106                           
 10107                           ; 1 bytes @ 0x10
 10108  0030                     	ds	1
 10109  0031                     sprintf@width:
 10110                           
 10111                           ; 2 bytes @ 0x11
 10112  0031                     	ds	2
 10113  0033                     sprintf@c:
 10114                           
 10115                           ; 1 bytes @ 0x13
 10116  0033                     	ds	1
 10117  0034                     sprintf@sp:
 10118                           
 10119                           ; 1 bytes @ 0x14
 10120  0034                     	ds	1
 10121  0035                     ??_menuLCD_ISR:
 10122                           
 10123                           ; 1 bytes @ 0x15
 10124  0035                     	ds	6
 10125  003B                     menuLCD_ISR@str:
 10126                           
 10127                           ; 8 bytes @ 0x1B
 10128  003B                     	ds	8
 10129  0043                     menuLCD_ISR@tt:
 10130                           
 10131                           ; 4 bytes @ 0x23
 10132  0043                     	ds	4
 10133  0047                     menuLCD_ISR@l:
 10134                           
 10135                           ; 3 bytes @ 0x27
 10136  0047                     	ds	3
 10137  004A                     menuLCD_ISR@diff:
 10138                           
 10139                           ; 3 bytes @ 0x2A
 10140  004A                     	ds	3
 10141                           
 10142                           	psect	maintext
 10143  0094                     __pmaintext:	
 10144 ;;
 10145 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
 10146 ;;
 10147 ;; *************** function _main *****************
 10148 ;; Defined at:
 10149 ;;		line 749 in file "main.c"
 10150 ;; Parameters:    Size  Location     Type
 10151 ;;		None
 10152 ;; Auto vars:     Size  Location     Type
 10153 ;;  i               2   47[BANK1 ] int 
 10154 ;;  buff           20   24[BANK1 ] unsigned char [20]
 10155 ;;  i               2   52[BANK1 ] int 
 10156 ;;  n               2   50[BANK1 ] int 
 10157 ;;  c               1   49[BANK1 ] unsigned char 
 10158 ;;  corrupted       1   46[BANK1 ] unsigned char 
 10159 ;;  notInit         1   45[BANK1 ] unsigned char 
 10160 ;;  checkSumAux     1   44[BANK1 ] unsigned char 
 10161 ;; Return value:  Size  Location     Type
 10162 ;;                  1    wreg      void 
 10163 ;; Registers used:
 10164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10165 ;; Tracked objects:
 10166 ;;		On entry : B1F/0
 10167 ;;		On exit  : 0/0
 10168 ;;		Unchanged: 0/0
 10169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10171 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
 10172 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10173 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
 10174 ;;Total ram usage:       33 bytes
 10175 ;; Hardware stack levels required when called:   10
 10176 ;; This function calls:
 10177 ;;		_DATAEE_ReadByte
 10178 ;;		_DATAEE_WriteByte
 10179 ;;		_EUSART_is_rx_ready
 10180 ;;		_INT_SetInterruptHandler
 10181 ;;		_LCDinit
 10182 ;;		_PWM6_LoadDutyValue
 10183 ;;		_PWM_Output_D4_Disable
 10184 ;;		_SYSTEM_Initialize
 10185 ;;		_TMR1_SetInterruptHandler
 10186 ;;		_TMR2_StopTimer
 10187 ;;		_TMR3_SetInterruptHandler
 10188 ;;		_TMR5_SetInterruptHandler
 10189 ;;		___wmul
 10190 ;;		_cmd_ra
 10191 ;;		_cmd_rc
 10192 ;;		_cmd_rtl
 10193 ;;		_editClock
 10194 ;;		_editLum
 10195 ;;		_editTemp
 10196 ;;		_getch
 10197 ;;		_i2c1_driver_open
 10198 ;;		_toggleAlarms
 10199 ;; This function is called by:
 10200 ;;		Startup code after reset
 10201 ;; This function uses a non-reentrant model
 10202 ;;
 10203                           
 10204                           
 10205                           ;psect for function _main
 10206  0094                     _main:
 10207  0094                     l5731:	
 10208                           ;incstack = 0
 10209                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10210                           
 10211                           
 10212                           ;main.c: 752: SYSTEM_Initialize();
 10213  0094  3196  26F0  3180   	fcall	_SYSTEM_Initialize
 10214                           
 10215                           ;main.c: 754: PWM6_LoadDutyValue(0);
 10216  0097  3000               	movlw	0
 10217  0098  0021               	movlb	1	; select bank1
 10218  0099  00A0               	movwf	PWM6_LoadDutyValue@dutyValue^(0+128)
 10219  009A  00A1               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128)
 10220  009B  3195  25C7  3180   	fcall	_PWM6_LoadDutyValue
 10221  009E                     l5733:
 10222                           
 10223                           ;main.c: 755: TMR2_StopTimer();
 10224  009E  3194  2456  3180   	fcall	_TMR2_StopTimer
 10225  00A1                     l5735:
 10226                           
 10227                           ;main.c: 756: PWM_Output_D4_Disable();
 10228  00A1  3194  2448  3180   	fcall	_PWM_Output_D4_Disable
 10229                           
 10230                           ;main.c: 758: TMR1_SetInterruptHandler(Clock_ISR);
 10231  00A4  30F5               	movlw	low _Clock_ISR
 10232  00A5  0021               	movlb	1	; select bank1
 10233  00A6  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 10234  00A7  3006               	movlw	high _Clock_ISR
 10235  00A8  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10236  00A9  3194  246A  3180   	fcall	_TMR1_SetInterruptHandler
 10237                           
 10238                           ;main.c: 760: TMR3_SetInterruptHandler(menuLCD_ISR);
 10239  00AC  302D               	movlw	low _menuLCD_ISR
 10240  00AD  0021               	movlb	1	; select bank1
 10241  00AE  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 10242  00AF  3003               	movlw	high _menuLCD_ISR
 10243  00B0  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10244  00B1  3194  2470  3180   	fcall	_TMR3_SetInterruptHandler
 10245                           
 10246                           ;main.c: 762: TMR5_SetInterruptHandler(monitoring_ISR);
 10247  00B4  30E2               	movlw	low _monitoring_ISR
 10248  00B5  0021               	movlb	1	; select bank1
 10249  00B6  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
 10250  00B7  300E               	movlw	high _monitoring_ISR
 10251  00B8  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10252  00B9  3194  2476  3180   	fcall	_TMR5_SetInterruptHandler
 10253                           
 10254                           ;main.c: 764: INT_SetInterruptHandler(S1_ISR);
 10255  00BC  3018               	movlw	low _S1_ISR
 10256  00BD  0021               	movlb	1	; select bank1
 10257  00BE  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 10258  00BF  300B               	movlw	high _S1_ISR
 10259  00C0  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10260  00C1  3194  2464  3180   	fcall	_INT_SetInterruptHandler
 10261  00C4                     l5737:
 10262                           
 10263                           ;main.c: 766: uint8_t checkSumAux = 0;
 10264  00C4  0021               	movlb	1	; select bank1
 10265  00C5  01CC               	clrf	main@checkSumAux^(0+128)
 10266  00C6                     l5739:
 10267                           
 10268                           ;main.c: 767: bool notInit = 1;
 10269  00C6  01CD               	clrf	main@notInit^(0+128)
 10270  00C7  0ACD               	incf	main@notInit^(0+128),f
 10271  00C8                     l5741:
 10272                           
 10273                           ;main.c: 768: bool corrupted = 0;
 10274  00C8  01CE               	clrf	main@corrupted^(0+128)
 10275  00C9                     l5743:
 10276                           
 10277                           ;main.c: 769: if(DATAEE_ReadByte(0x7000) == 'S'){
 10278  00C9  3000               	movlw	0
 10279  00CA  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10280  00CB  3070               	movlw	112
 10281  00CC  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10282  00CD  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10283  00D0  3A53               	xorlw	83
 10284  00D1  1D03               	skipz
 10285  00D2  28D4               	goto	u5651
 10286  00D3  28D5               	goto	u5650
 10287  00D4                     u5651:
 10288  00D4  2914               	goto	l5763
 10289  00D5                     u5650:
 10290  00D5                     l5745:
 10291                           
 10292                           ;main.c: 770: notInit = 0;
 10293  00D5  0021               	movlb	1	; select bank1
 10294  00D6  01CD               	clrf	main@notInit^(0+128)
 10295  00D7                     l5747:
 10296                           
 10297                           ;main.c: 771: for(int i = 1; i < 13; i++){
 10298  00D7  3001               	movlw	1
 10299  00D8  00CF               	movwf	main@i^(0+128)
 10300  00D9  3000               	movlw	0
 10301  00DA  00D0               	movwf	(main@i^(0+128)+1)
 10302  00DB                     l5753:
 10303                           
 10304                           ;main.c: 772: checkSumAux += DATAEE_ReadByte(0x7000 + (i*8));
 10305  00DB  0021               	movlb	1	; select bank1
 10306  00DC  0850               	movf	(main@i+1)^(0+128),w
 10307  00DD  00B6               	movwf	(??_main^(0+128)+1)
 10308  00DE  084F               	movf	main@i^(0+128),w
 10309  00DF  00B5               	movwf	??_main^(0+128)
 10310  00E0  35B5               	lslf	??_main^(0+128),f
 10311  00E1  0DB6               	rlf	(??_main^(0+128)+1),f
 10312  00E2  35B5               	lslf	??_main^(0+128),f
 10313  00E3  0DB6               	rlf	(??_main^(0+128)+1),f
 10314  00E4  35B5               	lslf	??_main^(0+128),f
 10315  00E5  0DB6               	rlf	(??_main^(0+128)+1),f
 10316  00E6  0835               	movf	??_main^(0+128),w
 10317  00E7  3E00               	addlw	0
 10318  00E8  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10319  00E9  3070               	movlw	112
 10320  00EA  3D36               	addwfc	(??_main+1)^(0+128),w
 10321  00EB  00A1               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+128)
 10322  00EC  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10323  00EF  0021               	movlb	1	; select bank1
 10324  00F0  00B7               	movwf	(??_main+2)^(0+128)
 10325  00F1  0837               	movf	(??_main+2)^(0+128),w
 10326  00F2  07CC               	addwf	main@checkSumAux^(0+128),f
 10327  00F3                     l5755:
 10328  00F3  3001               	movlw	1
 10329  00F4  07CF               	addwf	main@i^(0+128),f
 10330  00F5  3000               	movlw	0
 10331  00F6  3DD0               	addwfc	(main@i+1)^(0+128),f
 10332  00F7                     l5757:
 10333  00F7  0850               	movf	(main@i+1)^(0+128),w
 10334  00F8  3A80               	xorlw	128
 10335  00F9  00B5               	movwf	??_main^(0+128)
 10336  00FA  3080               	movlw	128
 10337  00FB  0235               	subwf	??_main^(0+128),w
 10338  00FC  1D03               	skipz
 10339  00FD  2900               	goto	u5665
 10340  00FE  300D               	movlw	13
 10341  00FF  024F               	subwf	main@i^(0+128),w
 10342  0100                     u5665:
 10343  0100  1C03               	skipc
 10344  0101  2903               	goto	u5661
 10345  0102  2904               	goto	u5660
 10346  0103                     u5661:
 10347  0103  28DB               	goto	l5753
 10348  0104                     u5660:
 10349  0104                     l5759:
 10350                           
 10351                           ;main.c: 773: };main.c: 774: if(checkSumAux != DATAEE_ReadByte(0x7000 + (13*8))){
 10352  0104  3068               	movlw	104
 10353  0105  0021               	movlb	1	; select bank1
 10354  0106  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10355  0107  3070               	movlw	112
 10356  0108  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10357  0109  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10358  010C  0021               	movlb	1	; select bank1
 10359  010D  064C               	xorwf	main@checkSumAux^(0+128),w
 10360  010E  1903               	skipnz
 10361  010F  2911               	goto	u5671
 10362  0110  2912               	goto	u5670
 10363  0111                     u5671:
 10364  0111  2914               	goto	l5763
 10365  0112                     u5670:
 10366  0112                     l5761:
 10367                           
 10368                           ;main.c: 775: corrupted = 1;
 10369  0112  01CE               	clrf	main@corrupted^(0+128)
 10370  0113  0ACE               	incf	main@corrupted^(0+128),f
 10371  0114                     l5763:
 10372                           
 10373                           ;main.c: 776: };main.c: 777: };main.c: 779: if(notInit || corrupted){
 10374  0114  0021               	movlb	1	; select bank1
 10375  0115  084D               	movf	main@notInit^(0+128),w
 10376  0116  1D03               	btfss	3,2
 10377  0117  2919               	goto	u5681
 10378  0118  291A               	goto	u5680
 10379  0119                     u5681:
 10380  0119  291F               	goto	l5767
 10381  011A                     u5680:
 10382  011A                     l5765:
 10383  011A  084E               	movf	main@corrupted^(0+128),w
 10384  011B  1903               	btfsc	3,2
 10385  011C  291E               	goto	u5691
 10386  011D  291F               	goto	u5690
 10387  011E                     u5691:
 10388  011E  29B7               	goto	l5769
 10389  011F                     u5690:
 10390  011F                     l5767:
 10391                           
 10392                           ;main.c: 780: DATAEE_WriteByte( 0x7000 + (0 * 8), 'S');
 10393  011F  3000               	movlw	0
 10394  0120  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10395  0121  3070               	movlw	112
 10396  0122  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10397  0123  3053               	movlw	83
 10398  0124  00B5               	movwf	??_main^(0+128)
 10399  0125  0835               	movf	??_main^(0+128),w
 10400  0126  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
 10401  0127  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10402                           
 10403                           ;main.c: 781: DATAEE_WriteByte( 0x7000 + (1 * 8), 25);
 10404  012A  3008               	movlw	8
 10405  012B  0021               	movlb	1	; select bank1
 10406  012C  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10407  012D  3070               	movlw	112
 10408  012E  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10409  012F  3019               	movlw	25
 10410  0130  00B5               	movwf	??_main^(0+128)
 10411  0131  0835               	movf	??_main^(0+128),w
 10412  0132  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
 10413  0133  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10414                           
 10415                           ;main.c: 782: DATAEE_WriteByte( 0x7000 + (2 * 8), 3);
 10416  0136  3010               	movlw	16
 10417  0137  0021               	movlb	1	; select bank1
 10418  0138  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10419  0139  3070               	movlw	112
 10420  013A  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10421  013B  3003               	movlw	3
 10422  013C  00B5               	movwf	??_main^(0+128)
 10423  013D  0835               	movf	??_main^(0+128),w
 10424  013E  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
 10425  013F  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10426                           
 10427                           ;main.c: 783: DATAEE_WriteByte( 0x7000 + (3 * 8), 5);
 10428  0142  3018               	movlw	24
 10429  0143  0021               	movlb	1	; select bank1
 10430  0144  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10431  0145  3070               	movlw	112
 10432  0146  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10433  0147  3005               	movlw	5
 10434  0148  00B5               	movwf	??_main^(0+128)
 10435  0149  0835               	movf	??_main^(0+128),w
 10436  014A  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
 10437  014B  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10438                           
 10439                           ;main.c: 784: DATAEE_WriteByte( 0x7000 + (4 * 8), 12);
 10440  014E  3020               	movlw	32
 10441  014F  0021               	movlb	1	; select bank1
 10442  0150  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10443  0151  3070               	movlw	112
 10444  0152  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10445  0153  300C               	movlw	12
 10446  0154  00B5               	movwf	??_main^(0+128)
 10447  0155  0835               	movf	??_main^(0+128),w
 10448  0156  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
 10449  0157  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10450                           
 10451                           ;main.c: 785: DATAEE_WriteByte( 0x7000 + (5 * 8), 0);
 10452  015A  3028               	movlw	40
 10453  015B  0021               	movlb	1	; select bank1
 10454  015C  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10455  015D  3070               	movlw	112
 10456  015E  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10457  015F  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
 10458  0160  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10459                           
 10460                           ;main.c: 786: DATAEE_WriteByte( 0x7000 + (6 * 8), 0);
 10461  0163  3030               	movlw	48
 10462  0164  0021               	movlb	1	; select bank1
 10463  0165  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10464  0166  3070               	movlw	112
 10465  0167  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10466  0168  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
 10467  0169  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10468                           
 10469                           ;main.c: 787: DATAEE_WriteByte( 0x7000 + (7 * 8), 28);
 10470  016C  3038               	movlw	56
 10471  016D  0021               	movlb	1	; select bank1
 10472  016E  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10473  016F  3070               	movlw	112
 10474  0170  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10475  0171  301C               	movlw	28
 10476  0172  00B5               	movwf	??_main^(0+128)
 10477  0173  0835               	movf	??_main^(0+128),w
 10478  0174  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
 10479  0175  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10480                           
 10481                           ;main.c: 788: DATAEE_WriteByte( 0x7000 + (8 * 8), 4);
 10482  0178  3040               	movlw	64
 10483  0179  0021               	movlb	1	; select bank1
 10484  017A  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10485  017B  3070               	movlw	112
 10486  017C  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10487  017D  3004               	movlw	4
 10488  017E  00B5               	movwf	??_main^(0+128)
 10489  017F  0835               	movf	??_main^(0+128),w
 10490  0180  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
 10491  0181  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10492                           
 10493                           ;main.c: 789: DATAEE_WriteByte( 0x7000 + (9 * 8), 'a');
 10494  0184  3048               	movlw	72
 10495  0185  0021               	movlb	1	; select bank1
 10496  0186  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10497  0187  3070               	movlw	112
 10498  0188  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10499  0189  3061               	movlw	97
 10500  018A  00B5               	movwf	??_main^(0+128)
 10501  018B  0835               	movf	??_main^(0+128),w
 10502  018C  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
 10503  018D  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10504                           
 10505                           ;main.c: 790: DATAEE_WriteByte( 0x7000 + (10 * 8), 0);
 10506  0190  3050               	movlw	80
 10507  0191  0021               	movlb	1	; select bank1
 10508  0192  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10509  0193  3070               	movlw	112
 10510  0194  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10511  0195  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
 10512  0196  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10513                           
 10514                           ;main.c: 791: DATAEE_WriteByte( 0x7000 + (11 * 8), 0);
 10515  0199  3058               	movlw	88
 10516  019A  0021               	movlb	1	; select bank1
 10517  019B  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10518  019C  3070               	movlw	112
 10519  019D  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10520  019E  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
 10521  019F  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10522                           
 10523                           ;main.c: 792: DATAEE_WriteByte( 0x7000 + (12 * 8), 0);
 10524  01A2  3060               	movlw	96
 10525  01A3  0021               	movlb	1	; select bank1
 10526  01A4  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10527  01A5  3070               	movlw	112
 10528  01A6  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10529  01A7  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
 10530  01A8  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10531                           
 10532                           ;main.c: 793: DATAEE_WriteByte( 0x7000 + (13 * 8), 174);
 10533  01AB  3068               	movlw	104
 10534  01AC  0021               	movlb	1	; select bank1
 10535  01AD  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
 10536  01AE  3070               	movlw	112
 10537  01AF  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
 10538  01B0  30AE               	movlw	174
 10539  01B1  00B5               	movwf	??_main^(0+128)
 10540  01B2  0835               	movf	??_main^(0+128),w
 10541  01B3  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
 10542  01B4  3197  2735  3180   	fcall	_DATAEE_WriteByte
 10543  01B7                     l5769:
 10544                           
 10545                           ;main.c: 794: };main.c: 796: NREG = DATAEE_ReadByte(0x7000 + (1*8));
 10546  01B7  3008               	movlw	8
 10547  01B8  0021               	movlb	1	; select bank1
 10548  01B9  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10549  01BA  3070               	movlw	112
 10550  01BB  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10551  01BC  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10552  01BF  0021               	movlb	1	; select bank1
 10553  01C0  00B5               	movwf	??_main^(0+128)
 10554  01C1  0835               	movf	??_main^(0+128),w
 10555  01C2  00EF               	movwf	_NREG^(0+128)
 10556  01C3                     l5771:
 10557                           
 10558                           ;main.c: 797: PMON = DATAEE_ReadByte(0x7000 + (2*8));
 10559  01C3  3010               	movlw	16
 10560  01C4  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10561  01C5  3070               	movlw	112
 10562  01C6  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10563  01C7  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10564  01CA  0021               	movlb	1	; select bank1
 10565  01CB  00B5               	movwf	??_main^(0+128)
 10566  01CC  0835               	movf	??_main^(0+128),w
 10567  01CD  00EE               	movwf	_PMON^(0+128)
 10568  01CE                     l5773:
 10569                           
 10570                           ;main.c: 798: TALA = DATAEE_ReadByte(0x7000 + (3*8));
 10571  01CE  3018               	movlw	24
 10572  01CF  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10573  01D0  3070               	movlw	112
 10574  01D1  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10575  01D2  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10576  01D5  0021               	movlb	1	; select bank1
 10577  01D6  00B5               	movwf	??_main^(0+128)
 10578  01D7  0835               	movf	??_main^(0+128),w
 10579  01D8  0020               	movlb	0	; select bank0
 10580  01D9  00E6               	movwf	_TALA
 10581  01DA                     l5775:
 10582                           
 10583                           ;main.c: 799: clkAlarm.alarmVal.h = DATAEE_ReadByte(0x7000 + (4*8));
 10584  01DA  3020               	movlw	32
 10585  01DB  0021               	movlb	1	; select bank1
 10586  01DC  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10587  01DD  3070               	movlw	112
 10588  01DE  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10589  01DF  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10590  01E2  0021               	movlb	1	; select bank1
 10591  01E3  00B5               	movwf	??_main^(0+128)
 10592  01E4  0835               	movf	??_main^(0+128),w
 10593  01E5  0020               	movlb	0	; select bank0
 10594  01E6  00CD               	movwf	_clkAlarm
 10595  01E7                     l5777:
 10596                           
 10597                           ;main.c: 800: clkAlarm.alarmVal.m = DATAEE_ReadByte(0x7000 + (5*8));
 10598  01E7  3028               	movlw	40
 10599  01E8  0021               	movlb	1	; select bank1
 10600  01E9  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10601  01EA  3070               	movlw	112
 10602  01EB  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10603  01EC  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10604  01EF  0021               	movlb	1	; select bank1
 10605  01F0  00B5               	movwf	??_main^(0+128)
 10606  01F1  0835               	movf	??_main^(0+128),w
 10607  01F2  0020               	movlb	0	; select bank0
 10608  01F3  00CE               	movwf	_clkAlarm+1
 10609  01F4                     l5779:
 10610                           
 10611                           ;main.c: 801: clkAlarm.alarmVal.s = DATAEE_ReadByte(0x7000 + (6*8));
 10612  01F4  3030               	movlw	48
 10613  01F5  0021               	movlb	1	; select bank1
 10614  01F6  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10615  01F7  3070               	movlw	112
 10616  01F8  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10617  01F9  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10618  01FC  0021               	movlb	1	; select bank1
 10619  01FD  00B5               	movwf	??_main^(0+128)
 10620  01FE  0835               	movf	??_main^(0+128),w
 10621  01FF  0020               	movlb	0	; select bank0
 10622  0200  00CF               	movwf	_clkAlarm+2
 10623  0201                     l5781:
 10624                           
 10625                           ;main.c: 802: tempAlarm.alarmTemp = DATAEE_ReadByte(0x7000 + (7*8));
 10626  0201  3038               	movlw	56
 10627  0202  0021               	movlb	1	; select bank1
 10628  0203  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10629  0204  3070               	movlw	112
 10630  0205  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10631  0206  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10632  0209  0021               	movlb	1	; select bank1
 10633  020A  00B5               	movwf	??_main^(0+128)
 10634  020B  0835               	movf	??_main^(0+128),w
 10635  020C  0020               	movlb	0	; select bank0
 10636  020D  00D4               	movwf	_tempAlarm
 10637  020E                     l5783:
 10638                           
 10639                           ;main.c: 803: lumAlarm.alarmLum = DATAEE_ReadByte(0x7000 + (8*8));
 10640  020E  3040               	movlw	64
 10641  020F  0021               	movlb	1	; select bank1
 10642  0210  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10643  0211  3070               	movlw	112
 10644  0212  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10645  0213  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10646  0216  0021               	movlb	1	; select bank1
 10647  0217  00B5               	movwf	??_main^(0+128)
 10648  0218  0835               	movf	??_main^(0+128),w
 10649  0219  0020               	movlb	0	; select bank0
 10650  021A  00D1               	movwf	_lumAlarm
 10651  021B                     l5785:
 10652                           
 10653                           ;main.c: 804: ALAF = DATAEE_ReadByte(0x7000 + (9*8));
 10654  021B  3048               	movlw	72
 10655  021C  0021               	movlb	1	; select bank1
 10656  021D  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10657  021E  3070               	movlw	112
 10658  021F  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10659  0220  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10660  0223  0021               	movlb	1	; select bank1
 10661  0224  00B5               	movwf	??_main^(0+128)
 10662  0225  0835               	movf	??_main^(0+128),w
 10663  0226  0020               	movlb	0	; select bank0
 10664  0227  00E5               	movwf	_ALAF
 10665  0228                     l5787:
 10666                           
 10667                           ;main.c: 805: t.h = DATAEE_ReadByte(0x7000 + (10*8));
 10668  0228  3050               	movlw	80
 10669  0229  0021               	movlb	1	; select bank1
 10670  022A  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10671  022B  3070               	movlw	112
 10672  022C  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10673  022D  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10674  0230  0021               	movlb	1	; select bank1
 10675  0231  00B5               	movwf	??_main^(0+128)
 10676  0232  0835               	movf	??_main^(0+128),w
 10677  0233  0020               	movlb	0	; select bank0
 10678  0234  00D7               	movwf	_t
 10679  0235                     l5789:
 10680                           
 10681                           ;main.c: 806: t.m = DATAEE_ReadByte(0x7000 + (11*8));
 10682  0235  3058               	movlw	88
 10683  0236  0021               	movlb	1	; select bank1
 10684  0237  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10685  0238  3070               	movlw	112
 10686  0239  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10687  023A  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10688  023D  0021               	movlb	1	; select bank1
 10689  023E  00B5               	movwf	??_main^(0+128)
 10690  023F  0835               	movf	??_main^(0+128),w
 10691  0240  0020               	movlb	0	; select bank0
 10692  0241  00D8               	movwf	_t+1
 10693  0242                     l5791:
 10694                           
 10695                           ;main.c: 807: idx_RingBuffer = DATAEE_ReadByte(0x7000 + (12*8));
 10696  0242  3060               	movlw	96
 10697  0243  0021               	movlb	1	; select bank1
 10698  0244  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
 10699  0245  3070               	movlw	112
 10700  0246  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
 10701  0247  3195  2501  3180   	fcall	_DATAEE_ReadByte
 10702  024A  0021               	movlb	1	; select bank1
 10703  024B  00B5               	movwf	??_main^(0+128)
 10704  024C  0835               	movf	??_main^(0+128),w
 10705  024D  00ED               	movwf	_idx_RingBuffer^(0+128)
 10706  024E                     l5793:
 10707                           
 10708                           ;main.c: 811: tempAlarm.trigger = 0;
 10709  024E  0020               	movlb	0	; select bank0
 10710  024F  01D5               	clrf	_tempAlarm+1
 10711  0250                     l5795:
 10712                           
 10713                           ;main.c: 812: tempAlarm.triggered = 0;
 10714  0250  01D6               	clrf	_tempAlarm+2
 10715  0251                     l5797:
 10716                           
 10717                           ;main.c: 814: lumAlarm.trigger = 0;
 10718  0251  01D2               	clrf	_lumAlarm+1
 10719  0252                     l5799:
 10720                           
 10721                           ;main.c: 815: lumAlarm.triggered = 0;
 10722  0252  01D3               	clrf	_lumAlarm+2
 10723  0253                     l5801:
 10724                           
 10725                           ;main.c: 817: clkAlarm.trigger = 0;
 10726  0253  01D0               	clrf	_clkAlarm+3
 10727  0254                     l5803:
 10728                           
 10729                           ;main.c: 820: i2c1_driver_open();
 10730  0254  3194  24BF  3180   	fcall	_i2c1_driver_open
 10731  0257                     l5805:
 10732                           
 10733                           ;main.c: 821: TRISCbits.TRISC3 = 1;
 10734  0257  0020               	movlb	0	; select bank0
 10735  0258  1593               	bsf	19,3	;volatile
 10736  0259                     l5807:
 10737                           
 10738                           ;main.c: 822: TRISCbits.TRISC4 = 1;
 10739  0259  1613               	bsf	19,4	;volatile
 10740  025A                     l5809:
 10741                           
 10742                           ;main.c: 823: WPUC3 = 1;
 10743  025A  003E               	movlb	30	; select bank30
 10744  025B  15CF               	bsf	79,3	;volatile
 10745  025C                     l5811:
 10746                           
 10747                           ;main.c: 824: WPUC4 = 1;
 10748  025C  164F               	bsf	79,4	;volatile
 10749  025D                     l5813:
 10750                           
 10751                           ;main.c: 825: LCDinit();
 10752  025D  318B  23D8  3180   	fcall	_LCDinit
 10753  0260                     l5815:
 10754                           
 10755                           ;main.c: 828: (INTCONbits.GIE = 1);
 10756  0260  178B               	bsf	11,7	;volatile
 10757  0261                     l5817:
 10758                           
 10759                           ;main.c: 831: (INTCONbits.PEIE = 1);
 10760  0261  170B               	bsf	11,6	;volatile
 10761  0262                     l5819:
 10762                           
 10763                           ;main.c: 835: uint8_t c;;main.c: 836: char buff[20];;main.c: 837: int n=0;
 10764  0262  0021               	movlb	1	; select bank1
 10765  0263  01D2               	clrf	main@n^(0+128)
 10766  0264  01D3               	clrf	(main@n+1)^(0+128)
 10767  0265                     l5821:
 10768  0265  2A99               	goto	l5843
 10769  0266                     l1450:	
 10770                           ;main.c: 840: while (1)
 10771                           
 10772                           
 10773                           ;main.c: 841: {;main.c: 845: while(EUSART_is_rx_ready()){
 10774  0266  2A99               	goto	l5843
 10775  0267                     l5823:
 10776                           
 10777                           ;main.c: 846: c = getch();
 10778  0267  3194  245A  3180   	fcall	_getch
 10779  026A  0021               	movlb	1	; select bank1
 10780  026B  00B5               	movwf	??_main^(0+128)
 10781  026C  0835               	movf	??_main^(0+128),w
 10782  026D  00D1               	movwf	main@c^(0+128)
 10783  026E                     l5825:
 10784                           
 10785                           ;main.c: 847: if((c == (uint8_t)0xFD || buff[0] == (uint8_t)0xFD)){
 10786  026E  30FD               	movlw	253
 10787  026F  0651               	xorwf	main@c^(0+128),w
 10788  0270  1903               	btfsc	3,2
 10789  0271  2A73               	goto	u5701
 10790  0272  2A74               	goto	u5700
 10791  0273                     u5701:
 10792  0273  2A7A               	goto	l5829
 10793  0274                     u5700:
 10794  0274                     l5827:
 10795  0274  30FD               	movlw	253
 10796  0275  0638               	xorwf	main@buff^(0+128),w
 10797  0276  1D03               	btfss	3,2
 10798  0277  2A79               	goto	u5711
 10799  0278  2A7A               	goto	u5710
 10800  0279                     u5711:
 10801  0279  2A99               	goto	l5843
 10802  027A                     u5710:
 10803  027A                     l5829:
 10804                           
 10805                           ;main.c: 848: if(c == (uint8_t)0xFD){
 10806  027A  30FD               	movlw	253
 10807  027B  0651               	xorwf	main@c^(0+128),w
 10808  027C  1D03               	btfss	3,2
 10809  027D  2A7F               	goto	u5721
 10810  027E  2A80               	goto	u5720
 10811  027F                     u5721:
 10812  027F  2A82               	goto	l5833
 10813  0280                     u5720:
 10814  0280                     l5831:
 10815                           
 10816                           ;main.c: 849: n=0;
 10817  0280  01D2               	clrf	main@n^(0+128)
 10818  0281  01D3               	clrf	(main@n+1)^(0+128)
 10819  0282                     l5833:
 10820                           
 10821                           ;main.c: 850: };main.c: 851: buff[n] = c;
 10822  0282  0851               	movf	main@c^(0+128),w
 10823  0283  00B5               	movwf	??_main^(0+128)
 10824  0284  0852               	movf	main@n^(0+128),w
 10825  0285  3EB8               	addlw	(low (main@buff| 0))& (0+255)
 10826  0286  0086               	movwf	6
 10827  0287  0187               	clrf	7
 10828  0288  0835               	movf	??_main^(0+128),w
 10829  0289  0081               	movwf	1
 10830  028A                     l5835:
 10831                           
 10832                           ;main.c: 852: n++;
 10833  028A  3001               	movlw	1
 10834  028B  07D2               	addwf	main@n^(0+128),f
 10835  028C  3000               	movlw	0
 10836  028D  3DD3               	addwfc	(main@n+1)^(0+128),f
 10837  028E                     l5837:
 10838                           
 10839                           ;main.c: 853: if(n == 20){
 10840  028E  3014               	movlw	20
 10841  028F  0652               	xorwf	main@n^(0+128),w
 10842  0290  0453               	iorwf	(main@n+1)^(0+128),w
 10843  0291  1D03               	btfss	3,2
 10844  0292  2A94               	goto	u5731
 10845  0293  2A95               	goto	u5730
 10846  0294                     u5731:
 10847  0294  2A99               	goto	l5843
 10848  0295                     u5730:
 10849  0295                     l5839:
 10850                           
 10851                           ;main.c: 854: buff[0] = 0x01;
 10852  0295  01B8               	clrf	main@buff^(0+128)
 10853  0296  0AB8               	incf	main@buff^(0+128),f
 10854  0297                     l5841:
 10855                           
 10856                           ;main.c: 855: n=0;
 10857  0297  01D2               	clrf	main@n^(0+128)
 10858  0298  01D3               	clrf	(main@n+1)^(0+128)
 10859  0299                     l5843:
 10860  0299  3194  2445  3180   	fcall	_EUSART_is_rx_ready
 10861  029C  3A00               	xorlw	0
 10862  029D  1D03               	skipz
 10863  029E  2AA0               	goto	u5741
 10864  029F  2AA1               	goto	u5740
 10865  02A0                     u5741:
 10866  02A0  2A67               	goto	l5823
 10867  02A1                     u5740:
 10868  02A1                     l5845:
 10869                           
 10870                           ;main.c: 856: };main.c: 857: };main.c: 858: };main.c: 859: if(buff[n] == (uint8_t)0xFE){
 10871  02A1  0021               	movlb	1	; select bank1
 10872  02A2  0852               	movf	main@n^(0+128),w
 10873  02A3  3EB8               	addlw	(low (main@buff| 0))& (0+255)
 10874  02A4  0086               	movwf	6
 10875  02A5  0187               	clrf	7
 10876  02A6  30FE               	movlw	254
 10877  02A7  0601               	xorwf	1,w
 10878  02A8  1D03               	btfss	3,2
 10879  02A9  2AAB               	goto	u5751
 10880  02AA  2AAC               	goto	u5750
 10881  02AB                     u5751:
 10882  02AB  2AF8               	goto	l5861
 10883  02AC                     u5750:
 10884  02AC                     l5847:
 10885                           
 10886                           ;main.c: 860: for (i = 0; i < (sizeof(commands) / sizeof(struct command_d)); i++){
 10887  02AC  01D4               	clrf	main@i_2606^(0+128)
 10888  02AD  01D5               	clrf	(main@i_2606+1)^(0+128)
 10889  02AE                     l5853:
 10890                           
 10891                           ;main.c: 861: if (buff[1] == commands[i].cmd_name){
 10892  02AE  0855               	movf	(main@i_2606+1)^(0+128),w
 10893  02AF  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 10894  02B0  0854               	movf	main@i_2606^(0+128),w
 10895  02B1  00A0               	movwf	___wmul@multiplier^(0+128)
 10896  02B2  3003               	movlw	3
 10897  02B3  00A2               	movwf	___wmul@multiplicand^(0+128)
 10898  02B4  3000               	movlw	0
 10899  02B5  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 10900  02B6  3196  26AF  3180   	fcall	___wmul
 10901  02B9  0021               	movlb	1	; select bank1
 10902  02BA  0821               	movf	(?___wmul+1)^(0+128),w
 10903  02BB  0085               	movwf	5
 10904  02BC  0820               	movf	?___wmul^(0+128),w
 10905  02BD  0084               	movwf	4
 10906  02BE  301B               	movlw	low ((_commands+2)| (0+32768))
 10907  02BF  0784               	addwf	4,f
 10908  02C0  3098               	movlw	high ((_commands+2)| (0+32768))
 10909  02C1  3D85               	addwfc	5,f
 10910  02C2  0800               	movf	0,w	;code access
 10911  02C3  0639               	xorwf	(main@buff^(0+128)+1),w
 10912  02C4  1D03               	skipz
 10913  02C5  2AC7               	goto	u5761
 10914  02C6  2AC8               	goto	u5760
 10915  02C7                     u5761:
 10916  02C7  2AE6               	goto	l5857
 10917  02C8                     u5760:
 10918  02C8                     l5855:
 10919                           
 10920                           ;main.c: 862: commands[i].cmd_fnct(0, (0));
 10921  02C8  3000               	movlw	0
 10922  02C9  00A6               	movwf	cmd_ra@12937^(0+128)
 10923  02CA  00A7               	movwf	(cmd_ra@12937+1)^(0+128)
 10924  02CB  01A8               	clrf	cmd_ra@12938^(0+128)
 10925  02CC  0855               	movf	(main@i_2606+1)^(0+128),w
 10926  02CD  00A1               	movwf	(___wmul@multiplier+1)^(0+128)
 10927  02CE  0854               	movf	main@i_2606^(0+128),w
 10928  02CF  00A0               	movwf	___wmul@multiplier^(0+128)
 10929  02D0  3003               	movlw	3
 10930  02D1  00A2               	movwf	___wmul@multiplicand^(0+128)
 10931  02D2  3000               	movlw	0
 10932  02D3  00A3               	movwf	(___wmul@multiplicand^(0+128)+1)
 10933  02D4  3196  26AF  3180   	fcall	___wmul
 10934  02D7  0021               	movlb	1	; select bank1
 10935  02D8  0821               	movf	(?___wmul+1)^(0+128),w
 10936  02D9  0085               	movwf	5
 10937  02DA  0820               	movf	?___wmul^(0+128),w
 10938  02DB  0084               	movwf	4
 10939  02DC  3019               	movlw	low (_commands| (0+32768))
 10940  02DD  0784               	addwf	4,f
 10941  02DE  3098               	movlw	high (_commands| (0+32768))
 10942  02DF  3D85               	addwfc	5,f
 10943  02E0  3F01               	moviw [1]fsr0
 10944  02E1  008A               	movwf	10
 10945  02E2  3F00               	moviw [0]fsr0
 10946  02E3  000A               	callw
 10947  02E4  3180               	pagesel	$
 10948                           
 10949                           ;main.c: 863: break;
 10950  02E5  2AF3               	goto	l1461
 10951  02E6                     l5857:
 10952  02E6  3001               	movlw	1
 10953  02E7  07D4               	addwf	main@i_2606^(0+128),f
 10954  02E8  3000               	movlw	0
 10955  02E9  3DD5               	addwfc	(main@i_2606+1)^(0+128),f
 10956  02EA  3000               	movlw	0
 10957  02EB  0255               	subwf	(main@i_2606+1)^(0+128),w
 10958  02EC  3003               	movlw	3
 10959  02ED  1903               	skipnz
 10960  02EE  0254               	subwf	main@i_2606^(0+128),w
 10961  02EF  1C03               	skipc
 10962  02F0  2AF2               	goto	u5771
 10963  02F1  2AF3               	goto	u5770
 10964  02F2                     u5771:
 10965  02F2  2AAE               	goto	l5853
 10966  02F3                     u5770:
 10967  02F3                     l1461:
 10968                           
 10969                           ;main.c: 864: };main.c: 865: };main.c: 866: buff[0] = 0x01;
 10970  02F3  0021               	movlb	1	; select bank1
 10971  02F4  01B8               	clrf	main@buff^(0+128)
 10972  02F5  0AB8               	incf	main@buff^(0+128),f
 10973  02F6                     l5859:
 10974                           
 10975                           ;main.c: 867: n=0;
 10976  02F6  01D2               	clrf	main@n^(0+128)
 10977  02F7  01D3               	clrf	(main@n+1)^(0+128)
 10978  02F8                     l5861:
 10979                           
 10980                           ;main.c: 868: };main.c: 870: if(modeFlag == 0){
 10981  02F8  0020               	movlb	0	; select bank0
 10982  02F9  085A               	movf	_modeFlag,w
 10983  02FA  045B               	iorwf	_modeFlag+1,w
 10984  02FB  1D03               	btfss	3,2
 10985  02FC  2AFE               	goto	u5781
 10986  02FD  2AFF               	goto	u5780
 10987  02FE                     u5781:
 10988  02FE  2B00               	goto	l5869
 10989  02FF                     u5780:
 10990  02FF  2A99               	goto	l5843
 10991  0300                     l5869:
 10992  0300  035A               	decf	_modeFlag,w
 10993  0301  045B               	iorwf	_modeFlag+1,w
 10994  0302  1D03               	btfss	3,2
 10995  0303  2B05               	goto	u5791
 10996  0304  2B06               	goto	u5790
 10997  0305                     u5791:
 10998  0305  2B0A               	goto	l5873
 10999  0306                     u5790:
 11000  0306                     l5871:
 11001                           
 11002                           ;main.c: 878: editClock();
 11003  0306  318B  2374  3180   	fcall	_editClock
 11004                           
 11005                           ;main.c: 879: } else if(modeFlag == 2){
 11006  0309  2A99               	goto	l5843
 11007  030A                     l5873:
 11008  030A  3002               	movlw	2
 11009  030B  065A               	xorwf	_modeFlag,w
 11010  030C  045B               	iorwf	_modeFlag+1,w
 11011  030D  1D03               	btfss	3,2
 11012  030E  2B10               	goto	u5801
 11013  030F  2B11               	goto	u5800
 11014  0310                     u5801:
 11015  0310  2B15               	goto	l5877
 11016  0311                     u5800:
 11017  0311                     l5875:
 11018                           
 11019                           ;main.c: 880: editTemp();
 11020  0311  3188  203F  3180   	fcall	_editTemp
 11021                           
 11022                           ;main.c: 881: } else if(modeFlag == 3){
 11023  0314  2A99               	goto	l5843
 11024  0315                     l5877:
 11025  0315  3003               	movlw	3
 11026  0316  065A               	xorwf	_modeFlag,w
 11027  0317  045B               	iorwf	_modeFlag+1,w
 11028  0318  1D03               	btfss	3,2
 11029  0319  2B1B               	goto	u5811
 11030  031A  2B1C               	goto	u5810
 11031  031B                     u5811:
 11032  031B  2B20               	goto	l5881
 11033  031C                     u5810:
 11034  031C                     l5879:
 11035                           
 11036                           ;main.c: 882: editLum();
 11037  031C  3188  2012  3180   	fcall	_editLum
 11038                           
 11039                           ;main.c: 883: } else if(modeFlag == 4){
 11040  031F  2A99               	goto	l5843
 11041  0320                     l5881:
 11042  0320  3004               	movlw	4
 11043  0321  065A               	xorwf	_modeFlag,w
 11044  0322  045B               	iorwf	_modeFlag+1,w
 11045  0323  1D03               	btfss	3,2
 11046  0324  2B26               	goto	u5821
 11047  0325  2B27               	goto	u5820
 11048  0326                     u5821:
 11049  0326  2A66               	goto	l1450
 11050  0327                     u5820:
 11051  0327                     l5883:
 11052                           
 11053                           ;main.c: 884: toggleAlarms();
 11054  0327  3197  27D4  3180   	fcall	_toggleAlarms
 11055  032A  2A99               	goto	l5843
 11056  032B  3180  286A         	ljmp	start
 11057  032D                     __end_of_main:
 11058                           
 11059                           	psect	text1
 11060  17D4                     __ptext1:	
 11061 ;; *************** function _toggleAlarms *****************
 11062 ;; Defined at:
 11063 ;;		line 651 in file "main.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;		None
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;		None
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  1    wreg      void 
 11070 ;; Registers used:
 11071 ;;		wreg, status,2, status,0
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11079 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11080 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;Total ram usage:        1 bytes
 11082 ;; Hardware stack levels used:    1
 11083 ;; Hardware stack levels required when called:    7
 11084 ;; This function calls:
 11085 ;;		Nothing
 11086 ;; This function is called by:
 11087 ;;		_main
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091                           
 11092                           ;psect for function _toggleAlarms
 11093  17D4                     _toggleAlarms:
 11094  17D4                     l1402:	
 11095                           ;incstack = 0
 11096                           ; Regs used in _toggleAlarms: [wreg+status,2+status,0]
 11097                           ;main.c: 653: while(1){
 11098                           
 11099                           
 11100                           ;main.c: 655: if(PORTCbits.RC5 == 0){
 11101  17D4  0020               	movlb	0	; select bank0
 11102  17D5  1A8E               	btfsc	14,5	;volatile
 11103  17D6  2FD8               	goto	u5331
 11104  17D7  2FD9               	goto	u5330
 11105  17D8                     u5331:
 11106  17D8  2FF5               	goto	l5591
 11107  17D9                     u5330:
 11108  17D9                     l5585:
 11109                           
 11110                           ;main.c: 656: if(ALAF == 'A'){
 11111  17D9  3041               	movlw	65
 11112  17DA  0665               	xorwf	_ALAF,w
 11113  17DB  1D03               	btfss	3,2
 11114  17DC  2FDE               	goto	u5341
 11115  17DD  2FDF               	goto	u5340
 11116  17DE                     u5341:
 11117  17DE  2FE6               	goto	l5589
 11118  17DF                     u5340:
 11119  17DF                     l5587:
 11120                           
 11121                           ;main.c: 657: ALAF = 'a';
 11122  17DF  3061               	movlw	97
 11123  17E0  0021               	movlb	1	; select bank1
 11124  17E1  00A0               	movwf	??_toggleAlarms^(0+128)
 11125  17E2  0820               	movf	??_toggleAlarms^(0+128),w
 11126  17E3  0020               	movlb	0	; select bank0
 11127  17E4  00E5               	movwf	_ALAF
 11128                           
 11129                           ;main.c: 658: } else {
 11130  17E5  2FEC               	goto	l1405
 11131  17E6                     l5589:
 11132                           
 11133                           ;main.c: 659: ALAF = 'A';
 11134  17E6  3041               	movlw	65
 11135  17E7  0021               	movlb	1	; select bank1
 11136  17E8  00A0               	movwf	??_toggleAlarms^(0+128)
 11137  17E9  0820               	movf	??_toggleAlarms^(0+128),w
 11138  17EA  0020               	movlb	0	; select bank0
 11139  17EB  00E5               	movwf	_ALAF
 11140  17EC                     l1405:
 11141                           
 11142                           ;main.c: 660: };main.c: 661: _delay((unsigned long)((100)*(1000000/4000.0)));
 11143  17EC  3021               	movlw	33
 11144  17ED  0021               	movlb	1	; select bank1
 11145  17EE  00A0               	movwf	??_toggleAlarms^(0+128)
 11146  17EF  3076               	movlw	118
 11147  17F0                     u5837:
 11148  17F0  0B89               	decfsz	9,f
 11149  17F1  2FF0               	goto	u5837
 11150  17F2  0BA0               	decfsz	??_toggleAlarms^(0+128),f
 11151  17F3  2FF0               	goto	u5837
 11152  17F4  0000               	nop
 11153  17F5                     l5591:
 11154                           
 11155                           ;main.c: 662: };main.c: 663: if(modeFlag != 4){
 11156  17F5  3004               	movlw	4
 11157  17F6  0020               	movlb	0	; select bank0
 11158  17F7  065A               	xorwf	_modeFlag,w
 11159  17F8  045B               	iorwf	_modeFlag+1,w
 11160  17F9  1903               	btfsc	3,2
 11161  17FA  2FFC               	goto	u5351
 11162  17FB  2FFD               	goto	u5350
 11163  17FC                     u5351:
 11164  17FC  2FD4               	goto	l1402
 11165  17FD                     u5350:
 11166  17FD                     l5593:
 11167                           
 11168                           ;main.c: 664: modeFlag = 0;
 11169  17FD  01DA               	clrf	_modeFlag
 11170  17FE  01DB               	clrf	_modeFlag+1
 11171  17FF                     l1409:	
 11172                           ;main.c: 665: break;
 11173                           
 11174  17FF  0008               	return
 11175  1800                     __end_of_toggleAlarms:
 11176                           
 11177                           	psect	text2
 11178  14BF                     __ptext2:	
 11179 ;; *************** function _i2c1_driver_open *****************
 11180 ;; Defined at:
 11181 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;		None
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;		None
 11186 ;; Return value:  Size  Location     Type
 11187 ;;		None               void
 11188 ;; Registers used:
 11189 ;;		wreg, status,2
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11199 ;;Total ram usage:        0 bytes
 11200 ;; Hardware stack levels used:    1
 11201 ;; Hardware stack levels required when called:    7
 11202 ;; This function calls:
 11203 ;;		Nothing
 11204 ;; This function is called by:
 11205 ;;		_main
 11206 ;; This function uses a non-reentrant model
 11207 ;;
 11208                           
 11209                           
 11210                           ;psect for function _i2c1_driver_open
 11211  14BF                     _i2c1_driver_open:
 11212  14BF                     l5337:	
 11213                           ;incstack = 0
 11214                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 11215                           
 11216                           
 11217                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 11218  14BF  0023               	movlb	3	; select bank3
 11219  14C0  1A90               	btfsc	16,5	;volatile
 11220  14C1  2CC3               	goto	u4831
 11221  14C2  2CC4               	goto	u4830
 11222  14C3                     u4831:
 11223  14C3  2CCA               	goto	l257
 11224  14C4                     u4830:
 11225  14C4                     l5339:
 11226                           
 11227                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
 11228  14C4  018F               	clrf	15	;volatile
 11229  14C5                     l5341:
 11230                           
 11231                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 11232  14C5  3028               	movlw	40
 11233  14C6  0090               	movwf	16	;volatile
 11234  14C7                     l5343:
 11235                           
 11236                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 11237  14C7  0191               	clrf	17	;volatile
 11238                           
 11239                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 11240  14C8  3003               	movlw	3
 11241  14C9  008D               	movwf	13	;volatile
 11242  14CA                     l257:
 11243  14CA  0008               	return
 11244  14CB                     __end_of_i2c1_driver_open:
 11245                           
 11246                           	psect	text3
 11247  145A                     __ptext3:	
 11248 ;; *************** function _getch *****************
 11249 ;; Defined at:
 11250 ;;		line 171 in file "mcc_generated_files/eusart.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;		None
 11253 ;; Auto vars:     Size  Location     Type
 11254 ;;		None
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  1    wreg      unsigned char 
 11257 ;; Registers used:
 11258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 0/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;Total ram usage:        0 bytes
 11269 ;; Hardware stack levels used:    1
 11270 ;; Hardware stack levels required when called:    8
 11271 ;; This function calls:
 11272 ;;		_EUSART_Read
 11273 ;; This function is called by:
 11274 ;;		_main
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           
 11279                           ;psect for function _getch
 11280  145A                     _getch:
 11281  145A                     l5629:	
 11282                           ;incstack = 0
 11283                           ; Regs used in _getch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11284                           
 11285                           
 11286                           ;eusart.c: 173: return EUSART_Read();
 11287  145A  3197  2759  3194   	fcall	_EUSART_Read
 11288  145D                     l1555:
 11289  145D  0008               	return
 11290  145E                     __end_of_getch:
 11291                           
 11292                           	psect	text4
 11293  1759                     __ptext4:	
 11294 ;; *************** function _EUSART_Read *****************
 11295 ;; Defined at:
 11296 ;;		line 128 in file "mcc_generated_files/eusart.c"
 11297 ;; Parameters:    Size  Location     Type
 11298 ;;		None
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;  readValue       1    1[BANK1 ] unsigned char 
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  1    wreg      unsigned char 
 11303 ;; Registers used:
 11304 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11311 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11312 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11313 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;Total ram usage:        2 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; Hardware stack levels required when called:    7
 11317 ;; This function calls:
 11318 ;;		Nothing
 11319 ;; This function is called by:
 11320 ;;		_getch
 11321 ;; This function uses a non-reentrant model
 11322 ;;
 11323                           
 11324                           
 11325                           ;psect for function _EUSART_Read
 11326  1759                     _EUSART_Read:
 11327  1759                     l5293:	
 11328                           ;incstack = 0
 11329                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11330                           
 11331  1759                     l5295:	
 11332                           ;eusart.c: 132: while(0 == eusartRxCount)
 11333                           
 11334  1759  0021               	movlb	1	; select bank1
 11335  175A  0867               	movf	_eusartRxCount^(0+128),w	;volatile
 11336  175B  1903               	btfsc	3,2
 11337  175C  2F5E               	goto	u4811
 11338  175D  2F5F               	goto	u4810
 11339  175E                     u4811:
 11340  175E  2F59               	goto	l5295
 11341  175F                     u4810:
 11342  175F                     l5297:
 11343                           
 11344                           ;eusart.c: 134: };eusart.c: 136: readValue = eusartRxBuffer[eusartRxTail++];
 11345  175F  0868               	movf	_eusartRxTail^(0+128),w
 11346  1760  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 11347  1761  0086               	movwf	6
 11348  1762  3001               	movlw	1	; select bank2/3
 11349  1763  0087               	movwf	7
 11350  1764  0801               	movf	1,w
 11351  1765  00A0               	movwf	??_EUSART_Read^(0+128)
 11352  1766  0820               	movf	??_EUSART_Read^(0+128),w
 11353  1767  00A1               	movwf	EUSART_Read@readValue^(0+128)
 11354  1768                     l5299:
 11355  1768  3001               	movlw	1
 11356  1769  00A0               	movwf	??_EUSART_Read^(0+128)
 11357  176A  0820               	movf	??_EUSART_Read^(0+128),w
 11358  176B  07E8               	addwf	_eusartRxTail^(0+128),f	;volatile
 11359  176C                     l5301:
 11360                           
 11361                           ;eusart.c: 137: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 11362  176C  3008               	movlw	8
 11363  176D  0268               	subwf	_eusartRxTail^(0+128),w	;volatile
 11364  176E  1C03               	skipc
 11365  176F  2F71               	goto	u4821
 11366  1770  2F72               	goto	u4820
 11367  1771                     u4821:
 11368  1771  2F73               	goto	l5305
 11369  1772                     u4820:
 11370  1772                     l5303:
 11371                           
 11372                           ;eusart.c: 138: {;eusart.c: 139: eusartRxTail = 0;
 11373  1772  01E8               	clrf	_eusartRxTail^(0+128)	;volatile
 11374  1773                     l5305:
 11375                           
 11376                           ;eusart.c: 140: };eusart.c: 141: PIE3bits.RCIE = 0;
 11377  1773  002E               	movlb	14	; select bank14
 11378  1774  1299               	bcf	25,5	;volatile
 11379  1775                     l5307:
 11380                           
 11381                           ;eusart.c: 142: eusartRxCount--;
 11382  1775  3001               	movlw	1
 11383  1776  0021               	movlb	1	; select bank1
 11384  1777  02E7               	subwf	_eusartRxCount^(0+128),f	;volatile
 11385  1778                     l5309:
 11386                           
 11387                           ;eusart.c: 143: PIE3bits.RCIE = 1;
 11388  1778  002E               	movlb	14	; select bank14
 11389  1779  1699               	bsf	25,5	;volatile
 11390  177A                     l5311:
 11391                           
 11392                           ;eusart.c: 145: return readValue;
 11393  177A  0021               	movlb	1	; select bank1
 11394  177B  0821               	movf	EUSART_Read@readValue^(0+128),w
 11395  177C                     l1543:
 11396  177C  0008               	return
 11397  177D                     __end_of_EUSART_Read:
 11398                           
 11399                           	psect	text5
 11400  083F                     __ptext5:	
 11401 ;; *************** function _editTemp *****************
 11402 ;; Defined at:
 11403 ;;		line 605 in file "main.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;		None
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;		None
 11408 ;; Return value:  Size  Location     Type
 11409 ;;                  1    wreg      void 
 11410 ;; Registers used:
 11411 ;;		wreg, status,2, status,0
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11419 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11420 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11421 ;;Total ram usage:        1 bytes
 11422 ;; Hardware stack levels used:    1
 11423 ;; Hardware stack levels required when called:    7
 11424 ;; This function calls:
 11425 ;;		Nothing
 11426 ;; This function is called by:
 11427 ;;		_main
 11428 ;; This function uses a non-reentrant model
 11429 ;;
 11430                           
 11431                           
 11432                           ;psect for function _editTemp
 11433  083F                     _editTemp:
 11434  083F                     l1380:	
 11435                           ;incstack = 0
 11436                           ; Regs used in _editTemp: [wreg+status,2+status,0]
 11437                           ;main.c: 608: while(1){
 11438                           
 11439                           
 11440                           ;main.c: 610: if(PORTCbits.RC5 == 0){
 11441  083F  0020               	movlb	0	; select bank0
 11442  0840  1A8E               	btfsc	14,5	;volatile
 11443  0841  2843               	goto	u5251
 11444  0842  2844               	goto	u5250
 11445  0843                     u5251:
 11446  0843  2862               	goto	l5565
 11447  0844                     u5250:
 11448  0844                     l5553:
 11449                           
 11450                           ;main.c: 611: if(editingTempAlarm == 0){
 11451  0844  0861               	movf	_editingTempAlarm,w
 11452  0845  1D03               	btfss	3,2
 11453  0846  2848               	goto	u5261
 11454  0847  2849               	goto	u5260
 11455  0848                     u5261:
 11456  0848  284C               	goto	l5557
 11457  0849                     u5260:
 11458  0849                     l5555:
 11459                           
 11460                           ;main.c: 612: editingTempAlarm = 1;
 11461  0849  01E1               	clrf	_editingTempAlarm
 11462  084A  0AE1               	incf	_editingTempAlarm,f
 11463                           
 11464                           ;main.c: 613: } else {
 11465  084B  2859               	goto	l5563
 11466  084C                     l5557:
 11467                           
 11468                           ;main.c: 614: tempAlarm.alarmTemp++;
 11469  084C  3001               	movlw	1
 11470  084D  0021               	movlb	1	; select bank1
 11471  084E  00A0               	movwf	??_editTemp^(0+128)
 11472  084F  0820               	movf	??_editTemp^(0+128),w
 11473  0850  0020               	movlb	0	; select bank0
 11474  0851  07D4               	addwf	_tempAlarm,f
 11475  0852                     l5559:
 11476                           
 11477                           ;main.c: 615: if(tempAlarm.alarmTemp > 50){
 11478  0852  3033               	movlw	51
 11479  0853  0254               	subwf	_tempAlarm,w
 11480  0854  1C03               	skipc
 11481  0855  2857               	goto	u5271
 11482  0856  2858               	goto	u5270
 11483  0857                     u5271:
 11484  0857  2859               	goto	l5563
 11485  0858                     u5270:
 11486  0858                     l5561:
 11487                           
 11488                           ;main.c: 616: tempAlarm.alarmTemp = 0;
 11489  0858  01D4               	clrf	_tempAlarm
 11490  0859                     l5563:
 11491                           
 11492                           ;main.c: 617: };main.c: 618: };main.c: 619: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
 11493  0859  3021               	movlw	33
 11494  085A  0021               	movlb	1	; select bank1
 11495  085B  00A0               	movwf	??_editTemp^(0+128)
 11496  085C  3076               	movlw	118
 11497  085D                     u5847:
 11498  085D  0B89               	decfsz	9,f
 11499  085E  285D               	goto	u5847
 11500  085F  0BA0               	decfsz	??_editTemp^(0+128),f
 11501  0860  285D               	goto	u5847
 11502  0861  0000               	nop
 11503  0862                     l5565:
 11504                           
 11505                           ;main.c: 620: };main.c: 621: if(modeFlag != 2){
 11506  0862  3002               	movlw	2
 11507  0863  0020               	movlb	0	; select bank0
 11508  0864  065A               	xorwf	_modeFlag,w
 11509  0865  045B               	iorwf	_modeFlag+1,w
 11510  0866  1903               	btfsc	3,2
 11511  0867  2869               	goto	u5281
 11512  0868  286A               	goto	u5280
 11513  0869                     u5281:
 11514  0869  283F               	goto	l1380
 11515  086A                     u5280:
 11516  086A                     l5567:
 11517                           
 11518                           ;main.c: 622: editingTempAlarm = 0;
 11519  086A  01E1               	clrf	_editingTempAlarm
 11520  086B                     l1388:	
 11521                           ;main.c: 623: break;
 11522                           
 11523  086B  0008               	return
 11524  086C                     __end_of_editTemp:
 11525                           
 11526                           	psect	text6
 11527  0812                     __ptext6:	
 11528 ;; *************** function _editLum *****************
 11529 ;; Defined at:
 11530 ;;		line 628 in file "main.c"
 11531 ;; Parameters:    Size  Location     Type
 11532 ;;		None
 11533 ;; Auto vars:     Size  Location     Type
 11534 ;;		None
 11535 ;; Return value:  Size  Location     Type
 11536 ;;                  1    wreg      void 
 11537 ;; Registers used:
 11538 ;;		wreg, status,2, status,0
 11539 ;; Tracked objects:
 11540 ;;		On entry : 0/0
 11541 ;;		On exit  : 0/0
 11542 ;;		Unchanged: 0/0
 11543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11546 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11547 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11548 ;;Total ram usage:        1 bytes
 11549 ;; Hardware stack levels used:    1
 11550 ;; Hardware stack levels required when called:    7
 11551 ;; This function calls:
 11552 ;;		Nothing
 11553 ;; This function is called by:
 11554 ;;		_main
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           
 11559                           ;psect for function _editLum
 11560  0812                     _editLum:
 11561  0812                     l1391:	
 11562                           ;incstack = 0
 11563                           ; Regs used in _editLum: [wreg+status,2+status,0]
 11564                           ;main.c: 631: while(1){
 11565                           
 11566                           
 11567                           ;main.c: 633: if(PORTCbits.RC5 == 0){
 11568  0812  0020               	movlb	0	; select bank0
 11569  0813  1A8E               	btfsc	14,5	;volatile
 11570  0814  2816               	goto	u5291
 11571  0815  2817               	goto	u5290
 11572  0816                     u5291:
 11573  0816  2835               	goto	l5581
 11574  0817                     u5290:
 11575  0817                     l5569:
 11576                           
 11577                           ;main.c: 634: if(editingLumAlarm == 0){
 11578  0817  0860               	movf	_editingLumAlarm,w
 11579  0818  1D03               	btfss	3,2
 11580  0819  281B               	goto	u5301
 11581  081A  281C               	goto	u5300
 11582  081B                     u5301:
 11583  081B  281F               	goto	l5573
 11584  081C                     u5300:
 11585  081C                     l5571:
 11586                           
 11587                           ;main.c: 635: editingLumAlarm = 1;
 11588  081C  01E0               	clrf	_editingLumAlarm
 11589  081D  0AE0               	incf	_editingLumAlarm,f
 11590                           
 11591                           ;main.c: 636: } else {
 11592  081E  282C               	goto	l5579
 11593  081F                     l5573:
 11594                           
 11595                           ;main.c: 637: lumAlarm.alarmLum++;
 11596  081F  3001               	movlw	1
 11597  0820  0021               	movlb	1	; select bank1
 11598  0821  00A0               	movwf	??_editLum^(0+128)
 11599  0822  0820               	movf	??_editLum^(0+128),w
 11600  0823  0020               	movlb	0	; select bank0
 11601  0824  07D1               	addwf	_lumAlarm,f
 11602  0825                     l5575:
 11603                           
 11604                           ;main.c: 638: if(lumAlarm.alarmLum > 7){
 11605  0825  3008               	movlw	8
 11606  0826  0251               	subwf	_lumAlarm,w
 11607  0827  1C03               	skipc
 11608  0828  282A               	goto	u5311
 11609  0829  282B               	goto	u5310
 11610  082A                     u5311:
 11611  082A  282C               	goto	l5579
 11612  082B                     u5310:
 11613  082B                     l5577:
 11614                           
 11615                           ;main.c: 639: lumAlarm.alarmLum = 0;
 11616  082B  01D1               	clrf	_lumAlarm
 11617  082C                     l5579:
 11618                           
 11619                           ;main.c: 640: };main.c: 641: };main.c: 642: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
 11620  082C  3021               	movlw	33
 11621  082D  0021               	movlb	1	; select bank1
 11622  082E  00A0               	movwf	??_editLum^(0+128)
 11623  082F  3076               	movlw	118
 11624  0830                     u5857:
 11625  0830  0B89               	decfsz	9,f
 11626  0831  2830               	goto	u5857
 11627  0832  0BA0               	decfsz	??_editLum^(0+128),f
 11628  0833  2830               	goto	u5857
 11629  0834  0000               	nop
 11630  0835                     l5581:
 11631                           
 11632                           ;main.c: 643: };main.c: 644: if(modeFlag != 3){
 11633  0835  3003               	movlw	3
 11634  0836  0020               	movlb	0	; select bank0
 11635  0837  065A               	xorwf	_modeFlag,w
 11636  0838  045B               	iorwf	_modeFlag+1,w
 11637  0839  1903               	btfsc	3,2
 11638  083A  283C               	goto	u5321
 11639  083B  283D               	goto	u5320
 11640  083C                     u5321:
 11641  083C  2812               	goto	l1391
 11642  083D                     u5320:
 11643  083D                     l5583:
 11644                           
 11645                           ;main.c: 645: editingLumAlarm = 0;
 11646  083D  01E0               	clrf	_editingLumAlarm
 11647  083E                     l1399:	
 11648                           ;main.c: 646: break;
 11649                           
 11650  083E  0008               	return
 11651  083F                     __end_of_editLum:
 11652                           
 11653                           	psect	text7
 11654  0B74                     __ptext7:	
 11655 ;; *************** function _editClock *****************
 11656 ;; Defined at:
 11657 ;;		line 569 in file "main.c"
 11658 ;; Parameters:    Size  Location     Type
 11659 ;;		None
 11660 ;; Auto vars:     Size  Location     Type
 11661 ;;		None
 11662 ;; Return value:  Size  Location     Type
 11663 ;;                  1    wreg      void 
 11664 ;; Registers used:
 11665 ;;		wreg, status,2, status,0
 11666 ;; Tracked objects:
 11667 ;;		On entry : 0/0
 11668 ;;		On exit  : 0/0
 11669 ;;		Unchanged: 0/0
 11670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;Total ram usage:        1 bytes
 11676 ;; Hardware stack levels used:    1
 11677 ;; Hardware stack levels required when called:    7
 11678 ;; This function calls:
 11679 ;;		Nothing
 11680 ;; This function is called by:
 11681 ;;		_main
 11682 ;; This function uses a non-reentrant model
 11683 ;;
 11684                           
 11685                           
 11686                           ;psect for function _editClock
 11687  0B74                     _editClock:
 11688  0B74                     l1359:	
 11689                           ;incstack = 0
 11690                           ; Regs used in _editClock: [wreg+status,2+status,0]
 11691                           ;main.c: 571: while(1){
 11692                           
 11693                           
 11694                           ;main.c: 573: if(PORTCbits.RC5 == 0){
 11695  0B74  0020               	movlb	0	; select bank0
 11696  0B75  1A8E               	btfsc	14,5	;volatile
 11697  0B76  2B78               	goto	u5161
 11698  0B77  2B79               	goto	u5160
 11699  0B78                     u5161:
 11700  0B78  2BCE               	goto	l5549
 11701  0B79                     u5160:
 11702  0B79                     l5519:
 11703                           
 11704                           ;main.c: 574: if(editingClockAlarm == 0){
 11705  0B79  085C               	movf	_editingClockAlarm,w
 11706  0B7A  045D               	iorwf	_editingClockAlarm+1,w
 11707  0B7B  1D03               	btfss	3,2
 11708  0B7C  2B7E               	goto	u5171
 11709  0B7D  2B7F               	goto	u5170
 11710  0B7E                     u5171:
 11711  0B7E  2B84               	goto	l5523
 11712  0B7F                     u5170:
 11713  0B7F                     l5521:
 11714                           
 11715                           ;main.c: 575: editingClockAlarm = 1;
 11716  0B7F  3001               	movlw	1
 11717  0B80  00DC               	movwf	_editingClockAlarm
 11718  0B81  3000               	movlw	0
 11719  0B82  00DD               	movwf	_editingClockAlarm+1
 11720                           
 11721                           ;main.c: 577: } else if(editingClockAlarm == 1){
 11722  0B83  2BC5               	goto	l5547
 11723  0B84                     l5523:
 11724  0B84  035C               	decf	_editingClockAlarm,w
 11725  0B85  045D               	iorwf	_editingClockAlarm+1,w
 11726  0B86  1D03               	btfss	3,2
 11727  0B87  2B89               	goto	u5181
 11728  0B88  2B8A               	goto	u5180
 11729  0B89                     u5181:
 11730  0B89  2B99               	goto	l5531
 11731  0B8A                     u5180:
 11732  0B8A                     l5525:
 11733                           
 11734                           ;main.c: 578: if(clkAlarm.alarmVal.h >= 23){
 11735  0B8A  3017               	movlw	23
 11736  0B8B  024D               	subwf	_clkAlarm,w
 11737  0B8C  1C03               	skipc
 11738  0B8D  2B8F               	goto	u5191
 11739  0B8E  2B90               	goto	u5190
 11740  0B8F                     u5191:
 11741  0B8F  2B92               	goto	l5529
 11742  0B90                     u5190:
 11743  0B90                     l5527:
 11744                           
 11745                           ;main.c: 579: clkAlarm.alarmVal.h = 0;
 11746  0B90  01CD               	clrf	_clkAlarm
 11747                           
 11748                           ;main.c: 580: } else{
 11749  0B91  2BC5               	goto	l5547
 11750  0B92                     l5529:
 11751                           
 11752                           ;main.c: 581: clkAlarm.alarmVal.h++;
 11753  0B92  3001               	movlw	1
 11754  0B93  0021               	movlb	1	; select bank1
 11755  0B94  00A0               	movwf	??_editClock^(0+128)
 11756  0B95  0820               	movf	??_editClock^(0+128),w
 11757  0B96  0020               	movlb	0	; select bank0
 11758  0B97  07CD               	addwf	_clkAlarm,f
 11759  0B98  2BC5               	goto	l5547
 11760  0B99                     l5531:
 11761  0B99  3002               	movlw	2
 11762  0B9A  065C               	xorwf	_editingClockAlarm,w
 11763  0B9B  045D               	iorwf	_editingClockAlarm+1,w
 11764  0B9C  1D03               	btfss	3,2
 11765  0B9D  2B9F               	goto	u5201
 11766  0B9E  2BA0               	goto	u5200
 11767  0B9F                     u5201:
 11768  0B9F  2BAF               	goto	l5539
 11769  0BA0                     u5200:
 11770  0BA0                     l5533:
 11771                           
 11772                           ;main.c: 584: if(clkAlarm.alarmVal.m == 59){
 11773  0BA0  303B               	movlw	59
 11774  0BA1  064E               	xorwf	_clkAlarm+1,w
 11775  0BA2  1D03               	btfss	3,2
 11776  0BA3  2BA5               	goto	u5211
 11777  0BA4  2BA6               	goto	u5210
 11778  0BA5                     u5211:
 11779  0BA5  2BA8               	goto	l5537
 11780  0BA6                     u5210:
 11781  0BA6                     l5535:
 11782                           
 11783                           ;main.c: 585: clkAlarm.alarmVal.m = 0;
 11784  0BA6  01CE               	clrf	_clkAlarm+1
 11785                           
 11786                           ;main.c: 586: } else{
 11787  0BA7  2BC5               	goto	l5547
 11788  0BA8                     l5537:
 11789                           
 11790                           ;main.c: 587: clkAlarm.alarmVal.m++;
 11791  0BA8  3001               	movlw	1
 11792  0BA9  0021               	movlb	1	; select bank1
 11793  0BAA  00A0               	movwf	??_editClock^(0+128)
 11794  0BAB  0820               	movf	??_editClock^(0+128),w
 11795  0BAC  0020               	movlb	0	; select bank0
 11796  0BAD  07CE               	addwf	_clkAlarm+1,f
 11797  0BAE  2BC5               	goto	l5547
 11798  0BAF                     l5539:
 11799  0BAF  3003               	movlw	3
 11800  0BB0  065C               	xorwf	_editingClockAlarm,w
 11801  0BB1  045D               	iorwf	_editingClockAlarm+1,w
 11802  0BB2  1D03               	btfss	3,2
 11803  0BB3  2BB5               	goto	u5221
 11804  0BB4  2BB6               	goto	u5220
 11805  0BB5                     u5221:
 11806  0BB5  2BC5               	goto	l1366
 11807  0BB6                     u5220:
 11808  0BB6                     l5541:
 11809                           
 11810                           ;main.c: 590: if(clkAlarm.alarmVal.s == 59){
 11811  0BB6  303B               	movlw	59
 11812  0BB7  064F               	xorwf	_clkAlarm+2,w
 11813  0BB8  1D03               	btfss	3,2
 11814  0BB9  2BBB               	goto	u5231
 11815  0BBA  2BBC               	goto	u5230
 11816  0BBB                     u5231:
 11817  0BBB  2BBE               	goto	l5545
 11818  0BBC                     u5230:
 11819  0BBC                     l5543:
 11820                           
 11821                           ;main.c: 591: clkAlarm.alarmVal.s = 0;
 11822  0BBC  01CF               	clrf	_clkAlarm+2
 11823                           
 11824                           ;main.c: 592: } else{
 11825  0BBD  2BC5               	goto	l5547
 11826  0BBE                     l5545:
 11827                           
 11828                           ;main.c: 593: clkAlarm.alarmVal.s++;
 11829  0BBE  3001               	movlw	1
 11830  0BBF  0021               	movlb	1	; select bank1
 11831  0BC0  00A0               	movwf	??_editClock^(0+128)
 11832  0BC1  0820               	movf	??_editClock^(0+128),w
 11833  0BC2  0020               	movlb	0	; select bank0
 11834  0BC3  07CF               	addwf	_clkAlarm+2,f
 11835  0BC4  2BC5               	goto	l5547
 11836  0BC5                     l1366:
 11837  0BC5                     l5547:
 11838                           
 11839                           ;main.c: 594: };main.c: 595: };main.c: 596: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
 11840  0BC5  3021               	movlw	33
 11841  0BC6  0021               	movlb	1	; select bank1
 11842  0BC7  00A0               	movwf	??_editClock^(0+128)
 11843  0BC8  3076               	movlw	118
 11844  0BC9                     u5867:
 11845  0BC9  0B89               	decfsz	9,f
 11846  0BCA  2BC9               	goto	u5867
 11847  0BCB  0BA0               	decfsz	??_editClock^(0+128),f
 11848  0BCC  2BC9               	goto	u5867
 11849  0BCD  0000               	nop
 11850  0BCE                     l5549:
 11851                           
 11852                           ;main.c: 597: };main.c: 598: if(modeFlag != 1){
 11853  0BCE  0020               	movlb	0	; select bank0
 11854  0BCF  035A               	decf	_modeFlag,w
 11855  0BD0  045B               	iorwf	_modeFlag+1,w
 11856  0BD1  1903               	btfsc	3,2
 11857  0BD2  2BD4               	goto	u5241
 11858  0BD3  2BD5               	goto	u5240
 11859  0BD4                     u5241:
 11860  0BD4  2B74               	goto	l1359
 11861  0BD5                     u5240:
 11862  0BD5                     l5551:
 11863                           
 11864                           ;main.c: 599: editingClockAlarm = 0;
 11865  0BD5  01DC               	clrf	_editingClockAlarm
 11866  0BD6  01DD               	clrf	_editingClockAlarm+1
 11867  0BD7                     l1377:	
 11868                           ;main.c: 600: break;
 11869                           
 11870  0BD7  0008               	return
 11871  0BD8                     __end_of_editClock:
 11872                           
 11873                           	psect	text8
 11874  0A67                     __ptext8:	
 11875 ;; *************** function _cmd_ra *****************
 11876 ;; Defined at:
 11877 ;;		line 730 in file "main.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;  12937           2    6[BANK1 ] int 
 11880 ;;  12938           1    8[BANK1 ] PTR PTR unsigned char 
 11881 ;;		 -> NULL(0), 
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;  buff            9   10[BANK1 ] unsigned char [9]
 11884 ;;  n               2   19[BANK1 ] int 
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  1    wreg      void 
 11887 ;; Registers used:
 11888 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11894 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11895 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11897 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;Total ram usage:       15 bytes
 11899 ;; Hardware stack levels used:    1
 11900 ;; Hardware stack levels required when called:    9
 11901 ;; This function calls:
 11902 ;;		_putch
 11903 ;; This function is called by:
 11904 ;;		_main
 11905 ;; This function uses a non-reentrant model
 11906 ;;
 11907                           
 11908                           
 11909                           ;psect for function _cmd_ra
 11910  0A67                     _cmd_ra:
 11911  0A67                     l5615:	
 11912                           ;incstack = 0
 11913                           ; Regs used in _cmd_ra: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11914                           
 11915                           
 11916                           ;main.c: 732: uint8_t buff[9];;main.c: 733: buff[0] = (uint8_t)0xFD;
 11917  0A67  30FD               	movlw	253
 11918  0A68  0021               	movlb	1	; select bank1
 11919  0A69  00A9               	movwf	??_cmd_ra^(0+128)
 11920  0A6A  0829               	movf	??_cmd_ra^(0+128),w
 11921  0A6B  00AA               	movwf	cmd_ra@buff^(0+128)
 11922                           
 11923                           ;main.c: 734: buff[1] = (uint8_t)0XC6;
 11924  0A6C  30C6               	movlw	198
 11925  0A6D  00A9               	movwf	??_cmd_ra^(0+128)
 11926  0A6E  0829               	movf	??_cmd_ra^(0+128),w
 11927  0A6F  00AB               	movwf	(cmd_ra@buff^(0+128)+1)
 11928                           
 11929                           ;main.c: 735: buff[2] = clkAlarm.alarmVal.h;
 11930  0A70  0020               	movlb	0	; select bank0
 11931  0A71  084D               	movf	_clkAlarm,w
 11932  0A72  0021               	movlb	1	; select bank1
 11933  0A73  00A9               	movwf	??_cmd_ra^(0+128)
 11934  0A74  0829               	movf	??_cmd_ra^(0+128),w
 11935  0A75  00AC               	movwf	(cmd_ra@buff^(0+128)+2)
 11936                           
 11937                           ;main.c: 736: buff[3] = clkAlarm.alarmVal.m;
 11938  0A76  0020               	movlb	0	; select bank0
 11939  0A77  084E               	movf	_clkAlarm+1,w
 11940  0A78  0021               	movlb	1	; select bank1
 11941  0A79  00A9               	movwf	??_cmd_ra^(0+128)
 11942  0A7A  0829               	movf	??_cmd_ra^(0+128),w
 11943  0A7B  00AD               	movwf	(cmd_ra@buff^(0+128)+3)
 11944                           
 11945                           ;main.c: 737: buff[4] = clkAlarm.alarmVal.s;
 11946  0A7C  0020               	movlb	0	; select bank0
 11947  0A7D  084F               	movf	_clkAlarm+2,w
 11948  0A7E  0021               	movlb	1	; select bank1
 11949  0A7F  00A9               	movwf	??_cmd_ra^(0+128)
 11950  0A80  0829               	movf	??_cmd_ra^(0+128),w
 11951  0A81  00AE               	movwf	(cmd_ra@buff^(0+128)+4)
 11952                           
 11953                           ;main.c: 738: buff[5] = tempAlarm.alarmTemp;
 11954  0A82  0020               	movlb	0	; select bank0
 11955  0A83  0854               	movf	_tempAlarm,w
 11956  0A84  0021               	movlb	1	; select bank1
 11957  0A85  00A9               	movwf	??_cmd_ra^(0+128)
 11958  0A86  0829               	movf	??_cmd_ra^(0+128),w
 11959  0A87  00AF               	movwf	(cmd_ra@buff^(0+128)+5)
 11960                           
 11961                           ;main.c: 739: buff[6] = lumAlarm.alarmLum;
 11962  0A88  0020               	movlb	0	; select bank0
 11963  0A89  0851               	movf	_lumAlarm,w
 11964  0A8A  0021               	movlb	1	; select bank1
 11965  0A8B  00A9               	movwf	??_cmd_ra^(0+128)
 11966  0A8C  0829               	movf	??_cmd_ra^(0+128),w
 11967  0A8D  00B0               	movwf	(cmd_ra@buff^(0+128)+6)
 11968  0A8E                     l5617:
 11969                           
 11970                           ;main.c: 740: buff[7] = ALAF == 'A' ? 1 : 0;
 11971  0A8E  3041               	movlw	65
 11972  0A8F  0020               	movlb	0	; select bank0
 11973  0A90  0665               	xorwf	_ALAF,w
 11974  0A91  1903               	btfsc	3,2
 11975  0A92  2A94               	goto	u5381
 11976  0A93  2A96               	goto	u5380
 11977  0A94                     u5381:
 11978  0A94  3001               	movlw	1
 11979  0A95  2A97               	goto	u5390
 11980  0A96                     u5380:
 11981  0A96  3000               	movlw	0
 11982  0A97                     u5390:
 11983  0A97  0021               	movlb	1	; select bank1
 11984  0A98  00A9               	movwf	??_cmd_ra^(0+128)
 11985  0A99  0829               	movf	??_cmd_ra^(0+128),w
 11986  0A9A  00B1               	movwf	(cmd_ra@buff^(0+128)+7)
 11987  0A9B                     l5619:
 11988                           
 11989                           ;main.c: 741: buff[8] = (uint8_t)0xFE;
 11990  0A9B  30FE               	movlw	254
 11991  0A9C  00A9               	movwf	??_cmd_ra^(0+128)
 11992  0A9D  0829               	movf	??_cmd_ra^(0+128),w
 11993  0A9E  00B2               	movwf	(cmd_ra@buff^(0+128)+8)
 11994  0A9F                     l5621:
 11995                           
 11996                           ;main.c: 742: int n = 0;
 11997  0A9F  01B3               	clrf	cmd_ra@n^(0+128)
 11998  0AA0  01B4               	clrf	(cmd_ra@n+1)^(0+128)
 11999                           
 12000                           ;main.c: 743: while(n<9){
 12001  0AA1  2AB0               	goto	l5627
 12002  0AA2                     l5623:
 12003                           
 12004                           ;main.c: 744: putch(buff[n]);
 12005  0AA2  0021               	movlb	1	; select bank1
 12006  0AA3  0833               	movf	cmd_ra@n^(0+128),w
 12007  0AA4  3EAA               	addlw	(low (cmd_ra@buff| 0))& (0+255)
 12008  0AA5  0086               	movwf	6
 12009  0AA6  0187               	clrf	7
 12010  0AA7  0801               	movf	1,w
 12011  0AA8  3194  248F  318A   	fcall	_putch
 12012  0AAB                     l5625:
 12013                           
 12014                           ;main.c: 745: n++;
 12015  0AAB  3001               	movlw	1
 12016  0AAC  0021               	movlb	1	; select bank1
 12017  0AAD  07B3               	addwf	cmd_ra@n^(0+128),f
 12018  0AAE  3000               	movlw	0
 12019  0AAF  3DB4               	addwfc	(cmd_ra@n+1)^(0+128),f
 12020  0AB0                     l5627:
 12021  0AB0  0834               	movf	(cmd_ra@n+1)^(0+128),w
 12022  0AB1  3A80               	xorlw	128
 12023  0AB2  00A9               	movwf	??_cmd_ra^(0+128)
 12024  0AB3  3080               	movlw	128
 12025  0AB4  0229               	subwf	??_cmd_ra^(0+128),w
 12026  0AB5  1D03               	skipz
 12027  0AB6  2AB9               	goto	u5405
 12028  0AB7  3009               	movlw	9
 12029  0AB8  0233               	subwf	cmd_ra@n^(0+128),w
 12030  0AB9                     u5405:
 12031  0AB9  1C03               	skipc
 12032  0ABA  2ABC               	goto	u5401
 12033  0ABB  2ABD               	goto	u5400
 12034  0ABC                     u5401:
 12035  0ABC  2AA2               	goto	l5623
 12036  0ABD                     u5400:
 12037  0ABD                     l1438:
 12038  0ABD  0008               	return
 12039  0ABE                     __end_of_cmd_ra:
 12040                           
 12041                           	psect	text9
 12042  0948                     __ptext9:	
 12043 ;; *************** function _cmd_rc *****************
 12044 ;; Defined at:
 12045 ;;		line 699 in file "main.c"
 12046 ;; Parameters:    Size  Location     Type
 12047 ;;  12923           2    6[BANK1 ] int 
 12048 ;;  12924           1    8[BANK1 ] PTR PTR unsigned char 
 12049 ;;		 -> NULL(0), 
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;  buff            6   10[BANK1 ] unsigned char [6]
 12052 ;;  n               2   16[BANK1 ] int 
 12053 ;; Return value:  Size  Location     Type
 12054 ;;                  1    wreg      void 
 12055 ;; Registers used:
 12056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12057 ;; Tracked objects:
 12058 ;;		On entry : 0/0
 12059 ;;		On exit  : 0/0
 12060 ;;		Unchanged: 0/0
 12061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12062 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12063 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12064 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12065 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 12066 ;;Total ram usage:       12 bytes
 12067 ;; Hardware stack levels used:    1
 12068 ;; Hardware stack levels required when called:    9
 12069 ;; This function calls:
 12070 ;;		_putch
 12071 ;; This function is called by:
 12072 ;;		_main
 12073 ;; This function uses a non-reentrant model
 12074 ;;
 12075                           
 12076                           
 12077                           ;psect for function _cmd_rc
 12078  0948                     _cmd_rc:
 12079  0948                     l5595:	
 12080                           ;incstack = 0
 12081                           ; Regs used in _cmd_rc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12082                           
 12083                           
 12084                           ;main.c: 701: uint8_t buff[6];;main.c: 702: buff[0] = (uint8_t)0xFD;
 12085  0948  30FD               	movlw	253
 12086  0949  0021               	movlb	1	; select bank1
 12087  094A  00A9               	movwf	??_cmd_rc^(0+128)
 12088  094B  0829               	movf	??_cmd_rc^(0+128),w
 12089  094C  00AA               	movwf	cmd_rc@buff^(0+128)
 12090                           
 12091                           ;main.c: 703: buff[1] = (uint8_t)0xC0;
 12092  094D  30C0               	movlw	192
 12093  094E  00A9               	movwf	??_cmd_rc^(0+128)
 12094  094F  0829               	movf	??_cmd_rc^(0+128),w
 12095  0950  00AB               	movwf	(cmd_rc@buff^(0+128)+1)
 12096                           
 12097                           ;main.c: 704: buff[2] = t.h;
 12098  0951  0020               	movlb	0	; select bank0
 12099  0952  0857               	movf	_t,w
 12100  0953  0021               	movlb	1	; select bank1
 12101  0954  00A9               	movwf	??_cmd_rc^(0+128)
 12102  0955  0829               	movf	??_cmd_rc^(0+128),w
 12103  0956  00AC               	movwf	(cmd_rc@buff^(0+128)+2)
 12104                           
 12105                           ;main.c: 705: buff[3] = t.m;
 12106  0957  0020               	movlb	0	; select bank0
 12107  0958  0858               	movf	_t+1,w
 12108  0959  0021               	movlb	1	; select bank1
 12109  095A  00A9               	movwf	??_cmd_rc^(0+128)
 12110  095B  0829               	movf	??_cmd_rc^(0+128),w
 12111  095C  00AD               	movwf	(cmd_rc@buff^(0+128)+3)
 12112                           
 12113                           ;main.c: 706: buff[4] = t.s;
 12114  095D  0020               	movlb	0	; select bank0
 12115  095E  0859               	movf	_t+2,w
 12116  095F  0021               	movlb	1	; select bank1
 12117  0960  00A9               	movwf	??_cmd_rc^(0+128)
 12118  0961  0829               	movf	??_cmd_rc^(0+128),w
 12119  0962  00AE               	movwf	(cmd_rc@buff^(0+128)+4)
 12120                           
 12121                           ;main.c: 707: buff[5] = (uint8_t)0xFE;
 12122  0963  30FE               	movlw	254
 12123  0964  00A9               	movwf	??_cmd_rc^(0+128)
 12124  0965  0829               	movf	??_cmd_rc^(0+128),w
 12125  0966  00AF               	movwf	(cmd_rc@buff^(0+128)+5)
 12126  0967                     l5597:
 12127                           
 12128                           ;main.c: 708: int n = 0;
 12129  0967  01B0               	clrf	cmd_rc@n^(0+128)
 12130  0968  01B1               	clrf	(cmd_rc@n+1)^(0+128)
 12131                           
 12132                           ;main.c: 709: while(n<6){
 12133  0969  2978               	goto	l5603
 12134  096A                     l5599:
 12135                           
 12136                           ;main.c: 710: putch(buff[n]);
 12137  096A  0021               	movlb	1	; select bank1
 12138  096B  0830               	movf	cmd_rc@n^(0+128),w
 12139  096C  3EAA               	addlw	(low (cmd_rc@buff| 0))& (0+255)
 12140  096D  0086               	movwf	6
 12141  096E  0187               	clrf	7
 12142  096F  0801               	movf	1,w
 12143  0970  3194  248F  3189   	fcall	_putch
 12144  0973                     l5601:
 12145                           
 12146                           ;main.c: 711: n++;
 12147  0973  3001               	movlw	1
 12148  0974  0021               	movlb	1	; select bank1
 12149  0975  07B0               	addwf	cmd_rc@n^(0+128),f
 12150  0976  3000               	movlw	0
 12151  0977  3DB1               	addwfc	(cmd_rc@n+1)^(0+128),f
 12152  0978                     l5603:
 12153  0978  0831               	movf	(cmd_rc@n+1)^(0+128),w
 12154  0979  3A80               	xorlw	128
 12155  097A  00A9               	movwf	??_cmd_rc^(0+128)
 12156  097B  3080               	movlw	128
 12157  097C  0229               	subwf	??_cmd_rc^(0+128),w
 12158  097D  1D03               	skipz
 12159  097E  2981               	goto	u5365
 12160  097F  3006               	movlw	6
 12161  0980  0230               	subwf	cmd_rc@n^(0+128),w
 12162  0981                     u5365:
 12163  0981  1C03               	skipc
 12164  0982  2984               	goto	u5361
 12165  0983  2985               	goto	u5360
 12166  0984                     u5361:
 12167  0984  296A               	goto	l5599
 12168  0985                     u5360:
 12169  0985                     l1426:
 12170  0985  0008               	return
 12171  0986                     __end_of_cmd_rc:
 12172                           
 12173                           	psect	text10
 12174  08D4                     __ptext10:	
 12175 ;; *************** function _cmd_rtl *****************
 12176 ;; Defined at:
 12177 ;;		line 715 in file "main.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;  12930           2    6[BANK1 ] int 
 12180 ;;  12931           1    8[BANK1 ] PTR PTR unsigned char 
 12181 ;;		 -> NULL(0), 
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;  buff            5   10[BANK1 ] unsigned char [5]
 12184 ;;  n               2   15[BANK1 ] int 
 12185 ;; Return value:  Size  Location     Type
 12186 ;;                  1    wreg      void 
 12187 ;; Registers used:
 12188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12189 ;; Tracked objects:
 12190 ;;		On entry : 0/0
 12191 ;;		On exit  : 0/0
 12192 ;;		Unchanged: 0/0
 12193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12194 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12197 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
 12198 ;;Total ram usage:       11 bytes
 12199 ;; Hardware stack levels used:    1
 12200 ;; Hardware stack levels required when called:    9
 12201 ;; This function calls:
 12202 ;;		_putch
 12203 ;; This function is called by:
 12204 ;;		_main
 12205 ;; This function uses a non-reentrant model
 12206 ;;
 12207                           
 12208                           
 12209                           ;psect for function _cmd_rtl
 12210  08D4                     _cmd_rtl:
 12211  08D4                     l5605:	
 12212                           ;incstack = 0
 12213                           ; Regs used in _cmd_rtl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12214                           
 12215                           
 12216                           ;main.c: 717: uint8_t buff[5];;main.c: 718: buff[0] = (uint8_t)0xFD;
 12217  08D4  30FD               	movlw	253
 12218  08D5  0021               	movlb	1	; select bank1
 12219  08D6  00A9               	movwf	??_cmd_rtl^(0+128)
 12220  08D7  0829               	movf	??_cmd_rtl^(0+128),w
 12221  08D8  00AA               	movwf	cmd_rtl@buff^(0+128)
 12222                           
 12223                           ;main.c: 719: buff[1] = (uint8_t)0XC2;
 12224  08D9  30C2               	movlw	194
 12225  08DA  00A9               	movwf	??_cmd_rtl^(0+128)
 12226  08DB  0829               	movf	??_cmd_rtl^(0+128),w
 12227  08DC  00AB               	movwf	(cmd_rtl@buff^(0+128)+1)
 12228                           
 12229                           ;main.c: 720: buff[2] = temp;
 12230  08DD  0020               	movlb	0	; select bank0
 12231  08DE  0863               	movf	_temp,w
 12232  08DF  0021               	movlb	1	; select bank1
 12233  08E0  00A9               	movwf	??_cmd_rtl^(0+128)
 12234  08E1  0829               	movf	??_cmd_rtl^(0+128),w
 12235  08E2  00AC               	movwf	(cmd_rtl@buff^(0+128)+2)
 12236                           
 12237                           ;main.c: 721: buff[3] = lumLevel;
 12238  08E3  0020               	movlb	0	; select bank0
 12239  08E4  0862               	movf	_lumLevel,w
 12240  08E5  0021               	movlb	1	; select bank1
 12241  08E6  00A9               	movwf	??_cmd_rtl^(0+128)
 12242  08E7  0829               	movf	??_cmd_rtl^(0+128),w
 12243  08E8  00AD               	movwf	(cmd_rtl@buff^(0+128)+3)
 12244                           
 12245                           ;main.c: 722: buff[4] = (uint8_t)0xFE;
 12246  08E9  30FE               	movlw	254
 12247  08EA  00A9               	movwf	??_cmd_rtl^(0+128)
 12248  08EB  0829               	movf	??_cmd_rtl^(0+128),w
 12249  08EC  00AE               	movwf	(cmd_rtl@buff^(0+128)+4)
 12250  08ED                     l5607:
 12251                           
 12252                           ;main.c: 723: int n = 0;
 12253  08ED  01AF               	clrf	cmd_rtl@n^(0+128)
 12254  08EE  01B0               	clrf	(cmd_rtl@n+1)^(0+128)
 12255                           
 12256                           ;main.c: 724: while(n<5){
 12257  08EF  28FE               	goto	l5613
 12258  08F0                     l5609:
 12259                           
 12260                           ;main.c: 725: putch(buff[n]);
 12261  08F0  0021               	movlb	1	; select bank1
 12262  08F1  082F               	movf	cmd_rtl@n^(0+128),w
 12263  08F2  3EAA               	addlw	(low (cmd_rtl@buff| 0))& (0+255)
 12264  08F3  0086               	movwf	6
 12265  08F4  0187               	clrf	7
 12266  08F5  0801               	movf	1,w
 12267  08F6  3194  248F  3188   	fcall	_putch
 12268  08F9                     l5611:
 12269                           
 12270                           ;main.c: 726: n++;
 12271  08F9  3001               	movlw	1
 12272  08FA  0021               	movlb	1	; select bank1
 12273  08FB  07AF               	addwf	cmd_rtl@n^(0+128),f
 12274  08FC  3000               	movlw	0
 12275  08FD  3DB0               	addwfc	(cmd_rtl@n+1)^(0+128),f
 12276  08FE                     l5613:
 12277  08FE  0830               	movf	(cmd_rtl@n+1)^(0+128),w
 12278  08FF  3A80               	xorlw	128
 12279  0900  00A9               	movwf	??_cmd_rtl^(0+128)
 12280  0901  3080               	movlw	128
 12281  0902  0229               	subwf	??_cmd_rtl^(0+128),w
 12282  0903  1D03               	skipz
 12283  0904  2907               	goto	u5375
 12284  0905  3005               	movlw	5
 12285  0906  022F               	subwf	cmd_rtl@n^(0+128),w
 12286  0907                     u5375:
 12287  0907  1C03               	skipc
 12288  0908  290A               	goto	u5371
 12289  0909  290B               	goto	u5370
 12290  090A                     u5371:
 12291  090A  28F0               	goto	l5609
 12292  090B                     u5370:
 12293  090B                     l1432:
 12294  090B  0008               	return
 12295  090C                     __end_of_cmd_rtl:
 12296                           
 12297                           	psect	text11
 12298  148F                     __ptext11:	
 12299 ;; *************** function _putch *****************
 12300 ;; Defined at:
 12301 ;;		line 176 in file "mcc_generated_files/eusart.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;  txData          1    wreg     unsigned char 
 12304 ;; Auto vars:     Size  Location     Type
 12305 ;;  txData          1    2[BANK1 ] unsigned char 
 12306 ;; Return value:  Size  Location     Type
 12307 ;;                  1    wreg      void 
 12308 ;; Registers used:
 12309 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12310 ;; Tracked objects:
 12311 ;;		On entry : 0/0
 12312 ;;		On exit  : 0/0
 12313 ;;		Unchanged: 0/0
 12314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;Total ram usage:        1 bytes
 12320 ;; Hardware stack levels used:    1
 12321 ;; Hardware stack levels required when called:    8
 12322 ;; This function calls:
 12323 ;;		_EUSART_Write
 12324 ;; This function is called by:
 12325 ;;		_cmd_rc
 12326 ;;		_cmd_rtl
 12327 ;;		_cmd_ra
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           
 12332                           ;psect for function _putch
 12333  148F                     _putch:
 12334                           
 12335                           ;incstack = 0
 12336                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12337                           ;putch@txData stored from wreg
 12338  148F  0021               	movlb	1	; select bank1
 12339  1490  00A2               	movwf	putch@txData^(0+128)
 12340  1491                     l5291:
 12341                           
 12342                           ;eusart.c: 178: EUSART_Write(txData);
 12343  1491  0822               	movf	putch@txData^(0+128),w
 12344  1492  3197  27A8  3194   	fcall	_EUSART_Write
 12345  1495                     l1558:
 12346  1495  0008               	return
 12347  1496                     __end_of_putch:
 12348                           
 12349                           	psect	text12
 12350  17A8                     __ptext12:	
 12351 ;; *************** function _EUSART_Write *****************
 12352 ;; Defined at:
 12353 ;;		line 148 in file "mcc_generated_files/eusart.c"
 12354 ;; Parameters:    Size  Location     Type
 12355 ;;  txData          1    wreg     unsigned char 
 12356 ;; Auto vars:     Size  Location     Type
 12357 ;;  txData          1    1[BANK1 ] unsigned char 
 12358 ;; Return value:  Size  Location     Type
 12359 ;;                  1    wreg      void 
 12360 ;; Registers used:
 12361 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12362 ;; Tracked objects:
 12363 ;;		On entry : 0/0
 12364 ;;		On exit  : 0/0
 12365 ;;		Unchanged: 0/0
 12366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12368 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12369 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12370 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12371 ;;Total ram usage:        2 bytes
 12372 ;; Hardware stack levels used:    1
 12373 ;; Hardware stack levels required when called:    7
 12374 ;; This function calls:
 12375 ;;		Nothing
 12376 ;; This function is called by:
 12377 ;;		_putch
 12378 ;; This function uses a non-reentrant model
 12379 ;;
 12380                           
 12381                           
 12382                           ;psect for function _EUSART_Write
 12383  17A8                     _EUSART_Write:
 12384                           
 12385                           ;incstack = 0
 12386                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12387                           ;EUSART_Write@txData stored from wreg
 12388  17A8  0021               	movlb	1	; select bank1
 12389  17A9  00A1               	movwf	EUSART_Write@txData^(0+128)
 12390  17AA                     l4719:
 12391  17AA                     l4721:	
 12392                           ;eusart.c: 150: while(0 == eusartTxBufferRemaining)
 12393                           
 12394  17AA  0862               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 12395  17AB  1903               	btfsc	3,2
 12396  17AC  2FAE               	goto	u4031
 12397  17AD  2FAF               	goto	u4030
 12398  17AE                     u4031:
 12399  17AE  2FAA               	goto	l4721
 12400  17AF                     u4030:
 12401  17AF                     l1548:
 12402                           
 12403                           ;eusart.c: 152: };eusart.c: 154: if(0 == PIE3bits.TXIE)
 12404  17AF  002E               	movlb	14	; select bank14
 12405  17B0  1A19               	btfsc	25,4	;volatile
 12406  17B1  2FB3               	goto	u4041
 12407  17B2  2FB4               	goto	u4040
 12408  17B3                     u4041:
 12409  17B3  2FB9               	goto	l1549
 12410  17B4                     u4040:
 12411  17B4                     l4723:
 12412                           
 12413                           ;eusart.c: 155: {;eusart.c: 156: TX1REG = txData;
 12414  17B4  0021               	movlb	1	; select bank1
 12415  17B5  0821               	movf	EUSART_Write@txData^(0+128),w
 12416  17B6  0022               	movlb	2	; select bank2
 12417  17B7  009A               	movwf	26	;volatile
 12418                           
 12419                           ;eusart.c: 157: }
 12420  17B8  2FD1               	goto	l4735
 12421  17B9                     l1549:
 12422                           
 12423                           ;eusart.c: 158: else;eusart.c: 159: {;eusart.c: 160: PIE3bits.TXIE = 0;
 12424  17B9  1219               	bcf	25,4	;volatile
 12425  17BA                     l4725:
 12426                           
 12427                           ;eusart.c: 161: eusartTxBuffer[eusartTxHead++] = txData;
 12428  17BA  0021               	movlb	1	; select bank1
 12429  17BB  0821               	movf	EUSART_Write@txData^(0+128),w
 12430  17BC  00A0               	movwf	??_EUSART_Write^(0+128)
 12431  17BD  086B               	movf	_eusartTxHead^(0+128),w
 12432  17BE  3E28               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 12433  17BF  0086               	movwf	6
 12434  17C0  3001               	movlw	1	; select bank2/3
 12435  17C1  0087               	movwf	7
 12436  17C2  0820               	movf	??_EUSART_Write^(0+128),w
 12437  17C3  0081               	movwf	1
 12438  17C4                     l4727:
 12439  17C4  3001               	movlw	1
 12440  17C5  00A0               	movwf	??_EUSART_Write^(0+128)
 12441  17C6  0820               	movf	??_EUSART_Write^(0+128),w
 12442  17C7  07EB               	addwf	_eusartTxHead^(0+128),f	;volatile
 12443  17C8                     l4729:
 12444                           
 12445                           ;eusart.c: 162: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 12446  17C8  3008               	movlw	8
 12447  17C9  026B               	subwf	_eusartTxHead^(0+128),w	;volatile
 12448  17CA  1C03               	skipc
 12449  17CB  2FCD               	goto	u4051
 12450  17CC  2FCE               	goto	u4050
 12451  17CD                     u4051:
 12452  17CD  2FCF               	goto	l4733
 12453  17CE                     u4050:
 12454  17CE                     l4731:
 12455                           
 12456                           ;eusart.c: 163: {;eusart.c: 164: eusartTxHead = 0;
 12457  17CE  01EB               	clrf	_eusartTxHead^(0+128)	;volatile
 12458  17CF                     l4733:
 12459                           
 12460                           ;eusart.c: 165: };eusart.c: 166: eusartTxBufferRemaining--;
 12461  17CF  3001               	movlw	1
 12462  17D0  02E2               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 12463  17D1                     l4735:
 12464                           
 12465                           ;eusart.c: 167: };eusart.c: 168: PIE3bits.TXIE = 1;
 12466  17D1  002E               	movlb	14	; select bank14
 12467  17D2  1619               	bsf	25,4	;volatile
 12468  17D3                     l1552:
 12469  17D3  0008               	return
 12470  17D4                     __end_of_EUSART_Write:
 12471                           
 12472                           	psect	text13
 12473  16AF                     __ptext13:	
 12474 ;; *************** function ___wmul *****************
 12475 ;; Defined at:
 12476 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;  multiplier      2    0[BANK1 ] unsigned int 
 12479 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 12480 ;; Auto vars:     Size  Location     Type
 12481 ;;  product         2    4[BANK1 ] unsigned int 
 12482 ;; Return value:  Size  Location     Type
 12483 ;;                  2    0[BANK1 ] unsigned int 
 12484 ;; Registers used:
 12485 ;;		wreg, status,2, status,0
 12486 ;; Tracked objects:
 12487 ;;		On entry : 0/0
 12488 ;;		On exit  : 0/0
 12489 ;;		Unchanged: 0/0
 12490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12491 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12492 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12494 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12495 ;;Total ram usage:        6 bytes
 12496 ;; Hardware stack levels used:    1
 12497 ;; Hardware stack levels required when called:    7
 12498 ;; This function calls:
 12499 ;;		Nothing
 12500 ;; This function is called by:
 12501 ;;		_main
 12502 ;;		_map
 12503 ;; This function uses a non-reentrant model
 12504 ;;
 12505                           
 12506                           
 12507                           ;psect for function ___wmul
 12508  16AF                     ___wmul:
 12509  16AF                     l5663:	
 12510                           ;incstack = 0
 12511                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12512                           
 12513  16AF  0021               	movlb	1	; select bank1
 12514  16B0  01A4               	clrf	___wmul@product^(0+128)
 12515  16B1  01A5               	clrf	(___wmul@product+1)^(0+128)
 12516  16B2                     l5665:
 12517  16B2  1C20               	btfss	___wmul@multiplier^(0+128),0
 12518  16B3  2EB5               	goto	u5451
 12519  16B4  2EB6               	goto	u5450
 12520  16B5                     u5451:
 12521  16B5  2EBA               	goto	l1778
 12522  16B6                     u5450:
 12523  16B6                     l5667:
 12524  16B6  0822               	movf	___wmul@multiplicand^(0+128),w
 12525  16B7  07A4               	addwf	___wmul@product^(0+128),f
 12526  16B8  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
 12527  16B9  3DA5               	addwfc	(___wmul@product+1)^(0+128),f
 12528  16BA                     l1778:
 12529  16BA  3001               	movlw	1
 12530  16BB                     u5465:
 12531  16BB  35A2               	lslf	___wmul@multiplicand^(0+128),f
 12532  16BC  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
 12533  16BD  0B89               	decfsz	9,f
 12534  16BE  2EBB               	goto	u5465
 12535  16BF                     l5669:
 12536  16BF  3001               	movlw	1
 12537  16C0                     u5475:
 12538  16C0  36A1               	lsrf	(___wmul@multiplier+1)^(0+128),f
 12539  16C1  0CA0               	rrf	___wmul@multiplier^(0+128),f
 12540  16C2  0B89               	decfsz	9,f
 12541  16C3  2EC0               	goto	u5475
 12542  16C4                     l5671:
 12543  16C4  0820               	movf	___wmul@multiplier^(0+128),w
 12544  16C5  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
 12545  16C6  1D03               	btfss	3,2
 12546  16C7  2EC9               	goto	u5481
 12547  16C8  2ECA               	goto	u5480
 12548  16C9                     u5481:
 12549  16C9  2EB2               	goto	l5665
 12550  16CA                     u5480:
 12551  16CA                     l5673:
 12552  16CA  0825               	movf	(___wmul@product+1)^(0+128),w
 12553  16CB  00A1               	movwf	(?___wmul+1)^(0+128)
 12554  16CC  0824               	movf	___wmul@product^(0+128),w
 12555  16CD  00A0               	movwf	?___wmul^(0+128)
 12556  16CE                     l1780:
 12557  16CE  0008               	return
 12558  16CF                     __end_of___wmul:
 12559                           
 12560                           	psect	text14
 12561  1456                     __ptext14:	
 12562 ;; *************** function _TMR2_StopTimer *****************
 12563 ;; Defined at:
 12564 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 12565 ;; Parameters:    Size  Location     Type
 12566 ;;		None
 12567 ;; Auto vars:     Size  Location     Type
 12568 ;;		None
 12569 ;; Return value:  Size  Location     Type
 12570 ;;                  1    wreg      void 
 12571 ;; Registers used:
 12572 ;;		status,2, status,0, pclath, cstack
 12573 ;; Tracked objects:
 12574 ;;		On entry : 0/0
 12575 ;;		On exit  : 0/0
 12576 ;;		Unchanged: 0/0
 12577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12582 ;;Total ram usage:        0 bytes
 12583 ;; Hardware stack levels used:    1
 12584 ;; Hardware stack levels required when called:    8
 12585 ;; This function calls:
 12586 ;;		_TMR2_Stop
 12587 ;; This function is called by:
 12588 ;;		_main
 12589 ;; This function uses a non-reentrant model
 12590 ;;
 12591                           
 12592                           
 12593                           ;psect for function _TMR2_StopTimer
 12594  1456                     _TMR2_StopTimer:
 12595  1456                     l5379:	
 12596                           ;incstack = 0
 12597                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 12598                           
 12599                           
 12600                           ;tmr2.c: 119: TMR2_Stop();
 12601  1456  3194  244B  3194   	fcall	_TMR2_Stop
 12602  1459                     l805:
 12603  1459  0008               	return
 12604  145A                     __end_of_TMR2_StopTimer:
 12605                           
 12606                           	psect	text15
 12607  144B                     __ptext15:	
 12608 ;; *************** function _TMR2_Stop *****************
 12609 ;; Defined at:
 12610 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 12611 ;; Parameters:    Size  Location     Type
 12612 ;;		None
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;		None
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  1    wreg      void 
 12617 ;; Registers used:
 12618 ;;		None
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12628 ;;Total ram usage:        0 bytes
 12629 ;; Hardware stack levels used:    1
 12630 ;; Hardware stack levels required when called:    7
 12631 ;; This function calls:
 12632 ;;		Nothing
 12633 ;; This function is called by:
 12634 ;;		_TMR2_StopTimer
 12635 ;; This function uses a non-reentrant model
 12636 ;;
 12637                           
 12638                           
 12639                           ;psect for function _TMR2_Stop
 12640  144B                     _TMR2_Stop:
 12641  144B                     l4975:	
 12642                           ;incstack = 0
 12643                           ; Regs used in _TMR2_Stop: []
 12644                           
 12645                           
 12646                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 12647  144B  0025               	movlb	5	; select bank5
 12648  144C  138E               	bcf	14,7	;volatile
 12649  144D                     l802:
 12650  144D  0008               	return
 12651  144E                     __end_of_TMR2_Stop:
 12652                           
 12653                           	psect	text16
 12654  16F0                     __ptext16:	
 12655 ;; *************** function _SYSTEM_Initialize *****************
 12656 ;; Defined at:
 12657 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;		None
 12660 ;; Auto vars:     Size  Location     Type
 12661 ;;		None
 12662 ;; Return value:  Size  Location     Type
 12663 ;;                  1    wreg      void 
 12664 ;; Registers used:
 12665 ;;		wreg, status,2, status,0, pclath, cstack
 12666 ;; Tracked objects:
 12667 ;;		On entry : 0/0
 12668 ;;		On exit  : 0/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12675 ;;Total ram usage:        0 bytes
 12676 ;; Hardware stack levels used:    1
 12677 ;; Hardware stack levels required when called:    9
 12678 ;; This function calls:
 12679 ;;		_ADCC_Initialize
 12680 ;;		_EUSART_Initialize
 12681 ;;		_EXT_INT_Initialize
 12682 ;;		_OSCILLATOR_Initialize
 12683 ;;		_PIN_MANAGER_Initialize
 12684 ;;		_PMD_Initialize
 12685 ;;		_PWM6_Initialize
 12686 ;;		_TMR1_Initialize
 12687 ;;		_TMR2_Initialize
 12688 ;;		_TMR3_Initialize
 12689 ;;		_TMR5_Initialize
 12690 ;; This function is called by:
 12691 ;;		_main
 12692 ;; This function uses a non-reentrant model
 12693 ;;
 12694                           
 12695                           
 12696                           ;psect for function _SYSTEM_Initialize
 12697  16F0                     _SYSTEM_Initialize:
 12698  16F0                     l5315:	
 12699                           ;incstack = 0
 12700                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12701                           
 12702                           
 12703                           ;mcc.c: 52: PMD_Initialize();
 12704  16F0  3194  24A5  3196   	fcall	_PMD_Initialize
 12705  16F3                     l5317:
 12706                           
 12707                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 12708  16F3  3189  2186  3196   	fcall	_PIN_MANAGER_Initialize
 12709  16F6                     l5319:
 12710                           
 12711                           ;mcc.c: 54: OSCILLATOR_Initialize();
 12712  16F6  3187  27F6  3196   	fcall	_OSCILLATOR_Initialize
 12713  16F9                     l5321:
 12714                           
 12715                           ;mcc.c: 55: PWM6_Initialize();
 12716  16F9  3194  24D8  3196   	fcall	_PWM6_Initialize
 12717  16FC                     l5323:
 12718                           
 12719                           ;mcc.c: 56: ADCC_Initialize();
 12720  16FC  3195  25B0  3196   	fcall	_ADCC_Initialize
 12721  16FF                     l5325:
 12722                           
 12723                           ;mcc.c: 57: TMR3_Initialize();
 12724  16FF  3196  2671  3196   	fcall	_TMR3_Initialize
 12725  1702                     l5327:
 12726                           
 12727                           ;mcc.c: 58: TMR2_Initialize();
 12728  1702  3194  24F3  3196   	fcall	_TMR2_Initialize
 12729  1705                     l5329:
 12730                           
 12731                           ;mcc.c: 59: TMR5_Initialize();
 12732  1705  3196  2690  3196   	fcall	_TMR5_Initialize
 12733  1708                     l5331:
 12734                           
 12735                           ;mcc.c: 60: EXT_INT_Initialize();
 12736  1708  3194  24E5  3196   	fcall	_EXT_INT_Initialize
 12737  170B                     l5333:
 12738                           
 12739                           ;mcc.c: 61: TMR1_Initialize();
 12740  170B  3196  2652  3196   	fcall	_TMR1_Initialize
 12741  170E                     l5335:
 12742                           
 12743                           ;mcc.c: 62: EUSART_Initialize();
 12744  170E  3197  277D  3196   	fcall	_EUSART_Initialize
 12745  1711                     l186:
 12746  1711  0008               	return
 12747  1712                     __end_of_SYSTEM_Initialize:
 12748                           
 12749                           	psect	text17
 12750  1690                     __ptext17:	
 12751 ;; *************** function _TMR5_Initialize *****************
 12752 ;; Defined at:
 12753 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 12754 ;; Parameters:    Size  Location     Type
 12755 ;;		None
 12756 ;; Auto vars:     Size  Location     Type
 12757 ;;		None
 12758 ;; Return value:  Size  Location     Type
 12759 ;;                  1    wreg      void 
 12760 ;; Registers used:
 12761 ;;		wreg, status,2, status,0, pclath, cstack
 12762 ;; Tracked objects:
 12763 ;;		On entry : 0/0
 12764 ;;		On exit  : 0/0
 12765 ;;		Unchanged: 0/0
 12766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12771 ;;Total ram usage:        0 bytes
 12772 ;; Hardware stack levels used:    1
 12773 ;; Hardware stack levels required when called:    8
 12774 ;; This function calls:
 12775 ;;		_TMR5_SetInterruptHandler
 12776 ;; This function is called by:
 12777 ;;		_SYSTEM_Initialize
 12778 ;; This function uses a non-reentrant model
 12779 ;;
 12780                           
 12781                           
 12782                           ;psect for function _TMR5_Initialize
 12783  1690                     _TMR5_Initialize:
 12784  1690                     l4861:	
 12785                           ;incstack = 0
 12786                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12787                           
 12788                           
 12789                           ;tmr5.c: 69: T5GCON = 0x00;
 12790  1690  0024               	movlb	4	; select bank4
 12791  1691  019B               	clrf	27	;volatile
 12792                           
 12793                           ;tmr5.c: 72: T5GATE = 0x00;
 12794  1692  019C               	clrf	28	;volatile
 12795  1693                     l4863:
 12796                           
 12797                           ;tmr5.c: 75: T5CLK = 0x04;
 12798  1693  3004               	movlw	4
 12799  1694  009D               	movwf	29	;volatile
 12800  1695                     l4865:
 12801                           
 12802                           ;tmr5.c: 78: TMR5H = 0x4A;
 12803  1695  304A               	movlw	74
 12804  1696  0099               	movwf	25	;volatile
 12805  1697                     l4867:
 12806                           
 12807                           ;tmr5.c: 81: TMR5L = 0x5C;
 12808  1697  305C               	movlw	92
 12809  1698  0098               	movwf	24	;volatile
 12810  1699                     l4869:
 12811                           
 12812                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 12813  1699  0819               	movf	25,w	;volatile
 12814  169A  0021               	movlb	1	; select bank1
 12815  169B  00DB               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 12816  169C  0024               	movlb	4	; select bank4
 12817  169D  0818               	movf	24,w	;volatile
 12818  169E  0021               	movlb	1	; select bank1
 12819  169F  00DA               	movwf	_timer5ReloadVal^(0+128)	;volatile
 12820  16A0                     l4871:
 12821                           
 12822                           ;tmr5.c: 87: PIR4bits.TMR5IF = 0;
 12823  16A0  002E               	movlb	14	; select bank14
 12824  16A1  1210               	bcf	16,4	;volatile
 12825  16A2                     l4873:
 12826                           
 12827                           ;tmr5.c: 90: PIE4bits.TMR5IE = 1;
 12828  16A2  161A               	bsf	26,4	;volatile
 12829  16A3                     l4875:
 12830                           
 12831                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 12832  16A3  30FF               	movlw	low _TMR5_DefaultInterruptHandler
 12833  16A4  0021               	movlb	1	; select bank1
 12834  16A5  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
 12835  16A6  3007               	movlw	high _TMR5_DefaultInterruptHandler
 12836  16A7  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
 12837  16A8  3194  2476  3196   	fcall	_TMR5_SetInterruptHandler
 12838  16AB                     l4877:
 12839                           
 12840                           ;tmr5.c: 96: T5CON = 0x15;
 12841  16AB  3015               	movlw	21
 12842  16AC  0024               	movlb	4	; select bank4
 12843  16AD  009A               	movwf	26	;volatile
 12844  16AE                     l713:
 12845  16AE  0008               	return
 12846  16AF                     __end_of_TMR5_Initialize:
 12847                           
 12848                           	psect	text18
 12849  1476                     __ptext18:	
 12850 ;; *************** function _TMR5_SetInterruptHandler *****************
 12851 ;; Defined at:
 12852 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 12853 ;; Parameters:    Size  Location     Type
 12854 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 12855 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
 12856 ;; Auto vars:     Size  Location     Type
 12857 ;;		None
 12858 ;; Return value:  Size  Location     Type
 12859 ;;                  1    wreg      void 
 12860 ;; Registers used:
 12861 ;;		wreg
 12862 ;; Tracked objects:
 12863 ;;		On entry : 0/0
 12864 ;;		On exit  : 0/0
 12865 ;;		Unchanged: 0/0
 12866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12867 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12871 ;;Total ram usage:        2 bytes
 12872 ;; Hardware stack levels used:    1
 12873 ;; Hardware stack levels required when called:    7
 12874 ;; This function calls:
 12875 ;;		Nothing
 12876 ;; This function is called by:
 12877 ;;		_TMR5_Initialize
 12878 ;;		_main
 12879 ;; This function uses a non-reentrant model
 12880 ;;
 12881                           
 12882                           
 12883                           ;psect for function _TMR5_SetInterruptHandler
 12884  1476                     _TMR5_SetInterruptHandler:
 12885  1476                     l4493:	
 12886                           ;incstack = 0
 12887                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
 12888                           
 12889                           
 12890                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 12891  1476  0021               	movlb	1	; select bank1
 12892  1477  0821               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 12893  1478  00D9               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
 12894  1479  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
 12895  147A  00D8               	movwf	_TMR5_InterruptHandler^(0+128)
 12896  147B                     l743:
 12897  147B  0008               	return
 12898  147C                     __end_of_TMR5_SetInterruptHandler:
 12899                           
 12900                           	psect	text19
 12901  1671                     __ptext19:	
 12902 ;; *************** function _TMR3_Initialize *****************
 12903 ;; Defined at:
 12904 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;		None
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;		None
 12909 ;; Return value:  Size  Location     Type
 12910 ;;                  1    wreg      void 
 12911 ;; Registers used:
 12912 ;;		wreg, status,2, status,0, pclath, cstack
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;Total ram usage:        0 bytes
 12923 ;; Hardware stack levels used:    1
 12924 ;; Hardware stack levels required when called:    8
 12925 ;; This function calls:
 12926 ;;		_TMR3_SetInterruptHandler
 12927 ;; This function is called by:
 12928 ;;		_SYSTEM_Initialize
 12929 ;; This function uses a non-reentrant model
 12930 ;;
 12931                           
 12932                           
 12933                           ;psect for function _TMR3_Initialize
 12934  1671                     _TMR3_Initialize:
 12935  1671                     l4831:	
 12936                           ;incstack = 0
 12937                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12938                           
 12939                           
 12940                           ;tmr3.c: 69: T3GCON = 0x00;
 12941  1671  0024               	movlb	4	; select bank4
 12942  1672  0195               	clrf	21	;volatile
 12943                           
 12944                           ;tmr3.c: 72: T3GATE = 0x00;
 12945  1673  0196               	clrf	22	;volatile
 12946  1674                     l4833:
 12947                           
 12948                           ;tmr3.c: 75: T3CLK = 0x04;
 12949  1674  3004               	movlw	4
 12950  1675  0097               	movwf	23	;volatile
 12951  1676                     l4835:
 12952                           
 12953                           ;tmr3.c: 78: TMR3H = 0xE7;
 12954  1676  30E7               	movlw	231
 12955  1677  0093               	movwf	19	;volatile
 12956  1678                     l4837:
 12957                           
 12958                           ;tmr3.c: 81: TMR3L = 0xC8;
 12959  1678  30C8               	movlw	200
 12960  1679  0092               	movwf	18	;volatile
 12961  167A                     l4839:
 12962                           
 12963                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 12964  167A  0813               	movf	19,w	;volatile
 12965  167B  0020               	movlb	0	; select bank0
 12966  167C  00EF               	movwf	_timer3ReloadVal+1	;volatile
 12967  167D  0024               	movlb	4	; select bank4
 12968  167E  0812               	movf	18,w	;volatile
 12969  167F  0020               	movlb	0	; select bank0
 12970  1680  00EE               	movwf	_timer3ReloadVal	;volatile
 12971  1681                     l4841:
 12972                           
 12973                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 12974  1681  002E               	movlb	14	; select bank14
 12975  1682  1110               	bcf	16,2	;volatile
 12976  1683                     l4843:
 12977                           
 12978                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 12979  1683  151A               	bsf	26,2	;volatile
 12980  1684                     l4845:
 12981                           
 12982                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 12983  1684  3003               	movlw	low _TMR3_DefaultInterruptHandler
 12984  1685  0021               	movlb	1	; select bank1
 12985  1686  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 12986  1687  3000               	movlw	high _TMR3_DefaultInterruptHandler
 12987  1688  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 12988  1689  3194  2470  3196   	fcall	_TMR3_SetInterruptHandler
 12989  168C                     l4847:
 12990                           
 12991                           ;tmr3.c: 96: T3CON = 0x05;
 12992  168C  3005               	movlw	5
 12993  168D  0024               	movlb	4	; select bank4
 12994  168E  0094               	movwf	20	;volatile
 12995  168F                     l485:
 12996  168F  0008               	return
 12997  1690                     __end_of_TMR3_Initialize:
 12998                           
 12999                           	psect	text20
 13000  1470                     __ptext20:	
 13001 ;; *************** function _TMR3_SetInterruptHandler *****************
 13002 ;; Defined at:
 13003 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 13004 ;; Parameters:    Size  Location     Type
 13005 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 13006 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
 13007 ;; Auto vars:     Size  Location     Type
 13008 ;;		None
 13009 ;; Return value:  Size  Location     Type
 13010 ;;                  1    wreg      void 
 13011 ;; Registers used:
 13012 ;;		wreg
 13013 ;; Tracked objects:
 13014 ;;		On entry : 0/0
 13015 ;;		On exit  : 0/0
 13016 ;;		Unchanged: 0/0
 13017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13018 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13021 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13022 ;;Total ram usage:        2 bytes
 13023 ;; Hardware stack levels used:    1
 13024 ;; Hardware stack levels required when called:    7
 13025 ;; This function calls:
 13026 ;;		Nothing
 13027 ;; This function is called by:
 13028 ;;		_TMR3_Initialize
 13029 ;;		_main
 13030 ;; This function uses a non-reentrant model
 13031 ;;
 13032                           
 13033                           
 13034                           ;psect for function _TMR3_SetInterruptHandler
 13035  1470                     _TMR3_SetInterruptHandler:
 13036  1470                     l4477:	
 13037                           ;incstack = 0
 13038                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 13039                           
 13040                           
 13041                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 13042  1470  0021               	movlb	1	; select bank1
 13043  1471  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 13044  1472  00DD               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 13045  1473  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 13046  1474  00DC               	movwf	_TMR3_InterruptHandler^(0+128)
 13047  1475                     l515:
 13048  1475  0008               	return
 13049  1476                     __end_of_TMR3_SetInterruptHandler:
 13050                           
 13051                           	psect	text21
 13052  14F3                     __ptext21:	
 13053 ;; *************** function _TMR2_Initialize *****************
 13054 ;; Defined at:
 13055 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13056 ;; Parameters:    Size  Location     Type
 13057 ;;		None
 13058 ;; Auto vars:     Size  Location     Type
 13059 ;;		None
 13060 ;; Return value:  Size  Location     Type
 13061 ;;                  1    wreg      void 
 13062 ;; Registers used:
 13063 ;;		wreg, status,2
 13064 ;; Tracked objects:
 13065 ;;		On entry : 0/0
 13066 ;;		On exit  : 0/0
 13067 ;;		Unchanged: 0/0
 13068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;Total ram usage:        0 bytes
 13074 ;; Hardware stack levels used:    1
 13075 ;; Hardware stack levels required when called:    7
 13076 ;; This function calls:
 13077 ;;		Nothing
 13078 ;; This function is called by:
 13079 ;;		_SYSTEM_Initialize
 13080 ;; This function uses a non-reentrant model
 13081 ;;
 13082                           
 13083                           
 13084                           ;psect for function _TMR2_Initialize
 13085  14F3                     _TMR2_Initialize:
 13086  14F3                     l4849:	
 13087                           ;incstack = 0
 13088                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 13089                           
 13090                           
 13091                           ;tmr2.c: 67: T2CLKCON = 0x01;
 13092  14F3  3001               	movlw	1
 13093  14F4  0025               	movlb	5	; select bank5
 13094  14F5  0090               	movwf	16	;volatile
 13095  14F6                     l4851:
 13096                           
 13097                           ;tmr2.c: 70: T2HLT = 0x00;
 13098  14F6  018F               	clrf	15	;volatile
 13099  14F7                     l4853:
 13100                           
 13101                           ;tmr2.c: 73: T2RST = 0x00;
 13102  14F7  0191               	clrf	17	;volatile
 13103                           
 13104                           ;tmr2.c: 76: T2PR = 0xFF;
 13105  14F8  30FF               	movlw	255
 13106  14F9  008D               	movwf	13	;volatile
 13107  14FA                     l4855:
 13108                           
 13109                           ;tmr2.c: 79: T2TMR = 0x00;
 13110  14FA  018C               	clrf	12	;volatile
 13111  14FB                     l4857:
 13112                           
 13113                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 13114  14FB  002E               	movlb	14	; select bank14
 13115  14FC  1090               	bcf	16,1	;volatile
 13116  14FD                     l4859:
 13117                           
 13118                           ;tmr2.c: 85: T2CON = 0x80;
 13119  14FD  3080               	movlw	128
 13120  14FE  0025               	movlb	5	; select bank5
 13121  14FF  008E               	movwf	14	;volatile
 13122  1500                     l787:
 13123  1500  0008               	return
 13124  1501                     __end_of_TMR2_Initialize:
 13125                           
 13126                           	psect	text22
 13127  1652                     __ptext22:	
 13128 ;; *************** function _TMR1_Initialize *****************
 13129 ;; Defined at:
 13130 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 13131 ;; Parameters:    Size  Location     Type
 13132 ;;		None
 13133 ;; Auto vars:     Size  Location     Type
 13134 ;;		None
 13135 ;; Return value:  Size  Location     Type
 13136 ;;                  1    wreg      void 
 13137 ;; Registers used:
 13138 ;;		wreg, status,2, status,0, pclath, cstack
 13139 ;; Tracked objects:
 13140 ;;		On entry : 0/0
 13141 ;;		On exit  : 0/0
 13142 ;;		Unchanged: 0/0
 13143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13148 ;;Total ram usage:        0 bytes
 13149 ;; Hardware stack levels used:    1
 13150 ;; Hardware stack levels required when called:    8
 13151 ;; This function calls:
 13152 ;;		_TMR1_SetInterruptHandler
 13153 ;; This function is called by:
 13154 ;;		_SYSTEM_Initialize
 13155 ;; This function uses a non-reentrant model
 13156 ;;
 13157                           
 13158                           
 13159                           ;psect for function _TMR1_Initialize
 13160  1652                     _TMR1_Initialize:
 13161  1652                     l4885:	
 13162                           ;incstack = 0
 13163                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13164                           
 13165                           
 13166                           ;tmr1.c: 69: T1GCON = 0x00;
 13167  1652  0024               	movlb	4	; select bank4
 13168  1653  018F               	clrf	15	;volatile
 13169                           
 13170                           ;tmr1.c: 72: T1GATE = 0x00;
 13171  1654  0190               	clrf	16	;volatile
 13172  1655                     l4887:
 13173                           
 13174                           ;tmr1.c: 75: T1CLK = 0x04;
 13175  1655  3004               	movlw	4
 13176  1656  0091               	movwf	17	;volatile
 13177  1657                     l4889:
 13178                           
 13179                           ;tmr1.c: 78: TMR1H = 0x86;
 13180  1657  3086               	movlw	134
 13181  1658  008D               	movwf	13	;volatile
 13182  1659                     l4891:
 13183                           
 13184                           ;tmr1.c: 81: TMR1L = 0xE8;
 13185  1659  30E8               	movlw	232
 13186  165A  008C               	movwf	12	;volatile
 13187  165B                     l4893:
 13188                           
 13189                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13190  165B  080D               	movf	13,w	;volatile
 13191  165C  0021               	movlb	1	; select bank1
 13192  165D  00E1               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 13193  165E  0024               	movlb	4	; select bank4
 13194  165F  080C               	movf	12,w	;volatile
 13195  1660  0021               	movlb	1	; select bank1
 13196  1661  00E0               	movwf	_timer1ReloadVal^(0+128)	;volatile
 13197  1662                     l4895:
 13198                           
 13199                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 13200  1662  002E               	movlb	14	; select bank14
 13201  1663  1010               	bcf	16,0	;volatile
 13202  1664                     l4897:
 13203                           
 13204                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 13205  1664  141A               	bsf	26,0	;volatile
 13206  1665                     l4899:
 13207                           
 13208                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 13209  1665  3002               	movlw	low _TMR1_DefaultInterruptHandler
 13210  1666  0021               	movlb	1	; select bank1
 13211  1667  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 13212  1668  3000               	movlw	high _TMR1_DefaultInterruptHandler
 13213  1669  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 13214  166A  3194  246A  3196   	fcall	_TMR1_SetInterruptHandler
 13215  166D                     l4901:
 13216                           
 13217                           ;tmr1.c: 96: T1CON = 0x05;
 13218  166D  3005               	movlw	5
 13219  166E  0024               	movlb	4	; select bank4
 13220  166F  008E               	movwf	14	;volatile
 13221  1670                     l421:
 13222  1670  0008               	return
 13223  1671                     __end_of_TMR1_Initialize:
 13224                           
 13225                           	psect	text23
 13226  146A                     __ptext23:	
 13227 ;; *************** function _TMR1_SetInterruptHandler *****************
 13228 ;; Defined at:
 13229 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 13230 ;; Parameters:    Size  Location     Type
 13231 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 13232 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
 13233 ;; Auto vars:     Size  Location     Type
 13234 ;;		None
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  1    wreg      void 
 13237 ;; Registers used:
 13238 ;;		wreg
 13239 ;; Tracked objects:
 13240 ;;		On entry : 0/0
 13241 ;;		On exit  : 0/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13244 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13247 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13248 ;;Total ram usage:        2 bytes
 13249 ;; Hardware stack levels used:    1
 13250 ;; Hardware stack levels required when called:    7
 13251 ;; This function calls:
 13252 ;;		Nothing
 13253 ;; This function is called by:
 13254 ;;		_TMR1_Initialize
 13255 ;;		_main
 13256 ;; This function uses a non-reentrant model
 13257 ;;
 13258                           
 13259                           
 13260                           ;psect for function _TMR1_SetInterruptHandler
 13261  146A                     _TMR1_SetInterruptHandler:
 13262  146A                     l4475:	
 13263                           ;incstack = 0
 13264                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 13265                           
 13266                           
 13267                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 13268  146A  0021               	movlb	1	; select bank1
 13269  146B  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 13270  146C  00DF               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 13271  146D  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
 13272  146E  00DE               	movwf	_TMR1_InterruptHandler^(0+128)
 13273  146F                     l451:
 13274  146F  0008               	return
 13275  1470                     __end_of_TMR1_SetInterruptHandler:
 13276                           
 13277                           	psect	text24
 13278  14D8                     __ptext24:	
 13279 ;; *************** function _PWM6_Initialize *****************
 13280 ;; Defined at:
 13281 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 13282 ;; Parameters:    Size  Location     Type
 13283 ;;		None
 13284 ;; Auto vars:     Size  Location     Type
 13285 ;;		None
 13286 ;; Return value:  Size  Location     Type
 13287 ;;                  1    wreg      void 
 13288 ;; Registers used:
 13289 ;;		wreg, status,2, status,0
 13290 ;; Tracked objects:
 13291 ;;		On entry : 0/0
 13292 ;;		On exit  : 0/0
 13293 ;;		Unchanged: 0/0
 13294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13299 ;;Total ram usage:        0 bytes
 13300 ;; Hardware stack levels used:    1
 13301 ;; Hardware stack levels required when called:    7
 13302 ;; This function calls:
 13303 ;;		Nothing
 13304 ;; This function is called by:
 13305 ;;		_SYSTEM_Initialize
 13306 ;; This function uses a non-reentrant model
 13307 ;;
 13308                           
 13309                           
 13310                           ;psect for function _PWM6_Initialize
 13311  14D8                     _PWM6_Initialize:
 13312  14D8                     l4821:	
 13313                           ;incstack = 0
 13314                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 13315                           
 13316                           
 13317                           ;pwm6.c: 62: PWM6CON = 0x80;
 13318  14D8  3080               	movlw	128
 13319  14D9  0027               	movlb	7	; select bank7
 13320  14DA  008E               	movwf	14	;volatile
 13321                           
 13322                           ;pwm6.c: 65: PWM6DCH = 0xFF;
 13323  14DB  30FF               	movlw	255
 13324  14DC  008D               	movwf	13	;volatile
 13325                           
 13326                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 13327  14DD  30C0               	movlw	192
 13328  14DE  008C               	movwf	12	;volatile
 13329  14DF                     l4823:
 13330                           
 13331                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 13332  14DF  0024               	movlb	4	; select bank4
 13333  14E0  081F               	movf	31,w	;volatile
 13334  14E1  39F3               	andlw	-13
 13335  14E2  3804               	iorlw	4
 13336  14E3  009F               	movwf	31	;volatile
 13337  14E4                     l757:
 13338  14E4  0008               	return
 13339  14E5                     __end_of_PWM6_Initialize:
 13340                           
 13341                           	psect	text25
 13342  14A5                     __ptext25:	
 13343 ;; *************** function _PMD_Initialize *****************
 13344 ;; Defined at:
 13345 ;;		line 79 in file "mcc_generated_files/mcc.c"
 13346 ;; Parameters:    Size  Location     Type
 13347 ;;		None
 13348 ;; Auto vars:     Size  Location     Type
 13349 ;;		None
 13350 ;; Return value:  Size  Location     Type
 13351 ;;                  1    wreg      void 
 13352 ;; Registers used:
 13353 ;;		status,2
 13354 ;; Tracked objects:
 13355 ;;		On entry : 0/0
 13356 ;;		On exit  : 0/0
 13357 ;;		Unchanged: 0/0
 13358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13363 ;;Total ram usage:        0 bytes
 13364 ;; Hardware stack levels used:    1
 13365 ;; Hardware stack levels required when called:    7
 13366 ;; This function calls:
 13367 ;;		Nothing
 13368 ;; This function is called by:
 13369 ;;		_SYSTEM_Initialize
 13370 ;; This function uses a non-reentrant model
 13371 ;;
 13372                           
 13373                           
 13374                           ;psect for function _PMD_Initialize
 13375  14A5                     _PMD_Initialize:
 13376  14A5                     l4811:	
 13377                           ;incstack = 0
 13378                           ; Regs used in _PMD_Initialize: [status,2]
 13379                           
 13380                           
 13381                           ;mcc.c: 82: PMD0 = 0x00;
 13382  14A5  002F               	movlb	15	; select bank15
 13383  14A6  0196               	clrf	22	;volatile
 13384                           
 13385                           ;mcc.c: 84: PMD1 = 0x00;
 13386  14A7  0197               	clrf	23	;volatile
 13387                           
 13388                           ;mcc.c: 86: PMD2 = 0x00;
 13389  14A8  0198               	clrf	24	;volatile
 13390                           
 13391                           ;mcc.c: 88: PMD3 = 0x00;
 13392  14A9  0199               	clrf	25	;volatile
 13393                           
 13394                           ;mcc.c: 90: PMD4 = 0x00;
 13395  14AA  019A               	clrf	26	;volatile
 13396                           
 13397                           ;mcc.c: 92: PMD5 = 0x00;
 13398  14AB  019B               	clrf	27	;volatile
 13399  14AC                     l192:
 13400  14AC  0008               	return
 13401  14AD                     __end_of_PMD_Initialize:
 13402                           
 13403                           	psect	text26
 13404  0986                     __ptext26:	
 13405 ;; *************** function _PIN_MANAGER_Initialize *****************
 13406 ;; Defined at:
 13407 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13408 ;; Parameters:    Size  Location     Type
 13409 ;;		None
 13410 ;; Auto vars:     Size  Location     Type
 13411 ;;		None
 13412 ;; Return value:  Size  Location     Type
 13413 ;;                  1    wreg      void 
 13414 ;; Registers used:
 13415 ;;		wreg, status,2
 13416 ;; Tracked objects:
 13417 ;;		On entry : 0/0
 13418 ;;		On exit  : 0/0
 13419 ;;		Unchanged: 0/0
 13420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13425 ;;Total ram usage:        0 bytes
 13426 ;; Hardware stack levels used:    1
 13427 ;; Hardware stack levels required when called:    7
 13428 ;; This function calls:
 13429 ;;		Nothing
 13430 ;; This function is called by:
 13431 ;;		_SYSTEM_Initialize
 13432 ;; This function uses a non-reentrant model
 13433 ;;
 13434                           
 13435                           
 13436                           ;psect for function _PIN_MANAGER_Initialize
 13437  0986                     _PIN_MANAGER_Initialize:
 13438  0986                     l4763:	
 13439                           ;incstack = 0
 13440                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13441                           
 13442                           
 13443                           ;pin_manager.c: 62: LATE = 0x00;
 13444  0986  0020               	movlb	0	; select bank0
 13445  0987  019A               	clrf	26	;volatile
 13446                           
 13447                           ;pin_manager.c: 63: LATD = 0x00;
 13448  0988  0199               	clrf	25	;volatile
 13449                           
 13450                           ;pin_manager.c: 64: LATA = 0x00;
 13451  0989  0196               	clrf	22	;volatile
 13452                           
 13453                           ;pin_manager.c: 65: LATB = 0x00;
 13454  098A  0197               	clrf	23	;volatile
 13455                           
 13456                           ;pin_manager.c: 66: LATC = 0x00;
 13457  098B  0198               	clrf	24	;volatile
 13458  098C                     l4765:
 13459                           
 13460                           ;pin_manager.c: 71: TRISE = 0x07;
 13461  098C  3007               	movlw	7
 13462  098D  0095               	movwf	21	;volatile
 13463  098E                     l4767:
 13464                           
 13465                           ;pin_manager.c: 72: TRISA = 0x0F;
 13466  098E  300F               	movlw	15
 13467  098F  0091               	movwf	17	;volatile
 13468  0990                     l4769:
 13469                           
 13470                           ;pin_manager.c: 73: TRISB = 0xFF;
 13471  0990  30FF               	movlw	255
 13472  0991  0092               	movwf	18	;volatile
 13473  0992                     l4771:
 13474                           
 13475                           ;pin_manager.c: 74: TRISC = 0xBF;
 13476  0992  30BF               	movlw	191
 13477  0993  0093               	movwf	19	;volatile
 13478  0994                     l4773:
 13479                           
 13480                           ;pin_manager.c: 75: TRISD = 0xFF;
 13481  0994  30FF               	movlw	255
 13482  0995  0094               	movwf	20	;volatile
 13483  0996                     l4775:
 13484                           
 13485                           ;pin_manager.c: 80: ANSELD = 0xFF;
 13486  0996  30FF               	movlw	255
 13487  0997  003E               	movlb	30	; select bank30
 13488  0998  00D9               	movwf	89	;volatile
 13489  0999                     l4777:
 13490                           
 13491                           ;pin_manager.c: 81: ANSELC = 0x47;
 13492  0999  3047               	movlw	71
 13493  099A  00CE               	movwf	78	;volatile
 13494  099B                     l4779:
 13495                           
 13496                           ;pin_manager.c: 82: ANSELB = 0xEF;
 13497  099B  30EF               	movlw	239
 13498  099C  00C3               	movwf	67	;volatile
 13499  099D                     l4781:
 13500                           
 13501                           ;pin_manager.c: 83: ANSELE = 0x07;
 13502  099D  3007               	movlw	7
 13503  099E  00E4               	movwf	100	;volatile
 13504  099F                     l4783:
 13505                           
 13506                           ;pin_manager.c: 84: ANSELA = 0x4F;
 13507  099F  304F               	movlw	79
 13508  09A0  00B8               	movwf	56	;volatile
 13509                           
 13510                           ;pin_manager.c: 89: WPUD = 0x00;
 13511  09A1  01DA               	clrf	90	;volatile
 13512                           
 13513                           ;pin_manager.c: 90: WPUE = 0x00;
 13514  09A2  01E5               	clrf	101	;volatile
 13515                           
 13516                           ;pin_manager.c: 91: WPUB = 0x00;
 13517  09A3  01C4               	clrf	68	;volatile
 13518                           
 13519                           ;pin_manager.c: 92: WPUA = 0x00;
 13520  09A4  01B9               	clrf	57	;volatile
 13521                           
 13522                           ;pin_manager.c: 93: WPUC = 0x00;
 13523  09A5  01CF               	clrf	79	;volatile
 13524                           
 13525                           ;pin_manager.c: 98: ODCONE = 0x00;
 13526  09A6  01E6               	clrf	102	;volatile
 13527                           
 13528                           ;pin_manager.c: 99: ODCONA = 0x00;
 13529  09A7  01BA               	clrf	58	;volatile
 13530                           
 13531                           ;pin_manager.c: 100: ODCONB = 0x00;
 13532  09A8  01C5               	clrf	69	;volatile
 13533                           
 13534                           ;pin_manager.c: 101: ODCONC = 0x00;
 13535  09A9  01D0               	clrf	80	;volatile
 13536                           
 13537                           ;pin_manager.c: 102: ODCOND = 0x00;
 13538  09AA  01DB               	clrf	91	;volatile
 13539  09AB                     l4785:
 13540                           
 13541                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 13542  09AB  30FF               	movlw	255
 13543  09AC  00BB               	movwf	59	;volatile
 13544  09AD                     l4787:
 13545                           
 13546                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 13547  09AD  30FF               	movlw	255
 13548  09AE  00C6               	movwf	70	;volatile
 13549  09AF                     l4789:
 13550                           
 13551                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 13552  09AF  30FF               	movlw	255
 13553  09B0  00D1               	movwf	81	;volatile
 13554  09B1                     l4791:
 13555                           
 13556                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 13557  09B1  30FF               	movlw	255
 13558  09B2  00DC               	movwf	92	;volatile
 13559  09B3                     l4793:
 13560                           
 13561                           ;pin_manager.c: 111: SLRCONE = 0x07;
 13562  09B3  3007               	movlw	7
 13563  09B4  00E7               	movwf	103	;volatile
 13564  09B5                     l4795:
 13565                           
 13566                           ;pin_manager.c: 120: INTPPS = 0x0C;
 13567  09B5  300C               	movlw	12
 13568  09B6  003D               	movlb	29	; select bank29
 13569  09B7  0090               	movwf	16	;volatile
 13570  09B8                     l4797:
 13571                           
 13572                           ;pin_manager.c: 121: RXPPS = 0x17;
 13573  09B8  3017               	movlw	23
 13574  09B9  00CB               	movwf	75	;volatile
 13575  09BA                     l4799:
 13576                           
 13577                           ;pin_manager.c: 122: SSP1CLKPPS = 0x13;
 13578  09BA  3013               	movlw	19
 13579  09BB  00C5               	movwf	69	;volatile
 13580  09BC                     l4801:
 13581                           
 13582                           ;pin_manager.c: 123: RC3PPS = 0x14;
 13583  09BC  3014               	movlw	20
 13584  09BD  003E               	movlb	30	; select bank30
 13585  09BE  00A3               	movwf	35	;volatile
 13586  09BF                     l4803:
 13587                           
 13588                           ;pin_manager.c: 124: RC4PPS = 0x15;
 13589  09BF  3015               	movlw	21
 13590  09C0  00A4               	movwf	36	;volatile
 13591  09C1                     l4805:
 13592                           
 13593                           ;pin_manager.c: 125: RA6PPS = 0x0E;
 13594  09C1  300E               	movlw	14
 13595  09C2  0096               	movwf	22	;volatile
 13596  09C3                     l4807:
 13597                           
 13598                           ;pin_manager.c: 126: RC6PPS = 0x10;
 13599  09C3  3010               	movlw	16
 13600  09C4  00A6               	movwf	38	;volatile
 13601  09C5                     l4809:
 13602                           
 13603                           ;pin_manager.c: 127: SSP1DATPPS = 0x14;
 13604  09C5  3014               	movlw	20
 13605  09C6  003D               	movlb	29	; select bank29
 13606  09C7  00C6               	movwf	70	;volatile
 13607  09C8                     l128:
 13608  09C8  0008               	return
 13609  09C9                     __end_of_PIN_MANAGER_Initialize:
 13610                           
 13611                           	psect	text27
 13612  07F6                     __ptext27:	
 13613 ;; *************** function _OSCILLATOR_Initialize *****************
 13614 ;; Defined at:
 13615 ;;		line 65 in file "mcc_generated_files/mcc.c"
 13616 ;; Parameters:    Size  Location     Type
 13617 ;;		None
 13618 ;; Auto vars:     Size  Location     Type
 13619 ;;		None
 13620 ;; Return value:  Size  Location     Type
 13621 ;;                  1    wreg      void 
 13622 ;; Registers used:
 13623 ;;		wreg, status,2
 13624 ;; Tracked objects:
 13625 ;;		On entry : 0/0
 13626 ;;		On exit  : 0/0
 13627 ;;		Unchanged: 0/0
 13628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13633 ;;Total ram usage:        0 bytes
 13634 ;; Hardware stack levels used:    1
 13635 ;; Hardware stack levels required when called:    7
 13636 ;; This function calls:
 13637 ;;		Nothing
 13638 ;; This function is called by:
 13639 ;;		_SYSTEM_Initialize
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           
 13644                           ;psect for function _OSCILLATOR_Initialize
 13645  07F6                     _OSCILLATOR_Initialize:
 13646  07F6                     l4813:	
 13647                           ;incstack = 0
 13648                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13649                           
 13650                           
 13651                           ;mcc.c: 68: OSCCON1 = 0x62;
 13652  07F6  3062               	movlw	98
 13653  07F7  0031               	movlb	17	; select bank17
 13654  07F8  008D               	movwf	13	;volatile
 13655  07F9                     l4815:
 13656                           
 13657                           ;mcc.c: 70: OSCCON3 = 0x00;
 13658  07F9  018F               	clrf	15	;volatile
 13659  07FA                     l4817:
 13660                           
 13661                           ;mcc.c: 72: OSCEN = 0x00;
 13662  07FA  0191               	clrf	17	;volatile
 13663                           
 13664                           ;mcc.c: 74: OSCFRQ = 0x02;
 13665  07FB  3002               	movlw	2
 13666  07FC  0093               	movwf	19	;volatile
 13667  07FD                     l4819:
 13668                           
 13669                           ;mcc.c: 76: OSCTUNE = 0x00;
 13670  07FD  0192               	clrf	18	;volatile
 13671  07FE                     l189:
 13672  07FE  0008               	return
 13673  07FF                     __end_of_OSCILLATOR_Initialize:
 13674                           
 13675                           	psect	text28
 13676  14E5                     __ptext28:	
 13677 ;; *************** function _EXT_INT_Initialize *****************
 13678 ;; Defined at:
 13679 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 13680 ;; Parameters:    Size  Location     Type
 13681 ;;		None
 13682 ;; Auto vars:     Size  Location     Type
 13683 ;;		None
 13684 ;; Return value:  Size  Location     Type
 13685 ;;                  1    wreg      void 
 13686 ;; Registers used:
 13687 ;;		wreg, status,2, status,0, pclath, cstack
 13688 ;; Tracked objects:
 13689 ;;		On entry : 0/0
 13690 ;;		On exit  : 0/0
 13691 ;;		Unchanged: 0/0
 13692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13697 ;;Total ram usage:        0 bytes
 13698 ;; Hardware stack levels used:    1
 13699 ;; Hardware stack levels required when called:    8
 13700 ;; This function calls:
 13701 ;;		_INT_SetInterruptHandler
 13702 ;; This function is called by:
 13703 ;;		_SYSTEM_Initialize
 13704 ;; This function uses a non-reentrant model
 13705 ;;
 13706                           
 13707                           
 13708                           ;psect for function _EXT_INT_Initialize
 13709  14E5                     _EXT_INT_Initialize:
 13710  14E5                     l4879:	
 13711                           ;incstack = 0
 13712                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13713                           
 13714                           
 13715                           ;ext_int.c: 64: (PIR0bits.INTF = 0);
 13716  14E5  002E               	movlb	14	; select bank14
 13717  14E6  100C               	bcf	12,0	;volatile
 13718                           
 13719                           ;ext_int.c: 66: (INTCONbits.INTEDG = 1);
 13720  14E7  140B               	bsf	11,0	;volatile
 13721  14E8                     l4881:
 13722                           
 13723                           ;ext_int.c: 68: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
 13724  14E8  3038               	movlw	low _INT_DefaultInterruptHandler
 13725  14E9  0021               	movlb	1	; select bank1
 13726  14EA  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 13727  14EB  3014               	movlw	high _INT_DefaultInterruptHandler
 13728  14EC  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 13729  14ED  3194  2464  3194   	fcall	_INT_SetInterruptHandler
 13730  14F0                     l4883:
 13731                           
 13732                           ;ext_int.c: 69: (PIE0bits.INTE = 1);
 13733  14F0  002E               	movlb	14	; select bank14
 13734  14F1  1416               	bsf	22,0	;volatile
 13735  14F2                     l900:
 13736  14F2  0008               	return
 13737  14F3                     __end_of_EXT_INT_Initialize:
 13738                           
 13739                           	psect	text29
 13740  1464                     __ptext29:	
 13741 ;; *************** function _INT_SetInterruptHandler *****************
 13742 ;; Defined at:
 13743 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 13744 ;; Parameters:    Size  Location     Type
 13745 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 13746 ;;		 -> S1_ISR(1), INT_DefaultInterruptHandler(1), 
 13747 ;; Auto vars:     Size  Location     Type
 13748 ;;		None
 13749 ;; Return value:  Size  Location     Type
 13750 ;;                  1    wreg      void 
 13751 ;; Registers used:
 13752 ;;		wreg
 13753 ;; Tracked objects:
 13754 ;;		On entry : 0/0
 13755 ;;		On exit  : 0/0
 13756 ;;		Unchanged: 0/0
 13757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13758 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13761 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;Total ram usage:        2 bytes
 13763 ;; Hardware stack levels used:    1
 13764 ;; Hardware stack levels required when called:    7
 13765 ;; This function calls:
 13766 ;;		Nothing
 13767 ;; This function is called by:
 13768 ;;		_EXT_INT_Initialize
 13769 ;;		_main
 13770 ;; This function uses a non-reentrant model
 13771 ;;
 13772                           
 13773                           
 13774                           ;psect for function _INT_SetInterruptHandler
 13775  1464                     _INT_SetInterruptHandler:
 13776  1464                     l4497:	
 13777                           ;incstack = 0
 13778                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 13779                           
 13780                           
 13781                           ;ext_int.c: 51: INT_InterruptHandler = InterruptHandler;
 13782  1464  0021               	movlb	1	; select bank1
 13783  1465  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 13784  1466  00D7               	movwf	(_INT_InterruptHandler+1)^(0+128)
 13785  1467  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 13786  1468  00D6               	movwf	_INT_InterruptHandler^(0+128)
 13787  1469                     l894:
 13788  1469  0008               	return
 13789  146A                     __end_of_INT_SetInterruptHandler:
 13790                           
 13791                           	psect	text30
 13792  177D                     __ptext30:	
 13793 ;; *************** function _EUSART_Initialize *****************
 13794 ;; Defined at:
 13795 ;;		line 75 in file "mcc_generated_files/eusart.c"
 13796 ;; Parameters:    Size  Location     Type
 13797 ;;		None
 13798 ;; Auto vars:     Size  Location     Type
 13799 ;;		None
 13800 ;; Return value:  Size  Location     Type
 13801 ;;                  1    wreg      void 
 13802 ;; Registers used:
 13803 ;;		wreg, status,2, status,0, pclath, cstack
 13804 ;; Tracked objects:
 13805 ;;		On entry : 0/0
 13806 ;;		On exit  : 0/0
 13807 ;;		Unchanged: 0/0
 13808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13811 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13812 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13813 ;;Total ram usage:        1 bytes
 13814 ;; Hardware stack levels used:    1
 13815 ;; Hardware stack levels required when called:    8
 13816 ;; This function calls:
 13817 ;;		_EUSART_SetRxInterruptHandler
 13818 ;;		_EUSART_SetTxInterruptHandler
 13819 ;; This function is called by:
 13820 ;;		_SYSTEM_Initialize
 13821 ;; This function uses a non-reentrant model
 13822 ;;
 13823                           
 13824                           
 13825                           ;psect for function _EUSART_Initialize
 13826  177D                     _EUSART_Initialize:
 13827  177D                     l4903:	
 13828                           ;incstack = 0
 13829                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13830                           
 13831                           
 13832                           ;eusart.c: 78: PIE3bits.RCIE = 0;
 13833  177D  002E               	movlb	14	; select bank14
 13834  177E  1299               	bcf	25,5	;volatile
 13835  177F                     l4905:
 13836                           
 13837                           ;eusart.c: 79: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 13838  177F  30CF               	movlw	low _EUSART_Receive_ISR
 13839  1780  0021               	movlb	1	; select bank1
 13840  1781  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128)
 13841  1782  3016               	movlw	high _EUSART_Receive_ISR
 13842  1783  00A1               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler^(0+128)+1)
 13843  1784  3194  24AD  3197   	fcall	_EUSART_SetRxInterruptHandler
 13844  1787                     l4907:
 13845                           
 13846                           ;eusart.c: 80: PIE3bits.TXIE = 0;
 13847  1787  002E               	movlb	14	; select bank14
 13848  1788  1219               	bcf	25,4	;volatile
 13849                           
 13850                           ;eusart.c: 81: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
 13851  1789  3012               	movlw	low _EUSART_Transmit_ISR
 13852  178A  0021               	movlb	1	; select bank1
 13853  178B  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128)
 13854  178C  3017               	movlw	high _EUSART_Transmit_ISR
 13855  178D  00A1               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler^(0+128)+1)
 13856  178E  3194  24B6  3197   	fcall	_EUSART_SetTxInterruptHandler
 13857  1791                     l4909:
 13858                           
 13859                           ;eusart.c: 85: BAUD1CON = 0x08;
 13860  1791  3008               	movlw	8
 13861  1792  0022               	movlb	2	; select bank2
 13862  1793  009F               	movwf	31	;volatile
 13863  1794                     l4911:
 13864                           
 13865                           ;eusart.c: 88: RC1STA = 0x90;
 13866  1794  3090               	movlw	144
 13867  1795  009D               	movwf	29	;volatile
 13868  1796                     l4913:
 13869                           
 13870                           ;eusart.c: 91: TX1STA = 0x24;
 13871  1796  3024               	movlw	36
 13872  1797  009E               	movwf	30	;volatile
 13873  1798                     l4915:
 13874                           
 13875                           ;eusart.c: 94: SP1BRGL = 0x19;
 13876  1798  3019               	movlw	25
 13877  1799  009B               	movwf	27	;volatile
 13878  179A                     l4917:
 13879                           
 13880                           ;eusart.c: 97: SP1BRGH = 0x00;
 13881  179A  019C               	clrf	28	;volatile
 13882  179B                     l4919:
 13883                           
 13884                           ;eusart.c: 101: eusartTxHead = 0;
 13885  179B  0021               	movlb	1	; select bank1
 13886  179C  01EB               	clrf	_eusartTxHead^(0+128)	;volatile
 13887  179D                     l4921:
 13888                           
 13889                           ;eusart.c: 102: eusartTxTail = 0;
 13890  179D  01EA               	clrf	_eusartTxTail^(0+128)	;volatile
 13891  179E                     l4923:
 13892                           
 13893                           ;eusart.c: 103: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 13894  179E  3008               	movlw	8
 13895  179F  00A2               	movwf	??_EUSART_Initialize^(0+128)
 13896  17A0  0822               	movf	??_EUSART_Initialize^(0+128),w
 13897  17A1  00E2               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 13898  17A2                     l4925:
 13899                           
 13900                           ;eusart.c: 105: eusartRxHead = 0;
 13901  17A2  01E9               	clrf	_eusartRxHead^(0+128)	;volatile
 13902  17A3                     l4927:
 13903                           
 13904                           ;eusart.c: 106: eusartRxTail = 0;
 13905  17A3  01E8               	clrf	_eusartRxTail^(0+128)	;volatile
 13906  17A4                     l4929:
 13907                           
 13908                           ;eusart.c: 107: eusartRxCount = 0;
 13909  17A4  01E7               	clrf	_eusartRxCount^(0+128)	;volatile
 13910  17A5                     l4931:
 13911                           
 13912                           ;eusart.c: 110: PIE3bits.RCIE = 1;
 13913  17A5  002E               	movlb	14	; select bank14
 13914  17A6  1699               	bsf	25,5	;volatile
 13915  17A7                     l1527:
 13916  17A7  0008               	return
 13917  17A8                     __end_of_EUSART_Initialize:
 13918                           
 13919                           	psect	text31
 13920  14B6                     __ptext31:	
 13921 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 13922 ;; Defined at:
 13923 ;;		line 220 in file "mcc_generated_files/eusart.c"
 13924 ;; Parameters:    Size  Location     Type
 13925 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 13926 ;;		 -> EUSART_Transmit_ISR(1), 
 13927 ;; Auto vars:     Size  Location     Type
 13928 ;;		None
 13929 ;; Return value:  Size  Location     Type
 13930 ;;                  1    wreg      void 
 13931 ;; Registers used:
 13932 ;;		wreg
 13933 ;; Tracked objects:
 13934 ;;		On entry : 0/0
 13935 ;;		On exit  : 0/0
 13936 ;;		Unchanged: 0/0
 13937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13938 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13941 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13942 ;;Total ram usage:        2 bytes
 13943 ;; Hardware stack levels used:    1
 13944 ;; Hardware stack levels required when called:    7
 13945 ;; This function calls:
 13946 ;;		Nothing
 13947 ;; This function is called by:
 13948 ;;		_EUSART_Initialize
 13949 ;; This function uses a non-reentrant model
 13950 ;;
 13951                           
 13952                           
 13953                           ;psect for function _EUSART_SetTxInterruptHandler
 13954  14B6                     _EUSART_SetTxInterruptHandler:
 13955  14B6                     l4717:	
 13956                           ;incstack = 0
 13957                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 13958                           
 13959                           
 13960                           ;eusart.c: 221: EUSART_TxDefaultInterruptHandler = interruptHandler;
 13961  14B6  0021               	movlb	1	; select bank1
 13962  14B7  0821               	movf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^(0+128),w
 13963  14B8  0022               	movlb	2	; select bank2
 13964  14B9  00B6               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
 13965  14BA  0021               	movlb	1	; select bank1
 13966  14BB  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128),w
 13967  14BC  0022               	movlb	2	; select bank2
 13968  14BD  00B5               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
 13969  14BE                     l1572:
 13970  14BE  0008               	return
 13971  14BF                     __end_of_EUSART_SetTxInterruptHandler:
 13972                           
 13973                           	psect	text32
 13974  14AD                     __ptext32:	
 13975 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 13976 ;; Defined at:
 13977 ;;		line 224 in file "mcc_generated_files/eusart.c"
 13978 ;; Parameters:    Size  Location     Type
 13979 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
 13980 ;;		 -> EUSART_Receive_ISR(1), 
 13981 ;; Auto vars:     Size  Location     Type
 13982 ;;		None
 13983 ;; Return value:  Size  Location     Type
 13984 ;;                  1    wreg      void 
 13985 ;; Registers used:
 13986 ;;		wreg
 13987 ;; Tracked objects:
 13988 ;;		On entry : 0/0
 13989 ;;		On exit  : 0/0
 13990 ;;		Unchanged: 0/0
 13991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13992 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13995 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13996 ;;Total ram usage:        2 bytes
 13997 ;; Hardware stack levels used:    1
 13998 ;; Hardware stack levels required when called:    7
 13999 ;; This function calls:
 14000 ;;		Nothing
 14001 ;; This function is called by:
 14002 ;;		_EUSART_Initialize
 14003 ;; This function uses a non-reentrant model
 14004 ;;
 14005                           
 14006                           
 14007                           ;psect for function _EUSART_SetRxInterruptHandler
 14008  14AD                     _EUSART_SetRxInterruptHandler:
 14009  14AD                     l4715:	
 14010                           ;incstack = 0
 14011                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 14012                           
 14013                           
 14014                           ;eusart.c: 225: EUSART_RxDefaultInterruptHandler = interruptHandler;
 14015  14AD  0021               	movlb	1	; select bank1
 14016  14AE  0821               	movf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^(0+128),w
 14017  14AF  0022               	movlb	2	; select bank2
 14018  14B0  00B4               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
 14019  14B1  0021               	movlb	1	; select bank1
 14020  14B2  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128),w
 14021  14B3  0022               	movlb	2	; select bank2
 14022  14B4  00B3               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
 14023  14B5                     l1575:
 14024  14B5  0008               	return
 14025  14B6                     __end_of_EUSART_SetRxInterruptHandler:
 14026                           
 14027                           	psect	text33
 14028  15B0                     __ptext33:	
 14029 ;; *************** function _ADCC_Initialize *****************
 14030 ;; Defined at:
 14031 ;;		line 63 in file "mcc_generated_files/adcc.c"
 14032 ;; Parameters:    Size  Location     Type
 14033 ;;		None
 14034 ;; Auto vars:     Size  Location     Type
 14035 ;;		None
 14036 ;; Return value:  Size  Location     Type
 14037 ;;                  1    wreg      void 
 14038 ;; Registers used:
 14039 ;;		wreg, status,2
 14040 ;; Tracked objects:
 14041 ;;		On entry : 0/0
 14042 ;;		On exit  : 0/0
 14043 ;;		Unchanged: 0/0
 14044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14049 ;;Total ram usage:        0 bytes
 14050 ;; Hardware stack levels used:    1
 14051 ;; Hardware stack levels required when called:    7
 14052 ;; This function calls:
 14053 ;;		Nothing
 14054 ;; This function is called by:
 14055 ;;		_SYSTEM_Initialize
 14056 ;; This function uses a non-reentrant model
 14057 ;;
 14058                           
 14059                           
 14060                           ;psect for function _ADCC_Initialize
 14061  15B0                     _ADCC_Initialize:
 14062  15B0                     l4825:	
 14063                           ;incstack = 0
 14064                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 14065                           
 14066                           
 14067                           ;adcc.c: 67: ADLTHL = 0x00;
 14068  15B0  0022               	movlb	2	; select bank2
 14069  15B1  018E               	clrf	14	;volatile
 14070                           
 14071                           ;adcc.c: 69: ADLTHH = 0x00;
 14072  15B2  018F               	clrf	15	;volatile
 14073                           
 14074                           ;adcc.c: 71: ADUTHL = 0x00;
 14075  15B3  0190               	clrf	16	;volatile
 14076                           
 14077                           ;adcc.c: 73: ADUTHH = 0x00;
 14078  15B4  0191               	clrf	17	;volatile
 14079                           
 14080                           ;adcc.c: 75: ADSTPTL = 0x00;
 14081  15B5  0192               	clrf	18	;volatile
 14082                           
 14083                           ;adcc.c: 77: ADSTPTH = 0x00;
 14084  15B6  0193               	clrf	19	;volatile
 14085                           
 14086                           ;adcc.c: 79: ADRPT = 0x00;
 14087  15B7  018D               	clrf	13	;volatile
 14088                           
 14089                           ;adcc.c: 81: ADPCH = 0x00;
 14090  15B8  0021               	movlb	1	; select bank1
 14091  15B9  019E               	clrf	30	;volatile
 14092                           
 14093                           ;adcc.c: 83: ADCAP = 0x00;
 14094  15BA  019B               	clrf	27	;volatile
 14095                           
 14096                           ;adcc.c: 85: ADCON1 = 0x00;
 14097  15BB  0194               	clrf	20	;volatile
 14098                           
 14099                           ;adcc.c: 87: ADCON2 = 0x00;
 14100  15BC  0195               	clrf	21	;volatile
 14101                           
 14102                           ;adcc.c: 89: ADCON3 = 0x00;
 14103  15BD  0196               	clrf	22	;volatile
 14104                           
 14105                           ;adcc.c: 91: ADSTAT = 0x00;
 14106  15BE  0197               	clrf	23	;volatile
 14107                           
 14108                           ;adcc.c: 93: ADREF = 0x00;
 14109  15BF  019A               	clrf	26	;volatile
 14110                           
 14111                           ;adcc.c: 95: ADACT = 0x00;
 14112  15C0  0199               	clrf	25	;volatile
 14113                           
 14114                           ;adcc.c: 97: ADCLK = 0x00;
 14115  15C1  0198               	clrf	24	;volatile
 14116  15C2                     l4827:
 14117                           
 14118                           ;adcc.c: 99: ADCON0 = 0x80;
 14119  15C2  3080               	movlw	128
 14120  15C3  0093               	movwf	19	;volatile
 14121  15C4                     l4829:
 14122                           
 14123                           ;adcc.c: 101: ADACQ = 0xFF;
 14124  15C4  30FF               	movlw	255
 14125  15C5  009D               	movwf	29	;volatile
 14126  15C6                     l601:
 14127  15C6  0008               	return
 14128  15C7                     __end_of_ADCC_Initialize:
 14129                           
 14130                           	psect	text34
 14131  1448                     __ptext34:	
 14132 ;; *************** function _PWM_Output_D4_Disable *****************
 14133 ;; Defined at:
 14134 ;;		line 287 in file "main.c"
 14135 ;; Parameters:    Size  Location     Type
 14136 ;;		None
 14137 ;; Auto vars:     Size  Location     Type
 14138 ;;		None
 14139 ;; Return value:  Size  Location     Type
 14140 ;;                  1    wreg      void 
 14141 ;; Registers used:
 14142 ;;		None
 14143 ;; Tracked objects:
 14144 ;;		On entry : 0/0
 14145 ;;		On exit  : 0/0
 14146 ;;		Unchanged: 0/0
 14147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14152 ;;Total ram usage:        0 bytes
 14153 ;; Hardware stack levels used:    1
 14154 ;; Hardware stack levels required when called:    7
 14155 ;; This function calls:
 14156 ;;		Nothing
 14157 ;; This function is called by:
 14158 ;;		_main
 14159 ;; This function uses a non-reentrant model
 14160 ;;
 14161                           
 14162                           
 14163                           ;psect for function _PWM_Output_D4_Disable
 14164  1448                     _PWM_Output_D4_Disable:
 14165  1448                     l5517:	
 14166                           ;incstack = 0
 14167                           ; Regs used in _PWM_Output_D4_Disable: []
 14168                           
 14169                           
 14170                           ;main.c: 288: PWM6EN = 0;
 14171  1448  0027               	movlb	7	; select bank7
 14172  1449  138E               	bcf	14,7	;volatile
 14173  144A                     l1239:
 14174  144A  0008               	return
 14175  144B                     __end_of_PWM_Output_D4_Disable:
 14176                           
 14177                           	psect	text35
 14178  15C7                     __ptext35:	
 14179 ;; *************** function _PWM6_LoadDutyValue *****************
 14180 ;; Defined at:
 14181 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14182 ;; Parameters:    Size  Location     Type
 14183 ;;  dutyValue       2    0[BANK1 ] unsigned int 
 14184 ;; Auto vars:     Size  Location     Type
 14185 ;;		None
 14186 ;; Return value:  Size  Location     Type
 14187 ;;                  1    wreg      void 
 14188 ;; Registers used:
 14189 ;;		wreg, status,2, status,0
 14190 ;; Tracked objects:
 14191 ;;		On entry : 0/0
 14192 ;;		On exit  : 0/0
 14193 ;;		Unchanged: 0/0
 14194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14195 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14197 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14198 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14199 ;;Total ram usage:        4 bytes
 14200 ;; Hardware stack levels used:    1
 14201 ;; Hardware stack levels required when called:    7
 14202 ;; This function calls:
 14203 ;;		Nothing
 14204 ;; This function is called by:
 14205 ;;		_main
 14206 ;; This function uses a non-reentrant model
 14207 ;;
 14208                           
 14209                           
 14210                           ;psect for function _PWM6_LoadDutyValue
 14211  15C7                     _PWM6_LoadDutyValue:
 14212  15C7                     l5377:	
 14213                           ;incstack = 0
 14214                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14215                           
 14216                           
 14217                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 14218  15C7  0021               	movlb	1	; select bank1
 14219  15C8  0821               	movf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128),w
 14220  15C9  00A3               	movwf	(??_PWM6_LoadDutyValue^(0+128)+1)
 14221  15CA  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 14222  15CB  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 14223  15CC  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 14224  15CD  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 14225  15CE  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 14226  15CF  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 14227  15D0  0822               	movf	??_PWM6_LoadDutyValue^(0+128),w
 14228  15D1  0027               	movlb	7	; select bank7
 14229  15D2  008D               	movwf	13	;volatile
 14230                           
 14231                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 14232  15D3  0021               	movlb	1	; select bank1
 14233  15D4  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 14234  15D5  3903               	andlw	3
 14235  15D6  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 14236  15D7  3005               	movlw	5
 14237  15D8                     u4875:
 14238  15D8  35A2               	lslf	??_PWM6_LoadDutyValue^(0+128),f
 14239  15D9  3EFF               	addlw	-1
 14240  15DA  1D03               	skipz
 14241  15DB  2DD8               	goto	u4875
 14242  15DC  3522               	lslf	??_PWM6_LoadDutyValue^(0+128),w
 14243  15DD  0027               	movlb	7	; select bank7
 14244  15DE  008C               	movwf	12	;volatile
 14245  15DF                     l760:
 14246  15DF  0008               	return
 14247  15E0                     __end_of_PWM6_LoadDutyValue:
 14248                           
 14249                           	psect	text36
 14250  0BD8                     __ptext36:	
 14251 ;; *************** function _LCDinit *****************
 14252 ;; Defined at:
 14253 ;;		line 214 in file "main.c"
 14254 ;; Parameters:    Size  Location     Type
 14255 ;;		None
 14256 ;; Auto vars:     Size  Location     Type
 14257 ;;		None
 14258 ;; Return value:  Size  Location     Type
 14259 ;;                  1    wreg      void 
 14260 ;; Registers used:
 14261 ;;		wreg, status,2, status,0, pclath, cstack
 14262 ;; Tracked objects:
 14263 ;;		On entry : 0/0
 14264 ;;		On exit  : 0/0
 14265 ;;		Unchanged: 0/0
 14266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14269 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14270 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14271 ;;Total ram usage:        1 bytes
 14272 ;; Hardware stack levels used:    1
 14273 ;; Hardware stack levels required when called:    9
 14274 ;; This function calls:
 14275 ;;		_LCDsend
 14276 ;;		_LCDsend2x4
 14277 ;; This function is called by:
 14278 ;;		_main
 14279 ;; This function uses a non-reentrant model
 14280 ;;
 14281                           
 14282                           
 14283                           ;psect for function _LCDinit
 14284  0BD8                     _LCDinit:
 14285  0BD8                     l5483:	
 14286                           ;incstack = 0
 14287                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 14288                           
 14289                           
 14290                           ;main.c: 216: _delay((unsigned long)((50)*(1000000/4000.0)));
 14291  0BD8  3011               	movlw	17
 14292  0BD9  0021               	movlb	1	; select bank1
 14293  0BDA  00A8               	movwf	??_LCDinit^(0+128)
 14294  0BDB  303A               	movlw	58
 14295  0BDC                     u5877:
 14296  0BDC  0B89               	decfsz	9,f
 14297  0BDD  2BDC               	goto	u5877
 14298  0BDE  0BA8               	decfsz	??_LCDinit^(0+128),f
 14299  0BDF  2BDC               	goto	u5877
 14300  0BE0  0000               	nop
 14301  0BE1                     l5485:
 14302                           
 14303                           ;main.c: 217: LCDsend(0x30);
 14304  0BE1  3030               	movlw	48
 14305  0BE2  318A  2214  318B   	fcall	_LCDsend
 14306  0BE5                     l5487:
 14307                           
 14308                           ;main.c: 218: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 14309  0BE5  3034               	movlw	52
 14310  0BE6  318A  2214  318B   	fcall	_LCDsend
 14311  0BE9  3029               	movlw	41
 14312  0BEA                     u5887:
 14313  0BEA  0B89               	decfsz	9,f
 14314  0BEB  2BEA               	goto	u5887
 14315  0BEC  3200               	nop2
 14316  0BED                     l5489:
 14317  0BED  3030               	movlw	48
 14318  0BEE  318A  2214  318B   	fcall	_LCDsend
 14319  0BF1                     l5491:
 14320                           
 14321                           ;main.c: 219: _delay((unsigned long)((5)*(1000000/4000.0)));
 14322  0BF1  30FA               	movlw	250
 14323  0BF2                     u5897:
 14324  0BF2  3200               	nop2
 14325  0BF3  0B89               	decfsz	9,f
 14326  0BF4  2BF2               	goto	u5897
 14327                           
 14328                           ;main.c: 220: LCDsend(0x30);
 14329  0BF5  3030               	movlw	48
 14330  0BF6  318A  2214  318B   	fcall	_LCDsend
 14331                           
 14332                           ;main.c: 221: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 14333  0BF9  3034               	movlw	52
 14334  0BFA  318A  2214  318B   	fcall	_LCDsend
 14335  0BFD                     l5493:
 14336  0BFD  3029               	movlw	41
 14337  0BFE                     u5907:
 14338  0BFE  0B89               	decfsz	9,f
 14339  0BFF  2BFE               	goto	u5907
 14340  0C00  3200               	nop2
 14341  0C01                     l5495:
 14342  0C01  3030               	movlw	48
 14343  0C02  318A  2214  318B   	fcall	_LCDsend
 14344                           
 14345                           ;main.c: 222: _delay((unsigned long)((100)*(1000000/4000000.0)));
 14346  0C05  3008               	movlw	8
 14347  0C06                     u5917:
 14348  0C06  0B89               	decfsz	9,f
 14349  0C07  2C06               	goto	u5917
 14350  0C08  0000               	nop
 14351  0C09                     l5497:
 14352                           
 14353                           ;main.c: 223: LCDsend(0x30);
 14354  0C09  3030               	movlw	48
 14355  0C0A  318A  2214  318B   	fcall	_LCDsend
 14356  0C0D                     l5499:
 14357                           
 14358                           ;main.c: 224: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 14359  0C0D  3034               	movlw	52
 14360  0C0E  318A  2214  318B   	fcall	_LCDsend
 14361  0C11  3029               	movlw	41
 14362  0C12                     u5927:
 14363  0C12  0B89               	decfsz	9,f
 14364  0C13  2C12               	goto	u5927
 14365  0C14  3200               	nop2
 14366  0C15                     l5501:
 14367  0C15  3030               	movlw	48
 14368  0C16  318A  2214  318B   	fcall	_LCDsend
 14369  0C19                     l5503:
 14370                           
 14371                           ;main.c: 225: _delay((unsigned long)((100)*(1000000/4000000.0)));
 14372  0C19  3008               	movlw	8
 14373  0C1A                     u5937:
 14374  0C1A  0B89               	decfsz	9,f
 14375  0C1B  2C1A               	goto	u5937
 14376  0C1C  0000               	nop
 14377                           
 14378                           ;main.c: 226: LCDsend(0x20);
 14379  0C1D  3020               	movlw	32
 14380  0C1E  318A  2214  318B   	fcall	_LCDsend
 14381                           
 14382                           ;main.c: 227: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 14383  0C21  3024               	movlw	36
 14384  0C22  318A  2214  318B   	fcall	_LCDsend
 14385  0C25                     l5505:
 14386  0C25  3029               	movlw	41
 14387  0C26                     u5947:
 14388  0C26  0B89               	decfsz	9,f
 14389  0C27  2C26               	goto	u5947
 14390  0C28  3200               	nop2
 14391  0C29                     l5507:
 14392  0C29  3020               	movlw	32
 14393  0C2A  318A  2214  318B   	fcall	_LCDsend
 14394                           
 14395                           ;main.c: 228: _delay((unsigned long)((5)*(1000000/4000.0)));
 14396  0C2D  30FA               	movlw	250
 14397  0C2E                     u5957:
 14398  0C2E  3200               	nop2
 14399  0C2F  0B89               	decfsz	9,f
 14400  0C30  2C2E               	goto	u5957
 14401  0C31                     l5509:
 14402                           
 14403                           ;main.c: 230: LCDsend2x4(0x28, 0);
 14404  0C31  0021               	movlb	1	; select bank1
 14405  0C32  01A2               	clrf	LCDsend2x4@mode^(0+128)
 14406  0C33  3028               	movlw	40
 14407  0C34  318D  2501  318B   	fcall	_LCDsend2x4
 14408  0C37                     l5511:
 14409                           
 14410                           ;main.c: 231: LCDsend2x4(0x06, 0);
 14411  0C37  0021               	movlb	1	; select bank1
 14412  0C38  01A2               	clrf	LCDsend2x4@mode^(0+128)
 14413  0C39  3006               	movlw	6
 14414  0C3A  318D  2501  318B   	fcall	_LCDsend2x4
 14415  0C3D                     l5513:
 14416                           
 14417                           ;main.c: 232: LCDsend2x4(0x0f, 0);
 14418  0C3D  0021               	movlb	1	; select bank1
 14419  0C3E  01A2               	clrf	LCDsend2x4@mode^(0+128)
 14420  0C3F  300F               	movlw	15
 14421  0C40  318D  2501  318B   	fcall	_LCDsend2x4
 14422  0C43                     l5515:
 14423                           
 14424                           ;main.c: 233: LCDsend2x4(0x01, 0);
 14425  0C43  0021               	movlb	1	; select bank1
 14426  0C44  01A2               	clrf	LCDsend2x4@mode^(0+128)
 14427  0C45  3001               	movlw	1
 14428  0C46  318D  2501  318B   	fcall	_LCDsend2x4
 14429                           
 14430                           ;main.c: 234: _delay((unsigned long)((2)*(1000000/4000.0)));
 14431  0C49  30A6               	movlw	166
 14432  0C4A                     u5967:
 14433  0C4A  0B89               	decfsz	9,f
 14434  0C4B  2C4A               	goto	u5967
 14435  0C4C  3200               	nop2
 14436  0C4D                     l1208:
 14437  0C4D  0008               	return
 14438  0C4E                     __end_of_LCDinit:
 14439                           
 14440                           	psect	text37
 14441  0D01                     __ptext37:	
 14442 ;; *************** function _LCDsend2x4 *****************
 14443 ;; Defined at:
 14444 ;;		line 191 in file "main.c"
 14445 ;; Parameters:    Size  Location     Type
 14446 ;;  c               1    wreg     unsigned char 
 14447 ;;  mode            1    2[BANK1 ] unsigned char 
 14448 ;; Auto vars:     Size  Location     Type
 14449 ;;  c               1    5[BANK1 ] unsigned char 
 14450 ;;  lc              1    7[BANK1 ] unsigned char 
 14451 ;;  hc              1    6[BANK1 ] unsigned char 
 14452 ;; Return value:  Size  Location     Type
 14453 ;;                  1    wreg      void 
 14454 ;; Registers used:
 14455 ;;		wreg, status,2, status,0, pclath, cstack
 14456 ;; Tracked objects:
 14457 ;;		On entry : 0/0
 14458 ;;		On exit  : 0/0
 14459 ;;		Unchanged: 0/0
 14460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14461 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14462 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14465 ;;Total ram usage:        6 bytes
 14466 ;; Hardware stack levels used:    1
 14467 ;; Hardware stack levels required when called:    8
 14468 ;; This function calls:
 14469 ;;		_WriteI2C
 14470 ;; This function is called by:
 14471 ;;		_LCDinit
 14472 ;; This function uses a non-reentrant model
 14473 ;;
 14474                           
 14475                           
 14476                           ;psect for function _LCDsend2x4
 14477  0D01                     _LCDsend2x4:
 14478                           
 14479                           ;incstack = 0
 14480                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 14481                           ;LCDsend2x4@c stored from wreg
 14482  0D01  0021               	movlb	1	; select bank1
 14483  0D02  00A5               	movwf	LCDsend2x4@c^(0+128)
 14484  0D03                     l4995:
 14485                           
 14486                           ;main.c: 193: unsigned char hc;;main.c: 194: unsigned char lc;;main.c: 196: hc = c & 0xf
      +                          0;
 14487  0D03  0825               	movf	LCDsend2x4@c^(0+128),w
 14488  0D04  39F0               	andlw	240
 14489  0D05  00A3               	movwf	??_LCDsend2x4^(0+128)
 14490  0D06  0823               	movf	??_LCDsend2x4^(0+128),w
 14491  0D07  00A6               	movwf	LCDsend2x4@hc^(0+128)
 14492  0D08                     l4997:
 14493                           
 14494                           ;main.c: 197: lc = (c << 4) & 0xf0;
 14495  0D08  0825               	movf	LCDsend2x4@c^(0+128),w
 14496  0D09  00A3               	movwf	??_LCDsend2x4^(0+128)
 14497  0D0A  3003               	movlw	3
 14498  0D0B                     u4185:
 14499  0D0B  35A3               	lslf	??_LCDsend2x4^(0+128),f
 14500  0D0C  3EFF               	addlw	-1
 14501  0D0D  1D03               	skipz
 14502  0D0E  2D0B               	goto	u4185
 14503  0D0F  3523               	lslf	??_LCDsend2x4^(0+128),w
 14504  0D10  39F0               	andlw	240
 14505  0D11  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
 14506  0D12  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
 14507  0D13  00A7               	movwf	LCDsend2x4@lc^(0+128)
 14508  0D14                     l4999:	
 14509                           ;main.c: 199: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14510                           
 14511  0D14  0023               	movlb	3	; select bank3
 14512  0D15  0C0F               	rrf	15,w	;volatile
 14513  0D16  0C89               	rrf	9,f
 14514  0D17  3901               	andlw	1
 14515  0D18  0021               	movlb	1	; select bank1
 14516  0D19  00A3               	movwf	??_LCDsend2x4^(0+128)
 14517  0D1A  0023               	movlb	3	; select bank3
 14518  0D1B  0811               	movf	17,w	;volatile
 14519  0D1C  391F               	andlw	31
 14520  0D1D  0021               	movlb	1	; select bank1
 14521  0D1E  0423               	iorwf	??_LCDsend2x4^(0+128),w
 14522  0D1F  1D03               	btfss	3,2
 14523  0D20  2D22               	goto	u4191
 14524  0D21  2D23               	goto	u4190
 14525  0D22                     u4191:
 14526  0D22  2D14               	goto	l4999
 14527  0D23                     u4190:
 14528  0D23                     l1174:
 14529                           
 14530                           ;main.c: 200: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 14531  0D23  0023               	movlb	3	; select bank3
 14532  0D24  1411               	bsf	17,0	;volatile
 14533  0D25                     l1175:
 14534  0D25  1811               	btfsc	17,0	;volatile
 14535  0D26  2D28               	goto	u4201
 14536  0D27  2D29               	goto	u4200
 14537  0D28                     u4201:
 14538  0D28  2D25               	goto	l1175
 14539  0D29                     u4200:
 14540  0D29                     l5001:
 14541  0D29  0023               	movlb	3	; select bank3
 14542  0D2A  0C0F               	rrf	15,w	;volatile
 14543  0D2B  0C89               	rrf	9,f
 14544  0D2C  3901               	andlw	1
 14545  0D2D  0021               	movlb	1	; select bank1
 14546  0D2E  00A3               	movwf	??_LCDsend2x4^(0+128)
 14547  0D2F  0023               	movlb	3	; select bank3
 14548  0D30  0811               	movf	17,w	;volatile
 14549  0D31  391F               	andlw	31
 14550  0D32  0021               	movlb	1	; select bank1
 14551  0D33  0423               	iorwf	??_LCDsend2x4^(0+128),w
 14552  0D34  1D03               	btfss	3,2
 14553  0D35  2D37               	goto	u4211
 14554  0D36  2D38               	goto	u4210
 14555  0D37                     u4211:
 14556  0D37  2D29               	goto	l5001
 14557  0D38                     u4210:
 14558  0D38                     l5003:
 14559                           
 14560                           ;main.c: 201: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14561  0D38  304E               	movlw	78
 14562  0D39  318A  22BE  318D   	fcall	_WriteI2C
 14563  0D3C                     l5005:
 14564  0D3C  0023               	movlb	3	; select bank3
 14565  0D3D  0C0F               	rrf	15,w	;volatile
 14566  0D3E  0C89               	rrf	9,f
 14567  0D3F  3901               	andlw	1
 14568  0D40  0021               	movlb	1	; select bank1
 14569  0D41  00A3               	movwf	??_LCDsend2x4^(0+128)
 14570  0D42  0023               	movlb	3	; select bank3
 14571  0D43  0811               	movf	17,w	;volatile
 14572  0D44  391F               	andlw	31
 14573  0D45  0021               	movlb	1	; select bank1
 14574  0D46  0423               	iorwf	??_LCDsend2x4^(0+128),w
 14575  0D47  1D03               	btfss	3,2
 14576  0D48  2D4A               	goto	u4221
 14577  0D49  2D4B               	goto	u4220
 14578  0D4A                     u4221:
 14579  0D4A  2D3C               	goto	l5005
 14580  0D4B                     u4220:
 14581  0D4B                     l5007:
 14582                           
 14583                           ;main.c: 202: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14584  0D4B  0826               	movf	LCDsend2x4@hc^(0+128),w
 14585  0D4C  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 14586  0D4D  3808               	iorlw	8
 14587  0D4E  318A  22BE  318D   	fcall	_WriteI2C
 14588  0D51                     l5009:
 14589  0D51  0023               	movlb	3	; select bank3
 14590  0D52  0C0F               	rrf	15,w	;volatile
 14591  0D53  0C89               	rrf	9,f
 14592  0D54  3901               	andlw	1
 14593  0D55  0021               	movlb	1	; select bank1
 14594  0D56  00A3               	movwf	??_LCDsend2x4^(0+128)
 14595  0D57  0023               	movlb	3	; select bank3
 14596  0D58  0811               	movf	17,w	;volatile
 14597  0D59  391F               	andlw	31
 14598  0D5A  0021               	movlb	1	; select bank1
 14599  0D5B  0423               	iorwf	??_LCDsend2x4^(0+128),w
 14600  0D5C  1D03               	btfss	3,2
 14601  0D5D  2D5F               	goto	u4231
 14602  0D5E  2D60               	goto	u4230
 14603  0D5F                     u4231:
 14604  0D5F  2D51               	goto	l5009
 14605  0D60                     u4230:
 14606  0D60                     l5011:
 14607                           
 14608                           ;main.c: 203: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 14609  0D60  0826               	movf	LCDsend2x4@hc^(0+128),w
 14610  0D61  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 14611  0D62  380C               	iorlw	12
 14612  0D63  318A  22BE  318D   	fcall	_WriteI2C
 14613  0D66                     l5013:
 14614  0D66  0023               	movlb	3	; select bank3
 14615  0D67  0C0F               	rrf	15,w	;volatile
 14616  0D68  0C89               	rrf	9,f
 14617  0D69  3901               	andlw	1
 14618  0D6A  0021               	movlb	1	; select bank1
 14619  0D6B  00A3               	movwf	??_LCDsend2x4^(0+128)
 14620  0D6C  0023               	movlb	3	; select bank3
 14621  0D6D  0811               	movf	17,w	;volatile
 14622  0D6E  391F               	andlw	31
 14623  0D6F  0021               	movlb	1	; select bank1
 14624  0D70  0423               	iorwf	??_LCDsend2x4^(0+128),w
 14625  0D71  1D03               	btfss	3,2
 14626  0D72  2D74               	goto	u4241
 14627  0D73  2D75               	goto	u4240
 14628  0D74                     u4241:
 14629  0D74  2D66               	goto	l5013
 14630  0D75                     u4240:
 14631  0D75                     l1189:
 14632  0D75                     l5015:	
 14633                           ;main.c: 204: _delay((unsigned long)((1)*(1000000/4000000.0)));
 14634                           
 14635                           
 14636                           ;main.c: 205: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14637  0D75  0021               	movlb	1	; select bank1
 14638  0D76  0826               	movf	LCDsend2x4@hc^(0+128),w
 14639  0D77  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 14640  0D78  3808               	iorlw	8
 14641  0D79  318A  22BE  318D   	fcall	_WriteI2C
 14642  0D7C                     l5017:
 14643  0D7C  0023               	movlb	3	; select bank3
 14644  0D7D  0C0F               	rrf	15,w	;volatile
 14645  0D7E  0C89               	rrf	9,f
 14646  0D7F  3901               	andlw	1
 14647  0D80  0021               	movlb	1	; select bank1
 14648  0D81  00A3               	movwf	??_LCDsend2x4^(0+128)
 14649  0D82  0023               	movlb	3	; select bank3
 14650  0D83  0811               	movf	17,w	;volatile
 14651  0D84  391F               	andlw	31
 14652  0D85  0021               	movlb	1	; select bank1
 14653  0D86  0423               	iorwf	??_LCDsend2x4^(0+128),w
 14654  0D87  1D03               	btfss	3,2
 14655  0D88  2D8A               	goto	u4251
 14656  0D89  2D8B               	goto	u4250
 14657  0D8A                     u4251:
 14658  0D8A  2D7C               	goto	l5017
 14659  0D8B                     u4250:
 14660  0D8B                     l5019:
 14661                           
 14662                           ;main.c: 206: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14663  0D8B  0827               	movf	LCDsend2x4@lc^(0+128),w
 14664  0D8C  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 14665  0D8D  3808               	iorlw	8
 14666  0D8E  318A  22BE  318D   	fcall	_WriteI2C
 14667  0D91                     l5021:
 14668  0D91  0023               	movlb	3	; select bank3
 14669  0D92  0C0F               	rrf	15,w	;volatile
 14670  0D93  0C89               	rrf	9,f
 14671  0D94  3901               	andlw	1
 14672  0D95  0021               	movlb	1	; select bank1
 14673  0D96  00A3               	movwf	??_LCDsend2x4^(0+128)
 14674  0D97  0023               	movlb	3	; select bank3
 14675  0D98  0811               	movf	17,w	;volatile
 14676  0D99  391F               	andlw	31
 14677  0D9A  0021               	movlb	1	; select bank1
 14678  0D9B  0423               	iorwf	??_LCDsend2x4^(0+128),w
 14679  0D9C  1D03               	btfss	3,2
 14680  0D9D  2D9F               	goto	u4261
 14681  0D9E  2DA0               	goto	u4260
 14682  0D9F                     u4261:
 14683  0D9F  2D91               	goto	l5021
 14684  0DA0                     u4260:
 14685  0DA0                     l5023:
 14686                           
 14687                           ;main.c: 207: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 14688  0DA0  0827               	movf	LCDsend2x4@lc^(0+128),w
 14689  0DA1  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 14690  0DA2  380C               	iorlw	12
 14691  0DA3  318A  22BE  318D   	fcall	_WriteI2C
 14692  0DA6                     l5025:
 14693  0DA6  0023               	movlb	3	; select bank3
 14694  0DA7  0C0F               	rrf	15,w	;volatile
 14695  0DA8  0C89               	rrf	9,f
 14696  0DA9  3901               	andlw	1
 14697  0DAA  0021               	movlb	1	; select bank1
 14698  0DAB  00A3               	movwf	??_LCDsend2x4^(0+128)
 14699  0DAC  0023               	movlb	3	; select bank3
 14700  0DAD  0811               	movf	17,w	;volatile
 14701  0DAE  391F               	andlw	31
 14702  0DAF  0021               	movlb	1	; select bank1
 14703  0DB0  0423               	iorwf	??_LCDsend2x4^(0+128),w
 14704  0DB1  1D03               	btfss	3,2
 14705  0DB2  2DB4               	goto	u4271
 14706  0DB3  2DB5               	goto	u4270
 14707  0DB4                     u4271:
 14708  0DB4  2DA6               	goto	l5025
 14709  0DB5                     u4270:
 14710  0DB5                     l1198:
 14711  0DB5                     l5027:	
 14712                           ;main.c: 208: _delay((unsigned long)((1)*(1000000/4000000.0)));
 14713                           
 14714                           
 14715                           ;main.c: 209: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14716  0DB5  0021               	movlb	1	; select bank1
 14717  0DB6  0827               	movf	LCDsend2x4@lc^(0+128),w
 14718  0DB7  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 14719  0DB8  3808               	iorlw	8
 14720  0DB9  318A  22BE  318D   	fcall	_WriteI2C
 14721  0DBC                     l5029:
 14722  0DBC  0023               	movlb	3	; select bank3
 14723  0DBD  0C0F               	rrf	15,w	;volatile
 14724  0DBE  0C89               	rrf	9,f
 14725  0DBF  3901               	andlw	1
 14726  0DC0  0021               	movlb	1	; select bank1
 14727  0DC1  00A3               	movwf	??_LCDsend2x4^(0+128)
 14728  0DC2  0023               	movlb	3	; select bank3
 14729  0DC3  0811               	movf	17,w	;volatile
 14730  0DC4  391F               	andlw	31
 14731  0DC5  0021               	movlb	1	; select bank1
 14732  0DC6  0423               	iorwf	??_LCDsend2x4^(0+128),w
 14733  0DC7  1D03               	btfss	3,2
 14734  0DC8  2DCA               	goto	u4281
 14735  0DC9  2DCB               	goto	u4280
 14736  0DCA                     u4281:
 14737  0DCA  2DBC               	goto	l5029
 14738  0DCB                     u4280:
 14739  0DCB                     l1201:
 14740                           
 14741                           ;main.c: 210: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14742  0DCB  0023               	movlb	3	; select bank3
 14743  0DCC  1511               	bsf	17,2	;volatile
 14744  0DCD                     l1202:
 14745  0DCD  1911               	btfsc	17,2	;volatile
 14746  0DCE  2DD0               	goto	u4291
 14747  0DCF  2DD1               	goto	u4290
 14748  0DD0                     u4291:
 14749  0DD0  2DCD               	goto	l1202
 14750  0DD1                     u4290:
 14751  0DD1                     l5031:
 14752                           
 14753                           ;main.c: 211: _delay((unsigned long)((50)*(1000000/4000000.0)));
 14754  0DD1  3004               	movlw	4
 14755  0DD2                     u5977:
 14756  0DD2  0B89               	decfsz	9,f
 14757  0DD3  2DD2               	goto	u5977
 14758  0DD4                     l1205:
 14759  0DD4  0008               	return
 14760  0DD5                     __end_of_LCDsend2x4:
 14761                           
 14762                           	psect	text38
 14763  0A14                     __ptext38:	
 14764 ;; *************** function _LCDsend *****************
 14765 ;; Defined at:
 14766 ;;		line 152 in file "main.c"
 14767 ;; Parameters:    Size  Location     Type
 14768 ;;  c               1    wreg     unsigned char 
 14769 ;; Auto vars:     Size  Location     Type
 14770 ;;  c               1    3[BANK1 ] unsigned char 
 14771 ;; Return value:  Size  Location     Type
 14772 ;;                  1    wreg      void 
 14773 ;; Registers used:
 14774 ;;		wreg, status,2, status,0, pclath, cstack
 14775 ;; Tracked objects:
 14776 ;;		On entry : 0/0
 14777 ;;		On exit  : 0/0
 14778 ;;		Unchanged: 0/0
 14779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14781 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14782 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14784 ;;Total ram usage:        2 bytes
 14785 ;; Hardware stack levels used:    1
 14786 ;; Hardware stack levels required when called:    8
 14787 ;; This function calls:
 14788 ;;		_WriteI2C
 14789 ;; This function is called by:
 14790 ;;		_LCDinit
 14791 ;; This function uses a non-reentrant model
 14792 ;;
 14793                           
 14794                           
 14795                           ;psect for function _LCDsend
 14796  0A14                     _LCDsend:
 14797                           
 14798                           ;incstack = 0
 14799                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 14800                           ;LCDsend@c stored from wreg
 14801  0A14  0021               	movlb	1	; select bank1
 14802  0A15  00A3               	movwf	LCDsend@c^(0+128)
 14803  0A16                     l4981:
 14804  0A16                     l4983:	
 14805                           ;main.c: 154: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14806                           
 14807  0A16  0023               	movlb	3	; select bank3
 14808  0A17  0C0F               	rrf	15,w	;volatile
 14809  0A18  0C89               	rrf	9,f
 14810  0A19  3901               	andlw	1
 14811  0A1A  0021               	movlb	1	; select bank1
 14812  0A1B  00A2               	movwf	??_LCDsend^(0+128)
 14813  0A1C  0023               	movlb	3	; select bank3
 14814  0A1D  0811               	movf	17,w	;volatile
 14815  0A1E  391F               	andlw	31
 14816  0A1F  0021               	movlb	1	; select bank1
 14817  0A20  0422               	iorwf	??_LCDsend^(0+128),w
 14818  0A21  1D03               	btfss	3,2
 14819  0A22  2A24               	goto	u4121
 14820  0A23  2A25               	goto	u4120
 14821  0A24                     u4121:
 14822  0A24  2A16               	goto	l4983
 14823  0A25                     u4120:
 14824  0A25                     l1072:
 14825                           
 14826                           ;main.c: 155: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 14827  0A25  0023               	movlb	3	; select bank3
 14828  0A26  1411               	bsf	17,0	;volatile
 14829  0A27                     l1073:
 14830  0A27  1811               	btfsc	17,0	;volatile
 14831  0A28  2A2A               	goto	u4131
 14832  0A29  2A2B               	goto	u4130
 14833  0A2A                     u4131:
 14834  0A2A  2A27               	goto	l1073
 14835  0A2B                     u4130:
 14836  0A2B                     l4985:
 14837  0A2B  0023               	movlb	3	; select bank3
 14838  0A2C  0C0F               	rrf	15,w	;volatile
 14839  0A2D  0C89               	rrf	9,f
 14840  0A2E  3901               	andlw	1
 14841  0A2F  0021               	movlb	1	; select bank1
 14842  0A30  00A2               	movwf	??_LCDsend^(0+128)
 14843  0A31  0023               	movlb	3	; select bank3
 14844  0A32  0811               	movf	17,w	;volatile
 14845  0A33  391F               	andlw	31
 14846  0A34  0021               	movlb	1	; select bank1
 14847  0A35  0422               	iorwf	??_LCDsend^(0+128),w
 14848  0A36  1D03               	btfss	3,2
 14849  0A37  2A39               	goto	u4141
 14850  0A38  2A3A               	goto	u4140
 14851  0A39                     u4141:
 14852  0A39  2A2B               	goto	l4985
 14853  0A3A                     u4140:
 14854  0A3A                     l4987:
 14855                           
 14856                           ;main.c: 156: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14857  0A3A  304E               	movlw	78
 14858  0A3B  318A  22BE  318A   	fcall	_WriteI2C
 14859  0A3E                     l4989:
 14860  0A3E  0023               	movlb	3	; select bank3
 14861  0A3F  0C0F               	rrf	15,w	;volatile
 14862  0A40  0C89               	rrf	9,f
 14863  0A41  3901               	andlw	1
 14864  0A42  0021               	movlb	1	; select bank1
 14865  0A43  00A2               	movwf	??_LCDsend^(0+128)
 14866  0A44  0023               	movlb	3	; select bank3
 14867  0A45  0811               	movf	17,w	;volatile
 14868  0A46  391F               	andlw	31
 14869  0A47  0021               	movlb	1	; select bank1
 14870  0A48  0422               	iorwf	??_LCDsend^(0+128),w
 14871  0A49  1D03               	btfss	3,2
 14872  0A4A  2A4C               	goto	u4151
 14873  0A4B  2A4D               	goto	u4150
 14874  0A4C                     u4151:
 14875  0A4C  2A3E               	goto	l4989
 14876  0A4D                     u4150:
 14877  0A4D                     l4991:
 14878                           
 14879                           ;main.c: 157: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14880  0A4D  0823               	movf	LCDsend@c^(0+128),w
 14881  0A4E  318A  22BE  318A   	fcall	_WriteI2C
 14882  0A51                     l4993:
 14883  0A51  0023               	movlb	3	; select bank3
 14884  0A52  0C0F               	rrf	15,w	;volatile
 14885  0A53  0C89               	rrf	9,f
 14886  0A54  3901               	andlw	1
 14887  0A55  0021               	movlb	1	; select bank1
 14888  0A56  00A2               	movwf	??_LCDsend^(0+128)
 14889  0A57  0023               	movlb	3	; select bank3
 14890  0A58  0811               	movf	17,w	;volatile
 14891  0A59  391F               	andlw	31
 14892  0A5A  0021               	movlb	1	; select bank1
 14893  0A5B  0422               	iorwf	??_LCDsend^(0+128),w
 14894  0A5C  1D03               	btfss	3,2
 14895  0A5D  2A5F               	goto	u4161
 14896  0A5E  2A60               	goto	u4160
 14897  0A5F                     u4161:
 14898  0A5F  2A51               	goto	l4993
 14899  0A60                     u4160:
 14900  0A60                     l1084:
 14901                           
 14902                           ;main.c: 158: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14903  0A60  0023               	movlb	3	; select bank3
 14904  0A61  1511               	bsf	17,2	;volatile
 14905  0A62                     l1085:
 14906  0A62  1911               	btfsc	17,2	;volatile
 14907  0A63  2A65               	goto	u4171
 14908  0A64  2A66               	goto	u4170
 14909  0A65                     u4171:
 14910  0A65  2A62               	goto	l1085
 14911  0A66                     u4170:
 14912  0A66                     l1088:
 14913  0A66  0008               	return
 14914  0A67                     __end_of_LCDsend:
 14915                           
 14916                           	psect	text39
 14917  0ABE                     __ptext39:	
 14918 ;; *************** function _WriteI2C *****************
 14919 ;; Defined at:
 14920 ;;		line 47 in file "I2C/i2c.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;  data_out        1    wreg     unsigned char 
 14923 ;; Auto vars:     Size  Location     Type
 14924 ;;  data_out        1    1[BANK1 ] unsigned char 
 14925 ;; Return value:  Size  Location     Type
 14926 ;;                  1    wreg      char 
 14927 ;; Registers used:
 14928 ;;		wreg, status,2, status,0
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/0
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14935 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14936 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14937 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14938 ;;Total ram usage:        2 bytes
 14939 ;; Hardware stack levels used:    1
 14940 ;; Hardware stack levels required when called:    7
 14941 ;; This function calls:
 14942 ;;		Nothing
 14943 ;; This function is called by:
 14944 ;;		_LCDsend
 14945 ;;		_LCDsend2x4
 14946 ;;		_LCDrecv
 14947 ;; This function uses a non-reentrant model
 14948 ;;
 14949                           
 14950                           
 14951                           ;psect for function _WriteI2C
 14952  0ABE                     _WriteI2C:
 14953                           
 14954                           ;incstack = 0
 14955                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 14956                           ;WriteI2C@data_out stored from wreg
 14957  0ABE  0021               	movlb	1	; select bank1
 14958  0ABF  00A1               	movwf	WriteI2C@data_out^(0+128)
 14959  0AC0                     l4445:
 14960                           
 14961                           ;i2c.c: 49: SSP1BUF = data_out;
 14962  0AC0  0821               	movf	WriteI2C@data_out^(0+128),w
 14963  0AC1  0023               	movlb	3	; select bank3
 14964  0AC2  008C               	movwf	12	;volatile
 14965  0AC3                     l4447:
 14966                           
 14967                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 14968  0AC3  1F90               	btfss	16,7	;volatile
 14969  0AC4  2AC6               	goto	u3391
 14970  0AC5  2AC7               	goto	u3390
 14971  0AC6                     u3391:
 14972  0AC6  2AC8               	goto	l4453
 14973  0AC7                     u3390:
 14974  0AC7  2B17               	goto	l30
 14975  0AC8                     l4453:
 14976                           
 14977                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 14978  0AC8  300F               	movlw	15
 14979  0AC9  0510               	andwf	16,w	;volatile
 14980  0ACA  0021               	movlb	1	; select bank1
 14981  0ACB  00A0               	movwf	??_WriteI2C^(0+128)
 14982  0ACC  3008               	movlw	8
 14983  0ACD  0620               	xorwf	??_WriteI2C^(0+128),w
 14984  0ACE  1903               	btfsc	3,2
 14985  0ACF  2AD1               	goto	u3401
 14986  0AD0  2AD2               	goto	u3400
 14987  0AD1                     u3401:
 14988  0AD1  2AEB               	goto	l4465
 14989  0AD2                     u3400:
 14990  0AD2                     l4455:
 14991  0AD2  300F               	movlw	15
 14992  0AD3  0023               	movlb	3	; select bank3
 14993  0AD4  0510               	andwf	16,w	;volatile
 14994  0AD5  0021               	movlb	1	; select bank1
 14995  0AD6  00A0               	movwf	??_WriteI2C^(0+128)
 14996  0AD7  300B               	movlw	11
 14997  0AD8  0620               	xorwf	??_WriteI2C^(0+128),w
 14998  0AD9  1903               	btfsc	3,2
 14999  0ADA  2ADC               	goto	u3411
 15000  0ADB  2ADD               	goto	u3410
 15001  0ADC                     u3411:
 15002  0ADC  2AEB               	goto	l4465
 15003  0ADD                     u3410:
 15004  0ADD                     l4457:
 15005                           
 15006                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 15007  0ADD  0023               	movlb	3	; select bank3
 15008  0ADE  1610               	bsf	16,4	;volatile
 15009  0ADF                     l33:	
 15010                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 15011                           
 15012  0ADF  002E               	movlb	14	; select bank14
 15013  0AE0  1C0F               	btfss	15,0	;volatile
 15014  0AE1  2AE3               	goto	u3421
 15015  0AE2  2AE4               	goto	u3420
 15016  0AE3                     u3421:
 15017  0AE3  2ADF               	goto	l33
 15018  0AE4                     u3420:
 15019  0AE4                     l35:
 15020                           
 15021                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 15022  0AE4  0023               	movlb	3	; select bank3
 15023  0AE5  190F               	btfsc	15,2	;volatile
 15024  0AE6  2AE8               	goto	u3431
 15025  0AE7  2AE9               	goto	u3430
 15026  0AE8                     u3431:
 15027  0AE8  2B17               	goto	l30
 15028  0AE9                     u3430:
 15029  0AE9                     l4459:
 15030  0AE9  080F               	movf	15,w	;volatile
 15031  0AEA  2B17               	goto	l30
 15032  0AEB                     l4465:
 15033                           
 15034                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 15035  0AEB  300F               	movlw	15
 15036  0AEC  0023               	movlb	3	; select bank3
 15037  0AED  0510               	andwf	16,w	;volatile
 15038  0AEE  0021               	movlb	1	; select bank1
 15039  0AEF  00A0               	movwf	??_WriteI2C^(0+128)
 15040  0AF0  3008               	movlw	8
 15041  0AF1  0620               	xorwf	??_WriteI2C^(0+128),w
 15042  0AF2  1903               	btfsc	3,2
 15043  0AF3  2AF5               	goto	u3441
 15044  0AF4  2AF6               	goto	u3440
 15045  0AF5                     u3441:
 15046  0AF5  2B01               	goto	l42
 15047  0AF6                     u3440:
 15048  0AF6                     l4467:
 15049  0AF6  300F               	movlw	15
 15050  0AF7  0023               	movlb	3	; select bank3
 15051  0AF8  0510               	andwf	16,w	;volatile
 15052  0AF9  0021               	movlb	1	; select bank1
 15053  0AFA  00A0               	movwf	??_WriteI2C^(0+128)
 15054  0AFB  300B               	movlw	11
 15055  0AFC  0620               	xorwf	??_WriteI2C^(0+128),w
 15056  0AFD  1D03               	btfss	3,2
 15057  0AFE  2B00               	goto	u3451
 15058  0AFF  2B01               	goto	u3450
 15059  0B00                     u3451:
 15060  0B00  2B17               	goto	l30
 15061  0B01                     u3450:
 15062  0B01                     l42:
 15063  0B01  0023               	movlb	3	; select bank3
 15064  0B02  180F               	btfsc	15,0	;volatile
 15065  0B03  2B05               	goto	u3461
 15066  0B04  2B06               	goto	u3460
 15067  0B05                     u3461:
 15068  0B05  2B01               	goto	l42
 15069  0B06                     u3460:
 15070  0B06                     l4469:
 15071  0B06  0023               	movlb	3	; select bank3
 15072  0B07  0C0F               	rrf	15,w	;volatile
 15073  0B08  0C89               	rrf	9,f
 15074  0B09  3901               	andlw	1
 15075  0B0A  0021               	movlb	1	; select bank1
 15076  0B0B  00A0               	movwf	??_WriteI2C^(0+128)
 15077  0B0C  0023               	movlb	3	; select bank3
 15078  0B0D  0811               	movf	17,w	;volatile
 15079  0B0E  391F               	andlw	31
 15080  0B0F  0021               	movlb	1	; select bank1
 15081  0B10  0420               	iorwf	??_WriteI2C^(0+128),w
 15082  0B11  1D03               	btfss	3,2
 15083  0B12  2B14               	goto	u3471
 15084  0B13  2B15               	goto	u3470
 15085  0B14                     u3471:
 15086  0B14  2B06               	goto	l4469
 15087  0B15                     u3470:
 15088  0B15                     l47:
 15089                           
 15090                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 15091  0B15  0023               	movlb	3	; select bank3
 15092  0B16  0811               	movf	17,w	;volatile
 15093  0B17                     l30:
 15094  0B17  0008               	return
 15095  0B18                     __end_of_WriteI2C:
 15096                           
 15097                           	psect	text40
 15098  1445                     __ptext40:	
 15099 ;; *************** function _EUSART_is_rx_ready *****************
 15100 ;; Defined at:
 15101 ;;		line 118 in file "mcc_generated_files/eusart.c"
 15102 ;; Parameters:    Size  Location     Type
 15103 ;;		None
 15104 ;; Auto vars:     Size  Location     Type
 15105 ;;		None
 15106 ;; Return value:  Size  Location     Type
 15107 ;;                  1    wreg      unsigned char 
 15108 ;; Registers used:
 15109 ;;		wreg
 15110 ;; Tracked objects:
 15111 ;;		On entry : 0/0
 15112 ;;		On exit  : 0/0
 15113 ;;		Unchanged: 0/0
 15114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15119 ;;Total ram usage:        0 bytes
 15120 ;; Hardware stack levels used:    1
 15121 ;; Hardware stack levels required when called:    7
 15122 ;; This function calls:
 15123 ;;		Nothing
 15124 ;; This function is called by:
 15125 ;;		_main
 15126 ;; This function uses a non-reentrant model
 15127 ;;
 15128                           
 15129                           
 15130                           ;psect for function _EUSART_is_rx_ready
 15131  1445                     _EUSART_is_rx_ready:
 15132  1445                     l5633:	
 15133                           ;incstack = 0
 15134                           ; Regs used in _EUSART_is_rx_ready: [wreg]
 15135                           
 15136                           
 15137                           ;eusart.c: 120: return eusartRxCount;
 15138  1445  0021               	movlb	1	; select bank1
 15139  1446  0867               	movf	_eusartRxCount^(0+128),w	;volatile
 15140  1447                     l1533:
 15141  1447  0008               	return
 15142  1448                     __end_of_EUSART_is_rx_ready:
 15143                           
 15144                           	psect	text41
 15145  1735                     __ptext41:	
 15146 ;; *************** function _DATAEE_WriteByte *****************
 15147 ;; Defined at:
 15148 ;;		line 180 in file "mcc_generated_files/memory.c"
 15149 ;; Parameters:    Size  Location     Type
 15150 ;;  bAdd            2    0[BANK1 ] unsigned int 
 15151 ;;  bData           1    2[BANK1 ] unsigned char 
 15152 ;; Auto vars:     Size  Location     Type
 15153 ;;  GIEBitValue     1    3[BANK1 ] unsigned char 
 15154 ;; Return value:  Size  Location     Type
 15155 ;;                  1    wreg      void 
 15156 ;; Registers used:
 15157 ;;		wreg, status,2, status,0
 15158 ;; Tracked objects:
 15159 ;;		On entry : 0/0
 15160 ;;		On exit  : 0/0
 15161 ;;		Unchanged: 0/0
 15162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15163 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15164 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15166 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15167 ;;Total ram usage:        4 bytes
 15168 ;; Hardware stack levels used:    1
 15169 ;; Hardware stack levels required when called:    7
 15170 ;; This function calls:
 15171 ;;		Nothing
 15172 ;; This function is called by:
 15173 ;;		_main
 15174 ;; This function uses a non-reentrant model
 15175 ;;
 15176                           
 15177                           
 15178                           ;psect for function _DATAEE_WriteByte
 15179  1735                     _DATAEE_WriteByte:
 15180  1735                     l5381:	
 15181                           ;incstack = 0
 15182                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 15183                           
 15184                           
 15185                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 15186  1735  3000               	movlw	0
 15187  1736  1B8B               	btfsc	11,7	;volatile
 15188  1737  3001               	movlw	1
 15189  1738  0021               	movlb	1	; select bank1
 15190  1739  00A3               	movwf	DATAEE_WriteByte@GIEBitValue^(0+128)
 15191                           
 15192                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 15193  173A  0821               	movf	(DATAEE_WriteByte@bAdd+1)^(0+128),w
 15194  173B  0030               	movlb	16	; select bank16
 15195  173C  009B               	movwf	27	;volatile
 15196  173D                     l5383:
 15197                           
 15198                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 15199  173D  0021               	movlb	1	; select bank1
 15200  173E  0820               	movf	DATAEE_WriteByte@bAdd^(0+128),w
 15201  173F  0030               	movlb	16	; select bank16
 15202  1740  009A               	movwf	26	;volatile
 15203  1741                     l5385:
 15204                           
 15205                           ;memory.c: 186: NVMDATL = bData;
 15206  1741  0021               	movlb	1	; select bank1
 15207  1742  0822               	movf	DATAEE_WriteByte@bData^(0+128),w
 15208  1743  0030               	movlb	16	; select bank16
 15209  1744  009C               	movwf	28	;volatile
 15210  1745                     l5387:
 15211                           
 15212                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 15213  1745  171E               	bsf	30,6	;volsfr
 15214  1746                     l5389:
 15215                           
 15216                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 15217  1746  151E               	bsf	30,2	;volsfr
 15218  1747                     l5391:
 15219                           
 15220                           ;memory.c: 189: INTCONbits.GIE = 0;
 15221  1747  138B               	bcf	11,7	;volatile
 15222  1748                     l5393:
 15223                           
 15224                           ;memory.c: 190: NVMCON2 = 0x55;
 15225  1748  3055               	movlw	85
 15226  1749  009F               	movwf	31	;volsfr
 15227  174A                     l5395:
 15228                           
 15229                           ;memory.c: 191: NVMCON2 = 0xAA;
 15230  174A  30AA               	movlw	170
 15231  174B  009F               	movwf	31	;volsfr
 15232  174C                     l5397:
 15233                           
 15234                           ;memory.c: 192: NVMCON1bits.WR = 1;
 15235  174C  149E               	bsf	30,1	;volsfr
 15236  174D                     l868:	
 15237                           ;memory.c: 195: {
 15238                           
 15239  174D  189E               	btfsc	30,1	;volsfr
 15240  174E  2F50               	goto	u4881
 15241  174F  2F51               	goto	u4880
 15242  1750                     u4881:
 15243  1750  2F4D               	goto	l868
 15244  1751                     u4880:
 15245  1751                     l870:
 15246                           
 15247                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 15248  1751  111E               	bcf	30,2	;volsfr
 15249  1752                     l5399:
 15250                           
 15251                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 15252  1752  0021               	movlb	1	; select bank1
 15253  1753  0C23               	rrf	DATAEE_WriteByte@GIEBitValue^(0+128),w
 15254  1754  1C03               	skipc
 15255  1755  138B               	bcf	11,7	;volatile
 15256  1756  1803               	skipnc
 15257  1757  178B               	bsf	11,7	;volatile
 15258  1758                     l871:
 15259  1758  0008               	return
 15260  1759                     __end_of_DATAEE_WriteByte:
 15261                           
 15262                           	psect	text42
 15263  1501                     __ptext42:	
 15264 ;; *************** function _DATAEE_ReadByte *****************
 15265 ;; Defined at:
 15266 ;;		line 202 in file "mcc_generated_files/memory.c"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;  bAdd            2    0[BANK1 ] unsigned int 
 15269 ;; Auto vars:     Size  Location     Type
 15270 ;;		None
 15271 ;; Return value:  Size  Location     Type
 15272 ;;                  1    wreg      unsigned char 
 15273 ;; Registers used:
 15274 ;;		wreg, status,2
 15275 ;; Tracked objects:
 15276 ;;		On entry : 0/0
 15277 ;;		On exit  : 0/0
 15278 ;;		Unchanged: 0/0
 15279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15280 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15283 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15284 ;;Total ram usage:        2 bytes
 15285 ;; Hardware stack levels used:    1
 15286 ;; Hardware stack levels required when called:    7
 15287 ;; This function calls:
 15288 ;;		Nothing
 15289 ;; This function is called by:
 15290 ;;		_main
 15291 ;; This function uses a non-reentrant model
 15292 ;;
 15293                           
 15294                           
 15295                           ;psect for function _DATAEE_ReadByte
 15296  1501                     _DATAEE_ReadByte:
 15297  1501                     l5401:	
 15298                           ;incstack = 0
 15299                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 15300                           
 15301                           
 15302                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 15303  1501  0021               	movlb	1	; select bank1
 15304  1502  0821               	movf	(DATAEE_ReadByte@bAdd+1)^(0+128),w
 15305  1503  0030               	movlb	16	; select bank16
 15306  1504  009B               	movwf	27	;volatile
 15307  1505                     l5403:
 15308                           
 15309                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 15310  1505  0021               	movlb	1	; select bank1
 15311  1506  0820               	movf	DATAEE_ReadByte@bAdd^(0+128),w
 15312  1507  0030               	movlb	16	; select bank16
 15313  1508  009A               	movwf	26	;volatile
 15314  1509                     l5405:
 15315                           
 15316                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 15317  1509  171E               	bsf	30,6	;volsfr
 15318  150A                     l5407:
 15319                           
 15320                           ;memory.c: 207: NVMCON1bits.RD = 1;
 15321  150A  141E               	bsf	30,0	;volsfr
 15322  150B                     l5409:
 15323                           
 15324                           ;memory.c: 208: __nop();
 15325  150B  0000               	nop
 15326  150C                     l5411:
 15327                           
 15328                           ;memory.c: 209: __nop();
 15329  150C  0000               	nop
 15330  150D                     l5413:
 15331                           
 15332                           ;memory.c: 211: return (NVMDATL);
 15333  150D  0030               	movlb	16	; select bank16
 15334  150E  081C               	movf	28,w	;volatile
 15335  150F                     l874:
 15336  150F  0008               	return
 15337  1510                     __end_of_DATAEE_ReadByte:
 15338                           
 15339                           	psect	intentry
 15340  0004                     __pintentry:	
 15341 ;; *************** function _INTERRUPT_InterruptManager *****************
 15342 ;; Defined at:
 15343 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15344 ;; Parameters:    Size  Location     Type
 15345 ;;		None
 15346 ;; Auto vars:     Size  Location     Type
 15347 ;;		None
 15348 ;; Return value:  Size  Location     Type
 15349 ;;                  1    wreg      void 
 15350 ;; Registers used:
 15351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15352 ;; Tracked objects:
 15353 ;;		On entry : 0/0
 15354 ;;		On exit  : 0/0
 15355 ;;		Unchanged: 0/0
 15356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15361 ;;Total ram usage:        0 bytes
 15362 ;; Hardware stack levels used:    1
 15363 ;; Hardware stack levels required when called:    6
 15364 ;; This function calls:
 15365 ;;		Absolute function
 15366 ;;		_EUSART_Receive_ISR
 15367 ;;		_EUSART_Transmit_ISR
 15368 ;;		_INT_ISR
 15369 ;;		_TMR1_ISR
 15370 ;;		_TMR3_ISR
 15371 ;;		_TMR5_ISR
 15372 ;; This function is called by:
 15373 ;;		Interrupt level 1
 15374 ;; This function uses a non-reentrant model
 15375 ;;
 15376                           
 15377  0004                     _INTERRUPT_InterruptManager:
 15378                           
 15379                           ;incstack = 0
 15380  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 15381                           
 15382                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15383  0005  3180               	pagesel	$
 15384  0006                     i1l5681:
 15385                           
 15386                           ;interrupt_manager.c: 55: if(PIE0bits.INTE == 1 && PIR0bits.INTF == 1)
 15387  0006  002E               	movlb	14	; select bank14
 15388  0007  1C16               	btfss	22,0	;volatile
 15389  0008  280A               	goto	u549_21
 15390  0009  280B               	goto	u549_20
 15391  000A                     u549_21:
 15392  000A  2813               	goto	i1l372
 15393  000B                     u549_20:
 15394  000B                     i1l5683:
 15395  000B  1C0C               	btfss	12,0	;volatile
 15396  000C  280E               	goto	u550_21
 15397  000D  280F               	goto	u550_20
 15398  000E                     u550_21:
 15399  000E  2813               	goto	i1l372
 15400  000F                     u550_20:
 15401  000F                     i1l5685:
 15402                           
 15403                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: INT_ISR();
 15404  000F  3194  245E  3180   	fcall	_INT_ISR
 15405                           
 15406                           ;interrupt_manager.c: 58: }
 15407  0012  2868               	goto	i1l390
 15408  0013                     i1l372:
 15409                           
 15410                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
 15411  0013  1F0B               	btfss	11,6	;volatile
 15412  0014  2816               	goto	u551_21
 15413  0015  2817               	goto	u551_20
 15414  0016                     u551_21:
 15415  0016  2868               	goto	i1l390
 15416  0017                     u551_20:
 15417  0017                     i1l5687:
 15418                           
 15419                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE3bits.TXIE == 1 && PIR3bits.T
      +                          XIF == 1)
 15420  0017  1E19               	btfss	25,4	;volatile
 15421  0018  281A               	goto	u552_21
 15422  0019  281B               	goto	u552_20
 15423  001A                     u552_21:
 15424  001A  2826               	goto	i1l375
 15425  001B                     u552_20:
 15426  001B                     i1l5689:
 15427  001B  1E0F               	btfss	15,4	;volatile
 15428  001C  281E               	goto	u553_21
 15429  001D  281F               	goto	u553_20
 15430  001E                     u553_21:
 15431  001E  2826               	goto	i1l375
 15432  001F                     u553_20:
 15433  001F                     i1l5691:
 15434                           
 15435                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART_TxDefaultInterruptHandler();
 15436  001F  0022               	movlb	2	; select bank2
 15437  0020  0836               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
 15438  0021  008A               	movwf	10
 15439  0022  0835               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
 15440  0023  000A               	callw
 15441  0024  3180               	pagesel	$
 15442                           
 15443                           ;interrupt_manager.c: 64: }
 15444  0025  2868               	goto	i1l390
 15445  0026                     i1l375:
 15446                           
 15447                           ;interrupt_manager.c: 65: else if(PIE3bits.RCIE == 1 && PIR3bits.RCIF == 1)
 15448  0026  1E99               	btfss	25,5	;volatile
 15449  0027  2829               	goto	u554_21
 15450  0028  282A               	goto	u554_20
 15451  0029                     u554_21:
 15452  0029  2835               	goto	i1l377
 15453  002A                     u554_20:
 15454  002A                     i1l5693:
 15455  002A  1E8F               	btfss	15,5	;volatile
 15456  002B  282D               	goto	u555_21
 15457  002C  282E               	goto	u555_20
 15458  002D                     u555_21:
 15459  002D  2835               	goto	i1l377
 15460  002E                     u555_20:
 15461  002E                     i1l5695:
 15462                           
 15463                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: EUSART_RxDefaultInterruptHandler();
 15464  002E  0022               	movlb	2	; select bank2
 15465  002F  0834               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
 15466  0030  008A               	movwf	10
 15467  0031  0833               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
 15468  0032  000A               	callw
 15469  0033  3180               	pagesel	$
 15470                           
 15471                           ;interrupt_manager.c: 68: }
 15472  0034  2868               	goto	i1l390
 15473  0035                     i1l377:
 15474                           
 15475                           ;interrupt_manager.c: 69: else if(PIE4bits.TMR5IE == 1 && PIR4bits.TMR5IF == 1)
 15476  0035  1E1A               	btfss	26,4	;volatile
 15477  0036  2838               	goto	u556_21
 15478  0037  2839               	goto	u556_20
 15479  0038                     u556_21:
 15480  0038  2841               	goto	i1l379
 15481  0039                     u556_20:
 15482  0039                     i1l5697:
 15483  0039  1E10               	btfss	16,4	;volatile
 15484  003A  283C               	goto	u557_21
 15485  003B  283D               	goto	u557_20
 15486  003C                     u557_21:
 15487  003C  2841               	goto	i1l379
 15488  003D                     u557_20:
 15489  003D                     i1l5699:
 15490                           
 15491                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR5_ISR();
 15492  003D  3195  2599  3180   	fcall	_TMR5_ISR
 15493                           
 15494                           ;interrupt_manager.c: 72: }
 15495  0040  2868               	goto	i1l390
 15496  0041                     i1l379:
 15497                           
 15498                           ;interrupt_manager.c: 73: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 15499  0041  1D1A               	btfss	26,2	;volatile
 15500  0042  2844               	goto	u558_21
 15501  0043  2845               	goto	u558_20
 15502  0044                     u558_21:
 15503  0044  284D               	goto	i1l381
 15504  0045                     u558_20:
 15505  0045                     i1l5701:
 15506  0045  1D10               	btfss	16,2	;volatile
 15507  0046  2848               	goto	u559_21
 15508  0047  2849               	goto	u559_20
 15509  0048                     u559_21:
 15510  0048  284D               	goto	i1l381
 15511  0049                     u559_20:
 15512  0049                     i1l5703:
 15513                           
 15514                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: TMR3_ISR();
 15515  0049  3195  2582  3180   	fcall	_TMR3_ISR
 15516                           
 15517                           ;interrupt_manager.c: 76: }
 15518  004C  2868               	goto	i1l390
 15519  004D                     i1l381:
 15520                           
 15521                           ;interrupt_manager.c: 77: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 15522  004D  1C1A               	btfss	26,0	;volatile
 15523  004E  2850               	goto	u560_21
 15524  004F  2851               	goto	u560_20
 15525  0050                     u560_21:
 15526  0050  2859               	goto	i1l383
 15527  0051                     u560_20:
 15528  0051                     i1l5705:
 15529  0051  1C10               	btfss	16,0	;volatile
 15530  0052  2854               	goto	u561_21
 15531  0053  2855               	goto	u561_20
 15532  0054                     u561_21:
 15533  0054  2859               	goto	i1l383
 15534  0055                     u561_20:
 15535  0055                     i1l5707:
 15536                           
 15537                           ;interrupt_manager.c: 78: {;interrupt_manager.c: 79: TMR1_ISR();
 15538  0055  3195  256B  3180   	fcall	_TMR1_ISR
 15539                           
 15540                           ;interrupt_manager.c: 80: }
 15541  0058  2868               	goto	i1l390
 15542  0059                     i1l383:
 15543                           
 15544                           ;interrupt_manager.c: 81: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 15545  0059  1C99               	btfss	25,1	;volatile
 15546  005A  285C               	goto	u562_21
 15547  005B  285D               	goto	u562_20
 15548  005C                     u562_21:
 15549  005C  2862               	goto	i1l385
 15550  005D                     u562_20:
 15551  005D                     i1l5709:
 15552                           
 15553                           ;interrupt_manager.c: 82: {;interrupt_manager.c: 83: i2c1_driver_busCollisionISR();
 15554  005D  1C8F               	btfss	15,1	;volatile
 15555  005E  2860               	goto	u563_21
 15556  005F  2861               	goto	u563_20
 15557  0060                     u563_21:
 15558  0060  2862               	goto	i1l385
 15559  0061                     u563_20:
 15560  0061  2868               	goto	i1l390
 15561  0062                     i1l385:
 15562                           
 15563                           ;interrupt_manager.c: 85: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 15564  0062  1C19               	btfss	25,0	;volatile
 15565  0063  2865               	goto	u564_21
 15566  0064  2866               	goto	u564_20
 15567  0065                     u564_21:
 15568  0065  2868               	goto	i1l384
 15569  0066                     u564_20:
 15570  0066                     i1l5713:
 15571                           
 15572                           ;interrupt_manager.c: 86: {;interrupt_manager.c: 87: i2c1_driver_i2cISR();
 15573  0066  080F               	movf	15,w	;volatile
 15574  0067  2868               	goto	i1l390
 15575  0068                     i1l384:
 15576  0068                     i1l390:
 15577  0068  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15578  0069  0009               	retfie
 15579  006A                     __end_of_INTERRUPT_InterruptManager:
 15580                           
 15581                           	psect	text44
 15582  1599                     __ptext44:	
 15583 ;; *************** function _TMR5_ISR *****************
 15584 ;; Defined at:
 15585 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 15586 ;; Parameters:    Size  Location     Type
 15587 ;;		None
 15588 ;; Auto vars:     Size  Location     Type
 15589 ;;		None
 15590 ;; Return value:  Size  Location     Type
 15591 ;;                  1    wreg      void 
 15592 ;; Registers used:
 15593 ;;		wreg, status,2, status,0, pclath, cstack
 15594 ;; Tracked objects:
 15595 ;;		On entry : 0/0
 15596 ;;		On exit  : 0/0
 15597 ;;		Unchanged: 0/0
 15598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15603 ;;Total ram usage:        0 bytes
 15604 ;; Hardware stack levels used:    1
 15605 ;; Hardware stack levels required when called:    3
 15606 ;; This function calls:
 15607 ;;		Absolute function
 15608 ;;		_TMR5_DefaultInterruptHandler
 15609 ;;		_TMR5_WriteTimer
 15610 ;;		_monitoring_ISR
 15611 ;; This function is called by:
 15612 ;;		_INTERRUPT_InterruptManager
 15613 ;; This function uses a non-reentrant model
 15614 ;;
 15615                           
 15616                           
 15617                           ;psect for function _TMR5_ISR
 15618  1599                     _TMR5_ISR:
 15619  1599                     i1l5353:	
 15620                           ;incstack = 0
 15621                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 15622                           
 15623                           
 15624                           ;tmr5.c: 168: PIR4bits.TMR5IF = 0;
 15625  1599  002E               	movlb	14	; select bank14
 15626  159A  1210               	bcf	16,4	;volatile
 15627  159B                     i1l5355:
 15628                           
 15629                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 15630  159B  0021               	movlb	1	; select bank1
 15631  159C  085B               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 15632  159D  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 15633  159E  085A               	movf	_timer5ReloadVal^(0+128),w	;volatile
 15634  159F  00F0               	movwf	TMR5_WriteTimer@timerVal
 15635  15A0  3195  2532  3195   	fcall	_TMR5_WriteTimer
 15636  15A3                     i1l5357:
 15637                           
 15638                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 15639  15A3  0021               	movlb	1	; select bank1
 15640  15A4  0858               	movf	_TMR5_InterruptHandler^(0+128),w
 15641  15A5  0459               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 15642  15A6  1903               	btfsc	3,2
 15643  15A7  2DA9               	goto	u484_21
 15644  15A8  2DAA               	goto	u484_20
 15645  15A9                     u484_21:
 15646  15A9  2DAF               	goto	i1l740
 15647  15AA                     u484_20:
 15648  15AA                     i1l5359:
 15649                           
 15650                           ;tmr5.c: 172: {;tmr5.c: 173: TMR5_InterruptHandler();
 15651  15AA  0859               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 15652  15AB  008A               	movwf	10
 15653  15AC  0858               	movf	_TMR5_InterruptHandler^(0+128),w
 15654  15AD  000A               	callw
 15655  15AE  3195               	pagesel	$
 15656  15AF                     i1l740:
 15657  15AF  0008               	return
 15658  15B0                     __end_of_TMR5_ISR:
 15659                           
 15660                           	psect	text45
 15661  07FF                     __ptext45:	
 15662 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 15663 ;; Defined at:
 15664 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 15665 ;; Parameters:    Size  Location     Type
 15666 ;;		None
 15667 ;; Auto vars:     Size  Location     Type
 15668 ;;		None
 15669 ;; Return value:  Size  Location     Type
 15670 ;;                  1    wreg      void 
 15671 ;; Registers used:
 15672 ;;		None
 15673 ;; Tracked objects:
 15674 ;;		On entry : 0/0
 15675 ;;		On exit  : 0/0
 15676 ;;		Unchanged: 0/0
 15677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15682 ;;Total ram usage:        0 bytes
 15683 ;; Hardware stack levels used:    1
 15684 ;; This function calls:
 15685 ;;		Nothing
 15686 ;; This function is called by:
 15687 ;;		_TMR5_Initialize
 15688 ;;		_TMR5_ISR
 15689 ;; This function uses a non-reentrant model
 15690 ;;
 15691                           
 15692                           
 15693                           ;psect for function _TMR5_DefaultInterruptHandler
 15694  07FF                     _TMR5_DefaultInterruptHandler:
 15695  07FF                     i1l746:	
 15696                           ;incstack = 0
 15697                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 15698                           
 15699  07FF  0008               	return
 15700  0800                     __end_of_TMR5_DefaultInterruptHandler:
 15701                           
 15702                           	psect	text46
 15703  0EE2                     __ptext46:	
 15704 ;; *************** function _monitoring_ISR *****************
 15705 ;; Defined at:
 15706 ;;		line 514 in file "main.c"
 15707 ;; Parameters:    Size  Location     Type
 15708 ;;		None
 15709 ;; Auto vars:     Size  Location     Type
 15710 ;;		None
 15711 ;; Return value:  Size  Location     Type
 15712 ;;                  1    wreg      void 
 15713 ;; Registers used:
 15714 ;;		wreg, status,2, status,0, pclath, cstack
 15715 ;; Tracked objects:
 15716 ;;		On entry : 0/0
 15717 ;;		On exit  : 0/0
 15718 ;;		Unchanged: 0/0
 15719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15723 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15724 ;;Total ram usage:        3 bytes
 15725 ;; Hardware stack levels used:    1
 15726 ;; Hardware stack levels required when called:    2
 15727 ;; This function calls:
 15728 ;;		_ADCC_GetSingleConversion
 15729 ;;		_tsttc
 15730 ;;		i1_DATAEE_WriteByte
 15731 ;;		i1___wmul
 15732 ;; This function is called by:
 15733 ;;		_main
 15734 ;;		_TMR5_ISR
 15735 ;; This function uses a non-reentrant model
 15736 ;;
 15737                           
 15738                           
 15739                           ;psect for function _monitoring_ISR
 15740  0EE2                     _monitoring_ISR:
 15741  0EE2                     i1l5235:	
 15742                           ;incstack = 0
 15743                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 15744                           
 15745                           
 15746                           ;main.c: 515: temp = (uint8_t)tsttc();
 15747  0EE2  318D  25D5  318E   	fcall	_tsttc
 15748  0EE5  00FA               	movwf	??_monitoring_ISR
 15749  0EE6  087A               	movf	??_monitoring_ISR,w
 15750  0EE7  0020               	movlb	0	; select bank0
 15751  0EE8  00E3               	movwf	_temp
 15752                           
 15753                           ;main.c: 517: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 15754  0EE9  3000               	movlw	0
 15755  0EEA  3188  2000  318E   	fcall	_ADCC_GetSingleConversion
 15756  0EED  0870               	movf	?_ADCC_GetSingleConversion,w
 15757  0EEE  00FA               	movwf	??_monitoring_ISR
 15758  0EEF  0871               	movf	?_ADCC_GetSingleConversion+1,w
 15759  0EF0  00FB               	movwf	??_monitoring_ISR+1
 15760  0EF1  300D               	movlw	13
 15761  0EF2                     u470_25:
 15762  0EF2  36FB               	lsrf	??_monitoring_ISR+1,f
 15763  0EF3  0CFA               	rrf	??_monitoring_ISR,f
 15764  0EF4  0B89               	decfsz	9,f
 15765  0EF5  2EF2               	goto	u470_25
 15766  0EF6  087A               	movf	??_monitoring_ISR,w
 15767  0EF7  00FC               	movwf	??_monitoring_ISR+2
 15768  0EF8  087C               	movf	??_monitoring_ISR+2,w
 15769  0EF9  0020               	movlb	0	; select bank0
 15770  0EFA  00E2               	movwf	_lumLevel
 15771  0EFB                     i1l5237:
 15772                           
 15773                           ;main.c: 519: if(prevTemp != temp || prevLumLevel != lumLevel){
 15774  0EFB  0863               	movf	_temp,w
 15775  0EFC  00FA               	movwf	??_monitoring_ISR
 15776  0EFD  01FB               	clrf	??_monitoring_ISR+1
 15777  0EFE  086D               	movf	_prevTemp+1,w
 15778  0EFF  067B               	xorwf	??_monitoring_ISR+1,w
 15779  0F00  1D03               	skipz
 15780  0F01  2F04               	goto	u471_25
 15781  0F02  086C               	movf	_prevTemp,w
 15782  0F03  067A               	xorwf	??_monitoring_ISR,w
 15783  0F04                     u471_25:
 15784  0F04  1D03               	skipz
 15785  0F05  2F07               	goto	u471_21
 15786  0F06  2F08               	goto	u471_20
 15787  0F07                     u471_21:
 15788  0F07  2F15               	goto	i1l5241
 15789  0F08                     u471_20:
 15790  0F08                     i1l5239:
 15791  0F08  0862               	movf	_lumLevel,w
 15792  0F09  00FA               	movwf	??_monitoring_ISR
 15793  0F0A  01FB               	clrf	??_monitoring_ISR+1
 15794  0F0B  086B               	movf	_prevLumLevel+1,w
 15795  0F0C  067B               	xorwf	??_monitoring_ISR+1,w
 15796  0F0D  1D03               	skipz
 15797  0F0E  2F11               	goto	u472_25
 15798  0F0F  086A               	movf	_prevLumLevel,w
 15799  0F10  067A               	xorwf	??_monitoring_ISR,w
 15800  0F11                     u472_25:
 15801  0F11  1903               	skipnz
 15802  0F12  2F14               	goto	u472_21
 15803  0F13  2F15               	goto	u472_20
 15804  0F14                     u472_21:
 15805  0F14  2FC1               	goto	i1l5253
 15806  0F15                     u472_20:
 15807  0F15                     i1l5241:
 15808                           
 15809                           ;main.c: 521: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*0) , t.h);
 15810  0F15  0021               	movlb	1	; select bank1
 15811  0F16  086D               	movf	_idx_RingBuffer^(0+128),w
 15812  0F17  00FA               	movwf	??_monitoring_ISR
 15813  0F18  01FB               	clrf	??_monitoring_ISR+1
 15814  0F19  087A               	movf	??_monitoring_ISR,w
 15815  0F1A  00F0               	movwf	i1___wmul@multiplier
 15816  0F1B  087B               	movf	??_monitoring_ISR+1,w
 15817  0F1C  00F1               	movwf	i1___wmul@multiplier+1
 15818  0F1D  3005               	movlw	5
 15819  0F1E  00F2               	movwf	i1___wmul@multiplicand
 15820  0F1F  3000               	movlw	0
 15821  0F20  00F3               	movwf	i1___wmul@multiplicand+1
 15822  0F21  3196  2633  318E   	fcall	i1___wmul
 15823  0F24  0870               	movf	?i1___wmul,w
 15824  0F25  3E14               	addlw	20
 15825  0F26  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 15826  0F27  3070               	movlw	112
 15827  0F28  3D71               	addwfc	?i1___wmul+1,w
 15828  0F29  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 15829  0F2A  0020               	movlb	0	; select bank0
 15830  0F2B  0857               	movf	_t,w
 15831  0F2C  00FC               	movwf	??_monitoring_ISR+2
 15832  0F2D  087C               	movf	??_monitoring_ISR+2,w
 15833  0F2E  00F8               	movwf	i1DATAEE_WriteByte@bData
 15834  0F2F  3196  2615  318E   	fcall	i1_DATAEE_WriteByte
 15835                           
 15836                           ;main.c: 522: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*1) , t.m);
 15837  0F32  0021               	movlb	1	; select bank1
 15838  0F33  086D               	movf	_idx_RingBuffer^(0+128),w
 15839  0F34  00FA               	movwf	??_monitoring_ISR
 15840  0F35  01FB               	clrf	??_monitoring_ISR+1
 15841  0F36  087A               	movf	??_monitoring_ISR,w
 15842  0F37  00F0               	movwf	i1___wmul@multiplier
 15843  0F38  087B               	movf	??_monitoring_ISR+1,w
 15844  0F39  00F1               	movwf	i1___wmul@multiplier+1
 15845  0F3A  3005               	movlw	5
 15846  0F3B  00F2               	movwf	i1___wmul@multiplicand
 15847  0F3C  3000               	movlw	0
 15848  0F3D  00F3               	movwf	i1___wmul@multiplicand+1
 15849  0F3E  3196  2633  318E   	fcall	i1___wmul
 15850  0F41  0870               	movf	?i1___wmul,w
 15851  0F42  3E1C               	addlw	28
 15852  0F43  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 15853  0F44  3070               	movlw	112
 15854  0F45  3D71               	addwfc	?i1___wmul+1,w
 15855  0F46  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 15856  0F47  0020               	movlb	0	; select bank0
 15857  0F48  0858               	movf	_t+1,w
 15858  0F49  00FC               	movwf	??_monitoring_ISR+2
 15859  0F4A  087C               	movf	??_monitoring_ISR+2,w
 15860  0F4B  00F8               	movwf	i1DATAEE_WriteByte@bData
 15861  0F4C  3196  2615  318E   	fcall	i1_DATAEE_WriteByte
 15862                           
 15863                           ;main.c: 523: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*2) , t.s);
 15864  0F4F  0021               	movlb	1	; select bank1
 15865  0F50  086D               	movf	_idx_RingBuffer^(0+128),w
 15866  0F51  00FA               	movwf	??_monitoring_ISR
 15867  0F52  01FB               	clrf	??_monitoring_ISR+1
 15868  0F53  087A               	movf	??_monitoring_ISR,w
 15869  0F54  00F0               	movwf	i1___wmul@multiplier
 15870  0F55  087B               	movf	??_monitoring_ISR+1,w
 15871  0F56  00F1               	movwf	i1___wmul@multiplier+1
 15872  0F57  3005               	movlw	5
 15873  0F58  00F2               	movwf	i1___wmul@multiplicand
 15874  0F59  3000               	movlw	0
 15875  0F5A  00F3               	movwf	i1___wmul@multiplicand+1
 15876  0F5B  3196  2633  318E   	fcall	i1___wmul
 15877  0F5E  0870               	movf	?i1___wmul,w
 15878  0F5F  3E24               	addlw	36
 15879  0F60  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 15880  0F61  3070               	movlw	112
 15881  0F62  3D71               	addwfc	?i1___wmul+1,w
 15882  0F63  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 15883  0F64  0020               	movlb	0	; select bank0
 15884  0F65  0859               	movf	_t+2,w
 15885  0F66  00FC               	movwf	??_monitoring_ISR+2
 15886  0F67  087C               	movf	??_monitoring_ISR+2,w
 15887  0F68  00F8               	movwf	i1DATAEE_WriteByte@bData
 15888  0F69  3196  2615  318E   	fcall	i1_DATAEE_WriteByte
 15889                           
 15890                           ;main.c: 524: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*3) , temp);
 15891  0F6C  0021               	movlb	1	; select bank1
 15892  0F6D  086D               	movf	_idx_RingBuffer^(0+128),w
 15893  0F6E  00FA               	movwf	??_monitoring_ISR
 15894  0F6F  01FB               	clrf	??_monitoring_ISR+1
 15895  0F70  087A               	movf	??_monitoring_ISR,w
 15896  0F71  00F0               	movwf	i1___wmul@multiplier
 15897  0F72  087B               	movf	??_monitoring_ISR+1,w
 15898  0F73  00F1               	movwf	i1___wmul@multiplier+1
 15899  0F74  3005               	movlw	5
 15900  0F75  00F2               	movwf	i1___wmul@multiplicand
 15901  0F76  3000               	movlw	0
 15902  0F77  00F3               	movwf	i1___wmul@multiplicand+1
 15903  0F78  3196  2633  318E   	fcall	i1___wmul
 15904  0F7B  0870               	movf	?i1___wmul,w
 15905  0F7C  3E2C               	addlw	44
 15906  0F7D  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 15907  0F7E  3070               	movlw	112
 15908  0F7F  3D71               	addwfc	?i1___wmul+1,w
 15909  0F80  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 15910  0F81  0020               	movlb	0	; select bank0
 15911  0F82  0863               	movf	_temp,w
 15912  0F83  00FC               	movwf	??_monitoring_ISR+2
 15913  0F84  087C               	movf	??_monitoring_ISR+2,w
 15914  0F85  00F8               	movwf	i1DATAEE_WriteByte@bData
 15915  0F86  3196  2615  318E   	fcall	i1_DATAEE_WriteByte
 15916                           
 15917                           ;main.c: 525: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*4) , lumLevel);
 15918  0F89  0021               	movlb	1	; select bank1
 15919  0F8A  086D               	movf	_idx_RingBuffer^(0+128),w
 15920  0F8B  00FA               	movwf	??_monitoring_ISR
 15921  0F8C  01FB               	clrf	??_monitoring_ISR+1
 15922  0F8D  087A               	movf	??_monitoring_ISR,w
 15923  0F8E  00F0               	movwf	i1___wmul@multiplier
 15924  0F8F  087B               	movf	??_monitoring_ISR+1,w
 15925  0F90  00F1               	movwf	i1___wmul@multiplier+1
 15926  0F91  3005               	movlw	5
 15927  0F92  00F2               	movwf	i1___wmul@multiplicand
 15928  0F93  3000               	movlw	0
 15929  0F94  00F3               	movwf	i1___wmul@multiplicand+1
 15930  0F95  3196  2633  318E   	fcall	i1___wmul
 15931  0F98  0870               	movf	?i1___wmul,w
 15932  0F99  3E34               	addlw	52
 15933  0F9A  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 15934  0F9B  3070               	movlw	112
 15935  0F9C  3D71               	addwfc	?i1___wmul+1,w
 15936  0F9D  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 15937  0F9E  0020               	movlb	0	; select bank0
 15938  0F9F  0862               	movf	_lumLevel,w
 15939  0FA0  00FC               	movwf	??_monitoring_ISR+2
 15940  0FA1  087C               	movf	??_monitoring_ISR+2,w
 15941  0FA2  00F8               	movwf	i1DATAEE_WriteByte@bData
 15942  0FA3  3196  2615  318E   	fcall	i1_DATAEE_WriteByte
 15943  0FA6                     i1l5243:
 15944                           
 15945                           ;main.c: 527: idx_RingBuffer++;
 15946  0FA6  3001               	movlw	1
 15947  0FA7  00FA               	movwf	??_monitoring_ISR
 15948  0FA8  087A               	movf	??_monitoring_ISR,w
 15949  0FA9  0021               	movlb	1	; select bank1
 15950  0FAA  07ED               	addwf	_idx_RingBuffer^(0+128),f
 15951  0FAB                     i1l5245:
 15952                           
 15953                           ;main.c: 528: if(idx_RingBuffer > NREG){
 15954  0FAB  086D               	movf	_idx_RingBuffer^(0+128),w
 15955  0FAC  026F               	subwf	_NREG^(0+128),w
 15956  0FAD  1803               	skipnc
 15957  0FAE  2FB0               	goto	u473_21
 15958  0FAF  2FB1               	goto	u473_20
 15959  0FB0                     u473_21:
 15960  0FB0  2FB2               	goto	i1l5249
 15961  0FB1                     u473_20:
 15962  0FB1                     i1l5247:
 15963                           
 15964                           ;main.c: 529: idx_RingBuffer = 0;
 15965  0FB1  01ED               	clrf	_idx_RingBuffer^(0+128)
 15966  0FB2                     i1l5249:
 15967                           
 15968                           ;main.c: 530: };main.c: 531: prevTemp = temp;
 15969  0FB2  0020               	movlb	0	; select bank0
 15970  0FB3  0863               	movf	_temp,w
 15971  0FB4  00FA               	movwf	??_monitoring_ISR
 15972  0FB5  01FB               	clrf	??_monitoring_ISR+1
 15973  0FB6  087A               	movf	??_monitoring_ISR,w
 15974  0FB7  00EC               	movwf	_prevTemp
 15975  0FB8  087B               	movf	??_monitoring_ISR+1,w
 15976  0FB9  00ED               	movwf	_prevTemp+1
 15977  0FBA                     i1l5251:
 15978                           
 15979                           ;main.c: 532: prevLumLevel = lumLevel;
 15980  0FBA  0862               	movf	_lumLevel,w
 15981  0FBB  00FA               	movwf	??_monitoring_ISR
 15982  0FBC  01FB               	clrf	??_monitoring_ISR+1
 15983  0FBD  087A               	movf	??_monitoring_ISR,w
 15984  0FBE  00EA               	movwf	_prevLumLevel
 15985  0FBF  087B               	movf	??_monitoring_ISR+1,w
 15986  0FC0  00EB               	movwf	_prevLumLevel+1
 15987  0FC1                     i1l5253:
 15988                           
 15989                           ;main.c: 533: };main.c: 536: if(ALAF == 'A'){
 15990  0FC1  3041               	movlw	65
 15991  0FC2  0665               	xorwf	_ALAF,w
 15992  0FC3  1D03               	btfss	3,2
 15993  0FC4  2FC6               	goto	u474_21
 15994  0FC5  2FC7               	goto	u474_20
 15995  0FC6                     u474_21:
 15996  0FC6  2FFF               	goto	i1l1356
 15997  0FC7                     u474_20:
 15998  0FC7                     i1l5255:
 15999                           
 16000                           ;main.c: 538: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 16001  0FC7  0851               	movf	_lumAlarm,w
 16002  0FC8  0262               	subwf	_lumLevel,w
 16003  0FC9  1803               	skipnc
 16004  0FCA  2FCC               	goto	u475_21
 16005  0FCB  2FCD               	goto	u475_20
 16006  0FCC                     u475_21:
 16007  0FCC  2FE1               	goto	i1l5269
 16008  0FCD                     u475_20:
 16009  0FCD                     i1l5257:
 16010  0FCD  0860               	movf	_editingLumAlarm,w
 16011  0FCE  1D03               	btfss	3,2
 16012  0FCF  2FD1               	goto	u476_21
 16013  0FD0  2FD2               	goto	u476_20
 16014  0FD1                     u476_21:
 16015  0FD1  2FE1               	goto	i1l5269
 16016  0FD2                     u476_20:
 16017  0FD2                     i1l5259:
 16018                           
 16019                           ;main.c: 539: if(!lumAlarm.triggered){
 16020  0FD2  0853               	movf	_lumAlarm+2,w
 16021  0FD3  1D03               	btfss	3,2
 16022  0FD4  2FD6               	goto	u477_21
 16023  0FD5  2FD7               	goto	u477_20
 16024  0FD6                     u477_21:
 16025  0FD6  2FDB               	goto	i1l5263
 16026  0FD7                     u477_20:
 16027  0FD7                     i1l5261:
 16028                           
 16029                           ;main.c: 540: alarmPWMStart.h = 0xff;
 16030  0FD7  30FF               	movlw	255
 16031  0FD8  00FA               	movwf	??_monitoring_ISR
 16032  0FD9  087A               	movf	??_monitoring_ISR,w
 16033  0FDA  00E7               	movwf	_alarmPWMStart
 16034  0FDB                     i1l5263:
 16035                           
 16036                           ;main.c: 541: };main.c: 542: lumAlarm.triggered = 1;
 16037  0FDB  01D3               	clrf	_lumAlarm+2
 16038  0FDC  0AD3               	incf	_lumAlarm+2,f
 16039  0FDD                     i1l5265:
 16040                           
 16041                           ;main.c: 544: lumAlarm.trigger = 1;
 16042  0FDD  01D2               	clrf	_lumAlarm+1
 16043  0FDE  0AD2               	incf	_lumAlarm+1,f
 16044  0FDF                     i1l5267:
 16045  0FDF  1616               	bsf	22,4	;volatile
 16046  0FE0  2FE3               	goto	i1l5273
 16047  0FE1                     i1l5269:
 16048                           
 16049                           ;main.c: 547: lumAlarm.triggered = 0;
 16050  0FE1  01D3               	clrf	_lumAlarm+2
 16051  0FE2                     i1l5271:
 16052  0FE2  1216               	bcf	22,4	;volatile
 16053  0FE3                     i1l5273:
 16054                           
 16055                           ;main.c: 549: };main.c: 552: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 16056  0FE3  0863               	movf	_temp,w
 16057  0FE4  0254               	subwf	_tempAlarm,w
 16058  0FE5  1803               	skipnc
 16059  0FE6  2FE8               	goto	u478_21
 16060  0FE7  2FE9               	goto	u478_20
 16061  0FE8                     u478_21:
 16062  0FE8  2FFD               	goto	i1l5287
 16063  0FE9                     u478_20:
 16064  0FE9                     i1l5275:
 16065  0FE9  0861               	movf	_editingTempAlarm,w
 16066  0FEA  1D03               	btfss	3,2
 16067  0FEB  2FED               	goto	u479_21
 16068  0FEC  2FEE               	goto	u479_20
 16069  0FED                     u479_21:
 16070  0FED  2FFD               	goto	i1l5287
 16071  0FEE                     u479_20:
 16072  0FEE                     i1l5277:
 16073                           
 16074                           ;main.c: 553: if(!tempAlarm.triggered){
 16075  0FEE  0856               	movf	_tempAlarm+2,w
 16076  0FEF  1D03               	btfss	3,2
 16077  0FF0  2FF2               	goto	u480_21
 16078  0FF1  2FF3               	goto	u480_20
 16079  0FF2                     u480_21:
 16080  0FF2  2FF7               	goto	i1l5281
 16081  0FF3                     u480_20:
 16082  0FF3                     i1l5279:
 16083                           
 16084                           ;main.c: 554: alarmPWMStart.h = 0xff;
 16085  0FF3  30FF               	movlw	255
 16086  0FF4  00FA               	movwf	??_monitoring_ISR
 16087  0FF5  087A               	movf	??_monitoring_ISR,w
 16088  0FF6  00E7               	movwf	_alarmPWMStart
 16089  0FF7                     i1l5281:
 16090                           
 16091                           ;main.c: 555: };main.c: 557: tempAlarm.triggered = 1;
 16092  0FF7  01D6               	clrf	_tempAlarm+2
 16093  0FF8  0AD6               	incf	_tempAlarm+2,f
 16094  0FF9                     i1l5283:
 16095                           
 16096                           ;main.c: 559: tempAlarm.trigger = 1;
 16097  0FF9  01D5               	clrf	_tempAlarm+1
 16098  0FFA  0AD5               	incf	_tempAlarm+1,f
 16099  0FFB                     i1l5285:
 16100  0FFB  1696               	bsf	22,5	;volatile
 16101  0FFC  2FFF               	goto	i1l1356
 16102  0FFD                     i1l5287:
 16103                           
 16104                           ;main.c: 563: tempAlarm.triggered = 0;
 16105  0FFD  01D6               	clrf	_tempAlarm+2
 16106  0FFE                     i1l5289:
 16107  0FFE  1296               	bcf	22,5	;volatile
 16108  0FFF                     i1l1356:
 16109  0FFF  0008               	return
 16110  1000                     __end_of_monitoring_ISR:
 16111                           
 16112                           	psect	text47
 16113  0DD5                     __ptext47:	
 16114 ;; *************** function _tsttc *****************
 16115 ;; Defined at:
 16116 ;;		line 117 in file "main.c"
 16117 ;; Parameters:    Size  Location     Type
 16118 ;;		None
 16119 ;; Auto vars:     Size  Location     Type
 16120 ;;  value           1    3[COMMON] unsigned char 
 16121 ;; Return value:  Size  Location     Type
 16122 ;;                  1    wreg      unsigned char 
 16123 ;; Registers used:
 16124 ;;		wreg, status,2, status,0, pclath, cstack
 16125 ;; Tracked objects:
 16126 ;;		On entry : 0/0
 16127 ;;		On exit  : 0/0
 16128 ;;		Unchanged: 0/0
 16129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16134 ;;Total ram usage:        2 bytes
 16135 ;; Hardware stack levels used:    1
 16136 ;; Hardware stack levels required when called:    1
 16137 ;; This function calls:
 16138 ;;		_ReadI2C
 16139 ;;		i1_WriteI2C
 16140 ;; This function is called by:
 16141 ;;		_monitoring_ISR
 16142 ;; This function uses a non-reentrant model
 16143 ;;
 16144                           
 16145                           
 16146                           ;psect for function _tsttc
 16147  0DD5                     _tsttc:
 16148  0DD5                     i1l993:	
 16149                           ;incstack = 0
 16150                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 16151                           ;main.c: 119: unsigned char value;;main.c: 120: do{
 16152                           
 16153  0DD5                     i1l4499:	
 16154                           ;main.c: 121: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16155                           
 16156  0DD5  0023               	movlb	3	; select bank3
 16157  0DD6  0C0F               	rrf	15,w	;volatile
 16158  0DD7  0C89               	rrf	9,f
 16159  0DD8  3901               	andlw	1
 16160  0DD9  00F2               	movwf	??_tsttc
 16161  0DDA  0811               	movf	17,w	;volatile
 16162  0DDB  391F               	andlw	31
 16163  0DDC  0472               	iorwf	??_tsttc,w
 16164  0DDD  1D03               	btfss	3,2
 16165  0DDE  2DE0               	goto	u349_21
 16166  0DDF  2DE1               	goto	u349_20
 16167  0DE0                     u349_21:
 16168  0DE0  2DD5               	goto	i1l4499
 16169  0DE1                     u349_20:
 16170  0DE1                     i1l996:
 16171                           
 16172                           ;main.c: 122: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 16173  0DE1  1411               	bsf	17,0	;volatile
 16174  0DE2                     i1l997:
 16175  0DE2  1811               	btfsc	17,0	;volatile
 16176  0DE3  2DE5               	goto	u350_21
 16177  0DE4  2DE6               	goto	u350_20
 16178  0DE5                     u350_21:
 16179  0DE5  2DE2               	goto	i1l997
 16180  0DE6                     u350_20:
 16181  0DE6                     i1l4501:
 16182  0DE6  0C0F               	rrf	15,w	;volatile
 16183  0DE7  0C89               	rrf	9,f
 16184  0DE8  3901               	andlw	1
 16185  0DE9  00F2               	movwf	??_tsttc
 16186  0DEA  0811               	movf	17,w	;volatile
 16187  0DEB  391F               	andlw	31
 16188  0DEC  0472               	iorwf	??_tsttc,w
 16189  0DED  1D03               	btfss	3,2
 16190  0DEE  2DF0               	goto	u351_21
 16191  0DEF  2DF1               	goto	u351_20
 16192  0DF0                     u351_21:
 16193  0DF0  2DE6               	goto	i1l4501
 16194  0DF1                     u351_20:
 16195  0DF1                     i1l4503:
 16196                           
 16197                           ;main.c: 124: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16198  0DF1  309A               	movlw	154
 16199  0DF2  3189  21C9  318D   	fcall	i1_WriteI2C
 16200  0DF5                     i1l4505:
 16201  0DF5  0023               	movlb	3	; select bank3
 16202  0DF6  0C0F               	rrf	15,w	;volatile
 16203  0DF7  0C89               	rrf	9,f
 16204  0DF8  3901               	andlw	1
 16205  0DF9  00F2               	movwf	??_tsttc
 16206  0DFA  0811               	movf	17,w	;volatile
 16207  0DFB  391F               	andlw	31
 16208  0DFC  0472               	iorwf	??_tsttc,w
 16209  0DFD  1D03               	btfss	3,2
 16210  0DFE  2E00               	goto	u352_21
 16211  0DFF  2E01               	goto	u352_20
 16212  0E00                     u352_21:
 16213  0E00  2DF5               	goto	i1l4505
 16214  0E01                     u352_20:
 16215  0E01                     i1l4507:
 16216                           
 16217                           ;main.c: 125: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16218  0E01  3001               	movlw	1
 16219  0E02  3189  21C9  318D   	fcall	i1_WriteI2C
 16220  0E05                     i1l4509:
 16221  0E05  0023               	movlb	3	; select bank3
 16222  0E06  0C0F               	rrf	15,w	;volatile
 16223  0E07  0C89               	rrf	9,f
 16224  0E08  3901               	andlw	1
 16225  0E09  00F2               	movwf	??_tsttc
 16226  0E0A  0811               	movf	17,w	;volatile
 16227  0E0B  391F               	andlw	31
 16228  0E0C  0472               	iorwf	??_tsttc,w
 16229  0E0D  1D03               	btfss	3,2
 16230  0E0E  2E10               	goto	u353_21
 16231  0E0F  2E11               	goto	u353_20
 16232  0E10                     u353_21:
 16233  0E10  2E05               	goto	i1l4509
 16234  0E11                     u353_20:
 16235  0E11                     i1l1008:
 16236                           
 16237                           ;main.c: 126: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
 16238  0E11  1491               	bsf	17,1	;volatile
 16239  0E12                     i1l1009:
 16240  0E12  1891               	btfsc	17,1	;volatile
 16241  0E13  2E15               	goto	u354_21
 16242  0E14  2E16               	goto	u354_20
 16243  0E15                     u354_21:
 16244  0E15  2E12               	goto	i1l1009
 16245  0E16                     u354_20:
 16246  0E16                     i1l4511:
 16247  0E16  0C0F               	rrf	15,w	;volatile
 16248  0E17  0C89               	rrf	9,f
 16249  0E18  3901               	andlw	1
 16250  0E19  00F2               	movwf	??_tsttc
 16251  0E1A  0811               	movf	17,w	;volatile
 16252  0E1B  391F               	andlw	31
 16253  0E1C  0472               	iorwf	??_tsttc,w
 16254  0E1D  1D03               	btfss	3,2
 16255  0E1E  2E20               	goto	u355_21
 16256  0E1F  2E21               	goto	u355_20
 16257  0E20                     u355_21:
 16258  0E20  2E16               	goto	i1l4511
 16259  0E21                     u355_20:
 16260  0E21                     i1l4513:
 16261                           
 16262                           ;main.c: 127: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16263  0E21  309B               	movlw	155
 16264  0E22  3189  21C9  318D   	fcall	i1_WriteI2C
 16265  0E25                     i1l4515:
 16266  0E25  0023               	movlb	3	; select bank3
 16267  0E26  0C0F               	rrf	15,w	;volatile
 16268  0E27  0C89               	rrf	9,f
 16269  0E28  3901               	andlw	1
 16270  0E29  00F2               	movwf	??_tsttc
 16271  0E2A  0811               	movf	17,w	;volatile
 16272  0E2B  391F               	andlw	31
 16273  0E2C  0472               	iorwf	??_tsttc,w
 16274  0E2D  1D03               	btfss	3,2
 16275  0E2E  2E30               	goto	u356_21
 16276  0E2F  2E31               	goto	u356_20
 16277  0E30                     u356_21:
 16278  0E30  2E25               	goto	i1l4515
 16279  0E31                     u356_20:
 16280  0E31                     i1l4517:
 16281                           
 16282                           ;main.c: 128: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16283  0E31  3195  25E0  318D   	fcall	_ReadI2C
 16284  0E34  00F2               	movwf	??_tsttc
 16285  0E35  0872               	movf	??_tsttc,w
 16286  0E36  00F3               	movwf	tsttc@value
 16287  0E37                     i1l4519:
 16288  0E37  0023               	movlb	3	; select bank3
 16289  0E38  0C0F               	rrf	15,w	;volatile
 16290  0E39  0C89               	rrf	9,f
 16291  0E3A  3901               	andlw	1
 16292  0E3B  00F2               	movwf	??_tsttc
 16293  0E3C  0811               	movf	17,w	;volatile
 16294  0E3D  391F               	andlw	31
 16295  0E3E  0472               	iorwf	??_tsttc,w
 16296  0E3F  1D03               	btfss	3,2
 16297  0E40  2E42               	goto	u357_21
 16298  0E41  2E43               	goto	u357_20
 16299  0E42                     u357_21:
 16300  0E42  2E37               	goto	i1l4519
 16301  0E43                     u357_20:
 16302  0E43                     i1l1020:
 16303                           
 16304                           ;main.c: 129: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16305  0E43  1691               	bsf	17,5	;volatile
 16306  0E44  1611               	bsf	17,4	;volatile
 16307  0E45                     i1l1021:
 16308  0E45  1A11               	btfsc	17,4	;volatile
 16309  0E46  2E48               	goto	u358_21
 16310  0E47  2E49               	goto	u358_20
 16311  0E48                     u358_21:
 16312  0E48  2E45               	goto	i1l1021
 16313  0E49                     u358_20:
 16314  0E49                     i1l4521:
 16315  0E49  0C0F               	rrf	15,w	;volatile
 16316  0E4A  0C89               	rrf	9,f
 16317  0E4B  3901               	andlw	1
 16318  0E4C  00F2               	movwf	??_tsttc
 16319  0E4D  0811               	movf	17,w	;volatile
 16320  0E4E  391F               	andlw	31
 16321  0E4F  0472               	iorwf	??_tsttc,w
 16322  0E50  1D03               	btfss	3,2
 16323  0E51  2E53               	goto	u359_21
 16324  0E52  2E54               	goto	u359_20
 16325  0E53                     u359_21:
 16326  0E53  2E49               	goto	i1l4521
 16327  0E54                     u359_20:
 16328  0E54                     i1l1026:
 16329                           
 16330                           ;main.c: 130: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 16331  0E54  1511               	bsf	17,2	;volatile
 16332  0E55                     i1l1027:
 16333  0E55  1911               	btfsc	17,2	;volatile
 16334  0E56  2E58               	goto	u360_21
 16335  0E57  2E59               	goto	u360_20
 16336  0E58                     u360_21:
 16337  0E58  2E55               	goto	i1l1027
 16338  0E59                     u360_20:
 16339  0E59                     i1l1029:
 16340                           
 16341                           ;main.c: 131: } while (!(value & 0x40));
 16342  0E59  1F73               	btfss	tsttc@value,6
 16343  0E5A  2E5C               	goto	u361_21
 16344  0E5B  2E5D               	goto	u361_20
 16345  0E5C                     u361_21:
 16346  0E5C  2DD5               	goto	i1l993
 16347  0E5D                     u361_20:
 16348  0E5D                     i1l4523:
 16349  0E5D  0C0F               	rrf	15,w	;volatile
 16350  0E5E  0C89               	rrf	9,f
 16351  0E5F  3901               	andlw	1
 16352  0E60  00F2               	movwf	??_tsttc
 16353  0E61  0811               	movf	17,w	;volatile
 16354  0E62  391F               	andlw	31
 16355  0E63  0472               	iorwf	??_tsttc,w
 16356  0E64  1D03               	btfss	3,2
 16357  0E65  2E67               	goto	u362_21
 16358  0E66  2E68               	goto	u362_20
 16359  0E67                     u362_21:
 16360  0E67  2E5D               	goto	i1l4523
 16361  0E68                     u362_20:
 16362  0E68                     i1l1033:
 16363                           
 16364                           ;main.c: 134: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 16365  0E68  1411               	bsf	17,0	;volatile
 16366  0E69                     i1l1034:
 16367  0E69  1811               	btfsc	17,0	;volatile
 16368  0E6A  2E6C               	goto	u363_21
 16369  0E6B  2E6D               	goto	u363_20
 16370  0E6C                     u363_21:
 16371  0E6C  2E69               	goto	i1l1034
 16372  0E6D                     u363_20:
 16373  0E6D                     i1l4525:
 16374  0E6D  0C0F               	rrf	15,w	;volatile
 16375  0E6E  0C89               	rrf	9,f
 16376  0E6F  3901               	andlw	1
 16377  0E70  00F2               	movwf	??_tsttc
 16378  0E71  0811               	movf	17,w	;volatile
 16379  0E72  391F               	andlw	31
 16380  0E73  0472               	iorwf	??_tsttc,w
 16381  0E74  1D03               	btfss	3,2
 16382  0E75  2E77               	goto	u364_21
 16383  0E76  2E78               	goto	u364_20
 16384  0E77                     u364_21:
 16385  0E77  2E6D               	goto	i1l4525
 16386  0E78                     u364_20:
 16387  0E78                     i1l4527:
 16388                           
 16389                           ;main.c: 135: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16390  0E78  309A               	movlw	154
 16391  0E79  3189  21C9  318D   	fcall	i1_WriteI2C
 16392  0E7C                     i1l4529:
 16393  0E7C  0023               	movlb	3	; select bank3
 16394  0E7D  0C0F               	rrf	15,w	;volatile
 16395  0E7E  0C89               	rrf	9,f
 16396  0E7F  3901               	andlw	1
 16397  0E80  00F2               	movwf	??_tsttc
 16398  0E81  0811               	movf	17,w	;volatile
 16399  0E82  391F               	andlw	31
 16400  0E83  0472               	iorwf	??_tsttc,w
 16401  0E84  1D03               	btfss	3,2
 16402  0E85  2E87               	goto	u365_21
 16403  0E86  2E88               	goto	u365_20
 16404  0E87                     u365_21:
 16405  0E87  2E7C               	goto	i1l4529
 16406  0E88                     u365_20:
 16407  0E88                     i1l4531:
 16408                           
 16409                           ;main.c: 136: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16410  0E88  3000               	movlw	0
 16411  0E89  3189  21C9  318D   	fcall	i1_WriteI2C
 16412  0E8C                     i1l4533:
 16413  0E8C  0023               	movlb	3	; select bank3
 16414  0E8D  0C0F               	rrf	15,w	;volatile
 16415  0E8E  0C89               	rrf	9,f
 16416  0E8F  3901               	andlw	1
 16417  0E90  00F2               	movwf	??_tsttc
 16418  0E91  0811               	movf	17,w	;volatile
 16419  0E92  391F               	andlw	31
 16420  0E93  0472               	iorwf	??_tsttc,w
 16421  0E94  1D03               	btfss	3,2
 16422  0E95  2E97               	goto	u366_21
 16423  0E96  2E98               	goto	u366_20
 16424  0E97                     u366_21:
 16425  0E97  2E8C               	goto	i1l4533
 16426  0E98                     u366_20:
 16427  0E98                     i1l1045:
 16428                           
 16429                           ;main.c: 137: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
 16430  0E98  1491               	bsf	17,1	;volatile
 16431  0E99                     i1l1046:
 16432  0E99  1891               	btfsc	17,1	;volatile
 16433  0E9A  2E9C               	goto	u367_21
 16434  0E9B  2E9D               	goto	u367_20
 16435  0E9C                     u367_21:
 16436  0E9C  2E99               	goto	i1l1046
 16437  0E9D                     u367_20:
 16438  0E9D                     i1l4535:
 16439  0E9D  0C0F               	rrf	15,w	;volatile
 16440  0E9E  0C89               	rrf	9,f
 16441  0E9F  3901               	andlw	1
 16442  0EA0  00F2               	movwf	??_tsttc
 16443  0EA1  0811               	movf	17,w	;volatile
 16444  0EA2  391F               	andlw	31
 16445  0EA3  0472               	iorwf	??_tsttc,w
 16446  0EA4  1D03               	btfss	3,2
 16447  0EA5  2EA7               	goto	u368_21
 16448  0EA6  2EA8               	goto	u368_20
 16449  0EA7                     u368_21:
 16450  0EA7  2E9D               	goto	i1l4535
 16451  0EA8                     u368_20:
 16452  0EA8                     i1l4537:
 16453                           
 16454                           ;main.c: 138: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16455  0EA8  309B               	movlw	155
 16456  0EA9  3189  21C9  318D   	fcall	i1_WriteI2C
 16457  0EAC                     i1l4539:
 16458  0EAC  0023               	movlb	3	; select bank3
 16459  0EAD  0C0F               	rrf	15,w	;volatile
 16460  0EAE  0C89               	rrf	9,f
 16461  0EAF  3901               	andlw	1
 16462  0EB0  00F2               	movwf	??_tsttc
 16463  0EB1  0811               	movf	17,w	;volatile
 16464  0EB2  391F               	andlw	31
 16465  0EB3  0472               	iorwf	??_tsttc,w
 16466  0EB4  1D03               	btfss	3,2
 16467  0EB5  2EB7               	goto	u369_21
 16468  0EB6  2EB8               	goto	u369_20
 16469  0EB7                     u369_21:
 16470  0EB7  2EAC               	goto	i1l4539
 16471  0EB8                     u369_20:
 16472  0EB8                     i1l4541:
 16473                           
 16474                           ;main.c: 139: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16475  0EB8  3195  25E0  318D   	fcall	_ReadI2C
 16476  0EBB  00F2               	movwf	??_tsttc
 16477  0EBC  0872               	movf	??_tsttc,w
 16478  0EBD  00F3               	movwf	tsttc@value
 16479  0EBE                     i1l4543:
 16480  0EBE  0023               	movlb	3	; select bank3
 16481  0EBF  0C0F               	rrf	15,w	;volatile
 16482  0EC0  0C89               	rrf	9,f
 16483  0EC1  3901               	andlw	1
 16484  0EC2  00F2               	movwf	??_tsttc
 16485  0EC3  0811               	movf	17,w	;volatile
 16486  0EC4  391F               	andlw	31
 16487  0EC5  0472               	iorwf	??_tsttc,w
 16488  0EC6  1D03               	btfss	3,2
 16489  0EC7  2EC9               	goto	u370_21
 16490  0EC8  2ECA               	goto	u370_20
 16491  0EC9                     u370_21:
 16492  0EC9  2EBE               	goto	i1l4543
 16493  0ECA                     u370_20:
 16494  0ECA                     i1l1057:
 16495                           
 16496                           ;main.c: 140: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16497  0ECA  1691               	bsf	17,5	;volatile
 16498  0ECB  1611               	bsf	17,4	;volatile
 16499  0ECC                     i1l1058:
 16500  0ECC  1A11               	btfsc	17,4	;volatile
 16501  0ECD  2ECF               	goto	u371_21
 16502  0ECE  2ED0               	goto	u371_20
 16503  0ECF                     u371_21:
 16504  0ECF  2ECC               	goto	i1l1058
 16505  0ED0                     u371_20:
 16506  0ED0                     i1l4545:
 16507  0ED0  0C0F               	rrf	15,w	;volatile
 16508  0ED1  0C89               	rrf	9,f
 16509  0ED2  3901               	andlw	1
 16510  0ED3  00F2               	movwf	??_tsttc
 16511  0ED4  0811               	movf	17,w	;volatile
 16512  0ED5  391F               	andlw	31
 16513  0ED6  0472               	iorwf	??_tsttc,w
 16514  0ED7  1D03               	btfss	3,2
 16515  0ED8  2EDA               	goto	u372_21
 16516  0ED9  2EDB               	goto	u372_20
 16517  0EDA                     u372_21:
 16518  0EDA  2ED0               	goto	i1l4545
 16519  0EDB                     u372_20:
 16520  0EDB                     i1l1063:
 16521                           
 16522                           ;main.c: 141: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 16523  0EDB  1511               	bsf	17,2	;volatile
 16524  0EDC                     i1l1064:
 16525  0EDC  1911               	btfsc	17,2	;volatile
 16526  0EDD  2EDF               	goto	u373_21
 16527  0EDE  2EE0               	goto	u373_20
 16528  0EDF                     u373_21:
 16529  0EDF  2EDC               	goto	i1l1064
 16530  0EE0                     u373_20:
 16531  0EE0                     i1l4547:
 16532                           
 16533                           ;main.c: 143: return value;
 16534  0EE0  0873               	movf	tsttc@value,w
 16535  0EE1                     i1l1067:
 16536  0EE1  0008               	return
 16537  0EE2                     __end_of_tsttc:
 16538                           
 16539                           	psect	text48
 16540  15E0                     __ptext48:	
 16541 ;; *************** function _ReadI2C *****************
 16542 ;; Defined at:
 16543 ;;		line 32 in file "I2C/i2c.c"
 16544 ;; Parameters:    Size  Location     Type
 16545 ;;		None
 16546 ;; Auto vars:     Size  Location     Type
 16547 ;;		None
 16548 ;; Return value:  Size  Location     Type
 16549 ;;                  1    wreg      unsigned char 
 16550 ;; Registers used:
 16551 ;;		wreg, status,2, status,0
 16552 ;; Tracked objects:
 16553 ;;		On entry : 0/0
 16554 ;;		On exit  : 0/0
 16555 ;;		Unchanged: 0/0
 16556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16559 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16560 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16561 ;;Total ram usage:        1 bytes
 16562 ;; Hardware stack levels used:    1
 16563 ;; This function calls:
 16564 ;;		Nothing
 16565 ;; This function is called by:
 16566 ;;		_tsttc
 16567 ;;		_LCDrecv
 16568 ;; This function uses a non-reentrant model
 16569 ;;
 16570                           
 16571                           
 16572                           ;psect for function _ReadI2C
 16573  15E0                     _ReadI2C:
 16574  15E0                     i1l4357:	
 16575                           ;incstack = 0
 16576                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 16577                           
 16578                           
 16579                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 16580  15E0  300F               	movlw	15
 16581  15E1  0023               	movlb	3	; select bank3
 16582  15E2  0510               	andwf	16,w	;volatile
 16583  15E3  00F0               	movwf	??_ReadI2C
 16584  15E4  3008               	movlw	8
 16585  15E5  0670               	xorwf	??_ReadI2C,w
 16586  15E6  1903               	btfsc	3,2
 16587  15E7  2DE9               	goto	u317_21
 16588  15E8  2DEA               	goto	u317_20
 16589  15E9                     u317_21:
 16590  15E9  2DF3               	goto	i1l22
 16591  15EA                     u317_20:
 16592  15EA                     i1l4359:
 16593  15EA  300F               	movlw	15
 16594  15EB  0510               	andwf	16,w	;volatile
 16595  15EC  00F0               	movwf	??_ReadI2C
 16596  15ED  300B               	movlw	11
 16597  15EE  0670               	xorwf	??_ReadI2C,w
 16598  15EF  1D03               	btfss	3,2
 16599  15F0  2DF2               	goto	u318_21
 16600  15F1  2DF3               	goto	u318_20
 16601  15F2                     u318_21:
 16602  15F2  2DF4               	goto	i1l23
 16603  15F3                     u318_20:
 16604  15F3                     i1l22:
 16605                           
 16606                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 16607  15F3  1591               	bsf	17,3	;volatile
 16608  15F4                     i1l23:
 16609  15F4  1C0F               	btfss	15,0	;volatile
 16610  15F5  2DF7               	goto	u319_21
 16611  15F6  2DF8               	goto	u319_20
 16612  15F7                     u319_21:
 16613  15F7  2DF4               	goto	i1l23
 16614  15F8                     u319_20:
 16615  15F8                     i1l4361:
 16616                           
 16617                           ;i2c.c: 37: return ( SSP1BUF );
 16618  15F8  080C               	movf	12,w	;volatile
 16619  15F9                     i1l26:
 16620  15F9  0008               	return
 16621  15FA                     __end_of_ReadI2C:
 16622                           
 16623                           	psect	text49
 16624  0800                     __ptext49:	
 16625 ;; *************** function _ADCC_GetSingleConversion *****************
 16626 ;; Defined at:
 16627 ;;		line 130 in file "mcc_generated_files/adcc.c"
 16628 ;; Parameters:    Size  Location     Type
 16629 ;;  channel         1    wreg     enum E12086
 16630 ;; Auto vars:     Size  Location     Type
 16631 ;;  channel         1    3[COMMON] enum E12086
 16632 ;; Return value:  Size  Location     Type
 16633 ;;                  2    0[COMMON] unsigned int 
 16634 ;; Registers used:
 16635 ;;		wreg
 16636 ;; Tracked objects:
 16637 ;;		On entry : 0/0
 16638 ;;		On exit  : 0/0
 16639 ;;		Unchanged: 0/0
 16640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16641 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16644 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16645 ;;Total ram usage:        4 bytes
 16646 ;; Hardware stack levels used:    1
 16647 ;; This function calls:
 16648 ;;		Nothing
 16649 ;; This function is called by:
 16650 ;;		_monitoring_ISR
 16651 ;; This function uses a non-reentrant model
 16652 ;;
 16653                           
 16654                           
 16655                           ;psect for function _ADCC_GetSingleConversion
 16656  0800                     _ADCC_GetSingleConversion:
 16657                           
 16658                           ;incstack = 0
 16659                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 16660                           ;ADCC_GetSingleConversion@channel stored from wreg
 16661  0800  00F3               	movwf	ADCC_GetSingleConversion@channel
 16662  0801                     i1l4479:
 16663                           
 16664                           ;adcc.c: 133: ADPCH = channel;
 16665  0801  0873               	movf	ADCC_GetSingleConversion@channel,w
 16666  0802  0021               	movlb	1	; select bank1
 16667  0803  009E               	movwf	30	;volatile
 16668  0804                     i1l4481:
 16669                           
 16670                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 16671  0804  1793               	bsf	19,7	;volatile
 16672  0805                     i1l4483:
 16673                           
 16674                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 16675  0805  1313               	bcf	19,6	;volatile
 16676  0806                     i1l4485:
 16677                           
 16678                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 16679  0806  1413               	bsf	19,0	;volatile
 16680  0807                     i1l4487:
 16681                           
 16682                           ;adcc.c: 145: __nop();
 16683  0807  0000               	nop
 16684  0808                     i1l613:	
 16685                           ;adcc.c: 149: {
 16686                           
 16687  0808  0021               	movlb	1	; select bank1
 16688  0809  1813               	btfsc	19,0	;volatile
 16689  080A  280C               	goto	u348_21
 16690  080B  280D               	goto	u348_20
 16691  080C                     u348_21:
 16692  080C  2808               	goto	i1l613
 16693  080D                     u348_20:
 16694  080D                     i1l4489:
 16695                           
 16696                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 16697  080D  080D               	movf	13,w	;volatile
 16698  080E  00F1               	movwf	?_ADCC_GetSingleConversion+1
 16699  080F  080C               	movf	12,w	;volatile
 16700  0810  00F0               	movwf	?_ADCC_GetSingleConversion
 16701  0811                     i1l616:
 16702  0811  0008               	return
 16703  0812                     __end_of_ADCC_GetSingleConversion:
 16704                           
 16705                           	psect	text50
 16706  1532                     __ptext50:	
 16707 ;; *************** function _TMR5_WriteTimer *****************
 16708 ;; Defined at:
 16709 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 16710 ;; Parameters:    Size  Location     Type
 16711 ;;  timerVal        2    0[COMMON] unsigned int 
 16712 ;; Auto vars:     Size  Location     Type
 16713 ;;		None
 16714 ;; Return value:  Size  Location     Type
 16715 ;;                  1    wreg      void 
 16716 ;; Registers used:
 16717 ;;		wreg, status,2
 16718 ;; Tracked objects:
 16719 ;;		On entry : 0/0
 16720 ;;		On exit  : 0/0
 16721 ;;		Unchanged: 0/0
 16722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16727 ;;Total ram usage:        2 bytes
 16728 ;; Hardware stack levels used:    1
 16729 ;; This function calls:
 16730 ;;		Nothing
 16731 ;; This function is called by:
 16732 ;;		_TMR5_ISR
 16733 ;;		_TMR5_Reload
 16734 ;; This function uses a non-reentrant model
 16735 ;;
 16736                           
 16737                           
 16738                           ;psect for function _TMR5_WriteTimer
 16739  1532                     _TMR5_WriteTimer:
 16740  1532                     i1l4961:	
 16741                           ;incstack = 0
 16742                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 16743                           
 16744                           
 16745                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 16746  1532  0024               	movlb	4	; select bank4
 16747  1533  1D1A               	btfss	26,2	;volatile
 16748  1534  2D36               	goto	u410_21
 16749  1535  2D37               	goto	u410_20
 16750  1536                     u410_21:
 16751  1536  2D3E               	goto	i1l4971
 16752  1537                     u410_20:
 16753  1537                     i1l4963:
 16754                           
 16755                           ;tmr5.c: 130: {;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 16756  1537  101A               	bcf	26,0	;volatile
 16757  1538                     i1l4965:
 16758                           
 16759                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 16760  1538  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 16761  1539  0099               	movwf	25	;volatile
 16762  153A                     i1l4967:
 16763                           
 16764                           ;tmr5.c: 136: TMR5L = timerVal;
 16765  153A  0870               	movf	TMR5_WriteTimer@timerVal,w
 16766  153B  0098               	movwf	24	;volatile
 16767  153C                     i1l4969:
 16768                           
 16769                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 16770  153C  141A               	bsf	26,0	;volatile
 16771                           
 16772                           ;tmr5.c: 140: }
 16773  153D  2D42               	goto	i1l727
 16774  153E                     i1l4971:
 16775                           
 16776                           ;tmr5.c: 141: else;tmr5.c: 142: {;tmr5.c: 144: TMR5H = (timerVal >> 8);
 16777  153E  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 16778  153F  0099               	movwf	25	;volatile
 16779  1540                     i1l4973:
 16780                           
 16781                           ;tmr5.c: 145: TMR5L = timerVal;
 16782  1540  0870               	movf	TMR5_WriteTimer@timerVal,w
 16783  1541  0098               	movwf	24	;volatile
 16784  1542                     i1l727:
 16785  1542  0008               	return
 16786  1543                     __end_of_TMR5_WriteTimer:
 16787                           
 16788                           	psect	text51
 16789  1582                     __ptext51:	
 16790 ;; *************** function _TMR3_ISR *****************
 16791 ;; Defined at:
 16792 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 16793 ;; Parameters:    Size  Location     Type
 16794 ;;		None
 16795 ;; Auto vars:     Size  Location     Type
 16796 ;;		None
 16797 ;; Return value:  Size  Location     Type
 16798 ;;                  1    wreg      void 
 16799 ;; Registers used:
 16800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16801 ;; Tracked objects:
 16802 ;;		On entry : 0/0
 16803 ;;		On exit  : 0/0
 16804 ;;		Unchanged: 0/0
 16805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16810 ;;Total ram usage:        0 bytes
 16811 ;; Hardware stack levels used:    1
 16812 ;; Hardware stack levels required when called:    5
 16813 ;; This function calls:
 16814 ;;		Absolute function
 16815 ;;		_TMR3_DefaultInterruptHandler
 16816 ;;		_TMR3_WriteTimer
 16817 ;;		_menuLCD_ISR
 16818 ;; This function is called by:
 16819 ;;		_INTERRUPT_InterruptManager
 16820 ;; This function uses a non-reentrant model
 16821 ;;
 16822                           
 16823                           
 16824                           ;psect for function _TMR3_ISR
 16825  1582                     _TMR3_ISR:
 16826  1582                     i1l5361:	
 16827                           ;incstack = 0
 16828                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16829                           
 16830                           
 16831                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 16832  1582  002E               	movlb	14	; select bank14
 16833  1583  1110               	bcf	16,2	;volatile
 16834  1584                     i1l5363:
 16835                           
 16836                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 16837  1584  0020               	movlb	0	; select bank0
 16838  1585  086F               	movf	_timer3ReloadVal+1,w	;volatile
 16839  1586  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 16840  1587  086E               	movf	_timer3ReloadVal,w	;volatile
 16841  1588  00F0               	movwf	TMR3_WriteTimer@timerVal
 16842  1589  3195  2521  3195   	fcall	_TMR3_WriteTimer
 16843  158C                     i1l5365:
 16844                           
 16845                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 16846  158C  0021               	movlb	1	; select bank1
 16847  158D  085C               	movf	_TMR3_InterruptHandler^(0+128),w
 16848  158E  045D               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 16849  158F  1903               	btfsc	3,2
 16850  1590  2D92               	goto	u485_21
 16851  1591  2D93               	goto	u485_20
 16852  1592                     u485_21:
 16853  1592  2D98               	goto	i1l512
 16854  1593                     u485_20:
 16855  1593                     i1l5367:
 16856                           
 16857                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 16858  1593  085D               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 16859  1594  008A               	movwf	10
 16860  1595  085C               	movf	_TMR3_InterruptHandler^(0+128),w
 16861  1596  000A               	callw
 16862  1597  3195               	pagesel	$
 16863  1598                     i1l512:
 16864  1598  0008               	return
 16865  1599                     __end_of_TMR3_ISR:
 16866                           
 16867                           	psect	text52
 16868  0003                     __ptext52:	
 16869 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 16870 ;; Defined at:
 16871 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 16872 ;; Parameters:    Size  Location     Type
 16873 ;;		None
 16874 ;; Auto vars:     Size  Location     Type
 16875 ;;		None
 16876 ;; Return value:  Size  Location     Type
 16877 ;;                  1    wreg      void 
 16878 ;; Registers used:
 16879 ;;		None
 16880 ;; Tracked objects:
 16881 ;;		On entry : 0/0
 16882 ;;		On exit  : 0/0
 16883 ;;		Unchanged: 0/0
 16884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16889 ;;Total ram usage:        0 bytes
 16890 ;; Hardware stack levels used:    1
 16891 ;; This function calls:
 16892 ;;		Nothing
 16893 ;; This function is called by:
 16894 ;;		_TMR3_Initialize
 16895 ;;		_TMR3_ISR
 16896 ;; This function uses a non-reentrant model
 16897 ;;
 16898                           
 16899                           
 16900                           ;psect for function _TMR3_DefaultInterruptHandler
 16901  0003                     _TMR3_DefaultInterruptHandler:
 16902  0003                     i1l518:	
 16903                           ;incstack = 0
 16904                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 16905                           
 16906  0003  0008               	return
 16907  0004                     __end_of_TMR3_DefaultInterruptHandler:
 16908                           
 16909                           	psect	text53
 16910  032D                     __ptext53:	
 16911 ;; *************** function _menuLCD_ISR *****************
 16912 ;; Defined at:
 16913 ;;		line 373 in file "main.c"
 16914 ;; Parameters:    Size  Location     Type
 16915 ;;		None
 16916 ;; Auto vars:     Size  Location     Type
 16917 ;;  diff            3   42[BANK0 ] struct Time
 16918 ;;  str             8   27[BANK0 ] unsigned char [8]
 16919 ;;  tt              4   35[BANK0 ] unsigned char [4]
 16920 ;;  l               3   39[BANK0 ] unsigned char [3]
 16921 ;; Return value:  Size  Location     Type
 16922 ;;                  1    wreg      void 
 16923 ;; Registers used:
 16924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16925 ;; Tracked objects:
 16926 ;;		On entry : 0/0
 16927 ;;		On exit  : 0/0
 16928 ;;		Unchanged: 0/0
 16929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16931 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16932 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16933 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16934 ;;Total ram usage:       24 bytes
 16935 ;; Hardware stack levels used:    1
 16936 ;; Hardware stack levels required when called:    4
 16937 ;; This function calls:
 16938 ;;		_LCDchar
 16939 ;;		_LCDcmd
 16940 ;;		_LCDstr
 16941 ;;		_PWM_Output_D4_Enable
 16942 ;;		_TMR2_StartTimer
 16943 ;;		_differenceBetweenTimePeriod
 16944 ;;		_sprintf
 16945 ;;		i1_PWM6_LoadDutyValue
 16946 ;;		i1_PWM_Output_D4_Disable
 16947 ;;		i1_TMR2_StopTimer
 16948 ;; This function is called by:
 16949 ;;		_main
 16950 ;;		_TMR3_ISR
 16951 ;; This function uses a non-reentrant model
 16952 ;;
 16953                           
 16954                           
 16955                           ;psect for function _menuLCD_ISR
 16956  032D                     _menuLCD_ISR:
 16957  032D                     i1l5091:	
 16958                           ;incstack = 0
 16959                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16960                           
 16961                           
 16962                           ;main.c: 374: char str[8];;main.c: 375: if(editingClockAlarm){
 16963  032D  0020               	movlb	0	; select bank0
 16964  032E  085C               	movf	_editingClockAlarm,w
 16965  032F  045D               	iorwf	_editingClockAlarm+1,w
 16966  0330  1903               	btfsc	3,2
 16967  0331  2B33               	goto	u440_21
 16968  0332  2B34               	goto	u440_20
 16969  0333                     u440_21:
 16970  0333  2B52               	goto	i1l5095
 16971  0334                     u440_20:
 16972  0334                     i1l5093:
 16973                           
 16974                           ;main.c: 376: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 16975  0334  3000               	movlw	low (STR_1| (0+32768))
 16976  0335  00A0               	movwf	sprintf@f
 16977  0336  3098               	movlw	high (STR_1| (0+32768))
 16978  0337  00A1               	movwf	sprintf@f+1
 16979  0338  084D               	movf	_clkAlarm,w
 16980  0339  00B5               	movwf	??_menuLCD_ISR
 16981  033A  01B6               	clrf	??_menuLCD_ISR+1
 16982  033B  0835               	movf	??_menuLCD_ISR,w
 16983  033C  00A2               	movwf	?_sprintf+2
 16984  033D  0836               	movf	??_menuLCD_ISR+1,w
 16985  033E  00A3               	movwf	?_sprintf+3
 16986  033F  084E               	movf	_clkAlarm+1,w
 16987  0340  00B7               	movwf	??_menuLCD_ISR+2
 16988  0341  01B8               	clrf	??_menuLCD_ISR+3
 16989  0342  0837               	movf	??_menuLCD_ISR+2,w
 16990  0343  00A4               	movwf	?_sprintf+4
 16991  0344  0838               	movf	??_menuLCD_ISR+3,w
 16992  0345  00A5               	movwf	?_sprintf+5
 16993  0346  084F               	movf	_clkAlarm+2,w
 16994  0347  00B9               	movwf	??_menuLCD_ISR+4
 16995  0348  01BA               	clrf	??_menuLCD_ISR+5
 16996  0349  0839               	movf	??_menuLCD_ISR+4,w
 16997  034A  00A6               	movwf	?_sprintf+6
 16998  034B  083A               	movf	??_menuLCD_ISR+5,w
 16999  034C  00A7               	movwf	?_sprintf+7
 17000  034D  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 17001  034E  3185  2558  3183   	fcall	_sprintf
 17002                           
 17003                           ;main.c: 377: } else {
 17004  0351  2B6F               	goto	i1l5097
 17005  0352                     i1l5095:
 17006                           
 17007                           ;main.c: 378: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 17008  0352  3000               	movlw	low (STR_1| (0+32768))
 17009  0353  00A0               	movwf	sprintf@f
 17010  0354  3098               	movlw	high (STR_1| (0+32768))
 17011  0355  00A1               	movwf	sprintf@f+1
 17012  0356  0857               	movf	_t,w
 17013  0357  00B5               	movwf	??_menuLCD_ISR
 17014  0358  01B6               	clrf	??_menuLCD_ISR+1
 17015  0359  0835               	movf	??_menuLCD_ISR,w
 17016  035A  00A2               	movwf	?_sprintf+2
 17017  035B  0836               	movf	??_menuLCD_ISR+1,w
 17018  035C  00A3               	movwf	?_sprintf+3
 17019  035D  0858               	movf	_t+1,w
 17020  035E  00B7               	movwf	??_menuLCD_ISR+2
 17021  035F  01B8               	clrf	??_menuLCD_ISR+3
 17022  0360  0837               	movf	??_menuLCD_ISR+2,w
 17023  0361  00A4               	movwf	?_sprintf+4
 17024  0362  0838               	movf	??_menuLCD_ISR+3,w
 17025  0363  00A5               	movwf	?_sprintf+5
 17026  0364  0859               	movf	_t+2,w
 17027  0365  00B9               	movwf	??_menuLCD_ISR+4
 17028  0366  01BA               	clrf	??_menuLCD_ISR+5
 17029  0367  0839               	movf	??_menuLCD_ISR+4,w
 17030  0368  00A6               	movwf	?_sprintf+6
 17031  0369  083A               	movf	??_menuLCD_ISR+5,w
 17032  036A  00A7               	movwf	?_sprintf+7
 17033  036B  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 17034  036C  3185  2558  3183   	fcall	_sprintf
 17035  036F                     i1l5097:
 17036                           
 17037                           ;main.c: 379: };main.c: 380: LCDcmd(0x80);
 17038  036F  3080               	movlw	128
 17039  0370  3194  2488  3183   	fcall	_LCDcmd
 17040  0373                     i1l5099:
 17041                           
 17042                           ;main.c: 381: LCDstr(str);
 17043  0373  303B               	movlw	low menuLCD_ISR@str
 17044  0374  00F9               	movwf	LCDstr@p
 17045  0375  3000               	movlw	high menuLCD_ISR@str
 17046  0376  00FA               	movwf	LCDstr@p+1
 17047  0377  3195  25FA  3183   	fcall	_LCDstr
 17048  037A                     i1l5101:
 17049                           
 17050                           ;main.c: 384: if(ALAF == 'A'){
 17051  037A  3041               	movlw	65
 17052  037B  0020               	movlb	0	; select bank0
 17053  037C  0665               	xorwf	_ALAF,w
 17054  037D  1D03               	btfss	3,2
 17055  037E  2B80               	goto	u441_21
 17056  037F  2B81               	goto	u441_20
 17057  0380                     u441_21:
 17058  0380  2C6F               	goto	i1l5171
 17059  0381                     u441_20:
 17060  0381                     i1l5103:
 17061                           
 17062                           ;main.c: 385: LCDcmd(0x8F);
 17063  0381  308F               	movlw	143
 17064  0382  3194  2488  3183   	fcall	_LCDcmd
 17065                           
 17066                           ;main.c: 386: LCDchar(ALAF);
 17067  0385  0020               	movlb	0	; select bank0
 17068  0386  0865               	movf	_ALAF,w
 17069  0387  3194  249D  3183   	fcall	_LCDchar
 17070  038A                     i1l5105:
 17071                           
 17072                           ;main.c: 389: if(clkAlarm.trigger == 1){
 17073  038A  0020               	movlb	0	; select bank0
 17074  038B  0350               	decf	_clkAlarm+3,w
 17075  038C  1D03               	btfss	3,2
 17076  038D  2B8F               	goto	u442_21
 17077  038E  2B90               	goto	u442_20
 17078  038F                     u442_21:
 17079  038F  2B99               	goto	i1l5109
 17080  0390                     u442_20:
 17081  0390                     i1l5107:
 17082                           
 17083                           ;main.c: 390: LCDcmd(0x8B);
 17084  0390  308B               	movlw	139
 17085  0391  3194  2488  3183   	fcall	_LCDcmd
 17086                           
 17087                           ;main.c: 391: LCDchar('C');
 17088  0394  3043               	movlw	67
 17089  0395  3194  249D  3183   	fcall	_LCDchar
 17090                           
 17091                           ;main.c: 392: } else if(modeFlag == 0){
 17092  0398  2BA7               	goto	i1l5113
 17093  0399                     i1l5109:
 17094  0399  085A               	movf	_modeFlag,w
 17095  039A  045B               	iorwf	_modeFlag+1,w
 17096  039B  1D03               	btfss	3,2
 17097  039C  2B9E               	goto	u443_21
 17098  039D  2B9F               	goto	u443_20
 17099  039E                     u443_21:
 17100  039E  2BA7               	goto	i1l5113
 17101  039F                     u443_20:
 17102  039F                     i1l5111:
 17103                           
 17104                           ;main.c: 393: LCDcmd(0x8B);
 17105  039F  308B               	movlw	139
 17106  03A0  3194  2488  3183   	fcall	_LCDcmd
 17107                           
 17108                           ;main.c: 394: LCDchar(' ');
 17109  03A3  3020               	movlw	32
 17110  03A4  3194  249D  3183   	fcall	_LCDchar
 17111  03A7                     i1l5113:
 17112                           
 17113                           ;main.c: 395: };main.c: 398: if(tempAlarm.trigger == 1){
 17114  03A7  0020               	movlb	0	; select bank0
 17115  03A8  0355               	decf	_tempAlarm+1,w
 17116  03A9  1D03               	btfss	3,2
 17117  03AA  2BAC               	goto	u444_21
 17118  03AB  2BAD               	goto	u444_20
 17119  03AC                     u444_21:
 17120  03AC  2BB6               	goto	i1l5117
 17121  03AD                     u444_20:
 17122  03AD                     i1l5115:
 17123                           
 17124                           ;main.c: 399: LCDcmd(0x8C);
 17125  03AD  308C               	movlw	140
 17126  03AE  3194  2488  3183   	fcall	_LCDcmd
 17127                           
 17128                           ;main.c: 400: LCDchar('T');
 17129  03B1  3054               	movlw	84
 17130  03B2  3194  249D  3183   	fcall	_LCDchar
 17131                           
 17132                           ;main.c: 401: } else if(modeFlag == 0){
 17133  03B5  2BC4               	goto	i1l5121
 17134  03B6                     i1l5117:
 17135  03B6  085A               	movf	_modeFlag,w
 17136  03B7  045B               	iorwf	_modeFlag+1,w
 17137  03B8  1D03               	btfss	3,2
 17138  03B9  2BBB               	goto	u445_21
 17139  03BA  2BBC               	goto	u445_20
 17140  03BB                     u445_21:
 17141  03BB  2BC4               	goto	i1l5121
 17142  03BC                     u445_20:
 17143  03BC                     i1l5119:
 17144                           
 17145                           ;main.c: 402: LCDcmd(0x8C);
 17146  03BC  308C               	movlw	140
 17147  03BD  3194  2488  3183   	fcall	_LCDcmd
 17148                           
 17149                           ;main.c: 403: LCDchar(' ');
 17150  03C0  3020               	movlw	32
 17151  03C1  3194  249D  3183   	fcall	_LCDchar
 17152  03C4                     i1l5121:
 17153                           
 17154                           ;main.c: 404: };main.c: 407: if(lumAlarm.trigger == 1){
 17155  03C4  0020               	movlb	0	; select bank0
 17156  03C5  0352               	decf	_lumAlarm+1,w
 17157  03C6  1D03               	btfss	3,2
 17158  03C7  2BC9               	goto	u446_21
 17159  03C8  2BCA               	goto	u446_20
 17160  03C9                     u446_21:
 17161  03C9  2BD3               	goto	i1l5125
 17162  03CA                     u446_20:
 17163  03CA                     i1l5123:
 17164                           
 17165                           ;main.c: 408: LCDcmd(0x8D);
 17166  03CA  308D               	movlw	141
 17167  03CB  3194  2488  3183   	fcall	_LCDcmd
 17168                           
 17169                           ;main.c: 409: LCDchar('L');
 17170  03CE  304C               	movlw	76
 17171  03CF  3194  249D  3183   	fcall	_LCDchar
 17172                           
 17173                           ;main.c: 410: } else if(modeFlag == 0){
 17174  03D2  2BE1               	goto	i1l5129
 17175  03D3                     i1l5125:
 17176  03D3  085A               	movf	_modeFlag,w
 17177  03D4  045B               	iorwf	_modeFlag+1,w
 17178  03D5  1D03               	btfss	3,2
 17179  03D6  2BD8               	goto	u447_21
 17180  03D7  2BD9               	goto	u447_20
 17181  03D8                     u447_21:
 17182  03D8  2BE1               	goto	i1l5129
 17183  03D9                     u447_20:
 17184  03D9                     i1l5127:
 17185                           
 17186                           ;main.c: 411: LCDcmd(0x8D);
 17187  03D9  308D               	movlw	141
 17188  03DA  3194  2488  3183   	fcall	_LCDcmd
 17189                           
 17190                           ;main.c: 412: LCDchar(' ');
 17191  03DD  3020               	movlw	32
 17192  03DE  3194  249D  3183   	fcall	_LCDchar
 17193  03E1                     i1l5129:
 17194                           
 17195                           ;main.c: 413: };main.c: 414: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 17196  03E1  0020               	movlb	0	; select bank0
 17197  03E2  0850               	movf	_clkAlarm+3,w
 17198  03E3  1D03               	btfss	3,2
 17199  03E4  2BE6               	goto	u448_21
 17200  03E5  2BE7               	goto	u448_20
 17201  03E6                     u448_21:
 17202  03E6  2BF1               	goto	i1l5135
 17203  03E7                     u448_20:
 17204  03E7                     i1l5131:
 17205  03E7  0855               	movf	_tempAlarm+1,w
 17206  03E8  1D03               	btfss	3,2
 17207  03E9  2BEB               	goto	u449_21
 17208  03EA  2BEC               	goto	u449_20
 17209  03EB                     u449_21:
 17210  03EB  2BF1               	goto	i1l5135
 17211  03EC                     u449_20:
 17212  03EC                     i1l5133:
 17213  03EC  0852               	movf	_lumAlarm+1,w
 17214  03ED  1903               	btfsc	3,2
 17215  03EE  2BF0               	goto	u450_21
 17216  03EF  2BF1               	goto	u450_20
 17217  03F0                     u450_21:
 17218  03F0  2C69               	goto	i1l1292
 17219  03F1                     u450_20:
 17220  03F1                     i1l5135:
 17221                           
 17222                           ;main.c: 415: if(alarmPWMStart.h == 0xff){
 17223  03F1  0A67               	incf	_alarmPWMStart,w
 17224  03F2  1D03               	btfss	3,2
 17225  03F3  2BF5               	goto	u451_21
 17226  03F4  2BF6               	goto	u451_20
 17227  03F5                     u451_21:
 17228  03F5  2C02               	goto	i1l1295
 17229  03F6                     u451_20:
 17230  03F6                     i1l5137:
 17231                           
 17232                           ;main.c: 416: alarmPWMStart.h = t.h;
 17233  03F6  0857               	movf	_t,w
 17234  03F7  00B5               	movwf	??_menuLCD_ISR
 17235  03F8  0835               	movf	??_menuLCD_ISR,w
 17236  03F9  00E7               	movwf	_alarmPWMStart
 17237                           
 17238                           ;main.c: 417: alarmPWMStart.m = t.m;
 17239  03FA  0858               	movf	_t+1,w
 17240  03FB  00B5               	movwf	??_menuLCD_ISR
 17241  03FC  0835               	movf	??_menuLCD_ISR,w
 17242  03FD  00E8               	movwf	_alarmPWMStart+1
 17243                           
 17244                           ;main.c: 418: alarmPWMStart.s = t.s;
 17245  03FE  0859               	movf	_t+2,w
 17246  03FF  00B5               	movwf	??_menuLCD_ISR
 17247  0400  0835               	movf	??_menuLCD_ISR,w
 17248  0401  00E9               	movwf	_alarmPWMStart+2
 17249  0402                     i1l1295:
 17250                           
 17251                           ;main.c: 419: };main.c: 420: struct Time diff = {0,0,0};
 17252  0402  0022               	movlb	2	; select bank2
 17253  0403  0830               	movf	menuLCD_ISR@F12906^(0+256),w
 17254  0404  0020               	movlb	0	; select bank0
 17255  0405  00CA               	movwf	menuLCD_ISR@diff
 17256  0406  0022               	movlb	2	; select bank2
 17257  0407  0831               	movf	(menuLCD_ISR@F12906+1)^(0+256),w
 17258  0408  0020               	movlb	0	; select bank0
 17259  0409  00CB               	movwf	menuLCD_ISR@diff+1
 17260  040A  0022               	movlb	2	; select bank2
 17261  040B  0832               	movf	(menuLCD_ISR@F12906+2)^(0+256),w
 17262  040C  0020               	movlb	0	; select bank0
 17263  040D  00CC               	movwf	menuLCD_ISR@diff+2
 17264  040E                     i1l5139:
 17265                           
 17266                           ;main.c: 421: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 17267  040E  0857               	movf	_t,w
 17268  040F  00F0               	movwf	differenceBetweenTimePeriod@start
 17269  0410  0858               	movf	_t+1,w
 17270  0411  00F1               	movwf	differenceBetweenTimePeriod@start+1
 17271  0412  0859               	movf	_t+2,w
 17272  0413  00F2               	movwf	differenceBetweenTimePeriod@start+2
 17273  0414  0867               	movf	_alarmPWMStart,w
 17274  0415  00F3               	movwf	differenceBetweenTimePeriod@stop
 17275  0416  0868               	movf	_alarmPWMStart+1,w
 17276  0417  00F4               	movwf	differenceBetweenTimePeriod@stop+1
 17277  0418  0869               	movf	_alarmPWMStart+2,w
 17278  0419  00F5               	movwf	differenceBetweenTimePeriod@stop+2
 17279  041A  304A               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 17280  041B  00B5               	movwf	??_menuLCD_ISR
 17281  041C  0835               	movf	??_menuLCD_ISR,w
 17282  041D  00F6               	movwf	differenceBetweenTimePeriod@diff
 17283  041E  3188  206C  3183   	fcall	_differenceBetweenTimePeriod
 17284  0421                     i1l5141:
 17285                           
 17286                           ;main.c: 423: if(diff.s <= TALA){
 17287  0421  0020               	movlb	0	; select bank0
 17288  0422  084C               	movf	menuLCD_ISR@diff+2,w
 17289  0423  0266               	subwf	_TALA,w
 17290  0424  1C03               	skipc
 17291  0425  2C27               	goto	u452_21
 17292  0426  2C28               	goto	u452_20
 17293  0427                     u452_21:
 17294  0427  2C55               	goto	i1l1298
 17295  0428                     u452_20:
 17296  0428                     i1l5143:
 17297                           
 17298                           ;main.c: 424: PWM_on = 1;
 17299  0428  0021               	movlb	1	; select bank1
 17300  0429  01EC               	clrf	_PWM_on^(0+128)
 17301  042A  0AEC               	incf	_PWM_on^(0+128),f
 17302                           
 17303                           ;main.c: 425: if(PWM6EN==0){
 17304  042B  0027               	movlb	7	; select bank7
 17305  042C  1B8E               	btfsc	14,7	;volatile
 17306  042D  2C2F               	goto	u453_21
 17307  042E  2C30               	goto	u453_20
 17308  042F                     u453_21:
 17309  042F  2C36               	goto	i1l5147
 17310  0430                     u453_20:
 17311  0430                     i1l5145:
 17312                           
 17313                           ;main.c: 426: TMR2_StartTimer();
 17314  0430  3194  244E  3183   	fcall	_TMR2_StartTimer
 17315                           
 17316                           ;main.c: 427: PWM_Output_D4_Enable();
 17317  0433  3194  2439  3183   	fcall	_PWM_Output_D4_Enable
 17318  0436                     i1l5147:
 17319                           
 17320                           ;main.c: 428: };main.c: 429: if(dimingLed <= 330){
 17321  0436  0020               	movlb	0	; select bank0
 17322  0437  085F               	movf	_dimingLed+1,w
 17323  0438  3A80               	xorlw	128
 17324  0439  00B5               	movwf	??_menuLCD_ISR
 17325  043A  3081               	movlw	129
 17326  043B  0235               	subwf	??_menuLCD_ISR,w
 17327  043C  1D03               	skipz
 17328  043D  2C40               	goto	u454_25
 17329  043E  304B               	movlw	75
 17330  043F  025E               	subwf	_dimingLed,w
 17331  0440                     u454_25:
 17332  0440  1803               	skipnc
 17333  0441  2C43               	goto	u454_21
 17334  0442  2C44               	goto	u454_20
 17335  0443                     u454_21:
 17336  0443  2C4A               	goto	i1l5151
 17337  0444                     u454_20:
 17338  0444                     i1l5149:
 17339                           
 17340                           ;main.c: 430: dimingLed += 30;
 17341  0444  301E               	movlw	30
 17342  0445  0020               	movlb	0	; select bank0
 17343  0446  07DE               	addwf	_dimingLed,f
 17344  0447  3000               	movlw	0
 17345  0448  3DDF               	addwfc	_dimingLed+1,f
 17346                           
 17347                           ;main.c: 431: } else{
 17348  0449  2C4D               	goto	i1l5153
 17349  044A                     i1l5151:
 17350                           
 17351                           ;main.c: 432: dimingLed = 0;
 17352  044A  0020               	movlb	0	; select bank0
 17353  044B  01DE               	clrf	_dimingLed
 17354  044C  01DF               	clrf	_dimingLed+1
 17355  044D                     i1l5153:
 17356                           
 17357                           ;main.c: 433: };main.c: 434: PWM6_LoadDutyValue(dimingLed);
 17358  044D  085F               	movf	_dimingLed+1,w
 17359  044E  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 17360  044F  085E               	movf	_dimingLed,w
 17361  0450  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 17362  0451  3195  2555  3183   	fcall	i1_PWM6_LoadDutyValue
 17363                           
 17364                           ;main.c: 435: } else if(PWM6EN==1){
 17365  0454  2C78               	goto	i1l1306
 17366  0455                     i1l1298:
 17367  0455  0027               	movlb	7	; select bank7
 17368  0456  1F8E               	btfss	14,7	;volatile
 17369  0457  2C59               	goto	u455_21
 17370  0458  2C5A               	goto	u455_20
 17371  0459                     u455_21:
 17372  0459  2C78               	goto	i1l1306
 17373  045A                     u455_20:
 17374  045A                     i1l5155:
 17375                           
 17376                           ;main.c: 436: PWM_on = 0;
 17377  045A  0021               	movlb	1	; select bank1
 17378  045B  01EC               	clrf	_PWM_on^(0+128)
 17379  045C                     i1l5157:
 17380                           
 17381                           ;main.c: 437: PWM6_LoadDutyValue(0);
 17382  045C  3000               	movlw	0
 17383  045D  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 17384  045E  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 17385  045F  3195  2555  3183   	fcall	i1_PWM6_LoadDutyValue
 17386  0462                     i1l5159:
 17387                           
 17388                           ;main.c: 438: TMR2_StopTimer();
 17389  0462  3194  2452  3183   	fcall	i1_TMR2_StopTimer
 17390  0465                     i1l5161:
 17391                           
 17392                           ;main.c: 439: PWM_Output_D4_Disable();
 17393  0465  3194  243F  3183   	fcall	i1_PWM_Output_D4_Disable
 17394  0468  2C78               	goto	i1l1306
 17395  0469                     i1l1292:
 17396                           
 17397                           ;main.c: 442: if(PWM6EN==1){
 17398  0469  0027               	movlb	7	; select bank7
 17399  046A  1F8E               	btfss	14,7	;volatile
 17400  046B  2C6D               	goto	u456_21
 17401  046C  2C6E               	goto	u456_20
 17402  046D                     u456_21:
 17403  046D  2C78               	goto	i1l1306
 17404  046E                     u456_20:
 17405  046E  2C5A               	goto	i1l5155
 17406  046F                     i1l5171:
 17407                           
 17408                           ;main.c: 450: LCDcmd(0x8F);
 17409  046F  308F               	movlw	143
 17410  0470  3194  2488  3183   	fcall	_LCDcmd
 17411                           
 17412                           ;main.c: 451: LCDchar(ALAF);
 17413  0473  0020               	movlb	0	; select bank0
 17414  0474  0865               	movf	_ALAF,w
 17415  0475  3194  249D  3183   	fcall	_LCDchar
 17416  0478                     i1l1306:
 17417                           
 17418                           ;main.c: 452: };main.c: 454: LCDcmd(0xc0);
 17419  0478  30C0               	movlw	192
 17420  0479  3194  2488  3183   	fcall	_LCDcmd
 17421  047C                     i1l5173:
 17422                           
 17423                           ;main.c: 455: char tt[4];;main.c: 456: if(editingTempAlarm){
 17424  047C  0020               	movlb	0	; select bank0
 17425  047D  0861               	movf	_editingTempAlarm,w
 17426  047E  1903               	btfsc	3,2
 17427  047F  2C81               	goto	u457_21
 17428  0480  2C82               	goto	u457_20
 17429  0481                     u457_21:
 17430  0481  2C92               	goto	i1l5177
 17431  0482                     u457_20:
 17432  0482                     i1l5175:
 17433                           
 17434                           ;main.c: 457: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 17435  0482  3022               	movlw	low (STR_3| (0+32768))
 17436  0483  00A0               	movwf	sprintf@f
 17437  0484  3098               	movlw	high (STR_3| (0+32768))
 17438  0485  00A1               	movwf	sprintf@f+1
 17439  0486  0854               	movf	_tempAlarm,w
 17440  0487  00B5               	movwf	??_menuLCD_ISR
 17441  0488  01B6               	clrf	??_menuLCD_ISR+1
 17442  0489  0835               	movf	??_menuLCD_ISR,w
 17443  048A  00A2               	movwf	?_sprintf+2
 17444  048B  0836               	movf	??_menuLCD_ISR+1,w
 17445  048C  00A3               	movwf	?_sprintf+3
 17446  048D  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 17447  048E  3185  2558  3183   	fcall	_sprintf
 17448                           
 17449                           ;main.c: 458: } else{
 17450  0491  2CA1               	goto	i1l5179
 17451  0492                     i1l5177:
 17452                           
 17453                           ;main.c: 459: sprintf(tt, "%02d C", temp);
 17454  0492  3022               	movlw	low (STR_3| (0+32768))
 17455  0493  00A0               	movwf	sprintf@f
 17456  0494  3098               	movlw	high (STR_3| (0+32768))
 17457  0495  00A1               	movwf	sprintf@f+1
 17458  0496  0863               	movf	_temp,w
 17459  0497  00B5               	movwf	??_menuLCD_ISR
 17460  0498  01B6               	clrf	??_menuLCD_ISR+1
 17461  0499  0835               	movf	??_menuLCD_ISR,w
 17462  049A  00A2               	movwf	?_sprintf+2
 17463  049B  0836               	movf	??_menuLCD_ISR+1,w
 17464  049C  00A3               	movwf	?_sprintf+3
 17465  049D  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 17466  049E  3185  2558  3183   	fcall	_sprintf
 17467  04A1                     i1l5179:
 17468                           
 17469                           ;main.c: 460: };main.c: 461: LCDstr(tt);
 17470  04A1  3043               	movlw	low menuLCD_ISR@tt
 17471  04A2  00F9               	movwf	LCDstr@p
 17472  04A3  3000               	movlw	high menuLCD_ISR@tt
 17473  04A4  00FA               	movwf	LCDstr@p+1
 17474  04A5  3195  25FA  3183   	fcall	_LCDstr
 17475  04A8                     i1l5181:
 17476                           
 17477                           ;main.c: 463: LCDcmd(0xcd);
 17478  04A8  30CD               	movlw	205
 17479  04A9  3194  2488  3183   	fcall	_LCDcmd
 17480  04AC                     i1l5183:
 17481                           
 17482                           ;main.c: 464: char l[3];;main.c: 466: if(editingLumAlarm){
 17483  04AC  0020               	movlb	0	; select bank0
 17484  04AD  0860               	movf	_editingLumAlarm,w
 17485  04AE  1903               	btfsc	3,2
 17486  04AF  2CB1               	goto	u458_21
 17487  04B0  2CB2               	goto	u458_20
 17488  04B1                     u458_21:
 17489  04B1  2CC2               	goto	i1l5187
 17490  04B2                     u458_20:
 17491  04B2                     i1l5185:
 17492                           
 17493                           ;main.c: 467: sprintf(l, "L %d", lumAlarm.alarmLum);
 17494  04B2  3029               	movlw	low (STR_5| (0+32768))
 17495  04B3  00A0               	movwf	sprintf@f
 17496  04B4  3098               	movlw	high (STR_5| (0+32768))
 17497  04B5  00A1               	movwf	sprintf@f+1
 17498  04B6  0851               	movf	_lumAlarm,w
 17499  04B7  00B5               	movwf	??_menuLCD_ISR
 17500  04B8  01B6               	clrf	??_menuLCD_ISR+1
 17501  04B9  0835               	movf	??_menuLCD_ISR,w
 17502  04BA  00A2               	movwf	?_sprintf+2
 17503  04BB  0836               	movf	??_menuLCD_ISR+1,w
 17504  04BC  00A3               	movwf	?_sprintf+3
 17505  04BD  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 17506  04BE  3185  2558  3183   	fcall	_sprintf
 17507                           
 17508                           ;main.c: 468: } else{
 17509  04C1  2CD1               	goto	i1l5189
 17510  04C2                     i1l5187:
 17511                           
 17512                           ;main.c: 469: sprintf(l, "L %d", lumLevel);
 17513  04C2  3029               	movlw	low (STR_5| (0+32768))
 17514  04C3  00A0               	movwf	sprintf@f
 17515  04C4  3098               	movlw	high (STR_5| (0+32768))
 17516  04C5  00A1               	movwf	sprintf@f+1
 17517  04C6  0862               	movf	_lumLevel,w
 17518  04C7  00B5               	movwf	??_menuLCD_ISR
 17519  04C8  01B6               	clrf	??_menuLCD_ISR+1
 17520  04C9  0835               	movf	??_menuLCD_ISR,w
 17521  04CA  00A2               	movwf	?_sprintf+2
 17522  04CB  0836               	movf	??_menuLCD_ISR+1,w
 17523  04CC  00A3               	movwf	?_sprintf+3
 17524  04CD  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 17525  04CE  3185  2558  3183   	fcall	_sprintf
 17526  04D1                     i1l5189:
 17527                           
 17528                           ;main.c: 470: };main.c: 471: LCDstr(l);
 17529  04D1  3047               	movlw	low menuLCD_ISR@l
 17530  04D2  00F9               	movwf	LCDstr@p
 17531  04D3  3000               	movlw	high menuLCD_ISR@l
 17532  04D4  00FA               	movwf	LCDstr@p+1
 17533  04D5  3195  25FA  3183   	fcall	_LCDstr
 17534  04D8                     i1l5191:
 17535                           
 17536                           ;main.c: 473: if(modeFlag != 0){
 17537  04D8  0020               	movlb	0	; select bank0
 17538  04D9  085A               	movf	_modeFlag,w
 17539  04DA  045B               	iorwf	_modeFlag+1,w
 17540  04DB  1903               	btfsc	3,2
 17541  04DC  2CDE               	goto	u459_21
 17542  04DD  2CDF               	goto	u459_20
 17543  04DE                     u459_21:
 17544  04DE  2CEA               	goto	i1l5197
 17545  04DF                     u459_20:
 17546  04DF                     i1l5193:
 17547                           
 17548                           ;main.c: 474: LCDcmd(0x8B);
 17549  04DF  308B               	movlw	139
 17550  04E0  3194  2488  3183   	fcall	_LCDcmd
 17551  04E3                     i1l5195:
 17552                           
 17553                           ;main.c: 475: LCDstr("CTL");
 17554  04E3  302E               	movlw	low (STR_7| (0+32768))
 17555  04E4  00F9               	movwf	LCDstr@p
 17556  04E5  3098               	movlw	high (STR_7| (0+32768))
 17557  04E6  00FA               	movwf	LCDstr@p+1
 17558  04E7  3195  25FA  3183   	fcall	_LCDstr
 17559  04EA                     i1l5197:
 17560                           
 17561                           ;main.c: 476: };main.c: 478: if(modeFlag == 1){
 17562  04EA  0020               	movlb	0	; select bank0
 17563  04EB  035A               	decf	_modeFlag,w
 17564  04EC  045B               	iorwf	_modeFlag+1,w
 17565  04ED  1D03               	btfss	3,2
 17566  04EE  2CF0               	goto	u460_21
 17567  04EF  2CF1               	goto	u460_20
 17568  04F0                     u460_21:
 17569  04F0  2D20               	goto	i1l5215
 17570  04F1                     u460_20:
 17571  04F1                     i1l5199:
 17572                           
 17573                           ;main.c: 479: if(editingClockAlarm == 0){
 17574  04F1  085C               	movf	_editingClockAlarm,w
 17575  04F2  045D               	iorwf	_editingClockAlarm+1,w
 17576  04F3  1D03               	btfss	3,2
 17577  04F4  2CF6               	goto	u461_21
 17578  04F5  2CF7               	goto	u461_20
 17579  04F6                     u461_21:
 17580  04F6  2CFC               	goto	i1l5203
 17581  04F7                     u461_20:
 17582  04F7                     i1l5201:
 17583                           
 17584                           ;main.c: 480: LCDcmd(0x8B);
 17585  04F7  308B               	movlw	139
 17586  04F8  3194  2488  3183   	fcall	_LCDcmd
 17587                           
 17588                           ;main.c: 481: } else{
 17589  04FB  2D57               	goto	i1l1330
 17590  04FC                     i1l5203:
 17591                           
 17592                           ;main.c: 482: if(editingClockAlarm == 1){
 17593  04FC  035C               	decf	_editingClockAlarm,w
 17594  04FD  045D               	iorwf	_editingClockAlarm+1,w
 17595  04FE  1D03               	btfss	3,2
 17596  04FF  2D01               	goto	u462_21
 17597  0500  2D02               	goto	u462_20
 17598  0501                     u462_21:
 17599  0501  2D07               	goto	i1l5207
 17600  0502                     u462_20:
 17601  0502                     i1l5205:
 17602                           
 17603                           ;main.c: 483: LCDcmd(0x81);
 17604  0502  3081               	movlw	129
 17605  0503  3194  2488  3183   	fcall	_LCDcmd
 17606                           
 17607                           ;main.c: 484: } else if(editingClockAlarm == 2){
 17608  0506  2D57               	goto	i1l1330
 17609  0507                     i1l5207:
 17610  0507  3002               	movlw	2
 17611  0508  065C               	xorwf	_editingClockAlarm,w
 17612  0509  045D               	iorwf	_editingClockAlarm+1,w
 17613  050A  1D03               	btfss	3,2
 17614  050B  2D0D               	goto	u463_21
 17615  050C  2D0E               	goto	u463_20
 17616  050D                     u463_21:
 17617  050D  2D13               	goto	i1l5211
 17618  050E                     u463_20:
 17619  050E                     i1l5209:
 17620                           
 17621                           ;main.c: 485: LCDcmd(0x84);
 17622  050E  3084               	movlw	132
 17623  050F  3194  2488  3183   	fcall	_LCDcmd
 17624                           
 17625                           ;main.c: 486: } else if(editingClockAlarm == 3){
 17626  0512  2D57               	goto	i1l1330
 17627  0513                     i1l5211:
 17628  0513  3003               	movlw	3
 17629  0514  065C               	xorwf	_editingClockAlarm,w
 17630  0515  045D               	iorwf	_editingClockAlarm+1,w
 17631  0516  1D03               	btfss	3,2
 17632  0517  2D19               	goto	u464_21
 17633  0518  2D1A               	goto	u464_20
 17634  0519                     u464_21:
 17635  0519  2D1F               	goto	i1l1314
 17636  051A                     u464_20:
 17637  051A                     i1l5213:
 17638                           
 17639                           ;main.c: 487: LCDcmd(0x87);
 17640  051A  3087               	movlw	135
 17641  051B  3194  2488  3183   	fcall	_LCDcmd
 17642  051E  2D57               	goto	i1l1330
 17643  051F                     i1l1314:
 17644                           
 17645                           ;main.c: 488: };main.c: 489: };main.c: 490: } else if(modeFlag == 2){
 17646  051F  2D57               	goto	i1l1330
 17647  0520                     i1l5215:
 17648  0520  3002               	movlw	2
 17649  0521  065A               	xorwf	_modeFlag,w
 17650  0522  045B               	iorwf	_modeFlag+1,w
 17651  0523  1D03               	btfss	3,2
 17652  0524  2D26               	goto	u465_21
 17653  0525  2D27               	goto	u465_20
 17654  0526                     u465_21:
 17655  0526  2D36               	goto	i1l5223
 17656  0527                     u465_20:
 17657  0527                     i1l5217:
 17658                           
 17659                           ;main.c: 492: if(editingTempAlarm == 0){
 17660  0527  0861               	movf	_editingTempAlarm,w
 17661  0528  1D03               	btfss	3,2
 17662  0529  2D2B               	goto	u466_21
 17663  052A  2D2C               	goto	u466_20
 17664  052B                     u466_21:
 17665  052B  2D31               	goto	i1l5221
 17666  052C                     u466_20:
 17667  052C                     i1l5219:
 17668                           
 17669                           ;main.c: 493: LCDcmd(0x8c);
 17670  052C  308C               	movlw	140
 17671  052D  3194  2488  3183   	fcall	_LCDcmd
 17672                           
 17673                           ;main.c: 494: }else {
 17674  0530  2D57               	goto	i1l1330
 17675  0531                     i1l5221:
 17676                           
 17677                           ;main.c: 495: LCDcmd(0xc1);
 17678  0531  30C1               	movlw	193
 17679  0532  3194  2488  3183   	fcall	_LCDcmd
 17680  0535  2D57               	goto	i1l1330
 17681  0536                     i1l5223:
 17682  0536  3003               	movlw	3
 17683  0537  065A               	xorwf	_modeFlag,w
 17684  0538  045B               	iorwf	_modeFlag+1,w
 17685  0539  1D03               	btfss	3,2
 17686  053A  2D3C               	goto	u467_21
 17687  053B  2D3D               	goto	u467_20
 17688  053C                     u467_21:
 17689  053C  2D4C               	goto	i1l5231
 17690  053D                     u467_20:
 17691  053D                     i1l5225:
 17692                           
 17693                           ;main.c: 500: if(editingLumAlarm == 0){
 17694  053D  0860               	movf	_editingLumAlarm,w
 17695  053E  1D03               	btfss	3,2
 17696  053F  2D41               	goto	u468_21
 17697  0540  2D42               	goto	u468_20
 17698  0541                     u468_21:
 17699  0541  2D47               	goto	i1l5229
 17700  0542                     u468_20:
 17701  0542                     i1l5227:
 17702                           
 17703                           ;main.c: 501: LCDcmd(0x8d);
 17704  0542  308D               	movlw	141
 17705  0543  3194  2488  3183   	fcall	_LCDcmd
 17706                           
 17707                           ;main.c: 502: }else {
 17708  0546  2D57               	goto	i1l1330
 17709  0547                     i1l5229:
 17710                           
 17711                           ;main.c: 503: LCDcmd(0xcf);
 17712  0547  30CF               	movlw	207
 17713  0548  3194  2488  3183   	fcall	_LCDcmd
 17714  054B  2D57               	goto	i1l1330
 17715  054C                     i1l5231:
 17716  054C  3004               	movlw	4
 17717  054D  065A               	xorwf	_modeFlag,w
 17718  054E  045B               	iorwf	_modeFlag+1,w
 17719  054F  1D03               	btfss	3,2
 17720  0550  2D52               	goto	u469_21
 17721  0551  2D53               	goto	u469_20
 17722  0552                     u469_21:
 17723  0552  2D57               	goto	i1l1330
 17724  0553                     u469_20:
 17725  0553                     i1l5233:
 17726                           
 17727                           ;main.c: 507: LCDcmd(0x8f);
 17728  0553  308F               	movlw	143
 17729  0554  3194  2488  3183   	fcall	_LCDcmd
 17730  0557                     i1l1330:
 17731  0557  0008               	return
 17732  0558                     __end_of_menuLCD_ISR:
 17733                           
 17734                           	psect	text54
 17735  1452                     __ptext54:	
 17736 ;; *************** function i1_TMR2_StopTimer *****************
 17737 ;; Defined at:
 17738 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 17739 ;; Parameters:    Size  Location     Type
 17740 ;;		None
 17741 ;; Auto vars:     Size  Location     Type
 17742 ;;		None
 17743 ;; Return value:  Size  Location     Type
 17744 ;;                  1    wreg      void 
 17745 ;; Registers used:
 17746 ;;		status,2, status,0, pclath, cstack
 17747 ;; Tracked objects:
 17748 ;;		On entry : 0/0
 17749 ;;		On exit  : 0/0
 17750 ;;		Unchanged: 0/0
 17751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17756 ;;Total ram usage:        0 bytes
 17757 ;; Hardware stack levels used:    1
 17758 ;; Hardware stack levels required when called:    1
 17759 ;; This function calls:
 17760 ;;		i1_TMR2_Stop
 17761 ;; This function is called by:
 17762 ;;		_menuLCD_ISR
 17763 ;; This function uses a non-reentrant model
 17764 ;;
 17765                           
 17766                           
 17767                           ;psect for function i1_TMR2_StopTimer
 17768  1452                     i1_TMR2_StopTimer:
 17769  1452                     i1l4739:	
 17770                           ;incstack = 0
 17771                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 17772                           
 17773                           
 17774                           ;tmr2.c: 119: TMR2_Stop();
 17775  1452  3194  2442  3194   	fcall	i1_TMR2_Stop
 17776  1455                     i1l805:
 17777  1455  0008               	return
 17778  1456                     __end_ofi1_TMR2_StopTimer:
 17779                           
 17780                           	psect	text55
 17781  1442                     __ptext55:	
 17782 ;; *************** function i1_TMR2_Stop *****************
 17783 ;; Defined at:
 17784 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 17785 ;; Parameters:    Size  Location     Type
 17786 ;;		None
 17787 ;; Auto vars:     Size  Location     Type
 17788 ;;		None
 17789 ;; Return value:  Size  Location     Type
 17790 ;;                  1    wreg      void 
 17791 ;; Registers used:
 17792 ;;		None
 17793 ;; Tracked objects:
 17794 ;;		On entry : 0/0
 17795 ;;		On exit  : 0/0
 17796 ;;		Unchanged: 0/0
 17797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17802 ;;Total ram usage:        0 bytes
 17803 ;; Hardware stack levels used:    1
 17804 ;; This function calls:
 17805 ;;		Nothing
 17806 ;; This function is called by:
 17807 ;;		i1_TMR2_StopTimer
 17808 ;; This function uses a non-reentrant model
 17809 ;;
 17810                           
 17811                           
 17812                           ;psect for function i1_TMR2_Stop
 17813  1442                     i1_TMR2_Stop:
 17814  1442                     i1l4429:	
 17815                           ;incstack = 0
 17816                           ; Regs used in i1_TMR2_Stop: []
 17817                           
 17818                           
 17819                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 17820  1442  0025               	movlb	5	; select bank5
 17821  1443  138E               	bcf	14,7	;volatile
 17822  1444                     i1l802:
 17823  1444  0008               	return
 17824  1445                     __end_ofi1_TMR2_Stop:
 17825                           
 17826                           	psect	text56
 17827  143F                     __ptext56:	
 17828 ;; *************** function i1_PWM_Output_D4_Disable *****************
 17829 ;; Defined at:
 17830 ;;		line 287 in file "main.c"
 17831 ;; Parameters:    Size  Location     Type
 17832 ;;		None
 17833 ;; Auto vars:     Size  Location     Type
 17834 ;;		None
 17835 ;; Return value:  Size  Location     Type
 17836 ;;                  1    wreg      void 
 17837 ;; Registers used:
 17838 ;;		None
 17839 ;; Tracked objects:
 17840 ;;		On entry : 0/0
 17841 ;;		On exit  : 0/0
 17842 ;;		Unchanged: 0/0
 17843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17848 ;;Total ram usage:        0 bytes
 17849 ;; Hardware stack levels used:    1
 17850 ;; This function calls:
 17851 ;;		Nothing
 17852 ;; This function is called by:
 17853 ;;		_menuLCD_ISR
 17854 ;; This function uses a non-reentrant model
 17855 ;;
 17856                           
 17857                           
 17858                           ;psect for function i1_PWM_Output_D4_Disable
 17859  143F                     i1_PWM_Output_D4_Disable:
 17860  143F                     i1l4761:	
 17861                           ;incstack = 0
 17862                           ; Regs used in i1_PWM_Output_D4_Disable: []
 17863                           
 17864                           
 17865                           ;main.c: 288: PWM6EN = 0;
 17866  143F  0027               	movlb	7	; select bank7
 17867  1440  138E               	bcf	14,7	;volatile
 17868  1441                     i1l1239:
 17869  1441  0008               	return
 17870  1442                     __end_ofi1_PWM_Output_D4_Disable:
 17871                           
 17872                           	psect	text57
 17873  1555                     __ptext57:	
 17874 ;; *************** function i1_PWM6_LoadDutyValue *****************
 17875 ;; Defined at:
 17876 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 17877 ;; Parameters:    Size  Location     Type
 17878 ;;  dutyValue       2    0[COMMON] unsigned int 
 17879 ;; Auto vars:     Size  Location     Type
 17880 ;;		None
 17881 ;; Return value:  Size  Location     Type
 17882 ;;                  1    wreg      void 
 17883 ;; Registers used:
 17884 ;;		wreg, status,2, status,0
 17885 ;; Tracked objects:
 17886 ;;		On entry : 0/0
 17887 ;;		On exit  : 0/0
 17888 ;;		Unchanged: 0/0
 17889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17894 ;;Total ram usage:        4 bytes
 17895 ;; Hardware stack levels used:    1
 17896 ;; This function calls:
 17897 ;;		Nothing
 17898 ;; This function is called by:
 17899 ;;		_menuLCD_ISR
 17900 ;; This function uses a non-reentrant model
 17901 ;;
 17902                           
 17903                           
 17904                           ;psect for function i1_PWM6_LoadDutyValue
 17905  1555                     i1_PWM6_LoadDutyValue:
 17906  1555                     i1l4737:	
 17907                           ;incstack = 0
 17908                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 17909                           
 17910                           
 17911                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 17912  1555  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 17913  1556  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 17914  1557  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 17915  1558  00F2               	movwf	??i1_PWM6_LoadDutyValue
 17916  1559  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 17917  155A  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 17918  155B  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 17919  155C  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 17920  155D  0872               	movf	??i1_PWM6_LoadDutyValue,w
 17921  155E  0027               	movlb	7	; select bank7
 17922  155F  008D               	movwf	13	;volatile
 17923                           
 17924                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 17925  1560  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 17926  1561  3903               	andlw	3
 17927  1562  00F2               	movwf	??i1_PWM6_LoadDutyValue
 17928  1563  3005               	movlw	5
 17929  1564                     u406_25:
 17930  1564  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 17931  1565  3EFF               	addlw	-1
 17932  1566  1D03               	skipz
 17933  1567  2D64               	goto	u406_25
 17934  1568  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 17935  1569  008C               	movwf	12	;volatile
 17936  156A                     i1l760:
 17937  156A  0008               	return
 17938  156B                     __end_ofi1_PWM6_LoadDutyValue:
 17939                           
 17940                           	psect	text58
 17941  0558                     __ptext58:	
 17942 ;; *************** function _sprintf *****************
 17943 ;; Defined at:
 17944 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 17945 ;; Parameters:    Size  Location     Type
 17946 ;;  sp              1    wreg     PTR unsigned char 
 17947 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 17948 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 17949 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 17950 ;;		 -> STR_2(15), STR_1(15), 
 17951 ;; Auto vars:     Size  Location     Type
 17952 ;;  sp              1   20[BANK0 ] PTR unsigned char 
 17953 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 17954 ;;  tmpval          4    0        struct .
 17955 ;;  width           2   17[BANK0 ] int 
 17956 ;;  val             2   14[BANK0 ] unsigned int 
 17957 ;;  cp              2    0        PTR const unsigned char 
 17958 ;;  len             2    0        unsigned int 
 17959 ;;  c               1   19[BANK0 ] unsigned char 
 17960 ;;  flag            1   16[BANK0 ] unsigned char 
 17961 ;;  prec            1   13[BANK0 ] char 
 17962 ;;  ap              1   12[BANK0 ] PTR void [1]
 17963 ;;		 -> ?_sprintf(2), 
 17964 ;; Return value:  Size  Location     Type
 17965 ;;                  2    0[BANK0 ] int 
 17966 ;; Registers used:
 17967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17968 ;; Tracked objects:
 17969 ;;		On entry : 0/0
 17970 ;;		On exit  : 0/0
 17971 ;;		Unchanged: 0/0
 17972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17973 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17974 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17975 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17976 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17977 ;;Total ram usage:       21 bytes
 17978 ;; Hardware stack levels used:    1
 17979 ;; Hardware stack levels required when called:    1
 17980 ;; This function calls:
 17981 ;;		___lwdiv
 17982 ;;		___lwmod
 17983 ;;		_isdigit
 17984 ;;		i1___wmul
 17985 ;; This function is called by:
 17986 ;;		_menuLCD_ISR
 17987 ;; This function uses a non-reentrant model
 17988 ;;
 17989                           
 17990                           
 17991                           ;psect for function _sprintf
 17992  0558                     _sprintf:
 17993                           
 17994                           ;incstack = 0
 17995                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17996                           ;sprintf@sp stored from wreg
 17997  0558  0020               	movlb	0	; select bank0
 17998  0559  00B4               	movwf	sprintf@sp
 17999  055A                     i1l4575:
 18000                           
 18001                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 18002  055A  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 18003  055B  00A8               	movwf	??_sprintf
 18004  055C  0828               	movf	??_sprintf,w
 18005  055D  00AC               	movwf	sprintf@ap
 18006                           
 18007                           ;doprnt.c: 553: while((c = *f++)) {
 18008  055E  2EDC               	goto	i1l4679
 18009  055F                     i1l4577:
 18010                           
 18011                           ;doprnt.c: 555: if(c != '%')
 18012  055F  3025               	movlw	37
 18013  0560  0633               	xorwf	sprintf@c,w
 18014  0561  1903               	btfsc	3,2
 18015  0562  2D64               	goto	u377_21
 18016  0563  2D65               	goto	u377_20
 18017  0564                     u377_21:
 18018  0564  2D71               	goto	i1l4583
 18019  0565                     u377_20:
 18020  0565                     i1l4579:
 18021                           
 18022                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 18023  0565  0833               	movf	sprintf@c,w
 18024  0566  00A8               	movwf	??_sprintf
 18025  0567  0834               	movf	sprintf@sp,w
 18026  0568  0086               	movwf	6
 18027  0569  0187               	clrf	7
 18028  056A  0828               	movf	??_sprintf,w
 18029  056B  0081               	movwf	1
 18030  056C                     i1l4581:
 18031  056C  3001               	movlw	1
 18032  056D  00A8               	movwf	??_sprintf
 18033  056E  0828               	movf	??_sprintf,w
 18034  056F  07B4               	addwf	sprintf@sp,f
 18035                           
 18036                           ;doprnt.c: 559: continue;
 18037  0570  2EDC               	goto	i1l4679
 18038  0571                     i1l4583:
 18039                           
 18040                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 18041  0571  01B1               	clrf	sprintf@width
 18042  0572  01B2               	clrf	sprintf@width+1
 18043                           
 18044                           ;doprnt.c: 565: flag = 0;
 18045  0573  01B0               	clrf	sprintf@flag
 18046  0574  2D7A               	goto	i1l4589
 18047  0575                     i1l1739:	
 18048                           ;doprnt.c: 596: case '0':
 18049                           
 18050                           
 18051                           ;doprnt.c: 597: flag |= 0x04;
 18052  0575  1530               	bsf	sprintf@flag,2
 18053  0576                     i1l4585:
 18054                           
 18055                           ;doprnt.c: 598: f++;
 18056  0576  3001               	movlw	1
 18057  0577  07A0               	addwf	sprintf@f,f
 18058  0578  3000               	movlw	0
 18059  0579  3DA1               	addwfc	sprintf@f+1,f
 18060  057A                     i1l4589:	
 18061                           ;doprnt.c: 599: continue;
 18062                           
 18063  057A  0820               	movf	sprintf@f,w
 18064  057B  0084               	movwf	4
 18065  057C  0821               	movf	sprintf@f+1,w
 18066  057D  0085               	movwf	5
 18067  057E  0800               	movf	0,w	;code access
 18068                           
 18069                           ; Switch size 1, requested type "simple"
 18070                           ; Number of cases is 1, Range of values is 48 to 48
 18071                           ; switch strategies available:
 18072                           ; Name         Instructions Cycles
 18073                           ; simple_byte            4     3 (average)
 18074                           ; direct_byte           11     9 (fixed)
 18075                           ; jumptable            263     9 (fixed)
 18076                           ;	Chosen strategy is simple_byte
 18077  057F  3A30               	xorlw	48	; case 48
 18078  0580  1903               	skipnz
 18079  0581  2D75               	goto	i1l1739
 18080  0582  2D83               	goto	i1l4591
 18081  0583                     i1l4591:
 18082                           
 18083                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 18084  0583  0820               	movf	sprintf@f,w
 18085  0584  0084               	movwf	4
 18086  0585  0821               	movf	sprintf@f+1,w
 18087  0586  0085               	movwf	5
 18088  0587  0800               	movf	0,w	;code access
 18089  0588  3195  2543  3185   	fcall	_isdigit
 18090  058B  1C03               	btfss	3,0
 18091  058C  2D8E               	goto	u378_21
 18092  058D  2D8F               	goto	u378_20
 18093  058E                     u378_21:
 18094  058E  2DC2               	goto	i1l4605
 18095  058F                     u378_20:
 18096  058F                     i1l4593:
 18097                           
 18098                           ;doprnt.c: 615: width = 0;
 18099  058F  0020               	movlb	0	; select bank0
 18100  0590  01B1               	clrf	sprintf@width
 18101  0591  01B2               	clrf	sprintf@width+1
 18102  0592                     i1l4595:
 18103                           
 18104                           ;doprnt.c: 617: width *= 10;
 18105  0592  300A               	movlw	10
 18106  0593  00F0               	movwf	i1___wmul@multiplier
 18107  0594  3000               	movlw	0
 18108  0595  00F1               	movwf	i1___wmul@multiplier+1
 18109  0596  0020               	movlb	0	; select bank0
 18110  0597  0832               	movf	sprintf@width+1,w
 18111  0598  00F3               	movwf	i1___wmul@multiplicand+1
 18112  0599  0831               	movf	sprintf@width,w
 18113  059A  00F2               	movwf	i1___wmul@multiplicand
 18114  059B  3196  2633  3185   	fcall	i1___wmul
 18115  059E  0871               	movf	?i1___wmul+1,w
 18116  059F  0020               	movlb	0	; select bank0
 18117  05A0  00B2               	movwf	sprintf@width+1
 18118  05A1  0870               	movf	?i1___wmul,w
 18119  05A2  00B1               	movwf	sprintf@width
 18120  05A3                     i1l4597:
 18121                           
 18122                           ;doprnt.c: 618: width += *f++ - '0';
 18123  05A3  0820               	movf	sprintf@f,w
 18124  05A4  0084               	movwf	4
 18125  05A5  0821               	movf	sprintf@f+1,w
 18126  05A6  0085               	movwf	5
 18127  05A7  0800               	movf	0,w	;code access
 18128  05A8  3ED0               	addlw	208
 18129  05A9  00A8               	movwf	??_sprintf
 18130  05AA  30FF               	movlw	255
 18131  05AB  1803               	skipnc
 18132  05AC  3000               	movlw	0
 18133  05AD  00A9               	movwf	??_sprintf+1
 18134  05AE  0828               	movf	??_sprintf,w
 18135  05AF  07B1               	addwf	sprintf@width,f
 18136  05B0  0829               	movf	??_sprintf+1,w
 18137  05B1  3DB2               	addwfc	sprintf@width+1,f
 18138  05B2                     i1l4599:
 18139  05B2  3001               	movlw	1
 18140  05B3  07A0               	addwf	sprintf@f,f
 18141  05B4  3000               	movlw	0
 18142  05B5  3DA1               	addwfc	sprintf@f+1,f
 18143  05B6                     i1l4601:
 18144                           
 18145                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 18146  05B6  0820               	movf	sprintf@f,w
 18147  05B7  0084               	movwf	4
 18148  05B8  0821               	movf	sprintf@f+1,w
 18149  05B9  0085               	movwf	5
 18150  05BA  0800               	movf	0,w	;code access
 18151  05BB  3195  2543  3185   	fcall	_isdigit
 18152  05BE  1803               	btfsc	3,0
 18153  05BF  2DC1               	goto	u379_21
 18154  05C0  2DC2               	goto	u379_20
 18155  05C1                     u379_21:
 18156  05C1  2D92               	goto	i1l4595
 18157  05C2                     u379_20:
 18158  05C2                     i1l4605:
 18159  05C2  0020               	movlb	0	; select bank0
 18160  05C3  0821               	movf	sprintf@f+1,w
 18161  05C4  00A9               	movwf	??_sprintf+1
 18162  05C5  0820               	movf	sprintf@f,w
 18163  05C6  00A8               	movwf	??_sprintf
 18164  05C7  0AA0               	incf	sprintf@f,f
 18165  05C8  1903               	skipnz
 18166  05C9  0AA1               	incf	sprintf@f+1,f
 18167  05CA  0828               	movf	??_sprintf,w
 18168  05CB  0084               	movwf	4
 18169  05CC  0829               	movf	??_sprintf+1,w
 18170  05CD  0085               	movwf	5
 18171  05CE  0800               	movf	0,w	;code access
 18172  05CF  00B3               	movwf	sprintf@c
 18173                           
 18174                           ; Switch size 1, requested type "simple"
 18175                           ; Number of cases is 3, Range of values is 0 to 105
 18176                           ; switch strategies available:
 18177                           ; Name         Instructions Cycles
 18178                           ; simple_byte           10     6 (average)
 18179                           ; direct_byte          218     6 (fixed)
 18180                           ; jumptable            260     6 (fixed)
 18181                           ;	Chosen strategy is simple_byte
 18182  05D0  3A00               	xorlw	0	; case 0
 18183  05D1  1903               	skipnz
 18184  05D2  2EF0               	goto	i1l4681
 18185  05D3  3A64               	xorlw	100	; case 100
 18186  05D4  1903               	skipnz
 18187  05D5  2DDA               	goto	i1l4607
 18188  05D6  3A0D               	xorlw	13	; case 105
 18189  05D7  1903               	skipnz
 18190  05D8  2DDA               	goto	i1l4607
 18191  05D9  2EDC               	goto	i1l4679
 18192  05DA                     i1l4607:
 18193                           
 18194                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 18195  05DA  082C               	movf	sprintf@ap,w
 18196  05DB  0086               	movwf	6
 18197  05DC  0187               	clrf	7
 18198  05DD  3F40               	moviw [0]fsr1
 18199  05DE  00AE               	movwf	sprintf@val
 18200  05DF  3F41               	moviw [1]fsr1
 18201  05E0  00AF               	movwf	sprintf@val+1
 18202  05E1                     i1l4609:
 18203  05E1  3002               	movlw	2
 18204  05E2  00A8               	movwf	??_sprintf
 18205  05E3  0828               	movf	??_sprintf,w
 18206  05E4  07AC               	addwf	sprintf@ap,f
 18207  05E5                     i1l4611:
 18208                           
 18209                           ;doprnt.c: 1287: if((int)val < 0) {
 18210  05E5  1FAF               	btfss	sprintf@val+1,7
 18211  05E6  2DE8               	goto	u380_21
 18212  05E7  2DE9               	goto	u380_20
 18213  05E8                     u380_21:
 18214  05E8  2DF2               	goto	i1l4617
 18215  05E9                     u380_20:
 18216  05E9                     i1l4613:
 18217                           
 18218                           ;doprnt.c: 1288: flag |= 0x03;
 18219  05E9  3003               	movlw	3
 18220  05EA  00A8               	movwf	??_sprintf
 18221  05EB  0828               	movf	??_sprintf,w
 18222  05EC  04B0               	iorwf	sprintf@flag,f
 18223  05ED                     i1l4615:
 18224                           
 18225                           ;doprnt.c: 1289: val = -val;
 18226  05ED  09AE               	comf	sprintf@val,f
 18227  05EE  09AF               	comf	sprintf@val+1,f
 18228  05EF  0AAE               	incf	sprintf@val,f
 18229  05F0  1903               	skipnz
 18230  05F1  0AAF               	incf	sprintf@val+1,f
 18231  05F2                     i1l4617:
 18232                           
 18233                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 18234  05F2  01B3               	clrf	sprintf@c
 18235  05F3  0AB3               	incf	sprintf@c,f
 18236  05F4                     i1l4623:
 18237                           
 18238                           ;doprnt.c: 1332: if(val < dpowers[c])
 18239  05F4  0833               	movf	sprintf@c,w
 18240  05F5  00A8               	movwf	??_sprintf
 18241  05F6  01A9               	clrf	??_sprintf+1
 18242  05F7  35A8               	lslf	??_sprintf,f
 18243  05F8  0DA9               	rlf	??_sprintf+1,f
 18244  05F9  300F               	movlw	low (_dpowers| (0+32768))
 18245  05FA  0728               	addwf	??_sprintf,w
 18246  05FB  0084               	movwf	4
 18247  05FC  3098               	movlw	high (_dpowers| (0+32768))
 18248  05FD  3D29               	addwfc	??_sprintf+1,w
 18249  05FE  0085               	movwf	5
 18250  05FF  3F00               	moviw [0]fsr0
 18251  0600  00AA               	movwf	??_sprintf+2
 18252  0601  3F01               	moviw [1]fsr0
 18253  0602  00AB               	movwf	??_sprintf+3
 18254  0603  082B               	movf	??_sprintf+3,w
 18255  0604  022F               	subwf	sprintf@val+1,w
 18256  0605  1D03               	skipz
 18257  0606  2E09               	goto	u381_25
 18258  0607  082A               	movf	??_sprintf+2,w
 18259  0608  022E               	subwf	sprintf@val,w
 18260  0609                     u381_25:
 18261  0609  1803               	skipnc
 18262  060A  2E0C               	goto	u381_21
 18263  060B  2E0D               	goto	u381_20
 18264  060C                     u381_21:
 18265  060C  2E0E               	goto	i1l4627
 18266  060D                     u381_20:
 18267  060D  2E18               	goto	i1l4629
 18268  060E                     i1l4627:
 18269  060E  3001               	movlw	1
 18270  060F  00A8               	movwf	??_sprintf
 18271  0610  0828               	movf	??_sprintf,w
 18272  0611  07B3               	addwf	sprintf@c,f
 18273  0612  3005               	movlw	5
 18274  0613  0633               	xorwf	sprintf@c,w
 18275  0614  1D03               	btfss	3,2
 18276  0615  2E17               	goto	u382_21
 18277  0616  2E18               	goto	u382_20
 18278  0617                     u382_21:
 18279  0617  2DF4               	goto	i1l4623
 18280  0618                     u382_20:
 18281  0618                     i1l4629:
 18282                           
 18283                           ;doprnt.c: 1371: if(width && flag & 0x03)
 18284  0618  0831               	movf	sprintf@width,w
 18285  0619  0432               	iorwf	sprintf@width+1,w
 18286  061A  1903               	btfsc	3,2
 18287  061B  2E1D               	goto	u383_21
 18288  061C  2E1E               	goto	u383_20
 18289  061D                     u383_21:
 18290  061D  2E28               	goto	i1l1757
 18291  061E                     u383_20:
 18292  061E                     i1l4631:
 18293  061E  0830               	movf	sprintf@flag,w
 18294  061F  3903               	andlw	3
 18295  0620  1903               	btfsc	3,2
 18296  0621  2E23               	goto	u384_21
 18297  0622  2E24               	goto	u384_20
 18298  0623                     u384_21:
 18299  0623  2E28               	goto	i1l1757
 18300  0624                     u384_20:
 18301  0624                     i1l4633:
 18302                           
 18303                           ;doprnt.c: 1372: width--;
 18304  0624  30FF               	movlw	255
 18305  0625  07B1               	addwf	sprintf@width,f
 18306  0626  30FF               	movlw	255
 18307  0627  3DB2               	addwfc	sprintf@width+1,f
 18308  0628                     i1l1757:
 18309                           
 18310                           ;doprnt.c: 1407: if(width > c)
 18311  0628  0832               	movf	sprintf@width+1,w
 18312  0629  3A80               	xorlw	128
 18313  062A  3C80               	sublw	128
 18314  062B  1D03               	skipz
 18315  062C  2E2F               	goto	u385_25
 18316  062D  0831               	movf	sprintf@width,w
 18317  062E  0233               	subwf	sprintf@c,w
 18318  062F                     u385_25:
 18319  062F  1803               	skipnc
 18320  0630  2E32               	goto	u385_21
 18321  0631  2E33               	goto	u385_20
 18322  0632                     u385_21:
 18323  0632  2E3C               	goto	i1l4637
 18324  0633                     u385_20:
 18325  0633                     i1l4635:
 18326                           
 18327                           ;doprnt.c: 1408: width -= c;
 18328  0633  0020               	movlb	0	; select bank0
 18329  0634  0833               	movf	sprintf@c,w
 18330  0635  00A8               	movwf	??_sprintf
 18331  0636  01A9               	clrf	??_sprintf+1
 18332  0637  0828               	movf	??_sprintf,w
 18333  0638  02B1               	subwf	sprintf@width,f
 18334  0639  0829               	movf	??_sprintf+1,w
 18335  063A  3BB2               	subwfb	sprintf@width+1,f
 18336  063B  2E3F               	goto	i1l4639
 18337  063C                     i1l4637:
 18338                           
 18339                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 18340  063C  0020               	movlb	0	; select bank0
 18341  063D  01B1               	clrf	sprintf@width
 18342  063E  01B2               	clrf	sprintf@width+1
 18343  063F                     i1l4639:
 18344                           
 18345                           ;doprnt.c: 1413: if(flag & 0x04) {
 18346  063F  1D30               	btfss	sprintf@flag,2
 18347  0640  2E42               	goto	u386_21
 18348  0641  2E43               	goto	u386_20
 18349  0642                     u386_21:
 18350  0642  2E70               	goto	i1l4655
 18351  0643                     u386_20:
 18352  0643                     i1l4641:
 18353                           
 18354                           ;doprnt.c: 1418: if(flag & 0x03)
 18355  0643  0830               	movf	sprintf@flag,w
 18356  0644  3903               	andlw	3
 18357  0645  1903               	btfsc	3,2
 18358  0646  2E48               	goto	u387_21
 18359  0647  2E49               	goto	u387_20
 18360  0648                     u387_21:
 18361  0648  2E54               	goto	i1l4647
 18362  0649                     u387_20:
 18363  0649                     i1l4643:
 18364                           
 18365                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 18366  0649  302D               	movlw	45
 18367  064A  00A8               	movwf	??_sprintf
 18368  064B  0834               	movf	sprintf@sp,w
 18369  064C  0086               	movwf	6
 18370  064D  0187               	clrf	7
 18371  064E  0828               	movf	??_sprintf,w
 18372  064F  0081               	movwf	1
 18373  0650                     i1l4645:
 18374  0650  3001               	movlw	1
 18375  0651  00A8               	movwf	??_sprintf
 18376  0652  0828               	movf	??_sprintf,w
 18377  0653  07B4               	addwf	sprintf@sp,f
 18378  0654                     i1l4647:
 18379                           
 18380                           ;doprnt.c: 1441: if(width)
 18381  0654  0831               	movf	sprintf@width,w
 18382  0655  0432               	iorwf	sprintf@width+1,w
 18383  0656  1903               	btfsc	3,2
 18384  0657  2E59               	goto	u388_21
 18385  0658  2E5A               	goto	u388_20
 18386  0659                     u388_21:
 18387  0659  2E9C               	goto	i1l4669
 18388  065A                     u388_20:
 18389  065A                     i1l4649:
 18390                           
 18391                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 18392  065A  3030               	movlw	48
 18393  065B  00A8               	movwf	??_sprintf
 18394  065C  0834               	movf	sprintf@sp,w
 18395  065D  0086               	movwf	6
 18396  065E  0187               	clrf	7
 18397  065F  0828               	movf	??_sprintf,w
 18398  0660  0081               	movwf	1
 18399  0661                     i1l4651:
 18400  0661  3001               	movlw	1
 18401  0662  00A8               	movwf	??_sprintf
 18402  0663  0828               	movf	??_sprintf,w
 18403  0664  07B4               	addwf	sprintf@sp,f
 18404  0665                     i1l4653:
 18405                           
 18406                           ;doprnt.c: 1444: while(--width);
 18407  0665  30FF               	movlw	255
 18408  0666  07B1               	addwf	sprintf@width,f
 18409  0667  30FF               	movlw	255
 18410  0668  3DB2               	addwfc	sprintf@width+1,f
 18411  0669  0831               	movf	sprintf@width,w
 18412  066A  0432               	iorwf	sprintf@width+1,w
 18413  066B  1D03               	btfss	3,2
 18414  066C  2E6E               	goto	u389_21
 18415  066D  2E6F               	goto	u389_20
 18416  066E                     u389_21:
 18417  066E  2E5A               	goto	i1l4649
 18418  066F                     u389_20:
 18419  066F  2E9C               	goto	i1l4669
 18420  0670                     i1l4655:
 18421                           
 18422                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 18423  0670  0831               	movf	sprintf@width,w
 18424  0671  0432               	iorwf	sprintf@width+1,w
 18425  0672  1903               	btfsc	3,2
 18426  0673  2E75               	goto	u390_21
 18427  0674  2E76               	goto	u390_20
 18428  0675                     u390_21:
 18429  0675  2E8B               	goto	i1l4663
 18430  0676                     u390_20:
 18431  0676                     i1l4657:
 18432                           
 18433                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 18434  0676  3020               	movlw	32
 18435  0677  00A8               	movwf	??_sprintf
 18436  0678  0834               	movf	sprintf@sp,w
 18437  0679  0086               	movwf	6
 18438  067A  0187               	clrf	7
 18439  067B  0828               	movf	??_sprintf,w
 18440  067C  0081               	movwf	1
 18441  067D                     i1l4659:
 18442  067D  3001               	movlw	1
 18443  067E  00A8               	movwf	??_sprintf
 18444  067F  0828               	movf	??_sprintf,w
 18445  0680  07B4               	addwf	sprintf@sp,f
 18446  0681                     i1l4661:
 18447                           
 18448                           ;doprnt.c: 1457: while(--width);
 18449  0681  30FF               	movlw	255
 18450  0682  07B1               	addwf	sprintf@width,f
 18451  0683  30FF               	movlw	255
 18452  0684  3DB2               	addwfc	sprintf@width+1,f
 18453  0685  0831               	movf	sprintf@width,w
 18454  0686  0432               	iorwf	sprintf@width+1,w
 18455  0687  1D03               	btfss	3,2
 18456  0688  2E8A               	goto	u391_21
 18457  0689  2E8B               	goto	u391_20
 18458  068A                     u391_21:
 18459  068A  2E76               	goto	i1l4657
 18460  068B                     u391_20:
 18461  068B                     i1l4663:
 18462                           
 18463                           ;doprnt.c: 1464: if(flag & 0x03)
 18464  068B  0830               	movf	sprintf@flag,w
 18465  068C  3903               	andlw	3
 18466  068D  1903               	btfsc	3,2
 18467  068E  2E90               	goto	u392_21
 18468  068F  2E91               	goto	u392_20
 18469  0690                     u392_21:
 18470  0690  2E9C               	goto	i1l4669
 18471  0691                     u392_20:
 18472  0691                     i1l4665:
 18473                           
 18474                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 18475  0691  302D               	movlw	45
 18476  0692  00A8               	movwf	??_sprintf
 18477  0693  0834               	movf	sprintf@sp,w
 18478  0694  0086               	movwf	6
 18479  0695  0187               	clrf	7
 18480  0696  0828               	movf	??_sprintf,w
 18481  0697  0081               	movwf	1
 18482  0698                     i1l4667:
 18483  0698  3001               	movlw	1
 18484  0699  00A8               	movwf	??_sprintf
 18485  069A  0828               	movf	??_sprintf,w
 18486  069B  07B4               	addwf	sprintf@sp,f
 18487  069C                     i1l4669:
 18488                           
 18489                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 18490  069C  0833               	movf	sprintf@c,w
 18491  069D  00A8               	movwf	??_sprintf
 18492  069E  0828               	movf	??_sprintf,w
 18493  069F  00AD               	movwf	sprintf@prec
 18494                           
 18495                           ;doprnt.c: 1500: while(prec--) {
 18496  06A0  2ED3               	goto	i1l4677
 18497  06A1                     i1l4671:
 18498                           
 18499                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 18500  06A1  300A               	movlw	10
 18501  06A2  00F8               	movwf	___lwmod@divisor
 18502  06A3  3000               	movlw	0
 18503  06A4  00F9               	movwf	___lwmod@divisor+1
 18504  06A5  082D               	movf	sprintf@prec,w
 18505  06A6  00A8               	movwf	??_sprintf
 18506  06A7  01A9               	clrf	??_sprintf+1
 18507  06A8  35A8               	lslf	??_sprintf,f
 18508  06A9  0DA9               	rlf	??_sprintf+1,f
 18509  06AA  300F               	movlw	low (_dpowers| (0+32768))
 18510  06AB  0728               	addwf	??_sprintf,w
 18511  06AC  0084               	movwf	4
 18512  06AD  3098               	movlw	high (_dpowers| (0+32768))
 18513  06AE  3D29               	addwfc	??_sprintf+1,w
 18514  06AF  0085               	movwf	5
 18515  06B0  3F00               	moviw [0]fsr0
 18516  06B1  00F0               	movwf	___lwdiv@divisor
 18517  06B2  3F01               	moviw [1]fsr0
 18518  06B3  00F1               	movwf	___lwdiv@divisor+1
 18519  06B4  082F               	movf	sprintf@val+1,w
 18520  06B5  00F3               	movwf	___lwdiv@dividend+1
 18521  06B6  082E               	movf	sprintf@val,w
 18522  06B7  00F2               	movwf	___lwdiv@dividend
 18523  06B8  3189  210C  3185   	fcall	___lwdiv
 18524  06BB  0871               	movf	?___lwdiv+1,w
 18525  06BC  00FB               	movwf	___lwmod@dividend+1
 18526  06BD  0870               	movf	?___lwdiv,w
 18527  06BE  00FA               	movwf	___lwmod@dividend
 18528  06BF  3188  20A0  3185   	fcall	___lwmod
 18529  06C2  0878               	movf	?___lwmod,w
 18530  06C3  3E30               	addlw	48
 18531  06C4  0020               	movlb	0	; select bank0
 18532  06C5  00AA               	movwf	??_sprintf+2
 18533  06C6  082A               	movf	??_sprintf+2,w
 18534  06C7  00B3               	movwf	sprintf@c
 18535  06C8                     i1l4673:
 18536                           
 18537                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 18538  06C8  0833               	movf	sprintf@c,w
 18539  06C9  00A8               	movwf	??_sprintf
 18540  06CA  0834               	movf	sprintf@sp,w
 18541  06CB  0086               	movwf	6
 18542  06CC  0187               	clrf	7
 18543  06CD  0828               	movf	??_sprintf,w
 18544  06CE  0081               	movwf	1
 18545  06CF                     i1l4675:
 18546  06CF  3001               	movlw	1
 18547  06D0  00A8               	movwf	??_sprintf
 18548  06D1  0828               	movf	??_sprintf,w
 18549  06D2  07B4               	addwf	sprintf@sp,f
 18550  06D3                     i1l4677:
 18551  06D3  30FF               	movlw	255
 18552  06D4  00A8               	movwf	??_sprintf
 18553  06D5  0828               	movf	??_sprintf,w
 18554  06D6  07AD               	addwf	sprintf@prec,f
 18555  06D7  0A2D               	incf	sprintf@prec,w
 18556  06D8  1D03               	btfss	3,2
 18557  06D9  2EDB               	goto	u393_21
 18558  06DA  2EDC               	goto	u393_20
 18559  06DB                     u393_21:
 18560  06DB  2EA1               	goto	i1l4671
 18561  06DC                     u393_20:
 18562  06DC                     i1l4679:
 18563  06DC  0821               	movf	sprintf@f+1,w
 18564  06DD  00A9               	movwf	??_sprintf+1
 18565  06DE  0820               	movf	sprintf@f,w
 18566  06DF  00A8               	movwf	??_sprintf
 18567  06E0  0AA0               	incf	sprintf@f,f
 18568  06E1  1903               	skipnz
 18569  06E2  0AA1               	incf	sprintf@f+1,f
 18570  06E3  0828               	movf	??_sprintf,w
 18571  06E4  0084               	movwf	4
 18572  06E5  0829               	movf	??_sprintf+1,w
 18573  06E6  0085               	movwf	5
 18574  06E7  0800               	movf	0,w	;code access
 18575  06E8  00AA               	movwf	??_sprintf+2
 18576  06E9  082A               	movf	??_sprintf+2,w
 18577  06EA  00B3               	movwf	sprintf@c
 18578  06EB  0833               	movf	sprintf@c,w
 18579  06EC  1D03               	btfss	3,2
 18580  06ED  2EEF               	goto	u394_21
 18581  06EE  2EF0               	goto	u394_20
 18582  06EF                     u394_21:
 18583  06EF  2D5F               	goto	i1l4577
 18584  06F0                     u394_20:
 18585  06F0                     i1l4681:
 18586                           
 18587                           ;doprnt.c: 1564: *sp = 0;
 18588  06F0  0834               	movf	sprintf@sp,w
 18589  06F1  0086               	movwf	6
 18590  06F2  0187               	clrf	7
 18591  06F3  0181               	clrf	1
 18592  06F4                     i1l1774:
 18593  06F4  0008               	return
 18594  06F5                     __end_of_sprintf:
 18595                           
 18596                           	psect	text59
 18597  1633                     __ptext59:	
 18598 ;; *************** function i1___wmul *****************
 18599 ;; Defined at:
 18600 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 18601 ;; Parameters:    Size  Location     Type
 18602 ;;  multiplier      2    0[COMMON] unsigned int 
 18603 ;;  multiplicand    2    2[COMMON] unsigned int 
 18604 ;; Auto vars:     Size  Location     Type
 18605 ;;  product         2    4[COMMON] unsigned int 
 18606 ;; Return value:  Size  Location     Type
 18607 ;;                  2    0[COMMON] unsigned int 
 18608 ;; Registers used:
 18609 ;;		wreg, status,2, status,0
 18610 ;; Tracked objects:
 18611 ;;		On entry : 0/0
 18612 ;;		On exit  : 0/0
 18613 ;;		Unchanged: 0/0
 18614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18618 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18619 ;;Total ram usage:        6 bytes
 18620 ;; Hardware stack levels used:    1
 18621 ;; This function calls:
 18622 ;;		Nothing
 18623 ;; This function is called by:
 18624 ;;		_monitoring_ISR
 18625 ;;		_sprintf
 18626 ;; This function uses a non-reentrant model
 18627 ;;
 18628                           
 18629                           
 18630                           ;psect for function i1___wmul
 18631  1633                     i1___wmul:
 18632  1633                     i1l4431:	
 18633                           ;incstack = 0
 18634                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 18635                           
 18636  1633  01F4               	clrf	i1___wmul@product
 18637  1634  01F5               	clrf	i1___wmul@product+1
 18638  1635                     i1l4433:
 18639  1635  1C70               	btfss	i1___wmul@multiplier,0
 18640  1636  2E38               	goto	u335_21
 18641  1637  2E39               	goto	u335_20
 18642  1638                     u335_21:
 18643  1638  2E3D               	goto	i1l1778
 18644  1639                     u335_20:
 18645  1639                     i1l4435:
 18646  1639  0872               	movf	i1___wmul@multiplicand,w
 18647  163A  07F4               	addwf	i1___wmul@product,f
 18648  163B  0873               	movf	i1___wmul@multiplicand+1,w
 18649  163C  3DF5               	addwfc	i1___wmul@product+1,f
 18650  163D                     i1l1778:
 18651  163D  3001               	movlw	1
 18652  163E                     u336_25:
 18653  163E  35F2               	lslf	i1___wmul@multiplicand,f
 18654  163F  0DF3               	rlf	i1___wmul@multiplicand+1,f
 18655  1640  0B89               	decfsz	9,f
 18656  1641  2E3E               	goto	u336_25
 18657  1642                     i1l4437:
 18658  1642  3001               	movlw	1
 18659  1643                     u337_25:
 18660  1643  36F1               	lsrf	i1___wmul@multiplier+1,f
 18661  1644  0CF0               	rrf	i1___wmul@multiplier,f
 18662  1645  0B89               	decfsz	9,f
 18663  1646  2E43               	goto	u337_25
 18664  1647                     i1l4439:
 18665  1647  0870               	movf	i1___wmul@multiplier,w
 18666  1648  0471               	iorwf	i1___wmul@multiplier+1,w
 18667  1649  1D03               	btfss	3,2
 18668  164A  2E4C               	goto	u338_21
 18669  164B  2E4D               	goto	u338_20
 18670  164C                     u338_21:
 18671  164C  2E35               	goto	i1l4433
 18672  164D                     u338_20:
 18673  164D                     i1l4441:
 18674  164D  0875               	movf	i1___wmul@product+1,w
 18675  164E  00F1               	movwf	?i1___wmul+1
 18676  164F  0874               	movf	i1___wmul@product,w
 18677  1650  00F0               	movwf	?i1___wmul
 18678  1651                     i1l1780:
 18679  1651  0008               	return
 18680  1652                     __end_ofi1___wmul:
 18681                           
 18682                           	psect	text60
 18683  1543                     __ptext60:	
 18684 ;; *************** function _isdigit *****************
 18685 ;; Defined at:
 18686 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 18687 ;; Parameters:    Size  Location     Type
 18688 ;;  c               1    wreg     unsigned char 
 18689 ;; Auto vars:     Size  Location     Type
 18690 ;;  c               1    1[COMMON] unsigned char 
 18691 ;; Return value:  Size  Location     Type
 18692 ;;		None               void
 18693 ;; Registers used:
 18694 ;;		wreg, status,2, status,0
 18695 ;; Tracked objects:
 18696 ;;		On entry : 0/0
 18697 ;;		On exit  : 0/0
 18698 ;;		Unchanged: 0/0
 18699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18701 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18703 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18704 ;;Total ram usage:        2 bytes
 18705 ;; Hardware stack levels used:    1
 18706 ;; This function calls:
 18707 ;;		Nothing
 18708 ;; This function is called by:
 18709 ;;		_sprintf
 18710 ;; This function uses a non-reentrant model
 18711 ;;
 18712                           
 18713                           
 18714                           ;psect for function _isdigit
 18715  1543                     _isdigit:
 18716                           
 18717                           ;incstack = 0
 18718                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 18719                           ;isdigit@c stored from wreg
 18720  1543  00F1               	movwf	isdigit@c
 18721  1544                     i1l4369:
 18722  1544  01F0               	clrf	_isdigit$3191
 18723  1545                     i1l4371:
 18724  1545  303A               	movlw	58
 18725  1546  0271               	subwf	isdigit@c,w
 18726  1547  1803               	skipnc
 18727  1548  2D4A               	goto	u320_21
 18728  1549  2D4B               	goto	u320_20
 18729  154A                     u320_21:
 18730  154A  2D53               	goto	i1l4377
 18731  154B                     u320_20:
 18732  154B                     i1l4373:
 18733  154B  3030               	movlw	48
 18734  154C  0271               	subwf	isdigit@c,w
 18735  154D  1C03               	skipc
 18736  154E  2D50               	goto	u321_21
 18737  154F  2D51               	goto	u321_20
 18738  1550                     u321_21:
 18739  1550  2D53               	goto	i1l4377
 18740  1551                     u321_20:
 18741  1551                     i1l4375:
 18742  1551  01F0               	clrf	_isdigit$3191
 18743  1552  0AF0               	incf	_isdigit$3191,f
 18744  1553                     i1l4377:
 18745  1553  0C70               	rrf	_isdigit$3191,w
 18746  1554                     i1l2231:
 18747  1554  0008               	return
 18748  1555                     __end_of_isdigit:
 18749                           
 18750                           	psect	text61
 18751  08A0                     __ptext61:	
 18752 ;; *************** function ___lwmod *****************
 18753 ;; Defined at:
 18754 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 18755 ;; Parameters:    Size  Location     Type
 18756 ;;  divisor         2    8[COMMON] unsigned int 
 18757 ;;  dividend        2   10[COMMON] unsigned int 
 18758 ;; Auto vars:     Size  Location     Type
 18759 ;;  counter         1   13[COMMON] unsigned char 
 18760 ;; Return value:  Size  Location     Type
 18761 ;;                  2    8[COMMON] unsigned int 
 18762 ;; Registers used:
 18763 ;;		wreg, status,2, status,0
 18764 ;; Tracked objects:
 18765 ;;		On entry : 0/0
 18766 ;;		On exit  : 0/0
 18767 ;;		Unchanged: 0/0
 18768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18769 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18772 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18773 ;;Total ram usage:        6 bytes
 18774 ;; Hardware stack levels used:    1
 18775 ;; This function calls:
 18776 ;;		Nothing
 18777 ;; This function is called by:
 18778 ;;		_sprintf
 18779 ;; This function uses a non-reentrant model
 18780 ;;
 18781                           
 18782                           
 18783                           ;psect for function ___lwmod
 18784  08A0                     ___lwmod:
 18785  08A0                     i1l4407:	
 18786                           ;incstack = 0
 18787                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 18788                           
 18789  08A0  0878               	movf	___lwmod@divisor,w
 18790  08A1  0479               	iorwf	___lwmod@divisor+1,w
 18791  08A2  1903               	btfsc	3,2
 18792  08A3  28A5               	goto	u329_21
 18793  08A4  28A6               	goto	u329_20
 18794  08A5                     u329_21:
 18795  08A5  28CF               	goto	i1l4425
 18796  08A6                     u329_20:
 18797  08A6                     i1l4409:
 18798  08A6  01FD               	clrf	___lwmod@counter
 18799  08A7  0AFD               	incf	___lwmod@counter,f
 18800  08A8  28B2               	goto	i1l4415
 18801  08A9                     i1l4411:
 18802  08A9  3001               	movlw	1
 18803  08AA                     u330_25:
 18804  08AA  35F8               	lslf	___lwmod@divisor,f
 18805  08AB  0DF9               	rlf	___lwmod@divisor+1,f
 18806  08AC  0B89               	decfsz	9,f
 18807  08AD  28AA               	goto	u330_25
 18808  08AE                     i1l4413:
 18809  08AE  3001               	movlw	1
 18810  08AF  00FC               	movwf	??___lwmod
 18811  08B0  087C               	movf	??___lwmod,w
 18812  08B1  07FD               	addwf	___lwmod@counter,f
 18813  08B2                     i1l4415:
 18814  08B2  1FF9               	btfss	___lwmod@divisor+1,7
 18815  08B3  28B5               	goto	u331_21
 18816  08B4  28B6               	goto	u331_20
 18817  08B5                     u331_21:
 18818  08B5  28A9               	goto	i1l4411
 18819  08B6                     u331_20:
 18820  08B6                     i1l4417:
 18821  08B6  0879               	movf	___lwmod@divisor+1,w
 18822  08B7  027B               	subwf	___lwmod@dividend+1,w
 18823  08B8  1D03               	skipz
 18824  08B9  28BC               	goto	u332_25
 18825  08BA  0878               	movf	___lwmod@divisor,w
 18826  08BB  027A               	subwf	___lwmod@dividend,w
 18827  08BC                     u332_25:
 18828  08BC  1C03               	skipc
 18829  08BD  28BF               	goto	u332_21
 18830  08BE  28C0               	goto	u332_20
 18831  08BF                     u332_21:
 18832  08BF  28C4               	goto	i1l4421
 18833  08C0                     u332_20:
 18834  08C0                     i1l4419:
 18835  08C0  0878               	movf	___lwmod@divisor,w
 18836  08C1  02FA               	subwf	___lwmod@dividend,f
 18837  08C2  0879               	movf	___lwmod@divisor+1,w
 18838  08C3  3BFB               	subwfb	___lwmod@dividend+1,f
 18839  08C4                     i1l4421:
 18840  08C4  3001               	movlw	1
 18841  08C5                     u333_25:
 18842  08C5  36F9               	lsrf	___lwmod@divisor+1,f
 18843  08C6  0CF8               	rrf	___lwmod@divisor,f
 18844  08C7  0B89               	decfsz	9,f
 18845  08C8  28C5               	goto	u333_25
 18846  08C9                     i1l4423:
 18847  08C9  3001               	movlw	1
 18848  08CA  02FD               	subwf	___lwmod@counter,f
 18849  08CB  1D03               	btfss	3,2
 18850  08CC  28CE               	goto	u334_21
 18851  08CD  28CF               	goto	u334_20
 18852  08CE                     u334_21:
 18853  08CE  28B6               	goto	i1l4417
 18854  08CF                     u334_20:
 18855  08CF                     i1l4425:
 18856  08CF  087B               	movf	___lwmod@dividend+1,w
 18857  08D0  00F9               	movwf	?___lwmod+1
 18858  08D1  087A               	movf	___lwmod@dividend,w
 18859  08D2  00F8               	movwf	?___lwmod
 18860  08D3                     i1l2060:
 18861  08D3  0008               	return
 18862  08D4                     __end_of___lwmod:
 18863                           
 18864                           	psect	text62
 18865  090C                     __ptext62:	
 18866 ;; *************** function ___lwdiv *****************
 18867 ;; Defined at:
 18868 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 18869 ;; Parameters:    Size  Location     Type
 18870 ;;  divisor         2    0[COMMON] unsigned int 
 18871 ;;  dividend        2    2[COMMON] unsigned int 
 18872 ;; Auto vars:     Size  Location     Type
 18873 ;;  quotient        2    5[COMMON] unsigned int 
 18874 ;;  counter         1    7[COMMON] unsigned char 
 18875 ;; Return value:  Size  Location     Type
 18876 ;;                  2    0[COMMON] unsigned int 
 18877 ;; Registers used:
 18878 ;;		wreg, status,2, status,0
 18879 ;; Tracked objects:
 18880 ;;		On entry : 0/0
 18881 ;;		On exit  : 0/0
 18882 ;;		Unchanged: 0/0
 18883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18885 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18887 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18888 ;;Total ram usage:        8 bytes
 18889 ;; Hardware stack levels used:    1
 18890 ;; This function calls:
 18891 ;;		Nothing
 18892 ;; This function is called by:
 18893 ;;		_sprintf
 18894 ;; This function uses a non-reentrant model
 18895 ;;
 18896                           
 18897                           
 18898                           ;psect for function ___lwdiv
 18899  090C                     ___lwdiv:
 18900  090C                     i1l4381:	
 18901                           ;incstack = 0
 18902                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 18903                           
 18904  090C  01F5               	clrf	___lwdiv@quotient
 18905  090D  01F6               	clrf	___lwdiv@quotient+1
 18906  090E                     i1l4383:
 18907  090E  0870               	movf	___lwdiv@divisor,w
 18908  090F  0471               	iorwf	___lwdiv@divisor+1,w
 18909  0910  1903               	btfsc	3,2
 18910  0911  2913               	goto	u322_21
 18911  0912  2914               	goto	u322_20
 18912  0913                     u322_21:
 18913  0913  2943               	goto	i1l4403
 18914  0914                     u322_20:
 18915  0914                     i1l4385:
 18916  0914  01F7               	clrf	___lwdiv@counter
 18917  0915  0AF7               	incf	___lwdiv@counter,f
 18918  0916  2920               	goto	i1l4391
 18919  0917                     i1l4387:
 18920  0917  3001               	movlw	1
 18921  0918                     u323_25:
 18922  0918  35F0               	lslf	___lwdiv@divisor,f
 18923  0919  0DF1               	rlf	___lwdiv@divisor+1,f
 18924  091A  0B89               	decfsz	9,f
 18925  091B  2918               	goto	u323_25
 18926  091C                     i1l4389:
 18927  091C  3001               	movlw	1
 18928  091D  00F4               	movwf	??___lwdiv
 18929  091E  0874               	movf	??___lwdiv,w
 18930  091F  07F7               	addwf	___lwdiv@counter,f
 18931  0920                     i1l4391:
 18932  0920  1FF1               	btfss	___lwdiv@divisor+1,7
 18933  0921  2923               	goto	u324_21
 18934  0922  2924               	goto	u324_20
 18935  0923                     u324_21:
 18936  0923  2917               	goto	i1l4387
 18937  0924                     u324_20:
 18938  0924                     i1l4393:
 18939  0924  3001               	movlw	1
 18940  0925                     u325_25:
 18941  0925  35F5               	lslf	___lwdiv@quotient,f
 18942  0926  0DF6               	rlf	___lwdiv@quotient+1,f
 18943  0927  0B89               	decfsz	9,f
 18944  0928  2925               	goto	u325_25
 18945  0929  0871               	movf	___lwdiv@divisor+1,w
 18946  092A  0273               	subwf	___lwdiv@dividend+1,w
 18947  092B  1D03               	skipz
 18948  092C  292F               	goto	u326_25
 18949  092D  0870               	movf	___lwdiv@divisor,w
 18950  092E  0272               	subwf	___lwdiv@dividend,w
 18951  092F                     u326_25:
 18952  092F  1C03               	skipc
 18953  0930  2932               	goto	u326_21
 18954  0931  2933               	goto	u326_20
 18955  0932                     u326_21:
 18956  0932  2938               	goto	i1l4399
 18957  0933                     u326_20:
 18958  0933                     i1l4395:
 18959  0933  0870               	movf	___lwdiv@divisor,w
 18960  0934  02F2               	subwf	___lwdiv@dividend,f
 18961  0935  0871               	movf	___lwdiv@divisor+1,w
 18962  0936  3BF3               	subwfb	___lwdiv@dividend+1,f
 18963  0937                     i1l4397:
 18964  0937  1475               	bsf	___lwdiv@quotient,0
 18965  0938                     i1l4399:
 18966  0938  3001               	movlw	1
 18967  0939                     u327_25:
 18968  0939  36F1               	lsrf	___lwdiv@divisor+1,f
 18969  093A  0CF0               	rrf	___lwdiv@divisor,f
 18970  093B  0B89               	decfsz	9,f
 18971  093C  2939               	goto	u327_25
 18972  093D                     i1l4401:
 18973  093D  3001               	movlw	1
 18974  093E  02F7               	subwf	___lwdiv@counter,f
 18975  093F  1D03               	btfss	3,2
 18976  0940  2942               	goto	u328_21
 18977  0941  2943               	goto	u328_20
 18978  0942                     u328_21:
 18979  0942  2924               	goto	i1l4393
 18980  0943                     u328_20:
 18981  0943                     i1l4403:
 18982  0943  0876               	movf	___lwdiv@quotient+1,w
 18983  0944  00F1               	movwf	?___lwdiv+1
 18984  0945  0875               	movf	___lwdiv@quotient,w
 18985  0946  00F0               	movwf	?___lwdiv
 18986  0947                     i1l2050:
 18987  0947  0008               	return
 18988  0948                     __end_of___lwdiv:
 18989                           
 18990                           	psect	text63
 18991  086C                     __ptext63:	
 18992 ;; *************** function _differenceBetweenTimePeriod *****************
 18993 ;; Defined at:
 18994 ;;		line 267 in file "main.c"
 18995 ;; Parameters:    Size  Location     Type
 18996 ;;  start           3    0[COMMON] struct Time
 18997 ;;  stop            3    3[COMMON] struct Time
 18998 ;;  diff            1    6[COMMON] PTR struct Time
 18999 ;;		 -> menuLCD_ISR@diff(3), 
 19000 ;; Auto vars:     Size  Location     Type
 19001 ;;		None
 19002 ;; Return value:  Size  Location     Type
 19003 ;;                  1    wreg      void 
 19004 ;; Registers used:
 19005 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19006 ;; Tracked objects:
 19007 ;;		On entry : 0/0
 19008 ;;		On exit  : 0/0
 19009 ;;		Unchanged: 0/0
 19010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19011 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19014 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19015 ;;Total ram usage:        8 bytes
 19016 ;; Hardware stack levels used:    1
 19017 ;; This function calls:
 19018 ;;		Nothing
 19019 ;; This function is called by:
 19020 ;;		_menuLCD_ISR
 19021 ;; This function uses a non-reentrant model
 19022 ;;
 19023                           
 19024                           
 19025                           ;psect for function _differenceBetweenTimePeriod
 19026  086C                     _differenceBetweenTimePeriod:
 19027  086C                     i1l4559:	
 19028                           ;incstack = 0
 19029                           ; Regs used in _differenceBetweenTimePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
 19030                           
 19031                           
 19032                           ;main.c: 270: while (stop.s > start.s) {
 19033  086C  2873               	goto	i1l4563
 19034  086D                     i1l4561:
 19035                           
 19036                           ;main.c: 271: --start.m;
 19037  086D  3001               	movlw	1
 19038  086E  02F1               	subwf	differenceBetweenTimePeriod@start+1,f
 19039                           
 19040                           ;main.c: 272: start.s += 60;
 19041  086F  303C               	movlw	60
 19042  0870  00F7               	movwf	??_differenceBetweenTimePeriod
 19043  0871  0877               	movf	??_differenceBetweenTimePeriod,w
 19044  0872  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 19045  0873                     i1l4563:
 19046  0873  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 19047  0874  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 19048  0875  1C03               	skipc
 19049  0876  2878               	goto	u375_21
 19050  0877  2879               	goto	u375_20
 19051  0878                     u375_21:
 19052  0878  286D               	goto	i1l4561
 19053  0879                     u375_20:
 19054  0879                     i1l4565:
 19055                           
 19056                           ;main.c: 273: };main.c: 274: diff->s = start.s - stop.s;
 19057  0879  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 19058  087A  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 19059  087B  00F7               	movwf	??_differenceBetweenTimePeriod
 19060  087C  0876               	movf	differenceBetweenTimePeriod@diff,w
 19061  087D  3E02               	addlw	2
 19062  087E  0086               	movwf	6
 19063  087F  0187               	clrf	7
 19064  0880  0877               	movf	??_differenceBetweenTimePeriod,w
 19065  0881  0081               	movwf	1
 19066                           
 19067                           ;main.c: 275: while (stop.m > start.m) {
 19068  0882  2889               	goto	i1l4569
 19069  0883                     i1l4567:
 19070                           
 19071                           ;main.c: 276: --start.h;
 19072  0883  3001               	movlw	1
 19073  0884  02F0               	subwf	differenceBetweenTimePeriod@start,f
 19074                           
 19075                           ;main.c: 277: start.m += 60;
 19076  0885  303C               	movlw	60
 19077  0886  00F7               	movwf	??_differenceBetweenTimePeriod
 19078  0887  0877               	movf	??_differenceBetweenTimePeriod,w
 19079  0888  07F1               	addwf	differenceBetweenTimePeriod@start+1,f
 19080  0889                     i1l4569:
 19081  0889  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 19082  088A  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 19083  088B  1C03               	skipc
 19084  088C  288E               	goto	u376_21
 19085  088D  288F               	goto	u376_20
 19086  088E                     u376_21:
 19087  088E  2883               	goto	i1l4567
 19088  088F                     u376_20:
 19089  088F                     i1l4571:
 19090                           
 19091                           ;main.c: 278: };main.c: 279: diff->m = start.m - stop.m;
 19092  088F  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 19093  0890  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 19094  0891  00F7               	movwf	??_differenceBetweenTimePeriod
 19095  0892  0A76               	incf	differenceBetweenTimePeriod@diff,w
 19096  0893  0086               	movwf	6
 19097  0894  0187               	clrf	7
 19098  0895  0877               	movf	??_differenceBetweenTimePeriod,w
 19099  0896  0081               	movwf	1
 19100                           
 19101                           ;main.c: 280: diff->h = start.h - stop.h;
 19102  0897  0873               	movf	differenceBetweenTimePeriod@stop,w
 19103  0898  0270               	subwf	differenceBetweenTimePeriod@start,w
 19104  0899  00F7               	movwf	??_differenceBetweenTimePeriod
 19105  089A  0876               	movf	differenceBetweenTimePeriod@diff,w
 19106  089B  0086               	movwf	6
 19107  089C  0187               	clrf	7
 19108  089D  0877               	movf	??_differenceBetweenTimePeriod,w
 19109  089E  0081               	movwf	1
 19110  089F                     i1l1233:
 19111  089F  0008               	return
 19112  08A0                     __end_of_differenceBetweenTimePeriod:
 19113                           
 19114                           	psect	text64
 19115  144E                     __ptext64:	
 19116 ;; *************** function _TMR2_StartTimer *****************
 19117 ;; Defined at:
 19118 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 19119 ;; Parameters:    Size  Location     Type
 19120 ;;		None
 19121 ;; Auto vars:     Size  Location     Type
 19122 ;;		None
 19123 ;; Return value:  Size  Location     Type
 19124 ;;                  1    wreg      void 
 19125 ;; Registers used:
 19126 ;;		status,2, status,0, pclath, cstack
 19127 ;; Tracked objects:
 19128 ;;		On entry : 0/0
 19129 ;;		On exit  : 0/0
 19130 ;;		Unchanged: 0/0
 19131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19136 ;;Total ram usage:        0 bytes
 19137 ;; Hardware stack levels used:    1
 19138 ;; Hardware stack levels required when called:    1
 19139 ;; This function calls:
 19140 ;;		_TMR2_Start
 19141 ;; This function is called by:
 19142 ;;		_menuLCD_ISR
 19143 ;; This function uses a non-reentrant model
 19144 ;;
 19145                           
 19146                           
 19147                           ;psect for function _TMR2_StartTimer
 19148  144E                     _TMR2_StartTimer:
 19149  144E                     i1l4495:	
 19150                           ;incstack = 0
 19151                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 19152                           
 19153                           
 19154                           ;tmr2.c: 108: TMR2_Start();
 19155  144E  3194  243C  3194   	fcall	_TMR2_Start
 19156  1451                     i1l799:
 19157  1451  0008               	return
 19158  1452                     __end_of_TMR2_StartTimer:
 19159                           
 19160                           	psect	text65
 19161  143C                     __ptext65:	
 19162 ;; *************** function _TMR2_Start *****************
 19163 ;; Defined at:
 19164 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 19165 ;; Parameters:    Size  Location     Type
 19166 ;;		None
 19167 ;; Auto vars:     Size  Location     Type
 19168 ;;		None
 19169 ;; Return value:  Size  Location     Type
 19170 ;;                  1    wreg      void 
 19171 ;; Registers used:
 19172 ;;		None
 19173 ;; Tracked objects:
 19174 ;;		On entry : 0/0
 19175 ;;		On exit  : 0/0
 19176 ;;		Unchanged: 0/0
 19177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19182 ;;Total ram usage:        0 bytes
 19183 ;; Hardware stack levels used:    1
 19184 ;; This function calls:
 19185 ;;		Nothing
 19186 ;; This function is called by:
 19187 ;;		_TMR2_StartTimer
 19188 ;; This function uses a non-reentrant model
 19189 ;;
 19190                           
 19191                           
 19192                           ;psect for function _TMR2_Start
 19193  143C                     _TMR2_Start:
 19194  143C                     i1l4365:	
 19195                           ;incstack = 0
 19196                           ; Regs used in _TMR2_Start: []
 19197                           
 19198                           
 19199                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 19200  143C  0025               	movlb	5	; select bank5
 19201  143D  178E               	bsf	14,7	;volatile
 19202  143E                     i1l796:
 19203  143E  0008               	return
 19204  143F                     __end_of_TMR2_Start:
 19205                           
 19206                           	psect	text66
 19207  1439                     __ptext66:	
 19208 ;; *************** function _PWM_Output_D4_Enable *****************
 19209 ;; Defined at:
 19210 ;;		line 283 in file "main.c"
 19211 ;; Parameters:    Size  Location     Type
 19212 ;;		None
 19213 ;; Auto vars:     Size  Location     Type
 19214 ;;		None
 19215 ;; Return value:  Size  Location     Type
 19216 ;;                  1    wreg      void 
 19217 ;; Registers used:
 19218 ;;		None
 19219 ;; Tracked objects:
 19220 ;;		On entry : 0/0
 19221 ;;		On exit  : 0/0
 19222 ;;		Unchanged: 0/0
 19223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19228 ;;Total ram usage:        0 bytes
 19229 ;; Hardware stack levels used:    1
 19230 ;; This function calls:
 19231 ;;		Nothing
 19232 ;; This function is called by:
 19233 ;;		_menuLCD_ISR
 19234 ;; This function uses a non-reentrant model
 19235 ;;
 19236                           
 19237                           
 19238                           ;psect for function _PWM_Output_D4_Enable
 19239  1439                     _PWM_Output_D4_Enable:
 19240  1439                     i1l4573:	
 19241                           ;incstack = 0
 19242                           ; Regs used in _PWM_Output_D4_Enable: []
 19243                           
 19244                           
 19245                           ;main.c: 284: PWM6EN = 1;
 19246  1439  0027               	movlb	7	; select bank7
 19247  143A  178E               	bsf	14,7	;volatile
 19248  143B                     i1l1236:
 19249  143B  0008               	return
 19250  143C                     __end_of_PWM_Output_D4_Enable:
 19251                           
 19252                           	psect	text67
 19253  15FA                     __ptext67:	
 19254 ;; *************** function _LCDstr *****************
 19255 ;; Defined at:
 19256 ;;		line 247 in file "main.c"
 19257 ;; Parameters:    Size  Location     Type
 19258 ;;  p               2    9[COMMON] PTR unsigned char 
 19259 ;;		 -> STR_7(4), menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 19260 ;; Auto vars:     Size  Location     Type
 19261 ;;  c               1    0[BANK0 ] unsigned char 
 19262 ;; Return value:  Size  Location     Type
 19263 ;;                  1    wreg      void 
 19264 ;; Registers used:
 19265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19266 ;; Tracked objects:
 19267 ;;		On entry : 0/0
 19268 ;;		On exit  : 0/0
 19269 ;;		Unchanged: 0/0
 19270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19273 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19274 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19275 ;;Total ram usage:        6 bytes
 19276 ;; Hardware stack levels used:    1
 19277 ;; Hardware stack levels required when called:    3
 19278 ;; This function calls:
 19279 ;;		_LCDchar
 19280 ;; This function is called by:
 19281 ;;		_menuLCD_ISR
 19282 ;; This function uses a non-reentrant model
 19283 ;;
 19284                           
 19285                           
 19286                           ;psect for function _LCDstr
 19287  15FA                     _LCDstr:
 19288  15FA                     i1l4553:	
 19289                           ;incstack = 0
 19290                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19291                           
 19292                           
 19293                           ;main.c: 249: unsigned char c;;main.c: 251: while((c = *p++)) LCDchar(c);
 19294  15FA  2DFF               	goto	i1l4557
 19295  15FB                     i1l4555:
 19296  15FB  0820               	movf	LCDstr@c,w
 19297  15FC  3194  249D  3195   	fcall	_LCDchar
 19298  15FF                     i1l4557:
 19299  15FF  087A               	movf	LCDstr@p+1,w
 19300  1600  00FC               	movwf	??_LCDstr+1
 19301  1601  0879               	movf	LCDstr@p,w
 19302  1602  00FB               	movwf	??_LCDstr
 19303  1603  0AF9               	incf	LCDstr@p,f
 19304  1604  1903               	skipnz
 19305  1605  0AFA               	incf	LCDstr@p+1,f
 19306  1606  087B               	movf	??_LCDstr,w
 19307  1607  0084               	movwf	4
 19308  1608  087C               	movf	??_LCDstr+1,w
 19309  1609  0085               	movwf	5
 19310  160A  0800               	movf	0,w	;code access
 19311  160B  00FD               	movwf	??_LCDstr+2
 19312  160C  087D               	movf	??_LCDstr+2,w
 19313  160D  0020               	movlb	0	; select bank0
 19314  160E  00A0               	movwf	LCDstr@c
 19315  160F  0820               	movf	LCDstr@c,w
 19316  1610  1D03               	btfss	3,2
 19317  1611  2E13               	goto	u374_21
 19318  1612  2E14               	goto	u374_20
 19319  1613                     u374_21:
 19320  1613  2DFB               	goto	i1l4555
 19321  1614                     u374_20:
 19322  1614                     i1l1220:
 19323  1614  0008               	return
 19324  1615                     __end_of_LCDstr:
 19325                           
 19326                           	psect	text68
 19327  149D                     __ptext68:	
 19328 ;; *************** function _LCDchar *****************
 19329 ;; Defined at:
 19330 ;;		line 242 in file "main.c"
 19331 ;; Parameters:    Size  Location     Type
 19332 ;;  c               1    wreg     unsigned char 
 19333 ;; Auto vars:     Size  Location     Type
 19334 ;;  c               1    8[COMMON] unsigned char 
 19335 ;; Return value:  Size  Location     Type
 19336 ;;                  1    wreg      void 
 19337 ;; Registers used:
 19338 ;;		wreg, status,2, status,0, pclath, cstack
 19339 ;; Tracked objects:
 19340 ;;		On entry : 0/0
 19341 ;;		On exit  : 0/0
 19342 ;;		Unchanged: 0/0
 19343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19348 ;;Total ram usage:        1 bytes
 19349 ;; Hardware stack levels used:    1
 19350 ;; Hardware stack levels required when called:    2
 19351 ;; This function calls:
 19352 ;;		i1_LCDsend2x4
 19353 ;; This function is called by:
 19354 ;;		_LCDstr
 19355 ;;		_menuLCD_ISR
 19356 ;; This function uses a non-reentrant model
 19357 ;;
 19358                           
 19359                           
 19360                           ;psect for function _LCDchar
 19361  149D                     _LCDchar:
 19362                           
 19363                           ;incstack = 0
 19364                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 19365                           ;LCDchar@c stored from wreg
 19366  149D  00F8               	movwf	LCDchar@c
 19367  149E                     i1l4367:
 19368                           
 19369                           ;main.c: 244: LCDsend2x4(c, 0x01);
 19370  149E  01F2               	clrf	i1LCDsend2x4@mode
 19371  149F  0AF2               	incf	i1LCDsend2x4@mode,f
 19372  14A0  0878               	movf	LCDchar@c,w
 19373  14A1  318C  244E  3194   	fcall	i1_LCDsend2x4
 19374  14A4                     i1l1214:
 19375  14A4  0008               	return
 19376  14A5                     __end_of_LCDchar:
 19377                           
 19378                           	psect	text69
 19379  1488                     __ptext69:	
 19380 ;; *************** function _LCDcmd *****************
 19381 ;; Defined at:
 19382 ;;		line 237 in file "main.c"
 19383 ;; Parameters:    Size  Location     Type
 19384 ;;  c               1    wreg     unsigned char 
 19385 ;; Auto vars:     Size  Location     Type
 19386 ;;  c               1    8[COMMON] unsigned char 
 19387 ;; Return value:  Size  Location     Type
 19388 ;;                  1    wreg      void 
 19389 ;; Registers used:
 19390 ;;		wreg, status,2, status,0, pclath, cstack
 19391 ;; Tracked objects:
 19392 ;;		On entry : 0/0
 19393 ;;		On exit  : 0/0
 19394 ;;		Unchanged: 0/0
 19395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19400 ;;Total ram usage:        1 bytes
 19401 ;; Hardware stack levels used:    1
 19402 ;; Hardware stack levels required when called:    2
 19403 ;; This function calls:
 19404 ;;		i1_LCDsend2x4
 19405 ;; This function is called by:
 19406 ;;		_menuLCD_ISR
 19407 ;; This function uses a non-reentrant model
 19408 ;;
 19409                           
 19410                           
 19411                           ;psect for function _LCDcmd
 19412  1488                     _LCDcmd:
 19413                           
 19414                           ;incstack = 0
 19415                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 19416                           ;LCDcmd@c stored from wreg
 19417  1488  00F8               	movwf	LCDcmd@c
 19418  1489                     i1l4551:
 19419                           
 19420                           ;main.c: 239: LCDsend2x4(c, 0);
 19421  1489  01F2               	clrf	i1LCDsend2x4@mode
 19422  148A  0878               	movf	LCDcmd@c,w
 19423  148B  318C  244E  3194   	fcall	i1_LCDsend2x4
 19424  148E                     i1l1211:
 19425  148E  0008               	return
 19426  148F                     __end_of_LCDcmd:
 19427                           
 19428                           	psect	text70
 19429  0C4E                     __ptext70:	
 19430 ;; *************** function i1_LCDsend2x4 *****************
 19431 ;; Defined at:
 19432 ;;		line 191 in file "main.c"
 19433 ;; Parameters:    Size  Location     Type
 19434 ;;  c               1    wreg     unsigned char 
 19435 ;;  mode            1    2[COMMON] unsigned char 
 19436 ;; Auto vars:     Size  Location     Type
 19437 ;;  c               1    5[COMMON] unsigned char 
 19438 ;;  lc              1    7[COMMON] unsigned char 
 19439 ;;  hc              1    6[COMMON] unsigned char 
 19440 ;; Return value:  Size  Location     Type
 19441 ;;                  1    wreg      void 
 19442 ;; Registers used:
 19443 ;;		wreg, status,2, status,0, pclath, cstack
 19444 ;; Tracked objects:
 19445 ;;		On entry : 0/0
 19446 ;;		On exit  : 0/0
 19447 ;;		Unchanged: 0/0
 19448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19449 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19450 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19452 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19453 ;;Total ram usage:        6 bytes
 19454 ;; Hardware stack levels used:    1
 19455 ;; Hardware stack levels required when called:    1
 19456 ;; This function calls:
 19457 ;;		i1_WriteI2C
 19458 ;; This function is called by:
 19459 ;;		_LCDcmd
 19460 ;;		_LCDchar
 19461 ;; This function uses a non-reentrant model
 19462 ;;
 19463                           
 19464                           
 19465                           ;psect for function i1_LCDsend2x4
 19466  0C4E                     i1_LCDsend2x4:
 19467                           
 19468                           ;incstack = 0
 19469                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 19470                           ;i1LCDsend2x4@c stored from wreg
 19471  0C4E  00F5               	movwf	i1LCDsend2x4@c
 19472  0C4F                     i1l4319:
 19473                           
 19474                           ;main.c: 193: unsigned char hc;;main.c: 194: unsigned char lc;;main.c: 196: hc = c & 0xf
      +                          0;
 19475  0C4F  0875               	movf	i1LCDsend2x4@c,w
 19476  0C50  39F0               	andlw	240
 19477  0C51  00F3               	movwf	??i1_LCDsend2x4
 19478  0C52  0873               	movf	??i1_LCDsend2x4,w
 19479  0C53  00F6               	movwf	i1LCDsend2x4@hc
 19480  0C54                     i1l4321:
 19481                           
 19482                           ;main.c: 197: lc = (c << 4) & 0xf0;
 19483  0C54  0875               	movf	i1LCDsend2x4@c,w
 19484  0C55  00F3               	movwf	??i1_LCDsend2x4
 19485  0C56  3003               	movlw	3
 19486  0C57                     u305_25:
 19487  0C57  35F3               	lslf	??i1_LCDsend2x4,f
 19488  0C58  3EFF               	addlw	-1
 19489  0C59  1D03               	skipz
 19490  0C5A  2C57               	goto	u305_25
 19491  0C5B  3573               	lslf	??i1_LCDsend2x4,w
 19492  0C5C  39F0               	andlw	240
 19493  0C5D  00F4               	movwf	??i1_LCDsend2x4+1
 19494  0C5E  0874               	movf	??i1_LCDsend2x4+1,w
 19495  0C5F  00F7               	movwf	i1LCDsend2x4@lc
 19496  0C60                     i1l4323:	
 19497                           ;main.c: 199: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19498                           
 19499  0C60  0023               	movlb	3	; select bank3
 19500  0C61  0C0F               	rrf	15,w	;volatile
 19501  0C62  0C89               	rrf	9,f
 19502  0C63  3901               	andlw	1
 19503  0C64  00F3               	movwf	??i1_LCDsend2x4
 19504  0C65  0811               	movf	17,w	;volatile
 19505  0C66  391F               	andlw	31
 19506  0C67  0473               	iorwf	??i1_LCDsend2x4,w
 19507  0C68  1D03               	btfss	3,2
 19508  0C69  2C6B               	goto	u306_21
 19509  0C6A  2C6C               	goto	u306_20
 19510  0C6B                     u306_21:
 19511  0C6B  2C60               	goto	i1l4323
 19512  0C6C                     u306_20:
 19513  0C6C                     i1l1174:
 19514                           
 19515                           ;main.c: 200: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 19516  0C6C  1411               	bsf	17,0	;volatile
 19517  0C6D                     i1l1175:
 19518  0C6D  1811               	btfsc	17,0	;volatile
 19519  0C6E  2C70               	goto	u307_21
 19520  0C6F  2C71               	goto	u307_20
 19521  0C70                     u307_21:
 19522  0C70  2C6D               	goto	i1l1175
 19523  0C71                     u307_20:
 19524  0C71                     i1l4325:
 19525  0C71  0C0F               	rrf	15,w	;volatile
 19526  0C72  0C89               	rrf	9,f
 19527  0C73  3901               	andlw	1
 19528  0C74  00F3               	movwf	??i1_LCDsend2x4
 19529  0C75  0811               	movf	17,w	;volatile
 19530  0C76  391F               	andlw	31
 19531  0C77  0473               	iorwf	??i1_LCDsend2x4,w
 19532  0C78  1D03               	btfss	3,2
 19533  0C79  2C7B               	goto	u308_21
 19534  0C7A  2C7C               	goto	u308_20
 19535  0C7B                     u308_21:
 19536  0C7B  2C71               	goto	i1l4325
 19537  0C7C                     u308_20:
 19538  0C7C                     i1l4327:
 19539                           
 19540                           ;main.c: 201: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19541  0C7C  304E               	movlw	78
 19542  0C7D  3189  21C9  318C   	fcall	i1_WriteI2C
 19543  0C80                     i1l4329:
 19544  0C80  0023               	movlb	3	; select bank3
 19545  0C81  0C0F               	rrf	15,w	;volatile
 19546  0C82  0C89               	rrf	9,f
 19547  0C83  3901               	andlw	1
 19548  0C84  00F3               	movwf	??i1_LCDsend2x4
 19549  0C85  0811               	movf	17,w	;volatile
 19550  0C86  391F               	andlw	31
 19551  0C87  0473               	iorwf	??i1_LCDsend2x4,w
 19552  0C88  1D03               	btfss	3,2
 19553  0C89  2C8B               	goto	u309_21
 19554  0C8A  2C8C               	goto	u309_20
 19555  0C8B                     u309_21:
 19556  0C8B  2C80               	goto	i1l4329
 19557  0C8C                     u309_20:
 19558  0C8C                     i1l4331:
 19559                           
 19560                           ;main.c: 202: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 19561  0C8C  0876               	movf	i1LCDsend2x4@hc,w
 19562  0C8D  0472               	iorwf	i1LCDsend2x4@mode,w
 19563  0C8E  3808               	iorlw	8
 19564  0C8F  3189  21C9  318C   	fcall	i1_WriteI2C
 19565  0C92                     i1l4333:
 19566  0C92  0023               	movlb	3	; select bank3
 19567  0C93  0C0F               	rrf	15,w	;volatile
 19568  0C94  0C89               	rrf	9,f
 19569  0C95  3901               	andlw	1
 19570  0C96  00F3               	movwf	??i1_LCDsend2x4
 19571  0C97  0811               	movf	17,w	;volatile
 19572  0C98  391F               	andlw	31
 19573  0C99  0473               	iorwf	??i1_LCDsend2x4,w
 19574  0C9A  1D03               	btfss	3,2
 19575  0C9B  2C9D               	goto	u310_21
 19576  0C9C  2C9E               	goto	u310_20
 19577  0C9D                     u310_21:
 19578  0C9D  2C92               	goto	i1l4333
 19579  0C9E                     u310_20:
 19580  0C9E                     i1l4335:
 19581                           
 19582                           ;main.c: 203: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 19583  0C9E  0876               	movf	i1LCDsend2x4@hc,w
 19584  0C9F  0472               	iorwf	i1LCDsend2x4@mode,w
 19585  0CA0  380C               	iorlw	12
 19586  0CA1  3189  21C9  318C   	fcall	i1_WriteI2C
 19587  0CA4                     i1l4337:
 19588  0CA4  0023               	movlb	3	; select bank3
 19589  0CA5  0C0F               	rrf	15,w	;volatile
 19590  0CA6  0C89               	rrf	9,f
 19591  0CA7  3901               	andlw	1
 19592  0CA8  00F3               	movwf	??i1_LCDsend2x4
 19593  0CA9  0811               	movf	17,w	;volatile
 19594  0CAA  391F               	andlw	31
 19595  0CAB  0473               	iorwf	??i1_LCDsend2x4,w
 19596  0CAC  1D03               	btfss	3,2
 19597  0CAD  2CAF               	goto	u311_21
 19598  0CAE  2CB0               	goto	u311_20
 19599  0CAF                     u311_21:
 19600  0CAF  2CA4               	goto	i1l4337
 19601  0CB0                     u311_20:
 19602  0CB0                     i1l1189:
 19603  0CB0                     i1l4339:	
 19604                           ;main.c: 204: _delay((unsigned long)((1)*(1000000/4000000.0)));
 19605                           
 19606                           
 19607                           ;main.c: 205: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 19608  0CB0  0876               	movf	i1LCDsend2x4@hc,w
 19609  0CB1  0472               	iorwf	i1LCDsend2x4@mode,w
 19610  0CB2  3808               	iorlw	8
 19611  0CB3  3189  21C9  318C   	fcall	i1_WriteI2C
 19612  0CB6                     i1l4341:
 19613  0CB6  0023               	movlb	3	; select bank3
 19614  0CB7  0C0F               	rrf	15,w	;volatile
 19615  0CB8  0C89               	rrf	9,f
 19616  0CB9  3901               	andlw	1
 19617  0CBA  00F3               	movwf	??i1_LCDsend2x4
 19618  0CBB  0811               	movf	17,w	;volatile
 19619  0CBC  391F               	andlw	31
 19620  0CBD  0473               	iorwf	??i1_LCDsend2x4,w
 19621  0CBE  1D03               	btfss	3,2
 19622  0CBF  2CC1               	goto	u312_21
 19623  0CC0  2CC2               	goto	u312_20
 19624  0CC1                     u312_21:
 19625  0CC1  2CB6               	goto	i1l4341
 19626  0CC2                     u312_20:
 19627  0CC2                     i1l4343:
 19628                           
 19629                           ;main.c: 206: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 19630  0CC2  0877               	movf	i1LCDsend2x4@lc,w
 19631  0CC3  0472               	iorwf	i1LCDsend2x4@mode,w
 19632  0CC4  3808               	iorlw	8
 19633  0CC5  3189  21C9  318C   	fcall	i1_WriteI2C
 19634  0CC8                     i1l4345:
 19635  0CC8  0023               	movlb	3	; select bank3
 19636  0CC9  0C0F               	rrf	15,w	;volatile
 19637  0CCA  0C89               	rrf	9,f
 19638  0CCB  3901               	andlw	1
 19639  0CCC  00F3               	movwf	??i1_LCDsend2x4
 19640  0CCD  0811               	movf	17,w	;volatile
 19641  0CCE  391F               	andlw	31
 19642  0CCF  0473               	iorwf	??i1_LCDsend2x4,w
 19643  0CD0  1D03               	btfss	3,2
 19644  0CD1  2CD3               	goto	u313_21
 19645  0CD2  2CD4               	goto	u313_20
 19646  0CD3                     u313_21:
 19647  0CD3  2CC8               	goto	i1l4345
 19648  0CD4                     u313_20:
 19649  0CD4                     i1l4347:
 19650                           
 19651                           ;main.c: 207: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 19652  0CD4  0877               	movf	i1LCDsend2x4@lc,w
 19653  0CD5  0472               	iorwf	i1LCDsend2x4@mode,w
 19654  0CD6  380C               	iorlw	12
 19655  0CD7  3189  21C9  318C   	fcall	i1_WriteI2C
 19656  0CDA                     i1l4349:
 19657  0CDA  0023               	movlb	3	; select bank3
 19658  0CDB  0C0F               	rrf	15,w	;volatile
 19659  0CDC  0C89               	rrf	9,f
 19660  0CDD  3901               	andlw	1
 19661  0CDE  00F3               	movwf	??i1_LCDsend2x4
 19662  0CDF  0811               	movf	17,w	;volatile
 19663  0CE0  391F               	andlw	31
 19664  0CE1  0473               	iorwf	??i1_LCDsend2x4,w
 19665  0CE2  1D03               	btfss	3,2
 19666  0CE3  2CE5               	goto	u314_21
 19667  0CE4  2CE6               	goto	u314_20
 19668  0CE5                     u314_21:
 19669  0CE5  2CDA               	goto	i1l4349
 19670  0CE6                     u314_20:
 19671  0CE6                     i1l1198:
 19672  0CE6                     i1l4351:	
 19673                           ;main.c: 208: _delay((unsigned long)((1)*(1000000/4000000.0)));
 19674                           
 19675                           
 19676                           ;main.c: 209: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 19677  0CE6  0877               	movf	i1LCDsend2x4@lc,w
 19678  0CE7  0472               	iorwf	i1LCDsend2x4@mode,w
 19679  0CE8  3808               	iorlw	8
 19680  0CE9  3189  21C9  318C   	fcall	i1_WriteI2C
 19681  0CEC                     i1l4353:
 19682  0CEC  0023               	movlb	3	; select bank3
 19683  0CED  0C0F               	rrf	15,w	;volatile
 19684  0CEE  0C89               	rrf	9,f
 19685  0CEF  3901               	andlw	1
 19686  0CF0  00F3               	movwf	??i1_LCDsend2x4
 19687  0CF1  0811               	movf	17,w	;volatile
 19688  0CF2  391F               	andlw	31
 19689  0CF3  0473               	iorwf	??i1_LCDsend2x4,w
 19690  0CF4  1D03               	btfss	3,2
 19691  0CF5  2CF7               	goto	u315_21
 19692  0CF6  2CF8               	goto	u315_20
 19693  0CF7                     u315_21:
 19694  0CF7  2CEC               	goto	i1l4353
 19695  0CF8                     u315_20:
 19696  0CF8                     i1l1201:
 19697                           
 19698                           ;main.c: 210: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 19699  0CF8  1511               	bsf	17,2	;volatile
 19700  0CF9                     i1l1202:
 19701  0CF9  1911               	btfsc	17,2	;volatile
 19702  0CFA  2CFC               	goto	u316_21
 19703  0CFB  2CFD               	goto	u316_20
 19704  0CFC                     u316_21:
 19705  0CFC  2CF9               	goto	i1l1202
 19706  0CFD                     u316_20:
 19707  0CFD                     i1l4355:
 19708                           
 19709                           ;main.c: 211: _delay((unsigned long)((50)*(1000000/4000000.0)));
 19710  0CFD  3004               	movlw	4
 19711  0CFE                     u598_27:
 19712  0CFE  0B89               	decfsz	9,f
 19713  0CFF  2CFE               	goto	u598_27
 19714  0D00                     i1l1205:
 19715  0D00  0008               	return
 19716  0D01                     __end_ofi1_LCDsend2x4:
 19717                           
 19718                           	psect	text71
 19719  09C9                     __ptext71:	
 19720 ;; *************** function i1_WriteI2C *****************
 19721 ;; Defined at:
 19722 ;;		line 47 in file "I2C/i2c.c"
 19723 ;; Parameters:    Size  Location     Type
 19724 ;;  data_out        1    wreg     unsigned char 
 19725 ;; Auto vars:     Size  Location     Type
 19726 ;;  data_out        1    1[COMMON] unsigned char 
 19727 ;; Return value:  Size  Location     Type
 19728 ;;                  1    wreg      char 
 19729 ;; Registers used:
 19730 ;;		wreg, status,2, status,0
 19731 ;; Tracked objects:
 19732 ;;		On entry : 0/0
 19733 ;;		On exit  : 0/0
 19734 ;;		Unchanged: 0/0
 19735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19739 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19740 ;;Total ram usage:        2 bytes
 19741 ;; Hardware stack levels used:    1
 19742 ;; This function calls:
 19743 ;;		Nothing
 19744 ;; This function is called by:
 19745 ;;		_tsttc
 19746 ;;		i1_LCDsend2x4
 19747 ;; This function uses a non-reentrant model
 19748 ;;
 19749                           
 19750                           
 19751                           ;psect for function i1_WriteI2C
 19752  09C9                     i1_WriteI2C:
 19753                           
 19754                           ;incstack = 0
 19755                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 19756                           ;i1WriteI2C@data_out stored from wreg
 19757  09C9  00F1               	movwf	i1WriteI2C@data_out
 19758  09CA                     i1l4289:
 19759                           
 19760                           ;i2c.c: 49: SSP1BUF = data_out;
 19761  09CA  0871               	movf	i1WriteI2C@data_out,w
 19762  09CB  0023               	movlb	3	; select bank3
 19763  09CC  008C               	movwf	12	;volatile
 19764  09CD                     i1l4291:
 19765                           
 19766                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 19767  09CD  1F90               	btfss	16,7	;volatile
 19768  09CE  29D0               	goto	u296_21
 19769  09CF  29D1               	goto	u296_20
 19770  09D0                     u296_21:
 19771  09D0  29D2               	goto	i1l4297
 19772  09D1                     u296_20:
 19773  09D1  2A13               	goto	i1l30
 19774  09D2                     i1l4297:
 19775                           
 19776                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 19777  09D2  300F               	movlw	15
 19778  09D3  0510               	andwf	16,w	;volatile
 19779  09D4  00F0               	movwf	??i1_WriteI2C
 19780  09D5  3008               	movlw	8
 19781  09D6  0670               	xorwf	??i1_WriteI2C,w
 19782  09D7  1903               	btfsc	3,2
 19783  09D8  29DA               	goto	u297_21
 19784  09D9  29DB               	goto	u297_20
 19785  09DA                     u297_21:
 19786  09DA  29F1               	goto	i1l4309
 19787  09DB                     u297_20:
 19788  09DB                     i1l4299:
 19789  09DB  300F               	movlw	15
 19790  09DC  0510               	andwf	16,w	;volatile
 19791  09DD  00F0               	movwf	??i1_WriteI2C
 19792  09DE  300B               	movlw	11
 19793  09DF  0670               	xorwf	??i1_WriteI2C,w
 19794  09E0  1903               	btfsc	3,2
 19795  09E1  29E3               	goto	u298_21
 19796  09E2  29E4               	goto	u298_20
 19797  09E3                     u298_21:
 19798  09E3  29F1               	goto	i1l4309
 19799  09E4                     u298_20:
 19800  09E4                     i1l4301:
 19801                           
 19802                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 19803  09E4  1610               	bsf	16,4	;volatile
 19804  09E5                     i1l33:	
 19805                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 19806                           
 19807  09E5  002E               	movlb	14	; select bank14
 19808  09E6  1C0F               	btfss	15,0	;volatile
 19809  09E7  29E9               	goto	u299_21
 19810  09E8  29EA               	goto	u299_20
 19811  09E9                     u299_21:
 19812  09E9  29E5               	goto	i1l33
 19813  09EA                     u299_20:
 19814  09EA                     i1l35:
 19815                           
 19816                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 19817  09EA  0023               	movlb	3	; select bank3
 19818  09EB  190F               	btfsc	15,2	;volatile
 19819  09EC  29EE               	goto	u300_21
 19820  09ED  29EF               	goto	u300_20
 19821  09EE                     u300_21:
 19822  09EE  2A13               	goto	i1l30
 19823  09EF                     u300_20:
 19824  09EF                     i1l4303:
 19825  09EF  080F               	movf	15,w	;volatile
 19826  09F0  2A13               	goto	i1l30
 19827  09F1                     i1l4309:
 19828                           
 19829                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 19830  09F1  300F               	movlw	15
 19831  09F2  0510               	andwf	16,w	;volatile
 19832  09F3  00F0               	movwf	??i1_WriteI2C
 19833  09F4  3008               	movlw	8
 19834  09F5  0670               	xorwf	??i1_WriteI2C,w
 19835  09F6  1903               	btfsc	3,2
 19836  09F7  29F9               	goto	u301_21
 19837  09F8  29FA               	goto	u301_20
 19838  09F9                     u301_21:
 19839  09F9  2A03               	goto	i1l42
 19840  09FA                     u301_20:
 19841  09FA                     i1l4311:
 19842  09FA  300F               	movlw	15
 19843  09FB  0510               	andwf	16,w	;volatile
 19844  09FC  00F0               	movwf	??i1_WriteI2C
 19845  09FD  300B               	movlw	11
 19846  09FE  0670               	xorwf	??i1_WriteI2C,w
 19847  09FF  1D03               	btfss	3,2
 19848  0A00  2A02               	goto	u302_21
 19849  0A01  2A03               	goto	u302_20
 19850  0A02                     u302_21:
 19851  0A02  2A13               	goto	i1l30
 19852  0A03                     u302_20:
 19853  0A03                     i1l42:
 19854  0A03  180F               	btfsc	15,0	;volatile
 19855  0A04  2A06               	goto	u303_21
 19856  0A05  2A07               	goto	u303_20
 19857  0A06                     u303_21:
 19858  0A06  2A03               	goto	i1l42
 19859  0A07                     u303_20:
 19860  0A07                     i1l4313:
 19861  0A07  0C0F               	rrf	15,w	;volatile
 19862  0A08  0C89               	rrf	9,f
 19863  0A09  3901               	andlw	1
 19864  0A0A  00F0               	movwf	??i1_WriteI2C
 19865  0A0B  0811               	movf	17,w	;volatile
 19866  0A0C  391F               	andlw	31
 19867  0A0D  0470               	iorwf	??i1_WriteI2C,w
 19868  0A0E  1D03               	btfss	3,2
 19869  0A0F  2A11               	goto	u304_21
 19870  0A10  2A12               	goto	u304_20
 19871  0A11                     u304_21:
 19872  0A11  2A07               	goto	i1l4313
 19873  0A12                     u304_20:
 19874  0A12                     i1l47:
 19875                           
 19876                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 19877  0A12  0811               	movf	17,w	;volatile
 19878  0A13                     i1l30:
 19879  0A13  0008               	return
 19880  0A14                     __end_ofi1_WriteI2C:
 19881                           
 19882                           	psect	text72
 19883  1521                     __ptext72:	
 19884 ;; *************** function _TMR3_WriteTimer *****************
 19885 ;; Defined at:
 19886 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 19887 ;; Parameters:    Size  Location     Type
 19888 ;;  timerVal        2    0[COMMON] unsigned int 
 19889 ;; Auto vars:     Size  Location     Type
 19890 ;;		None
 19891 ;; Return value:  Size  Location     Type
 19892 ;;                  1    wreg      void 
 19893 ;; Registers used:
 19894 ;;		wreg, status,2
 19895 ;; Tracked objects:
 19896 ;;		On entry : 0/0
 19897 ;;		On exit  : 0/0
 19898 ;;		Unchanged: 0/0
 19899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19903 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19904 ;;Total ram usage:        2 bytes
 19905 ;; Hardware stack levels used:    1
 19906 ;; This function calls:
 19907 ;;		Nothing
 19908 ;; This function is called by:
 19909 ;;		_TMR3_ISR
 19910 ;;		_TMR3_Reload
 19911 ;; This function uses a non-reentrant model
 19912 ;;
 19913                           
 19914                           
 19915                           ;psect for function _TMR3_WriteTimer
 19916  1521                     _TMR3_WriteTimer:
 19917  1521                     i1l4947:	
 19918                           ;incstack = 0
 19919                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 19920                           
 19921                           
 19922                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 19923  1521  0024               	movlb	4	; select bank4
 19924  1522  1D14               	btfss	20,2	;volatile
 19925  1523  2D25               	goto	u409_21
 19926  1524  2D26               	goto	u409_20
 19927  1525                     u409_21:
 19928  1525  2D2D               	goto	i1l4957
 19929  1526                     u409_20:
 19930  1526                     i1l4949:
 19931                           
 19932                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 19933  1526  1014               	bcf	20,0	;volatile
 19934  1527                     i1l4951:
 19935                           
 19936                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 19937  1527  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 19938  1528  0093               	movwf	19	;volatile
 19939  1529                     i1l4953:
 19940                           
 19941                           ;tmr3.c: 136: TMR3L = timerVal;
 19942  1529  0870               	movf	TMR3_WriteTimer@timerVal,w
 19943  152A  0092               	movwf	18	;volatile
 19944  152B                     i1l4955:
 19945                           
 19946                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 19947  152B  1414               	bsf	20,0	;volatile
 19948                           
 19949                           ;tmr3.c: 140: }
 19950  152C  2D31               	goto	i1l499
 19951  152D                     i1l4957:
 19952                           
 19953                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 19954  152D  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 19955  152E  0093               	movwf	19	;volatile
 19956  152F                     i1l4959:
 19957                           
 19958                           ;tmr3.c: 145: TMR3L = timerVal;
 19959  152F  0870               	movf	TMR3_WriteTimer@timerVal,w
 19960  1530  0092               	movwf	18	;volatile
 19961  1531                     i1l499:
 19962  1531  0008               	return
 19963  1532                     __end_of_TMR3_WriteTimer:
 19964                           
 19965                           	psect	text73
 19966  156B                     __ptext73:	
 19967 ;; *************** function _TMR1_ISR *****************
 19968 ;; Defined at:
 19969 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 19970 ;; Parameters:    Size  Location     Type
 19971 ;;		None
 19972 ;; Auto vars:     Size  Location     Type
 19973 ;;		None
 19974 ;; Return value:  Size  Location     Type
 19975 ;;                  1    wreg      void 
 19976 ;; Registers used:
 19977 ;;		wreg, status,2, status,0, pclath, cstack
 19978 ;; Tracked objects:
 19979 ;;		On entry : 0/0
 19980 ;;		On exit  : 0/0
 19981 ;;		Unchanged: 0/0
 19982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19987 ;;Total ram usage:        0 bytes
 19988 ;; Hardware stack levels used:    1
 19989 ;; Hardware stack levels required when called:    2
 19990 ;; This function calls:
 19991 ;;		Absolute function
 19992 ;;		_Clock_ISR
 19993 ;;		_TMR1_DefaultInterruptHandler
 19994 ;;		_TMR1_WriteTimer
 19995 ;; This function is called by:
 19996 ;;		_INTERRUPT_InterruptManager
 19997 ;; This function uses a non-reentrant model
 19998 ;;
 19999                           
 20000                           
 20001                           ;psect for function _TMR1_ISR
 20002  156B                     _TMR1_ISR:
 20003  156B                     i1l5369:	
 20004                           ;incstack = 0
 20005                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 20006                           
 20007                           
 20008                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 20009  156B  002E               	movlb	14	; select bank14
 20010  156C  1010               	bcf	16,0	;volatile
 20011  156D                     i1l5371:
 20012                           
 20013                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 20014  156D  0021               	movlb	1	; select bank1
 20015  156E  0861               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 20016  156F  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 20017  1570  0860               	movf	_timer1ReloadVal^(0+128),w	;volatile
 20018  1571  00F0               	movwf	TMR1_WriteTimer@timerVal
 20019  1572  3195  2510  3195   	fcall	_TMR1_WriteTimer
 20020  1575                     i1l5373:
 20021                           
 20022                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 20023  1575  0021               	movlb	1	; select bank1
 20024  1576  085E               	movf	_TMR1_InterruptHandler^(0+128),w
 20025  1577  045F               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 20026  1578  1903               	btfsc	3,2
 20027  1579  2D7B               	goto	u486_21
 20028  157A  2D7C               	goto	u486_20
 20029  157B                     u486_21:
 20030  157B  2D81               	goto	i1l448
 20031  157C                     u486_20:
 20032  157C                     i1l5375:
 20033                           
 20034                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 20035  157C  085F               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 20036  157D  008A               	movwf	10
 20037  157E  085E               	movf	_TMR1_InterruptHandler^(0+128),w
 20038  157F  000A               	callw
 20039  1580  3195               	pagesel	$
 20040  1581                     i1l448:
 20041  1581  0008               	return
 20042  1582                     __end_of_TMR1_ISR:
 20043                           
 20044                           	psect	text74
 20045  1510                     __ptext74:	
 20046 ;; *************** function _TMR1_WriteTimer *****************
 20047 ;; Defined at:
 20048 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 20049 ;; Parameters:    Size  Location     Type
 20050 ;;  timerVal        2    0[COMMON] unsigned int 
 20051 ;; Auto vars:     Size  Location     Type
 20052 ;;		None
 20053 ;; Return value:  Size  Location     Type
 20054 ;;                  1    wreg      void 
 20055 ;; Registers used:
 20056 ;;		wreg, status,2
 20057 ;; Tracked objects:
 20058 ;;		On entry : 0/0
 20059 ;;		On exit  : 0/0
 20060 ;;		Unchanged: 0/0
 20061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20066 ;;Total ram usage:        2 bytes
 20067 ;; Hardware stack levels used:    1
 20068 ;; This function calls:
 20069 ;;		Nothing
 20070 ;; This function is called by:
 20071 ;;		_TMR1_ISR
 20072 ;;		_TMR1_Reload
 20073 ;; This function uses a non-reentrant model
 20074 ;;
 20075                           
 20076                           
 20077                           ;psect for function _TMR1_WriteTimer
 20078  1510                     _TMR1_WriteTimer:
 20079  1510                     i1l4933:	
 20080                           ;incstack = 0
 20081                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 20082                           
 20083                           
 20084                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 20085  1510  0024               	movlb	4	; select bank4
 20086  1511  1D0E               	btfss	14,2	;volatile
 20087  1512  2D14               	goto	u408_21
 20088  1513  2D15               	goto	u408_20
 20089  1514                     u408_21:
 20090  1514  2D1C               	goto	i1l4943
 20091  1515                     u408_20:
 20092  1515                     i1l4935:
 20093                           
 20094                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 20095  1515  100E               	bcf	14,0	;volatile
 20096  1516                     i1l4937:
 20097                           
 20098                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 20099  1516  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20100  1517  008D               	movwf	13	;volatile
 20101  1518                     i1l4939:
 20102                           
 20103                           ;tmr1.c: 136: TMR1L = timerVal;
 20104  1518  0870               	movf	TMR1_WriteTimer@timerVal,w
 20105  1519  008C               	movwf	12	;volatile
 20106  151A                     i1l4941:
 20107                           
 20108                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 20109  151A  140E               	bsf	14,0	;volatile
 20110                           
 20111                           ;tmr1.c: 140: }
 20112  151B  2D20               	goto	i1l435
 20113  151C                     i1l4943:
 20114                           
 20115                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 20116  151C  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20117  151D  008D               	movwf	13	;volatile
 20118  151E                     i1l4945:
 20119                           
 20120                           ;tmr1.c: 145: TMR1L = timerVal;
 20121  151E  0870               	movf	TMR1_WriteTimer@timerVal,w
 20122  151F  008C               	movwf	12	;volatile
 20123  1520                     i1l435:
 20124  1520  0008               	return
 20125  1521                     __end_of_TMR1_WriteTimer:
 20126                           
 20127                           	psect	text75
 20128  06F5                     __ptext75:	
 20129 ;; *************** function _Clock_ISR *****************
 20130 ;; Defined at:
 20131 ;;		line 330 in file "main.c"
 20132 ;; Parameters:    Size  Location     Type
 20133 ;;		None
 20134 ;; Auto vars:     Size  Location     Type
 20135 ;;		None
 20136 ;; Return value:  Size  Location     Type
 20137 ;;                  1    wreg      void 
 20138 ;; Registers used:
 20139 ;;		wreg, status,2, status,0, pclath, cstack
 20140 ;; Tracked objects:
 20141 ;;		On entry : 0/0
 20142 ;;		On exit  : 0/0
 20143 ;;		Unchanged: 0/0
 20144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20148 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20149 ;;Total ram usage:        1 bytes
 20150 ;; Hardware stack levels used:    1
 20151 ;; Hardware stack levels required when called:    1
 20152 ;; This function calls:
 20153 ;;		i1_DATAEE_WriteByte
 20154 ;; This function is called by:
 20155 ;;		_main
 20156 ;;		_TMR1_ISR
 20157 ;; This function uses a non-reentrant model
 20158 ;;
 20159                           
 20160                           
 20161                           ;psect for function _Clock_ISR
 20162  06F5                     _Clock_ISR:
 20163  06F5                     i1l5033:	
 20164                           ;incstack = 0
 20165                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0+pclath+cstack]
 20166                           
 20167                           
 20168                           ;main.c: 332: t.s++;
 20169  06F5  3001               	movlw	1
 20170  06F6  00FA               	movwf	??_Clock_ISR
 20171  06F7  087A               	movf	??_Clock_ISR,w
 20172  06F8  0020               	movlb	0	; select bank0
 20173  06F9  07D9               	addwf	_t+2,f
 20174                           
 20175                           ;main.c: 334: if(t.s==60){
 20176  06FA  303C               	movlw	60
 20177  06FB  0659               	xorwf	_t+2,w
 20178  06FC  1D03               	btfss	3,2
 20179  06FD  2EFF               	goto	u430_21
 20180  06FE  2F00               	goto	u430_20
 20181  06FF                     u430_21:
 20182  06FF  2FAF               	goto	i1l5065
 20183  0700                     u430_20:
 20184  0700                     i1l5035:
 20185                           
 20186                           ;main.c: 335: t.m++;
 20187  0700  3001               	movlw	1
 20188  0701  00FA               	movwf	??_Clock_ISR
 20189  0702  087A               	movf	??_Clock_ISR,w
 20190  0703  07D8               	addwf	_t+1,f
 20191  0704                     i1l5037:
 20192                           
 20193                           ;main.c: 336: t.s=0;
 20194  0704  01D9               	clrf	_t+2
 20195  0705                     i1l5039:
 20196                           
 20197                           ;main.c: 339: DATAEE_WriteByte( 0x7000 + (1 * 8), NREG);
 20198  0705  3008               	movlw	8
 20199  0706  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20200  0707  3070               	movlw	112
 20201  0708  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20202  0709  0021               	movlb	1	; select bank1
 20203  070A  086F               	movf	_NREG^(0+128),w
 20204  070B  00FA               	movwf	??_Clock_ISR
 20205  070C  087A               	movf	??_Clock_ISR,w
 20206  070D  00F8               	movwf	i1DATAEE_WriteByte@bData
 20207  070E  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20208  0711                     i1l5041:
 20209                           
 20210                           ;main.c: 340: DATAEE_WriteByte( 0x7000 + (2 * 8), PMON);
 20211  0711  3010               	movlw	16
 20212  0712  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20213  0713  3070               	movlw	112
 20214  0714  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20215  0715  0021               	movlb	1	; select bank1
 20216  0716  086E               	movf	_PMON^(0+128),w
 20217  0717  00FA               	movwf	??_Clock_ISR
 20218  0718  087A               	movf	??_Clock_ISR,w
 20219  0719  00F8               	movwf	i1DATAEE_WriteByte@bData
 20220  071A  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20221  071D                     i1l5043:
 20222                           
 20223                           ;main.c: 341: DATAEE_WriteByte( 0x7000 + (3 * 8), TALA);
 20224  071D  3018               	movlw	24
 20225  071E  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20226  071F  3070               	movlw	112
 20227  0720  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20228  0721  0020               	movlb	0	; select bank0
 20229  0722  0866               	movf	_TALA,w
 20230  0723  00FA               	movwf	??_Clock_ISR
 20231  0724  087A               	movf	??_Clock_ISR,w
 20232  0725  00F8               	movwf	i1DATAEE_WriteByte@bData
 20233  0726  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20234  0729                     i1l5045:
 20235                           
 20236                           ;main.c: 342: DATAEE_WriteByte( 0x7000 + (4 * 8), clkAlarm.alarmVal.h);
 20237  0729  3020               	movlw	32
 20238  072A  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20239  072B  3070               	movlw	112
 20240  072C  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20241  072D  0020               	movlb	0	; select bank0
 20242  072E  084D               	movf	_clkAlarm,w
 20243  072F  00FA               	movwf	??_Clock_ISR
 20244  0730  087A               	movf	??_Clock_ISR,w
 20245  0731  00F8               	movwf	i1DATAEE_WriteByte@bData
 20246  0732  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20247  0735                     i1l5047:
 20248                           
 20249                           ;main.c: 343: DATAEE_WriteByte( 0x7000 + (5 * 8), clkAlarm.alarmVal.m);
 20250  0735  3028               	movlw	40
 20251  0736  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20252  0737  3070               	movlw	112
 20253  0738  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20254  0739  0020               	movlb	0	; select bank0
 20255  073A  084E               	movf	_clkAlarm+1,w
 20256  073B  00FA               	movwf	??_Clock_ISR
 20257  073C  087A               	movf	??_Clock_ISR,w
 20258  073D  00F8               	movwf	i1DATAEE_WriteByte@bData
 20259  073E  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20260  0741                     i1l5049:
 20261                           
 20262                           ;main.c: 344: DATAEE_WriteByte( 0x7000 + (6 * 8), clkAlarm.alarmVal.s);
 20263  0741  3030               	movlw	48
 20264  0742  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20265  0743  3070               	movlw	112
 20266  0744  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20267  0745  0020               	movlb	0	; select bank0
 20268  0746  084F               	movf	_clkAlarm+2,w
 20269  0747  00FA               	movwf	??_Clock_ISR
 20270  0748  087A               	movf	??_Clock_ISR,w
 20271  0749  00F8               	movwf	i1DATAEE_WriteByte@bData
 20272  074A  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20273  074D                     i1l5051:
 20274                           
 20275                           ;main.c: 345: DATAEE_WriteByte( 0x7000 + (7 * 8), tempAlarm.alarmTemp);
 20276  074D  3038               	movlw	56
 20277  074E  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20278  074F  3070               	movlw	112
 20279  0750  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20280  0751  0020               	movlb	0	; select bank0
 20281  0752  0854               	movf	_tempAlarm,w
 20282  0753  00FA               	movwf	??_Clock_ISR
 20283  0754  087A               	movf	??_Clock_ISR,w
 20284  0755  00F8               	movwf	i1DATAEE_WriteByte@bData
 20285  0756  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20286  0759                     i1l5053:
 20287                           
 20288                           ;main.c: 346: DATAEE_WriteByte( 0x7000 + (8 * 8), lumAlarm.alarmLum);
 20289  0759  3040               	movlw	64
 20290  075A  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20291  075B  3070               	movlw	112
 20292  075C  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20293  075D  0020               	movlb	0	; select bank0
 20294  075E  0851               	movf	_lumAlarm,w
 20295  075F  00FA               	movwf	??_Clock_ISR
 20296  0760  087A               	movf	??_Clock_ISR,w
 20297  0761  00F8               	movwf	i1DATAEE_WriteByte@bData
 20298  0762  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20299  0765                     i1l5055:
 20300                           
 20301                           ;main.c: 347: DATAEE_WriteByte( 0x7000 + (9 * 8), ALAF);
 20302  0765  3048               	movlw	72
 20303  0766  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20304  0767  3070               	movlw	112
 20305  0768  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20306  0769  0020               	movlb	0	; select bank0
 20307  076A  0865               	movf	_ALAF,w
 20308  076B  00FA               	movwf	??_Clock_ISR
 20309  076C  087A               	movf	??_Clock_ISR,w
 20310  076D  00F8               	movwf	i1DATAEE_WriteByte@bData
 20311  076E  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20312  0771                     i1l5057:
 20313                           
 20314                           ;main.c: 348: DATAEE_WriteByte( 0x7000 + (10 * 8), t.h);
 20315  0771  3050               	movlw	80
 20316  0772  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20317  0773  3070               	movlw	112
 20318  0774  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20319  0775  0020               	movlb	0	; select bank0
 20320  0776  0857               	movf	_t,w
 20321  0777  00FA               	movwf	??_Clock_ISR
 20322  0778  087A               	movf	??_Clock_ISR,w
 20323  0779  00F8               	movwf	i1DATAEE_WriteByte@bData
 20324  077A  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20325  077D                     i1l5059:
 20326                           
 20327                           ;main.c: 349: DATAEE_WriteByte( 0x7000 + (11 * 8), t.m);
 20328  077D  3058               	movlw	88
 20329  077E  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20330  077F  3070               	movlw	112
 20331  0780  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20332  0781  0020               	movlb	0	; select bank0
 20333  0782  0858               	movf	_t+1,w
 20334  0783  00FA               	movwf	??_Clock_ISR
 20335  0784  087A               	movf	??_Clock_ISR,w
 20336  0785  00F8               	movwf	i1DATAEE_WriteByte@bData
 20337  0786  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20338  0789                     i1l5061:
 20339                           
 20340                           ;main.c: 350: DATAEE_WriteByte( 0x7000 + (12 * 8), idx_RingBuffer);
 20341  0789  3060               	movlw	96
 20342  078A  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20343  078B  3070               	movlw	112
 20344  078C  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20345  078D  0021               	movlb	1	; select bank1
 20346  078E  086D               	movf	_idx_RingBuffer^(0+128),w
 20347  078F  00FA               	movwf	??_Clock_ISR
 20348  0790  087A               	movf	??_Clock_ISR,w
 20349  0791  00F8               	movwf	i1DATAEE_WriteByte@bData
 20350  0792  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20351  0795                     i1l5063:
 20352                           
 20353                           ;main.c: 351: DATAEE_WriteByte( 0x7000 + (13 * 8), NREG + PMON + TALA + clkAlarm.alarmVa
      +                          l.h + clkAlarm.alarmVal.m + clkAlarm.alarmVal.s + tempAlarm.alarmTemp + lumAlarm.alarmLu
      +                          m + ALAF + t.h + t.m + idx_RingBuffer);
 20354  0795  3068               	movlw	104
 20355  0796  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20356  0797  3070               	movlw	112
 20357  0798  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20358  0799  0020               	movlb	0	; select bank0
 20359  079A  084E               	movf	_clkAlarm+1,w
 20360  079B  074F               	addwf	_clkAlarm+2,w
 20361  079C  0758               	addwf	_t+1,w
 20362  079D  074D               	addwf	_clkAlarm,w
 20363  079E  0754               	addwf	_tempAlarm,w
 20364  079F  0751               	addwf	_lumAlarm,w
 20365  07A0  0757               	addwf	_t,w
 20366  07A1  0021               	movlb	1	; select bank1
 20367  07A2  076F               	addwf	_NREG^(0+128),w
 20368  07A3  076E               	addwf	_PMON^(0+128),w
 20369  07A4  0020               	movlb	0	; select bank0
 20370  07A5  0766               	addwf	_TALA,w
 20371  07A6  0765               	addwf	_ALAF,w
 20372  07A7  0021               	movlb	1	; select bank1
 20373  07A8  076D               	addwf	_idx_RingBuffer^(0+128),w
 20374  07A9  00FA               	movwf	??_Clock_ISR
 20375  07AA  087A               	movf	??_Clock_ISR,w
 20376  07AB  00F8               	movwf	i1DATAEE_WriteByte@bData
 20377  07AC  3196  2615  3186   	fcall	i1_DATAEE_WriteByte
 20378  07AF                     i1l5065:
 20379                           
 20380                           ;main.c: 352: };main.c: 353: if(t.m==60){
 20381  07AF  303C               	movlw	60
 20382  07B0  0020               	movlb	0	; select bank0
 20383  07B1  0658               	xorwf	_t+1,w
 20384  07B2  1D03               	btfss	3,2
 20385  07B3  2FB5               	goto	u431_21
 20386  07B4  2FB6               	goto	u431_20
 20387  07B5                     u431_21:
 20388  07B5  2FBB               	goto	i1l5071
 20389  07B6                     u431_20:
 20390  07B6                     i1l5067:
 20391                           
 20392                           ;main.c: 354: t.h++;
 20393  07B6  3001               	movlw	1
 20394  07B7  00FA               	movwf	??_Clock_ISR
 20395  07B8  087A               	movf	??_Clock_ISR,w
 20396  07B9  07D7               	addwf	_t,f
 20397  07BA                     i1l5069:
 20398                           
 20399                           ;main.c: 355: t.m=0;
 20400  07BA  01D8               	clrf	_t+1
 20401  07BB                     i1l5071:
 20402                           
 20403                           ;main.c: 356: };main.c: 357: if(t.h==24){
 20404  07BB  3018               	movlw	24
 20405  07BC  0657               	xorwf	_t,w
 20406  07BD  1D03               	btfss	3,2
 20407  07BE  2FC0               	goto	u432_21
 20408  07BF  2FC1               	goto	u432_20
 20409  07C0                     u432_21:
 20410  07C0  2FC2               	goto	i1l5075
 20411  07C1                     u432_20:
 20412  07C1                     i1l5073:
 20413                           
 20414                           ;main.c: 358: t.h=0;
 20415  07C1  01D7               	clrf	_t
 20416  07C2                     i1l5075:
 20417                           
 20418                           ;main.c: 359: };main.c: 362: if((ALAF == 'A') && t.s >= clkAlarm.alarmVal.s && t.m >= cl
      +                          kAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 20419  07C2  3041               	movlw	65
 20420  07C3  0665               	xorwf	_ALAF,w
 20421  07C4  1D03               	btfss	3,2
 20422  07C5  2FC7               	goto	u433_21
 20423  07C6  2FC8               	goto	u433_20
 20424  07C7                     u433_21:
 20425  07C7  2FEA               	goto	i1l5089
 20426  07C8                     u433_20:
 20427  07C8                     i1l5077:
 20428  07C8  084F               	movf	_clkAlarm+2,w
 20429  07C9  0259               	subwf	_t+2,w
 20430  07CA  1C03               	skipc
 20431  07CB  2FCD               	goto	u434_21
 20432  07CC  2FCE               	goto	u434_20
 20433  07CD                     u434_21:
 20434  07CD  2FEA               	goto	i1l5089
 20435  07CE                     u434_20:
 20436  07CE                     i1l5079:
 20437  07CE  084E               	movf	_clkAlarm+1,w
 20438  07CF  0258               	subwf	_t+1,w
 20439  07D0  1C03               	skipc
 20440  07D1  2FD3               	goto	u435_21
 20441  07D2  2FD4               	goto	u435_20
 20442  07D3                     u435_21:
 20443  07D3  2FEA               	goto	i1l5089
 20444  07D4                     u435_20:
 20445  07D4                     i1l5081:
 20446  07D4  084D               	movf	_clkAlarm,w
 20447  07D5  0257               	subwf	_t,w
 20448  07D6  1C03               	skipc
 20449  07D7  2FD9               	goto	u436_21
 20450  07D8  2FDA               	goto	u436_20
 20451  07D9                     u436_21:
 20452  07D9  2FEA               	goto	i1l5089
 20453  07DA                     u436_20:
 20454  07DA                     i1l5083:
 20455  07DA  085C               	movf	_editingClockAlarm,w
 20456  07DB  045D               	iorwf	_editingClockAlarm+1,w
 20457  07DC  1D03               	btfss	3,2
 20458  07DD  2FDF               	goto	u437_21
 20459  07DE  2FE0               	goto	u437_20
 20460  07DF                     u437_21:
 20461  07DF  2FEA               	goto	i1l5089
 20462  07E0                     u437_20:
 20463  07E0                     i1l5085:
 20464                           
 20465                           ;main.c: 363: alarmPWMStart.h = 0xff;
 20466  07E0  30FF               	movlw	255
 20467  07E1  00FA               	movwf	??_Clock_ISR
 20468  07E2  087A               	movf	??_Clock_ISR,w
 20469  07E3  00E7               	movwf	_alarmPWMStart
 20470  07E4                     i1l5087:
 20471                           
 20472                           ;main.c: 364: clkAlarm.trigger = 1;
 20473  07E4  01D0               	clrf	_clkAlarm+3
 20474  07E5  0AD0               	incf	_clkAlarm+3,f
 20475                           
 20476                           ;main.c: 365: clkAlarm.alarmVal.h = 25;
 20477  07E6  3019               	movlw	25
 20478  07E7  00FA               	movwf	??_Clock_ISR
 20479  07E8  087A               	movf	??_Clock_ISR,w
 20480  07E9  00CD               	movwf	_clkAlarm
 20481  07EA                     i1l5089:
 20482  07EA  1003               	clrc
 20483  07EB  1F96               	btfss	22,7	;volatile
 20484  07EC  1403               	setc
 20485  07ED  1803               	btfsc	3,0
 20486  07EE  2FF0               	goto	u438_21
 20487  07EF  2FF3               	goto	u438_20
 20488  07F0                     u438_21:
 20489  07F0  0020               	movlb	0	; select bank0
 20490  07F1  1796               	bsf	22,7	;volatile
 20491  07F2  2FF5               	goto	u439_24
 20492  07F3                     u438_20:
 20493  07F3  0020               	movlb	0	; select bank0
 20494  07F4  1396               	bcf	22,7	;volatile
 20495  07F5                     u439_24:
 20496  07F5                     i1l1275:
 20497  07F5  0008               	return
 20498  07F6                     __end_of_Clock_ISR:
 20499                           
 20500                           	psect	text76
 20501  0002                     __ptext76:	
 20502 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 20503 ;; Defined at:
 20504 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 20505 ;; Parameters:    Size  Location     Type
 20506 ;;		None
 20507 ;; Auto vars:     Size  Location     Type
 20508 ;;		None
 20509 ;; Return value:  Size  Location     Type
 20510 ;;                  1    wreg      void 
 20511 ;; Registers used:
 20512 ;;		None
 20513 ;; Tracked objects:
 20514 ;;		On entry : 0/0
 20515 ;;		On exit  : 0/0
 20516 ;;		Unchanged: 0/0
 20517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20522 ;;Total ram usage:        0 bytes
 20523 ;; Hardware stack levels used:    1
 20524 ;; This function calls:
 20525 ;;		Nothing
 20526 ;; This function is called by:
 20527 ;;		_TMR1_Initialize
 20528 ;;		_TMR1_ISR
 20529 ;; This function uses a non-reentrant model
 20530 ;;
 20531                           
 20532                           
 20533                           ;psect for function _TMR1_DefaultInterruptHandler
 20534  0002                     _TMR1_DefaultInterruptHandler:
 20535  0002                     i1l454:	
 20536                           ;incstack = 0
 20537                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 20538                           
 20539  0002  0008               	return
 20540  0003                     __end_of_TMR1_DefaultInterruptHandler:
 20541                           
 20542                           	psect	text77
 20543  1615                     __ptext77:	
 20544 ;; *************** function i1_DATAEE_WriteByte *****************
 20545 ;; Defined at:
 20546 ;;		line 180 in file "mcc_generated_files/memory.c"
 20547 ;; Parameters:    Size  Location     Type
 20548 ;;  bAdd            2    6[COMMON] unsigned int 
 20549 ;;  bData           1    8[COMMON] unsigned char 
 20550 ;; Auto vars:     Size  Location     Type
 20551 ;;  GIEBitValue     1    9[COMMON] unsigned char 
 20552 ;; Return value:  Size  Location     Type
 20553 ;;                  1    wreg      void 
 20554 ;; Registers used:
 20555 ;;		wreg, status,2, status,0
 20556 ;; Tracked objects:
 20557 ;;		On entry : 0/0
 20558 ;;		On exit  : 0/0
 20559 ;;		Unchanged: 0/0
 20560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20561 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20564 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20565 ;;Total ram usage:        4 bytes
 20566 ;; Hardware stack levels used:    1
 20567 ;; This function calls:
 20568 ;;		Nothing
 20569 ;; This function is called by:
 20570 ;;		_Clock_ISR
 20571 ;;		_monitoring_ISR
 20572 ;; This function uses a non-reentrant model
 20573 ;;
 20574                           
 20575                           
 20576                           ;psect for function i1_DATAEE_WriteByte
 20577  1615                     i1_DATAEE_WriteByte:
 20578  1615                     i1l4741:	
 20579                           ;incstack = 0
 20580                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 20581                           
 20582                           
 20583                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 20584  1615  3000               	movlw	0
 20585  1616  1B8B               	btfsc	11,7	;volatile
 20586  1617  3001               	movlw	1
 20587  1618  00F9               	movwf	i1DATAEE_WriteByte@GIEBitValue
 20588                           
 20589                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 20590  1619  0877               	movf	i1DATAEE_WriteByte@bAdd+1,w
 20591  161A  0030               	movlb	16	; select bank16
 20592  161B  009B               	movwf	27	;volatile
 20593  161C                     i1l4743:
 20594                           
 20595                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 20596  161C  0876               	movf	i1DATAEE_WriteByte@bAdd,w
 20597  161D  009A               	movwf	26	;volatile
 20598  161E                     i1l4745:
 20599                           
 20600                           ;memory.c: 186: NVMDATL = bData;
 20601  161E  0878               	movf	i1DATAEE_WriteByte@bData,w
 20602  161F  009C               	movwf	28	;volatile
 20603  1620                     i1l4747:
 20604                           
 20605                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 20606  1620  171E               	bsf	30,6	;volsfr
 20607  1621                     i1l4749:
 20608                           
 20609                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 20610  1621  151E               	bsf	30,2	;volsfr
 20611  1622                     i1l4751:
 20612                           
 20613                           ;memory.c: 189: INTCONbits.GIE = 0;
 20614  1622  138B               	bcf	11,7	;volatile
 20615  1623                     i1l4753:
 20616                           
 20617                           ;memory.c: 190: NVMCON2 = 0x55;
 20618  1623  3055               	movlw	85
 20619  1624  009F               	movwf	31	;volsfr
 20620  1625                     i1l4755:
 20621                           
 20622                           ;memory.c: 191: NVMCON2 = 0xAA;
 20623  1625  30AA               	movlw	170
 20624  1626  009F               	movwf	31	;volsfr
 20625  1627                     i1l4757:
 20626                           
 20627                           ;memory.c: 192: NVMCON1bits.WR = 1;
 20628  1627  149E               	bsf	30,1	;volsfr
 20629  1628                     i1l868:	
 20630                           ;memory.c: 195: {
 20631                           
 20632  1628  189E               	btfsc	30,1	;volsfr
 20633  1629  2E2B               	goto	u407_21
 20634  162A  2E2C               	goto	u407_20
 20635  162B                     u407_21:
 20636  162B  2E28               	goto	i1l868
 20637  162C                     u407_20:
 20638  162C                     i1l870:
 20639                           
 20640                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 20641  162C  111E               	bcf	30,2	;volsfr
 20642  162D                     i1l4759:
 20643                           
 20644                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 20645  162D  0C79               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 20646  162E  1C03               	skipc
 20647  162F  138B               	bcf	11,7	;volatile
 20648  1630  1803               	skipnc
 20649  1631  178B               	bsf	11,7	;volatile
 20650  1632                     i1l871:
 20651  1632  0008               	return
 20652  1633                     __end_ofi1_DATAEE_WriteByte:
 20653                           
 20654                           	psect	text78
 20655  145E                     __ptext78:	
 20656 ;; *************** function _INT_ISR *****************
 20657 ;; Defined at:
 20658 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 20659 ;; Parameters:    Size  Location     Type
 20660 ;;		None
 20661 ;; Auto vars:     Size  Location     Type
 20662 ;;		None
 20663 ;; Return value:  Size  Location     Type
 20664 ;;                  1    wreg      void 
 20665 ;; Registers used:
 20666 ;;		wreg, status,2, status,0, pclath, cstack
 20667 ;; Tracked objects:
 20668 ;;		On entry : 0/0
 20669 ;;		On exit  : 0/0
 20670 ;;		Unchanged: 0/0
 20671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20676 ;;Total ram usage:        0 bytes
 20677 ;; Hardware stack levels used:    1
 20678 ;; Hardware stack levels required when called:    2
 20679 ;; This function calls:
 20680 ;;		_INT_CallBack
 20681 ;; This function is called by:
 20682 ;;		_INTERRUPT_InterruptManager
 20683 ;; This function uses a non-reentrant model
 20684 ;;
 20685                           
 20686                           
 20687                           ;psect for function _INT_ISR
 20688  145E                     _INT_ISR:
 20689  145E                     i1l5349:	
 20690                           ;incstack = 0
 20691                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 20692                           
 20693                           
 20694                           ;ext_int.c: 34: (PIR0bits.INTF = 0);
 20695  145E  002E               	movlb	14	; select bank14
 20696  145F  100C               	bcf	12,0	;volatile
 20697  1460                     i1l5351:
 20698                           
 20699                           ;ext_int.c: 37: INT_CallBack();
 20700  1460  3194  24CB  3194   	fcall	_INT_CallBack
 20701  1463                     i1l887:
 20702  1463  0008               	return
 20703  1464                     __end_of_INT_ISR:
 20704                           
 20705                           	psect	text79
 20706  14CB                     __ptext79:	
 20707 ;; *************** function _INT_CallBack *****************
 20708 ;; Defined at:
 20709 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 20710 ;; Parameters:    Size  Location     Type
 20711 ;;		None
 20712 ;; Auto vars:     Size  Location     Type
 20713 ;;		None
 20714 ;; Return value:  Size  Location     Type
 20715 ;;                  1    wreg      void 
 20716 ;; Registers used:
 20717 ;;		wreg, status,2, status,0, pclath, cstack
 20718 ;; Tracked objects:
 20719 ;;		On entry : 0/0
 20720 ;;		On exit  : 0/0
 20721 ;;		Unchanged: 0/0
 20722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20727 ;;Total ram usage:        0 bytes
 20728 ;; Hardware stack levels used:    1
 20729 ;; Hardware stack levels required when called:    1
 20730 ;; This function calls:
 20731 ;;		Absolute function
 20732 ;;		_INT_DefaultInterruptHandler
 20733 ;;		_S1_ISR
 20734 ;; This function is called by:
 20735 ;;		_INT_ISR
 20736 ;; This function uses a non-reentrant model
 20737 ;;
 20738                           
 20739                           
 20740                           ;psect for function _INT_CallBack
 20741  14CB                     _INT_CallBack:
 20742  14CB                     i1l4977:	
 20743                           ;incstack = 0
 20744                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 20745                           
 20746                           
 20747                           ;ext_int.c: 44: if(INT_InterruptHandler)
 20748  14CB  0021               	movlb	1	; select bank1
 20749  14CC  0856               	movf	_INT_InterruptHandler^(0+128),w
 20750  14CD  0457               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 20751  14CE  1903               	btfsc	3,2
 20752  14CF  2CD1               	goto	u411_21
 20753  14D0  2CD2               	goto	u411_20
 20754  14D1                     u411_21:
 20755  14D1  2CD7               	goto	i1l891
 20756  14D2                     u411_20:
 20757  14D2                     i1l4979:
 20758                           
 20759                           ;ext_int.c: 45: {;ext_int.c: 46: INT_InterruptHandler();
 20760  14D2  0857               	movf	(_INT_InterruptHandler+1)^(0+128),w
 20761  14D3  008A               	movwf	10
 20762  14D4  0856               	movf	_INT_InterruptHandler^(0+128),w
 20763  14D5  000A               	callw
 20764  14D6  3194               	pagesel	$
 20765  14D7                     i1l891:
 20766  14D7  0008               	return
 20767  14D8                     __end_of_INT_CallBack:
 20768                           
 20769                           	psect	text80
 20770  1438                     __ptext80:	
 20771 ;; *************** function _INT_DefaultInterruptHandler *****************
 20772 ;; Defined at:
 20773 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 20774 ;; Parameters:    Size  Location     Type
 20775 ;;		None
 20776 ;; Auto vars:     Size  Location     Type
 20777 ;;		None
 20778 ;; Return value:  Size  Location     Type
 20779 ;;                  1    wreg      void 
 20780 ;; Registers used:
 20781 ;;		None
 20782 ;; Tracked objects:
 20783 ;;		On entry : 0/0
 20784 ;;		On exit  : 0/0
 20785 ;;		Unchanged: 0/0
 20786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20791 ;;Total ram usage:        0 bytes
 20792 ;; Hardware stack levels used:    1
 20793 ;; This function calls:
 20794 ;;		Nothing
 20795 ;; This function is called by:
 20796 ;;		_EXT_INT_Initialize
 20797 ;;		_INT_CallBack
 20798 ;; This function uses a non-reentrant model
 20799 ;;
 20800                           
 20801                           
 20802                           ;psect for function _INT_DefaultInterruptHandler
 20803  1438                     _INT_DefaultInterruptHandler:
 20804  1438                     i1l897:	
 20805                           ;incstack = 0
 20806                           ; Regs used in _INT_DefaultInterruptHandler: []
 20807                           
 20808  1438  0008               	return
 20809  1439                     __end_of_INT_DefaultInterruptHandler:
 20810                           
 20811                           	psect	text81
 20812  0B18                     __ptext81:	
 20813 ;; *************** function _S1_ISR *****************
 20814 ;; Defined at:
 20815 ;;		line 670 in file "main.c"
 20816 ;; Parameters:    Size  Location     Type
 20817 ;;		None
 20818 ;; Auto vars:     Size  Location     Type
 20819 ;;		None
 20820 ;; Return value:  Size  Location     Type
 20821 ;;                  1    wreg      void 
 20822 ;; Registers used:
 20823 ;;		wreg, status,2, status,0
 20824 ;; Tracked objects:
 20825 ;;		On entry : 0/0
 20826 ;;		On exit  : 0/0
 20827 ;;		Unchanged: 0/0
 20828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20833 ;;Total ram usage:        1 bytes
 20834 ;; Hardware stack levels used:    1
 20835 ;; This function calls:
 20836 ;;		Nothing
 20837 ;; This function is called by:
 20838 ;;		_main
 20839 ;;		_INT_CallBack
 20840 ;; This function uses a non-reentrant model
 20841 ;;
 20842                           
 20843                           
 20844                           ;psect for function _S1_ISR
 20845  0B18                     _S1_ISR:
 20846  0B18                     i1l4685:	
 20847                           ;incstack = 0
 20848                           ; Regs used in _S1_ISR: [wreg+status,2+status,0]
 20849                           
 20850                           
 20851                           ;main.c: 671: PIE0bits.INTE = 0;
 20852  0B18  002E               	movlb	14	; select bank14
 20853  0B19  1016               	bcf	22,0	;volatile
 20854  0B1A                     i1l4687:
 20855                           
 20856                           ;main.c: 672: _delay((unsigned long)((200)*(1000000/4000.0)));
 20857  0B1A  3041               	movlw	65
 20858  0B1B  00F0               	movwf	??_S1_ISR
 20859  0B1C  30EE               	movlw	238
 20860  0B1D                     u599_27:
 20861  0B1D  0B89               	decfsz	9,f
 20862  0B1E  2B1D               	goto	u599_27
 20863  0B1F  0BF0               	decfsz	??_S1_ISR,f
 20864  0B20  2B1D               	goto	u599_27
 20865  0B21  3200               	nop2
 20866  0B22                     i1l4689:
 20867                           
 20868                           ;main.c: 674: if(modeFlag == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.tri
      +                          gger)){
 20869  0B22  0020               	movlb	0	; select bank0
 20870  0B23  085A               	movf	_modeFlag,w
 20871  0B24  045B               	iorwf	_modeFlag+1,w
 20872  0B25  1D03               	btfss	3,2
 20873  0B26  2B28               	goto	u395_21
 20874  0B27  2B29               	goto	u395_20
 20875  0B28                     u395_21:
 20876  0B28  2B3C               	goto	i1l4699
 20877  0B29                     u395_20:
 20878  0B29                     i1l4691:
 20879  0B29  0850               	movf	_clkAlarm+3,w
 20880  0B2A  1D03               	btfss	3,2
 20881  0B2B  2B2D               	goto	u396_21
 20882  0B2C  2B2E               	goto	u396_20
 20883  0B2D                     u396_21:
 20884  0B2D  2B38               	goto	i1l4697
 20885  0B2E                     u396_20:
 20886  0B2E                     i1l4693:
 20887  0B2E  0855               	movf	_tempAlarm+1,w
 20888  0B2F  1D03               	btfss	3,2
 20889  0B30  2B32               	goto	u397_21
 20890  0B31  2B33               	goto	u397_20
 20891  0B32                     u397_21:
 20892  0B32  2B38               	goto	i1l4697
 20893  0B33                     u397_20:
 20894  0B33                     i1l4695:
 20895  0B33  0852               	movf	_lumAlarm+1,w
 20896  0B34  1903               	btfsc	3,2
 20897  0B35  2B37               	goto	u398_21
 20898  0B36  2B38               	goto	u398_20
 20899  0B37                     u398_21:
 20900  0B37  2B3C               	goto	i1l4699
 20901  0B38                     u398_20:
 20902  0B38                     i1l4697:
 20903                           
 20904                           ;main.c: 675: clkAlarm.trigger = 0;
 20905  0B38  01D0               	clrf	_clkAlarm+3
 20906                           
 20907                           ;main.c: 676: tempAlarm.trigger = 0;
 20908  0B39  01D5               	clrf	_tempAlarm+1
 20909                           
 20910                           ;main.c: 677: lumAlarm.trigger = 0;
 20911  0B3A  01D2               	clrf	_lumAlarm+1
 20912                           
 20913                           ;main.c: 678: } else{
 20914  0B3B  2B70               	goto	i1l4711
 20915  0B3C                     i1l4699:
 20916                           
 20917                           ;main.c: 679: if(modeFlag == 1){
 20918  0B3C  035A               	decf	_modeFlag,w
 20919  0B3D  045B               	iorwf	_modeFlag+1,w
 20920  0B3E  1D03               	btfss	3,2
 20921  0B3F  2B41               	goto	u399_21
 20922  0B40  2B42               	goto	u399_20
 20923  0B41                     u399_21:
 20924  0B41  2B65               	goto	i1l4707
 20925  0B42                     u399_20:
 20926  0B42                     i1l4701:
 20927                           
 20928                           ;main.c: 680: if(editingClockAlarm >= 1){
 20929  0B42  085D               	movf	_editingClockAlarm+1,w
 20930  0B43  3A80               	xorlw	128
 20931  0B44  00F0               	movwf	??_S1_ISR
 20932  0B45  3080               	movlw	128
 20933  0B46  0270               	subwf	??_S1_ISR,w
 20934  0B47  1D03               	skipz
 20935  0B48  2B4B               	goto	u400_25
 20936  0B49  3001               	movlw	1
 20937  0B4A  025C               	subwf	_editingClockAlarm,w
 20938  0B4B                     u400_25:
 20939  0B4B  1C03               	skipc
 20940  0B4C  2B4E               	goto	u400_21
 20941  0B4D  2B4F               	goto	u400_20
 20942  0B4E                     u400_21:
 20943  0B4E  2B54               	goto	i1l1417
 20944  0B4F                     u400_20:
 20945  0B4F                     i1l4703:
 20946                           
 20947                           ;main.c: 681: editingClockAlarm++;
 20948  0B4F  3001               	movlw	1
 20949  0B50  0020               	movlb	0	; select bank0
 20950  0B51  07DC               	addwf	_editingClockAlarm,f
 20951  0B52  3000               	movlw	0
 20952  0B53  3DDD               	addwfc	_editingClockAlarm+1,f
 20953  0B54                     i1l1417:
 20954                           
 20955                           ;main.c: 682: };main.c: 683: if(editingClockAlarm > 3){
 20956  0B54  0020               	movlb	0	; select bank0
 20957  0B55  085D               	movf	_editingClockAlarm+1,w
 20958  0B56  3A80               	xorlw	128
 20959  0B57  00F0               	movwf	??_S1_ISR
 20960  0B58  3080               	movlw	128
 20961  0B59  0270               	subwf	??_S1_ISR,w
 20962  0B5A  1D03               	skipz
 20963  0B5B  2B5E               	goto	u401_25
 20964  0B5C  3004               	movlw	4
 20965  0B5D  025C               	subwf	_editingClockAlarm,w
 20966  0B5E                     u401_25:
 20967  0B5E  1C03               	skipc
 20968  0B5F  2B61               	goto	u401_21
 20969  0B60  2B62               	goto	u401_20
 20970  0B61                     u401_21:
 20971  0B61  2B65               	goto	i1l4707
 20972  0B62                     u401_20:
 20973  0B62                     i1l4705:
 20974                           
 20975                           ;main.c: 684: editingClockAlarm = 0;
 20976  0B62  0020               	movlb	0	; select bank0
 20977  0B63  01DC               	clrf	_editingClockAlarm
 20978  0B64  01DD               	clrf	_editingClockAlarm+1
 20979  0B65                     i1l4707:
 20980                           
 20981                           ;main.c: 685: };main.c: 686: };main.c: 687: if(editingClockAlarm == 0){
 20982  0B65  0020               	movlb	0	; select bank0
 20983  0B66  085C               	movf	_editingClockAlarm,w
 20984  0B67  045D               	iorwf	_editingClockAlarm+1,w
 20985  0B68  1D03               	btfss	3,2
 20986  0B69  2B6B               	goto	u402_21
 20987  0B6A  2B6C               	goto	u402_20
 20988  0B6B                     u402_21:
 20989  0B6B  2B70               	goto	i1l4711
 20990  0B6C                     u402_20:
 20991  0B6C                     i1l4709:
 20992                           
 20993                           ;main.c: 688: modeFlag++;
 20994  0B6C  3001               	movlw	1
 20995  0B6D  07DA               	addwf	_modeFlag,f
 20996  0B6E  3000               	movlw	0
 20997  0B6F  3DDB               	addwfc	_modeFlag+1,f
 20998  0B70                     i1l4711:
 20999                           
 21000                           ;main.c: 689: };main.c: 690: };main.c: 691: (PIR0bits.INTF = 0);
 21001  0B70  002E               	movlb	14	; select bank14
 21002  0B71  100C               	bcf	12,0	;volatile
 21003  0B72                     i1l4713:
 21004                           
 21005                           ;main.c: 692: PIE0bits.INTE = 1;
 21006  0B72  1416               	bsf	22,0	;volatile
 21007  0B73                     i1l1420:
 21008  0B73  0008               	return
 21009  0B74                     __end_of_S1_ISR:
 21010                           
 21011                           	psect	text82
 21012  1712                     __ptext82:	
 21013 ;; *************** function _EUSART_Transmit_ISR *****************
 21014 ;; Defined at:
 21015 ;;		line 181 in file "mcc_generated_files/eusart.c"
 21016 ;; Parameters:    Size  Location     Type
 21017 ;;		None
 21018 ;; Auto vars:     Size  Location     Type
 21019 ;;		None
 21020 ;; Return value:  Size  Location     Type
 21021 ;;                  1    wreg      void 
 21022 ;; Registers used:
 21023 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21024 ;; Tracked objects:
 21025 ;;		On entry : 0/0
 21026 ;;		On exit  : 0/0
 21027 ;;		Unchanged: 0/0
 21028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21033 ;;Total ram usage:        1 bytes
 21034 ;; Hardware stack levels used:    1
 21035 ;; This function calls:
 21036 ;;		Nothing
 21037 ;; This function is called by:
 21038 ;;		_EUSART_Initialize
 21039 ;;		_INTERRUPT_InterruptManager
 21040 ;; This function uses a non-reentrant model
 21041 ;;
 21042                           
 21043                           
 21044                           ;psect for function _EUSART_Transmit_ISR
 21045  1712                     _EUSART_Transmit_ISR:
 21046  1712                     i1l5637:	
 21047                           ;incstack = 0
 21048                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 21049                           
 21050                           
 21051                           ;eusart.c: 185: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 21052  1712  3008               	movlw	8
 21053  1713  0021               	movlb	1	; select bank1
 21054  1714  0262               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 21055  1715  1803               	skipnc
 21056  1716  2F18               	goto	u541_21
 21057  1717  2F19               	goto	u541_20
 21058  1718                     u541_21:
 21059  1718  2F32               	goto	i1l1561
 21060  1719                     u541_20:
 21061  1719                     i1l5639:
 21062                           
 21063                           ;eusart.c: 186: {;eusart.c: 187: TX1REG = eusartTxBuffer[eusartTxTail++];
 21064  1719  086A               	movf	_eusartTxTail^(0+128),w
 21065  171A  3E28               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 21066  171B  0086               	movwf	6
 21067  171C  3001               	movlw	1	; select bank2/3
 21068  171D  0087               	movwf	7
 21069  171E  0801               	movf	1,w
 21070  171F  0022               	movlb	2	; select bank2
 21071  1720  009A               	movwf	26	;volatile
 21072  1721                     i1l5641:
 21073  1721  3001               	movlw	1
 21074  1722  00F0               	movwf	??_EUSART_Transmit_ISR
 21075  1723  0870               	movf	??_EUSART_Transmit_ISR,w
 21076  1724  0021               	movlb	1	; select bank1
 21077  1725  07EA               	addwf	_eusartTxTail^(0+128),f	;volatile
 21078  1726                     i1l5643:
 21079                           
 21080                           ;eusart.c: 188: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 21081  1726  3008               	movlw	8
 21082  1727  026A               	subwf	_eusartTxTail^(0+128),w	;volatile
 21083  1728  1C03               	skipc
 21084  1729  2F2B               	goto	u542_21
 21085  172A  2F2C               	goto	u542_20
 21086  172B                     u542_21:
 21087  172B  2F2D               	goto	i1l5647
 21088  172C                     u542_20:
 21089  172C                     i1l5645:
 21090                           
 21091                           ;eusart.c: 189: {;eusart.c: 190: eusartTxTail = 0;
 21092  172C  01EA               	clrf	_eusartTxTail^(0+128)	;volatile
 21093  172D                     i1l5647:
 21094                           
 21095                           ;eusart.c: 191: };eusart.c: 192: eusartTxBufferRemaining++;
 21096  172D  3001               	movlw	1
 21097  172E  00F0               	movwf	??_EUSART_Transmit_ISR
 21098  172F  0870               	movf	??_EUSART_Transmit_ISR,w
 21099  1730  07E2               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 21100                           
 21101                           ;eusart.c: 193: }
 21102  1731  2F34               	goto	i1l1564
 21103  1732                     i1l1561:
 21104                           
 21105                           ;eusart.c: 194: else;eusart.c: 195: {;eusart.c: 196: PIE3bits.TXIE = 0;
 21106  1732  002E               	movlb	14	; select bank14
 21107  1733  1219               	bcf	25,4	;volatile
 21108  1734                     i1l1564:
 21109  1734  0008               	return
 21110  1735                     __end_of_EUSART_Transmit_ISR:
 21111                           
 21112                           	psect	text83
 21113  16CF                     __ptext83:	
 21114 ;; *************** function _EUSART_Receive_ISR *****************
 21115 ;; Defined at:
 21116 ;;		line 200 in file "mcc_generated_files/eusart.c"
 21117 ;; Parameters:    Size  Location     Type
 21118 ;;		None
 21119 ;; Auto vars:     Size  Location     Type
 21120 ;;		None
 21121 ;; Return value:  Size  Location     Type
 21122 ;;                  1    wreg      void 
 21123 ;; Registers used:
 21124 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21125 ;; Tracked objects:
 21126 ;;		On entry : 0/0
 21127 ;;		On exit  : 0/0
 21128 ;;		Unchanged: 0/0
 21129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21134 ;;Total ram usage:        1 bytes
 21135 ;; Hardware stack levels used:    1
 21136 ;; This function calls:
 21137 ;;		Nothing
 21138 ;; This function is called by:
 21139 ;;		_EUSART_Initialize
 21140 ;;		_INTERRUPT_InterruptManager
 21141 ;; This function uses a non-reentrant model
 21142 ;;
 21143                           
 21144                           
 21145                           ;psect for function _EUSART_Receive_ISR
 21146  16CF                     _EUSART_Receive_ISR:
 21147  16CF                     i1l5649:	
 21148                           ;incstack = 0
 21149                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 21150                           
 21151                           
 21152                           ;eusart.c: 203: if(1 == RC1STAbits.OERR)
 21153  16CF  0022               	movlb	2	; select bank2
 21154  16D0  1C9D               	btfss	29,1	;volatile
 21155  16D1  2ED3               	goto	u543_21
 21156  16D2  2ED4               	goto	u543_20
 21157  16D3                     u543_21:
 21158  16D3  2ED6               	goto	i1l5653
 21159  16D4                     u543_20:
 21160  16D4                     i1l5651:
 21161                           
 21162                           ;eusart.c: 204: {;eusart.c: 207: RC1STAbits.CREN = 0;
 21163  16D4  121D               	bcf	29,4	;volatile
 21164                           
 21165                           ;eusart.c: 208: RC1STAbits.CREN = 1;
 21166  16D5  161D               	bsf	29,4	;volatile
 21167  16D6                     i1l5653:
 21168                           
 21169                           ;eusart.c: 209: };eusart.c: 212: eusartRxBuffer[eusartRxHead++] = RC1REG;
 21170  16D6  0819               	movf	25,w	;volatile
 21171  16D7  00F0               	movwf	??_EUSART_Receive_ISR
 21172  16D8  0021               	movlb	1	; select bank1
 21173  16D9  0869               	movf	_eusartRxHead^(0+128),w
 21174  16DA  3E20               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 21175  16DB  0086               	movwf	6
 21176  16DC  3001               	movlw	1	; select bank2/3
 21177  16DD  0087               	movwf	7
 21178  16DE  0870               	movf	??_EUSART_Receive_ISR,w
 21179  16DF  0081               	movwf	1
 21180  16E0                     i1l5655:
 21181  16E0  3001               	movlw	1
 21182  16E1  00F0               	movwf	??_EUSART_Receive_ISR
 21183  16E2  0870               	movf	??_EUSART_Receive_ISR,w
 21184  16E3  07E9               	addwf	_eusartRxHead^(0+128),f	;volatile
 21185  16E4                     i1l5657:
 21186                           
 21187                           ;eusart.c: 213: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 21188  16E4  3008               	movlw	8
 21189  16E5  0269               	subwf	_eusartRxHead^(0+128),w	;volatile
 21190  16E6  1C03               	skipc
 21191  16E7  2EE9               	goto	u544_21
 21192  16E8  2EEA               	goto	u544_20
 21193  16E9                     u544_21:
 21194  16E9  2EEB               	goto	i1l5661
 21195  16EA                     u544_20:
 21196  16EA                     i1l5659:
 21197                           
 21198                           ;eusart.c: 214: {;eusart.c: 215: eusartRxHead = 0;
 21199  16EA  01E9               	clrf	_eusartRxHead^(0+128)	;volatile
 21200  16EB                     i1l5661:
 21201                           
 21202                           ;eusart.c: 216: };eusart.c: 217: eusartRxCount++;
 21203  16EB  3001               	movlw	1
 21204  16EC  00F0               	movwf	??_EUSART_Receive_ISR
 21205  16ED  0870               	movf	??_EUSART_Receive_ISR,w
 21206  16EE  07E7               	addwf	_eusartRxCount^(0+128),f	;volatile
 21207  16EF                     i1l1569:
 21208  16EF  0008               	return
 21209  16F0                     __end_of_EUSART_Receive_ISR:
 21210  007E                     btemp	set	126	;btemp
 21211  007E                     int$flags	set	126
 21212  007E                     wtemp0	set	126
 21213                           
 21214                           	psect	config
 21215                           
 21216                           ;Config register CONFIG1 @ 0x8007
 21217                           ;	External Oscillator mode selection bits
 21218                           ;	FEXTOSC = OFF, Oscillator not enabled
 21219                           ;	Power-up default value for COSC bits
 21220                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 21221                           ;	Clock Out Enable bit
 21222                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 21223                           ;	Clock Switch Enable bit
 21224                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 21225                           ;	Fail-Safe Clock Monitor Enable bit
 21226                           ;	FCMEN = ON, FSCM timer enabled
 21227  8007                     	org	32775
 21228  8007  3FEC               	dw	16364
 21229                           
 21230                           ;Config register CONFIG2 @ 0x8008
 21231                           ;	Master Clear Enable bit
 21232                           ;	MCLRE = ON, MCLR pin is Master Clear function
 21233                           ;	Power-up Timer Enable bit
 21234                           ;	PWRTE = OFF, PWRT disabled
 21235                           ;	Low-Power BOR enable bit
 21236                           ;	LPBOREN = OFF, ULPBOR disabled
 21237                           ;	Brown-out reset enable bits
 21238                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 21239                           ;	Brown-out Reset Voltage Selection
 21240                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 21241                           ;	Zero-cross detect disable
 21242                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 21243                           ;	Peripheral Pin Select one-way control
 21244                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 21245                           ;	Stack Overflow/Underflow Reset Enable bit
 21246                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 21247                           ;	Background Debugger
 21248                           ;	DEBUG = OFF, Background Debugger disabled
 21249  8008                     	org	32776
 21250  8008  3FFF               	dw	16383
 21251                           
 21252                           ;Config register CONFIG3 @ 0x8009
 21253                           ;	WDT Period Select bits
 21254                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 21255                           ;	WDT operating mode
 21256                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 21257                           ;	WDT Window Select bits
 21258                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 21259                           ;	WDT input clock selector
 21260                           ;	WDTCCS = SC, Software Control
 21261  8009                     	org	32777
 21262  8009  3F9F               	dw	16287
 21263                           
 21264                           ;Config register CONFIG4 @ 0x800A
 21265                           ;	UserNVM self-write protection bits
 21266                           ;	WRT = OFF, Write protection off
 21267                           ;	Scanner Enable bit
 21268                           ;	SCANE = available, Scanner module is available for use
 21269                           ;	Low Voltage Programming Enable bit
 21270                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 21271  800A                     	org	32778
 21272  800A  3FFF               	dw	16383
 21273                           
 21274                           ;Config register CONFIG5 @ 0x800B
 21275                           ;	UserNVM Program memory code protection bit
 21276                           ;	CP = OFF, Program Memory code protection disabled
 21277                           ;	DataNVM code protection bit
 21278                           ;	CPD = OFF, Data EEPROM code protection disabled
 21279  800B                     	org	32779
 21280  800B  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    19
    Data        7
    BSS         58
    Persistent  51
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      80
    BANK1            80     54      80
    BANK2            80      0      23
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    cmd_rc@12924	PTR PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    cmd_rtl@12931	PTR PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    cmd_ra@12938	PTR PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S2097$0$1	PTR PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 3
		 -> menuLCD_ISR@diff(BANK0[3]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[4]), menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    S2097command_d$cmd_fnct	PTR FTN(int ,PTR PTR unsigned char ,)void  size(2) Largest target is 1
		 -> cmd_ra(), cmd_rtl(), cmd_rc(), 

    commands.cmd_fnct	PTR FTN(int ,PTR PTR unsigned char ,)void  size(2) Largest target is 1
		 -> cmd_ra(), cmd_rtl(), cmd_rc(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_ISR(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_ISR(), INT_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->i1_DATAEE_WriteByte
    _tsttc->i1_WriteI2C
    _menuLCD_ISR->_LCDstr
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_Clock_ISR
    _Clock_ISR->i1_DATAEE_WriteByte
    i1_DATAEE_WriteByte->i1___wmul
    _INT_CallBack->_S1_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_cmd_ra
    _getch->_EUSART_Read
    _cmd_rtl->___wmul
    _cmd_rc->___wmul
    _cmd_ra->___wmul
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0   10396
                                             21 BANK1     33    33      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                 _EUSART_is_rx_ready
            _INT_SetInterruptHandler
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                             ___wmul
                             _cmd_ra *
                             _cmd_rc *
                            _cmd_rtl *
                          _editClock
                            _editLum
                           _editTemp
                              _getch
                   _i2c1_driver_open
                       _toggleAlarms
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0      24
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      24
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cmd_rtl                                             11     8      3     232
                                              6 BANK1     11     8      3
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (1) _cmd_rc                                              12     9      3     256
                                              6 BANK1     12     9      3
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (1) _cmd_ra                                              15    12      3     434
                                              6 BANK1     15    12      3
                             ___wmul (ARG)
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      66
                                              2 BANK1      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      44
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1148
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     892
                    _ADCC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     196
                                              2 BANK1      1     1      0
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     270
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    4017
                                              0 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2    1184
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    8502
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                            _INT_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0    1759
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       3     3      0    1519
                                             10 COMMON     3     3      0
           _ADCC_GetSingleConversion
                              _tsttc
                 i1_DATAEE_WriteByte
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    5478
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         24    24      0    5238
                                             21 BANK0     24    24      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
               i1_PWM6_LoadDutyValue
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM6_LoadDutyValue                                 4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    2659
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                            _isdigit
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) i1___wmul                                             6     2      4     404
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                          8     1      7     595
                                              0 COMMON     8     1      7
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               6     4      2     755
                                              9 COMMON     5     3      2
                                              0 BANK0      1     1      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    1265
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0    1025
                                             10 COMMON     1     1      0
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) i1_DATAEE_WriteByte                                   4     1      3    1025
                                              6 COMMON     4     1      3
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
                             _S1_ISR *
 ---------------------------------------------------------------------------------
 (7) _S1_ISR                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _EUSART_is_rx_ready
   _INT_SetInterruptHandler
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   ___wmul
   _cmd_ra *
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write
   _cmd_rc *
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write
   _cmd_rtl *
     ___wmul (ARG)
     _putch (ARG)
       _EUSART_Write
   _editClock *
   _editLum *
   _editTemp *
   _getch *
     _EUSART_Read
   _i2c1_driver_open *
   _toggleAlarms *

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _S1_ISR *
   _TMR1_ISR *
     Absolute function(Fake) *
     _Clock_ISR *
       i1_DATAEE_WriteByte
         i1___wmul (ARG)
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR *
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _isdigit
         i1___wmul
       i1_PWM6_LoadDutyValue
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       _tsttc
         _ReadI2C
         i1_WriteI2C
       i1_DATAEE_WriteByte
         i1___wmul (ARG)
       i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     36      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      17       9       28.7%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C5      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Nov 28 13:12:58 2020

               ?_EUSART_SetRxInterruptHandler 00A0                                             _t 0057  
            __end_of_TMR5_SetInterruptHandler 147C                                    i1_WriteI2C 09C9  
                                          l30 0B17                                            l33 0ADF  
                                          l42 0B01                                            l35 0AE4  
                                          l47 0B15                           ___wmul@multiplicand 00A2  
                            i1___wmul@product 0074                             ??_TMR5_WriteTimer 0072  
                 __size_of_PWM6_LoadDutyValue 0019                                           l128 09C8  
                                         l421 1670                                           l192 14AC  
                                         l601 15C6                                           l257 14CA  
                                         l186 1711                                           l451 146F  
                                         l515 1475                                           l189 07FE  
                                         l713 16AE                                           l802 144D  
                                         l900 14F2                                           l485 168F  
                                         l805 1459                                           l743 147B  
                                         l760 15DF                                           l757 14E4  
                                         l870 1751                                           l871 1758  
                                         l874 150F                                           l787 1500  
                                         l868 174D                                           l894 1469  
                                         _PR2 028D                               _timer1ReloadVal 00E0  
                     __size_of_PMD_Initialize 0008                               _TMR2_Initialize 14F3  
                                         wreg 0009                                  ?_EUSART_Read 0070  
                                 ?_LCDsend2x4 00A2                               __end_of_LCDchar 14A5  
                                        l1201 0DCB                                          l1202 0DCD  
                                        l1205 0DD4                                          l1072 0A25  
                                        l1208 0C4D                                          l1073 0A27  
                                        l1402 17D4                                          l1084 0A60  
                                        l1085 0A62                                          l1405 17EC  
                                        l1174 0D23                                          l1175 0D25  
                                        l1239 144A                                          l1088 0A66  
                                        l1432 090B                                          l1409 17FF  
                                        l1426 0985                                          l1450 0266  
                             _timer3ReloadVal 006E                                          l1380 083F  
                                        l1533 1447                                          l1189 0D75  
                                        l1461 02F3                                          l1198 0DB5  
                                        l1438 0ABD                                          l1366 0BC5  
                                        l1527 17A7                                          l1359 0B74  
                                        l1391 0812                                          l1543 177C  
                                        l1552 17D3                                          l5001 0D29  
                                        l1377 0BD7                                          l5011 0D60  
                                        l5003 0D38                                          l1555 145D  
                                        l1572 14BE                                          l1548 17AF  
                                        l1388 086B                                          l5021 0D91  
                                        l5013 0D66                                          l5005 0D3C  
                                        l1549 17B9                                          l1558 1495  
                                        l5031 0DD1                                          l5023 0DA0  
                                        l5015 0D75                                          l5007 0D4B  
                                        l1575 14B5                                          l1399 083E  
                                        l5025 0DA6                                          l5017 0D7C  
                                        l5009 0D51                                          l5027 0DB5  
                                        l5019 0D8B                                          l1780 16CE  
                                        l5029 0DBC                                          l5301 176C  
                                        l5311 177A                                          l5303 1772  
                                        l5401 1501                                          l5321 16F9  
                                        l5305 1773                                          l1778 16BA  
                                        l5411 150C                                          l5403 1505  
                                        l5331 1708                                          l5323 16FC  
                                        l5315 16F0                                          l5307 1775  
                                        l5413 150D                                          l5405 1509  
                                        l4453 0AC8                                          l4445 0AC0  
                                        l5501 0C15                                          l5333 170B  
                                        l5325 16FF                                          l5317 16F3  
                                        l5309 1778                                          l5341 14C5  
                                        l5407 150A                                          l4455 0AD2  
                                        l4447 0AC3                                          l5511 0C37  
                                        l5503 0C19                                          l5335 170E  
                                        l5327 1702                                          l5319 16F6  
                                        l5343 14C7                                          l5409 150B  
                                        l4457 0ADD                                          l4465 0AEB  
                                        l5513 0C3D                                          l5505 0C25  
                             __end_of_LCDinit 0C4E                                          l4801 09BC  
                                        l5329 1705                                          l4721 17AA  
                                        l5601 0973                                          l5521 0B7F  
                                        l5337 14BF                                          l4467 0AF6  
                                        l4459 0AE9                                          l5515 0C43  
                                        l5507 0C29                                          l4715 14AD  
                                        l4803 09BF                                          l4811 14A5  
                                        l4475 146A                                          l4731 17CE  
                                        l4723 17B4                                          l5291 1491  
                                        l5611 08F9                                          l5603 0978  
                                        l5531 0B99                                          l5523 0B84  
                                        l5339 14C4                                          l5381 1735  
                                        l4469 0B06                                          l5509 0C31  
                                        l5517 1448                                          l4717 14B6  
                                        l4813 07F6                                          l4805 09C1  
                                        l4821 14D8                                          l4901 166D  
                                        l4477 1470                                          l4493 1476  
                                        l4733 17CF                                          l4725 17BA  
                                        l5613 08FE                                          l5605 08D4  
                                        l5621 0A9F                                          l5541 0BB6  
                                        l5533 0BA0                                          l5525 0B8A  
                                        l5293 1759                                          l5391 1747  
                                        l5383 173D                                          l4911 1794  
                                        l4903 177D                                          l4815 07F9  
                                        l4807 09C3                                          l4823 14DF  
                                        l4831 1671                                          l4727 17C4  
                                        l4735 17D1                                          l4719 17AA  
                                        l5607 08ED                                          l5623 0AA2  
                                        l5615 0A67                                          l5551 0BD5  
                                        l5543 0BBC                                          l5535 0BA6  
                                        l5527 0B90                                          l5519 0B79  
                                        l5295 1759                                          l5393 1748  
                                        l5385 1741                                          l5633 1445  
                                        l5377 15C7                                          l4825 15B0  
                                        l4921 179D                                          l4913 1796  
                                        l4905 177F                                          l4497 1464  
                                        l4817 07FA                                          l4809 09C5  
                                        l4841 1681                                          l4833 1674  
                                        l4729 17C8                                          l5609 08F0  
                                        l5625 0AAB                                          l5617 0A8E  
                                        l5545 0BBE                                          l5537 0BA8  
                                        l5529 0B92                                          l5561 0858  
                                        l5553 0844                                          l5297 175F  
                                        l5801 0253                                          l5395 174A  
                                        l5387 1745                                          l5491 0BF1  
                                        l5483 0BD8                                          l4827 15C2  
                                        l4931 17A5                                          l4923 179E  
                                        l4915 1798                                          l4907 1787  
                                        l4819 07FD                                          l4771 0992  
                                        l4763 0986                                          l4851 14F6  
                                        l4843 1683                                          l4835 1676  
                                        l5379 1456                                          l5627 0AB0  
                                        l5619 0A9B                                          l5539 0BAF  
                                        l5547 0BC5                                          l5571 081C  
                                        l5563 0859                                          l5555 0849  
                                        l5299 1768                                          l5811 025C  
                                        l5803 0254                                          l5731 0094  
                                        l5397 174C                                          l5389 1746  
                                        l5493 0BFD                                          l5485 0BE1  
                                        l4829 15C4                                          l4925 17A2  
                                        l4917 179A                                          l4909 1791  
                                        l4781 099D                                          l4773 0994  
                                        l4765 098C                                          l4853 14F7  
                                        l4845 1684                                          l4837 1678  
                                        l4861 1690                                          l5549 0BCE  
                                        l5573 081F                                          l5581 0835  
                                        l5557 084C                                          l5565 0862  
                                        l5629 145A                                          l5821 0265  
                                        l5813 025D                                          l5805 0257  
                                        l5741 00C8                                          l5733 009E  
                                        l5399 1752                                          l5495 0C01  
                                        l5487 0BE5                                          l4927 17A3  
                                        l4919 179B                                          l4791 09B1  
                                        l4783 099F                                          l4775 0996  
                                        l4767 098E                                          l4855 14FA  
                                        l4847 168C                                          l4839 167A  
                                        l4871 16A0                                          l4863 1693  
                                        l5671 16C4                                          l5663 16AF  
                                        l5583 083D                                          l5575 0825  
                                        l5567 086A                                          l5559 0852  
                                        l5591 17F5                                          l5831 0280  
                                        l5823 0267                                          l5815 0260  
                                        l5807 0259                                          l5743 00C9  
                                        l5735 00A1                                          l5497 0C09  
                                        l5489 0BED                                          l4929 17A4  
                                        l4881 14E8                                          l4793 09B3  
                                        l4785 09AB                                          l4777 0999  
                                        l4769 0990                                          l4857 14FB  
                                        l4849 14F3                                          l4873 16A2  
                                        l4865 1695                                          l5673 16CA  
                                        l5665 16B2                                          l5577 082B  
                                        l5569 0817                                          l5593 17FD  
                                        l5585 17D9                                          l5841 0297  
                                        l5833 0282                                          l5825 026E  
                                        l5817 0261                                          l5809 025A  
                                        l5761 0112                                          l5753 00DB  
                                        l5745 00D5                                          l5737 00C4  
                                        l5499 0C0D                                          l4883 14F0  
                                        l4795 09B5                                          l4787 09AD  
                                        l4779 099B                                          l4891 1659  
                                        l4859 14FD                                          l4875 16A3  
                                        l4867 1697                                          l5667 16B6  
                                        l5595 0948                                          l5579 082C  
                                        l5587 17DF                                          l5835 028A  
                                        l5827 0274                                          l5843 0299  
                                        l5819 0262                                          l5771 01C3  
                                        l5755 00F3                                          l5747 00D7  
                                        l5763 0114                                          l5739 00C6  
                                        l4981 0A16                                          l4797 09B8  
                                        l4789 09AF                                          l4893 165B  
                                        l4885 1652                                          l4877 16AB  
                                        l4869 1699                                          l5669 16BF  
                                        l5597 0967                                          l5589 17E6  
                                        l5853 02AE                                          l5861 02F8  
                                        l5845 02A1                                          l5837 028E  
                                        l5829 027A                                          l5781 0201  
                                        l5773 01CE                                          l5765 011A  
                                        l5757 00F7                                          l4991 0A4D  
                                        l4983 0A16                                          l4879 14E5  
                                        l4799 09BA                                          l4895 1662  
                                        l4887 1655                                          l4975 144B  
                                        l5599 096A                                          l5871 0306  
                                        l5855 02C8                                          l5847 02AC  
                                        l5839 0295                                          l5791 0242  
                                        l5783 020E                                          l5775 01DA  
                                        l5767 011F                                          l5759 0104  
                                        l4993 0A51                                          l4985 0A2B  
                                        l4897 1664                                          l4889 1657  
                                        l5881 0320                                          l5873 030A  
                                        l5857 02E6                                          l5793 024E  
                                        l5785 021B                                          l5777 01E7  
                                        l5769 01B7                                          l4987 0A3A  
                                        l4995 0D03                                          l4899 1665  
                                        l5883 0327                                          l5875 0311  
                                        l5859 02F6                                          l5795 0250  
                                        l5787 0228                                          l5779 01F4  
                                        l4989 0A3E                                          l4997 0D08  
                                        l5877 0315                                          l5869 0300  
                                        l5797 0251                                          l5789 0235  
                                        l4999 0D14                                          l5879 031C  
                                        l5799 0252                                          _ALAF 0065  
                             __end_of_LCDsend 0A67                                          STR_1 1800  
                                        STR_2 1800                                          STR_3 1822  
                                        STR_4 1822                                          STR_5 1829  
                                        STR_6 1829                                          STR_7 182E  
                                        _LATA 0016                                          _LATB 0017  
                             __end_of_INT_ISR 1464                                          _LATC 0018  
                                        _LATD 0019                                          _LATE 001A  
                                        u4030 17AF                                          u4031 17AE  
                                        u3400 0AD2                                          u4120 0A25  
                                        u4200 0D29                                          u4040 17B4  
                                        u3401 0AD1                                          u4121 0A24  
                                        u4201 0D28                                          u4041 17B3  
                                        u3410 0ADD                                          u4130 0A2B  
                                        u4210 0D38                                          u4050 17CE  
                                        _T2PR 028D                                          u3411 0ADC  
                                        u4131 0A2A                                          u4211 0D37  
                                        u4051 17CD                                          u3420 0AE4  
                                        u4140 0A3A                                          u4220 0D4B  
                                        u3421 0AE3                                          u4141 0A39  
                                        u4221 0D4A                                          u3430 0AE9  
                                        u4150 0A4D                                          u4230 0D60  
                                        u3431 0AE8                                          u4151 0A4C  
                                        u4231 0D5F                                          u3440 0AF6  
                                        u4160 0A60                                          u4240 0D75  
                                        u5200 0BA0                                          u3441 0AF5  
                                        u4161 0A5F                                          u4241 0D74  
                                        u5201 0B9F                                          u3450 0B01  
                                        u4170 0A66                                          u4250 0D8B  
                                        u5210 0BA6                                          u3451 0B00  
                                        u4171 0A65                                          u4251 0D8A  
                                        u5211 0BA5                                          u3460 0B06  
                                        u4260 0DA0                                          u5220 0BB6  
                                        u5300 081C                                          u3461 0B05  
                                        u4261 0D9F                                          u5221 0BB5  
                                        u5301 081B                                          u3470 0B15  
                                        u3390 0AC7                                          u4270 0DB5  
                                        u4190 0D23                                          u5230 0BBC  
                                        u5310 082B                                          u3471 0B14  
                                        u3391 0AC6                                          u4271 0DB4  
                                        u4191 0D22                                          u5231 0BBB  
                                        u5311 082A                                          u4280 0DCB  
                                        u5400 0ABD                                          u5240 0BD5  
                                        u5160 0B79                                          u5320 083D  
                                        u4281 0DCA                                          u4185 0D0B  
                                        u5401 0ABC                                          u5241 0BD4  
                                        u5161 0B78                                          u5321 083C  
                                        u4290 0DD1                                          u5170 0B7F  
                                        u5250 0844                                          u5330 17D9  
                                        u4291 0DD0                                          u5171 0B7E  
                                        u5251 0843                                          u5331 17D8  
                                        u5180 0B8A                                          u5260 0849  
                                        u5340 17DF                                          _PMD0 0796  
                                        u5405 0AB9                                          u5181 0B89  
                                        u5261 0848                                          u5341 17DE  
                                        _PMD1 0797                                          i1l30 0A13  
                                        i1l22 15F3                                          u5190 0B90  
                                        u5270 0858                                          u5350 17FD  
                                        _PMD2 0798                                          i1l23 15F4  
                                        u5191 0B8F                                          u5271 0857  
                                        u5351 17FC                                          _PMD3 0799  
                                        u5360 0985                                          u5280 086A  
                                        _PMD4 079A                                          i1l33 09E5  
                                        u5361 0984                                          u5281 0869  
                                        _PMD5 079B                                          i1l42 0A03  
                                        i1l26 15F9                                          u5450 16B6  
                                        u5370 090B                                          u5290 0817  
                                        u4810 175F                                          i1l35 09EA  
                                        u5451 16B5                                          u5371 090A  
                                        u5291 0816                                          u4811 175E  
                                        u5380 0A96                                          u4820 1772  
                                        u5700 0274                                          u5365 0981  
                                        u5381 0A94                                          u4821 1771  
                                        u5701 0273                                          u5390 0A97  
                                        u4830 14C4                                          u5710 027A  
                                        i1l47 0A12                                          u5375 0907  
                                        u4831 14C3                                          u5711 0279  
                                        u5480 16CA                                          u5800 0311  
                                        u5720 0280                                          u5481 16C9  
                                        u5465 16BB                                          u5801 0310  
                                        u5721 027F                                          u5810 031C  
                                        u5730 0295                                          u5650 00D5  
                                        u5475 16C0                                          u5811 031B  
                                        u5731 0294                                          u5651 00D4  
                                        u5820 0327                                          u5740 02A1  
                                        u5660 0104                                          u5821 0326  
                                        u5741 02A0                                          u5661 0103  
                                        _TALA 0066                                          u5750 02AC  
                                        u5670 0112                                          u5751 02AB  
                                        u5671 0111                                          u4880 1751  
                                        u5760 02C8                                          u5680 011A  
                                        u4881 1750                                          u5761 02C7  
                                        u5681 0119                                          u5665 0100  
                                        u5770 02F3                                          u5690 011F  
                                        u5907 0BFE                                          u4875 15D8  
                                        u5771 02F2                                          u5691 011E  
                                        u5780 02FF                                          u5917 0C06  
                                        u5837 17F0                                          u5781 02FE  
                                        u5790 0306                                          u5927 0C12  
                                        u5847 085D                                          u5791 0305  
                                        u5937 0C1A                                          u5857 0830  
                                        _NREG 00EF                                          u5947 0C26  
                                        u5867 0BC9                                          u5957 0C2E  
                                        u5877 0BDC                                          u5967 0C4A  
                                        u5887 0BEA                                          u5977 0DD2  
                                        u5897 0BF2                                          _PMON 00EE  
                                        _TMR2 028C                                          _WPUA 0F39  
                                        _WPUB 0F44                                          _WPUC 0F4F  
                                        _WPUD 0F5A                                          _WPUE 0F65  
                                 main@notInit 00CD                                  ?_menuLCD_ISR 0070  
                                        _main 0094                                          _temp 0063  
                                        fsr0h 0005                                          fsr1h 0007  
                                        indf0 0000                                          fsr0l 0004  
                                        indf1 0001                                          fsr1l 0006  
                                        btemp 007E           __end_of_INT_DefaultInterruptHandler 1439  
                 _INT_DefaultInterruptHandler 1438                                          start 006A  
                             _timer5ReloadVal 00DA                               _TMR3_Initialize 1671  
             __end_of_INT_SetInterruptHandler 146A                    ??_TMR1_SetInterruptHandler 00A2  
                             __end_of_ReadI2C 15FA                     __size_of_DATAEE_WriteByte 0024  
                               ?_EUSART_Write 0070                __size_of_OSCILLATOR_Initialize 0009  
               __end_of_OSCILLATOR_Initialize 07FF                                         _ADACQ 009D  
                                       _ADCAP 009B                                         _ADACT 0099  
                    __end_of_i2c1_driver_open 14CB                                         ?_main 0070  
                                       _ADCLK 0098                                         _ADCNT 010C  
                                       _ADPCH 009E                                         _ADREF 009A  
                                       _ADPRE 009C                                         _ADRPT 010D  
                                       _T1CLK 0211                                         _T1CON 020E  
                                       _T3CLK 0217                                         _T2CON 028E  
                                       _T3CON 0214                                         _T5CLK 021D  
                                       _T2HLT 028F                                         _T5CON 021A  
                             __end_of___lwdiv 0948                                         _T2TMR 028C  
                                       _T2RST 0291                                         i1l512 1598  
                             __end_of___lwmod 08D4                                         i1l435 1520  
                                       i1l372 0013                                         i1l613 0808  
                                       i1l381 004D                                         i1l454 0002  
                                       i1l518 0003                                         i1l390 0068  
                                       i1l383 0059                                         i1l375 0026  
                                       i1l448 1581                                         i1l616 0811  
                                       i1l384 0068                                         i1l385 0062  
                                       i1l377 0035                                         i1l802 1444  
                                       i1l379 0041                                         i1l740 15AF  
                                       i1l805 1455                                         i1l727 1542  
                                       i1l760 156A                                         i1l746 07FF  
                                       i1l499 1531                                         i1l870 162C  
                                       i1l871 1632                                         i1l891 14D7  
                                       i1l868 1628                                         i1l796 143E  
                                       i1l887 1463                                         i1l799 1451  
                                       i1l897 1438                                         i1l993 0DD5  
                                       i1l996 0DE1                                         i1l997 0DE2  
                                       _OSCEN 0891                                         _TMR1H 020D  
                                       _TMR1L 020C                                         _TMR3H 0213  
                                       _TMR3L 0212                                         _TMR5H 0219  
                                       _TMR5L 0218                                         _TRISA 0011  
                                       _TRISB 0012                                         _TRISC 0013  
                                       _TRISD 0014                                         _TRISE 0015  
                                       _WPUC3 7A7B                                         _WPUC4 7A7C  
                                       _RXPPS 0ECB                               __end_of_editLum 083F  
                             _PWM6_Initialize 14D8             __size_of_TMR3_SetInterruptHandler 0006  
                             __end_of_cmd_rtl 090C                     ?_TMR3_SetInterruptHandler 00A0  
                    __end_ofi1_TMR2_StopTimer 1456                              __end_of_TMR1_ISR 1582  
                            __end_of_TMR3_ISR 1599                              __end_of_TMR5_ISR 15B0  
                             _DATAEE_ReadByte 1501                ??_TMR3_DefaultInterruptHandler 0070  
                                       _getch 145A                               __end_of_dpowers 1819  
                          __size_of_TMR2_Stop 0003                                   ?_TMR2_Start 0070  
                             __end_of_isdigit 1555                                         _putch 148F  
                                       main@c 00D1                                         main@i 00CF  
                                       main@n 00D2                                         _tsttc 0DD5  
                     __end_of_TMR1_Initialize 1671                                         pclath 000A  
                            __end_ofi1___wmul 1652                                menuLCD_ISR@str 003B  
                                       status 0003                           i1___wmul@multiplier 0070  
                                       wtemp0 007E                               __end_of_sprintf 06F5  
                      ??_PWM_Output_D4_Enable 0070                               _TMR2_StartTimer 144E  
                             _TMR1_WriteTimer 1510                               _TMR5_Initialize 1690  
                             __initialization 006C                                  ?i1_TMR2_Stop 0070  
                                __end_of_main 032D                                   ?i1_WriteI2C 0070  
                         __size_of_LCDsend2x4 00D4                                ??_EUSART_Write 00A0  
                     __end_of_TMR2_Initialize 1501                   ?_INTERRUPT_InterruptManager 0070  
              ??_EUSART_SetRxInterruptHandler 00A2                                        ??_main 00B5  
                    _TMR5_SetInterruptHandler 1476                            __size_of_Clock_ISR 0101  
                       _TMR3_InterruptHandler 00DC              differenceBetweenTimePeriod@start 0070  
                                   ??_LCDchar 0078                                     ??_LCDinit 00A8  
                                   ??_LCDsend 00A2                                     ??_INT_ISR 0071  
                  __end_ofi1_DATAEE_WriteByte 1633                                        _ADACCH 0091  
                                      _ADACCL 0090                                        ?_getch 0070  
                                      _ADCON0 0093                                        _ADCON1 0094  
                                      _ADCON2 0095                                        _ADCON3 0096  
                                      _ADERRH 0117                                        _ADERRL 0116  
                                      _ADLTHH 010F                                        _ADLTHL 010E  
                                      _ADRESH 008D                                        _ADRESL 008C  
                                      _ADSTAT 0097                                        _ADUTHH 0111  
                                      _ADUTHL 0110                              __end_of_WriteI2C 0B18  
                                      _ANSELA 0F38                                        ?_putch 0070  
                                      _ANSELB 0F43                                        _ANSELC 0F4E  
                                      _ANSELD 0F59                                        _ANSELE 0F64  
                  __end_of_EUSART_is_rx_ready 1448                                        _T1GATE 0210  
                                      _T1GCON 020F                                        ?_tsttc 0070  
                                      _T3GATE 0216                                        _T3GCON 0215  
                                      _T5GATE 021C                                        _T5GCON 021B  
                                      _RC1REG 0119                                        _RC1STA 011D  
                                      _RA6PPS 0F16                                        _RC3PPS 0F23  
                                      i1l1020 0E43                                        i1l1021 0E45  
                                      i1l1008 0E11                                        i1l1201 0CF8  
                                      i1l1033 0E68                                        i1l1009 0E12  
                                      i1l1202 0CF9                                        i1l1034 0E69  
                                      i1l1026 0E54                       TMR1_WriteTimer@timerVal 0070  
                                      i1l1211 148E                                        i1l1027 0E55  
                                      _RC4PPS 0F24                                        i1l1220 1614  
                                      i1l1205 0D00                                        i1l1045 0E98  
                                      i1l1029 0E59                                        i1l1214 14A4  
                                      i1l1046 0E99                                        i1l1063 0EDB  
                                      i1l1064 0EDC                                        i1l1233 089F  
                                      i1l1057 0ECA                                        i1l2050 0947  
                                      i1l1314 051F                                        i1l1330 0557  
                                      i1l1306 0478                                        i1l1058 0ECC  
                                      i1l1067 0EE1                                        i1l1420 0B73  
                                      i1l1236 143B                                        i1l2060 08D3  
                                      i1l1174 0C6C                                        i1l1175 0C6D  
                                      i1l2231 1554                                        i1l1239 1441  
                                      i1l1417 0B54                                        _ODCONA 0F3A  
                                      _ODCONB 0F45                                        i1l1275 07F5  
                                      _ODCONC 0F50                                        _RC6PPS 0F26  
                                      i1l1292 0469                                        i1l1356 0FFF  
                                      _ODCOND 0F5B                                        i1l1189 0CB0  
                                      _ODCONE 0F66                                        i1l1198 0CE6  
                                      i1l1295 0402                                        i1l1561 1732  
                                      i1l1298 0455                                        i1l1564 1734  
                                      i1l4301 09E4                                        i1l5101 037A  
                                      i1l4311 09FA                                        i1l4303 09EF  
                                      i1l5111 039F                                        i1l5103 0381  
                                      i1l1569 16EF                                        i1l5041 0711  
                                      i1l5033 06F5                                        i1l4313 0A07  
                                      i1l4321 0C54                                        i1l4401 093D  
                                      i1l5201 04F7                                        i1l5121 03C4  
                                      i1l5113 03A7                                        i1l5105 038A  
                                      i1l5051 074D                                        i1l5043 071D  
                                      i1l5035 0700                                        i1l4331 0C8C  
                                      i1l4323 0C60                                        i1l4403 0943  
                                      i1l4411 08A9                                        i1l1739 0575  
                                      i1l5211 0513                                        i1l5203 04FC  
                                      i1l5131 03E7                                        i1l5123 03CA  
                                      i1l5115 03AD                                        i1l5107 0390  
                                      i1l1780 1651                       __end_of_TMR3_Initialize 1690  
                                      i1l5061 0789                                        i1l5053 0759  
                                      i1l5045 0729                                        i1l5037 0704  
                                      i1l4309 09F1                                        i1l4341 0CB6  
                                      i1l4333 0C92                                        i1l4325 0C71  
                                      i1l4421 08C4                                        i1l4413 08AE  
                                      i1l1757 0628                                        i1l5221 0531  
                                      i1l5213 051A                                        i1l5205 0502  
                                      i1l5141 0421                                        i1l5133 03EC  
                                      i1l5125 03D3                                        i1l5117 03B6  
                                      i1l5109 0399                                        i1l4501 0DE6  
                                      i1l1774 06F4                                        i1l5071 07BB  
                                      i1l5063 0795                                        i1l5055 0765  
                                      i1l5047 0735                                        i1l5039 0705  
                                      i1l4351 0CE6                                        i1l4343 0CC2  
                                      i1l4335 0C9E                                        i1l4327 0C7C  
                                      i1l4319 0C4F                                        i1l4423 08C9  
                                      i1l4415 08B2                                        i1l4407 08A0  
                                      i1l4431 1633                                        i1l5231 054C  
                                      i1l5223 0536                                        i1l5207 0507  
                                      i1l5215 0520                                        i1l5151 044A  
                                      i1l5143 0428                                        i1l5135 03F1  
                                      i1l5127 03D9                                        i1l5119 03BC  
                                      i1l4511 0E16                                        i1l4503 0DF1  
                                      i1l5081 07D4                                        i1l5073 07C1  
                                      i1l5057 0771                                        i1l5049 0741  
                                      i1l5065 07AF                                        i1l4353 0CEC  
                                      i1l4345 0CC8                                        i1l4337 0CA4  
                                      i1l4329 0C80                                        i1l4417 08B6  
                                      i1l4409 08A6                                        i1l4425 08CF  
                                      i1l4441 164D                                        i1l4433 1635  
                                      i1l4601 05B6                                        i1l5233 0553  
                                      i1l5225 053D                                        i1l5217 0527  
                                      i1l5209 050E                                        i1l5161 0465  
                                      i1l5153 044D                                        i1l5145 0430  
                                      i1l5137 03F6                                        i1l5129 03E1  
                                      i1l4361 15F8                                        i1l4521 0E49  
                                      i1l4513 0E21                                        i1l4505 0DF5  
                                      i1l5241 0F15                                        i1l1778 163D  
                                      i1l5083 07DA                                        i1l5075 07C2  
                                      i1l5067 07B6                                        i1l5059 077D  
                                      i1l4291 09CD                                        i1l4355 0CFD  
                                      i1l4347 0CD4                                        i1l4339 0CB0  
                                      i1l4419 08C0                                        i1l4371 1545  
                                      i1l4435 1639                                        i1l4611 05E5  
                                      i1l5227 0542                                        i1l5219 052C  
                                      i1l5155 045A                                        i1l5147 0436  
                                      i1l5139 040E                                        i1l5171 046F  
                                      i1l5091 032D                                        i1l4531 0E88  
                                      i1l4523 0E5D                                        i1l4515 0E25  
                                      i1l4507 0E01                                        i1l5251 0FBA  
                                      i1l5243 0FA6                                        i1l5235 0EE2  
                                      i1l4701 0B42                                        i1l5085 07E0  
                                      i1l5077 07C8                                        i1l5069 07BA  
                                      i1l4349 0CDA                                        i1l4365 143C  
                                      i1l4381 090C                                        i1l4373 154B  
                                      i1l4437 1642                                        i1l4613 05E9  
                                      i1l4605 05C2                                        i1l4429 1442  
                                      i1l5229 0547                                        i1l5181 04A8  
                                      i1l5173 047C                                        i1l5157 045C  
                                      i1l5149 0444                                        i1l5093 0334  
                                      i1l4357 15E0                                        i1l4541 0EB8  
                                      i1l4533 0E8C                                        i1l4525 0E6D  
                                      i1l4517 0E31                                        i1l4509 0E05  
                                      i1l5261 0FD7                                        i1l5245 0FAB  
                                      i1l5253 0FC1                                        i1l5237 0EFB  
                                      i1l4703 0B4F                                        i1l4711 0B70  
                                      i1l5351 1460                                        i1l5087 07E4  
                                      i1l5079 07CE                                        i1l4551 1489  
                                      i1l4367 149E                                        i1l4391 0920  
                                      i1l4383 090E                                        i1l4375 1551  
                                      i1l4439 1647                                        i1l4631 061E  
                                      i1l4623 05F4                                        i1l4615 05ED  
                                      i1l4607 05DA                                        i1l5191 04D8  
                                      i1l5183 04AC                                        i1l5175 0482  
                                      i1l5159 0462                                        i1l5095 0352  
                                      i1l4359 15EA                                        i1l4543 0EBE  
                                      i1l4535 0E9D                                        i1l4527 0E78  
                                      i1l4519 0E37                                        i1l5271 0FE2  
                                      i1l5263 0FDB                                        i1l5255 0FC7  
                                      i1l5247 0FB1                                        i1l5239 0F08  
                                      u300_20 09EF                                        i1l4713 0B72  
                                      i1l4705 0B62                                        i1l5089 07EA  
                                      u300_21 09EE                                        i1l4297 09D2  
                                      i1l4289 09CA                                        i1l4553 15FA  
                                      i1l4561 086D                                        i1l4393 0924  
                                      i1l4385 0914                                        i1l4377 1553  
                                      i1l4369 1544                                        i1l4641 0643  
                                      i1l4633 0624                                        i1l4617 05F2  
                                      i1l4609 05E1                                        i1l5193 04DF  
                                      i1l5185 04B2                                        i1l5177 0492  
                                      i1l5097 036F                                        i1l5361 1582  
                                      i1l4481 0804                                        i1l4545 0ED0  
                                      i1l4537 0EA8                                        i1l4529 0E7C  
                                      i1l5281 0FF7                                        i1l5273 0FE3  
                                      i1l5265 0FDD                                        i1l5257 0FCD  
                                      i1l5249 0FB2                                        i1l5353 1599  
                                      i1l4707 0B65                                        i1l5371 156D  
                                      i1l4299 09DB                                        i1l4555 15FB  
                                      i1l4571 088F                                        i1l4563 0873  
                                      i1l4395 0933                                        i1l4387 0917  
                                      i1l4651 0661                                        i1l4643 0649  
                                      i1l4635 0633                                        i1l4627 060E  
                                      i1l5195 04E3                                        i1l5187 04C2  
                                      i1l5179 04A1                                        i1l5099 0373  
                                      i1l5363 1584                                        i1l4483 0805  
                                      i1l4547 0EE0                                        i1l4539 0EAC  
                                      i1l5283 0FF9                                        i1l5275 0FE9  
                                      i1l5267 0FDF                                        i1l5259 0FD2  
                                      i1l5355 159B                                        i1l4709 0B6C  
                                      i1l5349 145E                                        i1l4741 1615  
                                      i1l5373 1575                                        i1l4557 15FF  
                                      i1l4573 1439                                        i1l4565 0879  
                                      i1l4397 0937                                        i1l4389 091C  
                                      i1l4661 0681                                        i1l4653 0665  
                                      i1l4645 0650                                        i1l4637 063C  
                                      i1l4629 0618                                        i1l4581 056C  
                                      i1l5197 04EA                                        i1l5189 04D1  
                                      i1l5365 158C                                        i1l4485 0806  
                                      i1l5285 0FFB                                        i1l5277 0FEE  
                                      i1l5269 0FE1                                        i1l5357 15A3  
                                      i1l5701 0045                                        i1l4751 1622  
                                      i1l4743 161C                                        i1l5375 157C  
                                      i1l4495 144E                                        i1l4567 0883  
                                      i1l4559 086C                                        i1l4399 0938  
                                      i1l4671 06A1                                        i1l4663 068B  
                                      i1l4647 0654                                        i1l4655 0670  
                                      i1l4639 063F                                        i1l4591 0583  
                                      i1l4583 0571                                        i1l4575 055A  
                                      i1l5199 04F1                                        i1l5367 1593  
                                      i1l4487 0807                                        i1l4479 0801  
                                      i1l5279 0FF3                                        i1l5287 0FFD  
                                      i1l5359 15AA                                        i1l5703 0049  
                                      u301_20 09FA                                        i1l5641 1721  
                                      i1l4753 1623                                        i1l4745 161E  
                                      i1l5369 156B                                        u301_21 09F9  
                                      i1l4569 0889                                        i1l4673 06C8  
                                      i1l4665 0691                                        i1l4657 0676  
                                      i1l4649 065A                                        i1l4681 06F0  
                                      i1l4593 058F                                        i1l4585 0576  
                                      i1l4577 055F                                        i1l4737 1555  
                                      i1l4761 143F                                        i1l4489 080D  
                                      i1l5289 0FFE                                        i1l5713 0066  
                                      i1l5705 0051                                        i1l5651 16D4  
                                      i1l5643 1726                                        i1l4691 0B29  
                                      i1l4755 1625                                        i1l4747 1620  
                                      i1l4675 06CF                                        i1l4667 0698  
                                      i1l4659 067D                                        i1l4595 0592  
                                      i1l4579 0565                                        i1l4739 1452  
                                      i1l4499 0DD5                                        i1l5707 0055  
                                      i1l5661 16EB                                        i1l5653 16D6  
                                      i1l5645 172C                                        i1l5637 1712  
                                      i1l4693 0B2E                                        i1l4685 0B18  
                                      i1l4757 1627                                        i1l4749 1621  
                                      i1l4941 151A                                        i1l4933 1510  
                                      i1l4677 06D3                                        i1l4669 069C  
                                      i1l4597 05A3                                        i1l4589 057A  
                                      i1l5709 005D                                        i1l5655 16E0  
                                      i1l5647 172D                                        i1l5639 1719  
                                      i1l4695 0B33                                        i1l4687 0B1A  
                                      i1l4759 162D                                        i1l4935 1515  
                                      i1l4943 151C                                        i1l4951 1527  
                                      i1l4599 05B2                                        i1l4679 06DC  
                                      u302_20 0A03                                        u310_20 0C9E  
                                      i1l5657 16E4                                        i1l5649 16CF  
                                      i1l4697 0B38                                        i1l4689 0B22  
                                      i1l4945 151E                                        i1l4937 1516  
                                      i1l4953 1529                                        u302_21 0A02  
                                      u310_21 0C9D                                        i1l4961 1532  
                                      i1l5681 0006                                        i1l5659 16EA  
                                      i1l4699 0B3C                                        i1l4939 1518  
                                      i1l4955 152B                                        i1l4947 1521  
                                      i1l4963 1537                                        i1l4971 153E  
                                      i1l5691 001F                                        i1l5683 000B  
                                      _S1_ISR 0B18                                        i1l4949 1526  
                                      i1l4957 152D                                        i1l4973 1540  
                                      i1l4965 1538                                        i1l5693 002A  
                                      i1l5685 000F                                        i1l4959 152F  
                                      i1l4967 153A                                        i1l5695 002E  
                                      i1l5687 0017                                        u303_20 0A07  
                                      u311_20 0CB0                                        i1l4977 14CB  
                                      u303_21 0A06                                        u311_21 0CAF  
                                      i1l4969 153C                                        i1l5697 0039  
                                      i1l5689 001B                                        i1l4979 14D2  
                                      i1l5699 003D                                        u400_20 0B4F  
                                      u304_20 0A12                                        u312_20 0CC2  
                                      u320_20 154B                                        u400_21 0B4E  
                                      u304_21 0A11                                        u312_21 0CC1  
                                      u320_21 154A                                        u400_25 0B4B  
                                      u401_20 0B62                                        u313_20 0CD4  
                                      u321_20 1551                                        u401_21 0B61  
                                      u313_21 0CD3                                        u321_21 1550  
                                      _LCDcmd 1488                                        u401_25 0B5E  
                                      u305_25 0C57                                        u402_20 0B6C  
                                      u314_20 0CE6                                        u306_20 0C6C  
                                      u322_20 0914                                        u410_20 1537  
                                      u402_21 0B6B                                        u314_21 0CE5  
                                      u306_21 0C6B                                        u322_21 0913  
                                      u410_21 1536                                        u330_25 08AA  
                                      u411_20 14D2                                        u315_20 0CF8  
                                      u307_20 0C71                                        u331_20 08B6  
                                      u411_21 14D1                                        u315_21 0CF7  
                                      u307_21 0C70                                        u331_21 08B5  
                                      u323_25 0918                                        u316_20 0CFD  
                                      u308_20 0C7C                                        u324_20 0924  
                                      u332_20 08C0                                        u316_21 0CFC  
                                      u308_21 0C7B                                        u324_21 0923  
                                      u332_21 08BF                                        u332_25 08BC  
                                      u309_20 0C8C                                        u317_20 15EA  
                                      u309_21 0C8B                                        u317_21 15E9  
                                      u325_25 0925                                        u333_25 08C5  
                                      u430_20 0700                                        u326_20 0933  
                                      u334_20 08CF                                        u318_20 15F3  
                                      u350_20 0DE6                                        u430_21 06FF  
                                      u326_21 0932                                        u334_21 08CE  
                                      u318_21 15F2                                        u350_21 0DE5  
                                      u326_25 092F                                        u406_25 1564  
                                      u407_20 162C                                        u431_20 07B6  
                                      u335_20 1639                                        u319_20 15F8  
                                      u351_20 0DF1                                        u407_21 162B  
                                      u431_21 07B5                                        u335_21 1638  
                                      u319_21 15F7                                        u351_21 0DF0  
                                      u327_25 0939                                        u432_20 07C1  
                                      u408_20 1515                                        u328_20 0943  
                                      u440_20 0334                                        u360_20 0E59  
                                      u352_20 0E01                                        u432_21 07C0  
                                      u408_21 1514                                        u328_21 0942  
                                      u440_21 0333                                        u360_21 0E58  
                                      u352_21 0E00                                        _INTPPS 0E90  
                                      u336_25 163E                                        u433_20 07C8  
                                      u409_20 1526                                        u329_20 08A6  
                                      u441_20 0381                                        u361_20 0E5D  
                                      u353_20 0E11                                        u433_21 07C7  
                                      u409_21 1525                                        u329_21 08A5  
                                      u441_21 0380                                        u361_21 0E5C  
                                      u353_21 0E10                                        u337_25 1643  
                                      u434_20 07CE                                        u338_20 164D  
                                      u450_20 03F1                                        u442_20 0390  
                                      u370_20 0ECA                                        u362_20 0E68  
                                      u354_20 0E16                                        u434_21 07CD  
                                      u338_21 164C                                        u450_21 03F0  
                                      u442_21 038F                                        u370_21 0EC9  
                                      u362_21 0E67                                        u354_21 0E15  
                               main@corrupted 00CE                                        u435_20 07D4  
                                      u451_20 03F6                                        u443_20 039F  
                                      u371_20 0ED0                                        u363_20 0E6D  
                                      u355_20 0E21                                        u435_21 07D3  
                                      u451_21 03F5                                        u443_21 039E  
                                      u371_21 0ECF                                        u363_21 0E6C  
                                      u355_21 0E20                                        u436_20 07DA  
                                      u380_20 05E9                                        u460_20 04F1  
                                      u452_20 0428                                        u444_20 03AD  
                                      u348_20 080D                                        u372_20 0EDB  
                                      u364_20 0E78                                        u356_20 0E31  
                                      u436_21 07D9                                        u380_21 05E8  
                                      u460_21 04F0                                        u452_21 0427  
                                      u444_21 03AC                                        u348_21 080C  
                                      u372_21 0EDA                                        u364_21 0E77  
                                      u356_21 0E30                                        _LCDstr 15FA  
                                      u541_20 1719                                        u437_20 07E0  
                                      u381_20 060D                                        u461_20 04F7  
                                      u453_20 0430                                        u445_20 03BC  
                                      u373_20 0EE0                                        u365_20 0E88  
                                      u357_20 0E43                                        u349_20 0DE1  
                                      u541_21 1718                                        u437_21 07DF  
                                      u381_21 060C                                        u461_21 04F6  
                                      u453_21 042F                                        u445_21 03BB  
                                      u373_21 0EDF                                        u365_21 0E87  
                                      u357_21 0E42                                        u349_21 0DE0  
                                      u381_25 0609                                        u542_20 172C  
                                      u438_20 07F3                                        u374_20 1614  
                                      u390_20 0676                                        u382_20 0618  
                                      u462_20 0502                                        u454_20 0444  
                                      u446_20 03CA                                        u366_20 0E98  
                                      u358_20 0E49                                        u550_20 000F  
                                      u542_21 172B                                        u438_21 07F0  
                                      u374_21 1613                                        u390_21 0675  
                                      u382_21 0617                                        u462_21 0501  
                                      u454_21 0443                                        u446_21 03C9  
                                      u366_21 0E97                                        u358_21 0E48  
                                      u550_21 000E                                        u454_25 0440  
                                      u470_25 0EF2                                        u543_20 16D4  
                                      u375_20 0879                                        u391_20 068B  
                                      u383_20 061E                                        u463_20 050E  
                                      u455_20 045A                                        u447_20 03D9  
                                      u367_20 0E9D                                        u359_20 0E54  
                                      u471_20 0F08                                        u551_20 0017  
                                      u543_21 16D3                                        u375_21 0878  
                                      u391_21 068A                                        u383_21 061D  
                                      u463_21 050D                                        u455_21 0459  
                                      u447_21 03D8                                        u367_21 0E9C  
                                      u359_21 0E53                                        u471_21 0F07  
                                      u551_21 0016                                        u439_24 07F5  
                                      u471_25 0F04                                        u544_20 16EA  
                                      u296_20 09D1                                        u376_20 088F  
                                      u392_20 0691                                        u384_20 0624  
                                      u464_20 051A                                        u456_20 046E  
                                      u448_20 03E7                                        u368_20 0EA8  
                                      u480_20 0FF3                                        u472_20 0F15  
                                      u560_20 0051                                        u552_20 001B  
                                      u544_21 16E9                                        u296_21 09D0  
                                      u376_21 088E                                        u392_21 0690  
                                      u384_21 0623                                        u464_21 0519  
                                      u456_21 046D                                        u448_21 03E6  
                                      u368_21 0EA7                                        u480_21 0FF2  
                                      u472_21 0F14                                        u560_21 0050  
                                      u552_21 001A                                        u472_25 0F11  
                                      u297_20 09DB                                        u393_20 06DC  
                                      u385_20 0633                                        u377_20 0565  
                                      u465_20 0527                                        u457_20 0482  
                                      u449_20 03EC                                        u369_20 0EB8  
                                      u473_20 0FB1                                        u561_20 0055  
                                      u553_20 001F                                        u297_21 09DA  
                                      u393_21 06DB                                        u385_21 0632  
                                      u377_21 0564                                        u465_21 0526  
                                      u457_21 0481                                        u449_21 03EB  
                                      u369_21 0EB7                                        u473_21 0FB0  
                                      u561_21 0054                                        u553_21 001E  
                                      u385_25 062F                                        u298_20 09E4  
                                      u394_20 06F0                                        u386_20 0643  
                                      u378_20 058F                                        u466_20 052C  
                                      u458_20 04B2                                        u474_20 0FC7  
                                      u562_20 005D                                        u554_20 002A  
                                      u298_21 09E3                                        u394_21 06EF  
                                      u386_21 0642                                        u378_21 058E  
                                      u466_21 052B                                        u458_21 04B1  
                                      u474_21 0FC6                                        u562_21 005C  
                                      u554_21 0029                                        u395_20 0B29  
                                      u299_20 09EA                                        u387_20 0649  
                                      u379_20 05C2                                        u467_20 053D  
                                      u459_20 04DF                                        u475_20 0FCD  
                                      u563_20 0061                                        u555_20 002E  
                                      u395_21 0B28                                        u299_21 09E9  
                                      u387_21 0648                                        u379_21 05C1  
                                      u467_21 053C                                        u459_21 04DE  
                                      u475_21 0FCC                                        u563_21 0060  
                                      u555_21 002D                                        u396_20 0B2E  
                                      u388_20 065A                                        u468_20 0542  
                                      u476_20 0FD2                                        u484_20 15AA  
                                      u564_20 0066                                        u556_20 0039  
                                      u396_21 0B2D                                        u388_21 0659  
                                      u468_21 0541                                        u476_21 0FD1  
                                      u484_21 15A9                                        u564_21 0065  
                                      u556_21 0038                                        _OSCFRQ 0893  
                                      u397_20 0B33                                        u389_20 066F  
                                      u469_20 0553                                        u485_20 1593  
                                      u477_20 0FD7                                        u557_20 003D  
                                      u549_20 000B                                        u397_21 0B32  
                                      u389_21 066E                                        u469_21 0552  
                                      u485_21 1592                                        u477_21 0FD6  
                                      u557_21 003C                                        u549_21 000A  
                                      u398_20 0B38                                        u486_20 157C  
                                      u478_20 0FE9                                        u558_20 0045  
                                      u398_21 0B37                                        u486_21 157B  
                                      u478_21 0FE8                                        u558_21 0044  
                                      u399_20 0B42                                        u479_20 0FEE  
                                      u559_20 0049                                        u399_21 0B41  
                                      u479_21 0FED                                        u559_21 0048  
                                      u598_27 0CFE                                        _PWM6EN 1C77  
                                      u599_27 0B1D                                        _TX1REG 011A  
                                      _TX1STA 011E                                     ??_ReadI2C 0070  
                                      _PWM_on 00EC                                   LCDsend2x4@c 00A5  
                             _TMR3_WriteTimer 1521                              __end_of_editTemp 086C  
                __end_ofi1_PWM6_LoadDutyValue 156B          __end_of_TMR1_DefaultInterruptHandler 0003  
       __size_of_TMR1_DefaultInterruptHandler 0001                  _TMR1_DefaultInterruptHandler 0002  
                                _CCPTMRS1bits 021F                              __end_of_commands 1822  
                               ?i1_LCDsend2x4 0072                                        ___wmul 16AF  
                           __end_of_TMR2_Stop 144E                                        _cmd_ra 0A67  
                                      _cmd_rc 0948                                     ??___lwdiv 0074  
                                   ??___lwmod 007C                           __size_of_TMR2_Start 0003  
                         _EUSART_Transmit_ISR 1712                       __end_of_PWM6_Initialize 14E5  
                                   ??_editLum 00A0                                     ??_cmd_rtl 00A9  
                               ?_INT_CallBack 0070                       __end_of_DATAEE_ReadByte 1510  
                     __size_of_monitoring_ISR 011E                               _ADCC_Initialize 15B0  
                              _PMD_Initialize 14A5                                     ??_isdigit 0070  
                    ?i1_PWM_Output_D4_Disable 0070                               menuLCD_ISR@diff 004A  
               i1DATAEE_WriteByte@GIEBitValue 0079             __size_of_ADCC_GetSingleConversion 0012  
            __size_of_INT_SetInterruptHandler 0006                     ?_ADCC_GetSingleConversion 0070  
                     __end_of_TMR2_StartTimer 1452       INT_SetInterruptHandler@InterruptHandler 00A0  
    TMR5_SetInterruptHandler@InterruptHandler 00A0      TMR3_SetInterruptHandler@InterruptHandler 00A0  
    TMR1_SetInterruptHandler@InterruptHandler 00A0                                     ??_sprintf 0028  
                     __end_of_TMR1_WriteTimer 1521                       ??_PWM_Output_D4_Disable 00A0  
                        ?_EUSART_Transmit_ISR 0070                           __size_ofi1_WriteI2C 004B  
                            ?_TMR1_Initialize 0070                       __end_of_TMR5_Initialize 16AF  
                        __size_of_EUSART_Read 0024                             _SYSTEM_Initialize 16F0  
                     __end_of__initialization 0090                            ?_SYSTEM_Initialize 0070  
                           __end_of_Clock_ISR 07F6                               _TMR5_WriteTimer 1532  
                        __size_of_menuLCD_ISR 022B          __end_of_EUSART_SetTxInterruptHandler 14BF  
       __size_of_EUSART_SetTxInterruptHandler 0009                  _EUSART_SetTxInterruptHandler 14B6  
                              __pcstackCOMMON 0070                                ??i1_LCDsend2x4 0073  
                                __pidataBANK0 1496                           ??_SYSTEM_Initialize 00A3  
                                   ?_TMR1_ISR 0070                 ?_TMR1_DefaultInterruptHandler 0070  
                                   ?_TMR3_ISR 0070                                     ?_TMR5_ISR 0070  
                               __end_of_getch 145E                              _DATAEE_WriteByte 1735  
                                menuLCD_ISR@l 0047                                 __end_of_putch 1496  
                          __size_of_editClock 0064               differenceBetweenTimePeriod@diff 0076  
                               __end_of_tsttc 0EE2                              ?_TMR2_Initialize 0070  
                              ??_INT_CallBack 0071               differenceBetweenTimePeriod@stop 0073  
                      __end_of_PMD_Initialize 14AD                                     ?i1___wmul 0070  
                 __size_of_EXT_INT_Initialize 000E                                  ??_LCDsend2x4 00A3  
                                     ??_getch 00A2                     __end_of_SYSTEM_Initialize 1712  
                       ??_EUSART_Transmit_ISR 0070                                  sprintf@width 0031  
                     __end_of_TMR3_WriteTimer 1532                                       ??_putch 00A2  
                                     ??_tsttc 0072                                    __pbssBANK0 004D  
                                  __pbssBANK1 00E3                                    __pbssBANK2 0120  
                      i1DATAEE_WriteByte@bAdd 0076                                       ?_S1_ISR 0070  
                                     ?_LCDcmd 0070                          __end_of_EUSART_Write 17D4  
                            ?_TMR3_Initialize 0070                                       ?_LCDstr 0079  
                                     LCDcmd@c 0078                   __size_of_EUSART_Receive_ISR 0021  
                                     LCDstr@c 0020                                       LCDstr@p 0079  
                                  __pmaintext 0094                 ?_EUSART_SetTxInterruptHandler 00A0  
            _EUSART_TxDefaultInterruptHandler 0135              __end_of_TMR3_SetInterruptHandler 1476  
                                     ?___wmul 00A0                                    ??_TMR1_ISR 007B  
                                  ??_TMR3_ISR 007E                       __end_of_ADCC_Initialize 15C7  
                  __end_of_PWM6_LoadDutyValue 15E0                                    ??_TMR5_ISR 007D  
                                     ?_cmd_ra 00A6                                       ?_cmd_rc 00A6  
                                  __pintentry 0004                                       _ADFLTRH 0115  
                                     _ADFLTRL 0114                          __size_ofi1_TMR2_Stop 0003  
                          __end_of_LCDsend2x4 0DD5                                       _ADPREVH 008F  
                                     _ADPREVL 008E                                     ?_WriteI2C 0070  
                            ?_PWM6_Initialize 0070                                       _ADSTPTH 0113  
                                     _ADSTPTL 0112               __end_ofi1_PWM_Output_D4_Disable 1442  
                             ?_PMD_Initialize 0070                                    ??i1___wmul 0074  
                            ?_DATAEE_ReadByte 00A0                             ?_i2c1_driver_open 0070  
                               _eusartRxCount 00E7                 i1PWM6_LoadDutyValue@dutyValue 0070  
                                     _LCDchar 149D                                       _LCDinit 0BD8  
                                     _SP1BRGH 011C                                       _SP1BRGL 011B  
                                     _LCDsend 0A14                            ??_i2c1_driver_open 00A0  
                                     _INT_ISR 145E                                       _OSCCON1 088D  
                                     _OSCCON3 088F                                     ?_editTemp 0070  
                        i1_PWM6_LoadDutyValue 1555                                       _NVMADRH 081B  
                                     _NVMADRL 081A                                       _NVMDATH 081D  
                                     _OSCTUNE 0892                                       _NVMDATL 081C  
                                     _NVMCON2 081F                                       _PWM6DCH 038D  
                                     _PWM6DCL 038C                             ?i1_TMR2_StopTimer 0070  
                                     _PWM6CON 038E                                       _SSP1ADD 018D  
                                     _SLRCONA 0F3B                                       _SLRCONB 0F46  
                                     _SLRCONC 0F51                                       _SLRCOND 0F5C  
                                     _SLRCONE 0F67                                       _SSP1BUF 018C  
                                     _SSP1MSK 018E                                  ??_TMR2_Start 0070  
                     __size_of_TMR2_StopTimer 0004                              ?_TMR2_StartTimer 0070  
                            ?_TMR1_WriteTimer 0070                            ??i1_TMR2_StopTimer 0070  
                     __end_of_TMR5_WriteTimer 1543                                  LCDsend2x4@hc 00A6  
                                LCDsend2x4@lc 00A7                             __end_of_editClock 0BD8  
                            ?_TMR5_Initialize 0070                               __size_of_S1_ISR 005C  
                             __size_of_LCDcmd 0007                          DATAEE_WriteByte@bAdd 00A0  
                          _i2c1_driver_i2cISR 00E3                               __size_of_LCDstr 001B  
                                     _ReadI2C 15E0                    ??_TMR5_SetInterruptHandler 00A2  
                                ??i1_WriteI2C 0070                               __size_of___wmul 0020  
                                     ___lwdiv 090C                                       ___lwmod 08A0  
                             __size_of_cmd_ra 0057                               __size_of_cmd_rc 003E  
                          __end_of_TMR2_Start 143F                                    ??_WriteI2C 00A0  
                                     _editLum 0812                                       _cmd_rtl 08D4  
                                     __ptext1 17D4                                       __ptext2 14BF  
                                     __ptext3 145A                                       __ptext4 1759  
                                     __ptext5 083F                                       __ptext6 0812  
                                     __ptext7 0B74                                       __ptext8 0A67  
                                     __ptext9 0948                                _monitoring_ISR 0EE2  
              ??_TMR1_DefaultInterruptHandler 0070                                     _T1CONbits 020E  
                                     _dpowers 180F                         _OSCILLATOR_Initialize 07F6  
                                   _T2CONbits 028E                                       _isdigit 1543  
                                   _T3CONbits 0214             __size_of_TMR1_SetInterruptHandler 0006  
                                     cmd_ra@n 00B3                                       cmd_rc@n 00B0  
                       ?i1_PWM6_LoadDutyValue 0070                      ??_PIN_MANAGER_Initialize 00A0  
                   ?_TMR1_SetInterruptHandler 00A0                                     _T2HLTbits 028F  
                     _INT_SetInterruptHandler 1464                                     _T5CONbits 021A  
                                  ??_editTemp 00A0                                    cmd_ra@buff 00AA  
                        __end_ofi1_LCDsend2x4 0D01                                    cmd_rc@buff 00AA  
                  __size_of_SYSTEM_Initialize 0022                                       _sprintf 0558  
                                     clrloop0 147D                          end_of_initialization 0090  
                            ?_TMR3_WriteTimer 0070                                     _T2RSTbits 0291  
                          __end_ofi1_WriteI2C 0A14                                       init_ram 1482  
                                     initloop 1483                          __end_of_INT_CallBack 14D8  
                              i1LCDsend2x4@hc 0076                                i1LCDsend2x4@lc 0077  
                          i1_DATAEE_WriteByte 1615                             _EUSART_Initialize 177D  
               __size_of_PWM_Output_D4_Enable 0003                            ?_EUSART_Initialize 0070  
                          _EUSART_is_rx_ready 1445                  ?_differenceBetweenTimePeriod 0070  
                         ?i1_DATAEE_WriteByte 0076                              ?_ADCC_Initialize 0070  
            __end_of_ADCC_GetSingleConversion 0812                         i1___wmul@multiplicand 0072  
                      __end_of_monitoring_ISR 1000                           ??_EUSART_Initialize 00A2  
              ??_EUSART_SetTxInterruptHandler 00A2                           ?_EUSART_is_rx_ready 0070  
                                   _PORTCbits 000E                                     _TMR2_Stop 144B  
                    _TMR3_SetInterruptHandler 1470                         _TMR5_InterruptHandler 00D8  
                                   _TRISCbits 0013                         __size_of_EUSART_Write 002C  
                               ?_toggleAlarms 0070                                    main@i_2606 00D4  
                        ??i1_DATAEE_WriteByte 0079                      __end_of_DATAEE_WriteByte 1759  
                               _alarmPWMStart 0067                              ?_TMR5_WriteTimer 0070  
                     TMR5_WriteTimer@timerVal 0070                __size_of_PWM_Output_D4_Disable 0003  
                   __end_of_EUSART_Initialize 17A8                          ??_EUSART_is_rx_ready 00A0  
               __end_of_PWM_Output_D4_Disable 144B                                __end_of_S1_ISR 0B74  
                              __end_of_LCDcmd 148F                                __end_of_LCDstr 1615  
            __size_ofi1_PWM_Output_D4_Disable 0003                                LCDsend2x4@mode 00A2  
                                   _Clock_ISR 06F5                                __end_of___wmul 16CF  
                             ?_monitoring_ISR 0070                                __end_of_cmd_ra 0ABE  
                              __end_of_cmd_rc 0986                                  _EUSART_Write 17A8  
                           __size_of_TMR1_ISR 0017                             __size_of_TMR3_ISR 0017  
                           __size_of_TMR5_ISR 0017                                    ?_TMR2_Stop 0070  
                      ?_OSCILLATOR_Initialize 0070                     ??_INT_SetInterruptHandler 00A2  
                             main@checkSumAux 00CC                        ??i1_PWM6_LoadDutyValue 0072  
                               menuLCD_ISR@tt 0043                           start_initialization 006C  
                           __size_ofi1___wmul 001F          __end_of_TMR5_DefaultInterruptHandler 0800  
       __size_of_TMR5_DefaultInterruptHandler 0001                  _TMR5_DefaultInterruptHandler 07FF  
                              ??_toggleAlarms 00A0               __size_of_PIN_MANAGER_Initialize 0043  
                              _TMR2_StopTimer 1456                                 ??_EUSART_Read 00A0  
EUSART_SetRxInterruptHandler@interruptHandler 00A0  EUSART_SetTxInterruptHandler@interruptHandler 00A0  
                            WriteI2C@data_out 00A1                                   putch@txData 00A2  
                                    ??_S1_ISR 0070                                      ??_LCDcmd 0078  
                                    ??_LCDstr 007B                                 ??_menuLCD_ISR 0035  
                         DATAEE_ReadByte@bAdd 00A0                  ?_INT_DefaultInterruptHandler 0070  
                    __size_of_TMR1_Initialize 001F                              ??_PMD_Initialize 00A0  
                                  ?_Clock_ISR 0070                                      ??___wmul 00A4  
                                    ??_cmd_ra 00A9                                      ??_cmd_rc 00A9  
                                 __pdataBANK0 0067                    __end_of_EXT_INT_Initialize 14F3  
                           _editingClockAlarm 005C                             __size_of_WriteI2C 005A  
                       __size_ofi1_LCDsend2x4 00B3                      _ADCC_GetSingleConversion 0800  
                     i1DATAEE_WriteByte@bData 0078                   __end_of_EUSART_Transmit_ISR 1735  
                      __end_of_TMR2_StopTimer 145A                                      ?_LCDchar 0070  
                                    ?_LCDinit 0070                                      ?_LCDsend 0070  
                                   ___latbits 0002                                      ?_INT_ISR 0070  
                               __pcstackBANK0 0020                                 __pcstackBANK1 00A0  
                          _PWM6_LoadDutyValue 15C7                      __size_of_TMR2_Initialize 000E  
                                _isdigit$3191 0070                         __size_of_INT_CallBack 000D  
               ?_TMR5_DefaultInterruptHandler 0070          __size_of_differenceBetweenTimePeriod 0034  
                                    LCDchar@c 0078                             __size_of_editTemp 002D  
                  __end_of_EUSART_Receive_ISR 16F0                                      LCDsend@c 00A3  
                         ?_PWM6_LoadDutyValue 00A0                    __size_of_EUSART_Initialize 002B  
                                 sprintf@flag 0030                     __size_of_i2c1_driver_open 000C  
                                 sprintf@prec 002D              _EUSART_RxDefaultInterruptHandler 0133  
                         __end_of_EUSART_Read 177D                                      ?_ReadI2C 0070  
                                   __pnvBANK0 006E                                     __pnvBANK1 00D6  
                                   __pnvBANK2 0133                                     _editClock 0B74  
                            ___lwdiv@dividend 0072                        _PIN_MANAGER_Initialize 0986  
                   __size_ofi1_TMR2_StopTimer 0004                 ??_INT_DefaultInterruptHandler 0070  
                               ??i1_TMR2_Stop 0070                      __size_of_TMR3_Initialize 001F  
                        EUSART_Read@readValue 00A1                           __end_of_menuLCD_ISR 0558  
            __end_of_TMR1_SetInterruptHandler 1470               ADCC_GetSingleConversion@channel 0073  
                                i1_LCDsend2x4 0C4E                                     _dimingLed 005E  
                                    ?___lwdiv 0070                                      ?___lwmod 0078  
                 _i2c1_driver_busCollisionISR 00E5                                  _eusartRxHead 00E9  
                                _eusartTxHead 00EB                                  _eusartRxTail 00E8  
                                _eusartTxTail 00EA                          ??_PWM6_LoadDutyValue 00A2  
                                    ?_editLum 0070                  ??_INTERRUPT_InterruptManager 007E  
                                    ?_cmd_rtl 00A6                                   ??_TMR2_Stop 00A0  
                     _eusartTxBufferRemaining 00E2                                  _INT_CallBack 14CB  
                                    _BAUD1CON 011F                                      ?_isdigit 0070  
                             ?_TMR2_StopTimer 0070                      __size_of_PWM6_Initialize 000D  
                            ___lwdiv@quotient 0075                                __size_of_getch 0004  
                                    ?_sprintf 0020                                      _T2CLKCON 0290  
                    __size_of_DATAEE_ReadByte 000F                                __size_of_putch 0007  
                              __size_of_tsttc 010D                                _eusartRxBuffer 0120  
                              _eusartTxBuffer 0128                       i1_PWM_Output_D4_Disable 143F  
                              ___wmul@product 00A4                                      _LATAbits 0016  
                                   clear_ram0 147C                                      _PIE0bits 0716  
                                    _PIE3bits 0719                                      _PIE4bits 071A  
                    __size_of_TMR2_StartTimer 0004                                 i1LCDsend2x4@c 0075  
                                  ?_editClock 0070                                     _tempAlarm 0054  
                                    _S1_Value 0064                      __size_of_TMR1_WriteTimer 0011  
         __size_of_INTERRUPT_InterruptManager 0066                                      _PIR0bits 070C  
                                    _PIR3bits 070F                                      _PIR4bits 0710  
                  ??_TMR3_SetInterruptHandler 00A2                      __size_of_TMR5_Initialize 001F  
                                 ??_Clock_ISR 007A                          __end_of_toggleAlarms 1800  
                                    _SSP1CON1 0190                                      _SSP1CON2 0191  
                                    _TMR1_ISR 156B                                      _TMR3_ISR 1582  
                                    _TMR5_ISR 1599                                      _SSP1STAT 018F  
                           ??_TMR1_Initialize 00A2                                    _ADCON0bits 0093  
                                  _ADCON1bits 0094                                    _ADCON2bits 0095  
                         __end_ofi1_TMR2_Stop 1445                                    _ADCON3bits 0096  
                           ___wmul@multiplier 00A0                                      i1___wmul 1633  
                          i1WriteI2C@data_out 0071                  __end_of_PWM_Output_D4_Enable 143C  
        __size_of_INT_DefaultInterruptHandler 0001             __size_of_TMR5_SetInterruptHandler 0006  
                            __size_of_LCDchar 0008                     ?_TMR5_SetInterruptHandler 00A0  
                       DATAEE_WriteByte@bData 00A2                              __size_of_LCDinit 0076  
                            __size_of_LCDsend 0053                              __size_of_INT_ISR 0006  
                                 _EUSART_Read 1759                             ?_DATAEE_WriteByte 00A0  
                           ??_TMR2_Initialize 00A0                                   _menuLCD_ISR 032D  
              ??_TMR5_DefaultInterruptHandler 0070                            ??_DATAEE_WriteByte 00A3  
                                cmd_rtl@12930 00A6                                  cmd_rtl@12931 00A8  
                            __size_of_ReadI2C 001A                                    _ADSTATbits 0097  
                    __size_of_TMR3_WriteTimer 0011                              ??_monitoring_ISR 007A  
                     ??_OSCILLATOR_Initialize 00A0                              __size_of___lwdiv 003C  
                            __size_of___lwmod 0034                                      _WriteI2C 0ABE  
                           ??_TMR3_Initialize 00A2                      _TMR1_SetInterruptHandler 146A  
                            i1LCDsend2x4@mode 0072                              __size_of_editLum 002D  
                            __size_of_cmd_rtl 0038                         _TMR1_InterruptHandler 00DE  
                                  sprintf@val 002E                                      _clkAlarm 004D  
                    __size_of_ADCC_Initialize 0017                              __size_of_isdigit 0012  
                                    _editTemp 083F                               ___lwdiv@divisor 0070  
                             ___lwdiv@counter 0077                                      __ptext10 08D4  
                                    __ptext11 148F                                      __ptext20 1470  
                                    __ptext12 17A8                                      __ptext21 14F3  
                                    __ptext13 16AF                                    _T1GCONbits 020F  
                                    __ptext30 177D                                      __ptext22 1652  
                                    __ptext14 1456                                      __ptext31 14B6  
                                    __ptext23 146A                                      __ptext15 144B  
                                    __ptext40 1445                                      __ptext32 14AD  
                                    __ptext24 14D8                                      __ptext16 16F0  
                                    __ptext41 1735                                      __ptext33 15B0  
                                    __ptext25 14A5                                      __ptext17 1690  
                                    __ptext50 1532                                      __ptext42 1501  
                                    __ptext34 1448                                      __ptext26 0986  
                                    __ptext18 1476                                      __ptext51 1582  
                                    __ptext35 15C7                                      __ptext27 07F6  
                                    __ptext19 1671                                      __ptext60 1543  
                                    __ptext52 0003                                      __ptext44 1599  
                                    __ptext36 0BD8                                      __ptext28 14E5  
                                    __ptext61 08A0                                      __ptext53 032D  
                                    __ptext45 07FF                                      __ptext37 0D01  
                                    __ptext29 1464                                      __ptext70 0C4E  
                                    __ptext62 090C                                      __ptext54 1452  
                                    __ptext46 0EE2                                      __ptext38 0A14  
                                    __ptext71 09C9                                      __ptext63 086C  
                                    __ptext55 1442                                      __ptext47 0DD5  
                                    __ptext39 0ABE                                      __ptext80 1438  
                                    __ptext72 1521                                      __ptext64 144E  
                                    __ptext56 143F                                      __ptext48 15E0  
                                    __ptext81 0B18                                      __ptext73 156B  
                                    __ptext65 143C                                      __ptext57 1555  
                                    __ptext49 0800                                      __ptext82 1712  
                                    __ptext74 1510                                      __ptext66 1439  
                                    __ptext58 0558                                      __ptext83 16CF  
                                    __ptext75 06F5                                      __ptext67 15FA  
                                    __ptext59 1633                                      __ptext76 0002  
                                    __ptext68 149D                                      __ptext77 1615  
                                    __ptext69 1488                                      __ptext78 145E  
                                    __ptext79 14CB                                  _SSP1CON1bits 0190  
                                _SSP1CON2bits 0191                     ??i1_PWM_Output_D4_Disable 0070  
                 __size_ofi1_DATAEE_WriteByte 001E                                      _commands 1819  
                            __size_of_sprintf 019D                                    _T3GCONbits 0215  
                 DATAEE_WriteByte@GIEBitValue 00A3                       TMR3_WriteTimer@timerVal 0070  
                                 cmd_ra@12937 00A6                                   cmd_ra@12938 00A8  
                            _i2c1_driver_open 14BF                                   cmd_rc@12923 00A6  
                                 cmd_rc@12924 00A8                                      _modeFlag 005A  
                           ??_PWM6_Initialize 00A0                   __size_of_EUSART_is_rx_ready 0003  
                               __size_of_main 0299                                    _T5GCONbits 021B  
                                    _lumAlarm 0051                             ??_DATAEE_ReadByte 00A2  
                                    _lumLevel 0062                         _PWM_Output_D4_Disable 1448  
                                 ??_editClock 00A0                                      cmd_rtl@n 00AF  
                            _editingTempAlarm 0061                              i1_TMR2_StopTimer 1452  
                    __size_of_TMR5_WriteTimer 0011                                    _RC1STAbits 011D  
                                    _prevTemp 006C                                    tsttc@value 0073  
                                 i1_TMR2_Stop 1442                    ??_ADCC_GetSingleConversion 0073  
                                    int$flags 007E                             ??_TMR2_StartTimer 0070  
          __end_of_INTERRUPT_InterruptManager 006A                    _INTERRUPT_InterruptManager 0004  
                                    main@buff 00B8                                  _SSP1STATbits 018F  
                           ??_TMR1_WriteTimer 0072                             menuLCD_ISR@F12906 0130  
        __end_of_TMR3_DefaultInterruptHandler 0004         __size_of_TMR3_DefaultInterruptHandler 0001  
                _TMR3_DefaultInterruptHandler 0003                             ??_TMR5_Initialize 00A2  
                                  _INTCONbits 000B                                   _NVMCON1bits 081E  
                                _prevLumLevel 006A                 __size_ofi1_PWM6_LoadDutyValue 0016  
                        _INT_InterruptHandler 00D6                                      isdigit@c 0071  
                                  _LCDsend2x4 0D01                            _EXT_INT_Initialize 14E5  
                                 cmd_rtl@buff 00AA                                      intlevel1 0000  
                                   sprintf@ap 002C                                     sprintf@sp 0034  
                            ___lwmod@dividend 007A                       ?_PIN_MANAGER_Initialize 0070  
                       __size_of_toggleAlarms 002C                           ?_EXT_INT_Initialize 0070  
                             _editingLumAlarm 0060          __end_of_EUSART_SetRxInterruptHandler 14B6  
       __size_of_EUSART_SetRxInterruptHandler 0009                  _EUSART_SetRxInterruptHandler 14AD  
                        _PWM_Output_D4_Enable 1439           __end_of_differenceBetweenTimePeriod 08A0  
                 _differenceBetweenTimePeriod 086C                            _EUSART_Receive_ISR 16CF  
                    ?_INT_SetInterruptHandler 00A0                              ??_TMR2_StopTimer 00A0  
                           ??_TMR3_WriteTimer 0072                                 __pstringtext1 180F  
                               __pstringtext2 1819                                 __pstringtext3 1800  
                               __pstringtext4 1822                                 __pstringtext5 1829  
                               __pstringtext6 182E                                 __pstringtext7 0000  
                        ??_EXT_INT_Initialize 00A2                 ??_differenceBetweenTimePeriod 0077  
                                    sprintf@c 0033                                      sprintf@f 0020  
                         ?_EUSART_Receive_ISR 0070                 ?_TMR3_DefaultInterruptHandler 0070  
                                  _SSP1DATPPS 0EC6                                    _SSP1CLKPPS 0EC5  
                             ___lwmod@divisor 0078                               ___lwmod@counter 007D  
                              _idx_RingBuffer 00ED                   PWM6_LoadDutyValue@dutyValue 00A0  
                                  _TX1STAbits 011E                                  _toggleAlarms 17D4  
                                  _TMR2_Start 143C                            EUSART_Write@txData 00A1  
                __size_of_EUSART_Transmit_ISR 0023                __end_of_PIN_MANAGER_Initialize 09C9  
                           ??_ADCC_Initialize 00A0                        ?_PWM_Output_D4_Disable 0070  
                        ??_EUSART_Receive_ISR 0070                         ?_PWM_Output_D4_Enable 0070  
                             _TMR1_Initialize 1652  
