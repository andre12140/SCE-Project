

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Nov 06 22:51:20 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text47,local,class=CODE,merge=1,delta=2,group=3
    69                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	text56,local,class=CODE,merge=1,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,delta=2
    80                           	psect	text59,local,class=CODE,merge=1,delta=2
    81                           	psect	text60,local,class=CODE,merge=1,delta=2
    82                           	psect	text61,local,class=CODE,merge=1,delta=2
    83                           	psect	text62,local,class=CODE,merge=1,delta=2
    84                           	psect	text63,local,class=CODE,merge=1,delta=2
    85                           	psect	text64,local,class=CODE,merge=1,delta=2
    86                           	psect	text65,local,class=CODE,merge=1,delta=2
    87                           	psect	text66,local,class=CODE,merge=1,delta=2
    88                           	psect	text67,local,class=CODE,merge=1,delta=2
    89                           	psect	text68,local,class=CODE,merge=1,delta=2
    90                           	psect	text69,local,class=CODE,merge=1,delta=2
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    92                           	dabs	1,0x7E,2
    93  0000                     
    94                           ; Version 2.30
    95                           ; Generated 15/09/2020 GMT
    96                           ; 
    97                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC16F18875 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001C                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  008C                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  008E                     	;# 
   167  008F                     	;# 
   168  0090                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0095                     	;# 
   174  0096                     	;# 
   175  0097                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009A                     	;# 
   179  009B                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  0110                     	;# 
   189  0110                     	;# 
   190  0111                     	;# 
   191  0112                     	;# 
   192  0112                     	;# 
   193  0113                     	;# 
   194  0114                     	;# 
   195  0114                     	;# 
   196  0115                     	;# 
   197  0116                     	;# 
   198  0116                     	;# 
   199  0117                     	;# 
   200  0119                     	;# 
   201  0119                     	;# 
   202  0119                     	;# 
   203  011A                     	;# 
   204  011A                     	;# 
   205  011A                     	;# 
   206  011B                     	;# 
   207  011B                     	;# 
   208  011B                     	;# 
   209  011B                     	;# 
   210  011B                     	;# 
   211  011C                     	;# 
   212  011C                     	;# 
   213  011C                     	;# 
   214  011D                     	;# 
   215  011D                     	;# 
   216  011D                     	;# 
   217  011E                     	;# 
   218  011E                     	;# 
   219  011E                     	;# 
   220  011F                     	;# 
   221  011F                     	;# 
   222  011F                     	;# 
   223  011F                     	;# 
   224  011F                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  018E                     	;# 
   228  018F                     	;# 
   229  0190                     	;# 
   230  0191                     	;# 
   231  0192                     	;# 
   232  0196                     	;# 
   233  0197                     	;# 
   234  0198                     	;# 
   235  0199                     	;# 
   236  019A                     	;# 
   237  019B                     	;# 
   238  019C                     	;# 
   239  020C                     	;# 
   240  020C                     	;# 
   241  020D                     	;# 
   242  020E                     	;# 
   243  020F                     	;# 
   244  020F                     	;# 
   245  0210                     	;# 
   246  0210                     	;# 
   247  0211                     	;# 
   248  0211                     	;# 
   249  0212                     	;# 
   250  0212                     	;# 
   251  0213                     	;# 
   252  0214                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0216                     	;# 
   256  0216                     	;# 
   257  0217                     	;# 
   258  0217                     	;# 
   259  0218                     	;# 
   260  0218                     	;# 
   261  0219                     	;# 
   262  021A                     	;# 
   263  021B                     	;# 
   264  021B                     	;# 
   265  021C                     	;# 
   266  021C                     	;# 
   267  021D                     	;# 
   268  021D                     	;# 
   269  021E                     	;# 
   270  021F                     	;# 
   271  028C                     	;# 
   272  028C                     	;# 
   273  028D                     	;# 
   274  028D                     	;# 
   275  028E                     	;# 
   276  028F                     	;# 
   277  0290                     	;# 
   278  0290                     	;# 
   279  0291                     	;# 
   280  0292                     	;# 
   281  0292                     	;# 
   282  0293                     	;# 
   283  0293                     	;# 
   284  0294                     	;# 
   285  0295                     	;# 
   286  0296                     	;# 
   287  0296                     	;# 
   288  0297                     	;# 
   289  0298                     	;# 
   290  0298                     	;# 
   291  0299                     	;# 
   292  0299                     	;# 
   293  029A                     	;# 
   294  029B                     	;# 
   295  029C                     	;# 
   296  029C                     	;# 
   297  029D                     	;# 
   298  030C                     	;# 
   299  030C                     	;# 
   300  030D                     	;# 
   301  030E                     	;# 
   302  030F                     	;# 
   303  0310                     	;# 
   304  0310                     	;# 
   305  0311                     	;# 
   306  0312                     	;# 
   307  0313                     	;# 
   308  0314                     	;# 
   309  0314                     	;# 
   310  0315                     	;# 
   311  0316                     	;# 
   312  0317                     	;# 
   313  0318                     	;# 
   314  0318                     	;# 
   315  0319                     	;# 
   316  031A                     	;# 
   317  031B                     	;# 
   318  031C                     	;# 
   319  031C                     	;# 
   320  031D                     	;# 
   321  031E                     	;# 
   322  031F                     	;# 
   323  038C                     	;# 
   324  038C                     	;# 
   325  038D                     	;# 
   326  038E                     	;# 
   327  0390                     	;# 
   328  0390                     	;# 
   329  0391                     	;# 
   330  0392                     	;# 
   331  040C                     	;# 
   332  040D                     	;# 
   333  040E                     	;# 
   334  040F                     	;# 
   335  0410                     	;# 
   336  0411                     	;# 
   337  0416                     	;# 
   338  0416                     	;# 
   339  0417                     	;# 
   340  0418                     	;# 
   341  0418                     	;# 
   342  0419                     	;# 
   343  041A                     	;# 
   344  041A                     	;# 
   345  041B                     	;# 
   346  041C                     	;# 
   347  041C                     	;# 
   348  041D                     	;# 
   349  041E                     	;# 
   350  041F                     	;# 
   351  048C                     	;# 
   352  048C                     	;# 
   353  048D                     	;# 
   354  048E                     	;# 
   355  048F                     	;# 
   356  048F                     	;# 
   357  0490                     	;# 
   358  0491                     	;# 
   359  0492                     	;# 
   360  0492                     	;# 
   361  0493                     	;# 
   362  0494                     	;# 
   363  0495                     	;# 
   364  0495                     	;# 
   365  0496                     	;# 
   366  0497                     	;# 
   367  0498                     	;# 
   368  0499                     	;# 
   369  049A                     	;# 
   370  049B                     	;# 
   371  049C                     	;# 
   372  049D                     	;# 
   373  050C                     	;# 
   374  050C                     	;# 
   375  050D                     	;# 
   376  050E                     	;# 
   377  050F                     	;# 
   378  050F                     	;# 
   379  0510                     	;# 
   380  0511                     	;# 
   381  0512                     	;# 
   382  0512                     	;# 
   383  0513                     	;# 
   384  0514                     	;# 
   385  0515                     	;# 
   386  0515                     	;# 
   387  0516                     	;# 
   388  0517                     	;# 
   389  0518                     	;# 
   390  0519                     	;# 
   391  051A                     	;# 
   392  051B                     	;# 
   393  051C                     	;# 
   394  051D                     	;# 
   395  058C                     	;# 
   396  058C                     	;# 
   397  058D                     	;# 
   398  058E                     	;# 
   399  058F                     	;# 
   400  058F                     	;# 
   401  0590                     	;# 
   402  0591                     	;# 
   403  0592                     	;# 
   404  0593                     	;# 
   405  060C                     	;# 
   406  060D                     	;# 
   407  060E                     	;# 
   408  060F                     	;# 
   409  0610                     	;# 
   410  0611                     	;# 
   411  0612                     	;# 
   412  0613                     	;# 
   413  0614                     	;# 
   414  0616                     	;# 
   415  0617                     	;# 
   416  0618                     	;# 
   417  0619                     	;# 
   418  061A                     	;# 
   419  061B                     	;# 
   420  061C                     	;# 
   421  061D                     	;# 
   422  061E                     	;# 
   423  068C                     	;# 
   424  068D                     	;# 
   425  068E                     	;# 
   426  068F                     	;# 
   427  0690                     	;# 
   428  0691                     	;# 
   429  0692                     	;# 
   430  0693                     	;# 
   431  0694                     	;# 
   432  070C                     	;# 
   433  070D                     	;# 
   434  070E                     	;# 
   435  070F                     	;# 
   436  0710                     	;# 
   437  0711                     	;# 
   438  0712                     	;# 
   439  0713                     	;# 
   440  0714                     	;# 
   441  0716                     	;# 
   442  0717                     	;# 
   443  0718                     	;# 
   444  0719                     	;# 
   445  071A                     	;# 
   446  071B                     	;# 
   447  071C                     	;# 
   448  071D                     	;# 
   449  071E                     	;# 
   450  0796                     	;# 
   451  0797                     	;# 
   452  0798                     	;# 
   453  0799                     	;# 
   454  079A                     	;# 
   455  079B                     	;# 
   456  080C                     	;# 
   457  080D                     	;# 
   458  080E                     	;# 
   459  080F                     	;# 
   460  0810                     	;# 
   461  0811                     	;# 
   462  0812                     	;# 
   463  0813                     	;# 
   464  0814                     	;# 
   465  081A                     	;# 
   466  081B                     	;# 
   467  081C                     	;# 
   468  081D                     	;# 
   469  081E                     	;# 
   470  081F                     	;# 
   471  088C                     	;# 
   472  088D                     	;# 
   473  088E                     	;# 
   474  088F                     	;# 
   475  0890                     	;# 
   476  0891                     	;# 
   477  0892                     	;# 
   478  0893                     	;# 
   479  0895                     	;# 
   480  0896                     	;# 
   481  0897                     	;# 
   482  0898                     	;# 
   483  0899                     	;# 
   484  089A                     	;# 
   485  089B                     	;# 
   486  090C                     	;# 
   487  090E                     	;# 
   488  090F                     	;# 
   489  091F                     	;# 
   490  091F                     	;# 
   491  098F                     	;# 
   492  098F                     	;# 
   493  0990                     	;# 
   494  0991                     	;# 
   495  0992                     	;# 
   496  0993                     	;# 
   497  0994                     	;# 
   498  0995                     	;# 
   499  0996                     	;# 
   500  0997                     	;# 
   501  0E0F                     	;# 
   502  0E10                     	;# 
   503  0E11                     	;# 
   504  0E12                     	;# 
   505  0E13                     	;# 
   506  0E14                     	;# 
   507  0E15                     	;# 
   508  0E16                     	;# 
   509  0E17                     	;# 
   510  0E18                     	;# 
   511  0E19                     	;# 
   512  0E1A                     	;# 
   513  0E1B                     	;# 
   514  0E1C                     	;# 
   515  0E1D                     	;# 
   516  0E1E                     	;# 
   517  0E1F                     	;# 
   518  0E20                     	;# 
   519  0E21                     	;# 
   520  0E22                     	;# 
   521  0E23                     	;# 
   522  0E24                     	;# 
   523  0E25                     	;# 
   524  0E26                     	;# 
   525  0E27                     	;# 
   526  0E28                     	;# 
   527  0E29                     	;# 
   528  0E2A                     	;# 
   529  0E2B                     	;# 
   530  0E2C                     	;# 
   531  0E2D                     	;# 
   532  0E2E                     	;# 
   533  0E2F                     	;# 
   534  0E30                     	;# 
   535  0E31                     	;# 
   536  0E32                     	;# 
   537  0E33                     	;# 
   538  0E34                     	;# 
   539  0E35                     	;# 
   540  0E36                     	;# 
   541  0E37                     	;# 
   542  0E8F                     	;# 
   543  0E90                     	;# 
   544  0E91                     	;# 
   545  0E92                     	;# 
   546  0E93                     	;# 
   547  0E94                     	;# 
   548  0E95                     	;# 
   549  0E96                     	;# 
   550  0E97                     	;# 
   551  0E9C                     	;# 
   552  0E9D                     	;# 
   553  0E9E                     	;# 
   554  0EA1                     	;# 
   555  0EA2                     	;# 
   556  0EA3                     	;# 
   557  0EA4                     	;# 
   558  0EA5                     	;# 
   559  0EA9                     	;# 
   560  0EAA                     	;# 
   561  0EAB                     	;# 
   562  0EAC                     	;# 
   563  0EB1                     	;# 
   564  0EB2                     	;# 
   565  0EB3                     	;# 
   566  0EB8                     	;# 
   567  0EB9                     	;# 
   568  0EBA                     	;# 
   569  0EBB                     	;# 
   570  0EBC                     	;# 
   571  0EBD                     	;# 
   572  0EBE                     	;# 
   573  0EC3                     	;# 
   574  0EC5                     	;# 
   575  0EC6                     	;# 
   576  0EC7                     	;# 
   577  0EC8                     	;# 
   578  0EC9                     	;# 
   579  0ECA                     	;# 
   580  0ECB                     	;# 
   581  0ECC                     	;# 
   582  0F10                     	;# 
   583  0F11                     	;# 
   584  0F12                     	;# 
   585  0F13                     	;# 
   586  0F14                     	;# 
   587  0F15                     	;# 
   588  0F16                     	;# 
   589  0F17                     	;# 
   590  0F18                     	;# 
   591  0F19                     	;# 
   592  0F1A                     	;# 
   593  0F1B                     	;# 
   594  0F1C                     	;# 
   595  0F1D                     	;# 
   596  0F1E                     	;# 
   597  0F1F                     	;# 
   598  0F20                     	;# 
   599  0F21                     	;# 
   600  0F22                     	;# 
   601  0F23                     	;# 
   602  0F24                     	;# 
   603  0F25                     	;# 
   604  0F26                     	;# 
   605  0F27                     	;# 
   606  0F28                     	;# 
   607  0F29                     	;# 
   608  0F2A                     	;# 
   609  0F2B                     	;# 
   610  0F2C                     	;# 
   611  0F2D                     	;# 
   612  0F2E                     	;# 
   613  0F2F                     	;# 
   614  0F30                     	;# 
   615  0F31                     	;# 
   616  0F32                     	;# 
   617  0F38                     	;# 
   618  0F39                     	;# 
   619  0F3A                     	;# 
   620  0F3B                     	;# 
   621  0F3C                     	;# 
   622  0F3D                     	;# 
   623  0F3E                     	;# 
   624  0F3F                     	;# 
   625  0F40                     	;# 
   626  0F41                     	;# 
   627  0F43                     	;# 
   628  0F44                     	;# 
   629  0F45                     	;# 
   630  0F46                     	;# 
   631  0F47                     	;# 
   632  0F48                     	;# 
   633  0F49                     	;# 
   634  0F4A                     	;# 
   635  0F4B                     	;# 
   636  0F4C                     	;# 
   637  0F4E                     	;# 
   638  0F4F                     	;# 
   639  0F50                     	;# 
   640  0F51                     	;# 
   641  0F52                     	;# 
   642  0F53                     	;# 
   643  0F54                     	;# 
   644  0F55                     	;# 
   645  0F56                     	;# 
   646  0F57                     	;# 
   647  0F59                     	;# 
   648  0F5A                     	;# 
   649  0F5B                     	;# 
   650  0F5C                     	;# 
   651  0F5D                     	;# 
   652  0F61                     	;# 
   653  0F62                     	;# 
   654  0F64                     	;# 
   655  0F65                     	;# 
   656  0F66                     	;# 
   657  0F67                     	;# 
   658  0F68                     	;# 
   659  0F69                     	;# 
   660  0F6A                     	;# 
   661  0F6B                     	;# 
   662  0F6C                     	;# 
   663  0F6D                     	;# 
   664  0FE4                     	;# 
   665  0FE5                     	;# 
   666  0FE6                     	;# 
   667  0FE7                     	;# 
   668  0FE8                     	;# 
   669  0FE9                     	;# 
   670  0FEA                     	;# 
   671  0FEB                     	;# 
   672  0FED                     	;# 
   673  0FEE                     	;# 
   674  0FEF                     	;# 
   675  0000                     	;# 
   676  0001                     	;# 
   677  0002                     	;# 
   678  0003                     	;# 
   679  0004                     	;# 
   680  0005                     	;# 
   681  0006                     	;# 
   682  0007                     	;# 
   683  0008                     	;# 
   684  0009                     	;# 
   685  000A                     	;# 
   686  000B                     	;# 
   687  000C                     	;# 
   688  000D                     	;# 
   689  000E                     	;# 
   690  000F                     	;# 
   691  0010                     	;# 
   692  0011                     	;# 
   693  0012                     	;# 
   694  0013                     	;# 
   695  0014                     	;# 
   696  0015                     	;# 
   697  0016                     	;# 
   698  0017                     	;# 
   699  0018                     	;# 
   700  0019                     	;# 
   701  001A                     	;# 
   702  001C                     	;# 
   703  001C                     	;# 
   704  001D                     	;# 
   705  001D                     	;# 
   706  001E                     	;# 
   707  001F                     	;# 
   708  008C                     	;# 
   709  008C                     	;# 
   710  008D                     	;# 
   711  008E                     	;# 
   712  008E                     	;# 
   713  008F                     	;# 
   714  0090                     	;# 
   715  0090                     	;# 
   716  0091                     	;# 
   717  0093                     	;# 
   718  0094                     	;# 
   719  0095                     	;# 
   720  0096                     	;# 
   721  0097                     	;# 
   722  0098                     	;# 
   723  0099                     	;# 
   724  009A                     	;# 
   725  009B                     	;# 
   726  009C                     	;# 
   727  009D                     	;# 
   728  009E                     	;# 
   729  010C                     	;# 
   730  010D                     	;# 
   731  010E                     	;# 
   732  010E                     	;# 
   733  010F                     	;# 
   734  0110                     	;# 
   735  0110                     	;# 
   736  0111                     	;# 
   737  0112                     	;# 
   738  0112                     	;# 
   739  0113                     	;# 
   740  0114                     	;# 
   741  0114                     	;# 
   742  0115                     	;# 
   743  0116                     	;# 
   744  0116                     	;# 
   745  0117                     	;# 
   746  0119                     	;# 
   747  0119                     	;# 
   748  0119                     	;# 
   749  011A                     	;# 
   750  011A                     	;# 
   751  011A                     	;# 
   752  011B                     	;# 
   753  011B                     	;# 
   754  011B                     	;# 
   755  011B                     	;# 
   756  011B                     	;# 
   757  011C                     	;# 
   758  011C                     	;# 
   759  011C                     	;# 
   760  011D                     	;# 
   761  011D                     	;# 
   762  011D                     	;# 
   763  011E                     	;# 
   764  011E                     	;# 
   765  011E                     	;# 
   766  011F                     	;# 
   767  011F                     	;# 
   768  011F                     	;# 
   769  011F                     	;# 
   770  011F                     	;# 
   771  018C                     	;# 
   772  018D                     	;# 
   773  018E                     	;# 
   774  018F                     	;# 
   775  0190                     	;# 
   776  0191                     	;# 
   777  0192                     	;# 
   778  0196                     	;# 
   779  0197                     	;# 
   780  0198                     	;# 
   781  0199                     	;# 
   782  019A                     	;# 
   783  019B                     	;# 
   784  019C                     	;# 
   785  020C                     	;# 
   786  020C                     	;# 
   787  020D                     	;# 
   788  020E                     	;# 
   789  020F                     	;# 
   790  020F                     	;# 
   791  0210                     	;# 
   792  0210                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  0212                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0216                     	;# 
   802  0216                     	;# 
   803  0217                     	;# 
   804  0217                     	;# 
   805  0218                     	;# 
   806  0218                     	;# 
   807  0219                     	;# 
   808  021A                     	;# 
   809  021B                     	;# 
   810  021B                     	;# 
   811  021C                     	;# 
   812  021C                     	;# 
   813  021D                     	;# 
   814  021D                     	;# 
   815  021E                     	;# 
   816  021F                     	;# 
   817  028C                     	;# 
   818  028C                     	;# 
   819  028D                     	;# 
   820  028D                     	;# 
   821  028E                     	;# 
   822  028F                     	;# 
   823  0290                     	;# 
   824  0290                     	;# 
   825  0291                     	;# 
   826  0292                     	;# 
   827  0292                     	;# 
   828  0293                     	;# 
   829  0293                     	;# 
   830  0294                     	;# 
   831  0295                     	;# 
   832  0296                     	;# 
   833  0296                     	;# 
   834  0297                     	;# 
   835  0298                     	;# 
   836  0298                     	;# 
   837  0299                     	;# 
   838  0299                     	;# 
   839  029A                     	;# 
   840  029B                     	;# 
   841  029C                     	;# 
   842  029C                     	;# 
   843  029D                     	;# 
   844  030C                     	;# 
   845  030C                     	;# 
   846  030D                     	;# 
   847  030E                     	;# 
   848  030F                     	;# 
   849  0310                     	;# 
   850  0310                     	;# 
   851  0311                     	;# 
   852  0312                     	;# 
   853  0313                     	;# 
   854  0314                     	;# 
   855  0314                     	;# 
   856  0315                     	;# 
   857  0316                     	;# 
   858  0317                     	;# 
   859  0318                     	;# 
   860  0318                     	;# 
   861  0319                     	;# 
   862  031A                     	;# 
   863  031B                     	;# 
   864  031C                     	;# 
   865  031C                     	;# 
   866  031D                     	;# 
   867  031E                     	;# 
   868  031F                     	;# 
   869  038C                     	;# 
   870  038C                     	;# 
   871  038D                     	;# 
   872  038E                     	;# 
   873  0390                     	;# 
   874  0390                     	;# 
   875  0391                     	;# 
   876  0392                     	;# 
   877  040C                     	;# 
   878  040D                     	;# 
   879  040E                     	;# 
   880  040F                     	;# 
   881  0410                     	;# 
   882  0411                     	;# 
   883  0416                     	;# 
   884  0416                     	;# 
   885  0417                     	;# 
   886  0418                     	;# 
   887  0418                     	;# 
   888  0419                     	;# 
   889  041A                     	;# 
   890  041A                     	;# 
   891  041B                     	;# 
   892  041C                     	;# 
   893  041C                     	;# 
   894  041D                     	;# 
   895  041E                     	;# 
   896  041F                     	;# 
   897  048C                     	;# 
   898  048C                     	;# 
   899  048D                     	;# 
   900  048E                     	;# 
   901  048F                     	;# 
   902  048F                     	;# 
   903  0490                     	;# 
   904  0491                     	;# 
   905  0492                     	;# 
   906  0492                     	;# 
   907  0493                     	;# 
   908  0494                     	;# 
   909  0495                     	;# 
   910  0495                     	;# 
   911  0496                     	;# 
   912  0497                     	;# 
   913  0498                     	;# 
   914  0499                     	;# 
   915  049A                     	;# 
   916  049B                     	;# 
   917  049C                     	;# 
   918  049D                     	;# 
   919  050C                     	;# 
   920  050C                     	;# 
   921  050D                     	;# 
   922  050E                     	;# 
   923  050F                     	;# 
   924  050F                     	;# 
   925  0510                     	;# 
   926  0511                     	;# 
   927  0512                     	;# 
   928  0512                     	;# 
   929  0513                     	;# 
   930  0514                     	;# 
   931  0515                     	;# 
   932  0515                     	;# 
   933  0516                     	;# 
   934  0517                     	;# 
   935  0518                     	;# 
   936  0519                     	;# 
   937  051A                     	;# 
   938  051B                     	;# 
   939  051C                     	;# 
   940  051D                     	;# 
   941  058C                     	;# 
   942  058C                     	;# 
   943  058D                     	;# 
   944  058E                     	;# 
   945  058F                     	;# 
   946  058F                     	;# 
   947  0590                     	;# 
   948  0591                     	;# 
   949  0592                     	;# 
   950  0593                     	;# 
   951  060C                     	;# 
   952  060D                     	;# 
   953  060E                     	;# 
   954  060F                     	;# 
   955  0610                     	;# 
   956  0611                     	;# 
   957  0612                     	;# 
   958  0613                     	;# 
   959  0614                     	;# 
   960  0616                     	;# 
   961  0617                     	;# 
   962  0618                     	;# 
   963  0619                     	;# 
   964  061A                     	;# 
   965  061B                     	;# 
   966  061C                     	;# 
   967  061D                     	;# 
   968  061E                     	;# 
   969  068C                     	;# 
   970  068D                     	;# 
   971  068E                     	;# 
   972  068F                     	;# 
   973  0690                     	;# 
   974  0691                     	;# 
   975  0692                     	;# 
   976  0693                     	;# 
   977  0694                     	;# 
   978  070C                     	;# 
   979  070D                     	;# 
   980  070E                     	;# 
   981  070F                     	;# 
   982  0710                     	;# 
   983  0711                     	;# 
   984  0712                     	;# 
   985  0713                     	;# 
   986  0714                     	;# 
   987  0716                     	;# 
   988  0717                     	;# 
   989  0718                     	;# 
   990  0719                     	;# 
   991  071A                     	;# 
   992  071B                     	;# 
   993  071C                     	;# 
   994  071D                     	;# 
   995  071E                     	;# 
   996  0796                     	;# 
   997  0797                     	;# 
   998  0798                     	;# 
   999  0799                     	;# 
  1000  079A                     	;# 
  1001  079B                     	;# 
  1002  080C                     	;# 
  1003  080D                     	;# 
  1004  080E                     	;# 
  1005  080F                     	;# 
  1006  0810                     	;# 
  1007  0811                     	;# 
  1008  0812                     	;# 
  1009  0813                     	;# 
  1010  0814                     	;# 
  1011  081A                     	;# 
  1012  081B                     	;# 
  1013  081C                     	;# 
  1014  081D                     	;# 
  1015  081E                     	;# 
  1016  081F                     	;# 
  1017  088C                     	;# 
  1018  088D                     	;# 
  1019  088E                     	;# 
  1020  088F                     	;# 
  1021  0890                     	;# 
  1022  0891                     	;# 
  1023  0892                     	;# 
  1024  0893                     	;# 
  1025  0895                     	;# 
  1026  0896                     	;# 
  1027  0897                     	;# 
  1028  0898                     	;# 
  1029  0899                     	;# 
  1030  089A                     	;# 
  1031  089B                     	;# 
  1032  090C                     	;# 
  1033  090E                     	;# 
  1034  090F                     	;# 
  1035  091F                     	;# 
  1036  091F                     	;# 
  1037  098F                     	;# 
  1038  098F                     	;# 
  1039  0990                     	;# 
  1040  0991                     	;# 
  1041  0992                     	;# 
  1042  0993                     	;# 
  1043  0994                     	;# 
  1044  0995                     	;# 
  1045  0996                     	;# 
  1046  0997                     	;# 
  1047  0E0F                     	;# 
  1048  0E10                     	;# 
  1049  0E11                     	;# 
  1050  0E12                     	;# 
  1051  0E13                     	;# 
  1052  0E14                     	;# 
  1053  0E15                     	;# 
  1054  0E16                     	;# 
  1055  0E17                     	;# 
  1056  0E18                     	;# 
  1057  0E19                     	;# 
  1058  0E1A                     	;# 
  1059  0E1B                     	;# 
  1060  0E1C                     	;# 
  1061  0E1D                     	;# 
  1062  0E1E                     	;# 
  1063  0E1F                     	;# 
  1064  0E20                     	;# 
  1065  0E21                     	;# 
  1066  0E22                     	;# 
  1067  0E23                     	;# 
  1068  0E24                     	;# 
  1069  0E25                     	;# 
  1070  0E26                     	;# 
  1071  0E27                     	;# 
  1072  0E28                     	;# 
  1073  0E29                     	;# 
  1074  0E2A                     	;# 
  1075  0E2B                     	;# 
  1076  0E2C                     	;# 
  1077  0E2D                     	;# 
  1078  0E2E                     	;# 
  1079  0E2F                     	;# 
  1080  0E30                     	;# 
  1081  0E31                     	;# 
  1082  0E32                     	;# 
  1083  0E33                     	;# 
  1084  0E34                     	;# 
  1085  0E35                     	;# 
  1086  0E36                     	;# 
  1087  0E37                     	;# 
  1088  0E8F                     	;# 
  1089  0E90                     	;# 
  1090  0E91                     	;# 
  1091  0E92                     	;# 
  1092  0E93                     	;# 
  1093  0E94                     	;# 
  1094  0E95                     	;# 
  1095  0E96                     	;# 
  1096  0E97                     	;# 
  1097  0E9C                     	;# 
  1098  0E9D                     	;# 
  1099  0E9E                     	;# 
  1100  0EA1                     	;# 
  1101  0EA2                     	;# 
  1102  0EA3                     	;# 
  1103  0EA4                     	;# 
  1104  0EA5                     	;# 
  1105  0EA9                     	;# 
  1106  0EAA                     	;# 
  1107  0EAB                     	;# 
  1108  0EAC                     	;# 
  1109  0EB1                     	;# 
  1110  0EB2                     	;# 
  1111  0EB3                     	;# 
  1112  0EB8                     	;# 
  1113  0EB9                     	;# 
  1114  0EBA                     	;# 
  1115  0EBB                     	;# 
  1116  0EBC                     	;# 
  1117  0EBD                     	;# 
  1118  0EBE                     	;# 
  1119  0EC3                     	;# 
  1120  0EC5                     	;# 
  1121  0EC6                     	;# 
  1122  0EC7                     	;# 
  1123  0EC8                     	;# 
  1124  0EC9                     	;# 
  1125  0ECA                     	;# 
  1126  0ECB                     	;# 
  1127  0ECC                     	;# 
  1128  0F10                     	;# 
  1129  0F11                     	;# 
  1130  0F12                     	;# 
  1131  0F13                     	;# 
  1132  0F14                     	;# 
  1133  0F15                     	;# 
  1134  0F16                     	;# 
  1135  0F17                     	;# 
  1136  0F18                     	;# 
  1137  0F19                     	;# 
  1138  0F1A                     	;# 
  1139  0F1B                     	;# 
  1140  0F1C                     	;# 
  1141  0F1D                     	;# 
  1142  0F1E                     	;# 
  1143  0F1F                     	;# 
  1144  0F20                     	;# 
  1145  0F21                     	;# 
  1146  0F22                     	;# 
  1147  0F23                     	;# 
  1148  0F24                     	;# 
  1149  0F25                     	;# 
  1150  0F26                     	;# 
  1151  0F27                     	;# 
  1152  0F28                     	;# 
  1153  0F29                     	;# 
  1154  0F2A                     	;# 
  1155  0F2B                     	;# 
  1156  0F2C                     	;# 
  1157  0F2D                     	;# 
  1158  0F2E                     	;# 
  1159  0F2F                     	;# 
  1160  0F30                     	;# 
  1161  0F31                     	;# 
  1162  0F32                     	;# 
  1163  0F38                     	;# 
  1164  0F39                     	;# 
  1165  0F3A                     	;# 
  1166  0F3B                     	;# 
  1167  0F3C                     	;# 
  1168  0F3D                     	;# 
  1169  0F3E                     	;# 
  1170  0F3F                     	;# 
  1171  0F40                     	;# 
  1172  0F41                     	;# 
  1173  0F43                     	;# 
  1174  0F44                     	;# 
  1175  0F45                     	;# 
  1176  0F46                     	;# 
  1177  0F47                     	;# 
  1178  0F48                     	;# 
  1179  0F49                     	;# 
  1180  0F4A                     	;# 
  1181  0F4B                     	;# 
  1182  0F4C                     	;# 
  1183  0F4E                     	;# 
  1184  0F4F                     	;# 
  1185  0F50                     	;# 
  1186  0F51                     	;# 
  1187  0F52                     	;# 
  1188  0F53                     	;# 
  1189  0F54                     	;# 
  1190  0F55                     	;# 
  1191  0F56                     	;# 
  1192  0F57                     	;# 
  1193  0F59                     	;# 
  1194  0F5A                     	;# 
  1195  0F5B                     	;# 
  1196  0F5C                     	;# 
  1197  0F5D                     	;# 
  1198  0F61                     	;# 
  1199  0F62                     	;# 
  1200  0F64                     	;# 
  1201  0F65                     	;# 
  1202  0F66                     	;# 
  1203  0F67                     	;# 
  1204  0F68                     	;# 
  1205  0F69                     	;# 
  1206  0F6A                     	;# 
  1207  0F6B                     	;# 
  1208  0F6C                     	;# 
  1209  0F6D                     	;# 
  1210  0FE4                     	;# 
  1211  0FE5                     	;# 
  1212  0FE6                     	;# 
  1213  0FE7                     	;# 
  1214  0FE8                     	;# 
  1215  0FE9                     	;# 
  1216  0FEA                     	;# 
  1217  0FEB                     	;# 
  1218  0FED                     	;# 
  1219  0FEE                     	;# 
  1220  0FEF                     	;# 
  1221  0000                     	;# 
  1222  0001                     	;# 
  1223  0002                     	;# 
  1224  0003                     	;# 
  1225  0004                     	;# 
  1226  0005                     	;# 
  1227  0006                     	;# 
  1228  0007                     	;# 
  1229  0008                     	;# 
  1230  0009                     	;# 
  1231  000A                     	;# 
  1232  000B                     	;# 
  1233  000C                     	;# 
  1234  000D                     	;# 
  1235  000E                     	;# 
  1236  000F                     	;# 
  1237  0010                     	;# 
  1238  0011                     	;# 
  1239  0012                     	;# 
  1240  0013                     	;# 
  1241  0014                     	;# 
  1242  0015                     	;# 
  1243  0016                     	;# 
  1244  0017                     	;# 
  1245  0018                     	;# 
  1246  0019                     	;# 
  1247  001A                     	;# 
  1248  001C                     	;# 
  1249  001C                     	;# 
  1250  001D                     	;# 
  1251  001D                     	;# 
  1252  001E                     	;# 
  1253  001F                     	;# 
  1254  008C                     	;# 
  1255  008C                     	;# 
  1256  008D                     	;# 
  1257  008E                     	;# 
  1258  008E                     	;# 
  1259  008F                     	;# 
  1260  0090                     	;# 
  1261  0090                     	;# 
  1262  0091                     	;# 
  1263  0093                     	;# 
  1264  0094                     	;# 
  1265  0095                     	;# 
  1266  0096                     	;# 
  1267  0097                     	;# 
  1268  0098                     	;# 
  1269  0099                     	;# 
  1270  009A                     	;# 
  1271  009B                     	;# 
  1272  009C                     	;# 
  1273  009D                     	;# 
  1274  009E                     	;# 
  1275  010C                     	;# 
  1276  010D                     	;# 
  1277  010E                     	;# 
  1278  010E                     	;# 
  1279  010F                     	;# 
  1280  0110                     	;# 
  1281  0110                     	;# 
  1282  0111                     	;# 
  1283  0112                     	;# 
  1284  0112                     	;# 
  1285  0113                     	;# 
  1286  0114                     	;# 
  1287  0114                     	;# 
  1288  0115                     	;# 
  1289  0116                     	;# 
  1290  0116                     	;# 
  1291  0117                     	;# 
  1292  0119                     	;# 
  1293  0119                     	;# 
  1294  0119                     	;# 
  1295  011A                     	;# 
  1296  011A                     	;# 
  1297  011A                     	;# 
  1298  011B                     	;# 
  1299  011B                     	;# 
  1300  011B                     	;# 
  1301  011B                     	;# 
  1302  011B                     	;# 
  1303  011C                     	;# 
  1304  011C                     	;# 
  1305  011C                     	;# 
  1306  011D                     	;# 
  1307  011D                     	;# 
  1308  011D                     	;# 
  1309  011E                     	;# 
  1310  011E                     	;# 
  1311  011E                     	;# 
  1312  011F                     	;# 
  1313  011F                     	;# 
  1314  011F                     	;# 
  1315  011F                     	;# 
  1316  011F                     	;# 
  1317  018C                     	;# 
  1318  018D                     	;# 
  1319  018E                     	;# 
  1320  018F                     	;# 
  1321  0190                     	;# 
  1322  0191                     	;# 
  1323  0192                     	;# 
  1324  0196                     	;# 
  1325  0197                     	;# 
  1326  0198                     	;# 
  1327  0199                     	;# 
  1328  019A                     	;# 
  1329  019B                     	;# 
  1330  019C                     	;# 
  1331  020C                     	;# 
  1332  020C                     	;# 
  1333  020D                     	;# 
  1334  020E                     	;# 
  1335  020F                     	;# 
  1336  020F                     	;# 
  1337  0210                     	;# 
  1338  0210                     	;# 
  1339  0211                     	;# 
  1340  0211                     	;# 
  1341  0212                     	;# 
  1342  0212                     	;# 
  1343  0213                     	;# 
  1344  0214                     	;# 
  1345  0215                     	;# 
  1346  0215                     	;# 
  1347  0216                     	;# 
  1348  0216                     	;# 
  1349  0217                     	;# 
  1350  0217                     	;# 
  1351  0218                     	;# 
  1352  0218                     	;# 
  1353  0219                     	;# 
  1354  021A                     	;# 
  1355  021B                     	;# 
  1356  021B                     	;# 
  1357  021C                     	;# 
  1358  021C                     	;# 
  1359  021D                     	;# 
  1360  021D                     	;# 
  1361  021E                     	;# 
  1362  021F                     	;# 
  1363  028C                     	;# 
  1364  028C                     	;# 
  1365  028D                     	;# 
  1366  028D                     	;# 
  1367  028E                     	;# 
  1368  028F                     	;# 
  1369  0290                     	;# 
  1370  0290                     	;# 
  1371  0291                     	;# 
  1372  0292                     	;# 
  1373  0292                     	;# 
  1374  0293                     	;# 
  1375  0293                     	;# 
  1376  0294                     	;# 
  1377  0295                     	;# 
  1378  0296                     	;# 
  1379  0296                     	;# 
  1380  0297                     	;# 
  1381  0298                     	;# 
  1382  0298                     	;# 
  1383  0299                     	;# 
  1384  0299                     	;# 
  1385  029A                     	;# 
  1386  029B                     	;# 
  1387  029C                     	;# 
  1388  029C                     	;# 
  1389  029D                     	;# 
  1390  030C                     	;# 
  1391  030C                     	;# 
  1392  030D                     	;# 
  1393  030E                     	;# 
  1394  030F                     	;# 
  1395  0310                     	;# 
  1396  0310                     	;# 
  1397  0311                     	;# 
  1398  0312                     	;# 
  1399  0313                     	;# 
  1400  0314                     	;# 
  1401  0314                     	;# 
  1402  0315                     	;# 
  1403  0316                     	;# 
  1404  0317                     	;# 
  1405  0318                     	;# 
  1406  0318                     	;# 
  1407  0319                     	;# 
  1408  031A                     	;# 
  1409  031B                     	;# 
  1410  031C                     	;# 
  1411  031C                     	;# 
  1412  031D                     	;# 
  1413  031E                     	;# 
  1414  031F                     	;# 
  1415  038C                     	;# 
  1416  038C                     	;# 
  1417  038D                     	;# 
  1418  038E                     	;# 
  1419  0390                     	;# 
  1420  0390                     	;# 
  1421  0391                     	;# 
  1422  0392                     	;# 
  1423  040C                     	;# 
  1424  040D                     	;# 
  1425  040E                     	;# 
  1426  040F                     	;# 
  1427  0410                     	;# 
  1428  0411                     	;# 
  1429  0416                     	;# 
  1430  0416                     	;# 
  1431  0417                     	;# 
  1432  0418                     	;# 
  1433  0418                     	;# 
  1434  0419                     	;# 
  1435  041A                     	;# 
  1436  041A                     	;# 
  1437  041B                     	;# 
  1438  041C                     	;# 
  1439  041C                     	;# 
  1440  041D                     	;# 
  1441  041E                     	;# 
  1442  041F                     	;# 
  1443  048C                     	;# 
  1444  048C                     	;# 
  1445  048D                     	;# 
  1446  048E                     	;# 
  1447  048F                     	;# 
  1448  048F                     	;# 
  1449  0490                     	;# 
  1450  0491                     	;# 
  1451  0492                     	;# 
  1452  0492                     	;# 
  1453  0493                     	;# 
  1454  0494                     	;# 
  1455  0495                     	;# 
  1456  0495                     	;# 
  1457  0496                     	;# 
  1458  0497                     	;# 
  1459  0498                     	;# 
  1460  0499                     	;# 
  1461  049A                     	;# 
  1462  049B                     	;# 
  1463  049C                     	;# 
  1464  049D                     	;# 
  1465  050C                     	;# 
  1466  050C                     	;# 
  1467  050D                     	;# 
  1468  050E                     	;# 
  1469  050F                     	;# 
  1470  050F                     	;# 
  1471  0510                     	;# 
  1472  0511                     	;# 
  1473  0512                     	;# 
  1474  0512                     	;# 
  1475  0513                     	;# 
  1476  0514                     	;# 
  1477  0515                     	;# 
  1478  0515                     	;# 
  1479  0516                     	;# 
  1480  0517                     	;# 
  1481  0518                     	;# 
  1482  0519                     	;# 
  1483  051A                     	;# 
  1484  051B                     	;# 
  1485  051C                     	;# 
  1486  051D                     	;# 
  1487  058C                     	;# 
  1488  058C                     	;# 
  1489  058D                     	;# 
  1490  058E                     	;# 
  1491  058F                     	;# 
  1492  058F                     	;# 
  1493  0590                     	;# 
  1494  0591                     	;# 
  1495  0592                     	;# 
  1496  0593                     	;# 
  1497  060C                     	;# 
  1498  060D                     	;# 
  1499  060E                     	;# 
  1500  060F                     	;# 
  1501  0610                     	;# 
  1502  0611                     	;# 
  1503  0612                     	;# 
  1504  0613                     	;# 
  1505  0614                     	;# 
  1506  0616                     	;# 
  1507  0617                     	;# 
  1508  0618                     	;# 
  1509  0619                     	;# 
  1510  061A                     	;# 
  1511  061B                     	;# 
  1512  061C                     	;# 
  1513  061D                     	;# 
  1514  061E                     	;# 
  1515  068C                     	;# 
  1516  068D                     	;# 
  1517  068E                     	;# 
  1518  068F                     	;# 
  1519  0690                     	;# 
  1520  0691                     	;# 
  1521  0692                     	;# 
  1522  0693                     	;# 
  1523  0694                     	;# 
  1524  070C                     	;# 
  1525  070D                     	;# 
  1526  070E                     	;# 
  1527  070F                     	;# 
  1528  0710                     	;# 
  1529  0711                     	;# 
  1530  0712                     	;# 
  1531  0713                     	;# 
  1532  0714                     	;# 
  1533  0716                     	;# 
  1534  0717                     	;# 
  1535  0718                     	;# 
  1536  0719                     	;# 
  1537  071A                     	;# 
  1538  071B                     	;# 
  1539  071C                     	;# 
  1540  071D                     	;# 
  1541  071E                     	;# 
  1542  0796                     	;# 
  1543  0797                     	;# 
  1544  0798                     	;# 
  1545  0799                     	;# 
  1546  079A                     	;# 
  1547  079B                     	;# 
  1548  080C                     	;# 
  1549  080D                     	;# 
  1550  080E                     	;# 
  1551  080F                     	;# 
  1552  0810                     	;# 
  1553  0811                     	;# 
  1554  0812                     	;# 
  1555  0813                     	;# 
  1556  0814                     	;# 
  1557  081A                     	;# 
  1558  081B                     	;# 
  1559  081C                     	;# 
  1560  081D                     	;# 
  1561  081E                     	;# 
  1562  081F                     	;# 
  1563  088C                     	;# 
  1564  088D                     	;# 
  1565  088E                     	;# 
  1566  088F                     	;# 
  1567  0890                     	;# 
  1568  0891                     	;# 
  1569  0892                     	;# 
  1570  0893                     	;# 
  1571  0895                     	;# 
  1572  0896                     	;# 
  1573  0897                     	;# 
  1574  0898                     	;# 
  1575  0899                     	;# 
  1576  089A                     	;# 
  1577  089B                     	;# 
  1578  090C                     	;# 
  1579  090E                     	;# 
  1580  090F                     	;# 
  1581  091F                     	;# 
  1582  091F                     	;# 
  1583  098F                     	;# 
  1584  098F                     	;# 
  1585  0990                     	;# 
  1586  0991                     	;# 
  1587  0992                     	;# 
  1588  0993                     	;# 
  1589  0994                     	;# 
  1590  0995                     	;# 
  1591  0996                     	;# 
  1592  0997                     	;# 
  1593  0E0F                     	;# 
  1594  0E10                     	;# 
  1595  0E11                     	;# 
  1596  0E12                     	;# 
  1597  0E13                     	;# 
  1598  0E14                     	;# 
  1599  0E15                     	;# 
  1600  0E16                     	;# 
  1601  0E17                     	;# 
  1602  0E18                     	;# 
  1603  0E19                     	;# 
  1604  0E1A                     	;# 
  1605  0E1B                     	;# 
  1606  0E1C                     	;# 
  1607  0E1D                     	;# 
  1608  0E1E                     	;# 
  1609  0E1F                     	;# 
  1610  0E20                     	;# 
  1611  0E21                     	;# 
  1612  0E22                     	;# 
  1613  0E23                     	;# 
  1614  0E24                     	;# 
  1615  0E25                     	;# 
  1616  0E26                     	;# 
  1617  0E27                     	;# 
  1618  0E28                     	;# 
  1619  0E29                     	;# 
  1620  0E2A                     	;# 
  1621  0E2B                     	;# 
  1622  0E2C                     	;# 
  1623  0E2D                     	;# 
  1624  0E2E                     	;# 
  1625  0E2F                     	;# 
  1626  0E30                     	;# 
  1627  0E31                     	;# 
  1628  0E32                     	;# 
  1629  0E33                     	;# 
  1630  0E34                     	;# 
  1631  0E35                     	;# 
  1632  0E36                     	;# 
  1633  0E37                     	;# 
  1634  0E8F                     	;# 
  1635  0E90                     	;# 
  1636  0E91                     	;# 
  1637  0E92                     	;# 
  1638  0E93                     	;# 
  1639  0E94                     	;# 
  1640  0E95                     	;# 
  1641  0E96                     	;# 
  1642  0E97                     	;# 
  1643  0E9C                     	;# 
  1644  0E9D                     	;# 
  1645  0E9E                     	;# 
  1646  0EA1                     	;# 
  1647  0EA2                     	;# 
  1648  0EA3                     	;# 
  1649  0EA4                     	;# 
  1650  0EA5                     	;# 
  1651  0EA9                     	;# 
  1652  0EAA                     	;# 
  1653  0EAB                     	;# 
  1654  0EAC                     	;# 
  1655  0EB1                     	;# 
  1656  0EB2                     	;# 
  1657  0EB3                     	;# 
  1658  0EB8                     	;# 
  1659  0EB9                     	;# 
  1660  0EBA                     	;# 
  1661  0EBB                     	;# 
  1662  0EBC                     	;# 
  1663  0EBD                     	;# 
  1664  0EBE                     	;# 
  1665  0EC3                     	;# 
  1666  0EC5                     	;# 
  1667  0EC6                     	;# 
  1668  0EC7                     	;# 
  1669  0EC8                     	;# 
  1670  0EC9                     	;# 
  1671  0ECA                     	;# 
  1672  0ECB                     	;# 
  1673  0ECC                     	;# 
  1674  0F10                     	;# 
  1675  0F11                     	;# 
  1676  0F12                     	;# 
  1677  0F13                     	;# 
  1678  0F14                     	;# 
  1679  0F15                     	;# 
  1680  0F16                     	;# 
  1681  0F17                     	;# 
  1682  0F18                     	;# 
  1683  0F19                     	;# 
  1684  0F1A                     	;# 
  1685  0F1B                     	;# 
  1686  0F1C                     	;# 
  1687  0F1D                     	;# 
  1688  0F1E                     	;# 
  1689  0F1F                     	;# 
  1690  0F20                     	;# 
  1691  0F21                     	;# 
  1692  0F22                     	;# 
  1693  0F23                     	;# 
  1694  0F24                     	;# 
  1695  0F25                     	;# 
  1696  0F26                     	;# 
  1697  0F27                     	;# 
  1698  0F28                     	;# 
  1699  0F29                     	;# 
  1700  0F2A                     	;# 
  1701  0F2B                     	;# 
  1702  0F2C                     	;# 
  1703  0F2D                     	;# 
  1704  0F2E                     	;# 
  1705  0F2F                     	;# 
  1706  0F30                     	;# 
  1707  0F31                     	;# 
  1708  0F32                     	;# 
  1709  0F38                     	;# 
  1710  0F39                     	;# 
  1711  0F3A                     	;# 
  1712  0F3B                     	;# 
  1713  0F3C                     	;# 
  1714  0F3D                     	;# 
  1715  0F3E                     	;# 
  1716  0F3F                     	;# 
  1717  0F40                     	;# 
  1718  0F41                     	;# 
  1719  0F43                     	;# 
  1720  0F44                     	;# 
  1721  0F45                     	;# 
  1722  0F46                     	;# 
  1723  0F47                     	;# 
  1724  0F48                     	;# 
  1725  0F49                     	;# 
  1726  0F4A                     	;# 
  1727  0F4B                     	;# 
  1728  0F4C                     	;# 
  1729  0F4E                     	;# 
  1730  0F4F                     	;# 
  1731  0F50                     	;# 
  1732  0F51                     	;# 
  1733  0F52                     	;# 
  1734  0F53                     	;# 
  1735  0F54                     	;# 
  1736  0F55                     	;# 
  1737  0F56                     	;# 
  1738  0F57                     	;# 
  1739  0F59                     	;# 
  1740  0F5A                     	;# 
  1741  0F5B                     	;# 
  1742  0F5C                     	;# 
  1743  0F5D                     	;# 
  1744  0F61                     	;# 
  1745  0F62                     	;# 
  1746  0F64                     	;# 
  1747  0F65                     	;# 
  1748  0F66                     	;# 
  1749  0F67                     	;# 
  1750  0F68                     	;# 
  1751  0F69                     	;# 
  1752  0F6A                     	;# 
  1753  0F6B                     	;# 
  1754  0F6C                     	;# 
  1755  0F6D                     	;# 
  1756  0FE4                     	;# 
  1757  0FE5                     	;# 
  1758  0FE6                     	;# 
  1759  0FE7                     	;# 
  1760  0FE8                     	;# 
  1761  0FE9                     	;# 
  1762  0FEA                     	;# 
  1763  0FEB                     	;# 
  1764  0FED                     	;# 
  1765  0FEE                     	;# 
  1766  0FEF                     	;# 
  1767  0000                     	;# 
  1768  0001                     	;# 
  1769  0002                     	;# 
  1770  0003                     	;# 
  1771  0004                     	;# 
  1772  0005                     	;# 
  1773  0006                     	;# 
  1774  0007                     	;# 
  1775  0008                     	;# 
  1776  0009                     	;# 
  1777  000A                     	;# 
  1778  000B                     	;# 
  1779  000C                     	;# 
  1780  000D                     	;# 
  1781  000E                     	;# 
  1782  000F                     	;# 
  1783  0010                     	;# 
  1784  0011                     	;# 
  1785  0012                     	;# 
  1786  0013                     	;# 
  1787  0014                     	;# 
  1788  0015                     	;# 
  1789  0016                     	;# 
  1790  0017                     	;# 
  1791  0018                     	;# 
  1792  0019                     	;# 
  1793  001A                     	;# 
  1794  001C                     	;# 
  1795  001C                     	;# 
  1796  001D                     	;# 
  1797  001D                     	;# 
  1798  001E                     	;# 
  1799  001F                     	;# 
  1800  008C                     	;# 
  1801  008C                     	;# 
  1802  008D                     	;# 
  1803  008E                     	;# 
  1804  008E                     	;# 
  1805  008F                     	;# 
  1806  0090                     	;# 
  1807  0090                     	;# 
  1808  0091                     	;# 
  1809  0093                     	;# 
  1810  0094                     	;# 
  1811  0095                     	;# 
  1812  0096                     	;# 
  1813  0097                     	;# 
  1814  0098                     	;# 
  1815  0099                     	;# 
  1816  009A                     	;# 
  1817  009B                     	;# 
  1818  009C                     	;# 
  1819  009D                     	;# 
  1820  009E                     	;# 
  1821  010C                     	;# 
  1822  010D                     	;# 
  1823  010E                     	;# 
  1824  010E                     	;# 
  1825  010F                     	;# 
  1826  0110                     	;# 
  1827  0110                     	;# 
  1828  0111                     	;# 
  1829  0112                     	;# 
  1830  0112                     	;# 
  1831  0113                     	;# 
  1832  0114                     	;# 
  1833  0114                     	;# 
  1834  0115                     	;# 
  1835  0116                     	;# 
  1836  0116                     	;# 
  1837  0117                     	;# 
  1838  0119                     	;# 
  1839  0119                     	;# 
  1840  0119                     	;# 
  1841  011A                     	;# 
  1842  011A                     	;# 
  1843  011A                     	;# 
  1844  011B                     	;# 
  1845  011B                     	;# 
  1846  011B                     	;# 
  1847  011B                     	;# 
  1848  011B                     	;# 
  1849  011C                     	;# 
  1850  011C                     	;# 
  1851  011C                     	;# 
  1852  011D                     	;# 
  1853  011D                     	;# 
  1854  011D                     	;# 
  1855  011E                     	;# 
  1856  011E                     	;# 
  1857  011E                     	;# 
  1858  011F                     	;# 
  1859  011F                     	;# 
  1860  011F                     	;# 
  1861  011F                     	;# 
  1862  011F                     	;# 
  1863  018C                     	;# 
  1864  018D                     	;# 
  1865  018E                     	;# 
  1866  018F                     	;# 
  1867  0190                     	;# 
  1868  0191                     	;# 
  1869  0192                     	;# 
  1870  0196                     	;# 
  1871  0197                     	;# 
  1872  0198                     	;# 
  1873  0199                     	;# 
  1874  019A                     	;# 
  1875  019B                     	;# 
  1876  019C                     	;# 
  1877  020C                     	;# 
  1878  020C                     	;# 
  1879  020D                     	;# 
  1880  020E                     	;# 
  1881  020F                     	;# 
  1882  020F                     	;# 
  1883  0210                     	;# 
  1884  0210                     	;# 
  1885  0211                     	;# 
  1886  0211                     	;# 
  1887  0212                     	;# 
  1888  0212                     	;# 
  1889  0213                     	;# 
  1890  0214                     	;# 
  1891  0215                     	;# 
  1892  0215                     	;# 
  1893  0216                     	;# 
  1894  0216                     	;# 
  1895  0217                     	;# 
  1896  0217                     	;# 
  1897  0218                     	;# 
  1898  0218                     	;# 
  1899  0219                     	;# 
  1900  021A                     	;# 
  1901  021B                     	;# 
  1902  021B                     	;# 
  1903  021C                     	;# 
  1904  021C                     	;# 
  1905  021D                     	;# 
  1906  021D                     	;# 
  1907  021E                     	;# 
  1908  021F                     	;# 
  1909  028C                     	;# 
  1910  028C                     	;# 
  1911  028D                     	;# 
  1912  028D                     	;# 
  1913  028E                     	;# 
  1914  028F                     	;# 
  1915  0290                     	;# 
  1916  0290                     	;# 
  1917  0291                     	;# 
  1918  0292                     	;# 
  1919  0292                     	;# 
  1920  0293                     	;# 
  1921  0293                     	;# 
  1922  0294                     	;# 
  1923  0295                     	;# 
  1924  0296                     	;# 
  1925  0296                     	;# 
  1926  0297                     	;# 
  1927  0298                     	;# 
  1928  0298                     	;# 
  1929  0299                     	;# 
  1930  0299                     	;# 
  1931  029A                     	;# 
  1932  029B                     	;# 
  1933  029C                     	;# 
  1934  029C                     	;# 
  1935  029D                     	;# 
  1936  030C                     	;# 
  1937  030C                     	;# 
  1938  030D                     	;# 
  1939  030E                     	;# 
  1940  030F                     	;# 
  1941  0310                     	;# 
  1942  0310                     	;# 
  1943  0311                     	;# 
  1944  0312                     	;# 
  1945  0313                     	;# 
  1946  0314                     	;# 
  1947  0314                     	;# 
  1948  0315                     	;# 
  1949  0316                     	;# 
  1950  0317                     	;# 
  1951  0318                     	;# 
  1952  0318                     	;# 
  1953  0319                     	;# 
  1954  031A                     	;# 
  1955  031B                     	;# 
  1956  031C                     	;# 
  1957  031C                     	;# 
  1958  031D                     	;# 
  1959  031E                     	;# 
  1960  031F                     	;# 
  1961  038C                     	;# 
  1962  038C                     	;# 
  1963  038D                     	;# 
  1964  038E                     	;# 
  1965  0390                     	;# 
  1966  0390                     	;# 
  1967  0391                     	;# 
  1968  0392                     	;# 
  1969  040C                     	;# 
  1970  040D                     	;# 
  1971  040E                     	;# 
  1972  040F                     	;# 
  1973  0410                     	;# 
  1974  0411                     	;# 
  1975  0416                     	;# 
  1976  0416                     	;# 
  1977  0417                     	;# 
  1978  0418                     	;# 
  1979  0418                     	;# 
  1980  0419                     	;# 
  1981  041A                     	;# 
  1982  041A                     	;# 
  1983  041B                     	;# 
  1984  041C                     	;# 
  1985  041C                     	;# 
  1986  041D                     	;# 
  1987  041E                     	;# 
  1988  041F                     	;# 
  1989  048C                     	;# 
  1990  048C                     	;# 
  1991  048D                     	;# 
  1992  048E                     	;# 
  1993  048F                     	;# 
  1994  048F                     	;# 
  1995  0490                     	;# 
  1996  0491                     	;# 
  1997  0492                     	;# 
  1998  0492                     	;# 
  1999  0493                     	;# 
  2000  0494                     	;# 
  2001  0495                     	;# 
  2002  0495                     	;# 
  2003  0496                     	;# 
  2004  0497                     	;# 
  2005  0498                     	;# 
  2006  0499                     	;# 
  2007  049A                     	;# 
  2008  049B                     	;# 
  2009  049C                     	;# 
  2010  049D                     	;# 
  2011  050C                     	;# 
  2012  050C                     	;# 
  2013  050D                     	;# 
  2014  050E                     	;# 
  2015  050F                     	;# 
  2016  050F                     	;# 
  2017  0510                     	;# 
  2018  0511                     	;# 
  2019  0512                     	;# 
  2020  0512                     	;# 
  2021  0513                     	;# 
  2022  0514                     	;# 
  2023  0515                     	;# 
  2024  0515                     	;# 
  2025  0516                     	;# 
  2026  0517                     	;# 
  2027  0518                     	;# 
  2028  0519                     	;# 
  2029  051A                     	;# 
  2030  051B                     	;# 
  2031  051C                     	;# 
  2032  051D                     	;# 
  2033  058C                     	;# 
  2034  058C                     	;# 
  2035  058D                     	;# 
  2036  058E                     	;# 
  2037  058F                     	;# 
  2038  058F                     	;# 
  2039  0590                     	;# 
  2040  0591                     	;# 
  2041  0592                     	;# 
  2042  0593                     	;# 
  2043  060C                     	;# 
  2044  060D                     	;# 
  2045  060E                     	;# 
  2046  060F                     	;# 
  2047  0610                     	;# 
  2048  0611                     	;# 
  2049  0612                     	;# 
  2050  0613                     	;# 
  2051  0614                     	;# 
  2052  0616                     	;# 
  2053  0617                     	;# 
  2054  0618                     	;# 
  2055  0619                     	;# 
  2056  061A                     	;# 
  2057  061B                     	;# 
  2058  061C                     	;# 
  2059  061D                     	;# 
  2060  061E                     	;# 
  2061  068C                     	;# 
  2062  068D                     	;# 
  2063  068E                     	;# 
  2064  068F                     	;# 
  2065  0690                     	;# 
  2066  0691                     	;# 
  2067  0692                     	;# 
  2068  0693                     	;# 
  2069  0694                     	;# 
  2070  070C                     	;# 
  2071  070D                     	;# 
  2072  070E                     	;# 
  2073  070F                     	;# 
  2074  0710                     	;# 
  2075  0711                     	;# 
  2076  0712                     	;# 
  2077  0713                     	;# 
  2078  0714                     	;# 
  2079  0716                     	;# 
  2080  0717                     	;# 
  2081  0718                     	;# 
  2082  0719                     	;# 
  2083  071A                     	;# 
  2084  071B                     	;# 
  2085  071C                     	;# 
  2086  071D                     	;# 
  2087  071E                     	;# 
  2088  0796                     	;# 
  2089  0797                     	;# 
  2090  0798                     	;# 
  2091  0799                     	;# 
  2092  079A                     	;# 
  2093  079B                     	;# 
  2094  080C                     	;# 
  2095  080D                     	;# 
  2096  080E                     	;# 
  2097  080F                     	;# 
  2098  0810                     	;# 
  2099  0811                     	;# 
  2100  0812                     	;# 
  2101  0813                     	;# 
  2102  0814                     	;# 
  2103  081A                     	;# 
  2104  081B                     	;# 
  2105  081C                     	;# 
  2106  081D                     	;# 
  2107  081E                     	;# 
  2108  081F                     	;# 
  2109  088C                     	;# 
  2110  088D                     	;# 
  2111  088E                     	;# 
  2112  088F                     	;# 
  2113  0890                     	;# 
  2114  0891                     	;# 
  2115  0892                     	;# 
  2116  0893                     	;# 
  2117  0895                     	;# 
  2118  0896                     	;# 
  2119  0897                     	;# 
  2120  0898                     	;# 
  2121  0899                     	;# 
  2122  089A                     	;# 
  2123  089B                     	;# 
  2124  090C                     	;# 
  2125  090E                     	;# 
  2126  090F                     	;# 
  2127  091F                     	;# 
  2128  091F                     	;# 
  2129  098F                     	;# 
  2130  098F                     	;# 
  2131  0990                     	;# 
  2132  0991                     	;# 
  2133  0992                     	;# 
  2134  0993                     	;# 
  2135  0994                     	;# 
  2136  0995                     	;# 
  2137  0996                     	;# 
  2138  0997                     	;# 
  2139  0E0F                     	;# 
  2140  0E10                     	;# 
  2141  0E11                     	;# 
  2142  0E12                     	;# 
  2143  0E13                     	;# 
  2144  0E14                     	;# 
  2145  0E15                     	;# 
  2146  0E16                     	;# 
  2147  0E17                     	;# 
  2148  0E18                     	;# 
  2149  0E19                     	;# 
  2150  0E1A                     	;# 
  2151  0E1B                     	;# 
  2152  0E1C                     	;# 
  2153  0E1D                     	;# 
  2154  0E1E                     	;# 
  2155  0E1F                     	;# 
  2156  0E20                     	;# 
  2157  0E21                     	;# 
  2158  0E22                     	;# 
  2159  0E23                     	;# 
  2160  0E24                     	;# 
  2161  0E25                     	;# 
  2162  0E26                     	;# 
  2163  0E27                     	;# 
  2164  0E28                     	;# 
  2165  0E29                     	;# 
  2166  0E2A                     	;# 
  2167  0E2B                     	;# 
  2168  0E2C                     	;# 
  2169  0E2D                     	;# 
  2170  0E2E                     	;# 
  2171  0E2F                     	;# 
  2172  0E30                     	;# 
  2173  0E31                     	;# 
  2174  0E32                     	;# 
  2175  0E33                     	;# 
  2176  0E34                     	;# 
  2177  0E35                     	;# 
  2178  0E36                     	;# 
  2179  0E37                     	;# 
  2180  0E8F                     	;# 
  2181  0E90                     	;# 
  2182  0E91                     	;# 
  2183  0E92                     	;# 
  2184  0E93                     	;# 
  2185  0E94                     	;# 
  2186  0E95                     	;# 
  2187  0E96                     	;# 
  2188  0E97                     	;# 
  2189  0E9C                     	;# 
  2190  0E9D                     	;# 
  2191  0E9E                     	;# 
  2192  0EA1                     	;# 
  2193  0EA2                     	;# 
  2194  0EA3                     	;# 
  2195  0EA4                     	;# 
  2196  0EA5                     	;# 
  2197  0EA9                     	;# 
  2198  0EAA                     	;# 
  2199  0EAB                     	;# 
  2200  0EAC                     	;# 
  2201  0EB1                     	;# 
  2202  0EB2                     	;# 
  2203  0EB3                     	;# 
  2204  0EB8                     	;# 
  2205  0EB9                     	;# 
  2206  0EBA                     	;# 
  2207  0EBB                     	;# 
  2208  0EBC                     	;# 
  2209  0EBD                     	;# 
  2210  0EBE                     	;# 
  2211  0EC3                     	;# 
  2212  0EC5                     	;# 
  2213  0EC6                     	;# 
  2214  0EC7                     	;# 
  2215  0EC8                     	;# 
  2216  0EC9                     	;# 
  2217  0ECA                     	;# 
  2218  0ECB                     	;# 
  2219  0ECC                     	;# 
  2220  0F10                     	;# 
  2221  0F11                     	;# 
  2222  0F12                     	;# 
  2223  0F13                     	;# 
  2224  0F14                     	;# 
  2225  0F15                     	;# 
  2226  0F16                     	;# 
  2227  0F17                     	;# 
  2228  0F18                     	;# 
  2229  0F19                     	;# 
  2230  0F1A                     	;# 
  2231  0F1B                     	;# 
  2232  0F1C                     	;# 
  2233  0F1D                     	;# 
  2234  0F1E                     	;# 
  2235  0F1F                     	;# 
  2236  0F20                     	;# 
  2237  0F21                     	;# 
  2238  0F22                     	;# 
  2239  0F23                     	;# 
  2240  0F24                     	;# 
  2241  0F25                     	;# 
  2242  0F26                     	;# 
  2243  0F27                     	;# 
  2244  0F28                     	;# 
  2245  0F29                     	;# 
  2246  0F2A                     	;# 
  2247  0F2B                     	;# 
  2248  0F2C                     	;# 
  2249  0F2D                     	;# 
  2250  0F2E                     	;# 
  2251  0F2F                     	;# 
  2252  0F30                     	;# 
  2253  0F31                     	;# 
  2254  0F32                     	;# 
  2255  0F38                     	;# 
  2256  0F39                     	;# 
  2257  0F3A                     	;# 
  2258  0F3B                     	;# 
  2259  0F3C                     	;# 
  2260  0F3D                     	;# 
  2261  0F3E                     	;# 
  2262  0F3F                     	;# 
  2263  0F40                     	;# 
  2264  0F41                     	;# 
  2265  0F43                     	;# 
  2266  0F44                     	;# 
  2267  0F45                     	;# 
  2268  0F46                     	;# 
  2269  0F47                     	;# 
  2270  0F48                     	;# 
  2271  0F49                     	;# 
  2272  0F4A                     	;# 
  2273  0F4B                     	;# 
  2274  0F4C                     	;# 
  2275  0F4E                     	;# 
  2276  0F4F                     	;# 
  2277  0F50                     	;# 
  2278  0F51                     	;# 
  2279  0F52                     	;# 
  2280  0F53                     	;# 
  2281  0F54                     	;# 
  2282  0F55                     	;# 
  2283  0F56                     	;# 
  2284  0F57                     	;# 
  2285  0F59                     	;# 
  2286  0F5A                     	;# 
  2287  0F5B                     	;# 
  2288  0F5C                     	;# 
  2289  0F5D                     	;# 
  2290  0F61                     	;# 
  2291  0F62                     	;# 
  2292  0F64                     	;# 
  2293  0F65                     	;# 
  2294  0F66                     	;# 
  2295  0F67                     	;# 
  2296  0F68                     	;# 
  2297  0F69                     	;# 
  2298  0F6A                     	;# 
  2299  0F6B                     	;# 
  2300  0F6C                     	;# 
  2301  0F6D                     	;# 
  2302  0FE4                     	;# 
  2303  0FE5                     	;# 
  2304  0FE6                     	;# 
  2305  0FE7                     	;# 
  2306  0FE8                     	;# 
  2307  0FE9                     	;# 
  2308  0FEA                     	;# 
  2309  0FEB                     	;# 
  2310  0FED                     	;# 
  2311  0FEE                     	;# 
  2312  0FEF                     	;# 
  2313  0000                     	;# 
  2314  0001                     	;# 
  2315  0002                     	;# 
  2316  0003                     	;# 
  2317  0004                     	;# 
  2318  0005                     	;# 
  2319  0006                     	;# 
  2320  0007                     	;# 
  2321  0008                     	;# 
  2322  0009                     	;# 
  2323  000A                     	;# 
  2324  000B                     	;# 
  2325  000C                     	;# 
  2326  000D                     	;# 
  2327  000E                     	;# 
  2328  000F                     	;# 
  2329  0010                     	;# 
  2330  0011                     	;# 
  2331  0012                     	;# 
  2332  0013                     	;# 
  2333  0014                     	;# 
  2334  0015                     	;# 
  2335  0016                     	;# 
  2336  0017                     	;# 
  2337  0018                     	;# 
  2338  0019                     	;# 
  2339  001A                     	;# 
  2340  001C                     	;# 
  2341  001C                     	;# 
  2342  001D                     	;# 
  2343  001D                     	;# 
  2344  001E                     	;# 
  2345  001F                     	;# 
  2346  008C                     	;# 
  2347  008C                     	;# 
  2348  008D                     	;# 
  2349  008E                     	;# 
  2350  008E                     	;# 
  2351  008F                     	;# 
  2352  0090                     	;# 
  2353  0090                     	;# 
  2354  0091                     	;# 
  2355  0093                     	;# 
  2356  0094                     	;# 
  2357  0095                     	;# 
  2358  0096                     	;# 
  2359  0097                     	;# 
  2360  0098                     	;# 
  2361  0099                     	;# 
  2362  009A                     	;# 
  2363  009B                     	;# 
  2364  009C                     	;# 
  2365  009D                     	;# 
  2366  009E                     	;# 
  2367  010C                     	;# 
  2368  010D                     	;# 
  2369  010E                     	;# 
  2370  010E                     	;# 
  2371  010F                     	;# 
  2372  0110                     	;# 
  2373  0110                     	;# 
  2374  0111                     	;# 
  2375  0112                     	;# 
  2376  0112                     	;# 
  2377  0113                     	;# 
  2378  0114                     	;# 
  2379  0114                     	;# 
  2380  0115                     	;# 
  2381  0116                     	;# 
  2382  0116                     	;# 
  2383  0117                     	;# 
  2384  0119                     	;# 
  2385  0119                     	;# 
  2386  0119                     	;# 
  2387  011A                     	;# 
  2388  011A                     	;# 
  2389  011A                     	;# 
  2390  011B                     	;# 
  2391  011B                     	;# 
  2392  011B                     	;# 
  2393  011B                     	;# 
  2394  011B                     	;# 
  2395  011C                     	;# 
  2396  011C                     	;# 
  2397  011C                     	;# 
  2398  011D                     	;# 
  2399  011D                     	;# 
  2400  011D                     	;# 
  2401  011E                     	;# 
  2402  011E                     	;# 
  2403  011E                     	;# 
  2404  011F                     	;# 
  2405  011F                     	;# 
  2406  011F                     	;# 
  2407  011F                     	;# 
  2408  011F                     	;# 
  2409  018C                     	;# 
  2410  018D                     	;# 
  2411  018E                     	;# 
  2412  018F                     	;# 
  2413  0190                     	;# 
  2414  0191                     	;# 
  2415  0192                     	;# 
  2416  0196                     	;# 
  2417  0197                     	;# 
  2418  0198                     	;# 
  2419  0199                     	;# 
  2420  019A                     	;# 
  2421  019B                     	;# 
  2422  019C                     	;# 
  2423  020C                     	;# 
  2424  020C                     	;# 
  2425  020D                     	;# 
  2426  020E                     	;# 
  2427  020F                     	;# 
  2428  020F                     	;# 
  2429  0210                     	;# 
  2430  0210                     	;# 
  2431  0211                     	;# 
  2432  0211                     	;# 
  2433  0212                     	;# 
  2434  0212                     	;# 
  2435  0213                     	;# 
  2436  0214                     	;# 
  2437  0215                     	;# 
  2438  0215                     	;# 
  2439  0216                     	;# 
  2440  0216                     	;# 
  2441  0217                     	;# 
  2442  0217                     	;# 
  2443  0218                     	;# 
  2444  0218                     	;# 
  2445  0219                     	;# 
  2446  021A                     	;# 
  2447  021B                     	;# 
  2448  021B                     	;# 
  2449  021C                     	;# 
  2450  021C                     	;# 
  2451  021D                     	;# 
  2452  021D                     	;# 
  2453  021E                     	;# 
  2454  021F                     	;# 
  2455  028C                     	;# 
  2456  028C                     	;# 
  2457  028D                     	;# 
  2458  028D                     	;# 
  2459  028E                     	;# 
  2460  028F                     	;# 
  2461  0290                     	;# 
  2462  0290                     	;# 
  2463  0291                     	;# 
  2464  0292                     	;# 
  2465  0292                     	;# 
  2466  0293                     	;# 
  2467  0293                     	;# 
  2468  0294                     	;# 
  2469  0295                     	;# 
  2470  0296                     	;# 
  2471  0296                     	;# 
  2472  0297                     	;# 
  2473  0298                     	;# 
  2474  0298                     	;# 
  2475  0299                     	;# 
  2476  0299                     	;# 
  2477  029A                     	;# 
  2478  029B                     	;# 
  2479  029C                     	;# 
  2480  029C                     	;# 
  2481  029D                     	;# 
  2482  030C                     	;# 
  2483  030C                     	;# 
  2484  030D                     	;# 
  2485  030E                     	;# 
  2486  030F                     	;# 
  2487  0310                     	;# 
  2488  0310                     	;# 
  2489  0311                     	;# 
  2490  0312                     	;# 
  2491  0313                     	;# 
  2492  0314                     	;# 
  2493  0314                     	;# 
  2494  0315                     	;# 
  2495  0316                     	;# 
  2496  0317                     	;# 
  2497  0318                     	;# 
  2498  0318                     	;# 
  2499  0319                     	;# 
  2500  031A                     	;# 
  2501  031B                     	;# 
  2502  031C                     	;# 
  2503  031C                     	;# 
  2504  031D                     	;# 
  2505  031E                     	;# 
  2506  031F                     	;# 
  2507  038C                     	;# 
  2508  038C                     	;# 
  2509  038D                     	;# 
  2510  038E                     	;# 
  2511  0390                     	;# 
  2512  0390                     	;# 
  2513  0391                     	;# 
  2514  0392                     	;# 
  2515  040C                     	;# 
  2516  040D                     	;# 
  2517  040E                     	;# 
  2518  040F                     	;# 
  2519  0410                     	;# 
  2520  0411                     	;# 
  2521  0416                     	;# 
  2522  0416                     	;# 
  2523  0417                     	;# 
  2524  0418                     	;# 
  2525  0418                     	;# 
  2526  0419                     	;# 
  2527  041A                     	;# 
  2528  041A                     	;# 
  2529  041B                     	;# 
  2530  041C                     	;# 
  2531  041C                     	;# 
  2532  041D                     	;# 
  2533  041E                     	;# 
  2534  041F                     	;# 
  2535  048C                     	;# 
  2536  048C                     	;# 
  2537  048D                     	;# 
  2538  048E                     	;# 
  2539  048F                     	;# 
  2540  048F                     	;# 
  2541  0490                     	;# 
  2542  0491                     	;# 
  2543  0492                     	;# 
  2544  0492                     	;# 
  2545  0493                     	;# 
  2546  0494                     	;# 
  2547  0495                     	;# 
  2548  0495                     	;# 
  2549  0496                     	;# 
  2550  0497                     	;# 
  2551  0498                     	;# 
  2552  0499                     	;# 
  2553  049A                     	;# 
  2554  049B                     	;# 
  2555  049C                     	;# 
  2556  049D                     	;# 
  2557  050C                     	;# 
  2558  050C                     	;# 
  2559  050D                     	;# 
  2560  050E                     	;# 
  2561  050F                     	;# 
  2562  050F                     	;# 
  2563  0510                     	;# 
  2564  0511                     	;# 
  2565  0512                     	;# 
  2566  0512                     	;# 
  2567  0513                     	;# 
  2568  0514                     	;# 
  2569  0515                     	;# 
  2570  0515                     	;# 
  2571  0516                     	;# 
  2572  0517                     	;# 
  2573  0518                     	;# 
  2574  0519                     	;# 
  2575  051A                     	;# 
  2576  051B                     	;# 
  2577  051C                     	;# 
  2578  051D                     	;# 
  2579  058C                     	;# 
  2580  058C                     	;# 
  2581  058D                     	;# 
  2582  058E                     	;# 
  2583  058F                     	;# 
  2584  058F                     	;# 
  2585  0590                     	;# 
  2586  0591                     	;# 
  2587  0592                     	;# 
  2588  0593                     	;# 
  2589  060C                     	;# 
  2590  060D                     	;# 
  2591  060E                     	;# 
  2592  060F                     	;# 
  2593  0610                     	;# 
  2594  0611                     	;# 
  2595  0612                     	;# 
  2596  0613                     	;# 
  2597  0614                     	;# 
  2598  0616                     	;# 
  2599  0617                     	;# 
  2600  0618                     	;# 
  2601  0619                     	;# 
  2602  061A                     	;# 
  2603  061B                     	;# 
  2604  061C                     	;# 
  2605  061D                     	;# 
  2606  061E                     	;# 
  2607  068C                     	;# 
  2608  068D                     	;# 
  2609  068E                     	;# 
  2610  068F                     	;# 
  2611  0690                     	;# 
  2612  0691                     	;# 
  2613  0692                     	;# 
  2614  0693                     	;# 
  2615  0694                     	;# 
  2616  070C                     	;# 
  2617  070D                     	;# 
  2618  070E                     	;# 
  2619  070F                     	;# 
  2620  0710                     	;# 
  2621  0711                     	;# 
  2622  0712                     	;# 
  2623  0713                     	;# 
  2624  0714                     	;# 
  2625  0716                     	;# 
  2626  0717                     	;# 
  2627  0718                     	;# 
  2628  0719                     	;# 
  2629  071A                     	;# 
  2630  071B                     	;# 
  2631  071C                     	;# 
  2632  071D                     	;# 
  2633  071E                     	;# 
  2634  0796                     	;# 
  2635  0797                     	;# 
  2636  0798                     	;# 
  2637  0799                     	;# 
  2638  079A                     	;# 
  2639  079B                     	;# 
  2640  080C                     	;# 
  2641  080D                     	;# 
  2642  080E                     	;# 
  2643  080F                     	;# 
  2644  0810                     	;# 
  2645  0811                     	;# 
  2646  0812                     	;# 
  2647  0813                     	;# 
  2648  0814                     	;# 
  2649  081A                     	;# 
  2650  081B                     	;# 
  2651  081C                     	;# 
  2652  081D                     	;# 
  2653  081E                     	;# 
  2654  081F                     	;# 
  2655  088C                     	;# 
  2656  088D                     	;# 
  2657  088E                     	;# 
  2658  088F                     	;# 
  2659  0890                     	;# 
  2660  0891                     	;# 
  2661  0892                     	;# 
  2662  0893                     	;# 
  2663  0895                     	;# 
  2664  0896                     	;# 
  2665  0897                     	;# 
  2666  0898                     	;# 
  2667  0899                     	;# 
  2668  089A                     	;# 
  2669  089B                     	;# 
  2670  090C                     	;# 
  2671  090E                     	;# 
  2672  090F                     	;# 
  2673  091F                     	;# 
  2674  091F                     	;# 
  2675  098F                     	;# 
  2676  098F                     	;# 
  2677  0990                     	;# 
  2678  0991                     	;# 
  2679  0992                     	;# 
  2680  0993                     	;# 
  2681  0994                     	;# 
  2682  0995                     	;# 
  2683  0996                     	;# 
  2684  0997                     	;# 
  2685  0E0F                     	;# 
  2686  0E10                     	;# 
  2687  0E11                     	;# 
  2688  0E12                     	;# 
  2689  0E13                     	;# 
  2690  0E14                     	;# 
  2691  0E15                     	;# 
  2692  0E16                     	;# 
  2693  0E17                     	;# 
  2694  0E18                     	;# 
  2695  0E19                     	;# 
  2696  0E1A                     	;# 
  2697  0E1B                     	;# 
  2698  0E1C                     	;# 
  2699  0E1D                     	;# 
  2700  0E1E                     	;# 
  2701  0E1F                     	;# 
  2702  0E20                     	;# 
  2703  0E21                     	;# 
  2704  0E22                     	;# 
  2705  0E23                     	;# 
  2706  0E24                     	;# 
  2707  0E25                     	;# 
  2708  0E26                     	;# 
  2709  0E27                     	;# 
  2710  0E28                     	;# 
  2711  0E29                     	;# 
  2712  0E2A                     	;# 
  2713  0E2B                     	;# 
  2714  0E2C                     	;# 
  2715  0E2D                     	;# 
  2716  0E2E                     	;# 
  2717  0E2F                     	;# 
  2718  0E30                     	;# 
  2719  0E31                     	;# 
  2720  0E32                     	;# 
  2721  0E33                     	;# 
  2722  0E34                     	;# 
  2723  0E35                     	;# 
  2724  0E36                     	;# 
  2725  0E37                     	;# 
  2726  0E8F                     	;# 
  2727  0E90                     	;# 
  2728  0E91                     	;# 
  2729  0E92                     	;# 
  2730  0E93                     	;# 
  2731  0E94                     	;# 
  2732  0E95                     	;# 
  2733  0E96                     	;# 
  2734  0E97                     	;# 
  2735  0E9C                     	;# 
  2736  0E9D                     	;# 
  2737  0E9E                     	;# 
  2738  0EA1                     	;# 
  2739  0EA2                     	;# 
  2740  0EA3                     	;# 
  2741  0EA4                     	;# 
  2742  0EA5                     	;# 
  2743  0EA9                     	;# 
  2744  0EAA                     	;# 
  2745  0EAB                     	;# 
  2746  0EAC                     	;# 
  2747  0EB1                     	;# 
  2748  0EB2                     	;# 
  2749  0EB3                     	;# 
  2750  0EB8                     	;# 
  2751  0EB9                     	;# 
  2752  0EBA                     	;# 
  2753  0EBB                     	;# 
  2754  0EBC                     	;# 
  2755  0EBD                     	;# 
  2756  0EBE                     	;# 
  2757  0EC3                     	;# 
  2758  0EC5                     	;# 
  2759  0EC6                     	;# 
  2760  0EC7                     	;# 
  2761  0EC8                     	;# 
  2762  0EC9                     	;# 
  2763  0ECA                     	;# 
  2764  0ECB                     	;# 
  2765  0ECC                     	;# 
  2766  0F10                     	;# 
  2767  0F11                     	;# 
  2768  0F12                     	;# 
  2769  0F13                     	;# 
  2770  0F14                     	;# 
  2771  0F15                     	;# 
  2772  0F16                     	;# 
  2773  0F17                     	;# 
  2774  0F18                     	;# 
  2775  0F19                     	;# 
  2776  0F1A                     	;# 
  2777  0F1B                     	;# 
  2778  0F1C                     	;# 
  2779  0F1D                     	;# 
  2780  0F1E                     	;# 
  2781  0F1F                     	;# 
  2782  0F20                     	;# 
  2783  0F21                     	;# 
  2784  0F22                     	;# 
  2785  0F23                     	;# 
  2786  0F24                     	;# 
  2787  0F25                     	;# 
  2788  0F26                     	;# 
  2789  0F27                     	;# 
  2790  0F28                     	;# 
  2791  0F29                     	;# 
  2792  0F2A                     	;# 
  2793  0F2B                     	;# 
  2794  0F2C                     	;# 
  2795  0F2D                     	;# 
  2796  0F2E                     	;# 
  2797  0F2F                     	;# 
  2798  0F30                     	;# 
  2799  0F31                     	;# 
  2800  0F32                     	;# 
  2801  0F38                     	;# 
  2802  0F39                     	;# 
  2803  0F3A                     	;# 
  2804  0F3B                     	;# 
  2805  0F3C                     	;# 
  2806  0F3D                     	;# 
  2807  0F3E                     	;# 
  2808  0F3F                     	;# 
  2809  0F40                     	;# 
  2810  0F41                     	;# 
  2811  0F43                     	;# 
  2812  0F44                     	;# 
  2813  0F45                     	;# 
  2814  0F46                     	;# 
  2815  0F47                     	;# 
  2816  0F48                     	;# 
  2817  0F49                     	;# 
  2818  0F4A                     	;# 
  2819  0F4B                     	;# 
  2820  0F4C                     	;# 
  2821  0F4E                     	;# 
  2822  0F4F                     	;# 
  2823  0F50                     	;# 
  2824  0F51                     	;# 
  2825  0F52                     	;# 
  2826  0F53                     	;# 
  2827  0F54                     	;# 
  2828  0F55                     	;# 
  2829  0F56                     	;# 
  2830  0F57                     	;# 
  2831  0F59                     	;# 
  2832  0F5A                     	;# 
  2833  0F5B                     	;# 
  2834  0F5C                     	;# 
  2835  0F5D                     	;# 
  2836  0F61                     	;# 
  2837  0F62                     	;# 
  2838  0F64                     	;# 
  2839  0F65                     	;# 
  2840  0F66                     	;# 
  2841  0F67                     	;# 
  2842  0F68                     	;# 
  2843  0F69                     	;# 
  2844  0F6A                     	;# 
  2845  0F6B                     	;# 
  2846  0F6C                     	;# 
  2847  0F6D                     	;# 
  2848  0FE4                     	;# 
  2849  0FE5                     	;# 
  2850  0FE6                     	;# 
  2851  0FE7                     	;# 
  2852  0FE8                     	;# 
  2853  0FE9                     	;# 
  2854  0FEA                     	;# 
  2855  0FEB                     	;# 
  2856  0FED                     	;# 
  2857  0FEE                     	;# 
  2858  0FEF                     	;# 
  2859  0000                     	;# 
  2860  0001                     	;# 
  2861  0002                     	;# 
  2862  0003                     	;# 
  2863  0004                     	;# 
  2864  0005                     	;# 
  2865  0006                     	;# 
  2866  0007                     	;# 
  2867  0008                     	;# 
  2868  0009                     	;# 
  2869  000A                     	;# 
  2870  000B                     	;# 
  2871  000C                     	;# 
  2872  000D                     	;# 
  2873  000E                     	;# 
  2874  000F                     	;# 
  2875  0010                     	;# 
  2876  0011                     	;# 
  2877  0012                     	;# 
  2878  0013                     	;# 
  2879  0014                     	;# 
  2880  0015                     	;# 
  2881  0016                     	;# 
  2882  0017                     	;# 
  2883  0018                     	;# 
  2884  0019                     	;# 
  2885  001A                     	;# 
  2886  001C                     	;# 
  2887  001C                     	;# 
  2888  001D                     	;# 
  2889  001D                     	;# 
  2890  001E                     	;# 
  2891  001F                     	;# 
  2892  008C                     	;# 
  2893  008C                     	;# 
  2894  008D                     	;# 
  2895  008E                     	;# 
  2896  008E                     	;# 
  2897  008F                     	;# 
  2898  0090                     	;# 
  2899  0090                     	;# 
  2900  0091                     	;# 
  2901  0093                     	;# 
  2902  0094                     	;# 
  2903  0095                     	;# 
  2904  0096                     	;# 
  2905  0097                     	;# 
  2906  0098                     	;# 
  2907  0099                     	;# 
  2908  009A                     	;# 
  2909  009B                     	;# 
  2910  009C                     	;# 
  2911  009D                     	;# 
  2912  009E                     	;# 
  2913  010C                     	;# 
  2914  010D                     	;# 
  2915  010E                     	;# 
  2916  010E                     	;# 
  2917  010F                     	;# 
  2918  0110                     	;# 
  2919  0110                     	;# 
  2920  0111                     	;# 
  2921  0112                     	;# 
  2922  0112                     	;# 
  2923  0113                     	;# 
  2924  0114                     	;# 
  2925  0114                     	;# 
  2926  0115                     	;# 
  2927  0116                     	;# 
  2928  0116                     	;# 
  2929  0117                     	;# 
  2930  0119                     	;# 
  2931  0119                     	;# 
  2932  0119                     	;# 
  2933  011A                     	;# 
  2934  011A                     	;# 
  2935  011A                     	;# 
  2936  011B                     	;# 
  2937  011B                     	;# 
  2938  011B                     	;# 
  2939  011B                     	;# 
  2940  011B                     	;# 
  2941  011C                     	;# 
  2942  011C                     	;# 
  2943  011C                     	;# 
  2944  011D                     	;# 
  2945  011D                     	;# 
  2946  011D                     	;# 
  2947  011E                     	;# 
  2948  011E                     	;# 
  2949  011E                     	;# 
  2950  011F                     	;# 
  2951  011F                     	;# 
  2952  011F                     	;# 
  2953  011F                     	;# 
  2954  011F                     	;# 
  2955  018C                     	;# 
  2956  018D                     	;# 
  2957  018E                     	;# 
  2958  018F                     	;# 
  2959  0190                     	;# 
  2960  0191                     	;# 
  2961  0192                     	;# 
  2962  0196                     	;# 
  2963  0197                     	;# 
  2964  0198                     	;# 
  2965  0199                     	;# 
  2966  019A                     	;# 
  2967  019B                     	;# 
  2968  019C                     	;# 
  2969  020C                     	;# 
  2970  020C                     	;# 
  2971  020D                     	;# 
  2972  020E                     	;# 
  2973  020F                     	;# 
  2974  020F                     	;# 
  2975  0210                     	;# 
  2976  0210                     	;# 
  2977  0211                     	;# 
  2978  0211                     	;# 
  2979  0212                     	;# 
  2980  0212                     	;# 
  2981  0213                     	;# 
  2982  0214                     	;# 
  2983  0215                     	;# 
  2984  0215                     	;# 
  2985  0216                     	;# 
  2986  0216                     	;# 
  2987  0217                     	;# 
  2988  0217                     	;# 
  2989  0218                     	;# 
  2990  0218                     	;# 
  2991  0219                     	;# 
  2992  021A                     	;# 
  2993  021B                     	;# 
  2994  021B                     	;# 
  2995  021C                     	;# 
  2996  021C                     	;# 
  2997  021D                     	;# 
  2998  021D                     	;# 
  2999  021E                     	;# 
  3000  021F                     	;# 
  3001  028C                     	;# 
  3002  028C                     	;# 
  3003  028D                     	;# 
  3004  028D                     	;# 
  3005  028E                     	;# 
  3006  028F                     	;# 
  3007  0290                     	;# 
  3008  0290                     	;# 
  3009  0291                     	;# 
  3010  0292                     	;# 
  3011  0292                     	;# 
  3012  0293                     	;# 
  3013  0293                     	;# 
  3014  0294                     	;# 
  3015  0295                     	;# 
  3016  0296                     	;# 
  3017  0296                     	;# 
  3018  0297                     	;# 
  3019  0298                     	;# 
  3020  0298                     	;# 
  3021  0299                     	;# 
  3022  0299                     	;# 
  3023  029A                     	;# 
  3024  029B                     	;# 
  3025  029C                     	;# 
  3026  029C                     	;# 
  3027  029D                     	;# 
  3028  030C                     	;# 
  3029  030C                     	;# 
  3030  030D                     	;# 
  3031  030E                     	;# 
  3032  030F                     	;# 
  3033  0310                     	;# 
  3034  0310                     	;# 
  3035  0311                     	;# 
  3036  0312                     	;# 
  3037  0313                     	;# 
  3038  0314                     	;# 
  3039  0314                     	;# 
  3040  0315                     	;# 
  3041  0316                     	;# 
  3042  0317                     	;# 
  3043  0318                     	;# 
  3044  0318                     	;# 
  3045  0319                     	;# 
  3046  031A                     	;# 
  3047  031B                     	;# 
  3048  031C                     	;# 
  3049  031C                     	;# 
  3050  031D                     	;# 
  3051  031E                     	;# 
  3052  031F                     	;# 
  3053  038C                     	;# 
  3054  038C                     	;# 
  3055  038D                     	;# 
  3056  038E                     	;# 
  3057  0390                     	;# 
  3058  0390                     	;# 
  3059  0391                     	;# 
  3060  0392                     	;# 
  3061  040C                     	;# 
  3062  040D                     	;# 
  3063  040E                     	;# 
  3064  040F                     	;# 
  3065  0410                     	;# 
  3066  0411                     	;# 
  3067  0416                     	;# 
  3068  0416                     	;# 
  3069  0417                     	;# 
  3070  0418                     	;# 
  3071  0418                     	;# 
  3072  0419                     	;# 
  3073  041A                     	;# 
  3074  041A                     	;# 
  3075  041B                     	;# 
  3076  041C                     	;# 
  3077  041C                     	;# 
  3078  041D                     	;# 
  3079  041E                     	;# 
  3080  041F                     	;# 
  3081  048C                     	;# 
  3082  048C                     	;# 
  3083  048D                     	;# 
  3084  048E                     	;# 
  3085  048F                     	;# 
  3086  048F                     	;# 
  3087  0490                     	;# 
  3088  0491                     	;# 
  3089  0492                     	;# 
  3090  0492                     	;# 
  3091  0493                     	;# 
  3092  0494                     	;# 
  3093  0495                     	;# 
  3094  0495                     	;# 
  3095  0496                     	;# 
  3096  0497                     	;# 
  3097  0498                     	;# 
  3098  0499                     	;# 
  3099  049A                     	;# 
  3100  049B                     	;# 
  3101  049C                     	;# 
  3102  049D                     	;# 
  3103  050C                     	;# 
  3104  050C                     	;# 
  3105  050D                     	;# 
  3106  050E                     	;# 
  3107  050F                     	;# 
  3108  050F                     	;# 
  3109  0510                     	;# 
  3110  0511                     	;# 
  3111  0512                     	;# 
  3112  0512                     	;# 
  3113  0513                     	;# 
  3114  0514                     	;# 
  3115  0515                     	;# 
  3116  0515                     	;# 
  3117  0516                     	;# 
  3118  0517                     	;# 
  3119  0518                     	;# 
  3120  0519                     	;# 
  3121  051A                     	;# 
  3122  051B                     	;# 
  3123  051C                     	;# 
  3124  051D                     	;# 
  3125  058C                     	;# 
  3126  058C                     	;# 
  3127  058D                     	;# 
  3128  058E                     	;# 
  3129  058F                     	;# 
  3130  058F                     	;# 
  3131  0590                     	;# 
  3132  0591                     	;# 
  3133  0592                     	;# 
  3134  0593                     	;# 
  3135  060C                     	;# 
  3136  060D                     	;# 
  3137  060E                     	;# 
  3138  060F                     	;# 
  3139  0610                     	;# 
  3140  0611                     	;# 
  3141  0612                     	;# 
  3142  0613                     	;# 
  3143  0614                     	;# 
  3144  0616                     	;# 
  3145  0617                     	;# 
  3146  0618                     	;# 
  3147  0619                     	;# 
  3148  061A                     	;# 
  3149  061B                     	;# 
  3150  061C                     	;# 
  3151  061D                     	;# 
  3152  061E                     	;# 
  3153  068C                     	;# 
  3154  068D                     	;# 
  3155  068E                     	;# 
  3156  068F                     	;# 
  3157  0690                     	;# 
  3158  0691                     	;# 
  3159  0692                     	;# 
  3160  0693                     	;# 
  3161  0694                     	;# 
  3162  070C                     	;# 
  3163  070D                     	;# 
  3164  070E                     	;# 
  3165  070F                     	;# 
  3166  0710                     	;# 
  3167  0711                     	;# 
  3168  0712                     	;# 
  3169  0713                     	;# 
  3170  0714                     	;# 
  3171  0716                     	;# 
  3172  0717                     	;# 
  3173  0718                     	;# 
  3174  0719                     	;# 
  3175  071A                     	;# 
  3176  071B                     	;# 
  3177  071C                     	;# 
  3178  071D                     	;# 
  3179  071E                     	;# 
  3180  0796                     	;# 
  3181  0797                     	;# 
  3182  0798                     	;# 
  3183  0799                     	;# 
  3184  079A                     	;# 
  3185  079B                     	;# 
  3186  080C                     	;# 
  3187  080D                     	;# 
  3188  080E                     	;# 
  3189  080F                     	;# 
  3190  0810                     	;# 
  3191  0811                     	;# 
  3192  0812                     	;# 
  3193  0813                     	;# 
  3194  0814                     	;# 
  3195  081A                     	;# 
  3196  081B                     	;# 
  3197  081C                     	;# 
  3198  081D                     	;# 
  3199  081E                     	;# 
  3200  081F                     	;# 
  3201  088C                     	;# 
  3202  088D                     	;# 
  3203  088E                     	;# 
  3204  088F                     	;# 
  3205  0890                     	;# 
  3206  0891                     	;# 
  3207  0892                     	;# 
  3208  0893                     	;# 
  3209  0895                     	;# 
  3210  0896                     	;# 
  3211  0897                     	;# 
  3212  0898                     	;# 
  3213  0899                     	;# 
  3214  089A                     	;# 
  3215  089B                     	;# 
  3216  090C                     	;# 
  3217  090E                     	;# 
  3218  090F                     	;# 
  3219  091F                     	;# 
  3220  091F                     	;# 
  3221  098F                     	;# 
  3222  098F                     	;# 
  3223  0990                     	;# 
  3224  0991                     	;# 
  3225  0992                     	;# 
  3226  0993                     	;# 
  3227  0994                     	;# 
  3228  0995                     	;# 
  3229  0996                     	;# 
  3230  0997                     	;# 
  3231  0E0F                     	;# 
  3232  0E10                     	;# 
  3233  0E11                     	;# 
  3234  0E12                     	;# 
  3235  0E13                     	;# 
  3236  0E14                     	;# 
  3237  0E15                     	;# 
  3238  0E16                     	;# 
  3239  0E17                     	;# 
  3240  0E18                     	;# 
  3241  0E19                     	;# 
  3242  0E1A                     	;# 
  3243  0E1B                     	;# 
  3244  0E1C                     	;# 
  3245  0E1D                     	;# 
  3246  0E1E                     	;# 
  3247  0E1F                     	;# 
  3248  0E20                     	;# 
  3249  0E21                     	;# 
  3250  0E22                     	;# 
  3251  0E23                     	;# 
  3252  0E24                     	;# 
  3253  0E25                     	;# 
  3254  0E26                     	;# 
  3255  0E27                     	;# 
  3256  0E28                     	;# 
  3257  0E29                     	;# 
  3258  0E2A                     	;# 
  3259  0E2B                     	;# 
  3260  0E2C                     	;# 
  3261  0E2D                     	;# 
  3262  0E2E                     	;# 
  3263  0E2F                     	;# 
  3264  0E30                     	;# 
  3265  0E31                     	;# 
  3266  0E32                     	;# 
  3267  0E33                     	;# 
  3268  0E34                     	;# 
  3269  0E35                     	;# 
  3270  0E36                     	;# 
  3271  0E37                     	;# 
  3272  0E8F                     	;# 
  3273  0E90                     	;# 
  3274  0E91                     	;# 
  3275  0E92                     	;# 
  3276  0E93                     	;# 
  3277  0E94                     	;# 
  3278  0E95                     	;# 
  3279  0E96                     	;# 
  3280  0E97                     	;# 
  3281  0E9C                     	;# 
  3282  0E9D                     	;# 
  3283  0E9E                     	;# 
  3284  0EA1                     	;# 
  3285  0EA2                     	;# 
  3286  0EA3                     	;# 
  3287  0EA4                     	;# 
  3288  0EA5                     	;# 
  3289  0EA9                     	;# 
  3290  0EAA                     	;# 
  3291  0EAB                     	;# 
  3292  0EAC                     	;# 
  3293  0EB1                     	;# 
  3294  0EB2                     	;# 
  3295  0EB3                     	;# 
  3296  0EB8                     	;# 
  3297  0EB9                     	;# 
  3298  0EBA                     	;# 
  3299  0EBB                     	;# 
  3300  0EBC                     	;# 
  3301  0EBD                     	;# 
  3302  0EBE                     	;# 
  3303  0EC3                     	;# 
  3304  0EC5                     	;# 
  3305  0EC6                     	;# 
  3306  0EC7                     	;# 
  3307  0EC8                     	;# 
  3308  0EC9                     	;# 
  3309  0ECA                     	;# 
  3310  0ECB                     	;# 
  3311  0ECC                     	;# 
  3312  0F10                     	;# 
  3313  0F11                     	;# 
  3314  0F12                     	;# 
  3315  0F13                     	;# 
  3316  0F14                     	;# 
  3317  0F15                     	;# 
  3318  0F16                     	;# 
  3319  0F17                     	;# 
  3320  0F18                     	;# 
  3321  0F19                     	;# 
  3322  0F1A                     	;# 
  3323  0F1B                     	;# 
  3324  0F1C                     	;# 
  3325  0F1D                     	;# 
  3326  0F1E                     	;# 
  3327  0F1F                     	;# 
  3328  0F20                     	;# 
  3329  0F21                     	;# 
  3330  0F22                     	;# 
  3331  0F23                     	;# 
  3332  0F24                     	;# 
  3333  0F25                     	;# 
  3334  0F26                     	;# 
  3335  0F27                     	;# 
  3336  0F28                     	;# 
  3337  0F29                     	;# 
  3338  0F2A                     	;# 
  3339  0F2B                     	;# 
  3340  0F2C                     	;# 
  3341  0F2D                     	;# 
  3342  0F2E                     	;# 
  3343  0F2F                     	;# 
  3344  0F30                     	;# 
  3345  0F31                     	;# 
  3346  0F32                     	;# 
  3347  0F38                     	;# 
  3348  0F39                     	;# 
  3349  0F3A                     	;# 
  3350  0F3B                     	;# 
  3351  0F3C                     	;# 
  3352  0F3D                     	;# 
  3353  0F3E                     	;# 
  3354  0F3F                     	;# 
  3355  0F40                     	;# 
  3356  0F41                     	;# 
  3357  0F43                     	;# 
  3358  0F44                     	;# 
  3359  0F45                     	;# 
  3360  0F46                     	;# 
  3361  0F47                     	;# 
  3362  0F48                     	;# 
  3363  0F49                     	;# 
  3364  0F4A                     	;# 
  3365  0F4B                     	;# 
  3366  0F4C                     	;# 
  3367  0F4E                     	;# 
  3368  0F4F                     	;# 
  3369  0F50                     	;# 
  3370  0F51                     	;# 
  3371  0F52                     	;# 
  3372  0F53                     	;# 
  3373  0F54                     	;# 
  3374  0F55                     	;# 
  3375  0F56                     	;# 
  3376  0F57                     	;# 
  3377  0F59                     	;# 
  3378  0F5A                     	;# 
  3379  0F5B                     	;# 
  3380  0F5C                     	;# 
  3381  0F5D                     	;# 
  3382  0F61                     	;# 
  3383  0F62                     	;# 
  3384  0F64                     	;# 
  3385  0F65                     	;# 
  3386  0F66                     	;# 
  3387  0F67                     	;# 
  3388  0F68                     	;# 
  3389  0F69                     	;# 
  3390  0F6A                     	;# 
  3391  0F6B                     	;# 
  3392  0F6C                     	;# 
  3393  0F6D                     	;# 
  3394  0FE4                     	;# 
  3395  0FE5                     	;# 
  3396  0FE6                     	;# 
  3397  0FE7                     	;# 
  3398  0FE8                     	;# 
  3399  0FE9                     	;# 
  3400  0FEA                     	;# 
  3401  0FEB                     	;# 
  3402  0FED                     	;# 
  3403  0FEE                     	;# 
  3404  0FEF                     	;# 
  3405  0000                     	;# 
  3406  0001                     	;# 
  3407  0002                     	;# 
  3408  0003                     	;# 
  3409  0004                     	;# 
  3410  0005                     	;# 
  3411  0006                     	;# 
  3412  0007                     	;# 
  3413  0008                     	;# 
  3414  0009                     	;# 
  3415  000A                     	;# 
  3416  000B                     	;# 
  3417  000C                     	;# 
  3418  000D                     	;# 
  3419  000E                     	;# 
  3420  000F                     	;# 
  3421  0010                     	;# 
  3422  0011                     	;# 
  3423  0012                     	;# 
  3424  0013                     	;# 
  3425  0014                     	;# 
  3426  0015                     	;# 
  3427  0016                     	;# 
  3428  0017                     	;# 
  3429  0018                     	;# 
  3430  0019                     	;# 
  3431  001A                     	;# 
  3432  001C                     	;# 
  3433  001C                     	;# 
  3434  001D                     	;# 
  3435  001D                     	;# 
  3436  001E                     	;# 
  3437  001F                     	;# 
  3438  008C                     	;# 
  3439  008C                     	;# 
  3440  008D                     	;# 
  3441  008E                     	;# 
  3442  008E                     	;# 
  3443  008F                     	;# 
  3444  0090                     	;# 
  3445  0090                     	;# 
  3446  0091                     	;# 
  3447  0093                     	;# 
  3448  0094                     	;# 
  3449  0095                     	;# 
  3450  0096                     	;# 
  3451  0097                     	;# 
  3452  0098                     	;# 
  3453  0099                     	;# 
  3454  009A                     	;# 
  3455  009B                     	;# 
  3456  009C                     	;# 
  3457  009D                     	;# 
  3458  009E                     	;# 
  3459  010C                     	;# 
  3460  010D                     	;# 
  3461  010E                     	;# 
  3462  010E                     	;# 
  3463  010F                     	;# 
  3464  0110                     	;# 
  3465  0110                     	;# 
  3466  0111                     	;# 
  3467  0112                     	;# 
  3468  0112                     	;# 
  3469  0113                     	;# 
  3470  0114                     	;# 
  3471  0114                     	;# 
  3472  0115                     	;# 
  3473  0116                     	;# 
  3474  0116                     	;# 
  3475  0117                     	;# 
  3476  0119                     	;# 
  3477  0119                     	;# 
  3478  0119                     	;# 
  3479  011A                     	;# 
  3480  011A                     	;# 
  3481  011A                     	;# 
  3482  011B                     	;# 
  3483  011B                     	;# 
  3484  011B                     	;# 
  3485  011B                     	;# 
  3486  011B                     	;# 
  3487  011C                     	;# 
  3488  011C                     	;# 
  3489  011C                     	;# 
  3490  011D                     	;# 
  3491  011D                     	;# 
  3492  011D                     	;# 
  3493  011E                     	;# 
  3494  011E                     	;# 
  3495  011E                     	;# 
  3496  011F                     	;# 
  3497  011F                     	;# 
  3498  011F                     	;# 
  3499  011F                     	;# 
  3500  011F                     	;# 
  3501  018C                     	;# 
  3502  018D                     	;# 
  3503  018E                     	;# 
  3504  018F                     	;# 
  3505  0190                     	;# 
  3506  0191                     	;# 
  3507  0192                     	;# 
  3508  0196                     	;# 
  3509  0197                     	;# 
  3510  0198                     	;# 
  3511  0199                     	;# 
  3512  019A                     	;# 
  3513  019B                     	;# 
  3514  019C                     	;# 
  3515  020C                     	;# 
  3516  020C                     	;# 
  3517  020D                     	;# 
  3518  020E                     	;# 
  3519  020F                     	;# 
  3520  020F                     	;# 
  3521  0210                     	;# 
  3522  0210                     	;# 
  3523  0211                     	;# 
  3524  0211                     	;# 
  3525  0212                     	;# 
  3526  0212                     	;# 
  3527  0213                     	;# 
  3528  0214                     	;# 
  3529  0215                     	;# 
  3530  0215                     	;# 
  3531  0216                     	;# 
  3532  0216                     	;# 
  3533  0217                     	;# 
  3534  0217                     	;# 
  3535  0218                     	;# 
  3536  0218                     	;# 
  3537  0219                     	;# 
  3538  021A                     	;# 
  3539  021B                     	;# 
  3540  021B                     	;# 
  3541  021C                     	;# 
  3542  021C                     	;# 
  3543  021D                     	;# 
  3544  021D                     	;# 
  3545  021E                     	;# 
  3546  021F                     	;# 
  3547  028C                     	;# 
  3548  028C                     	;# 
  3549  028D                     	;# 
  3550  028D                     	;# 
  3551  028E                     	;# 
  3552  028F                     	;# 
  3553  0290                     	;# 
  3554  0290                     	;# 
  3555  0291                     	;# 
  3556  0292                     	;# 
  3557  0292                     	;# 
  3558  0293                     	;# 
  3559  0293                     	;# 
  3560  0294                     	;# 
  3561  0295                     	;# 
  3562  0296                     	;# 
  3563  0296                     	;# 
  3564  0297                     	;# 
  3565  0298                     	;# 
  3566  0298                     	;# 
  3567  0299                     	;# 
  3568  0299                     	;# 
  3569  029A                     	;# 
  3570  029B                     	;# 
  3571  029C                     	;# 
  3572  029C                     	;# 
  3573  029D                     	;# 
  3574  030C                     	;# 
  3575  030C                     	;# 
  3576  030D                     	;# 
  3577  030E                     	;# 
  3578  030F                     	;# 
  3579  0310                     	;# 
  3580  0310                     	;# 
  3581  0311                     	;# 
  3582  0312                     	;# 
  3583  0313                     	;# 
  3584  0314                     	;# 
  3585  0314                     	;# 
  3586  0315                     	;# 
  3587  0316                     	;# 
  3588  0317                     	;# 
  3589  0318                     	;# 
  3590  0318                     	;# 
  3591  0319                     	;# 
  3592  031A                     	;# 
  3593  031B                     	;# 
  3594  031C                     	;# 
  3595  031C                     	;# 
  3596  031D                     	;# 
  3597  031E                     	;# 
  3598  031F                     	;# 
  3599  038C                     	;# 
  3600  038C                     	;# 
  3601  038D                     	;# 
  3602  038E                     	;# 
  3603  0390                     	;# 
  3604  0390                     	;# 
  3605  0391                     	;# 
  3606  0392                     	;# 
  3607  040C                     	;# 
  3608  040D                     	;# 
  3609  040E                     	;# 
  3610  040F                     	;# 
  3611  0410                     	;# 
  3612  0411                     	;# 
  3613  0416                     	;# 
  3614  0416                     	;# 
  3615  0417                     	;# 
  3616  0418                     	;# 
  3617  0418                     	;# 
  3618  0419                     	;# 
  3619  041A                     	;# 
  3620  041A                     	;# 
  3621  041B                     	;# 
  3622  041C                     	;# 
  3623  041C                     	;# 
  3624  041D                     	;# 
  3625  041E                     	;# 
  3626  041F                     	;# 
  3627  048C                     	;# 
  3628  048C                     	;# 
  3629  048D                     	;# 
  3630  048E                     	;# 
  3631  048F                     	;# 
  3632  048F                     	;# 
  3633  0490                     	;# 
  3634  0491                     	;# 
  3635  0492                     	;# 
  3636  0492                     	;# 
  3637  0493                     	;# 
  3638  0494                     	;# 
  3639  0495                     	;# 
  3640  0495                     	;# 
  3641  0496                     	;# 
  3642  0497                     	;# 
  3643  0498                     	;# 
  3644  0499                     	;# 
  3645  049A                     	;# 
  3646  049B                     	;# 
  3647  049C                     	;# 
  3648  049D                     	;# 
  3649  050C                     	;# 
  3650  050C                     	;# 
  3651  050D                     	;# 
  3652  050E                     	;# 
  3653  050F                     	;# 
  3654  050F                     	;# 
  3655  0510                     	;# 
  3656  0511                     	;# 
  3657  0512                     	;# 
  3658  0512                     	;# 
  3659  0513                     	;# 
  3660  0514                     	;# 
  3661  0515                     	;# 
  3662  0515                     	;# 
  3663  0516                     	;# 
  3664  0517                     	;# 
  3665  0518                     	;# 
  3666  0519                     	;# 
  3667  051A                     	;# 
  3668  051B                     	;# 
  3669  051C                     	;# 
  3670  051D                     	;# 
  3671  058C                     	;# 
  3672  058C                     	;# 
  3673  058D                     	;# 
  3674  058E                     	;# 
  3675  058F                     	;# 
  3676  058F                     	;# 
  3677  0590                     	;# 
  3678  0591                     	;# 
  3679  0592                     	;# 
  3680  0593                     	;# 
  3681  060C                     	;# 
  3682  060D                     	;# 
  3683  060E                     	;# 
  3684  060F                     	;# 
  3685  0610                     	;# 
  3686  0611                     	;# 
  3687  0612                     	;# 
  3688  0613                     	;# 
  3689  0614                     	;# 
  3690  0616                     	;# 
  3691  0617                     	;# 
  3692  0618                     	;# 
  3693  0619                     	;# 
  3694  061A                     	;# 
  3695  061B                     	;# 
  3696  061C                     	;# 
  3697  061D                     	;# 
  3698  061E                     	;# 
  3699  068C                     	;# 
  3700  068D                     	;# 
  3701  068E                     	;# 
  3702  068F                     	;# 
  3703  0690                     	;# 
  3704  0691                     	;# 
  3705  0692                     	;# 
  3706  0693                     	;# 
  3707  0694                     	;# 
  3708  070C                     	;# 
  3709  070D                     	;# 
  3710  070E                     	;# 
  3711  070F                     	;# 
  3712  0710                     	;# 
  3713  0711                     	;# 
  3714  0712                     	;# 
  3715  0713                     	;# 
  3716  0714                     	;# 
  3717  0716                     	;# 
  3718  0717                     	;# 
  3719  0718                     	;# 
  3720  0719                     	;# 
  3721  071A                     	;# 
  3722  071B                     	;# 
  3723  071C                     	;# 
  3724  071D                     	;# 
  3725  071E                     	;# 
  3726  0796                     	;# 
  3727  0797                     	;# 
  3728  0798                     	;# 
  3729  0799                     	;# 
  3730  079A                     	;# 
  3731  079B                     	;# 
  3732  080C                     	;# 
  3733  080D                     	;# 
  3734  080E                     	;# 
  3735  080F                     	;# 
  3736  0810                     	;# 
  3737  0811                     	;# 
  3738  0812                     	;# 
  3739  0813                     	;# 
  3740  0814                     	;# 
  3741  081A                     	;# 
  3742  081B                     	;# 
  3743  081C                     	;# 
  3744  081D                     	;# 
  3745  081E                     	;# 
  3746  081F                     	;# 
  3747  088C                     	;# 
  3748  088D                     	;# 
  3749  088E                     	;# 
  3750  088F                     	;# 
  3751  0890                     	;# 
  3752  0891                     	;# 
  3753  0892                     	;# 
  3754  0893                     	;# 
  3755  0895                     	;# 
  3756  0896                     	;# 
  3757  0897                     	;# 
  3758  0898                     	;# 
  3759  0899                     	;# 
  3760  089A                     	;# 
  3761  089B                     	;# 
  3762  090C                     	;# 
  3763  090E                     	;# 
  3764  090F                     	;# 
  3765  091F                     	;# 
  3766  091F                     	;# 
  3767  098F                     	;# 
  3768  098F                     	;# 
  3769  0990                     	;# 
  3770  0991                     	;# 
  3771  0992                     	;# 
  3772  0993                     	;# 
  3773  0994                     	;# 
  3774  0995                     	;# 
  3775  0996                     	;# 
  3776  0997                     	;# 
  3777  0E0F                     	;# 
  3778  0E10                     	;# 
  3779  0E11                     	;# 
  3780  0E12                     	;# 
  3781  0E13                     	;# 
  3782  0E14                     	;# 
  3783  0E15                     	;# 
  3784  0E16                     	;# 
  3785  0E17                     	;# 
  3786  0E18                     	;# 
  3787  0E19                     	;# 
  3788  0E1A                     	;# 
  3789  0E1B                     	;# 
  3790  0E1C                     	;# 
  3791  0E1D                     	;# 
  3792  0E1E                     	;# 
  3793  0E1F                     	;# 
  3794  0E20                     	;# 
  3795  0E21                     	;# 
  3796  0E22                     	;# 
  3797  0E23                     	;# 
  3798  0E24                     	;# 
  3799  0E25                     	;# 
  3800  0E26                     	;# 
  3801  0E27                     	;# 
  3802  0E28                     	;# 
  3803  0E29                     	;# 
  3804  0E2A                     	;# 
  3805  0E2B                     	;# 
  3806  0E2C                     	;# 
  3807  0E2D                     	;# 
  3808  0E2E                     	;# 
  3809  0E2F                     	;# 
  3810  0E30                     	;# 
  3811  0E31                     	;# 
  3812  0E32                     	;# 
  3813  0E33                     	;# 
  3814  0E34                     	;# 
  3815  0E35                     	;# 
  3816  0E36                     	;# 
  3817  0E37                     	;# 
  3818  0E8F                     	;# 
  3819  0E90                     	;# 
  3820  0E91                     	;# 
  3821  0E92                     	;# 
  3822  0E93                     	;# 
  3823  0E94                     	;# 
  3824  0E95                     	;# 
  3825  0E96                     	;# 
  3826  0E97                     	;# 
  3827  0E9C                     	;# 
  3828  0E9D                     	;# 
  3829  0E9E                     	;# 
  3830  0EA1                     	;# 
  3831  0EA2                     	;# 
  3832  0EA3                     	;# 
  3833  0EA4                     	;# 
  3834  0EA5                     	;# 
  3835  0EA9                     	;# 
  3836  0EAA                     	;# 
  3837  0EAB                     	;# 
  3838  0EAC                     	;# 
  3839  0EB1                     	;# 
  3840  0EB2                     	;# 
  3841  0EB3                     	;# 
  3842  0EB8                     	;# 
  3843  0EB9                     	;# 
  3844  0EBA                     	;# 
  3845  0EBB                     	;# 
  3846  0EBC                     	;# 
  3847  0EBD                     	;# 
  3848  0EBE                     	;# 
  3849  0EC3                     	;# 
  3850  0EC5                     	;# 
  3851  0EC6                     	;# 
  3852  0EC7                     	;# 
  3853  0EC8                     	;# 
  3854  0EC9                     	;# 
  3855  0ECA                     	;# 
  3856  0ECB                     	;# 
  3857  0ECC                     	;# 
  3858  0F10                     	;# 
  3859  0F11                     	;# 
  3860  0F12                     	;# 
  3861  0F13                     	;# 
  3862  0F14                     	;# 
  3863  0F15                     	;# 
  3864  0F16                     	;# 
  3865  0F17                     	;# 
  3866  0F18                     	;# 
  3867  0F19                     	;# 
  3868  0F1A                     	;# 
  3869  0F1B                     	;# 
  3870  0F1C                     	;# 
  3871  0F1D                     	;# 
  3872  0F1E                     	;# 
  3873  0F1F                     	;# 
  3874  0F20                     	;# 
  3875  0F21                     	;# 
  3876  0F22                     	;# 
  3877  0F23                     	;# 
  3878  0F24                     	;# 
  3879  0F25                     	;# 
  3880  0F26                     	;# 
  3881  0F27                     	;# 
  3882  0F28                     	;# 
  3883  0F29                     	;# 
  3884  0F2A                     	;# 
  3885  0F2B                     	;# 
  3886  0F2C                     	;# 
  3887  0F2D                     	;# 
  3888  0F2E                     	;# 
  3889  0F2F                     	;# 
  3890  0F30                     	;# 
  3891  0F31                     	;# 
  3892  0F32                     	;# 
  3893  0F38                     	;# 
  3894  0F39                     	;# 
  3895  0F3A                     	;# 
  3896  0F3B                     	;# 
  3897  0F3C                     	;# 
  3898  0F3D                     	;# 
  3899  0F3E                     	;# 
  3900  0F3F                     	;# 
  3901  0F40                     	;# 
  3902  0F41                     	;# 
  3903  0F43                     	;# 
  3904  0F44                     	;# 
  3905  0F45                     	;# 
  3906  0F46                     	;# 
  3907  0F47                     	;# 
  3908  0F48                     	;# 
  3909  0F49                     	;# 
  3910  0F4A                     	;# 
  3911  0F4B                     	;# 
  3912  0F4C                     	;# 
  3913  0F4E                     	;# 
  3914  0F4F                     	;# 
  3915  0F50                     	;# 
  3916  0F51                     	;# 
  3917  0F52                     	;# 
  3918  0F53                     	;# 
  3919  0F54                     	;# 
  3920  0F55                     	;# 
  3921  0F56                     	;# 
  3922  0F57                     	;# 
  3923  0F59                     	;# 
  3924  0F5A                     	;# 
  3925  0F5B                     	;# 
  3926  0F5C                     	;# 
  3927  0F5D                     	;# 
  3928  0F61                     	;# 
  3929  0F62                     	;# 
  3930  0F64                     	;# 
  3931  0F65                     	;# 
  3932  0F66                     	;# 
  3933  0F67                     	;# 
  3934  0F68                     	;# 
  3935  0F69                     	;# 
  3936  0F6A                     	;# 
  3937  0F6B                     	;# 
  3938  0F6C                     	;# 
  3939  0F6D                     	;# 
  3940  0FE4                     	;# 
  3941  0FE5                     	;# 
  3942  0FE6                     	;# 
  3943  0FE7                     	;# 
  3944  0FE8                     	;# 
  3945  0FE9                     	;# 
  3946  0FEA                     	;# 
  3947  0FEB                     	;# 
  3948  0FED                     	;# 
  3949  0FEE                     	;# 
  3950  0FEF                     	;# 
  3951  0000                     	;# 
  3952  0001                     	;# 
  3953  0002                     	;# 
  3954  0003                     	;# 
  3955  0004                     	;# 
  3956  0005                     	;# 
  3957  0006                     	;# 
  3958  0007                     	;# 
  3959  0008                     	;# 
  3960  0009                     	;# 
  3961  000A                     	;# 
  3962  000B                     	;# 
  3963  000C                     	;# 
  3964  000D                     	;# 
  3965  000E                     	;# 
  3966  000F                     	;# 
  3967  0010                     	;# 
  3968  0011                     	;# 
  3969  0012                     	;# 
  3970  0013                     	;# 
  3971  0014                     	;# 
  3972  0015                     	;# 
  3973  0016                     	;# 
  3974  0017                     	;# 
  3975  0018                     	;# 
  3976  0019                     	;# 
  3977  001A                     	;# 
  3978  001C                     	;# 
  3979  001C                     	;# 
  3980  001D                     	;# 
  3981  001D                     	;# 
  3982  001E                     	;# 
  3983  001F                     	;# 
  3984  008C                     	;# 
  3985  008C                     	;# 
  3986  008D                     	;# 
  3987  008E                     	;# 
  3988  008E                     	;# 
  3989  008F                     	;# 
  3990  0090                     	;# 
  3991  0090                     	;# 
  3992  0091                     	;# 
  3993  0093                     	;# 
  3994  0094                     	;# 
  3995  0095                     	;# 
  3996  0096                     	;# 
  3997  0097                     	;# 
  3998  0098                     	;# 
  3999  0099                     	;# 
  4000  009A                     	;# 
  4001  009B                     	;# 
  4002  009C                     	;# 
  4003  009D                     	;# 
  4004  009E                     	;# 
  4005  010C                     	;# 
  4006  010D                     	;# 
  4007  010E                     	;# 
  4008  010E                     	;# 
  4009  010F                     	;# 
  4010  0110                     	;# 
  4011  0110                     	;# 
  4012  0111                     	;# 
  4013  0112                     	;# 
  4014  0112                     	;# 
  4015  0113                     	;# 
  4016  0114                     	;# 
  4017  0114                     	;# 
  4018  0115                     	;# 
  4019  0116                     	;# 
  4020  0116                     	;# 
  4021  0117                     	;# 
  4022  0119                     	;# 
  4023  0119                     	;# 
  4024  0119                     	;# 
  4025  011A                     	;# 
  4026  011A                     	;# 
  4027  011A                     	;# 
  4028  011B                     	;# 
  4029  011B                     	;# 
  4030  011B                     	;# 
  4031  011B                     	;# 
  4032  011B                     	;# 
  4033  011C                     	;# 
  4034  011C                     	;# 
  4035  011C                     	;# 
  4036  011D                     	;# 
  4037  011D                     	;# 
  4038  011D                     	;# 
  4039  011E                     	;# 
  4040  011E                     	;# 
  4041  011E                     	;# 
  4042  011F                     	;# 
  4043  011F                     	;# 
  4044  011F                     	;# 
  4045  011F                     	;# 
  4046  011F                     	;# 
  4047  018C                     	;# 
  4048  018D                     	;# 
  4049  018E                     	;# 
  4050  018F                     	;# 
  4051  0190                     	;# 
  4052  0191                     	;# 
  4053  0192                     	;# 
  4054  0196                     	;# 
  4055  0197                     	;# 
  4056  0198                     	;# 
  4057  0199                     	;# 
  4058  019A                     	;# 
  4059  019B                     	;# 
  4060  019C                     	;# 
  4061  020C                     	;# 
  4062  020C                     	;# 
  4063  020D                     	;# 
  4064  020E                     	;# 
  4065  020F                     	;# 
  4066  020F                     	;# 
  4067  0210                     	;# 
  4068  0210                     	;# 
  4069  0211                     	;# 
  4070  0211                     	;# 
  4071  0212                     	;# 
  4072  0212                     	;# 
  4073  0213                     	;# 
  4074  0214                     	;# 
  4075  0215                     	;# 
  4076  0215                     	;# 
  4077  0216                     	;# 
  4078  0216                     	;# 
  4079  0217                     	;# 
  4080  0217                     	;# 
  4081  0218                     	;# 
  4082  0218                     	;# 
  4083  0219                     	;# 
  4084  021A                     	;# 
  4085  021B                     	;# 
  4086  021B                     	;# 
  4087  021C                     	;# 
  4088  021C                     	;# 
  4089  021D                     	;# 
  4090  021D                     	;# 
  4091  021E                     	;# 
  4092  021F                     	;# 
  4093  028C                     	;# 
  4094  028C                     	;# 
  4095  028D                     	;# 
  4096  028D                     	;# 
  4097  028E                     	;# 
  4098  028F                     	;# 
  4099  0290                     	;# 
  4100  0290                     	;# 
  4101  0291                     	;# 
  4102  0292                     	;# 
  4103  0292                     	;# 
  4104  0293                     	;# 
  4105  0293                     	;# 
  4106  0294                     	;# 
  4107  0295                     	;# 
  4108  0296                     	;# 
  4109  0296                     	;# 
  4110  0297                     	;# 
  4111  0298                     	;# 
  4112  0298                     	;# 
  4113  0299                     	;# 
  4114  0299                     	;# 
  4115  029A                     	;# 
  4116  029B                     	;# 
  4117  029C                     	;# 
  4118  029C                     	;# 
  4119  029D                     	;# 
  4120  030C                     	;# 
  4121  030C                     	;# 
  4122  030D                     	;# 
  4123  030E                     	;# 
  4124  030F                     	;# 
  4125  0310                     	;# 
  4126  0310                     	;# 
  4127  0311                     	;# 
  4128  0312                     	;# 
  4129  0313                     	;# 
  4130  0314                     	;# 
  4131  0314                     	;# 
  4132  0315                     	;# 
  4133  0316                     	;# 
  4134  0317                     	;# 
  4135  0318                     	;# 
  4136  0318                     	;# 
  4137  0319                     	;# 
  4138  031A                     	;# 
  4139  031B                     	;# 
  4140  031C                     	;# 
  4141  031C                     	;# 
  4142  031D                     	;# 
  4143  031E                     	;# 
  4144  031F                     	;# 
  4145  038C                     	;# 
  4146  038C                     	;# 
  4147  038D                     	;# 
  4148  038E                     	;# 
  4149  0390                     	;# 
  4150  0390                     	;# 
  4151  0391                     	;# 
  4152  0392                     	;# 
  4153  040C                     	;# 
  4154  040D                     	;# 
  4155  040E                     	;# 
  4156  040F                     	;# 
  4157  0410                     	;# 
  4158  0411                     	;# 
  4159  0416                     	;# 
  4160  0416                     	;# 
  4161  0417                     	;# 
  4162  0418                     	;# 
  4163  0418                     	;# 
  4164  0419                     	;# 
  4165  041A                     	;# 
  4166  041A                     	;# 
  4167  041B                     	;# 
  4168  041C                     	;# 
  4169  041C                     	;# 
  4170  041D                     	;# 
  4171  041E                     	;# 
  4172  041F                     	;# 
  4173  048C                     	;# 
  4174  048C                     	;# 
  4175  048D                     	;# 
  4176  048E                     	;# 
  4177  048F                     	;# 
  4178  048F                     	;# 
  4179  0490                     	;# 
  4180  0491                     	;# 
  4181  0492                     	;# 
  4182  0492                     	;# 
  4183  0493                     	;# 
  4184  0494                     	;# 
  4185  0495                     	;# 
  4186  0495                     	;# 
  4187  0496                     	;# 
  4188  0497                     	;# 
  4189  0498                     	;# 
  4190  0499                     	;# 
  4191  049A                     	;# 
  4192  049B                     	;# 
  4193  049C                     	;# 
  4194  049D                     	;# 
  4195  050C                     	;# 
  4196  050C                     	;# 
  4197  050D                     	;# 
  4198  050E                     	;# 
  4199  050F                     	;# 
  4200  050F                     	;# 
  4201  0510                     	;# 
  4202  0511                     	;# 
  4203  0512                     	;# 
  4204  0512                     	;# 
  4205  0513                     	;# 
  4206  0514                     	;# 
  4207  0515                     	;# 
  4208  0515                     	;# 
  4209  0516                     	;# 
  4210  0517                     	;# 
  4211  0518                     	;# 
  4212  0519                     	;# 
  4213  051A                     	;# 
  4214  051B                     	;# 
  4215  051C                     	;# 
  4216  051D                     	;# 
  4217  058C                     	;# 
  4218  058C                     	;# 
  4219  058D                     	;# 
  4220  058E                     	;# 
  4221  058F                     	;# 
  4222  058F                     	;# 
  4223  0590                     	;# 
  4224  0591                     	;# 
  4225  0592                     	;# 
  4226  0593                     	;# 
  4227  060C                     	;# 
  4228  060D                     	;# 
  4229  060E                     	;# 
  4230  060F                     	;# 
  4231  0610                     	;# 
  4232  0611                     	;# 
  4233  0612                     	;# 
  4234  0613                     	;# 
  4235  0614                     	;# 
  4236  0616                     	;# 
  4237  0617                     	;# 
  4238  0618                     	;# 
  4239  0619                     	;# 
  4240  061A                     	;# 
  4241  061B                     	;# 
  4242  061C                     	;# 
  4243  061D                     	;# 
  4244  061E                     	;# 
  4245  068C                     	;# 
  4246  068D                     	;# 
  4247  068E                     	;# 
  4248  068F                     	;# 
  4249  0690                     	;# 
  4250  0691                     	;# 
  4251  0692                     	;# 
  4252  0693                     	;# 
  4253  0694                     	;# 
  4254  070C                     	;# 
  4255  070D                     	;# 
  4256  070E                     	;# 
  4257  070F                     	;# 
  4258  0710                     	;# 
  4259  0711                     	;# 
  4260  0712                     	;# 
  4261  0713                     	;# 
  4262  0714                     	;# 
  4263  0716                     	;# 
  4264  0717                     	;# 
  4265  0718                     	;# 
  4266  0719                     	;# 
  4267  071A                     	;# 
  4268  071B                     	;# 
  4269  071C                     	;# 
  4270  071D                     	;# 
  4271  071E                     	;# 
  4272  0796                     	;# 
  4273  0797                     	;# 
  4274  0798                     	;# 
  4275  0799                     	;# 
  4276  079A                     	;# 
  4277  079B                     	;# 
  4278  080C                     	;# 
  4279  080D                     	;# 
  4280  080E                     	;# 
  4281  080F                     	;# 
  4282  0810                     	;# 
  4283  0811                     	;# 
  4284  0812                     	;# 
  4285  0813                     	;# 
  4286  0814                     	;# 
  4287  081A                     	;# 
  4288  081B                     	;# 
  4289  081C                     	;# 
  4290  081D                     	;# 
  4291  081E                     	;# 
  4292  081F                     	;# 
  4293  088C                     	;# 
  4294  088D                     	;# 
  4295  088E                     	;# 
  4296  088F                     	;# 
  4297  0890                     	;# 
  4298  0891                     	;# 
  4299  0892                     	;# 
  4300  0893                     	;# 
  4301  0895                     	;# 
  4302  0896                     	;# 
  4303  0897                     	;# 
  4304  0898                     	;# 
  4305  0899                     	;# 
  4306  089A                     	;# 
  4307  089B                     	;# 
  4308  090C                     	;# 
  4309  090E                     	;# 
  4310  090F                     	;# 
  4311  091F                     	;# 
  4312  091F                     	;# 
  4313  098F                     	;# 
  4314  098F                     	;# 
  4315  0990                     	;# 
  4316  0991                     	;# 
  4317  0992                     	;# 
  4318  0993                     	;# 
  4319  0994                     	;# 
  4320  0995                     	;# 
  4321  0996                     	;# 
  4322  0997                     	;# 
  4323  0E0F                     	;# 
  4324  0E10                     	;# 
  4325  0E11                     	;# 
  4326  0E12                     	;# 
  4327  0E13                     	;# 
  4328  0E14                     	;# 
  4329  0E15                     	;# 
  4330  0E16                     	;# 
  4331  0E17                     	;# 
  4332  0E18                     	;# 
  4333  0E19                     	;# 
  4334  0E1A                     	;# 
  4335  0E1B                     	;# 
  4336  0E1C                     	;# 
  4337  0E1D                     	;# 
  4338  0E1E                     	;# 
  4339  0E1F                     	;# 
  4340  0E20                     	;# 
  4341  0E21                     	;# 
  4342  0E22                     	;# 
  4343  0E23                     	;# 
  4344  0E24                     	;# 
  4345  0E25                     	;# 
  4346  0E26                     	;# 
  4347  0E27                     	;# 
  4348  0E28                     	;# 
  4349  0E29                     	;# 
  4350  0E2A                     	;# 
  4351  0E2B                     	;# 
  4352  0E2C                     	;# 
  4353  0E2D                     	;# 
  4354  0E2E                     	;# 
  4355  0E2F                     	;# 
  4356  0E30                     	;# 
  4357  0E31                     	;# 
  4358  0E32                     	;# 
  4359  0E33                     	;# 
  4360  0E34                     	;# 
  4361  0E35                     	;# 
  4362  0E36                     	;# 
  4363  0E37                     	;# 
  4364  0E8F                     	;# 
  4365  0E90                     	;# 
  4366  0E91                     	;# 
  4367  0E92                     	;# 
  4368  0E93                     	;# 
  4369  0E94                     	;# 
  4370  0E95                     	;# 
  4371  0E96                     	;# 
  4372  0E97                     	;# 
  4373  0E9C                     	;# 
  4374  0E9D                     	;# 
  4375  0E9E                     	;# 
  4376  0EA1                     	;# 
  4377  0EA2                     	;# 
  4378  0EA3                     	;# 
  4379  0EA4                     	;# 
  4380  0EA5                     	;# 
  4381  0EA9                     	;# 
  4382  0EAA                     	;# 
  4383  0EAB                     	;# 
  4384  0EAC                     	;# 
  4385  0EB1                     	;# 
  4386  0EB2                     	;# 
  4387  0EB3                     	;# 
  4388  0EB8                     	;# 
  4389  0EB9                     	;# 
  4390  0EBA                     	;# 
  4391  0EBB                     	;# 
  4392  0EBC                     	;# 
  4393  0EBD                     	;# 
  4394  0EBE                     	;# 
  4395  0EC3                     	;# 
  4396  0EC5                     	;# 
  4397  0EC6                     	;# 
  4398  0EC7                     	;# 
  4399  0EC8                     	;# 
  4400  0EC9                     	;# 
  4401  0ECA                     	;# 
  4402  0ECB                     	;# 
  4403  0ECC                     	;# 
  4404  0F10                     	;# 
  4405  0F11                     	;# 
  4406  0F12                     	;# 
  4407  0F13                     	;# 
  4408  0F14                     	;# 
  4409  0F15                     	;# 
  4410  0F16                     	;# 
  4411  0F17                     	;# 
  4412  0F18                     	;# 
  4413  0F19                     	;# 
  4414  0F1A                     	;# 
  4415  0F1B                     	;# 
  4416  0F1C                     	;# 
  4417  0F1D                     	;# 
  4418  0F1E                     	;# 
  4419  0F1F                     	;# 
  4420  0F20                     	;# 
  4421  0F21                     	;# 
  4422  0F22                     	;# 
  4423  0F23                     	;# 
  4424  0F24                     	;# 
  4425  0F25                     	;# 
  4426  0F26                     	;# 
  4427  0F27                     	;# 
  4428  0F28                     	;# 
  4429  0F29                     	;# 
  4430  0F2A                     	;# 
  4431  0F2B                     	;# 
  4432  0F2C                     	;# 
  4433  0F2D                     	;# 
  4434  0F2E                     	;# 
  4435  0F2F                     	;# 
  4436  0F30                     	;# 
  4437  0F31                     	;# 
  4438  0F32                     	;# 
  4439  0F38                     	;# 
  4440  0F39                     	;# 
  4441  0F3A                     	;# 
  4442  0F3B                     	;# 
  4443  0F3C                     	;# 
  4444  0F3D                     	;# 
  4445  0F3E                     	;# 
  4446  0F3F                     	;# 
  4447  0F40                     	;# 
  4448  0F41                     	;# 
  4449  0F43                     	;# 
  4450  0F44                     	;# 
  4451  0F45                     	;# 
  4452  0F46                     	;# 
  4453  0F47                     	;# 
  4454  0F48                     	;# 
  4455  0F49                     	;# 
  4456  0F4A                     	;# 
  4457  0F4B                     	;# 
  4458  0F4C                     	;# 
  4459  0F4E                     	;# 
  4460  0F4F                     	;# 
  4461  0F50                     	;# 
  4462  0F51                     	;# 
  4463  0F52                     	;# 
  4464  0F53                     	;# 
  4465  0F54                     	;# 
  4466  0F55                     	;# 
  4467  0F56                     	;# 
  4468  0F57                     	;# 
  4469  0F59                     	;# 
  4470  0F5A                     	;# 
  4471  0F5B                     	;# 
  4472  0F5C                     	;# 
  4473  0F5D                     	;# 
  4474  0F61                     	;# 
  4475  0F62                     	;# 
  4476  0F64                     	;# 
  4477  0F65                     	;# 
  4478  0F66                     	;# 
  4479  0F67                     	;# 
  4480  0F68                     	;# 
  4481  0F69                     	;# 
  4482  0F6A                     	;# 
  4483  0F6B                     	;# 
  4484  0F6C                     	;# 
  4485  0F6D                     	;# 
  4486  0FE4                     	;# 
  4487  0FE5                     	;# 
  4488  0FE6                     	;# 
  4489  0FE7                     	;# 
  4490  0FE8                     	;# 
  4491  0FE9                     	;# 
  4492  0FEA                     	;# 
  4493  0FEB                     	;# 
  4494  0FED                     	;# 
  4495  0FEE                     	;# 
  4496  0FEF                     	;# 
  4497  0000                     	;# 
  4498  0001                     	;# 
  4499  0002                     	;# 
  4500  0003                     	;# 
  4501  0004                     	;# 
  4502  0005                     	;# 
  4503  0006                     	;# 
  4504  0007                     	;# 
  4505  0008                     	;# 
  4506  0009                     	;# 
  4507  000A                     	;# 
  4508  000B                     	;# 
  4509  000C                     	;# 
  4510  000D                     	;# 
  4511  000E                     	;# 
  4512  000F                     	;# 
  4513  0010                     	;# 
  4514  0011                     	;# 
  4515  0012                     	;# 
  4516  0013                     	;# 
  4517  0014                     	;# 
  4518  0015                     	;# 
  4519  0016                     	;# 
  4520  0017                     	;# 
  4521  0018                     	;# 
  4522  0019                     	;# 
  4523  001A                     	;# 
  4524  001C                     	;# 
  4525  001C                     	;# 
  4526  001D                     	;# 
  4527  001D                     	;# 
  4528  001E                     	;# 
  4529  001F                     	;# 
  4530  008C                     	;# 
  4531  008C                     	;# 
  4532  008D                     	;# 
  4533  008E                     	;# 
  4534  008E                     	;# 
  4535  008F                     	;# 
  4536  0090                     	;# 
  4537  0090                     	;# 
  4538  0091                     	;# 
  4539  0093                     	;# 
  4540  0094                     	;# 
  4541  0095                     	;# 
  4542  0096                     	;# 
  4543  0097                     	;# 
  4544  0098                     	;# 
  4545  0099                     	;# 
  4546  009A                     	;# 
  4547  009B                     	;# 
  4548  009C                     	;# 
  4549  009D                     	;# 
  4550  009E                     	;# 
  4551  010C                     	;# 
  4552  010D                     	;# 
  4553  010E                     	;# 
  4554  010E                     	;# 
  4555  010F                     	;# 
  4556  0110                     	;# 
  4557  0110                     	;# 
  4558  0111                     	;# 
  4559  0112                     	;# 
  4560  0112                     	;# 
  4561  0113                     	;# 
  4562  0114                     	;# 
  4563  0114                     	;# 
  4564  0115                     	;# 
  4565  0116                     	;# 
  4566  0116                     	;# 
  4567  0117                     	;# 
  4568  0119                     	;# 
  4569  0119                     	;# 
  4570  0119                     	;# 
  4571  011A                     	;# 
  4572  011A                     	;# 
  4573  011A                     	;# 
  4574  011B                     	;# 
  4575  011B                     	;# 
  4576  011B                     	;# 
  4577  011B                     	;# 
  4578  011B                     	;# 
  4579  011C                     	;# 
  4580  011C                     	;# 
  4581  011C                     	;# 
  4582  011D                     	;# 
  4583  011D                     	;# 
  4584  011D                     	;# 
  4585  011E                     	;# 
  4586  011E                     	;# 
  4587  011E                     	;# 
  4588  011F                     	;# 
  4589  011F                     	;# 
  4590  011F                     	;# 
  4591  011F                     	;# 
  4592  011F                     	;# 
  4593  018C                     	;# 
  4594  018D                     	;# 
  4595  018E                     	;# 
  4596  018F                     	;# 
  4597  0190                     	;# 
  4598  0191                     	;# 
  4599  0192                     	;# 
  4600  0196                     	;# 
  4601  0197                     	;# 
  4602  0198                     	;# 
  4603  0199                     	;# 
  4604  019A                     	;# 
  4605  019B                     	;# 
  4606  019C                     	;# 
  4607  020C                     	;# 
  4608  020C                     	;# 
  4609  020D                     	;# 
  4610  020E                     	;# 
  4611  020F                     	;# 
  4612  020F                     	;# 
  4613  0210                     	;# 
  4614  0210                     	;# 
  4615  0211                     	;# 
  4616  0211                     	;# 
  4617  0212                     	;# 
  4618  0212                     	;# 
  4619  0213                     	;# 
  4620  0214                     	;# 
  4621  0215                     	;# 
  4622  0215                     	;# 
  4623  0216                     	;# 
  4624  0216                     	;# 
  4625  0217                     	;# 
  4626  0217                     	;# 
  4627  0218                     	;# 
  4628  0218                     	;# 
  4629  0219                     	;# 
  4630  021A                     	;# 
  4631  021B                     	;# 
  4632  021B                     	;# 
  4633  021C                     	;# 
  4634  021C                     	;# 
  4635  021D                     	;# 
  4636  021D                     	;# 
  4637  021E                     	;# 
  4638  021F                     	;# 
  4639  028C                     	;# 
  4640  028C                     	;# 
  4641  028D                     	;# 
  4642  028D                     	;# 
  4643  028E                     	;# 
  4644  028F                     	;# 
  4645  0290                     	;# 
  4646  0290                     	;# 
  4647  0291                     	;# 
  4648  0292                     	;# 
  4649  0292                     	;# 
  4650  0293                     	;# 
  4651  0293                     	;# 
  4652  0294                     	;# 
  4653  0295                     	;# 
  4654  0296                     	;# 
  4655  0296                     	;# 
  4656  0297                     	;# 
  4657  0298                     	;# 
  4658  0298                     	;# 
  4659  0299                     	;# 
  4660  0299                     	;# 
  4661  029A                     	;# 
  4662  029B                     	;# 
  4663  029C                     	;# 
  4664  029C                     	;# 
  4665  029D                     	;# 
  4666  030C                     	;# 
  4667  030C                     	;# 
  4668  030D                     	;# 
  4669  030E                     	;# 
  4670  030F                     	;# 
  4671  0310                     	;# 
  4672  0310                     	;# 
  4673  0311                     	;# 
  4674  0312                     	;# 
  4675  0313                     	;# 
  4676  0314                     	;# 
  4677  0314                     	;# 
  4678  0315                     	;# 
  4679  0316                     	;# 
  4680  0317                     	;# 
  4681  0318                     	;# 
  4682  0318                     	;# 
  4683  0319                     	;# 
  4684  031A                     	;# 
  4685  031B                     	;# 
  4686  031C                     	;# 
  4687  031C                     	;# 
  4688  031D                     	;# 
  4689  031E                     	;# 
  4690  031F                     	;# 
  4691  038C                     	;# 
  4692  038C                     	;# 
  4693  038D                     	;# 
  4694  038E                     	;# 
  4695  0390                     	;# 
  4696  0390                     	;# 
  4697  0391                     	;# 
  4698  0392                     	;# 
  4699  040C                     	;# 
  4700  040D                     	;# 
  4701  040E                     	;# 
  4702  040F                     	;# 
  4703  0410                     	;# 
  4704  0411                     	;# 
  4705  0416                     	;# 
  4706  0416                     	;# 
  4707  0417                     	;# 
  4708  0418                     	;# 
  4709  0418                     	;# 
  4710  0419                     	;# 
  4711  041A                     	;# 
  4712  041A                     	;# 
  4713  041B                     	;# 
  4714  041C                     	;# 
  4715  041C                     	;# 
  4716  041D                     	;# 
  4717  041E                     	;# 
  4718  041F                     	;# 
  4719  048C                     	;# 
  4720  048C                     	;# 
  4721  048D                     	;# 
  4722  048E                     	;# 
  4723  048F                     	;# 
  4724  048F                     	;# 
  4725  0490                     	;# 
  4726  0491                     	;# 
  4727  0492                     	;# 
  4728  0492                     	;# 
  4729  0493                     	;# 
  4730  0494                     	;# 
  4731  0495                     	;# 
  4732  0495                     	;# 
  4733  0496                     	;# 
  4734  0497                     	;# 
  4735  0498                     	;# 
  4736  0499                     	;# 
  4737  049A                     	;# 
  4738  049B                     	;# 
  4739  049C                     	;# 
  4740  049D                     	;# 
  4741  050C                     	;# 
  4742  050C                     	;# 
  4743  050D                     	;# 
  4744  050E                     	;# 
  4745  050F                     	;# 
  4746  050F                     	;# 
  4747  0510                     	;# 
  4748  0511                     	;# 
  4749  0512                     	;# 
  4750  0512                     	;# 
  4751  0513                     	;# 
  4752  0514                     	;# 
  4753  0515                     	;# 
  4754  0515                     	;# 
  4755  0516                     	;# 
  4756  0517                     	;# 
  4757  0518                     	;# 
  4758  0519                     	;# 
  4759  051A                     	;# 
  4760  051B                     	;# 
  4761  051C                     	;# 
  4762  051D                     	;# 
  4763  058C                     	;# 
  4764  058C                     	;# 
  4765  058D                     	;# 
  4766  058E                     	;# 
  4767  058F                     	;# 
  4768  058F                     	;# 
  4769  0590                     	;# 
  4770  0591                     	;# 
  4771  0592                     	;# 
  4772  0593                     	;# 
  4773  060C                     	;# 
  4774  060D                     	;# 
  4775  060E                     	;# 
  4776  060F                     	;# 
  4777  0610                     	;# 
  4778  0611                     	;# 
  4779  0612                     	;# 
  4780  0613                     	;# 
  4781  0614                     	;# 
  4782  0616                     	;# 
  4783  0617                     	;# 
  4784  0618                     	;# 
  4785  0619                     	;# 
  4786  061A                     	;# 
  4787  061B                     	;# 
  4788  061C                     	;# 
  4789  061D                     	;# 
  4790  061E                     	;# 
  4791  068C                     	;# 
  4792  068D                     	;# 
  4793  068E                     	;# 
  4794  068F                     	;# 
  4795  0690                     	;# 
  4796  0691                     	;# 
  4797  0692                     	;# 
  4798  0693                     	;# 
  4799  0694                     	;# 
  4800  070C                     	;# 
  4801  070D                     	;# 
  4802  070E                     	;# 
  4803  070F                     	;# 
  4804  0710                     	;# 
  4805  0711                     	;# 
  4806  0712                     	;# 
  4807  0713                     	;# 
  4808  0714                     	;# 
  4809  0716                     	;# 
  4810  0717                     	;# 
  4811  0718                     	;# 
  4812  0719                     	;# 
  4813  071A                     	;# 
  4814  071B                     	;# 
  4815  071C                     	;# 
  4816  071D                     	;# 
  4817  071E                     	;# 
  4818  0796                     	;# 
  4819  0797                     	;# 
  4820  0798                     	;# 
  4821  0799                     	;# 
  4822  079A                     	;# 
  4823  079B                     	;# 
  4824  080C                     	;# 
  4825  080D                     	;# 
  4826  080E                     	;# 
  4827  080F                     	;# 
  4828  0810                     	;# 
  4829  0811                     	;# 
  4830  0812                     	;# 
  4831  0813                     	;# 
  4832  0814                     	;# 
  4833  081A                     	;# 
  4834  081B                     	;# 
  4835  081C                     	;# 
  4836  081D                     	;# 
  4837  081E                     	;# 
  4838  081F                     	;# 
  4839  088C                     	;# 
  4840  088D                     	;# 
  4841  088E                     	;# 
  4842  088F                     	;# 
  4843  0890                     	;# 
  4844  0891                     	;# 
  4845  0892                     	;# 
  4846  0893                     	;# 
  4847  0895                     	;# 
  4848  0896                     	;# 
  4849  0897                     	;# 
  4850  0898                     	;# 
  4851  0899                     	;# 
  4852  089A                     	;# 
  4853  089B                     	;# 
  4854  090C                     	;# 
  4855  090E                     	;# 
  4856  090F                     	;# 
  4857  091F                     	;# 
  4858  091F                     	;# 
  4859  098F                     	;# 
  4860  098F                     	;# 
  4861  0990                     	;# 
  4862  0991                     	;# 
  4863  0992                     	;# 
  4864  0993                     	;# 
  4865  0994                     	;# 
  4866  0995                     	;# 
  4867  0996                     	;# 
  4868  0997                     	;# 
  4869  0E0F                     	;# 
  4870  0E10                     	;# 
  4871  0E11                     	;# 
  4872  0E12                     	;# 
  4873  0E13                     	;# 
  4874  0E14                     	;# 
  4875  0E15                     	;# 
  4876  0E16                     	;# 
  4877  0E17                     	;# 
  4878  0E18                     	;# 
  4879  0E19                     	;# 
  4880  0E1A                     	;# 
  4881  0E1B                     	;# 
  4882  0E1C                     	;# 
  4883  0E1D                     	;# 
  4884  0E1E                     	;# 
  4885  0E1F                     	;# 
  4886  0E20                     	;# 
  4887  0E21                     	;# 
  4888  0E22                     	;# 
  4889  0E23                     	;# 
  4890  0E24                     	;# 
  4891  0E25                     	;# 
  4892  0E26                     	;# 
  4893  0E27                     	;# 
  4894  0E28                     	;# 
  4895  0E29                     	;# 
  4896  0E2A                     	;# 
  4897  0E2B                     	;# 
  4898  0E2C                     	;# 
  4899  0E2D                     	;# 
  4900  0E2E                     	;# 
  4901  0E2F                     	;# 
  4902  0E30                     	;# 
  4903  0E31                     	;# 
  4904  0E32                     	;# 
  4905  0E33                     	;# 
  4906  0E34                     	;# 
  4907  0E35                     	;# 
  4908  0E36                     	;# 
  4909  0E37                     	;# 
  4910  0E8F                     	;# 
  4911  0E90                     	;# 
  4912  0E91                     	;# 
  4913  0E92                     	;# 
  4914  0E93                     	;# 
  4915  0E94                     	;# 
  4916  0E95                     	;# 
  4917  0E96                     	;# 
  4918  0E97                     	;# 
  4919  0E9C                     	;# 
  4920  0E9D                     	;# 
  4921  0E9E                     	;# 
  4922  0EA1                     	;# 
  4923  0EA2                     	;# 
  4924  0EA3                     	;# 
  4925  0EA4                     	;# 
  4926  0EA5                     	;# 
  4927  0EA9                     	;# 
  4928  0EAA                     	;# 
  4929  0EAB                     	;# 
  4930  0EAC                     	;# 
  4931  0EB1                     	;# 
  4932  0EB2                     	;# 
  4933  0EB3                     	;# 
  4934  0EB8                     	;# 
  4935  0EB9                     	;# 
  4936  0EBA                     	;# 
  4937  0EBB                     	;# 
  4938  0EBC                     	;# 
  4939  0EBD                     	;# 
  4940  0EBE                     	;# 
  4941  0EC3                     	;# 
  4942  0EC5                     	;# 
  4943  0EC6                     	;# 
  4944  0EC7                     	;# 
  4945  0EC8                     	;# 
  4946  0EC9                     	;# 
  4947  0ECA                     	;# 
  4948  0ECB                     	;# 
  4949  0ECC                     	;# 
  4950  0F10                     	;# 
  4951  0F11                     	;# 
  4952  0F12                     	;# 
  4953  0F13                     	;# 
  4954  0F14                     	;# 
  4955  0F15                     	;# 
  4956  0F16                     	;# 
  4957  0F17                     	;# 
  4958  0F18                     	;# 
  4959  0F19                     	;# 
  4960  0F1A                     	;# 
  4961  0F1B                     	;# 
  4962  0F1C                     	;# 
  4963  0F1D                     	;# 
  4964  0F1E                     	;# 
  4965  0F1F                     	;# 
  4966  0F20                     	;# 
  4967  0F21                     	;# 
  4968  0F22                     	;# 
  4969  0F23                     	;# 
  4970  0F24                     	;# 
  4971  0F25                     	;# 
  4972  0F26                     	;# 
  4973  0F27                     	;# 
  4974  0F28                     	;# 
  4975  0F29                     	;# 
  4976  0F2A                     	;# 
  4977  0F2B                     	;# 
  4978  0F2C                     	;# 
  4979  0F2D                     	;# 
  4980  0F2E                     	;# 
  4981  0F2F                     	;# 
  4982  0F30                     	;# 
  4983  0F31                     	;# 
  4984  0F32                     	;# 
  4985  0F38                     	;# 
  4986  0F39                     	;# 
  4987  0F3A                     	;# 
  4988  0F3B                     	;# 
  4989  0F3C                     	;# 
  4990  0F3D                     	;# 
  4991  0F3E                     	;# 
  4992  0F3F                     	;# 
  4993  0F40                     	;# 
  4994  0F41                     	;# 
  4995  0F43                     	;# 
  4996  0F44                     	;# 
  4997  0F45                     	;# 
  4998  0F46                     	;# 
  4999  0F47                     	;# 
  5000  0F48                     	;# 
  5001  0F49                     	;# 
  5002  0F4A                     	;# 
  5003  0F4B                     	;# 
  5004  0F4C                     	;# 
  5005  0F4E                     	;# 
  5006  0F4F                     	;# 
  5007  0F50                     	;# 
  5008  0F51                     	;# 
  5009  0F52                     	;# 
  5010  0F53                     	;# 
  5011  0F54                     	;# 
  5012  0F55                     	;# 
  5013  0F56                     	;# 
  5014  0F57                     	;# 
  5015  0F59                     	;# 
  5016  0F5A                     	;# 
  5017  0F5B                     	;# 
  5018  0F5C                     	;# 
  5019  0F5D                     	;# 
  5020  0F61                     	;# 
  5021  0F62                     	;# 
  5022  0F64                     	;# 
  5023  0F65                     	;# 
  5024  0F66                     	;# 
  5025  0F67                     	;# 
  5026  0F68                     	;# 
  5027  0F69                     	;# 
  5028  0F6A                     	;# 
  5029  0F6B                     	;# 
  5030  0F6C                     	;# 
  5031  0F6D                     	;# 
  5032  0FE4                     	;# 
  5033  0FE5                     	;# 
  5034  0FE6                     	;# 
  5035  0FE7                     	;# 
  5036  0FE8                     	;# 
  5037  0FE9                     	;# 
  5038  0FEA                     	;# 
  5039  0FEB                     	;# 
  5040  0FED                     	;# 
  5041  0FEE                     	;# 
  5042  0FEF                     	;# 
  5043  0000                     	;# 
  5044  0001                     	;# 
  5045  0002                     	;# 
  5046  0003                     	;# 
  5047  0004                     	;# 
  5048  0005                     	;# 
  5049  0006                     	;# 
  5050  0007                     	;# 
  5051  0008                     	;# 
  5052  0009                     	;# 
  5053  000A                     	;# 
  5054  000B                     	;# 
  5055  000C                     	;# 
  5056  000D                     	;# 
  5057  000E                     	;# 
  5058  000F                     	;# 
  5059  0010                     	;# 
  5060  0011                     	;# 
  5061  0012                     	;# 
  5062  0013                     	;# 
  5063  0014                     	;# 
  5064  0015                     	;# 
  5065  0016                     	;# 
  5066  0017                     	;# 
  5067  0018                     	;# 
  5068  0019                     	;# 
  5069  001A                     	;# 
  5070  001C                     	;# 
  5071  001C                     	;# 
  5072  001D                     	;# 
  5073  001D                     	;# 
  5074  001E                     	;# 
  5075  001F                     	;# 
  5076  008C                     	;# 
  5077  008C                     	;# 
  5078  008D                     	;# 
  5079  008E                     	;# 
  5080  008E                     	;# 
  5081  008F                     	;# 
  5082  0090                     	;# 
  5083  0090                     	;# 
  5084  0091                     	;# 
  5085  0093                     	;# 
  5086  0094                     	;# 
  5087  0095                     	;# 
  5088  0096                     	;# 
  5089  0097                     	;# 
  5090  0098                     	;# 
  5091  0099                     	;# 
  5092  009A                     	;# 
  5093  009B                     	;# 
  5094  009C                     	;# 
  5095  009D                     	;# 
  5096  009E                     	;# 
  5097  010C                     	;# 
  5098  010D                     	;# 
  5099  010E                     	;# 
  5100  010E                     	;# 
  5101  010F                     	;# 
  5102  0110                     	;# 
  5103  0110                     	;# 
  5104  0111                     	;# 
  5105  0112                     	;# 
  5106  0112                     	;# 
  5107  0113                     	;# 
  5108  0114                     	;# 
  5109  0114                     	;# 
  5110  0115                     	;# 
  5111  0116                     	;# 
  5112  0116                     	;# 
  5113  0117                     	;# 
  5114  0119                     	;# 
  5115  0119                     	;# 
  5116  0119                     	;# 
  5117  011A                     	;# 
  5118  011A                     	;# 
  5119  011A                     	;# 
  5120  011B                     	;# 
  5121  011B                     	;# 
  5122  011B                     	;# 
  5123  011B                     	;# 
  5124  011B                     	;# 
  5125  011C                     	;# 
  5126  011C                     	;# 
  5127  011C                     	;# 
  5128  011D                     	;# 
  5129  011D                     	;# 
  5130  011D                     	;# 
  5131  011E                     	;# 
  5132  011E                     	;# 
  5133  011E                     	;# 
  5134  011F                     	;# 
  5135  011F                     	;# 
  5136  011F                     	;# 
  5137  011F                     	;# 
  5138  011F                     	;# 
  5139  018C                     	;# 
  5140  018D                     	;# 
  5141  018E                     	;# 
  5142  018F                     	;# 
  5143  0190                     	;# 
  5144  0191                     	;# 
  5145  0192                     	;# 
  5146  0196                     	;# 
  5147  0197                     	;# 
  5148  0198                     	;# 
  5149  0199                     	;# 
  5150  019A                     	;# 
  5151  019B                     	;# 
  5152  019C                     	;# 
  5153  020C                     	;# 
  5154  020C                     	;# 
  5155  020D                     	;# 
  5156  020E                     	;# 
  5157  020F                     	;# 
  5158  020F                     	;# 
  5159  0210                     	;# 
  5160  0210                     	;# 
  5161  0211                     	;# 
  5162  0211                     	;# 
  5163  0212                     	;# 
  5164  0212                     	;# 
  5165  0213                     	;# 
  5166  0214                     	;# 
  5167  0215                     	;# 
  5168  0215                     	;# 
  5169  0216                     	;# 
  5170  0216                     	;# 
  5171  0217                     	;# 
  5172  0217                     	;# 
  5173  0218                     	;# 
  5174  0218                     	;# 
  5175  0219                     	;# 
  5176  021A                     	;# 
  5177  021B                     	;# 
  5178  021B                     	;# 
  5179  021C                     	;# 
  5180  021C                     	;# 
  5181  021D                     	;# 
  5182  021D                     	;# 
  5183  021E                     	;# 
  5184  021F                     	;# 
  5185  028C                     	;# 
  5186  028C                     	;# 
  5187  028D                     	;# 
  5188  028D                     	;# 
  5189  028E                     	;# 
  5190  028F                     	;# 
  5191  0290                     	;# 
  5192  0290                     	;# 
  5193  0291                     	;# 
  5194  0292                     	;# 
  5195  0292                     	;# 
  5196  0293                     	;# 
  5197  0293                     	;# 
  5198  0294                     	;# 
  5199  0295                     	;# 
  5200  0296                     	;# 
  5201  0296                     	;# 
  5202  0297                     	;# 
  5203  0298                     	;# 
  5204  0298                     	;# 
  5205  0299                     	;# 
  5206  0299                     	;# 
  5207  029A                     	;# 
  5208  029B                     	;# 
  5209  029C                     	;# 
  5210  029C                     	;# 
  5211  029D                     	;# 
  5212  030C                     	;# 
  5213  030C                     	;# 
  5214  030D                     	;# 
  5215  030E                     	;# 
  5216  030F                     	;# 
  5217  0310                     	;# 
  5218  0310                     	;# 
  5219  0311                     	;# 
  5220  0312                     	;# 
  5221  0313                     	;# 
  5222  0314                     	;# 
  5223  0314                     	;# 
  5224  0315                     	;# 
  5225  0316                     	;# 
  5226  0317                     	;# 
  5227  0318                     	;# 
  5228  0318                     	;# 
  5229  0319                     	;# 
  5230  031A                     	;# 
  5231  031B                     	;# 
  5232  031C                     	;# 
  5233  031C                     	;# 
  5234  031D                     	;# 
  5235  031E                     	;# 
  5236  031F                     	;# 
  5237  038C                     	;# 
  5238  038C                     	;# 
  5239  038D                     	;# 
  5240  038E                     	;# 
  5241  0390                     	;# 
  5242  0390                     	;# 
  5243  0391                     	;# 
  5244  0392                     	;# 
  5245  040C                     	;# 
  5246  040D                     	;# 
  5247  040E                     	;# 
  5248  040F                     	;# 
  5249  0410                     	;# 
  5250  0411                     	;# 
  5251  0416                     	;# 
  5252  0416                     	;# 
  5253  0417                     	;# 
  5254  0418                     	;# 
  5255  0418                     	;# 
  5256  0419                     	;# 
  5257  041A                     	;# 
  5258  041A                     	;# 
  5259  041B                     	;# 
  5260  041C                     	;# 
  5261  041C                     	;# 
  5262  041D                     	;# 
  5263  041E                     	;# 
  5264  041F                     	;# 
  5265  048C                     	;# 
  5266  048C                     	;# 
  5267  048D                     	;# 
  5268  048E                     	;# 
  5269  048F                     	;# 
  5270  048F                     	;# 
  5271  0490                     	;# 
  5272  0491                     	;# 
  5273  0492                     	;# 
  5274  0492                     	;# 
  5275  0493                     	;# 
  5276  0494                     	;# 
  5277  0495                     	;# 
  5278  0495                     	;# 
  5279  0496                     	;# 
  5280  0497                     	;# 
  5281  0498                     	;# 
  5282  0499                     	;# 
  5283  049A                     	;# 
  5284  049B                     	;# 
  5285  049C                     	;# 
  5286  049D                     	;# 
  5287  050C                     	;# 
  5288  050C                     	;# 
  5289  050D                     	;# 
  5290  050E                     	;# 
  5291  050F                     	;# 
  5292  050F                     	;# 
  5293  0510                     	;# 
  5294  0511                     	;# 
  5295  0512                     	;# 
  5296  0512                     	;# 
  5297  0513                     	;# 
  5298  0514                     	;# 
  5299  0515                     	;# 
  5300  0515                     	;# 
  5301  0516                     	;# 
  5302  0517                     	;# 
  5303  0518                     	;# 
  5304  0519                     	;# 
  5305  051A                     	;# 
  5306  051B                     	;# 
  5307  051C                     	;# 
  5308  051D                     	;# 
  5309  058C                     	;# 
  5310  058C                     	;# 
  5311  058D                     	;# 
  5312  058E                     	;# 
  5313  058F                     	;# 
  5314  058F                     	;# 
  5315  0590                     	;# 
  5316  0591                     	;# 
  5317  0592                     	;# 
  5318  0593                     	;# 
  5319  060C                     	;# 
  5320  060D                     	;# 
  5321  060E                     	;# 
  5322  060F                     	;# 
  5323  0610                     	;# 
  5324  0611                     	;# 
  5325  0612                     	;# 
  5326  0613                     	;# 
  5327  0614                     	;# 
  5328  0616                     	;# 
  5329  0617                     	;# 
  5330  0618                     	;# 
  5331  0619                     	;# 
  5332  061A                     	;# 
  5333  061B                     	;# 
  5334  061C                     	;# 
  5335  061D                     	;# 
  5336  061E                     	;# 
  5337  068C                     	;# 
  5338  068D                     	;# 
  5339  068E                     	;# 
  5340  068F                     	;# 
  5341  0690                     	;# 
  5342  0691                     	;# 
  5343  0692                     	;# 
  5344  0693                     	;# 
  5345  0694                     	;# 
  5346  070C                     	;# 
  5347  070D                     	;# 
  5348  070E                     	;# 
  5349  070F                     	;# 
  5350  0710                     	;# 
  5351  0711                     	;# 
  5352  0712                     	;# 
  5353  0713                     	;# 
  5354  0714                     	;# 
  5355  0716                     	;# 
  5356  0717                     	;# 
  5357  0718                     	;# 
  5358  0719                     	;# 
  5359  071A                     	;# 
  5360  071B                     	;# 
  5361  071C                     	;# 
  5362  071D                     	;# 
  5363  071E                     	;# 
  5364  0796                     	;# 
  5365  0797                     	;# 
  5366  0798                     	;# 
  5367  0799                     	;# 
  5368  079A                     	;# 
  5369  079B                     	;# 
  5370  080C                     	;# 
  5371  080D                     	;# 
  5372  080E                     	;# 
  5373  080F                     	;# 
  5374  0810                     	;# 
  5375  0811                     	;# 
  5376  0812                     	;# 
  5377  0813                     	;# 
  5378  0814                     	;# 
  5379  081A                     	;# 
  5380  081B                     	;# 
  5381  081C                     	;# 
  5382  081D                     	;# 
  5383  081E                     	;# 
  5384  081F                     	;# 
  5385  088C                     	;# 
  5386  088D                     	;# 
  5387  088E                     	;# 
  5388  088F                     	;# 
  5389  0890                     	;# 
  5390  0891                     	;# 
  5391  0892                     	;# 
  5392  0893                     	;# 
  5393  0895                     	;# 
  5394  0896                     	;# 
  5395  0897                     	;# 
  5396  0898                     	;# 
  5397  0899                     	;# 
  5398  089A                     	;# 
  5399  089B                     	;# 
  5400  090C                     	;# 
  5401  090E                     	;# 
  5402  090F                     	;# 
  5403  091F                     	;# 
  5404  091F                     	;# 
  5405  098F                     	;# 
  5406  098F                     	;# 
  5407  0990                     	;# 
  5408  0991                     	;# 
  5409  0992                     	;# 
  5410  0993                     	;# 
  5411  0994                     	;# 
  5412  0995                     	;# 
  5413  0996                     	;# 
  5414  0997                     	;# 
  5415  0E0F                     	;# 
  5416  0E10                     	;# 
  5417  0E11                     	;# 
  5418  0E12                     	;# 
  5419  0E13                     	;# 
  5420  0E14                     	;# 
  5421  0E15                     	;# 
  5422  0E16                     	;# 
  5423  0E17                     	;# 
  5424  0E18                     	;# 
  5425  0E19                     	;# 
  5426  0E1A                     	;# 
  5427  0E1B                     	;# 
  5428  0E1C                     	;# 
  5429  0E1D                     	;# 
  5430  0E1E                     	;# 
  5431  0E1F                     	;# 
  5432  0E20                     	;# 
  5433  0E21                     	;# 
  5434  0E22                     	;# 
  5435  0E23                     	;# 
  5436  0E24                     	;# 
  5437  0E25                     	;# 
  5438  0E26                     	;# 
  5439  0E27                     	;# 
  5440  0E28                     	;# 
  5441  0E29                     	;# 
  5442  0E2A                     	;# 
  5443  0E2B                     	;# 
  5444  0E2C                     	;# 
  5445  0E2D                     	;# 
  5446  0E2E                     	;# 
  5447  0E2F                     	;# 
  5448  0E30                     	;# 
  5449  0E31                     	;# 
  5450  0E32                     	;# 
  5451  0E33                     	;# 
  5452  0E34                     	;# 
  5453  0E35                     	;# 
  5454  0E36                     	;# 
  5455  0E37                     	;# 
  5456  0E8F                     	;# 
  5457  0E90                     	;# 
  5458  0E91                     	;# 
  5459  0E92                     	;# 
  5460  0E93                     	;# 
  5461  0E94                     	;# 
  5462  0E95                     	;# 
  5463  0E96                     	;# 
  5464  0E97                     	;# 
  5465  0E9C                     	;# 
  5466  0E9D                     	;# 
  5467  0E9E                     	;# 
  5468  0EA1                     	;# 
  5469  0EA2                     	;# 
  5470  0EA3                     	;# 
  5471  0EA4                     	;# 
  5472  0EA5                     	;# 
  5473  0EA9                     	;# 
  5474  0EAA                     	;# 
  5475  0EAB                     	;# 
  5476  0EAC                     	;# 
  5477  0EB1                     	;# 
  5478  0EB2                     	;# 
  5479  0EB3                     	;# 
  5480  0EB8                     	;# 
  5481  0EB9                     	;# 
  5482  0EBA                     	;# 
  5483  0EBB                     	;# 
  5484  0EBC                     	;# 
  5485  0EBD                     	;# 
  5486  0EBE                     	;# 
  5487  0EC3                     	;# 
  5488  0EC5                     	;# 
  5489  0EC6                     	;# 
  5490  0EC7                     	;# 
  5491  0EC8                     	;# 
  5492  0EC9                     	;# 
  5493  0ECA                     	;# 
  5494  0ECB                     	;# 
  5495  0ECC                     	;# 
  5496  0F10                     	;# 
  5497  0F11                     	;# 
  5498  0F12                     	;# 
  5499  0F13                     	;# 
  5500  0F14                     	;# 
  5501  0F15                     	;# 
  5502  0F16                     	;# 
  5503  0F17                     	;# 
  5504  0F18                     	;# 
  5505  0F19                     	;# 
  5506  0F1A                     	;# 
  5507  0F1B                     	;# 
  5508  0F1C                     	;# 
  5509  0F1D                     	;# 
  5510  0F1E                     	;# 
  5511  0F1F                     	;# 
  5512  0F20                     	;# 
  5513  0F21                     	;# 
  5514  0F22                     	;# 
  5515  0F23                     	;# 
  5516  0F24                     	;# 
  5517  0F25                     	;# 
  5518  0F26                     	;# 
  5519  0F27                     	;# 
  5520  0F28                     	;# 
  5521  0F29                     	;# 
  5522  0F2A                     	;# 
  5523  0F2B                     	;# 
  5524  0F2C                     	;# 
  5525  0F2D                     	;# 
  5526  0F2E                     	;# 
  5527  0F2F                     	;# 
  5528  0F30                     	;# 
  5529  0F31                     	;# 
  5530  0F32                     	;# 
  5531  0F38                     	;# 
  5532  0F39                     	;# 
  5533  0F3A                     	;# 
  5534  0F3B                     	;# 
  5535  0F3C                     	;# 
  5536  0F3D                     	;# 
  5537  0F3E                     	;# 
  5538  0F3F                     	;# 
  5539  0F40                     	;# 
  5540  0F41                     	;# 
  5541  0F43                     	;# 
  5542  0F44                     	;# 
  5543  0F45                     	;# 
  5544  0F46                     	;# 
  5545  0F47                     	;# 
  5546  0F48                     	;# 
  5547  0F49                     	;# 
  5548  0F4A                     	;# 
  5549  0F4B                     	;# 
  5550  0F4C                     	;# 
  5551  0F4E                     	;# 
  5552  0F4F                     	;# 
  5553  0F50                     	;# 
  5554  0F51                     	;# 
  5555  0F52                     	;# 
  5556  0F53                     	;# 
  5557  0F54                     	;# 
  5558  0F55                     	;# 
  5559  0F56                     	;# 
  5560  0F57                     	;# 
  5561  0F59                     	;# 
  5562  0F5A                     	;# 
  5563  0F5B                     	;# 
  5564  0F5C                     	;# 
  5565  0F5D                     	;# 
  5566  0F61                     	;# 
  5567  0F62                     	;# 
  5568  0F64                     	;# 
  5569  0F65                     	;# 
  5570  0F66                     	;# 
  5571  0F67                     	;# 
  5572  0F68                     	;# 
  5573  0F69                     	;# 
  5574  0F6A                     	;# 
  5575  0F6B                     	;# 
  5576  0F6C                     	;# 
  5577  0F6D                     	;# 
  5578  0FE4                     	;# 
  5579  0FE5                     	;# 
  5580  0FE6                     	;# 
  5581  0FE7                     	;# 
  5582  0FE8                     	;# 
  5583  0FE9                     	;# 
  5584  0FEA                     	;# 
  5585  0FEB                     	;# 
  5586  0FED                     	;# 
  5587  0FEE                     	;# 
  5588  0FEF                     	;# 
  5589  0000                     	;# 
  5590  0001                     	;# 
  5591  0002                     	;# 
  5592  0003                     	;# 
  5593  0004                     	;# 
  5594  0005                     	;# 
  5595  0006                     	;# 
  5596  0007                     	;# 
  5597  0008                     	;# 
  5598  0009                     	;# 
  5599  000A                     	;# 
  5600  000B                     	;# 
  5601  000C                     	;# 
  5602  000D                     	;# 
  5603  000E                     	;# 
  5604  000F                     	;# 
  5605  0010                     	;# 
  5606  0011                     	;# 
  5607  0012                     	;# 
  5608  0013                     	;# 
  5609  0014                     	;# 
  5610  0015                     	;# 
  5611  0016                     	;# 
  5612  0017                     	;# 
  5613  0018                     	;# 
  5614  0019                     	;# 
  5615  001A                     	;# 
  5616  001C                     	;# 
  5617  001C                     	;# 
  5618  001D                     	;# 
  5619  001D                     	;# 
  5620  001E                     	;# 
  5621  001F                     	;# 
  5622  008C                     	;# 
  5623  008C                     	;# 
  5624  008D                     	;# 
  5625  008E                     	;# 
  5626  008E                     	;# 
  5627  008F                     	;# 
  5628  0090                     	;# 
  5629  0090                     	;# 
  5630  0091                     	;# 
  5631  0093                     	;# 
  5632  0094                     	;# 
  5633  0095                     	;# 
  5634  0096                     	;# 
  5635  0097                     	;# 
  5636  0098                     	;# 
  5637  0099                     	;# 
  5638  009A                     	;# 
  5639  009B                     	;# 
  5640  009C                     	;# 
  5641  009D                     	;# 
  5642  009E                     	;# 
  5643  010C                     	;# 
  5644  010D                     	;# 
  5645  010E                     	;# 
  5646  010E                     	;# 
  5647  010F                     	;# 
  5648  0110                     	;# 
  5649  0110                     	;# 
  5650  0111                     	;# 
  5651  0112                     	;# 
  5652  0112                     	;# 
  5653  0113                     	;# 
  5654  0114                     	;# 
  5655  0114                     	;# 
  5656  0115                     	;# 
  5657  0116                     	;# 
  5658  0116                     	;# 
  5659  0117                     	;# 
  5660  0119                     	;# 
  5661  0119                     	;# 
  5662  0119                     	;# 
  5663  011A                     	;# 
  5664  011A                     	;# 
  5665  011A                     	;# 
  5666  011B                     	;# 
  5667  011B                     	;# 
  5668  011B                     	;# 
  5669  011B                     	;# 
  5670  011B                     	;# 
  5671  011C                     	;# 
  5672  011C                     	;# 
  5673  011C                     	;# 
  5674  011D                     	;# 
  5675  011D                     	;# 
  5676  011D                     	;# 
  5677  011E                     	;# 
  5678  011E                     	;# 
  5679  011E                     	;# 
  5680  011F                     	;# 
  5681  011F                     	;# 
  5682  011F                     	;# 
  5683  011F                     	;# 
  5684  011F                     	;# 
  5685  018C                     	;# 
  5686  018D                     	;# 
  5687  018E                     	;# 
  5688  018F                     	;# 
  5689  0190                     	;# 
  5690  0191                     	;# 
  5691  0192                     	;# 
  5692  0196                     	;# 
  5693  0197                     	;# 
  5694  0198                     	;# 
  5695  0199                     	;# 
  5696  019A                     	;# 
  5697  019B                     	;# 
  5698  019C                     	;# 
  5699  020C                     	;# 
  5700  020C                     	;# 
  5701  020D                     	;# 
  5702  020E                     	;# 
  5703  020F                     	;# 
  5704  020F                     	;# 
  5705  0210                     	;# 
  5706  0210                     	;# 
  5707  0211                     	;# 
  5708  0211                     	;# 
  5709  0212                     	;# 
  5710  0212                     	;# 
  5711  0213                     	;# 
  5712  0214                     	;# 
  5713  0215                     	;# 
  5714  0215                     	;# 
  5715  0216                     	;# 
  5716  0216                     	;# 
  5717  0217                     	;# 
  5718  0217                     	;# 
  5719  0218                     	;# 
  5720  0218                     	;# 
  5721  0219                     	;# 
  5722  021A                     	;# 
  5723  021B                     	;# 
  5724  021B                     	;# 
  5725  021C                     	;# 
  5726  021C                     	;# 
  5727  021D                     	;# 
  5728  021D                     	;# 
  5729  021E                     	;# 
  5730  021F                     	;# 
  5731  028C                     	;# 
  5732  028C                     	;# 
  5733  028D                     	;# 
  5734  028D                     	;# 
  5735  028E                     	;# 
  5736  028F                     	;# 
  5737  0290                     	;# 
  5738  0290                     	;# 
  5739  0291                     	;# 
  5740  0292                     	;# 
  5741  0292                     	;# 
  5742  0293                     	;# 
  5743  0293                     	;# 
  5744  0294                     	;# 
  5745  0295                     	;# 
  5746  0296                     	;# 
  5747  0296                     	;# 
  5748  0297                     	;# 
  5749  0298                     	;# 
  5750  0298                     	;# 
  5751  0299                     	;# 
  5752  0299                     	;# 
  5753  029A                     	;# 
  5754  029B                     	;# 
  5755  029C                     	;# 
  5756  029C                     	;# 
  5757  029D                     	;# 
  5758  030C                     	;# 
  5759  030C                     	;# 
  5760  030D                     	;# 
  5761  030E                     	;# 
  5762  030F                     	;# 
  5763  0310                     	;# 
  5764  0310                     	;# 
  5765  0311                     	;# 
  5766  0312                     	;# 
  5767  0313                     	;# 
  5768  0314                     	;# 
  5769  0314                     	;# 
  5770  0315                     	;# 
  5771  0316                     	;# 
  5772  0317                     	;# 
  5773  0318                     	;# 
  5774  0318                     	;# 
  5775  0319                     	;# 
  5776  031A                     	;# 
  5777  031B                     	;# 
  5778  031C                     	;# 
  5779  031C                     	;# 
  5780  031D                     	;# 
  5781  031E                     	;# 
  5782  031F                     	;# 
  5783  038C                     	;# 
  5784  038C                     	;# 
  5785  038D                     	;# 
  5786  038E                     	;# 
  5787  0390                     	;# 
  5788  0390                     	;# 
  5789  0391                     	;# 
  5790  0392                     	;# 
  5791  040C                     	;# 
  5792  040D                     	;# 
  5793  040E                     	;# 
  5794  040F                     	;# 
  5795  0410                     	;# 
  5796  0411                     	;# 
  5797  0416                     	;# 
  5798  0416                     	;# 
  5799  0417                     	;# 
  5800  0418                     	;# 
  5801  0418                     	;# 
  5802  0419                     	;# 
  5803  041A                     	;# 
  5804  041A                     	;# 
  5805  041B                     	;# 
  5806  041C                     	;# 
  5807  041C                     	;# 
  5808  041D                     	;# 
  5809  041E                     	;# 
  5810  041F                     	;# 
  5811  048C                     	;# 
  5812  048C                     	;# 
  5813  048D                     	;# 
  5814  048E                     	;# 
  5815  048F                     	;# 
  5816  048F                     	;# 
  5817  0490                     	;# 
  5818  0491                     	;# 
  5819  0492                     	;# 
  5820  0492                     	;# 
  5821  0493                     	;# 
  5822  0494                     	;# 
  5823  0495                     	;# 
  5824  0495                     	;# 
  5825  0496                     	;# 
  5826  0497                     	;# 
  5827  0498                     	;# 
  5828  0499                     	;# 
  5829  049A                     	;# 
  5830  049B                     	;# 
  5831  049C                     	;# 
  5832  049D                     	;# 
  5833  050C                     	;# 
  5834  050C                     	;# 
  5835  050D                     	;# 
  5836  050E                     	;# 
  5837  050F                     	;# 
  5838  050F                     	;# 
  5839  0510                     	;# 
  5840  0511                     	;# 
  5841  0512                     	;# 
  5842  0512                     	;# 
  5843  0513                     	;# 
  5844  0514                     	;# 
  5845  0515                     	;# 
  5846  0515                     	;# 
  5847  0516                     	;# 
  5848  0517                     	;# 
  5849  0518                     	;# 
  5850  0519                     	;# 
  5851  051A                     	;# 
  5852  051B                     	;# 
  5853  051C                     	;# 
  5854  051D                     	;# 
  5855  058C                     	;# 
  5856  058C                     	;# 
  5857  058D                     	;# 
  5858  058E                     	;# 
  5859  058F                     	;# 
  5860  058F                     	;# 
  5861  0590                     	;# 
  5862  0591                     	;# 
  5863  0592                     	;# 
  5864  0593                     	;# 
  5865  060C                     	;# 
  5866  060D                     	;# 
  5867  060E                     	;# 
  5868  060F                     	;# 
  5869  0610                     	;# 
  5870  0611                     	;# 
  5871  0612                     	;# 
  5872  0613                     	;# 
  5873  0614                     	;# 
  5874  0616                     	;# 
  5875  0617                     	;# 
  5876  0618                     	;# 
  5877  0619                     	;# 
  5878  061A                     	;# 
  5879  061B                     	;# 
  5880  061C                     	;# 
  5881  061D                     	;# 
  5882  061E                     	;# 
  5883  068C                     	;# 
  5884  068D                     	;# 
  5885  068E                     	;# 
  5886  068F                     	;# 
  5887  0690                     	;# 
  5888  0691                     	;# 
  5889  0692                     	;# 
  5890  0693                     	;# 
  5891  0694                     	;# 
  5892  070C                     	;# 
  5893  070D                     	;# 
  5894  070E                     	;# 
  5895  070F                     	;# 
  5896  0710                     	;# 
  5897  0711                     	;# 
  5898  0712                     	;# 
  5899  0713                     	;# 
  5900  0714                     	;# 
  5901  0716                     	;# 
  5902  0717                     	;# 
  5903  0718                     	;# 
  5904  0719                     	;# 
  5905  071A                     	;# 
  5906  071B                     	;# 
  5907  071C                     	;# 
  5908  071D                     	;# 
  5909  071E                     	;# 
  5910  0796                     	;# 
  5911  0797                     	;# 
  5912  0798                     	;# 
  5913  0799                     	;# 
  5914  079A                     	;# 
  5915  079B                     	;# 
  5916  080C                     	;# 
  5917  080D                     	;# 
  5918  080E                     	;# 
  5919  080F                     	;# 
  5920  0810                     	;# 
  5921  0811                     	;# 
  5922  0812                     	;# 
  5923  0813                     	;# 
  5924  0814                     	;# 
  5925  081A                     	;# 
  5926  081B                     	;# 
  5927  081C                     	;# 
  5928  081D                     	;# 
  5929  081E                     	;# 
  5930  081F                     	;# 
  5931  088C                     	;# 
  5932  088D                     	;# 
  5933  088E                     	;# 
  5934  088F                     	;# 
  5935  0890                     	;# 
  5936  0891                     	;# 
  5937  0892                     	;# 
  5938  0893                     	;# 
  5939  0895                     	;# 
  5940  0896                     	;# 
  5941  0897                     	;# 
  5942  0898                     	;# 
  5943  0899                     	;# 
  5944  089A                     	;# 
  5945  089B                     	;# 
  5946  090C                     	;# 
  5947  090E                     	;# 
  5948  090F                     	;# 
  5949  091F                     	;# 
  5950  091F                     	;# 
  5951  098F                     	;# 
  5952  098F                     	;# 
  5953  0990                     	;# 
  5954  0991                     	;# 
  5955  0992                     	;# 
  5956  0993                     	;# 
  5957  0994                     	;# 
  5958  0995                     	;# 
  5959  0996                     	;# 
  5960  0997                     	;# 
  5961  0E0F                     	;# 
  5962  0E10                     	;# 
  5963  0E11                     	;# 
  5964  0E12                     	;# 
  5965  0E13                     	;# 
  5966  0E14                     	;# 
  5967  0E15                     	;# 
  5968  0E16                     	;# 
  5969  0E17                     	;# 
  5970  0E18                     	;# 
  5971  0E19                     	;# 
  5972  0E1A                     	;# 
  5973  0E1B                     	;# 
  5974  0E1C                     	;# 
  5975  0E1D                     	;# 
  5976  0E1E                     	;# 
  5977  0E1F                     	;# 
  5978  0E20                     	;# 
  5979  0E21                     	;# 
  5980  0E22                     	;# 
  5981  0E23                     	;# 
  5982  0E24                     	;# 
  5983  0E25                     	;# 
  5984  0E26                     	;# 
  5985  0E27                     	;# 
  5986  0E28                     	;# 
  5987  0E29                     	;# 
  5988  0E2A                     	;# 
  5989  0E2B                     	;# 
  5990  0E2C                     	;# 
  5991  0E2D                     	;# 
  5992  0E2E                     	;# 
  5993  0E2F                     	;# 
  5994  0E30                     	;# 
  5995  0E31                     	;# 
  5996  0E32                     	;# 
  5997  0E33                     	;# 
  5998  0E34                     	;# 
  5999  0E35                     	;# 
  6000  0E36                     	;# 
  6001  0E37                     	;# 
  6002  0E8F                     	;# 
  6003  0E90                     	;# 
  6004  0E91                     	;# 
  6005  0E92                     	;# 
  6006  0E93                     	;# 
  6007  0E94                     	;# 
  6008  0E95                     	;# 
  6009  0E96                     	;# 
  6010  0E97                     	;# 
  6011  0E9C                     	;# 
  6012  0E9D                     	;# 
  6013  0E9E                     	;# 
  6014  0EA1                     	;# 
  6015  0EA2                     	;# 
  6016  0EA3                     	;# 
  6017  0EA4                     	;# 
  6018  0EA5                     	;# 
  6019  0EA9                     	;# 
  6020  0EAA                     	;# 
  6021  0EAB                     	;# 
  6022  0EAC                     	;# 
  6023  0EB1                     	;# 
  6024  0EB2                     	;# 
  6025  0EB3                     	;# 
  6026  0EB8                     	;# 
  6027  0EB9                     	;# 
  6028  0EBA                     	;# 
  6029  0EBB                     	;# 
  6030  0EBC                     	;# 
  6031  0EBD                     	;# 
  6032  0EBE                     	;# 
  6033  0EC3                     	;# 
  6034  0EC5                     	;# 
  6035  0EC6                     	;# 
  6036  0EC7                     	;# 
  6037  0EC8                     	;# 
  6038  0EC9                     	;# 
  6039  0ECA                     	;# 
  6040  0ECB                     	;# 
  6041  0ECC                     	;# 
  6042  0F10                     	;# 
  6043  0F11                     	;# 
  6044  0F12                     	;# 
  6045  0F13                     	;# 
  6046  0F14                     	;# 
  6047  0F15                     	;# 
  6048  0F16                     	;# 
  6049  0F17                     	;# 
  6050  0F18                     	;# 
  6051  0F19                     	;# 
  6052  0F1A                     	;# 
  6053  0F1B                     	;# 
  6054  0F1C                     	;# 
  6055  0F1D                     	;# 
  6056  0F1E                     	;# 
  6057  0F1F                     	;# 
  6058  0F20                     	;# 
  6059  0F21                     	;# 
  6060  0F22                     	;# 
  6061  0F23                     	;# 
  6062  0F24                     	;# 
  6063  0F25                     	;# 
  6064  0F26                     	;# 
  6065  0F27                     	;# 
  6066  0F28                     	;# 
  6067  0F29                     	;# 
  6068  0F2A                     	;# 
  6069  0F2B                     	;# 
  6070  0F2C                     	;# 
  6071  0F2D                     	;# 
  6072  0F2E                     	;# 
  6073  0F2F                     	;# 
  6074  0F30                     	;# 
  6075  0F31                     	;# 
  6076  0F32                     	;# 
  6077  0F38                     	;# 
  6078  0F39                     	;# 
  6079  0F3A                     	;# 
  6080  0F3B                     	;# 
  6081  0F3C                     	;# 
  6082  0F3D                     	;# 
  6083  0F3E                     	;# 
  6084  0F3F                     	;# 
  6085  0F40                     	;# 
  6086  0F41                     	;# 
  6087  0F43                     	;# 
  6088  0F44                     	;# 
  6089  0F45                     	;# 
  6090  0F46                     	;# 
  6091  0F47                     	;# 
  6092  0F48                     	;# 
  6093  0F49                     	;# 
  6094  0F4A                     	;# 
  6095  0F4B                     	;# 
  6096  0F4C                     	;# 
  6097  0F4E                     	;# 
  6098  0F4F                     	;# 
  6099  0F50                     	;# 
  6100  0F51                     	;# 
  6101  0F52                     	;# 
  6102  0F53                     	;# 
  6103  0F54                     	;# 
  6104  0F55                     	;# 
  6105  0F56                     	;# 
  6106  0F57                     	;# 
  6107  0F59                     	;# 
  6108  0F5A                     	;# 
  6109  0F5B                     	;# 
  6110  0F5C                     	;# 
  6111  0F5D                     	;# 
  6112  0F61                     	;# 
  6113  0F62                     	;# 
  6114  0F64                     	;# 
  6115  0F65                     	;# 
  6116  0F66                     	;# 
  6117  0F67                     	;# 
  6118  0F68                     	;# 
  6119  0F69                     	;# 
  6120  0F6A                     	;# 
  6121  0F6B                     	;# 
  6122  0F6C                     	;# 
  6123  0F6D                     	;# 
  6124  0FE4                     	;# 
  6125  0FE5                     	;# 
  6126  0FE6                     	;# 
  6127  0FE7                     	;# 
  6128  0FE8                     	;# 
  6129  0FE9                     	;# 
  6130  0FEA                     	;# 
  6131  0FEB                     	;# 
  6132  0FED                     	;# 
  6133  0FEE                     	;# 
  6134  0FEF                     	;# 
  6135  0000                     	;# 
  6136  0001                     	;# 
  6137  0002                     	;# 
  6138  0003                     	;# 
  6139  0004                     	;# 
  6140  0005                     	;# 
  6141  0006                     	;# 
  6142  0007                     	;# 
  6143  0008                     	;# 
  6144  0009                     	;# 
  6145  000A                     	;# 
  6146  000B                     	;# 
  6147  000C                     	;# 
  6148  000D                     	;# 
  6149  000E                     	;# 
  6150  000F                     	;# 
  6151  0010                     	;# 
  6152  0011                     	;# 
  6153  0012                     	;# 
  6154  0013                     	;# 
  6155  0014                     	;# 
  6156  0015                     	;# 
  6157  0016                     	;# 
  6158  0017                     	;# 
  6159  0018                     	;# 
  6160  0019                     	;# 
  6161  001A                     	;# 
  6162  001C                     	;# 
  6163  001C                     	;# 
  6164  001D                     	;# 
  6165  001D                     	;# 
  6166  001E                     	;# 
  6167  001F                     	;# 
  6168  008C                     	;# 
  6169  008C                     	;# 
  6170  008D                     	;# 
  6171  008E                     	;# 
  6172  008E                     	;# 
  6173  008F                     	;# 
  6174  0090                     	;# 
  6175  0090                     	;# 
  6176  0091                     	;# 
  6177  0093                     	;# 
  6178  0094                     	;# 
  6179  0095                     	;# 
  6180  0096                     	;# 
  6181  0097                     	;# 
  6182  0098                     	;# 
  6183  0099                     	;# 
  6184  009A                     	;# 
  6185  009B                     	;# 
  6186  009C                     	;# 
  6187  009D                     	;# 
  6188  009E                     	;# 
  6189  010C                     	;# 
  6190  010D                     	;# 
  6191  010E                     	;# 
  6192  010E                     	;# 
  6193  010F                     	;# 
  6194  0110                     	;# 
  6195  0110                     	;# 
  6196  0111                     	;# 
  6197  0112                     	;# 
  6198  0112                     	;# 
  6199  0113                     	;# 
  6200  0114                     	;# 
  6201  0114                     	;# 
  6202  0115                     	;# 
  6203  0116                     	;# 
  6204  0116                     	;# 
  6205  0117                     	;# 
  6206  0119                     	;# 
  6207  0119                     	;# 
  6208  0119                     	;# 
  6209  011A                     	;# 
  6210  011A                     	;# 
  6211  011A                     	;# 
  6212  011B                     	;# 
  6213  011B                     	;# 
  6214  011B                     	;# 
  6215  011B                     	;# 
  6216  011B                     	;# 
  6217  011C                     	;# 
  6218  011C                     	;# 
  6219  011C                     	;# 
  6220  011D                     	;# 
  6221  011D                     	;# 
  6222  011D                     	;# 
  6223  011E                     	;# 
  6224  011E                     	;# 
  6225  011E                     	;# 
  6226  011F                     	;# 
  6227  011F                     	;# 
  6228  011F                     	;# 
  6229  011F                     	;# 
  6230  011F                     	;# 
  6231  018C                     	;# 
  6232  018D                     	;# 
  6233  018E                     	;# 
  6234  018F                     	;# 
  6235  0190                     	;# 
  6236  0191                     	;# 
  6237  0192                     	;# 
  6238  0196                     	;# 
  6239  0197                     	;# 
  6240  0198                     	;# 
  6241  0199                     	;# 
  6242  019A                     	;# 
  6243  019B                     	;# 
  6244  019C                     	;# 
  6245  020C                     	;# 
  6246  020C                     	;# 
  6247  020D                     	;# 
  6248  020E                     	;# 
  6249  020F                     	;# 
  6250  020F                     	;# 
  6251  0210                     	;# 
  6252  0210                     	;# 
  6253  0211                     	;# 
  6254  0211                     	;# 
  6255  0212                     	;# 
  6256  0212                     	;# 
  6257  0213                     	;# 
  6258  0214                     	;# 
  6259  0215                     	;# 
  6260  0215                     	;# 
  6261  0216                     	;# 
  6262  0216                     	;# 
  6263  0217                     	;# 
  6264  0217                     	;# 
  6265  0218                     	;# 
  6266  0218                     	;# 
  6267  0219                     	;# 
  6268  021A                     	;# 
  6269  021B                     	;# 
  6270  021B                     	;# 
  6271  021C                     	;# 
  6272  021C                     	;# 
  6273  021D                     	;# 
  6274  021D                     	;# 
  6275  021E                     	;# 
  6276  021F                     	;# 
  6277  028C                     	;# 
  6278  028C                     	;# 
  6279  028D                     	;# 
  6280  028D                     	;# 
  6281  028E                     	;# 
  6282  028F                     	;# 
  6283  0290                     	;# 
  6284  0290                     	;# 
  6285  0291                     	;# 
  6286  0292                     	;# 
  6287  0292                     	;# 
  6288  0293                     	;# 
  6289  0293                     	;# 
  6290  0294                     	;# 
  6291  0295                     	;# 
  6292  0296                     	;# 
  6293  0296                     	;# 
  6294  0297                     	;# 
  6295  0298                     	;# 
  6296  0298                     	;# 
  6297  0299                     	;# 
  6298  0299                     	;# 
  6299  029A                     	;# 
  6300  029B                     	;# 
  6301  029C                     	;# 
  6302  029C                     	;# 
  6303  029D                     	;# 
  6304  030C                     	;# 
  6305  030C                     	;# 
  6306  030D                     	;# 
  6307  030E                     	;# 
  6308  030F                     	;# 
  6309  0310                     	;# 
  6310  0310                     	;# 
  6311  0311                     	;# 
  6312  0312                     	;# 
  6313  0313                     	;# 
  6314  0314                     	;# 
  6315  0314                     	;# 
  6316  0315                     	;# 
  6317  0316                     	;# 
  6318  0317                     	;# 
  6319  0318                     	;# 
  6320  0318                     	;# 
  6321  0319                     	;# 
  6322  031A                     	;# 
  6323  031B                     	;# 
  6324  031C                     	;# 
  6325  031C                     	;# 
  6326  031D                     	;# 
  6327  031E                     	;# 
  6328  031F                     	;# 
  6329  038C                     	;# 
  6330  038C                     	;# 
  6331  038D                     	;# 
  6332  038E                     	;# 
  6333  0390                     	;# 
  6334  0390                     	;# 
  6335  0391                     	;# 
  6336  0392                     	;# 
  6337  040C                     	;# 
  6338  040D                     	;# 
  6339  040E                     	;# 
  6340  040F                     	;# 
  6341  0410                     	;# 
  6342  0411                     	;# 
  6343  0416                     	;# 
  6344  0416                     	;# 
  6345  0417                     	;# 
  6346  0418                     	;# 
  6347  0418                     	;# 
  6348  0419                     	;# 
  6349  041A                     	;# 
  6350  041A                     	;# 
  6351  041B                     	;# 
  6352  041C                     	;# 
  6353  041C                     	;# 
  6354  041D                     	;# 
  6355  041E                     	;# 
  6356  041F                     	;# 
  6357  048C                     	;# 
  6358  048C                     	;# 
  6359  048D                     	;# 
  6360  048E                     	;# 
  6361  048F                     	;# 
  6362  048F                     	;# 
  6363  0490                     	;# 
  6364  0491                     	;# 
  6365  0492                     	;# 
  6366  0492                     	;# 
  6367  0493                     	;# 
  6368  0494                     	;# 
  6369  0495                     	;# 
  6370  0495                     	;# 
  6371  0496                     	;# 
  6372  0497                     	;# 
  6373  0498                     	;# 
  6374  0499                     	;# 
  6375  049A                     	;# 
  6376  049B                     	;# 
  6377  049C                     	;# 
  6378  049D                     	;# 
  6379  050C                     	;# 
  6380  050C                     	;# 
  6381  050D                     	;# 
  6382  050E                     	;# 
  6383  050F                     	;# 
  6384  050F                     	;# 
  6385  0510                     	;# 
  6386  0511                     	;# 
  6387  0512                     	;# 
  6388  0512                     	;# 
  6389  0513                     	;# 
  6390  0514                     	;# 
  6391  0515                     	;# 
  6392  0515                     	;# 
  6393  0516                     	;# 
  6394  0517                     	;# 
  6395  0518                     	;# 
  6396  0519                     	;# 
  6397  051A                     	;# 
  6398  051B                     	;# 
  6399  051C                     	;# 
  6400  051D                     	;# 
  6401  058C                     	;# 
  6402  058C                     	;# 
  6403  058D                     	;# 
  6404  058E                     	;# 
  6405  058F                     	;# 
  6406  058F                     	;# 
  6407  0590                     	;# 
  6408  0591                     	;# 
  6409  0592                     	;# 
  6410  0593                     	;# 
  6411  060C                     	;# 
  6412  060D                     	;# 
  6413  060E                     	;# 
  6414  060F                     	;# 
  6415  0610                     	;# 
  6416  0611                     	;# 
  6417  0612                     	;# 
  6418  0613                     	;# 
  6419  0614                     	;# 
  6420  0616                     	;# 
  6421  0617                     	;# 
  6422  0618                     	;# 
  6423  0619                     	;# 
  6424  061A                     	;# 
  6425  061B                     	;# 
  6426  061C                     	;# 
  6427  061D                     	;# 
  6428  061E                     	;# 
  6429  068C                     	;# 
  6430  068D                     	;# 
  6431  068E                     	;# 
  6432  068F                     	;# 
  6433  0690                     	;# 
  6434  0691                     	;# 
  6435  0692                     	;# 
  6436  0693                     	;# 
  6437  0694                     	;# 
  6438  070C                     	;# 
  6439  070D                     	;# 
  6440  070E                     	;# 
  6441  070F                     	;# 
  6442  0710                     	;# 
  6443  0711                     	;# 
  6444  0712                     	;# 
  6445  0713                     	;# 
  6446  0714                     	;# 
  6447  0716                     	;# 
  6448  0717                     	;# 
  6449  0718                     	;# 
  6450  0719                     	;# 
  6451  071A                     	;# 
  6452  071B                     	;# 
  6453  071C                     	;# 
  6454  071D                     	;# 
  6455  071E                     	;# 
  6456  0796                     	;# 
  6457  0797                     	;# 
  6458  0798                     	;# 
  6459  0799                     	;# 
  6460  079A                     	;# 
  6461  079B                     	;# 
  6462  080C                     	;# 
  6463  080D                     	;# 
  6464  080E                     	;# 
  6465  080F                     	;# 
  6466  0810                     	;# 
  6467  0811                     	;# 
  6468  0812                     	;# 
  6469  0813                     	;# 
  6470  0814                     	;# 
  6471  081A                     	;# 
  6472  081B                     	;# 
  6473  081C                     	;# 
  6474  081D                     	;# 
  6475  081E                     	;# 
  6476  081F                     	;# 
  6477  088C                     	;# 
  6478  088D                     	;# 
  6479  088E                     	;# 
  6480  088F                     	;# 
  6481  0890                     	;# 
  6482  0891                     	;# 
  6483  0892                     	;# 
  6484  0893                     	;# 
  6485  0895                     	;# 
  6486  0896                     	;# 
  6487  0897                     	;# 
  6488  0898                     	;# 
  6489  0899                     	;# 
  6490  089A                     	;# 
  6491  089B                     	;# 
  6492  090C                     	;# 
  6493  090E                     	;# 
  6494  090F                     	;# 
  6495  091F                     	;# 
  6496  091F                     	;# 
  6497  098F                     	;# 
  6498  098F                     	;# 
  6499  0990                     	;# 
  6500  0991                     	;# 
  6501  0992                     	;# 
  6502  0993                     	;# 
  6503  0994                     	;# 
  6504  0995                     	;# 
  6505  0996                     	;# 
  6506  0997                     	;# 
  6507  0E0F                     	;# 
  6508  0E10                     	;# 
  6509  0E11                     	;# 
  6510  0E12                     	;# 
  6511  0E13                     	;# 
  6512  0E14                     	;# 
  6513  0E15                     	;# 
  6514  0E16                     	;# 
  6515  0E17                     	;# 
  6516  0E18                     	;# 
  6517  0E19                     	;# 
  6518  0E1A                     	;# 
  6519  0E1B                     	;# 
  6520  0E1C                     	;# 
  6521  0E1D                     	;# 
  6522  0E1E                     	;# 
  6523  0E1F                     	;# 
  6524  0E20                     	;# 
  6525  0E21                     	;# 
  6526  0E22                     	;# 
  6527  0E23                     	;# 
  6528  0E24                     	;# 
  6529  0E25                     	;# 
  6530  0E26                     	;# 
  6531  0E27                     	;# 
  6532  0E28                     	;# 
  6533  0E29                     	;# 
  6534  0E2A                     	;# 
  6535  0E2B                     	;# 
  6536  0E2C                     	;# 
  6537  0E2D                     	;# 
  6538  0E2E                     	;# 
  6539  0E2F                     	;# 
  6540  0E30                     	;# 
  6541  0E31                     	;# 
  6542  0E32                     	;# 
  6543  0E33                     	;# 
  6544  0E34                     	;# 
  6545  0E35                     	;# 
  6546  0E36                     	;# 
  6547  0E37                     	;# 
  6548  0E8F                     	;# 
  6549  0E90                     	;# 
  6550  0E91                     	;# 
  6551  0E92                     	;# 
  6552  0E93                     	;# 
  6553  0E94                     	;# 
  6554  0E95                     	;# 
  6555  0E96                     	;# 
  6556  0E97                     	;# 
  6557  0E9C                     	;# 
  6558  0E9D                     	;# 
  6559  0E9E                     	;# 
  6560  0EA1                     	;# 
  6561  0EA2                     	;# 
  6562  0EA3                     	;# 
  6563  0EA4                     	;# 
  6564  0EA5                     	;# 
  6565  0EA9                     	;# 
  6566  0EAA                     	;# 
  6567  0EAB                     	;# 
  6568  0EAC                     	;# 
  6569  0EB1                     	;# 
  6570  0EB2                     	;# 
  6571  0EB3                     	;# 
  6572  0EB8                     	;# 
  6573  0EB9                     	;# 
  6574  0EBA                     	;# 
  6575  0EBB                     	;# 
  6576  0EBC                     	;# 
  6577  0EBD                     	;# 
  6578  0EBE                     	;# 
  6579  0EC3                     	;# 
  6580  0EC5                     	;# 
  6581  0EC6                     	;# 
  6582  0EC7                     	;# 
  6583  0EC8                     	;# 
  6584  0EC9                     	;# 
  6585  0ECA                     	;# 
  6586  0ECB                     	;# 
  6587  0ECC                     	;# 
  6588  0F10                     	;# 
  6589  0F11                     	;# 
  6590  0F12                     	;# 
  6591  0F13                     	;# 
  6592  0F14                     	;# 
  6593  0F15                     	;# 
  6594  0F16                     	;# 
  6595  0F17                     	;# 
  6596  0F18                     	;# 
  6597  0F19                     	;# 
  6598  0F1A                     	;# 
  6599  0F1B                     	;# 
  6600  0F1C                     	;# 
  6601  0F1D                     	;# 
  6602  0F1E                     	;# 
  6603  0F1F                     	;# 
  6604  0F20                     	;# 
  6605  0F21                     	;# 
  6606  0F22                     	;# 
  6607  0F23                     	;# 
  6608  0F24                     	;# 
  6609  0F25                     	;# 
  6610  0F26                     	;# 
  6611  0F27                     	;# 
  6612  0F28                     	;# 
  6613  0F29                     	;# 
  6614  0F2A                     	;# 
  6615  0F2B                     	;# 
  6616  0F2C                     	;# 
  6617  0F2D                     	;# 
  6618  0F2E                     	;# 
  6619  0F2F                     	;# 
  6620  0F30                     	;# 
  6621  0F31                     	;# 
  6622  0F32                     	;# 
  6623  0F38                     	;# 
  6624  0F39                     	;# 
  6625  0F3A                     	;# 
  6626  0F3B                     	;# 
  6627  0F3C                     	;# 
  6628  0F3D                     	;# 
  6629  0F3E                     	;# 
  6630  0F3F                     	;# 
  6631  0F40                     	;# 
  6632  0F41                     	;# 
  6633  0F43                     	;# 
  6634  0F44                     	;# 
  6635  0F45                     	;# 
  6636  0F46                     	;# 
  6637  0F47                     	;# 
  6638  0F48                     	;# 
  6639  0F49                     	;# 
  6640  0F4A                     	;# 
  6641  0F4B                     	;# 
  6642  0F4C                     	;# 
  6643  0F4E                     	;# 
  6644  0F4F                     	;# 
  6645  0F50                     	;# 
  6646  0F51                     	;# 
  6647  0F52                     	;# 
  6648  0F53                     	;# 
  6649  0F54                     	;# 
  6650  0F55                     	;# 
  6651  0F56                     	;# 
  6652  0F57                     	;# 
  6653  0F59                     	;# 
  6654  0F5A                     	;# 
  6655  0F5B                     	;# 
  6656  0F5C                     	;# 
  6657  0F5D                     	;# 
  6658  0F61                     	;# 
  6659  0F62                     	;# 
  6660  0F64                     	;# 
  6661  0F65                     	;# 
  6662  0F66                     	;# 
  6663  0F67                     	;# 
  6664  0F68                     	;# 
  6665  0F69                     	;# 
  6666  0F6A                     	;# 
  6667  0F6B                     	;# 
  6668  0F6C                     	;# 
  6669  0F6D                     	;# 
  6670  0FE4                     	;# 
  6671  0FE5                     	;# 
  6672  0FE6                     	;# 
  6673  0FE7                     	;# 
  6674  0FE8                     	;# 
  6675  0FE9                     	;# 
  6676  0FEA                     	;# 
  6677  0FEB                     	;# 
  6678  0FED                     	;# 
  6679  0FEE                     	;# 
  6680  0FEF                     	;# 
  6681  0000                     	;# 
  6682  0001                     	;# 
  6683  0002                     	;# 
  6684  0003                     	;# 
  6685  0004                     	;# 
  6686  0005                     	;# 
  6687  0006                     	;# 
  6688  0007                     	;# 
  6689  0008                     	;# 
  6690  0009                     	;# 
  6691  000A                     	;# 
  6692  000B                     	;# 
  6693  000C                     	;# 
  6694  000D                     	;# 
  6695  000E                     	;# 
  6696  000F                     	;# 
  6697  0010                     	;# 
  6698  0011                     	;# 
  6699  0012                     	;# 
  6700  0013                     	;# 
  6701  0014                     	;# 
  6702  0015                     	;# 
  6703  0016                     	;# 
  6704  0017                     	;# 
  6705  0018                     	;# 
  6706  0019                     	;# 
  6707  001A                     	;# 
  6708  001C                     	;# 
  6709  001C                     	;# 
  6710  001D                     	;# 
  6711  001D                     	;# 
  6712  001E                     	;# 
  6713  001F                     	;# 
  6714  008C                     	;# 
  6715  008C                     	;# 
  6716  008D                     	;# 
  6717  008E                     	;# 
  6718  008E                     	;# 
  6719  008F                     	;# 
  6720  0090                     	;# 
  6721  0090                     	;# 
  6722  0091                     	;# 
  6723  0093                     	;# 
  6724  0094                     	;# 
  6725  0095                     	;# 
  6726  0096                     	;# 
  6727  0097                     	;# 
  6728  0098                     	;# 
  6729  0099                     	;# 
  6730  009A                     	;# 
  6731  009B                     	;# 
  6732  009C                     	;# 
  6733  009D                     	;# 
  6734  009E                     	;# 
  6735  010C                     	;# 
  6736  010D                     	;# 
  6737  010E                     	;# 
  6738  010E                     	;# 
  6739  010F                     	;# 
  6740  0110                     	;# 
  6741  0110                     	;# 
  6742  0111                     	;# 
  6743  0112                     	;# 
  6744  0112                     	;# 
  6745  0113                     	;# 
  6746  0114                     	;# 
  6747  0114                     	;# 
  6748  0115                     	;# 
  6749  0116                     	;# 
  6750  0116                     	;# 
  6751  0117                     	;# 
  6752  0119                     	;# 
  6753  0119                     	;# 
  6754  0119                     	;# 
  6755  011A                     	;# 
  6756  011A                     	;# 
  6757  011A                     	;# 
  6758  011B                     	;# 
  6759  011B                     	;# 
  6760  011B                     	;# 
  6761  011B                     	;# 
  6762  011B                     	;# 
  6763  011C                     	;# 
  6764  011C                     	;# 
  6765  011C                     	;# 
  6766  011D                     	;# 
  6767  011D                     	;# 
  6768  011D                     	;# 
  6769  011E                     	;# 
  6770  011E                     	;# 
  6771  011E                     	;# 
  6772  011F                     	;# 
  6773  011F                     	;# 
  6774  011F                     	;# 
  6775  011F                     	;# 
  6776  011F                     	;# 
  6777  018C                     	;# 
  6778  018D                     	;# 
  6779  018E                     	;# 
  6780  018F                     	;# 
  6781  0190                     	;# 
  6782  0191                     	;# 
  6783  0192                     	;# 
  6784  0196                     	;# 
  6785  0197                     	;# 
  6786  0198                     	;# 
  6787  0199                     	;# 
  6788  019A                     	;# 
  6789  019B                     	;# 
  6790  019C                     	;# 
  6791  020C                     	;# 
  6792  020C                     	;# 
  6793  020D                     	;# 
  6794  020E                     	;# 
  6795  020F                     	;# 
  6796  020F                     	;# 
  6797  0210                     	;# 
  6798  0210                     	;# 
  6799  0211                     	;# 
  6800  0211                     	;# 
  6801  0212                     	;# 
  6802  0212                     	;# 
  6803  0213                     	;# 
  6804  0214                     	;# 
  6805  0215                     	;# 
  6806  0215                     	;# 
  6807  0216                     	;# 
  6808  0216                     	;# 
  6809  0217                     	;# 
  6810  0217                     	;# 
  6811  0218                     	;# 
  6812  0218                     	;# 
  6813  0219                     	;# 
  6814  021A                     	;# 
  6815  021B                     	;# 
  6816  021B                     	;# 
  6817  021C                     	;# 
  6818  021C                     	;# 
  6819  021D                     	;# 
  6820  021D                     	;# 
  6821  021E                     	;# 
  6822  021F                     	;# 
  6823  028C                     	;# 
  6824  028C                     	;# 
  6825  028D                     	;# 
  6826  028D                     	;# 
  6827  028E                     	;# 
  6828  028F                     	;# 
  6829  0290                     	;# 
  6830  0290                     	;# 
  6831  0291                     	;# 
  6832  0292                     	;# 
  6833  0292                     	;# 
  6834  0293                     	;# 
  6835  0293                     	;# 
  6836  0294                     	;# 
  6837  0295                     	;# 
  6838  0296                     	;# 
  6839  0296                     	;# 
  6840  0297                     	;# 
  6841  0298                     	;# 
  6842  0298                     	;# 
  6843  0299                     	;# 
  6844  0299                     	;# 
  6845  029A                     	;# 
  6846  029B                     	;# 
  6847  029C                     	;# 
  6848  029C                     	;# 
  6849  029D                     	;# 
  6850  030C                     	;# 
  6851  030C                     	;# 
  6852  030D                     	;# 
  6853  030E                     	;# 
  6854  030F                     	;# 
  6855  0310                     	;# 
  6856  0310                     	;# 
  6857  0311                     	;# 
  6858  0312                     	;# 
  6859  0313                     	;# 
  6860  0314                     	;# 
  6861  0314                     	;# 
  6862  0315                     	;# 
  6863  0316                     	;# 
  6864  0317                     	;# 
  6865  0318                     	;# 
  6866  0318                     	;# 
  6867  0319                     	;# 
  6868  031A                     	;# 
  6869  031B                     	;# 
  6870  031C                     	;# 
  6871  031C                     	;# 
  6872  031D                     	;# 
  6873  031E                     	;# 
  6874  031F                     	;# 
  6875  038C                     	;# 
  6876  038C                     	;# 
  6877  038D                     	;# 
  6878  038E                     	;# 
  6879  0390                     	;# 
  6880  0390                     	;# 
  6881  0391                     	;# 
  6882  0392                     	;# 
  6883  040C                     	;# 
  6884  040D                     	;# 
  6885  040E                     	;# 
  6886  040F                     	;# 
  6887  0410                     	;# 
  6888  0411                     	;# 
  6889  0416                     	;# 
  6890  0416                     	;# 
  6891  0417                     	;# 
  6892  0418                     	;# 
  6893  0418                     	;# 
  6894  0419                     	;# 
  6895  041A                     	;# 
  6896  041A                     	;# 
  6897  041B                     	;# 
  6898  041C                     	;# 
  6899  041C                     	;# 
  6900  041D                     	;# 
  6901  041E                     	;# 
  6902  041F                     	;# 
  6903  048C                     	;# 
  6904  048C                     	;# 
  6905  048D                     	;# 
  6906  048E                     	;# 
  6907  048F                     	;# 
  6908  048F                     	;# 
  6909  0490                     	;# 
  6910  0491                     	;# 
  6911  0492                     	;# 
  6912  0492                     	;# 
  6913  0493                     	;# 
  6914  0494                     	;# 
  6915  0495                     	;# 
  6916  0495                     	;# 
  6917  0496                     	;# 
  6918  0497                     	;# 
  6919  0498                     	;# 
  6920  0499                     	;# 
  6921  049A                     	;# 
  6922  049B                     	;# 
  6923  049C                     	;# 
  6924  049D                     	;# 
  6925  050C                     	;# 
  6926  050C                     	;# 
  6927  050D                     	;# 
  6928  050E                     	;# 
  6929  050F                     	;# 
  6930  050F                     	;# 
  6931  0510                     	;# 
  6932  0511                     	;# 
  6933  0512                     	;# 
  6934  0512                     	;# 
  6935  0513                     	;# 
  6936  0514                     	;# 
  6937  0515                     	;# 
  6938  0515                     	;# 
  6939  0516                     	;# 
  6940  0517                     	;# 
  6941  0518                     	;# 
  6942  0519                     	;# 
  6943  051A                     	;# 
  6944  051B                     	;# 
  6945  051C                     	;# 
  6946  051D                     	;# 
  6947  058C                     	;# 
  6948  058C                     	;# 
  6949  058D                     	;# 
  6950  058E                     	;# 
  6951  058F                     	;# 
  6952  058F                     	;# 
  6953  0590                     	;# 
  6954  0591                     	;# 
  6955  0592                     	;# 
  6956  0593                     	;# 
  6957  060C                     	;# 
  6958  060D                     	;# 
  6959  060E                     	;# 
  6960  060F                     	;# 
  6961  0610                     	;# 
  6962  0611                     	;# 
  6963  0612                     	;# 
  6964  0613                     	;# 
  6965  0614                     	;# 
  6966  0616                     	;# 
  6967  0617                     	;# 
  6968  0618                     	;# 
  6969  0619                     	;# 
  6970  061A                     	;# 
  6971  061B                     	;# 
  6972  061C                     	;# 
  6973  061D                     	;# 
  6974  061E                     	;# 
  6975  068C                     	;# 
  6976  068D                     	;# 
  6977  068E                     	;# 
  6978  068F                     	;# 
  6979  0690                     	;# 
  6980  0691                     	;# 
  6981  0692                     	;# 
  6982  0693                     	;# 
  6983  0694                     	;# 
  6984  070C                     	;# 
  6985  070D                     	;# 
  6986  070E                     	;# 
  6987  070F                     	;# 
  6988  0710                     	;# 
  6989  0711                     	;# 
  6990  0712                     	;# 
  6991  0713                     	;# 
  6992  0714                     	;# 
  6993  0716                     	;# 
  6994  0717                     	;# 
  6995  0718                     	;# 
  6996  0719                     	;# 
  6997  071A                     	;# 
  6998  071B                     	;# 
  6999  071C                     	;# 
  7000  071D                     	;# 
  7001  071E                     	;# 
  7002  0796                     	;# 
  7003  0797                     	;# 
  7004  0798                     	;# 
  7005  0799                     	;# 
  7006  079A                     	;# 
  7007  079B                     	;# 
  7008  080C                     	;# 
  7009  080D                     	;# 
  7010  080E                     	;# 
  7011  080F                     	;# 
  7012  0810                     	;# 
  7013  0811                     	;# 
  7014  0812                     	;# 
  7015  0813                     	;# 
  7016  0814                     	;# 
  7017  081A                     	;# 
  7018  081B                     	;# 
  7019  081C                     	;# 
  7020  081D                     	;# 
  7021  081E                     	;# 
  7022  081F                     	;# 
  7023  088C                     	;# 
  7024  088D                     	;# 
  7025  088E                     	;# 
  7026  088F                     	;# 
  7027  0890                     	;# 
  7028  0891                     	;# 
  7029  0892                     	;# 
  7030  0893                     	;# 
  7031  0895                     	;# 
  7032  0896                     	;# 
  7033  0897                     	;# 
  7034  0898                     	;# 
  7035  0899                     	;# 
  7036  089A                     	;# 
  7037  089B                     	;# 
  7038  090C                     	;# 
  7039  090E                     	;# 
  7040  090F                     	;# 
  7041  091F                     	;# 
  7042  091F                     	;# 
  7043  098F                     	;# 
  7044  098F                     	;# 
  7045  0990                     	;# 
  7046  0991                     	;# 
  7047  0992                     	;# 
  7048  0993                     	;# 
  7049  0994                     	;# 
  7050  0995                     	;# 
  7051  0996                     	;# 
  7052  0997                     	;# 
  7053  0E0F                     	;# 
  7054  0E10                     	;# 
  7055  0E11                     	;# 
  7056  0E12                     	;# 
  7057  0E13                     	;# 
  7058  0E14                     	;# 
  7059  0E15                     	;# 
  7060  0E16                     	;# 
  7061  0E17                     	;# 
  7062  0E18                     	;# 
  7063  0E19                     	;# 
  7064  0E1A                     	;# 
  7065  0E1B                     	;# 
  7066  0E1C                     	;# 
  7067  0E1D                     	;# 
  7068  0E1E                     	;# 
  7069  0E1F                     	;# 
  7070  0E20                     	;# 
  7071  0E21                     	;# 
  7072  0E22                     	;# 
  7073  0E23                     	;# 
  7074  0E24                     	;# 
  7075  0E25                     	;# 
  7076  0E26                     	;# 
  7077  0E27                     	;# 
  7078  0E28                     	;# 
  7079  0E29                     	;# 
  7080  0E2A                     	;# 
  7081  0E2B                     	;# 
  7082  0E2C                     	;# 
  7083  0E2D                     	;# 
  7084  0E2E                     	;# 
  7085  0E2F                     	;# 
  7086  0E30                     	;# 
  7087  0E31                     	;# 
  7088  0E32                     	;# 
  7089  0E33                     	;# 
  7090  0E34                     	;# 
  7091  0E35                     	;# 
  7092  0E36                     	;# 
  7093  0E37                     	;# 
  7094  0E8F                     	;# 
  7095  0E90                     	;# 
  7096  0E91                     	;# 
  7097  0E92                     	;# 
  7098  0E93                     	;# 
  7099  0E94                     	;# 
  7100  0E95                     	;# 
  7101  0E96                     	;# 
  7102  0E97                     	;# 
  7103  0E9C                     	;# 
  7104  0E9D                     	;# 
  7105  0E9E                     	;# 
  7106  0EA1                     	;# 
  7107  0EA2                     	;# 
  7108  0EA3                     	;# 
  7109  0EA4                     	;# 
  7110  0EA5                     	;# 
  7111  0EA9                     	;# 
  7112  0EAA                     	;# 
  7113  0EAB                     	;# 
  7114  0EAC                     	;# 
  7115  0EB1                     	;# 
  7116  0EB2                     	;# 
  7117  0EB3                     	;# 
  7118  0EB8                     	;# 
  7119  0EB9                     	;# 
  7120  0EBA                     	;# 
  7121  0EBB                     	;# 
  7122  0EBC                     	;# 
  7123  0EBD                     	;# 
  7124  0EBE                     	;# 
  7125  0EC3                     	;# 
  7126  0EC5                     	;# 
  7127  0EC6                     	;# 
  7128  0EC7                     	;# 
  7129  0EC8                     	;# 
  7130  0EC9                     	;# 
  7131  0ECA                     	;# 
  7132  0ECB                     	;# 
  7133  0ECC                     	;# 
  7134  0F10                     	;# 
  7135  0F11                     	;# 
  7136  0F12                     	;# 
  7137  0F13                     	;# 
  7138  0F14                     	;# 
  7139  0F15                     	;# 
  7140  0F16                     	;# 
  7141  0F17                     	;# 
  7142  0F18                     	;# 
  7143  0F19                     	;# 
  7144  0F1A                     	;# 
  7145  0F1B                     	;# 
  7146  0F1C                     	;# 
  7147  0F1D                     	;# 
  7148  0F1E                     	;# 
  7149  0F1F                     	;# 
  7150  0F20                     	;# 
  7151  0F21                     	;# 
  7152  0F22                     	;# 
  7153  0F23                     	;# 
  7154  0F24                     	;# 
  7155  0F25                     	;# 
  7156  0F26                     	;# 
  7157  0F27                     	;# 
  7158  0F28                     	;# 
  7159  0F29                     	;# 
  7160  0F2A                     	;# 
  7161  0F2B                     	;# 
  7162  0F2C                     	;# 
  7163  0F2D                     	;# 
  7164  0F2E                     	;# 
  7165  0F2F                     	;# 
  7166  0F30                     	;# 
  7167  0F31                     	;# 
  7168  0F32                     	;# 
  7169  0F38                     	;# 
  7170  0F39                     	;# 
  7171  0F3A                     	;# 
  7172  0F3B                     	;# 
  7173  0F3C                     	;# 
  7174  0F3D                     	;# 
  7175  0F3E                     	;# 
  7176  0F3F                     	;# 
  7177  0F40                     	;# 
  7178  0F41                     	;# 
  7179  0F43                     	;# 
  7180  0F44                     	;# 
  7181  0F45                     	;# 
  7182  0F46                     	;# 
  7183  0F47                     	;# 
  7184  0F48                     	;# 
  7185  0F49                     	;# 
  7186  0F4A                     	;# 
  7187  0F4B                     	;# 
  7188  0F4C                     	;# 
  7189  0F4E                     	;# 
  7190  0F4F                     	;# 
  7191  0F50                     	;# 
  7192  0F51                     	;# 
  7193  0F52                     	;# 
  7194  0F53                     	;# 
  7195  0F54                     	;# 
  7196  0F55                     	;# 
  7197  0F56                     	;# 
  7198  0F57                     	;# 
  7199  0F59                     	;# 
  7200  0F5A                     	;# 
  7201  0F5B                     	;# 
  7202  0F5C                     	;# 
  7203  0F5D                     	;# 
  7204  0F61                     	;# 
  7205  0F62                     	;# 
  7206  0F64                     	;# 
  7207  0F65                     	;# 
  7208  0F66                     	;# 
  7209  0F67                     	;# 
  7210  0F68                     	;# 
  7211  0F69                     	;# 
  7212  0F6A                     	;# 
  7213  0F6B                     	;# 
  7214  0F6C                     	;# 
  7215  0F6D                     	;# 
  7216  0FE4                     	;# 
  7217  0FE5                     	;# 
  7218  0FE6                     	;# 
  7219  0FE7                     	;# 
  7220  0FE8                     	;# 
  7221  0FE9                     	;# 
  7222  0FEA                     	;# 
  7223  0FEB                     	;# 
  7224  0FED                     	;# 
  7225  0FEE                     	;# 
  7226  0FEF                     	;# 
  7227  0000                     	;# 
  7228  0001                     	;# 
  7229  0002                     	;# 
  7230  0003                     	;# 
  7231  0004                     	;# 
  7232  0005                     	;# 
  7233  0006                     	;# 
  7234  0007                     	;# 
  7235  0008                     	;# 
  7236  0009                     	;# 
  7237  000A                     	;# 
  7238  000B                     	;# 
  7239  000C                     	;# 
  7240  000D                     	;# 
  7241  000E                     	;# 
  7242  000F                     	;# 
  7243  0010                     	;# 
  7244  0011                     	;# 
  7245  0012                     	;# 
  7246  0013                     	;# 
  7247  0014                     	;# 
  7248  0015                     	;# 
  7249  0016                     	;# 
  7250  0017                     	;# 
  7251  0018                     	;# 
  7252  0019                     	;# 
  7253  001A                     	;# 
  7254  001C                     	;# 
  7255  001C                     	;# 
  7256  001D                     	;# 
  7257  001D                     	;# 
  7258  001E                     	;# 
  7259  001F                     	;# 
  7260  008C                     	;# 
  7261  008C                     	;# 
  7262  008D                     	;# 
  7263  008E                     	;# 
  7264  008E                     	;# 
  7265  008F                     	;# 
  7266  0090                     	;# 
  7267  0090                     	;# 
  7268  0091                     	;# 
  7269  0093                     	;# 
  7270  0094                     	;# 
  7271  0095                     	;# 
  7272  0096                     	;# 
  7273  0097                     	;# 
  7274  0098                     	;# 
  7275  0099                     	;# 
  7276  009A                     	;# 
  7277  009B                     	;# 
  7278  009C                     	;# 
  7279  009D                     	;# 
  7280  009E                     	;# 
  7281  010C                     	;# 
  7282  010D                     	;# 
  7283  010E                     	;# 
  7284  010E                     	;# 
  7285  010F                     	;# 
  7286  0110                     	;# 
  7287  0110                     	;# 
  7288  0111                     	;# 
  7289  0112                     	;# 
  7290  0112                     	;# 
  7291  0113                     	;# 
  7292  0114                     	;# 
  7293  0114                     	;# 
  7294  0115                     	;# 
  7295  0116                     	;# 
  7296  0116                     	;# 
  7297  0117                     	;# 
  7298  0119                     	;# 
  7299  0119                     	;# 
  7300  0119                     	;# 
  7301  011A                     	;# 
  7302  011A                     	;# 
  7303  011A                     	;# 
  7304  011B                     	;# 
  7305  011B                     	;# 
  7306  011B                     	;# 
  7307  011B                     	;# 
  7308  011B                     	;# 
  7309  011C                     	;# 
  7310  011C                     	;# 
  7311  011C                     	;# 
  7312  011D                     	;# 
  7313  011D                     	;# 
  7314  011D                     	;# 
  7315  011E                     	;# 
  7316  011E                     	;# 
  7317  011E                     	;# 
  7318  011F                     	;# 
  7319  011F                     	;# 
  7320  011F                     	;# 
  7321  011F                     	;# 
  7322  011F                     	;# 
  7323  018C                     	;# 
  7324  018D                     	;# 
  7325  018E                     	;# 
  7326  018F                     	;# 
  7327  0190                     	;# 
  7328  0191                     	;# 
  7329  0192                     	;# 
  7330  0196                     	;# 
  7331  0197                     	;# 
  7332  0198                     	;# 
  7333  0199                     	;# 
  7334  019A                     	;# 
  7335  019B                     	;# 
  7336  019C                     	;# 
  7337  020C                     	;# 
  7338  020C                     	;# 
  7339  020D                     	;# 
  7340  020E                     	;# 
  7341  020F                     	;# 
  7342  020F                     	;# 
  7343  0210                     	;# 
  7344  0210                     	;# 
  7345  0211                     	;# 
  7346  0211                     	;# 
  7347  0212                     	;# 
  7348  0212                     	;# 
  7349  0213                     	;# 
  7350  0214                     	;# 
  7351  0215                     	;# 
  7352  0215                     	;# 
  7353  0216                     	;# 
  7354  0216                     	;# 
  7355  0217                     	;# 
  7356  0217                     	;# 
  7357  0218                     	;# 
  7358  0218                     	;# 
  7359  0219                     	;# 
  7360  021A                     	;# 
  7361  021B                     	;# 
  7362  021B                     	;# 
  7363  021C                     	;# 
  7364  021C                     	;# 
  7365  021D                     	;# 
  7366  021D                     	;# 
  7367  021E                     	;# 
  7368  021F                     	;# 
  7369  028C                     	;# 
  7370  028C                     	;# 
  7371  028D                     	;# 
  7372  028D                     	;# 
  7373  028E                     	;# 
  7374  028F                     	;# 
  7375  0290                     	;# 
  7376  0290                     	;# 
  7377  0291                     	;# 
  7378  0292                     	;# 
  7379  0292                     	;# 
  7380  0293                     	;# 
  7381  0293                     	;# 
  7382  0294                     	;# 
  7383  0295                     	;# 
  7384  0296                     	;# 
  7385  0296                     	;# 
  7386  0297                     	;# 
  7387  0298                     	;# 
  7388  0298                     	;# 
  7389  0299                     	;# 
  7390  0299                     	;# 
  7391  029A                     	;# 
  7392  029B                     	;# 
  7393  029C                     	;# 
  7394  029C                     	;# 
  7395  029D                     	;# 
  7396  030C                     	;# 
  7397  030C                     	;# 
  7398  030D                     	;# 
  7399  030E                     	;# 
  7400  030F                     	;# 
  7401  0310                     	;# 
  7402  0310                     	;# 
  7403  0311                     	;# 
  7404  0312                     	;# 
  7405  0313                     	;# 
  7406  0314                     	;# 
  7407  0314                     	;# 
  7408  0315                     	;# 
  7409  0316                     	;# 
  7410  0317                     	;# 
  7411  0318                     	;# 
  7412  0318                     	;# 
  7413  0319                     	;# 
  7414  031A                     	;# 
  7415  031B                     	;# 
  7416  031C                     	;# 
  7417  031C                     	;# 
  7418  031D                     	;# 
  7419  031E                     	;# 
  7420  031F                     	;# 
  7421  038C                     	;# 
  7422  038C                     	;# 
  7423  038D                     	;# 
  7424  038E                     	;# 
  7425  0390                     	;# 
  7426  0390                     	;# 
  7427  0391                     	;# 
  7428  0392                     	;# 
  7429  040C                     	;# 
  7430  040D                     	;# 
  7431  040E                     	;# 
  7432  040F                     	;# 
  7433  0410                     	;# 
  7434  0411                     	;# 
  7435  0416                     	;# 
  7436  0416                     	;# 
  7437  0417                     	;# 
  7438  0418                     	;# 
  7439  0418                     	;# 
  7440  0419                     	;# 
  7441  041A                     	;# 
  7442  041A                     	;# 
  7443  041B                     	;# 
  7444  041C                     	;# 
  7445  041C                     	;# 
  7446  041D                     	;# 
  7447  041E                     	;# 
  7448  041F                     	;# 
  7449  048C                     	;# 
  7450  048C                     	;# 
  7451  048D                     	;# 
  7452  048E                     	;# 
  7453  048F                     	;# 
  7454  048F                     	;# 
  7455  0490                     	;# 
  7456  0491                     	;# 
  7457  0492                     	;# 
  7458  0492                     	;# 
  7459  0493                     	;# 
  7460  0494                     	;# 
  7461  0495                     	;# 
  7462  0495                     	;# 
  7463  0496                     	;# 
  7464  0497                     	;# 
  7465  0498                     	;# 
  7466  0499                     	;# 
  7467  049A                     	;# 
  7468  049B                     	;# 
  7469  049C                     	;# 
  7470  049D                     	;# 
  7471  050C                     	;# 
  7472  050C                     	;# 
  7473  050D                     	;# 
  7474  050E                     	;# 
  7475  050F                     	;# 
  7476  050F                     	;# 
  7477  0510                     	;# 
  7478  0511                     	;# 
  7479  0512                     	;# 
  7480  0512                     	;# 
  7481  0513                     	;# 
  7482  0514                     	;# 
  7483  0515                     	;# 
  7484  0515                     	;# 
  7485  0516                     	;# 
  7486  0517                     	;# 
  7487  0518                     	;# 
  7488  0519                     	;# 
  7489  051A                     	;# 
  7490  051B                     	;# 
  7491  051C                     	;# 
  7492  051D                     	;# 
  7493  058C                     	;# 
  7494  058C                     	;# 
  7495  058D                     	;# 
  7496  058E                     	;# 
  7497  058F                     	;# 
  7498  058F                     	;# 
  7499  0590                     	;# 
  7500  0591                     	;# 
  7501  0592                     	;# 
  7502  0593                     	;# 
  7503  060C                     	;# 
  7504  060D                     	;# 
  7505  060E                     	;# 
  7506  060F                     	;# 
  7507  0610                     	;# 
  7508  0611                     	;# 
  7509  0612                     	;# 
  7510  0613                     	;# 
  7511  0614                     	;# 
  7512  0616                     	;# 
  7513  0617                     	;# 
  7514  0618                     	;# 
  7515  0619                     	;# 
  7516  061A                     	;# 
  7517  061B                     	;# 
  7518  061C                     	;# 
  7519  061D                     	;# 
  7520  061E                     	;# 
  7521  068C                     	;# 
  7522  068D                     	;# 
  7523  068E                     	;# 
  7524  068F                     	;# 
  7525  0690                     	;# 
  7526  0691                     	;# 
  7527  0692                     	;# 
  7528  0693                     	;# 
  7529  0694                     	;# 
  7530  070C                     	;# 
  7531  070D                     	;# 
  7532  070E                     	;# 
  7533  070F                     	;# 
  7534  0710                     	;# 
  7535  0711                     	;# 
  7536  0712                     	;# 
  7537  0713                     	;# 
  7538  0714                     	;# 
  7539  0716                     	;# 
  7540  0717                     	;# 
  7541  0718                     	;# 
  7542  0719                     	;# 
  7543  071A                     	;# 
  7544  071B                     	;# 
  7545  071C                     	;# 
  7546  071D                     	;# 
  7547  071E                     	;# 
  7548  0796                     	;# 
  7549  0797                     	;# 
  7550  0798                     	;# 
  7551  0799                     	;# 
  7552  079A                     	;# 
  7553  079B                     	;# 
  7554  080C                     	;# 
  7555  080D                     	;# 
  7556  080E                     	;# 
  7557  080F                     	;# 
  7558  0810                     	;# 
  7559  0811                     	;# 
  7560  0812                     	;# 
  7561  0813                     	;# 
  7562  0814                     	;# 
  7563  081A                     	;# 
  7564  081B                     	;# 
  7565  081C                     	;# 
  7566  081D                     	;# 
  7567  081E                     	;# 
  7568  081F                     	;# 
  7569  088C                     	;# 
  7570  088D                     	;# 
  7571  088E                     	;# 
  7572  088F                     	;# 
  7573  0890                     	;# 
  7574  0891                     	;# 
  7575  0892                     	;# 
  7576  0893                     	;# 
  7577  0895                     	;# 
  7578  0896                     	;# 
  7579  0897                     	;# 
  7580  0898                     	;# 
  7581  0899                     	;# 
  7582  089A                     	;# 
  7583  089B                     	;# 
  7584  090C                     	;# 
  7585  090E                     	;# 
  7586  090F                     	;# 
  7587  091F                     	;# 
  7588  091F                     	;# 
  7589  098F                     	;# 
  7590  098F                     	;# 
  7591  0990                     	;# 
  7592  0991                     	;# 
  7593  0992                     	;# 
  7594  0993                     	;# 
  7595  0994                     	;# 
  7596  0995                     	;# 
  7597  0996                     	;# 
  7598  0997                     	;# 
  7599  0E0F                     	;# 
  7600  0E10                     	;# 
  7601  0E11                     	;# 
  7602  0E12                     	;# 
  7603  0E13                     	;# 
  7604  0E14                     	;# 
  7605  0E15                     	;# 
  7606  0E16                     	;# 
  7607  0E17                     	;# 
  7608  0E18                     	;# 
  7609  0E19                     	;# 
  7610  0E1A                     	;# 
  7611  0E1B                     	;# 
  7612  0E1C                     	;# 
  7613  0E1D                     	;# 
  7614  0E1E                     	;# 
  7615  0E1F                     	;# 
  7616  0E20                     	;# 
  7617  0E21                     	;# 
  7618  0E22                     	;# 
  7619  0E23                     	;# 
  7620  0E24                     	;# 
  7621  0E25                     	;# 
  7622  0E26                     	;# 
  7623  0E27                     	;# 
  7624  0E28                     	;# 
  7625  0E29                     	;# 
  7626  0E2A                     	;# 
  7627  0E2B                     	;# 
  7628  0E2C                     	;# 
  7629  0E2D                     	;# 
  7630  0E2E                     	;# 
  7631  0E2F                     	;# 
  7632  0E30                     	;# 
  7633  0E31                     	;# 
  7634  0E32                     	;# 
  7635  0E33                     	;# 
  7636  0E34                     	;# 
  7637  0E35                     	;# 
  7638  0E36                     	;# 
  7639  0E37                     	;# 
  7640  0E8F                     	;# 
  7641  0E90                     	;# 
  7642  0E91                     	;# 
  7643  0E92                     	;# 
  7644  0E93                     	;# 
  7645  0E94                     	;# 
  7646  0E95                     	;# 
  7647  0E96                     	;# 
  7648  0E97                     	;# 
  7649  0E9C                     	;# 
  7650  0E9D                     	;# 
  7651  0E9E                     	;# 
  7652  0EA1                     	;# 
  7653  0EA2                     	;# 
  7654  0EA3                     	;# 
  7655  0EA4                     	;# 
  7656  0EA5                     	;# 
  7657  0EA9                     	;# 
  7658  0EAA                     	;# 
  7659  0EAB                     	;# 
  7660  0EAC                     	;# 
  7661  0EB1                     	;# 
  7662  0EB2                     	;# 
  7663  0EB3                     	;# 
  7664  0EB8                     	;# 
  7665  0EB9                     	;# 
  7666  0EBA                     	;# 
  7667  0EBB                     	;# 
  7668  0EBC                     	;# 
  7669  0EBD                     	;# 
  7670  0EBE                     	;# 
  7671  0EC3                     	;# 
  7672  0EC5                     	;# 
  7673  0EC6                     	;# 
  7674  0EC7                     	;# 
  7675  0EC8                     	;# 
  7676  0EC9                     	;# 
  7677  0ECA                     	;# 
  7678  0ECB                     	;# 
  7679  0ECC                     	;# 
  7680  0F10                     	;# 
  7681  0F11                     	;# 
  7682  0F12                     	;# 
  7683  0F13                     	;# 
  7684  0F14                     	;# 
  7685  0F15                     	;# 
  7686  0F16                     	;# 
  7687  0F17                     	;# 
  7688  0F18                     	;# 
  7689  0F19                     	;# 
  7690  0F1A                     	;# 
  7691  0F1B                     	;# 
  7692  0F1C                     	;# 
  7693  0F1D                     	;# 
  7694  0F1E                     	;# 
  7695  0F1F                     	;# 
  7696  0F20                     	;# 
  7697  0F21                     	;# 
  7698  0F22                     	;# 
  7699  0F23                     	;# 
  7700  0F24                     	;# 
  7701  0F25                     	;# 
  7702  0F26                     	;# 
  7703  0F27                     	;# 
  7704  0F28                     	;# 
  7705  0F29                     	;# 
  7706  0F2A                     	;# 
  7707  0F2B                     	;# 
  7708  0F2C                     	;# 
  7709  0F2D                     	;# 
  7710  0F2E                     	;# 
  7711  0F2F                     	;# 
  7712  0F30                     	;# 
  7713  0F31                     	;# 
  7714  0F32                     	;# 
  7715  0F38                     	;# 
  7716  0F39                     	;# 
  7717  0F3A                     	;# 
  7718  0F3B                     	;# 
  7719  0F3C                     	;# 
  7720  0F3D                     	;# 
  7721  0F3E                     	;# 
  7722  0F3F                     	;# 
  7723  0F40                     	;# 
  7724  0F41                     	;# 
  7725  0F43                     	;# 
  7726  0F44                     	;# 
  7727  0F45                     	;# 
  7728  0F46                     	;# 
  7729  0F47                     	;# 
  7730  0F48                     	;# 
  7731  0F49                     	;# 
  7732  0F4A                     	;# 
  7733  0F4B                     	;# 
  7734  0F4C                     	;# 
  7735  0F4E                     	;# 
  7736  0F4F                     	;# 
  7737  0F50                     	;# 
  7738  0F51                     	;# 
  7739  0F52                     	;# 
  7740  0F53                     	;# 
  7741  0F54                     	;# 
  7742  0F55                     	;# 
  7743  0F56                     	;# 
  7744  0F57                     	;# 
  7745  0F59                     	;# 
  7746  0F5A                     	;# 
  7747  0F5B                     	;# 
  7748  0F5C                     	;# 
  7749  0F5D                     	;# 
  7750  0F61                     	;# 
  7751  0F62                     	;# 
  7752  0F64                     	;# 
  7753  0F65                     	;# 
  7754  0F66                     	;# 
  7755  0F67                     	;# 
  7756  0F68                     	;# 
  7757  0F69                     	;# 
  7758  0F6A                     	;# 
  7759  0F6B                     	;# 
  7760  0F6C                     	;# 
  7761  0F6D                     	;# 
  7762  0FE4                     	;# 
  7763  0FE5                     	;# 
  7764  0FE6                     	;# 
  7765  0FE7                     	;# 
  7766  0FE8                     	;# 
  7767  0FE9                     	;# 
  7768  0FEA                     	;# 
  7769  0FEB                     	;# 
  7770  0FED                     	;# 
  7771  0FEE                     	;# 
  7772  0FEF                     	;# 
  7773  0000                     	;# 
  7774  0001                     	;# 
  7775  0002                     	;# 
  7776  0003                     	;# 
  7777  0004                     	;# 
  7778  0005                     	;# 
  7779  0006                     	;# 
  7780  0007                     	;# 
  7781  0008                     	;# 
  7782  0009                     	;# 
  7783  000A                     	;# 
  7784  000B                     	;# 
  7785  000C                     	;# 
  7786  000D                     	;# 
  7787  000E                     	;# 
  7788  000F                     	;# 
  7789  0010                     	;# 
  7790  0011                     	;# 
  7791  0012                     	;# 
  7792  0013                     	;# 
  7793  0014                     	;# 
  7794  0015                     	;# 
  7795  0016                     	;# 
  7796  0017                     	;# 
  7797  0018                     	;# 
  7798  0019                     	;# 
  7799  001A                     	;# 
  7800  001C                     	;# 
  7801  001C                     	;# 
  7802  001D                     	;# 
  7803  001D                     	;# 
  7804  001E                     	;# 
  7805  001F                     	;# 
  7806  008C                     	;# 
  7807  008C                     	;# 
  7808  008D                     	;# 
  7809  008E                     	;# 
  7810  008E                     	;# 
  7811  008F                     	;# 
  7812  0090                     	;# 
  7813  0090                     	;# 
  7814  0091                     	;# 
  7815  0093                     	;# 
  7816  0094                     	;# 
  7817  0095                     	;# 
  7818  0096                     	;# 
  7819  0097                     	;# 
  7820  0098                     	;# 
  7821  0099                     	;# 
  7822  009A                     	;# 
  7823  009B                     	;# 
  7824  009C                     	;# 
  7825  009D                     	;# 
  7826  009E                     	;# 
  7827  010C                     	;# 
  7828  010D                     	;# 
  7829  010E                     	;# 
  7830  010E                     	;# 
  7831  010F                     	;# 
  7832  0110                     	;# 
  7833  0110                     	;# 
  7834  0111                     	;# 
  7835  0112                     	;# 
  7836  0112                     	;# 
  7837  0113                     	;# 
  7838  0114                     	;# 
  7839  0114                     	;# 
  7840  0115                     	;# 
  7841  0116                     	;# 
  7842  0116                     	;# 
  7843  0117                     	;# 
  7844  0119                     	;# 
  7845  0119                     	;# 
  7846  0119                     	;# 
  7847  011A                     	;# 
  7848  011A                     	;# 
  7849  011A                     	;# 
  7850  011B                     	;# 
  7851  011B                     	;# 
  7852  011B                     	;# 
  7853  011B                     	;# 
  7854  011B                     	;# 
  7855  011C                     	;# 
  7856  011C                     	;# 
  7857  011C                     	;# 
  7858  011D                     	;# 
  7859  011D                     	;# 
  7860  011D                     	;# 
  7861  011E                     	;# 
  7862  011E                     	;# 
  7863  011E                     	;# 
  7864  011F                     	;# 
  7865  011F                     	;# 
  7866  011F                     	;# 
  7867  011F                     	;# 
  7868  011F                     	;# 
  7869  018C                     	;# 
  7870  018D                     	;# 
  7871  018E                     	;# 
  7872  018F                     	;# 
  7873  0190                     	;# 
  7874  0191                     	;# 
  7875  0192                     	;# 
  7876  0196                     	;# 
  7877  0197                     	;# 
  7878  0198                     	;# 
  7879  0199                     	;# 
  7880  019A                     	;# 
  7881  019B                     	;# 
  7882  019C                     	;# 
  7883  020C                     	;# 
  7884  020C                     	;# 
  7885  020D                     	;# 
  7886  020E                     	;# 
  7887  020F                     	;# 
  7888  020F                     	;# 
  7889  0210                     	;# 
  7890  0210                     	;# 
  7891  0211                     	;# 
  7892  0211                     	;# 
  7893  0212                     	;# 
  7894  0212                     	;# 
  7895  0213                     	;# 
  7896  0214                     	;# 
  7897  0215                     	;# 
  7898  0215                     	;# 
  7899  0216                     	;# 
  7900  0216                     	;# 
  7901  0217                     	;# 
  7902  0217                     	;# 
  7903  0218                     	;# 
  7904  0218                     	;# 
  7905  0219                     	;# 
  7906  021A                     	;# 
  7907  021B                     	;# 
  7908  021B                     	;# 
  7909  021C                     	;# 
  7910  021C                     	;# 
  7911  021D                     	;# 
  7912  021D                     	;# 
  7913  021E                     	;# 
  7914  021F                     	;# 
  7915  028C                     	;# 
  7916  028C                     	;# 
  7917  028D                     	;# 
  7918  028D                     	;# 
  7919  028E                     	;# 
  7920  028F                     	;# 
  7921  0290                     	;# 
  7922  0290                     	;# 
  7923  0291                     	;# 
  7924  0292                     	;# 
  7925  0292                     	;# 
  7926  0293                     	;# 
  7927  0293                     	;# 
  7928  0294                     	;# 
  7929  0295                     	;# 
  7930  0296                     	;# 
  7931  0296                     	;# 
  7932  0297                     	;# 
  7933  0298                     	;# 
  7934  0298                     	;# 
  7935  0299                     	;# 
  7936  0299                     	;# 
  7937  029A                     	;# 
  7938  029B                     	;# 
  7939  029C                     	;# 
  7940  029C                     	;# 
  7941  029D                     	;# 
  7942  030C                     	;# 
  7943  030C                     	;# 
  7944  030D                     	;# 
  7945  030E                     	;# 
  7946  030F                     	;# 
  7947  0310                     	;# 
  7948  0310                     	;# 
  7949  0311                     	;# 
  7950  0312                     	;# 
  7951  0313                     	;# 
  7952  0314                     	;# 
  7953  0314                     	;# 
  7954  0315                     	;# 
  7955  0316                     	;# 
  7956  0317                     	;# 
  7957  0318                     	;# 
  7958  0318                     	;# 
  7959  0319                     	;# 
  7960  031A                     	;# 
  7961  031B                     	;# 
  7962  031C                     	;# 
  7963  031C                     	;# 
  7964  031D                     	;# 
  7965  031E                     	;# 
  7966  031F                     	;# 
  7967  038C                     	;# 
  7968  038C                     	;# 
  7969  038D                     	;# 
  7970  038E                     	;# 
  7971  0390                     	;# 
  7972  0390                     	;# 
  7973  0391                     	;# 
  7974  0392                     	;# 
  7975  040C                     	;# 
  7976  040D                     	;# 
  7977  040E                     	;# 
  7978  040F                     	;# 
  7979  0410                     	;# 
  7980  0411                     	;# 
  7981  0416                     	;# 
  7982  0416                     	;# 
  7983  0417                     	;# 
  7984  0418                     	;# 
  7985  0418                     	;# 
  7986  0419                     	;# 
  7987  041A                     	;# 
  7988  041A                     	;# 
  7989  041B                     	;# 
  7990  041C                     	;# 
  7991  041C                     	;# 
  7992  041D                     	;# 
  7993  041E                     	;# 
  7994  041F                     	;# 
  7995  048C                     	;# 
  7996  048C                     	;# 
  7997  048D                     	;# 
  7998  048E                     	;# 
  7999  048F                     	;# 
  8000  048F                     	;# 
  8001  0490                     	;# 
  8002  0491                     	;# 
  8003  0492                     	;# 
  8004  0492                     	;# 
  8005  0493                     	;# 
  8006  0494                     	;# 
  8007  0495                     	;# 
  8008  0495                     	;# 
  8009  0496                     	;# 
  8010  0497                     	;# 
  8011  0498                     	;# 
  8012  0499                     	;# 
  8013  049A                     	;# 
  8014  049B                     	;# 
  8015  049C                     	;# 
  8016  049D                     	;# 
  8017  050C                     	;# 
  8018  050C                     	;# 
  8019  050D                     	;# 
  8020  050E                     	;# 
  8021  050F                     	;# 
  8022  050F                     	;# 
  8023  0510                     	;# 
  8024  0511                     	;# 
  8025  0512                     	;# 
  8026  0512                     	;# 
  8027  0513                     	;# 
  8028  0514                     	;# 
  8029  0515                     	;# 
  8030  0515                     	;# 
  8031  0516                     	;# 
  8032  0517                     	;# 
  8033  0518                     	;# 
  8034  0519                     	;# 
  8035  051A                     	;# 
  8036  051B                     	;# 
  8037  051C                     	;# 
  8038  051D                     	;# 
  8039  058C                     	;# 
  8040  058C                     	;# 
  8041  058D                     	;# 
  8042  058E                     	;# 
  8043  058F                     	;# 
  8044  058F                     	;# 
  8045  0590                     	;# 
  8046  0591                     	;# 
  8047  0592                     	;# 
  8048  0593                     	;# 
  8049  060C                     	;# 
  8050  060D                     	;# 
  8051  060E                     	;# 
  8052  060F                     	;# 
  8053  0610                     	;# 
  8054  0611                     	;# 
  8055  0612                     	;# 
  8056  0613                     	;# 
  8057  0614                     	;# 
  8058  0616                     	;# 
  8059  0617                     	;# 
  8060  0618                     	;# 
  8061  0619                     	;# 
  8062  061A                     	;# 
  8063  061B                     	;# 
  8064  061C                     	;# 
  8065  061D                     	;# 
  8066  061E                     	;# 
  8067  068C                     	;# 
  8068  068D                     	;# 
  8069  068E                     	;# 
  8070  068F                     	;# 
  8071  0690                     	;# 
  8072  0691                     	;# 
  8073  0692                     	;# 
  8074  0693                     	;# 
  8075  0694                     	;# 
  8076  070C                     	;# 
  8077  070D                     	;# 
  8078  070E                     	;# 
  8079  070F                     	;# 
  8080  0710                     	;# 
  8081  0711                     	;# 
  8082  0712                     	;# 
  8083  0713                     	;# 
  8084  0714                     	;# 
  8085  0716                     	;# 
  8086  0717                     	;# 
  8087  0718                     	;# 
  8088  0719                     	;# 
  8089  071A                     	;# 
  8090  071B                     	;# 
  8091  071C                     	;# 
  8092  071D                     	;# 
  8093  071E                     	;# 
  8094  0796                     	;# 
  8095  0797                     	;# 
  8096  0798                     	;# 
  8097  0799                     	;# 
  8098  079A                     	;# 
  8099  079B                     	;# 
  8100  080C                     	;# 
  8101  080D                     	;# 
  8102  080E                     	;# 
  8103  080F                     	;# 
  8104  0810                     	;# 
  8105  0811                     	;# 
  8106  0812                     	;# 
  8107  0813                     	;# 
  8108  0814                     	;# 
  8109  081A                     	;# 
  8110  081B                     	;# 
  8111  081C                     	;# 
  8112  081D                     	;# 
  8113  081E                     	;# 
  8114  081F                     	;# 
  8115  088C                     	;# 
  8116  088D                     	;# 
  8117  088E                     	;# 
  8118  088F                     	;# 
  8119  0890                     	;# 
  8120  0891                     	;# 
  8121  0892                     	;# 
  8122  0893                     	;# 
  8123  0895                     	;# 
  8124  0896                     	;# 
  8125  0897                     	;# 
  8126  0898                     	;# 
  8127  0899                     	;# 
  8128  089A                     	;# 
  8129  089B                     	;# 
  8130  090C                     	;# 
  8131  090E                     	;# 
  8132  090F                     	;# 
  8133  091F                     	;# 
  8134  091F                     	;# 
  8135  098F                     	;# 
  8136  098F                     	;# 
  8137  0990                     	;# 
  8138  0991                     	;# 
  8139  0992                     	;# 
  8140  0993                     	;# 
  8141  0994                     	;# 
  8142  0995                     	;# 
  8143  0996                     	;# 
  8144  0997                     	;# 
  8145  0E0F                     	;# 
  8146  0E10                     	;# 
  8147  0E11                     	;# 
  8148  0E12                     	;# 
  8149  0E13                     	;# 
  8150  0E14                     	;# 
  8151  0E15                     	;# 
  8152  0E16                     	;# 
  8153  0E17                     	;# 
  8154  0E18                     	;# 
  8155  0E19                     	;# 
  8156  0E1A                     	;# 
  8157  0E1B                     	;# 
  8158  0E1C                     	;# 
  8159  0E1D                     	;# 
  8160  0E1E                     	;# 
  8161  0E1F                     	;# 
  8162  0E20                     	;# 
  8163  0E21                     	;# 
  8164  0E22                     	;# 
  8165  0E23                     	;# 
  8166  0E24                     	;# 
  8167  0E25                     	;# 
  8168  0E26                     	;# 
  8169  0E27                     	;# 
  8170  0E28                     	;# 
  8171  0E29                     	;# 
  8172  0E2A                     	;# 
  8173  0E2B                     	;# 
  8174  0E2C                     	;# 
  8175  0E2D                     	;# 
  8176  0E2E                     	;# 
  8177  0E2F                     	;# 
  8178  0E30                     	;# 
  8179  0E31                     	;# 
  8180  0E32                     	;# 
  8181  0E33                     	;# 
  8182  0E34                     	;# 
  8183  0E35                     	;# 
  8184  0E36                     	;# 
  8185  0E37                     	;# 
  8186  0E8F                     	;# 
  8187  0E90                     	;# 
  8188  0E91                     	;# 
  8189  0E92                     	;# 
  8190  0E93                     	;# 
  8191  0E94                     	;# 
  8192  0E95                     	;# 
  8193  0E96                     	;# 
  8194  0E97                     	;# 
  8195  0E9C                     	;# 
  8196  0E9D                     	;# 
  8197  0E9E                     	;# 
  8198  0EA1                     	;# 
  8199  0EA2                     	;# 
  8200  0EA3                     	;# 
  8201  0EA4                     	;# 
  8202  0EA5                     	;# 
  8203  0EA9                     	;# 
  8204  0EAA                     	;# 
  8205  0EAB                     	;# 
  8206  0EAC                     	;# 
  8207  0EB1                     	;# 
  8208  0EB2                     	;# 
  8209  0EB3                     	;# 
  8210  0EB8                     	;# 
  8211  0EB9                     	;# 
  8212  0EBA                     	;# 
  8213  0EBB                     	;# 
  8214  0EBC                     	;# 
  8215  0EBD                     	;# 
  8216  0EBE                     	;# 
  8217  0EC3                     	;# 
  8218  0EC5                     	;# 
  8219  0EC6                     	;# 
  8220  0EC7                     	;# 
  8221  0EC8                     	;# 
  8222  0EC9                     	;# 
  8223  0ECA                     	;# 
  8224  0ECB                     	;# 
  8225  0ECC                     	;# 
  8226  0F10                     	;# 
  8227  0F11                     	;# 
  8228  0F12                     	;# 
  8229  0F13                     	;# 
  8230  0F14                     	;# 
  8231  0F15                     	;# 
  8232  0F16                     	;# 
  8233  0F17                     	;# 
  8234  0F18                     	;# 
  8235  0F19                     	;# 
  8236  0F1A                     	;# 
  8237  0F1B                     	;# 
  8238  0F1C                     	;# 
  8239  0F1D                     	;# 
  8240  0F1E                     	;# 
  8241  0F1F                     	;# 
  8242  0F20                     	;# 
  8243  0F21                     	;# 
  8244  0F22                     	;# 
  8245  0F23                     	;# 
  8246  0F24                     	;# 
  8247  0F25                     	;# 
  8248  0F26                     	;# 
  8249  0F27                     	;# 
  8250  0F28                     	;# 
  8251  0F29                     	;# 
  8252  0F2A                     	;# 
  8253  0F2B                     	;# 
  8254  0F2C                     	;# 
  8255  0F2D                     	;# 
  8256  0F2E                     	;# 
  8257  0F2F                     	;# 
  8258  0F30                     	;# 
  8259  0F31                     	;# 
  8260  0F32                     	;# 
  8261  0F38                     	;# 
  8262  0F39                     	;# 
  8263  0F3A                     	;# 
  8264  0F3B                     	;# 
  8265  0F3C                     	;# 
  8266  0F3D                     	;# 
  8267  0F3E                     	;# 
  8268  0F3F                     	;# 
  8269  0F40                     	;# 
  8270  0F41                     	;# 
  8271  0F43                     	;# 
  8272  0F44                     	;# 
  8273  0F45                     	;# 
  8274  0F46                     	;# 
  8275  0F47                     	;# 
  8276  0F48                     	;# 
  8277  0F49                     	;# 
  8278  0F4A                     	;# 
  8279  0F4B                     	;# 
  8280  0F4C                     	;# 
  8281  0F4E                     	;# 
  8282  0F4F                     	;# 
  8283  0F50                     	;# 
  8284  0F51                     	;# 
  8285  0F52                     	;# 
  8286  0F53                     	;# 
  8287  0F54                     	;# 
  8288  0F55                     	;# 
  8289  0F56                     	;# 
  8290  0F57                     	;# 
  8291  0F59                     	;# 
  8292  0F5A                     	;# 
  8293  0F5B                     	;# 
  8294  0F5C                     	;# 
  8295  0F5D                     	;# 
  8296  0F61                     	;# 
  8297  0F62                     	;# 
  8298  0F64                     	;# 
  8299  0F65                     	;# 
  8300  0F66                     	;# 
  8301  0F67                     	;# 
  8302  0F68                     	;# 
  8303  0F69                     	;# 
  8304  0F6A                     	;# 
  8305  0F6B                     	;# 
  8306  0F6C                     	;# 
  8307  0F6D                     	;# 
  8308  0FE4                     	;# 
  8309  0FE5                     	;# 
  8310  0FE6                     	;# 
  8311  0FE7                     	;# 
  8312  0FE8                     	;# 
  8313  0FE9                     	;# 
  8314  0FEA                     	;# 
  8315  0FEB                     	;# 
  8316  0FED                     	;# 
  8317  0FEE                     	;# 
  8318  0FEF                     	;# 
  8319                           
  8320                           	psect	idataBANK0
  8321  17A7                     __pidataBANK0:
  8322                           
  8323                           ;initializer for _alarmPWMStart
  8324  17A7  34FF               	retlw	255
  8325  17A8  34FF               	retlw	255
  8326  17A9  34FF               	retlw	255
  8327                           
  8328                           ;initializer for _prevLumLevel
  8329  17AA  34FF               	retlw	255
  8330  17AB  34FF               	retlw	255
  8331                           
  8332                           ;initializer for _prevTemp
  8333  17AC  34FF               	retlw	255
  8334  17AD  34FF               	retlw	255
  8335                           
  8336                           	psect	stringtext1
  8337  1800                     __pstringtext1:
  8338  1800                     _dpowers:
  8339  1800  3401               	retlw	1
  8340  1801  3400               	retlw	0
  8341  1802  340A               	retlw	10
  8342  1803  3400               	retlw	0
  8343  1804  3464               	retlw	100
  8344  1805  3400               	retlw	0
  8345  1806  34E8               	retlw	232
  8346  1807  3403               	retlw	3
  8347  1808  3410               	retlw	16
  8348  1809  3427               	retlw	39
  8349  180A                     __end_of_dpowers:
  8350                           
  8351                           	psect	nvBANK0
  8352  006E                     __pnvBANK0:
  8353  006E                     _timer3ReloadVal:
  8354  006E                     	ds	2
  8355                           
  8356                           	psect	nvBANK1
  8357  00B1                     __pnvBANK1:
  8358  00B1                     _INT_InterruptHandler:
  8359  00B1                     	ds	2
  8360  00B3                     _TMR5_InterruptHandler:
  8361  00B3                     	ds	2
  8362  00B5                     _timer5ReloadVal:
  8363  00B5                     	ds	2
  8364  00B7                     _TMR3_InterruptHandler:
  8365  00B7                     	ds	2
  8366  00B9                     _TMR1_InterruptHandler:
  8367  00B9                     	ds	2
  8368  00BB                     _timer1ReloadVal:
  8369  00BB                     	ds	2
  8370  0013                     _TRISCbits	set	19
  8371  000E                     _PORTCbits	set	14
  8372  0016                     _LATAbits	set	22
  8373  000B                     _INTCONbits	set	11
  8374  0014                     _TRISD	set	20
  8375  0013                     _TRISC	set	19
  8376  0012                     _TRISB	set	18
  8377  0011                     _TRISA	set	17
  8378  0015                     _TRISE	set	21
  8379  0018                     _LATC	set	24
  8380  0017                     _LATB	set	23
  8381  0016                     _LATA	set	22
  8382  0019                     _LATD	set	25
  8383  001A                     _LATE	set	26
  8384  0094                     _ADCON1bits	set	148
  8385  008E                     _ADPREVL	set	142
  8386  008F                     _ADPREVH	set	143
  8387  0097                     _ADSTATbits	set	151
  8388  0090                     _ADACCL	set	144
  8389  0091                     _ADACCH	set	145
  8390  0095                     _ADCON2bits	set	149
  8391  009C                     _ADPRE	set	156
  8392  0096                     _ADCON3bits	set	150
  8393  008C                     _ADRESL	set	140
  8394  008D                     _ADRESH	set	141
  8395  0093                     _ADCON0bits	set	147
  8396  009D                     _ADACQ	set	157
  8397  0093                     _ADCON0	set	147
  8398  0098                     _ADCLK	set	152
  8399  0099                     _ADACT	set	153
  8400  009A                     _ADREF	set	154
  8401  0097                     _ADSTAT	set	151
  8402  0096                     _ADCON3	set	150
  8403  0095                     _ADCON2	set	149
  8404  0094                     _ADCON1	set	148
  8405  009B                     _ADCAP	set	155
  8406  009E                     _ADPCH	set	158
  8407  0116                     _ADERRL	set	278
  8408  0117                     _ADERRH	set	279
  8409  0114                     _ADFLTRL	set	276
  8410  0115                     _ADFLTRH	set	277
  8411  010C                     _ADCNT	set	268
  8412  010D                     _ADRPT	set	269
  8413  0113                     _ADSTPTH	set	275
  8414  0112                     _ADSTPTL	set	274
  8415  0111                     _ADUTHH	set	273
  8416  0110                     _ADUTHL	set	272
  8417  010F                     _ADLTHH	set	271
  8418  010E                     _ADLTHL	set	270
  8419  018E                     _SSP1MSK	set	398
  8420  018D                     _SSP1ADD	set	397
  8421  018F                     _SSP1STAT	set	399
  8422  0191                     _SSP1CON2	set	401
  8423  0190                     _SSP1CON1bits	set	400
  8424  018C                     _SSP1BUF	set	396
  8425  018F                     _SSP1STATbits	set	399
  8426  0191                     _SSP1CON2bits	set	401
  8427  0190                     _SSP1CON1	set	400
  8428  021F                     _CCPTMRS1bits	set	543
  8429  021B                     _T5GCONbits	set	539
  8430  021A                     _T5CONbits	set	538
  8431  021A                     _T5CON	set	538
  8432  0218                     _TMR5L	set	536
  8433  0219                     _TMR5H	set	537
  8434  021D                     _T5CLK	set	541
  8435  021C                     _T5GATE	set	540
  8436  021B                     _T5GCON	set	539
  8437  0215                     _T3GCONbits	set	533
  8438  0214                     _T3CONbits	set	532
  8439  0214                     _T3CON	set	532
  8440  0212                     _TMR3L	set	530
  8441  0213                     _TMR3H	set	531
  8442  0217                     _T3CLK	set	535
  8443  0216                     _T3GATE	set	534
  8444  0215                     _T3GCON	set	533
  8445  020F                     _T1GCONbits	set	527
  8446  020E                     _T1CONbits	set	526
  8447  020E                     _T1CON	set	526
  8448  020C                     _TMR1L	set	524
  8449  020D                     _TMR1H	set	525
  8450  0211                     _T1CLK	set	529
  8451  0210                     _T1GATE	set	528
  8452  020F                     _T1GCON	set	527
  8453  028D                     _PR2	set	653
  8454  028C                     _TMR2	set	652
  8455  028E                     _T2CONbits	set	654
  8456  0291                     _T2RSTbits	set	657
  8457  028F                     _T2HLTbits	set	655
  8458  028E                     _T2CON	set	654
  8459  028C                     _T2TMR	set	652
  8460  028D                     _T2PR	set	653
  8461  0291                     _T2RST	set	657
  8462  028F                     _T2HLT	set	655
  8463  0290                     _T2CLKCON	set	656
  8464  038C                     _PWM6DCL	set	908
  8465  038D                     _PWM6DCH	set	909
  8466  038E                     _PWM6CON	set	910
  8467  1C77                     _PWM6EN	set	7287
  8468  0710                     _PIR4bits	set	1808
  8469  071A                     _PIE4bits	set	1818
  8470  070C                     _PIR0bits	set	1804
  8471  0716                     _PIE0bits	set	1814
  8472  0719                     _PIE3bits	set	1817
  8473  070F                     _PIR3bits	set	1807
  8474  079B                     _PMD5	set	1947
  8475  079A                     _PMD4	set	1946
  8476  0799                     _PMD3	set	1945
  8477  0798                     _PMD2	set	1944
  8478  0797                     _PMD1	set	1943
  8479  0796                     _PMD0	set	1942
  8480  081F                     _NVMCON2	set	2079
  8481  081C                     _NVMDATL	set	2076
  8482  081D                     _NVMDATH	set	2077
  8483  081E                     _NVMCON1bits	set	2078
  8484  081B                     _NVMADRH	set	2075
  8485  081A                     _NVMADRL	set	2074
  8486  0892                     _OSCTUNE	set	2194
  8487  0893                     _OSCFRQ	set	2195
  8488  0891                     _OSCEN	set	2193
  8489  088F                     _OSCCON3	set	2191
  8490  088D                     _OSCCON1	set	2189
  8491  0EC6                     _SSP1DATPPS	set	3782
  8492  0EC5                     _SSP1CLKPPS	set	3781
  8493  0E90                     _INTPPS	set	3728
  8494  0F16                     _RA6PPS	set	3862
  8495  0F24                     _RC4PPS	set	3876
  8496  0F23                     _RC3PPS	set	3875
  8497  0F67                     _SLRCONE	set	3943
  8498  0F5C                     _SLRCOND	set	3932
  8499  0F51                     _SLRCONC	set	3921
  8500  0F46                     _SLRCONB	set	3910
  8501  0F3B                     _SLRCONA	set	3899
  8502  0F5B                     _ODCOND	set	3931
  8503  0F50                     _ODCONC	set	3920
  8504  0F45                     _ODCONB	set	3909
  8505  0F3A                     _ODCONA	set	3898
  8506  0F66                     _ODCONE	set	3942
  8507  0F4F                     _WPUC	set	3919
  8508  0F39                     _WPUA	set	3897
  8509  0F44                     _WPUB	set	3908
  8510  0F65                     _WPUE	set	3941
  8511  0F5A                     _WPUD	set	3930
  8512  0F38                     _ANSELA	set	3896
  8513  0F64                     _ANSELE	set	3940
  8514  0F43                     _ANSELB	set	3907
  8515  0F4E                     _ANSELC	set	3918
  8516  0F59                     _ANSELD	set	3929
  8517  7A7C                     _WPUC4	set	31356
  8518  7A7B                     _WPUC3	set	31355
  8519                           
  8520                           	psect	stringtext2
  8521  1000                     __pstringtext2:
  8522  1000                     STR_1:
  8523  1000  3425               	retlw	37	;'%'
  8524  1001  3430               	retlw	48	;'0'
  8525  1002  3432               	retlw	50	;'2'
  8526  1003  3464               	retlw	100	;'d'
  8527  1004  343A               	retlw	58	;':'
  8528  1005  3425               	retlw	37	;'%'
  8529  1006  3430               	retlw	48	;'0'
  8530  1007  3432               	retlw	50	;'2'
  8531  1008  3464               	retlw	100	;'d'
  8532  1009  343A               	retlw	58	;':'
  8533  100A  3425               	retlw	37	;'%'
  8534  100B  3430               	retlw	48	;'0'
  8535  100C  3432               	retlw	50	;'2'
  8536  100D  3464               	retlw	100	;'d'
  8537  100E  3400               	retlw	0
  8538                           
  8539                           	psect	stringtext3
  8540  180A                     __pstringtext3:
  8541  180A                     STR_3:
  8542  180A  3425               	retlw	37	;'%'
  8543  180B  3430               	retlw	48	;'0'
  8544  180C  3432               	retlw	50	;'2'
  8545  180D  3464               	retlw	100	;'d'
  8546  180E  3420               	retlw	32	;' '
  8547  180F  3443               	retlw	67	;'C'
  8548  1810  3400               	retlw	0
  8549                           
  8550                           	psect	stringtext4
  8551  1811                     __pstringtext4:
  8552  1811                     STR_5:
  8553  1811  344C               	retlw	76	;'L'
  8554  1812  3420               	retlw	32	;' '
  8555  1813  3425               	retlw	37	;'%'
  8556  1814  3464               	retlw	100	;'d'
  8557  1815  3400               	retlw	0
  8558                           
  8559                           	psect	stringtext5
  8560  0000                     __pstringtext5:
  8561  180A                     
  8562                           	psect	cinit
  8563  004E                     start_initialization:	
  8564                           ; #config settings
  8565                           
  8566  004E                     __initialization:
  8567                           
  8568                           ; Initialize objects allocated to BANK0
  8569  004E  30A7               	movlw	low __pidataBANK0
  8570  004F  0084               	movwf	4
  8571  0050  3097               	movlw	(high __pidataBANK0)| (0+128)
  8572  0051  0085               	movwf	5
  8573  0052  3067               	movlw	low __pdataBANK0
  8574  0053  0086               	movwf	6
  8575  0054  3000               	movlw	high __pdataBANK0
  8576  0055  0087               	movwf	7
  8577  0056  3007               	movlw	7
  8578  0057  3197  279A  3180   	fcall	init_ram
  8579                           
  8580                           ; Clear objects allocated to BANK0
  8581  005A  304D               	movlw	low __pbssBANK0
  8582  005B  0084               	movwf	4
  8583  005C  3000               	movlw	high __pbssBANK0
  8584  005D  0085               	movwf	5
  8585  005E  301A               	movlw	26
  8586  005F  3197  2794  3180   	fcall	clear_ram0
  8587                           
  8588                           ; Clear objects allocated to BANK1
  8589  0062  30BD               	movlw	low __pbssBANK1
  8590  0063  0084               	movwf	4
  8591  0064  3000               	movlw	high __pbssBANK1
  8592  0065  0085               	movwf	5
  8593  0066  300B               	movlw	11
  8594  0067  3197  2794  3180   	fcall	clear_ram0
  8595  006A                     end_of_initialization:	
  8596                           ;End of C runtime variable initialization code
  8597                           
  8598  006A                     __end_of__initialization:
  8599  006A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8600  006B  0020               	movlb	0
  8601  006C  3180  286E         	ljmp	_main	;jump to C main() function
  8602                           
  8603                           	psect	bssBANK0
  8604  004D                     __pbssBANK0:
  8605  004D                     _clkAlarm:
  8606  004D                     	ds	4
  8607  0051                     _lumAlarm:
  8608  0051                     	ds	3
  8609  0054                     _tempAlarm:
  8610  0054                     	ds	3
  8611  0057                     _t:
  8612  0057                     	ds	3
  8613  005A                     _mode:
  8614  005A                     	ds	2
  8615  005C                     _editingClockAlarm:
  8616  005C                     	ds	2
  8617  005E                     _dimingLed:
  8618  005E                     	ds	2
  8619  0060                     _editingLumAlarm:
  8620  0060                     	ds	1
  8621  0061                     _editingTempAlarm:
  8622  0061                     	ds	1
  8623  0062                     _lumLevel:
  8624  0062                     	ds	1
  8625  0063                     _temp:
  8626  0063                     	ds	1
  8627  0064                     _S1_Value:
  8628  0064                     	ds	1
  8629  0065                     _ALAF:
  8630  0065                     	ds	1
  8631  0066                     _TALA:
  8632  0066                     	ds	1
  8633                           
  8634                           	psect	dataBANK0
  8635  0067                     __pdataBANK0:
  8636  0067                     _alarmPWMStart:
  8637  0067                     	ds	3
  8638  006A                     _prevLumLevel:
  8639  006A                     	ds	2
  8640  006C                     _prevTemp:
  8641  006C                     	ds	2
  8642                           
  8643                           	psect	bssBANK1
  8644  00BD                     __pbssBANK1:
  8645  00BD                     menuLCD_ISR@F12829:
  8646  00BD                     	ds	3
  8647  00C0                     _i2c1_driver_i2cISR:
  8648  00C0                     	ds	2
  8649  00C2                     _i2c1_driver_busCollisionISR:
  8650  00C2                     	ds	2
  8651  00C4                     _PWM_on:
  8652  00C4                     	ds	1
  8653  00C5                     _idx_RingBuffer:
  8654  00C5                     	ds	1
  8655  00C6                     _PMON:
  8656  00C6                     	ds	1
  8657  00C7                     _NREG:
  8658  00C7                     	ds	1
  8659                           
  8660                           	psect	inittext
  8661  179A                     init_ram:
  8662  179A  00FE               	movwf	btemp
  8663  179B                     initloop:
  8664  179B  0012               	moviw fsr0++
  8665  179C  001E               	movwi fsr1++
  8666  179D  0BFE               	decfsz	btemp,f
  8667  179E  2F9B               	goto	initloop
  8668  179F  3400               	retlw	0
  8669                           
  8670                           	psect	clrtext
  8671  1794                     clear_ram0:	
  8672                           ;	Called with FSR0 containing the base address, and
  8673                           ;	WREG with the size to clear
  8674                           
  8675  1794  0064               	clrwdt	;clear the watchdog before getting into this loop
  8676  1795                     clrloop0:
  8677  1795  0180               	clrf	0	;clear RAM location pointed to by FSR
  8678  1796  3101               	addfsr 0,1
  8679  1797  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8680  1798  2F95               	goto	clrloop0	;have we reached the end yet?
  8681  1799  3400               	retlw	0	;all done for this memory range, return
  8682                           
  8683                           	psect	cstackBANK1
  8684  00A0                     __pcstackBANK1:
  8685  00A0                     ??_PMD_Initialize:
  8686  00A0                     ??_OSCILLATOR_Initialize:	
  8687                           ; 1 bytes @ 0x0
  8688                           
  8689  00A0                     ??_PWM6_Initialize:	
  8690                           ; 1 bytes @ 0x0
  8691                           
  8692  00A0                     ??_ADCC_Initialize:	
  8693                           ; 1 bytes @ 0x0
  8694                           
  8695  00A0                     ??_TMR2_Initialize:	
  8696                           ; 1 bytes @ 0x0
  8697                           
  8698  00A0                     ?_TMR1_SetInterruptHandler:	
  8699                           ; 1 bytes @ 0x0
  8700                           
  8701  00A0                     ?_TMR3_SetInterruptHandler:	
  8702                           ; 1 bytes @ 0x0
  8703                           
  8704  00A0                     ?_TMR5_SetInterruptHandler:	
  8705                           ; 1 bytes @ 0x0
  8706                           
  8707  00A0                     ?_INT_SetInterruptHandler:	
  8708                           ; 1 bytes @ 0x0
  8709                           
  8710  00A0                     ??_WriteI2C:	
  8711                           ; 1 bytes @ 0x0
  8712                           
  8713  00A0                     ??_PIN_MANAGER_Initialize:	
  8714                           ; 1 bytes @ 0x0
  8715                           
  8716  00A0                     ??_i2c1_driver_open:	
  8717                           ; 1 bytes @ 0x0
  8718                           
  8719  00A0                     ?_PWM6_LoadDutyValue:	
  8720                           ; 1 bytes @ 0x0
  8721                           
  8722  00A0                     ??_TMR2_Stop:	
  8723                           ; 1 bytes @ 0x0
  8724                           
  8725  00A0                     ??_TMR2_StopTimer:	
  8726                           ; 1 bytes @ 0x0
  8727                           
  8728  00A0                     ?_DATAEE_WriteByte:	
  8729                           ; 1 bytes @ 0x0
  8730                           
  8731  00A0                     ?_DATAEE_ReadByte:	
  8732                           ; 1 bytes @ 0x0
  8733                           
  8734  00A0                     ??_PWM_Output_D4_Disable:	
  8735                           ; 1 bytes @ 0x0
  8736                           
  8737  00A0                     ??_editClock:	
  8738                           ; 1 bytes @ 0x0
  8739                           
  8740  00A0                     ??_editTemp:	
  8741                           ; 1 bytes @ 0x0
  8742                           
  8743  00A0                     ??_editLum:	
  8744                           ; 1 bytes @ 0x0
  8745                           
  8746  00A0                     ??_toggleAlarms:	
  8747                           ; 1 bytes @ 0x0
  8748                           
  8749  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  8750                           ; 1 bytes @ 0x0
  8751                           
  8752  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  8753                           ; 2 bytes @ 0x0
  8754                           
  8755  00A0                     TMR5_SetInterruptHandler@InterruptHandler:	
  8756                           ; 2 bytes @ 0x0
  8757                           
  8758  00A0                     PWM6_LoadDutyValue@dutyValue:	
  8759                           ; 2 bytes @ 0x0
  8760                           
  8761  00A0                     DATAEE_WriteByte@bAdd:	
  8762                           ; 2 bytes @ 0x0
  8763                           
  8764  00A0                     DATAEE_ReadByte@bAdd:	
  8765                           ; 2 bytes @ 0x0
  8766                           
  8767  00A0                     INT_SetInterruptHandler@InterruptHandler:	
  8768                           ; 2 bytes @ 0x0
  8769                           
  8770                           
  8771                           ; 2 bytes @ 0x0
  8772  00A0                     	ds	1
  8773  00A1                     WriteI2C@data_out:
  8774                           
  8775                           ; 1 bytes @ 0x1
  8776  00A1                     	ds	1
  8777  00A2                     ??_TMR3_Initialize:
  8778  00A2                     ??_TMR5_Initialize:	
  8779                           ; 1 bytes @ 0x2
  8780                           
  8781  00A2                     ??_EXT_INT_Initialize:	
  8782                           ; 1 bytes @ 0x2
  8783                           
  8784  00A2                     ??_TMR1_Initialize:	
  8785                           ; 1 bytes @ 0x2
  8786                           
  8787  00A2                     ??_TMR1_SetInterruptHandler:	
  8788                           ; 1 bytes @ 0x2
  8789                           
  8790  00A2                     ??_TMR3_SetInterruptHandler:	
  8791                           ; 1 bytes @ 0x2
  8792                           
  8793  00A2                     ??_TMR5_SetInterruptHandler:	
  8794                           ; 1 bytes @ 0x2
  8795                           
  8796  00A2                     ??_INT_SetInterruptHandler:	
  8797                           ; 1 bytes @ 0x2
  8798                           
  8799  00A2                     ??_SYSTEM_Initialize:	
  8800                           ; 1 bytes @ 0x2
  8801                           
  8802  00A2                     ??_PWM6_LoadDutyValue:	
  8803                           ; 1 bytes @ 0x2
  8804                           
  8805  00A2                     ??_DATAEE_ReadByte:	
  8806                           ; 1 bytes @ 0x2
  8807                           
  8808  00A2                     ??_LCDsend:	
  8809                           ; 1 bytes @ 0x2
  8810                           
  8811  00A2                     ?_LCDsend2x4:	
  8812                           ; 1 bytes @ 0x2
  8813                           
  8814  00A2                     DATAEE_WriteByte@bData:	
  8815                           ; 1 bytes @ 0x2
  8816                           
  8817  00A2                     LCDsend2x4@mode:	
  8818                           ; 1 bytes @ 0x2
  8819                           
  8820                           
  8821                           ; 1 bytes @ 0x2
  8822  00A2                     	ds	1
  8823  00A3                     ??_DATAEE_WriteByte:
  8824  00A3                     ??_LCDsend2x4:	
  8825                           ; 1 bytes @ 0x3
  8826                           
  8827  00A3                     DATAEE_WriteByte@GIEBitValue:	
  8828                           ; 1 bytes @ 0x3
  8829                           
  8830  00A3                     LCDsend@c:	
  8831                           ; 1 bytes @ 0x3
  8832                           
  8833                           
  8834                           ; 1 bytes @ 0x3
  8835  00A3                     	ds	2
  8836  00A5                     LCDsend2x4@c:
  8837                           
  8838                           ; 1 bytes @ 0x5
  8839  00A5                     	ds	1
  8840  00A6                     LCDsend2x4@hc:
  8841                           
  8842                           ; 1 bytes @ 0x6
  8843  00A6                     	ds	1
  8844  00A7                     LCDsend2x4@lc:
  8845                           
  8846                           ; 1 bytes @ 0x7
  8847  00A7                     	ds	1
  8848  00A8                     ??_LCDinit:
  8849                           
  8850                           ; 1 bytes @ 0x8
  8851  00A8                     	ds	1
  8852  00A9                     ??_main:
  8853                           
  8854                           ; 1 bytes @ 0x9
  8855  00A9                     	ds	3
  8856  00AC                     main@checkSumAux:
  8857                           
  8858                           ; 1 bytes @ 0xC
  8859  00AC                     	ds	1
  8860  00AD                     main@notInit:
  8861                           
  8862                           ; 1 bytes @ 0xD
  8863  00AD                     	ds	1
  8864  00AE                     main@corrupted:
  8865                           
  8866                           ; 1 bytes @ 0xE
  8867  00AE                     	ds	1
  8868  00AF                     main@i:
  8869                           
  8870                           ; 2 bytes @ 0xF
  8871  00AF                     	ds	2
  8872                           
  8873                           	psect	cstackCOMMON
  8874  0070                     __pcstackCOMMON:
  8875  0070                     ?_isdigit:
  8876  0070                     ?_i2c1_driver_open:	
  8877                           ; 1 bit 
  8878                           
  8879  0070                     ?_PMD_Initialize:	
  8880                           ; 1 bit 
  8881                           
  8882  0070                     ?_OSCILLATOR_Initialize:	
  8883                           ; 1 bytes @ 0x0
  8884                           
  8885  0070                     ?_PWM6_Initialize:	
  8886                           ; 1 bytes @ 0x0
  8887                           
  8888  0070                     ?_ADCC_Initialize:	
  8889                           ; 1 bytes @ 0x0
  8890                           
  8891  0070                     ?_TMR3_Initialize:	
  8892                           ; 1 bytes @ 0x0
  8893                           
  8894  0070                     ?_TMR5_Initialize:	
  8895                           ; 1 bytes @ 0x0
  8896                           
  8897  0070                     ?_TMR2_Initialize:	
  8898                           ; 1 bytes @ 0x0
  8899                           
  8900  0070                     ?_EXT_INT_Initialize:	
  8901                           ; 1 bytes @ 0x0
  8902                           
  8903  0070                     ?_TMR1_Initialize:	
  8904                           ; 1 bytes @ 0x0
  8905                           
  8906  0070                     ?_INT_ISR:	
  8907                           ; 1 bytes @ 0x0
  8908                           
  8909  0070                     ?_TMR5_ISR:	
  8910                           ; 1 bytes @ 0x0
  8911                           
  8912  0070                     ?_TMR3_ISR:	
  8913                           ; 1 bytes @ 0x0
  8914                           
  8915  0070                     ?_TMR1_ISR:	
  8916                           ; 1 bytes @ 0x0
  8917                           
  8918  0070                     ?_TMR1_DefaultInterruptHandler:	
  8919                           ; 1 bytes @ 0x0
  8920                           
  8921  0070                     ??_TMR1_DefaultInterruptHandler:	
  8922                           ; 1 bytes @ 0x0
  8923                           
  8924  0070                     ?_TMR3_DefaultInterruptHandler:	
  8925                           ; 1 bytes @ 0x0
  8926                           
  8927  0070                     ??_TMR3_DefaultInterruptHandler:	
  8928                           ; 1 bytes @ 0x0
  8929                           
  8930  0070                     ?_TMR5_DefaultInterruptHandler:	
  8931                           ; 1 bytes @ 0x0
  8932                           
  8933  0070                     ??_TMR5_DefaultInterruptHandler:	
  8934                           ; 1 bytes @ 0x0
  8935                           
  8936  0070                     ?_INT_CallBack:	
  8937                           ; 1 bytes @ 0x0
  8938                           
  8939  0070                     ??_isdigit:	
  8940                           ; 1 bytes @ 0x0
  8941                           
  8942  0070                     ?_ReadI2C:	
  8943                           ; 1 bytes @ 0x0
  8944                           
  8945  0070                     ??_ReadI2C:	
  8946                           ; 1 bytes @ 0x0
  8947                           
  8948  0070                     ?_WriteI2C:	
  8949                           ; 1 bytes @ 0x0
  8950                           
  8951  0070                     ?_PIN_MANAGER_Initialize:	
  8952                           ; 1 bytes @ 0x0
  8953                           
  8954  0070                     ?_SYSTEM_Initialize:	
  8955                           ; 1 bytes @ 0x0
  8956                           
  8957  0070                     ?_INTERRUPT_InterruptManager:	
  8958                           ; 1 bytes @ 0x0
  8959                           
  8960  0070                     ?_TMR1_WriteTimer:	
  8961                           ; 1 bytes @ 0x0
  8962                           
  8963  0070                     ?_TMR3_WriteTimer:	
  8964                           ; 1 bytes @ 0x0
  8965                           
  8966  0070                     ?_TMR5_WriteTimer:	
  8967                           ; 1 bytes @ 0x0
  8968                           
  8969  0070                     ?_TMR2_Start:	
  8970                           ; 1 bytes @ 0x0
  8971                           
  8972  0070                     ??_TMR2_Start:	
  8973                           ; 1 bytes @ 0x0
  8974                           
  8975  0070                     ?_TMR2_StartTimer:	
  8976                           ; 1 bytes @ 0x0
  8977                           
  8978  0070                     ??_TMR2_StartTimer:	
  8979                           ; 1 bytes @ 0x0
  8980                           
  8981  0070                     ?_TMR2_Stop:	
  8982                           ; 1 bytes @ 0x0
  8983                           
  8984  0070                     ?_TMR2_StopTimer:	
  8985                           ; 1 bytes @ 0x0
  8986                           
  8987  0070                     ?_tsttc:	
  8988                           ; 1 bytes @ 0x0
  8989                           
  8990  0070                     ?_LCDsend:	
  8991                           ; 1 bytes @ 0x0
  8992                           
  8993  0070                     ?_LCDinit:	
  8994                           ; 1 bytes @ 0x0
  8995                           
  8996  0070                     ?_LCDcmd:	
  8997                           ; 1 bytes @ 0x0
  8998                           
  8999  0070                     ?_LCDchar:	
  9000                           ; 1 bytes @ 0x0
  9001                           
  9002  0070                     ?_LCDstr:	
  9003                           ; 1 bytes @ 0x0
  9004                           
  9005  0070                     ?_differenceBetweenTimePeriod:	
  9006                           ; 1 bytes @ 0x0
  9007                           
  9008  0070                     ?_PWM_Output_D4_Enable:	
  9009                           ; 1 bytes @ 0x0
  9010                           
  9011  0070                     ??_PWM_Output_D4_Enable:	
  9012                           ; 1 bytes @ 0x0
  9013                           
  9014  0070                     ?_PWM_Output_D4_Disable:	
  9015                           ; 1 bytes @ 0x0
  9016                           
  9017  0070                     ?_Clock_ISR:	
  9018                           ; 1 bytes @ 0x0
  9019                           
  9020  0070                     ?_menuLCD_ISR:	
  9021                           ; 1 bytes @ 0x0
  9022                           
  9023  0070                     ?_monitoring_ISR:	
  9024                           ; 1 bytes @ 0x0
  9025                           
  9026  0070                     ?_editClock:	
  9027                           ; 1 bytes @ 0x0
  9028                           
  9029  0070                     ?_editTemp:	
  9030                           ; 1 bytes @ 0x0
  9031                           
  9032  0070                     ?_editLum:	
  9033                           ; 1 bytes @ 0x0
  9034                           
  9035  0070                     ?_toggleAlarms:	
  9036                           ; 1 bytes @ 0x0
  9037                           
  9038  0070                     ?_S1_ISR:	
  9039                           ; 1 bytes @ 0x0
  9040                           
  9041  0070                     ??_S1_ISR:	
  9042                           ; 1 bytes @ 0x0
  9043                           
  9044  0070                     ?_main:	
  9045                           ; 1 bytes @ 0x0
  9046                           
  9047  0070                     ?_INT_DefaultInterruptHandler:	
  9048                           ; 1 bytes @ 0x0
  9049                           
  9050  0070                     ??_INT_DefaultInterruptHandler:	
  9051                           ; 1 bytes @ 0x0
  9052                           
  9053  0070                     ?i1_WriteI2C:	
  9054                           ; 1 bytes @ 0x0
  9055                           
  9056  0070                     ??i1_WriteI2C:	
  9057                           ; 1 bytes @ 0x0
  9058                           
  9059  0070                     ?i1_PWM6_LoadDutyValue:	
  9060                           ; 1 bytes @ 0x0
  9061                           
  9062  0070                     ?i1_TMR2_Stop:	
  9063                           ; 1 bytes @ 0x0
  9064                           
  9065  0070                     ??i1_TMR2_Stop:	
  9066                           ; 1 bytes @ 0x0
  9067                           
  9068  0070                     ?i1_TMR2_StopTimer:	
  9069                           ; 1 bytes @ 0x0
  9070                           
  9071  0070                     ??i1_TMR2_StopTimer:	
  9072                           ; 1 bytes @ 0x0
  9073                           
  9074  0070                     ?i1_PWM_Output_D4_Disable:	
  9075                           ; 1 bytes @ 0x0
  9076                           
  9077  0070                     ??i1_PWM_Output_D4_Disable:	
  9078                           ; 1 bytes @ 0x0
  9079                           
  9080  0070                     ?_ADCC_GetSingleConversion:	
  9081                           ; 1 bytes @ 0x0
  9082                           
  9083  0070                     ?___wmul:	
  9084                           ; 2 bytes @ 0x0
  9085                           
  9086  0070                     ?___lwdiv:	
  9087                           ; 2 bytes @ 0x0
  9088                           
  9089  0070                     _isdigit$2958:	
  9090                           ; 2 bytes @ 0x0
  9091                           
  9092  0070                     TMR1_WriteTimer@timerVal:	
  9093                           ; 1 bytes @ 0x0
  9094                           
  9095  0070                     TMR3_WriteTimer@timerVal:	
  9096                           ; 2 bytes @ 0x0
  9097                           
  9098  0070                     TMR5_WriteTimer@timerVal:	
  9099                           ; 2 bytes @ 0x0
  9100                           
  9101  0070                     ___wmul@multiplier:	
  9102                           ; 2 bytes @ 0x0
  9103                           
  9104  0070                     ___lwdiv@divisor:	
  9105                           ; 2 bytes @ 0x0
  9106                           
  9107  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9108                           ; 2 bytes @ 0x0
  9109                           
  9110  0070                     differenceBetweenTimePeriod@start:	
  9111                           ; 2 bytes @ 0x0
  9112                           
  9113                           
  9114                           ; 3 bytes @ 0x0
  9115  0070                     	ds	1
  9116  0071                     ??_INT_ISR:
  9117  0071                     ??_INT_CallBack:	
  9118                           ; 1 bytes @ 0x1
  9119                           
  9120  0071                     isdigit@c:	
  9121                           ; 1 bytes @ 0x1
  9122                           
  9123  0071                     i1WriteI2C@data_out:	
  9124                           ; 1 bytes @ 0x1
  9125                           
  9126                           
  9127                           ; 1 bytes @ 0x1
  9128  0071                     	ds	1
  9129  0072                     ??_TMR1_WriteTimer:
  9130  0072                     ??_TMR3_WriteTimer:	
  9131                           ; 1 bytes @ 0x2
  9132                           
  9133  0072                     ??_TMR5_WriteTimer:	
  9134                           ; 1 bytes @ 0x2
  9135                           
  9136  0072                     ??_tsttc:	
  9137                           ; 1 bytes @ 0x2
  9138                           
  9139  0072                     ??i1_PWM6_LoadDutyValue:	
  9140                           ; 1 bytes @ 0x2
  9141                           
  9142  0072                     ?i1_LCDsend2x4:	
  9143                           ; 1 bytes @ 0x2
  9144                           
  9145  0072                     i1LCDsend2x4@mode:	
  9146                           ; 1 bytes @ 0x2
  9147                           
  9148  0072                     ___wmul@multiplicand:	
  9149                           ; 1 bytes @ 0x2
  9150                           
  9151  0072                     ___lwdiv@dividend:	
  9152                           ; 2 bytes @ 0x2
  9153                           
  9154                           
  9155                           ; 2 bytes @ 0x2
  9156  0072                     	ds	1
  9157  0073                     ??_ADCC_GetSingleConversion:
  9158  0073                     ??i1_LCDsend2x4:	
  9159                           ; 1 bytes @ 0x3
  9160                           
  9161  0073                     ADCC_GetSingleConversion@channel:	
  9162                           ; 1 bytes @ 0x3
  9163                           
  9164  0073                     tsttc@value:	
  9165                           ; 1 bytes @ 0x3
  9166                           
  9167  0073                     differenceBetweenTimePeriod@stop:	
  9168                           ; 1 bytes @ 0x3
  9169                           
  9170                           
  9171                           ; 3 bytes @ 0x3
  9172  0073                     	ds	1
  9173  0074                     ??___wmul:
  9174  0074                     ??___lwdiv:	
  9175                           ; 1 bytes @ 0x4
  9176                           
  9177  0074                     ___wmul@product:	
  9178                           ; 1 bytes @ 0x4
  9179                           
  9180                           
  9181                           ; 2 bytes @ 0x4
  9182  0074                     	ds	1
  9183  0075                     i1LCDsend2x4@c:
  9184  0075                     ___lwdiv@quotient:	
  9185                           ; 1 bytes @ 0x5
  9186                           
  9187                           
  9188                           ; 2 bytes @ 0x5
  9189  0075                     	ds	1
  9190  0076                     ?i1_DATAEE_WriteByte:
  9191  0076                     differenceBetweenTimePeriod@diff:	
  9192                           ; 1 bytes @ 0x6
  9193                           
  9194  0076                     i1LCDsend2x4@hc:	
  9195                           ; 1 bytes @ 0x6
  9196                           
  9197  0076                     i1DATAEE_WriteByte@bAdd:	
  9198                           ; 1 bytes @ 0x6
  9199                           
  9200                           
  9201                           ; 2 bytes @ 0x6
  9202  0076                     	ds	1
  9203  0077                     ??_differenceBetweenTimePeriod:
  9204  0077                     ___lwdiv@counter:	
  9205                           ; 1 bytes @ 0x7
  9206                           
  9207  0077                     i1LCDsend2x4@lc:	
  9208                           ; 1 bytes @ 0x7
  9209                           
  9210                           
  9211                           ; 1 bytes @ 0x7
  9212  0077                     	ds	1
  9213  0078                     ??_LCDcmd:
  9214  0078                     ??_LCDchar:	
  9215                           ; 1 bytes @ 0x8
  9216                           
  9217  0078                     ?___lwmod:	
  9218                           ; 1 bytes @ 0x8
  9219                           
  9220  0078                     LCDcmd@c:	
  9221                           ; 2 bytes @ 0x8
  9222                           
  9223  0078                     LCDchar@c:	
  9224                           ; 1 bytes @ 0x8
  9225                           
  9226  0078                     i1DATAEE_WriteByte@bData:	
  9227                           ; 1 bytes @ 0x8
  9228                           
  9229  0078                     ___lwmod@divisor:	
  9230                           ; 1 bytes @ 0x8
  9231                           
  9232                           
  9233                           ; 2 bytes @ 0x8
  9234  0078                     	ds	1
  9235  0079                     ??_LCDstr:
  9236  0079                     ??i1_DATAEE_WriteByte:	
  9237                           ; 1 bytes @ 0x9
  9238                           
  9239  0079                     i1DATAEE_WriteByte@GIEBitValue:	
  9240                           ; 1 bytes @ 0x9
  9241                           
  9242                           
  9243                           ; 1 bytes @ 0x9
  9244  0079                     	ds	1
  9245  007A                     ??_Clock_ISR:
  9246  007A                     ??_monitoring_ISR:	
  9247                           ; 1 bytes @ 0xA
  9248                           
  9249  007A                     LCDstr@c:	
  9250                           ; 1 bytes @ 0xA
  9251                           
  9252  007A                     ___lwmod@dividend:	
  9253                           ; 1 bytes @ 0xA
  9254                           
  9255                           
  9256                           ; 2 bytes @ 0xA
  9257  007A                     	ds	1
  9258  007B                     ??_TMR1_ISR:
  9259  007B                     LCDstr@p:	
  9260                           ; 1 bytes @ 0xB
  9261                           
  9262                           
  9263                           ; 1 bytes @ 0xB
  9264  007B                     	ds	1
  9265  007C                     ??___lwmod:
  9266                           
  9267                           ; 1 bytes @ 0xC
  9268  007C                     	ds	1
  9269  007D                     ??_TMR5_ISR:
  9270  007D                     ___lwmod@counter:	
  9271                           ; 1 bytes @ 0xD
  9272                           
  9273                           
  9274                           ; 1 bytes @ 0xD
  9275  007D                     	ds	1
  9276  007E                     ??_TMR3_ISR:
  9277  007E                     ??_INTERRUPT_InterruptManager:	
  9278                           ; 1 bytes @ 0xE
  9279                           
  9280                           
  9281                           	psect	cstackBANK0
  9282  0020                     __pcstackBANK0:	
  9283                           ; 1 bytes @ 0xE
  9284                           
  9285  0020                     ?_sprintf:
  9286  0020                     sprintf@f:	
  9287                           ; 2 bytes @ 0x0
  9288                           
  9289                           
  9290                           ; 2 bytes @ 0x0
  9291  0020                     	ds	8
  9292  0028                     ??_sprintf:
  9293                           
  9294                           ; 1 bytes @ 0x8
  9295  0028                     	ds	4
  9296  002C                     sprintf@ap:
  9297                           
  9298                           ; 1 bytes @ 0xC
  9299  002C                     	ds	1
  9300  002D                     sprintf@prec:
  9301                           
  9302                           ; 1 bytes @ 0xD
  9303  002D                     	ds	1
  9304  002E                     sprintf@val:
  9305                           
  9306                           ; 2 bytes @ 0xE
  9307  002E                     	ds	2
  9308  0030                     sprintf@flag:
  9309                           
  9310                           ; 1 bytes @ 0x10
  9311  0030                     	ds	1
  9312  0031                     sprintf@width:
  9313                           
  9314                           ; 2 bytes @ 0x11
  9315  0031                     	ds	2
  9316  0033                     sprintf@c:
  9317                           
  9318                           ; 1 bytes @ 0x13
  9319  0033                     	ds	1
  9320  0034                     sprintf@sp:
  9321                           
  9322                           ; 1 bytes @ 0x14
  9323  0034                     	ds	1
  9324  0035                     ??_menuLCD_ISR:
  9325                           
  9326                           ; 1 bytes @ 0x15
  9327  0035                     	ds	6
  9328  003B                     menuLCD_ISR@str:
  9329                           
  9330                           ; 8 bytes @ 0x1B
  9331  003B                     	ds	8
  9332  0043                     menuLCD_ISR@tt:
  9333                           
  9334                           ; 4 bytes @ 0x23
  9335  0043                     	ds	4
  9336  0047                     menuLCD_ISR@l:
  9337                           
  9338                           ; 3 bytes @ 0x27
  9339  0047                     	ds	3
  9340  004A                     menuLCD_ISR@diff:
  9341                           
  9342                           ; 3 bytes @ 0x2A
  9343  004A                     	ds	3
  9344                           
  9345                           	psect	maintext
  9346  006E                     __pmaintext:	
  9347 ;;
  9348 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  9349 ;;
  9350 ;; *************** function _main *****************
  9351 ;; Defined at:
  9352 ;;		line 643 in file "main.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;		None
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;  i               2   15[BANK1 ] int 
  9357 ;;  corrupted       1   14[BANK1 ] unsigned char 
  9358 ;;  notInit         1   13[BANK1 ] unsigned char 
  9359 ;;  checkSumAux     1   12[BANK1 ] unsigned char 
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  1    wreg      void 
  9362 ;; Registers used:
  9363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9364 ;; Tracked objects:
  9365 ;;		On entry : B1F/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9372 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9373 ;;Total ram usage:        8 bytes
  9374 ;; Hardware stack levels required when called:   10
  9375 ;; This function calls:
  9376 ;;		_DATAEE_ReadByte
  9377 ;;		_DATAEE_WriteByte
  9378 ;;		_INT_SetInterruptHandler
  9379 ;;		_LCDinit
  9380 ;;		_PWM6_LoadDutyValue
  9381 ;;		_PWM_Output_D4_Disable
  9382 ;;		_SYSTEM_Initialize
  9383 ;;		_TMR1_SetInterruptHandler
  9384 ;;		_TMR2_StopTimer
  9385 ;;		_TMR3_SetInterruptHandler
  9386 ;;		_TMR5_SetInterruptHandler
  9387 ;;		_editClock
  9388 ;;		_editLum
  9389 ;;		_editTemp
  9390 ;;		_i2c1_driver_open
  9391 ;;		_toggleAlarms
  9392 ;; This function is called by:
  9393 ;;		Startup code after reset
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           
  9398                           ;psect for function _main
  9399  006E                     _main:
  9400  006E                     l5067:	
  9401                           ;incstack = 0
  9402                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9403                           
  9404                           
  9405                           ;main.c: 646: SYSTEM_Initialize();
  9406  006E  3189  21C3  3180   	fcall	_SYSTEM_Initialize
  9407                           
  9408                           ;main.c: 648: PWM6_LoadDutyValue(0);
  9409  0071  3000               	movlw	0
  9410  0072  0021               	movlb	1	; select bank1
  9411  0073  00A0               	movwf	PWM6_LoadDutyValue@dutyValue^(0+128)
  9412  0074  00A1               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128)
  9413  0075  3188  20F6  3180   	fcall	_PWM6_LoadDutyValue
  9414  0078                     l5069:
  9415                           
  9416                           ;main.c: 649: TMR2_StopTimer();
  9417  0078  3197  2772  3180   	fcall	_TMR2_StopTimer
  9418  007B                     l5071:
  9419                           
  9420                           ;main.c: 650: PWM_Output_D4_Disable();
  9421  007B  3197  2764  3180   	fcall	_PWM_Output_D4_Disable
  9422                           
  9423                           ;main.c: 652: TMR1_SetInterruptHandler(Clock_ISR);
  9424  007E  30FF               	movlw	low _Clock_ISR
  9425  007F  0021               	movlb	1	; select bank1
  9426  0080  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  9427  0081  3006               	movlw	high _Clock_ISR
  9428  0082  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9429  0083  3197  2782  3180   	fcall	_TMR1_SetInterruptHandler
  9430                           
  9431                           ;main.c: 654: TMR3_SetInterruptHandler(menuLCD_ISR);
  9432  0086  306B               	movlw	low _menuLCD_ISR
  9433  0087  0021               	movlb	1	; select bank1
  9434  0088  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9435  0089  3002               	movlw	high _menuLCD_ISR
  9436  008A  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9437  008B  3197  2788  3180   	fcall	_TMR3_SetInterruptHandler
  9438                           
  9439                           ;main.c: 656: TMR5_SetInterruptHandler(monitoring_ISR);
  9440  008E  30E1               	movlw	low _monitoring_ISR
  9441  008F  0021               	movlb	1	; select bank1
  9442  0090  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  9443  0091  3005               	movlw	high _monitoring_ISR
  9444  0092  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9445  0093  3197  278E  3180   	fcall	_TMR5_SetInterruptHandler
  9446                           
  9447                           ;main.c: 658: INT_SetInterruptHandler(S1_ISR);
  9448  0096  3063               	movlw	low _S1_ISR
  9449  0097  0021               	movlb	1	; select bank1
  9450  0098  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
  9451  0099  300B               	movlw	high _S1_ISR
  9452  009A  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9453  009B  3197  277C  3180   	fcall	_INT_SetInterruptHandler
  9454  009E                     l5073:
  9455                           
  9456                           ;main.c: 660: uint8_t checkSumAux = 0;
  9457  009E  0021               	movlb	1	; select bank1
  9458  009F  01AC               	clrf	main@checkSumAux^(0+128)
  9459  00A0                     l5075:
  9460                           
  9461                           ;main.c: 661: bool notInit = 1;
  9462  00A0  01AD               	clrf	main@notInit^(0+128)
  9463  00A1  0AAD               	incf	main@notInit^(0+128),f
  9464  00A2                     l5077:
  9465                           
  9466                           ;main.c: 662: bool corrupted = 0;
  9467  00A2  01AE               	clrf	main@corrupted^(0+128)
  9468  00A3                     l5079:
  9469                           
  9470                           ;main.c: 663: if(DATAEE_ReadByte(0x7000) == 'S'){
  9471  00A3  3000               	movlw	0
  9472  00A4  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9473  00A5  3070               	movlw	112
  9474  00A6  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9475  00A7  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9476  00AA  3A53               	xorlw	83
  9477  00AB  1D03               	skipz
  9478  00AC  28AE               	goto	u4851
  9479  00AD  28AF               	goto	u4850
  9480  00AE                     u4851:
  9481  00AE  28EE               	goto	l5099
  9482  00AF                     u4850:
  9483  00AF                     l5081:
  9484                           
  9485                           ;main.c: 664: notInit = 0;
  9486  00AF  0021               	movlb	1	; select bank1
  9487  00B0  01AD               	clrf	main@notInit^(0+128)
  9488  00B1                     l5083:
  9489                           
  9490                           ;main.c: 665: for(int i = 1; i < 13; i++){
  9491  00B1  3001               	movlw	1
  9492  00B2  00AF               	movwf	main@i^(0+128)
  9493  00B3  3000               	movlw	0
  9494  00B4  00B0               	movwf	(main@i^(0+128)+1)
  9495  00B5                     l5089:
  9496                           
  9497                           ;main.c: 666: checkSumAux += DATAEE_ReadByte(0x7000 + (i*8));
  9498  00B5  0021               	movlb	1	; select bank1
  9499  00B6  0830               	movf	(main@i+1)^(0+128),w
  9500  00B7  00AA               	movwf	(??_main^(0+128)+1)
  9501  00B8  082F               	movf	main@i^(0+128),w
  9502  00B9  00A9               	movwf	??_main^(0+128)
  9503  00BA  35A9               	lslf	??_main^(0+128),f
  9504  00BB  0DAA               	rlf	(??_main^(0+128)+1),f
  9505  00BC  35A9               	lslf	??_main^(0+128),f
  9506  00BD  0DAA               	rlf	(??_main^(0+128)+1),f
  9507  00BE  35A9               	lslf	??_main^(0+128),f
  9508  00BF  0DAA               	rlf	(??_main^(0+128)+1),f
  9509  00C0  0829               	movf	??_main^(0+128),w
  9510  00C1  3E00               	addlw	0
  9511  00C2  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9512  00C3  3070               	movlw	112
  9513  00C4  3D2A               	addwfc	(??_main+1)^(0+128),w
  9514  00C5  00A1               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+128)
  9515  00C6  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9516  00C9  0021               	movlb	1	; select bank1
  9517  00CA  00AB               	movwf	(??_main+2)^(0+128)
  9518  00CB  082B               	movf	(??_main+2)^(0+128),w
  9519  00CC  07AC               	addwf	main@checkSumAux^(0+128),f
  9520  00CD                     l5091:
  9521  00CD  3001               	movlw	1
  9522  00CE  07AF               	addwf	main@i^(0+128),f
  9523  00CF  3000               	movlw	0
  9524  00D0  3DB0               	addwfc	(main@i+1)^(0+128),f
  9525  00D1                     l5093:
  9526  00D1  0830               	movf	(main@i+1)^(0+128),w
  9527  00D2  3A80               	xorlw	128
  9528  00D3  00A9               	movwf	??_main^(0+128)
  9529  00D4  3080               	movlw	128
  9530  00D5  0229               	subwf	??_main^(0+128),w
  9531  00D6  1D03               	skipz
  9532  00D7  28DA               	goto	u4865
  9533  00D8  300D               	movlw	13
  9534  00D9  022F               	subwf	main@i^(0+128),w
  9535  00DA                     u4865:
  9536  00DA  1C03               	skipc
  9537  00DB  28DD               	goto	u4861
  9538  00DC  28DE               	goto	u4860
  9539  00DD                     u4861:
  9540  00DD  28B5               	goto	l5089
  9541  00DE                     u4860:
  9542  00DE                     l5095:
  9543                           
  9544                           ;main.c: 667: };main.c: 668: if(checkSumAux != DATAEE_ReadByte(0x7000 + (13*8))){
  9545  00DE  3068               	movlw	104
  9546  00DF  0021               	movlb	1	; select bank1
  9547  00E0  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9548  00E1  3070               	movlw	112
  9549  00E2  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9550  00E3  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9551  00E6  0021               	movlb	1	; select bank1
  9552  00E7  062C               	xorwf	main@checkSumAux^(0+128),w
  9553  00E8  1903               	skipnz
  9554  00E9  28EB               	goto	u4871
  9555  00EA  28EC               	goto	u4870
  9556  00EB                     u4871:
  9557  00EB  28EE               	goto	l5099
  9558  00EC                     u4870:
  9559  00EC                     l5097:
  9560                           
  9561                           ;main.c: 669: corrupted = 1;
  9562  00EC  01AE               	clrf	main@corrupted^(0+128)
  9563  00ED  0AAE               	incf	main@corrupted^(0+128),f
  9564  00EE                     l5099:
  9565                           
  9566                           ;main.c: 670: };main.c: 671: };main.c: 673: if(notInit || corrupted){
  9567  00EE  0021               	movlb	1	; select bank1
  9568  00EF  082D               	movf	main@notInit^(0+128),w
  9569  00F0  1D03               	btfss	3,2
  9570  00F1  28F3               	goto	u4881
  9571  00F2  28F4               	goto	u4880
  9572  00F3                     u4881:
  9573  00F3  28F9               	goto	l5103
  9574  00F4                     u4880:
  9575  00F4                     l5101:
  9576  00F4  082E               	movf	main@corrupted^(0+128),w
  9577  00F5  1903               	btfsc	3,2
  9578  00F6  28F8               	goto	u4891
  9579  00F7  28F9               	goto	u4890
  9580  00F8                     u4891:
  9581  00F8  2991               	goto	l5105
  9582  00F9                     u4890:
  9583  00F9                     l5103:
  9584                           
  9585                           ;main.c: 674: DATAEE_WriteByte( 0x7000 + (0 * 8), 'S');
  9586  00F9  3000               	movlw	0
  9587  00FA  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9588  00FB  3070               	movlw	112
  9589  00FC  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9590  00FD  3053               	movlw	83
  9591  00FE  00A9               	movwf	??_main^(0+128)
  9592  00FF  0829               	movf	??_main^(0+128),w
  9593  0100  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9594  0101  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9595                           
  9596                           ;main.c: 675: DATAEE_WriteByte( 0x7000 + (1 * 8), 25);
  9597  0104  3008               	movlw	8
  9598  0105  0021               	movlb	1	; select bank1
  9599  0106  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9600  0107  3070               	movlw	112
  9601  0108  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9602  0109  3019               	movlw	25
  9603  010A  00A9               	movwf	??_main^(0+128)
  9604  010B  0829               	movf	??_main^(0+128),w
  9605  010C  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9606  010D  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9607                           
  9608                           ;main.c: 676: DATAEE_WriteByte( 0x7000 + (2 * 8), 3);
  9609  0110  3010               	movlw	16
  9610  0111  0021               	movlb	1	; select bank1
  9611  0112  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9612  0113  3070               	movlw	112
  9613  0114  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9614  0115  3003               	movlw	3
  9615  0116  00A9               	movwf	??_main^(0+128)
  9616  0117  0829               	movf	??_main^(0+128),w
  9617  0118  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9618  0119  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9619                           
  9620                           ;main.c: 677: DATAEE_WriteByte( 0x7000 + (3 * 8), 5);
  9621  011C  3018               	movlw	24
  9622  011D  0021               	movlb	1	; select bank1
  9623  011E  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9624  011F  3070               	movlw	112
  9625  0120  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9626  0121  3005               	movlw	5
  9627  0122  00A9               	movwf	??_main^(0+128)
  9628  0123  0829               	movf	??_main^(0+128),w
  9629  0124  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9630  0125  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9631                           
  9632                           ;main.c: 678: DATAEE_WriteByte( 0x7000 + (4 * 8), 12);
  9633  0128  3020               	movlw	32
  9634  0129  0021               	movlb	1	; select bank1
  9635  012A  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9636  012B  3070               	movlw	112
  9637  012C  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9638  012D  300C               	movlw	12
  9639  012E  00A9               	movwf	??_main^(0+128)
  9640  012F  0829               	movf	??_main^(0+128),w
  9641  0130  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9642  0131  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9643                           
  9644                           ;main.c: 679: DATAEE_WriteByte( 0x7000 + (5 * 8), 0);
  9645  0134  3028               	movlw	40
  9646  0135  0021               	movlb	1	; select bank1
  9647  0136  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9648  0137  3070               	movlw	112
  9649  0138  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9650  0139  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9651  013A  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9652                           
  9653                           ;main.c: 680: DATAEE_WriteByte( 0x7000 + (6 * 8), 0);
  9654  013D  3030               	movlw	48
  9655  013E  0021               	movlb	1	; select bank1
  9656  013F  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9657  0140  3070               	movlw	112
  9658  0141  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9659  0142  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9660  0143  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9661                           
  9662                           ;main.c: 681: DATAEE_WriteByte( 0x7000 + (7 * 8), 28);
  9663  0146  3038               	movlw	56
  9664  0147  0021               	movlb	1	; select bank1
  9665  0148  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9666  0149  3070               	movlw	112
  9667  014A  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9668  014B  301C               	movlw	28
  9669  014C  00A9               	movwf	??_main^(0+128)
  9670  014D  0829               	movf	??_main^(0+128),w
  9671  014E  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9672  014F  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9673                           
  9674                           ;main.c: 682: DATAEE_WriteByte( 0x7000 + (8 * 8), 4);
  9675  0152  3040               	movlw	64
  9676  0153  0021               	movlb	1	; select bank1
  9677  0154  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9678  0155  3070               	movlw	112
  9679  0156  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9680  0157  3004               	movlw	4
  9681  0158  00A9               	movwf	??_main^(0+128)
  9682  0159  0829               	movf	??_main^(0+128),w
  9683  015A  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9684  015B  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9685                           
  9686                           ;main.c: 683: DATAEE_WriteByte( 0x7000 + (9 * 8), 'a');
  9687  015E  3048               	movlw	72
  9688  015F  0021               	movlb	1	; select bank1
  9689  0160  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9690  0161  3070               	movlw	112
  9691  0162  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9692  0163  3061               	movlw	97
  9693  0164  00A9               	movwf	??_main^(0+128)
  9694  0165  0829               	movf	??_main^(0+128),w
  9695  0166  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9696  0167  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9697                           
  9698                           ;main.c: 684: DATAEE_WriteByte( 0x7000 + (10 * 8), 0);
  9699  016A  3050               	movlw	80
  9700  016B  0021               	movlb	1	; select bank1
  9701  016C  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9702  016D  3070               	movlw	112
  9703  016E  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9704  016F  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9705  0170  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9706                           
  9707                           ;main.c: 685: DATAEE_WriteByte( 0x7000 + (11 * 8), 0);
  9708  0173  3058               	movlw	88
  9709  0174  0021               	movlb	1	; select bank1
  9710  0175  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9711  0176  3070               	movlw	112
  9712  0177  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9713  0178  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9714  0179  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9715                           
  9716                           ;main.c: 686: DATAEE_WriteByte( 0x7000 + (12 * 8), 0);
  9717  017C  3060               	movlw	96
  9718  017D  0021               	movlb	1	; select bank1
  9719  017E  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9720  017F  3070               	movlw	112
  9721  0180  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9722  0181  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9723  0182  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9724                           
  9725                           ;main.c: 687: DATAEE_WriteByte( 0x7000 + (13 * 8), 174);
  9726  0185  3068               	movlw	104
  9727  0186  0021               	movlb	1	; select bank1
  9728  0187  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9729  0188  3070               	movlw	112
  9730  0189  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9731  018A  30AE               	movlw	174
  9732  018B  00A9               	movwf	??_main^(0+128)
  9733  018C  0829               	movf	??_main^(0+128),w
  9734  018D  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9735  018E  3189  21E2  3180   	fcall	_DATAEE_WriteByte
  9736  0191                     l5105:
  9737                           
  9738                           ;main.c: 688: };main.c: 690: NREG = DATAEE_ReadByte(0x7000 + (1*8));
  9739  0191  3008               	movlw	8
  9740  0192  0021               	movlb	1	; select bank1
  9741  0193  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9742  0194  3070               	movlw	112
  9743  0195  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9744  0196  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9745  0199  0021               	movlb	1	; select bank1
  9746  019A  00A9               	movwf	??_main^(0+128)
  9747  019B  0829               	movf	??_main^(0+128),w
  9748  019C  00C7               	movwf	_NREG^(0+128)
  9749  019D                     l5107:
  9750                           
  9751                           ;main.c: 691: PMON = DATAEE_ReadByte(0x7000 + (2*8));
  9752  019D  3010               	movlw	16
  9753  019E  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9754  019F  3070               	movlw	112
  9755  01A0  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9756  01A1  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9757  01A4  0021               	movlb	1	; select bank1
  9758  01A5  00A9               	movwf	??_main^(0+128)
  9759  01A6  0829               	movf	??_main^(0+128),w
  9760  01A7  00C6               	movwf	_PMON^(0+128)
  9761  01A8                     l5109:
  9762                           
  9763                           ;main.c: 692: TALA = DATAEE_ReadByte(0x7000 + (3*8));
  9764  01A8  3018               	movlw	24
  9765  01A9  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9766  01AA  3070               	movlw	112
  9767  01AB  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9768  01AC  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9769  01AF  0021               	movlb	1	; select bank1
  9770  01B0  00A9               	movwf	??_main^(0+128)
  9771  01B1  0829               	movf	??_main^(0+128),w
  9772  01B2  0020               	movlb	0	; select bank0
  9773  01B3  00E6               	movwf	_TALA
  9774  01B4                     l5111:
  9775                           
  9776                           ;main.c: 693: clkAlarm.alarmVal.h = DATAEE_ReadByte(0x7000 + (4*8));
  9777  01B4  3020               	movlw	32
  9778  01B5  0021               	movlb	1	; select bank1
  9779  01B6  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9780  01B7  3070               	movlw	112
  9781  01B8  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9782  01B9  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9783  01BC  0021               	movlb	1	; select bank1
  9784  01BD  00A9               	movwf	??_main^(0+128)
  9785  01BE  0829               	movf	??_main^(0+128),w
  9786  01BF  0020               	movlb	0	; select bank0
  9787  01C0  00CD               	movwf	_clkAlarm
  9788  01C1                     l5113:
  9789                           
  9790                           ;main.c: 694: clkAlarm.alarmVal.m = DATAEE_ReadByte(0x7000 + (5*8));
  9791  01C1  3028               	movlw	40
  9792  01C2  0021               	movlb	1	; select bank1
  9793  01C3  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9794  01C4  3070               	movlw	112
  9795  01C5  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9796  01C6  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9797  01C9  0021               	movlb	1	; select bank1
  9798  01CA  00A9               	movwf	??_main^(0+128)
  9799  01CB  0829               	movf	??_main^(0+128),w
  9800  01CC  0020               	movlb	0	; select bank0
  9801  01CD  00CE               	movwf	_clkAlarm+1
  9802  01CE                     l5115:
  9803                           
  9804                           ;main.c: 695: clkAlarm.alarmVal.s = DATAEE_ReadByte(0x7000 + (6*8));
  9805  01CE  3030               	movlw	48
  9806  01CF  0021               	movlb	1	; select bank1
  9807  01D0  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9808  01D1  3070               	movlw	112
  9809  01D2  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9810  01D3  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9811  01D6  0021               	movlb	1	; select bank1
  9812  01D7  00A9               	movwf	??_main^(0+128)
  9813  01D8  0829               	movf	??_main^(0+128),w
  9814  01D9  0020               	movlb	0	; select bank0
  9815  01DA  00CF               	movwf	_clkAlarm+2
  9816  01DB                     l5117:
  9817                           
  9818                           ;main.c: 696: tempAlarm.alarmTemp = DATAEE_ReadByte(0x7000 + (7*8));
  9819  01DB  3038               	movlw	56
  9820  01DC  0021               	movlb	1	; select bank1
  9821  01DD  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9822  01DE  3070               	movlw	112
  9823  01DF  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9824  01E0  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9825  01E3  0021               	movlb	1	; select bank1
  9826  01E4  00A9               	movwf	??_main^(0+128)
  9827  01E5  0829               	movf	??_main^(0+128),w
  9828  01E6  0020               	movlb	0	; select bank0
  9829  01E7  00D4               	movwf	_tempAlarm
  9830  01E8                     l5119:
  9831                           
  9832                           ;main.c: 697: lumAlarm.alarmLum = DATAEE_ReadByte(0x7000 + (8*8));
  9833  01E8  3040               	movlw	64
  9834  01E9  0021               	movlb	1	; select bank1
  9835  01EA  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9836  01EB  3070               	movlw	112
  9837  01EC  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9838  01ED  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9839  01F0  0021               	movlb	1	; select bank1
  9840  01F1  00A9               	movwf	??_main^(0+128)
  9841  01F2  0829               	movf	??_main^(0+128),w
  9842  01F3  0020               	movlb	0	; select bank0
  9843  01F4  00D1               	movwf	_lumAlarm
  9844  01F5                     l5121:
  9845                           
  9846                           ;main.c: 698: ALAF = DATAEE_ReadByte(0x7000 + (9*8));
  9847  01F5  3048               	movlw	72
  9848  01F6  0021               	movlb	1	; select bank1
  9849  01F7  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9850  01F8  3070               	movlw	112
  9851  01F9  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9852  01FA  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9853  01FD  0021               	movlb	1	; select bank1
  9854  01FE  00A9               	movwf	??_main^(0+128)
  9855  01FF  0829               	movf	??_main^(0+128),w
  9856  0200  0020               	movlb	0	; select bank0
  9857  0201  00E5               	movwf	_ALAF
  9858  0202                     l5123:
  9859                           
  9860                           ;main.c: 699: t.h = DATAEE_ReadByte(0x7000 + (10*8));
  9861  0202  3050               	movlw	80
  9862  0203  0021               	movlb	1	; select bank1
  9863  0204  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9864  0205  3070               	movlw	112
  9865  0206  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9866  0207  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9867  020A  0021               	movlb	1	; select bank1
  9868  020B  00A9               	movwf	??_main^(0+128)
  9869  020C  0829               	movf	??_main^(0+128),w
  9870  020D  0020               	movlb	0	; select bank0
  9871  020E  00D7               	movwf	_t
  9872  020F                     l5125:
  9873                           
  9874                           ;main.c: 700: t.m = DATAEE_ReadByte(0x7000 + (11*8));
  9875  020F  3058               	movlw	88
  9876  0210  0021               	movlb	1	; select bank1
  9877  0211  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9878  0212  3070               	movlw	112
  9879  0213  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9880  0214  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9881  0217  0021               	movlb	1	; select bank1
  9882  0218  00A9               	movwf	??_main^(0+128)
  9883  0219  0829               	movf	??_main^(0+128),w
  9884  021A  0020               	movlb	0	; select bank0
  9885  021B  00D8               	movwf	_t+1
  9886  021C                     l5127:
  9887                           
  9888                           ;main.c: 701: idx_RingBuffer = DATAEE_ReadByte(0x7000 + (12*8));
  9889  021C  3060               	movlw	96
  9890  021D  0021               	movlb	1	; select bank1
  9891  021E  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9892  021F  3070               	movlw	112
  9893  0220  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9894  0221  3188  200A  3180   	fcall	_DATAEE_ReadByte
  9895  0224  0021               	movlb	1	; select bank1
  9896  0225  00A9               	movwf	??_main^(0+128)
  9897  0226  0829               	movf	??_main^(0+128),w
  9898  0227  00C5               	movwf	_idx_RingBuffer^(0+128)
  9899  0228                     l5129:
  9900                           
  9901                           ;main.c: 705: tempAlarm.trigger = 0;
  9902  0228  0020               	movlb	0	; select bank0
  9903  0229  01D5               	clrf	_tempAlarm+1
  9904  022A                     l5131:
  9905                           
  9906                           ;main.c: 706: tempAlarm.triggered = 0;
  9907  022A  01D6               	clrf	_tempAlarm+2
  9908  022B                     l5133:
  9909                           
  9910                           ;main.c: 708: lumAlarm.trigger = 0;
  9911  022B  01D2               	clrf	_lumAlarm+1
  9912  022C                     l5135:
  9913                           
  9914                           ;main.c: 709: lumAlarm.triggered = 0;
  9915  022C  01D3               	clrf	_lumAlarm+2
  9916  022D                     l5137:
  9917                           
  9918                           ;main.c: 711: clkAlarm.trigger = 0;
  9919  022D  01D0               	clrf	_clkAlarm+3
  9920  022E                     l5139:
  9921                           
  9922                           ;main.c: 714: i2c1_driver_open();
  9923  022E  3197  27BE  3180   	fcall	_i2c1_driver_open
  9924  0231                     l5141:
  9925                           
  9926                           ;main.c: 715: TRISCbits.TRISC3 = 1;
  9927  0231  0020               	movlb	0	; select bank0
  9928  0232  1593               	bsf	19,3	;volatile
  9929  0233                     l5143:
  9930                           
  9931                           ;main.c: 716: TRISCbits.TRISC4 = 1;
  9932  0233  1613               	bsf	19,4	;volatile
  9933  0234                     l5145:
  9934                           
  9935                           ;main.c: 717: WPUC3 = 1;
  9936  0234  003E               	movlb	30	; select bank30
  9937  0235  15CF               	bsf	79,3	;volatile
  9938  0236                     l5147:
  9939                           
  9940                           ;main.c: 718: WPUC4 = 1;
  9941  0236  164F               	bsf	79,4	;volatile
  9942  0237                     l5149:
  9943                           
  9944                           ;main.c: 719: LCDinit();
  9945  0237  318C  24F6  3180   	fcall	_LCDinit
  9946  023A                     l5151:
  9947                           
  9948                           ;main.c: 722: (INTCONbits.GIE = 1);
  9949  023A  178B               	bsf	11,7	;volatile
  9950  023B                     l5153:
  9951                           
  9952                           ;main.c: 725: (INTCONbits.PEIE = 1);
  9953  023B  170B               	bsf	11,6	;volatile
  9954  023C  0063               	sleep	;# 
  9955  023D  2A52               	goto	l5163
  9956  023E                     l5155:
  9957  023E  0021               	movlb	1	; select bank1
  9958  023F  0844               	movf	_PWM_on^(0+128),w
  9959  0240  1903               	btfsc	3,2
  9960  0241  2A43               	goto	u4901
  9961  0242  2A44               	goto	u4900
  9962  0243                     u4901:
  9963  0243  2A45               	goto	l1342
  9964  0244                     u4900:
  9965  0244  2A52               	goto	l5163
  9966  0245                     l1342:
  9967  0245  0063               	sleep	;# 
  9968  0246                     l5161:
  9969                           
  9970                           ;main.c: 734: editClock();
  9971  0246  318C  2444  3180   	fcall	_editClock
  9972  0249                     l1346:	
  9973                           ;main.c: 735: case 2:
  9974                           
  9975                           
  9976                           ;main.c: 736: editTemp();
  9977  0249  318A  222D  3180   	fcall	_editTemp
  9978  024C                     l1347:	
  9979                           ;main.c: 737: case 3:
  9980                           
  9981                           
  9982                           ;main.c: 738: editLum();
  9983  024C  318A  2206  3180   	fcall	_editLum
  9984  024F                     l1348:	
  9985                           ;main.c: 739: case 4:
  9986                           
  9987                           
  9988                           ;main.c: 740: toggleAlarms();
  9989  024F  318A  2254  3180   	fcall	_toggleAlarms
  9990  0252                     l5163:	
  9991                           ;main.c: 741: }
  9992                           
  9993                           
  9994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9995                           ; Switch size 1, requested type "simple"
  9996                           ; Number of cases is 1, Range of values is 0 to 0
  9997                           ; switch strategies available:
  9998                           ; Name         Instructions Cycles
  9999                           ; simple_byte            4     3 (average)
 10000                           ; direct_byte            8     6 (fixed)
 10001                           ; jumptable            260     6 (fixed)
 10002                           ;	Chosen strategy is simple_byte
 10003  0252  0020               	movlb	0	; select bank0
 10004  0253  085B               	movf	_mode+1,w
 10005  0254  3A00               	xorlw	0	; case 0
 10006  0255  1903               	skipnz
 10007  0256  2A58               	goto	l5189
 10008  0257  2A52               	goto	l5163
 10009  0258                     l5189:
 10010                           
 10011                           ; Switch size 1, requested type "simple"
 10012                           ; Number of cases is 5, Range of values is 0 to 4
 10013                           ; switch strategies available:
 10014                           ; Name         Instructions Cycles
 10015                           ; direct_byte           16     6 (fixed)
 10016                           ; simple_byte           16     9 (average)
 10017                           ; jumptable            260     6 (fixed)
 10018                           ;	Chosen strategy is simple_byte
 10019  0258  085A               	movf	_mode,w
 10020  0259  3A00               	xorlw	0	; case 0
 10021  025A  1903               	skipnz
 10022  025B  2A3E               	goto	l5155
 10023  025C  3A01               	xorlw	1	; case 1
 10024  025D  1903               	skipnz
 10025  025E  2A46               	goto	l5161
 10026  025F  3A03               	xorlw	3	; case 2
 10027  0260  1903               	skipnz
 10028  0261  2A49               	goto	l1346
 10029  0262  3A01               	xorlw	1	; case 3
 10030  0263  1903               	skipnz
 10031  0264  2A4C               	goto	l1347
 10032  0265  3A07               	xorlw	7	; case 4
 10033  0266  1903               	skipnz
 10034  0267  2A4F               	goto	l1348
 10035  0268  2A52               	goto	l5163
 10036  0269  3180  284C         	ljmp	start
 10037  026B                     __end_of_main:
 10038                           
 10039                           	psect	text1
 10040  0A54                     __ptext1:	
 10041 ;; *************** function _toggleAlarms *****************
 10042 ;; Defined at:
 10043 ;;		line 596 in file "main.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;		None
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;		None
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1    wreg      void 
 10050 ;; Registers used:
 10051 ;;		wreg, status,2, status,0
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10059 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10060 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10061 ;;Total ram usage:        1 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:    7
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		_main
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           
 10072                           ;psect for function _toggleAlarms
 10073  0A54                     _toggleAlarms:
 10074  0A54                     l1310:	
 10075                           ;incstack = 0
 10076                           ; Regs used in _toggleAlarms: [wreg+status,2+status,0]
 10077                           ;main.c: 598: while(1){
 10078                           
 10079                           
 10080                           ;main.c: 606: if(PORTCbits.RC5 == 0){
 10081  0A54  0020               	movlb	0	; select bank0
 10082  0A55  1A8E               	btfsc	14,5	;volatile
 10083  0A56  2A58               	goto	u4701
 10084  0A57  2A59               	goto	u4700
 10085  0A58                     u4701:
 10086  0A58  2A75               	goto	l5017
 10087  0A59                     u4700:
 10088  0A59                     l5011:
 10089                           
 10090                           ;main.c: 607: if(ALAF == 'A'){
 10091  0A59  3041               	movlw	65
 10092  0A5A  0665               	xorwf	_ALAF,w
 10093  0A5B  1D03               	btfss	3,2
 10094  0A5C  2A5E               	goto	u4711
 10095  0A5D  2A5F               	goto	u4710
 10096  0A5E                     u4711:
 10097  0A5E  2A66               	goto	l5015
 10098  0A5F                     u4710:
 10099  0A5F                     l5013:
 10100                           
 10101                           ;main.c: 608: ALAF = 'a';
 10102  0A5F  3061               	movlw	97
 10103  0A60  0021               	movlb	1	; select bank1
 10104  0A61  00A0               	movwf	??_toggleAlarms^(0+128)
 10105  0A62  0820               	movf	??_toggleAlarms^(0+128),w
 10106  0A63  0020               	movlb	0	; select bank0
 10107  0A64  00E5               	movwf	_ALAF
 10108                           
 10109                           ;main.c: 609: } else {
 10110  0A65  2A6C               	goto	l1313
 10111  0A66                     l5015:
 10112                           
 10113                           ;main.c: 610: ALAF = 'A';
 10114  0A66  3041               	movlw	65
 10115  0A67  0021               	movlb	1	; select bank1
 10116  0A68  00A0               	movwf	??_toggleAlarms^(0+128)
 10117  0A69  0820               	movf	??_toggleAlarms^(0+128),w
 10118  0A6A  0020               	movlb	0	; select bank0
 10119  0A6B  00E5               	movwf	_ALAF
 10120  0A6C                     l1313:
 10121                           
 10122                           ;main.c: 611: };main.c: 612: _delay((unsigned long)((100)*(1000000/4000.0)));
 10123  0A6C  3021               	movlw	33
 10124  0A6D  0021               	movlb	1	; select bank1
 10125  0A6E  00A0               	movwf	??_toggleAlarms^(0+128)
 10126  0A6F  3076               	movlw	118
 10127  0A70                     u4917:
 10128  0A70  0B89               	decfsz	9,f
 10129  0A71  2A70               	goto	u4917
 10130  0A72  0BA0               	decfsz	??_toggleAlarms^(0+128),f
 10131  0A73  2A70               	goto	u4917
 10132  0A74  0000               	nop
 10133  0A75                     l5017:
 10134                           
 10135                           ;main.c: 613: };main.c: 614: if(mode != 4){
 10136  0A75  3004               	movlw	4
 10137  0A76  0020               	movlb	0	; select bank0
 10138  0A77  065A               	xorwf	_mode,w
 10139  0A78  045B               	iorwf	_mode+1,w
 10140  0A79  1903               	btfsc	3,2
 10141  0A7A  2A7C               	goto	u4721
 10142  0A7B  2A7D               	goto	u4720
 10143  0A7C                     u4721:
 10144  0A7C  2A54               	goto	l1310
 10145  0A7D                     u4720:
 10146  0A7D                     l5019:
 10147                           
 10148                           ;main.c: 615: mode = 0;
 10149  0A7D  01DA               	clrf	_mode
 10150  0A7E  01DB               	clrf	_mode+1
 10151  0A7F                     l1317:	
 10152                           ;main.c: 616: break;
 10153                           
 10154  0A7F  0008               	return
 10155  0A80                     __end_of_toggleAlarms:
 10156                           
 10157                           	psect	text2
 10158  17BE                     __ptext2:	
 10159 ;; *************** function _i2c1_driver_open *****************
 10160 ;; Defined at:
 10161 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;		None
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;		None
 10166 ;; Return value:  Size  Location     Type
 10167 ;;		None               void
 10168 ;; Registers used:
 10169 ;;		wreg, status,2
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10179 ;;Total ram usage:        0 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:    7
 10182 ;; This function calls:
 10183 ;;		Nothing
 10184 ;; This function is called by:
 10185 ;;		_main
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           
 10190                           ;psect for function _i2c1_driver_open
 10191  17BE                     _i2c1_driver_open:
 10192  17BE                     l4771:	
 10193                           ;incstack = 0
 10194                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 10195                           
 10196                           
 10197                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 10198  17BE  0023               	movlb	3	; select bank3
 10199  17BF  1A90               	btfsc	16,5	;volatile
 10200  17C0  2FC2               	goto	u4231
 10201  17C1  2FC3               	goto	u4230
 10202  17C2                     u4231:
 10203  17C2  2FC9               	goto	l243
 10204  17C3                     u4230:
 10205  17C3                     l4773:
 10206                           
 10207                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
 10208  17C3  018F               	clrf	15	;volatile
 10209  17C4                     l4775:
 10210                           
 10211                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 10212  17C4  3028               	movlw	40
 10213  17C5  0090               	movwf	16	;volatile
 10214  17C6                     l4777:
 10215                           
 10216                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 10217  17C6  0191               	clrf	17	;volatile
 10218                           
 10219                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 10220  17C7  3003               	movlw	3
 10221  17C8  008D               	movwf	13	;volatile
 10222  17C9                     l243:
 10223  17C9  0008               	return
 10224  17CA                     __end_of_i2c1_driver_open:
 10225                           
 10226                           	psect	text3
 10227  0A2D                     __ptext3:	
 10228 ;; *************** function _editTemp *****************
 10229 ;; Defined at:
 10230 ;;		line 544 in file "main.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;		None
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;		None
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  1    wreg      void 
 10237 ;; Registers used:
 10238 ;;		wreg, status,2, status,0
 10239 ;; Tracked objects:
 10240 ;;		On entry : 0/0
 10241 ;;		On exit  : 0/0
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10246 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10248 ;;Total ram usage:        1 bytes
 10249 ;; Hardware stack levels used:    1
 10250 ;; Hardware stack levels required when called:    7
 10251 ;; This function calls:
 10252 ;;		Nothing
 10253 ;; This function is called by:
 10254 ;;		_main
 10255 ;; This function uses a non-reentrant model
 10256 ;;
 10257                           
 10258                           
 10259                           ;psect for function _editTemp
 10260  0A2D                     _editTemp:
 10261  0A2D                     l4983:	
 10262                           ;incstack = 0
 10263                           ; Regs used in _editTemp: [wreg+status,2+status,0]
 10264                           
 10265                           
 10266                           ;main.c: 545: editingTempAlarm = 1;
 10267  0A2D  0020               	movlb	0	; select bank0
 10268  0A2E  01E1               	clrf	_editingTempAlarm
 10269  0A2F  0AE1               	incf	_editingTempAlarm,f
 10270  0A30                     l1292:	
 10271                           ;main.c: 547: while(1){
 10272                           
 10273                           
 10274                           ;main.c: 556: if(PORTCbits.RC5 == 0){
 10275  0A30  1A8E               	btfsc	14,5	;volatile
 10276  0A31  2A33               	goto	u4641
 10277  0A32  2A34               	goto	u4640
 10278  0A33                     u4641:
 10279  0A33  2A4A               	goto	l4993
 10280  0A34                     u4640:
 10281  0A34                     l4985:
 10282                           
 10283                           ;main.c: 557: tempAlarm.alarmTemp++;
 10284  0A34  3001               	movlw	1
 10285  0A35  0021               	movlb	1	; select bank1
 10286  0A36  00A0               	movwf	??_editTemp^(0+128)
 10287  0A37  0820               	movf	??_editTemp^(0+128),w
 10288  0A38  0020               	movlb	0	; select bank0
 10289  0A39  07D4               	addwf	_tempAlarm,f
 10290  0A3A                     l4987:
 10291                           
 10292                           ;main.c: 558: if(tempAlarm.alarmTemp > 50){
 10293  0A3A  3033               	movlw	51
 10294  0A3B  0254               	subwf	_tempAlarm,w
 10295  0A3C  1C03               	skipc
 10296  0A3D  2A3F               	goto	u4651
 10297  0A3E  2A40               	goto	u4650
 10298  0A3F                     u4651:
 10299  0A3F  2A41               	goto	l4991
 10300  0A40                     u4650:
 10301  0A40                     l4989:
 10302                           
 10303                           ;main.c: 559: tempAlarm.alarmTemp = 0;
 10304  0A40  01D4               	clrf	_tempAlarm
 10305  0A41                     l4991:
 10306                           
 10307                           ;main.c: 560: };main.c: 561: _delay((unsigned long)((100)*(1000000/4000.0)));
 10308  0A41  3021               	movlw	33
 10309  0A42  0021               	movlb	1	; select bank1
 10310  0A43  00A0               	movwf	??_editTemp^(0+128)
 10311  0A44  3076               	movlw	118
 10312  0A45                     u4927:
 10313  0A45  0B89               	decfsz	9,f
 10314  0A46  2A45               	goto	u4927
 10315  0A47  0BA0               	decfsz	??_editTemp^(0+128),f
 10316  0A48  2A45               	goto	u4927
 10317  0A49  0000               	nop
 10318  0A4A                     l4993:
 10319                           
 10320                           ;main.c: 562: };main.c: 563: if(mode != 2){
 10321  0A4A  3002               	movlw	2
 10322  0A4B  0020               	movlb	0	; select bank0
 10323  0A4C  065A               	xorwf	_mode,w
 10324  0A4D  045B               	iorwf	_mode+1,w
 10325  0A4E  1903               	btfsc	3,2
 10326  0A4F  2A51               	goto	u4661
 10327  0A50  2A52               	goto	u4660
 10328  0A51                     u4661:
 10329  0A51  2A30               	goto	l1292
 10330  0A52                     u4660:
 10331  0A52                     l4995:
 10332                           
 10333                           ;main.c: 564: editingTempAlarm = 0;
 10334  0A52  01E1               	clrf	_editingTempAlarm
 10335  0A53                     l1298:	
 10336                           ;main.c: 565: break;
 10337                           
 10338  0A53  0008               	return
 10339  0A54                     __end_of_editTemp:
 10340                           
 10341                           	psect	text4
 10342  0A06                     __ptext4:	
 10343 ;; *************** function _editLum *****************
 10344 ;; Defined at:
 10345 ;;		line 570 in file "main.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;		None
 10348 ;; Auto vars:     Size  Location     Type
 10349 ;;		None
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      void 
 10352 ;; Registers used:
 10353 ;;		wreg, status,2, status,0
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10362 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10363 ;;Total ram usage:        1 bytes
 10364 ;; Hardware stack levels used:    1
 10365 ;; Hardware stack levels required when called:    7
 10366 ;; This function calls:
 10367 ;;		Nothing
 10368 ;; This function is called by:
 10369 ;;		_main
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           
 10374                           ;psect for function _editLum
 10375  0A06                     _editLum:
 10376  0A06                     l4997:	
 10377                           ;incstack = 0
 10378                           ; Regs used in _editLum: [wreg+status,2+status,0]
 10379                           
 10380                           
 10381                           ;main.c: 571: editingLumAlarm = 1;
 10382  0A06  0020               	movlb	0	; select bank0
 10383  0A07  01E0               	clrf	_editingLumAlarm
 10384  0A08  0AE0               	incf	_editingLumAlarm,f
 10385  0A09                     l1301:	
 10386                           ;main.c: 573: while(1){
 10387                           
 10388                           
 10389                           ;main.c: 582: if(PORTCbits.RC5 == 0){
 10390  0A09  1A8E               	btfsc	14,5	;volatile
 10391  0A0A  2A0C               	goto	u4671
 10392  0A0B  2A0D               	goto	u4670
 10393  0A0C                     u4671:
 10394  0A0C  2A23               	goto	l5007
 10395  0A0D                     u4670:
 10396  0A0D                     l4999:
 10397                           
 10398                           ;main.c: 583: lumAlarm.alarmLum++;
 10399  0A0D  3001               	movlw	1
 10400  0A0E  0021               	movlb	1	; select bank1
 10401  0A0F  00A0               	movwf	??_editLum^(0+128)
 10402  0A10  0820               	movf	??_editLum^(0+128),w
 10403  0A11  0020               	movlb	0	; select bank0
 10404  0A12  07D1               	addwf	_lumAlarm,f
 10405  0A13                     l5001:
 10406                           
 10407                           ;main.c: 584: if(lumAlarm.alarmLum > 7){
 10408  0A13  3008               	movlw	8
 10409  0A14  0251               	subwf	_lumAlarm,w
 10410  0A15  1C03               	skipc
 10411  0A16  2A18               	goto	u4681
 10412  0A17  2A19               	goto	u4680
 10413  0A18                     u4681:
 10414  0A18  2A1A               	goto	l5005
 10415  0A19                     u4680:
 10416  0A19                     l5003:
 10417                           
 10418                           ;main.c: 585: lumAlarm.alarmLum = 0;
 10419  0A19  01D1               	clrf	_lumAlarm
 10420  0A1A                     l5005:
 10421                           
 10422                           ;main.c: 586: };main.c: 587: _delay((unsigned long)((100)*(1000000/4000.0)));
 10423  0A1A  3021               	movlw	33
 10424  0A1B  0021               	movlb	1	; select bank1
 10425  0A1C  00A0               	movwf	??_editLum^(0+128)
 10426  0A1D  3076               	movlw	118
 10427  0A1E                     u4937:
 10428  0A1E  0B89               	decfsz	9,f
 10429  0A1F  2A1E               	goto	u4937
 10430  0A20  0BA0               	decfsz	??_editLum^(0+128),f
 10431  0A21  2A1E               	goto	u4937
 10432  0A22  0000               	nop
 10433  0A23                     l5007:
 10434                           
 10435                           ;main.c: 588: };main.c: 589: if(mode != 3){
 10436  0A23  3003               	movlw	3
 10437  0A24  0020               	movlb	0	; select bank0
 10438  0A25  065A               	xorwf	_mode,w
 10439  0A26  045B               	iorwf	_mode+1,w
 10440  0A27  1903               	btfsc	3,2
 10441  0A28  2A2A               	goto	u4691
 10442  0A29  2A2B               	goto	u4690
 10443  0A2A                     u4691:
 10444  0A2A  2A09               	goto	l1301
 10445  0A2B                     u4690:
 10446  0A2B                     l5009:
 10447                           
 10448                           ;main.c: 590: editingLumAlarm = 0;
 10449  0A2B  01E0               	clrf	_editingLumAlarm
 10450  0A2C                     l1307:	
 10451                           ;main.c: 591: break;
 10452                           
 10453  0A2C  0008               	return
 10454  0A2D                     __end_of_editLum:
 10455                           
 10456                           	psect	text5
 10457  0C44                     __ptext5:	
 10458 ;; *************** function _editClock *****************
 10459 ;; Defined at:
 10460 ;;		line 501 in file "main.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;		None
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;		None
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1    wreg      void 
 10467 ;; Registers used:
 10468 ;;		wreg, status,2, status,0
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10478 ;;Total ram usage:        1 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:    7
 10481 ;; This function calls:
 10482 ;;		Nothing
 10483 ;; This function is called by:
 10484 ;;		_main
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           
 10489                           ;psect for function _editClock
 10490  0C44                     _editClock:
 10491  0C44                     l1273:	
 10492                           ;incstack = 0
 10493                           ; Regs used in _editClock: [wreg+status,2+status,0]
 10494                           ;main.c: 503: while(1){
 10495                           
 10496                           
 10497                           ;main.c: 515: if(PORTCbits.RC5 == 0){
 10498  0C44  0020               	movlb	0	; select bank0
 10499  0C45  1A8E               	btfsc	14,5	;volatile
 10500  0C46  2C48               	goto	u4561
 10501  0C47  2C49               	goto	u4560
 10502  0C48                     u4561:
 10503  0C48  2C92               	goto	l4979
 10504  0C49                     u4560:
 10505  0C49                     l4953:
 10506                           
 10507                           ;main.c: 516: if(editingClockAlarm == 1){
 10508  0C49  035C               	decf	_editingClockAlarm,w
 10509  0C4A  045D               	iorwf	_editingClockAlarm+1,w
 10510  0C4B  1D03               	btfss	3,2
 10511  0C4C  2C4E               	goto	u4571
 10512  0C4D  2C4F               	goto	u4570
 10513  0C4E                     u4571:
 10514  0C4E  2C5E               	goto	l4961
 10515  0C4F                     u4570:
 10516  0C4F                     l4955:
 10517                           
 10518                           ;main.c: 517: if(clkAlarm.alarmVal.h >= 23){
 10519  0C4F  3017               	movlw	23
 10520  0C50  024D               	subwf	_clkAlarm,w
 10521  0C51  1C03               	skipc
 10522  0C52  2C54               	goto	u4581
 10523  0C53  2C55               	goto	u4580
 10524  0C54                     u4581:
 10525  0C54  2C57               	goto	l4959
 10526  0C55                     u4580:
 10527  0C55                     l4957:
 10528                           
 10529                           ;main.c: 518: clkAlarm.alarmVal.h = 0;
 10530  0C55  01CD               	clrf	_clkAlarm
 10531                           
 10532                           ;main.c: 519: } else{
 10533  0C56  2C89               	goto	l4977
 10534  0C57                     l4959:
 10535                           
 10536                           ;main.c: 520: clkAlarm.alarmVal.h++;
 10537  0C57  3001               	movlw	1
 10538  0C58  0021               	movlb	1	; select bank1
 10539  0C59  00A0               	movwf	??_editClock^(0+128)
 10540  0C5A  0820               	movf	??_editClock^(0+128),w
 10541  0C5B  0020               	movlb	0	; select bank0
 10542  0C5C  07CD               	addwf	_clkAlarm,f
 10543  0C5D  2C89               	goto	l4977
 10544  0C5E                     l4961:
 10545  0C5E  3002               	movlw	2
 10546  0C5F  065C               	xorwf	_editingClockAlarm,w
 10547  0C60  045D               	iorwf	_editingClockAlarm+1,w
 10548  0C61  1D03               	btfss	3,2
 10549  0C62  2C64               	goto	u4591
 10550  0C63  2C65               	goto	u4590
 10551  0C64                     u4591:
 10552  0C64  2C74               	goto	l4969
 10553  0C65                     u4590:
 10554  0C65                     l4963:
 10555                           
 10556                           ;main.c: 523: if(clkAlarm.alarmVal.m == 59){
 10557  0C65  303B               	movlw	59
 10558  0C66  064E               	xorwf	_clkAlarm+1,w
 10559  0C67  1D03               	btfss	3,2
 10560  0C68  2C6A               	goto	u4601
 10561  0C69  2C6B               	goto	u4600
 10562  0C6A                     u4601:
 10563  0C6A  2C6D               	goto	l4967
 10564  0C6B                     u4600:
 10565  0C6B                     l4965:
 10566                           
 10567                           ;main.c: 524: clkAlarm.alarmVal.m = 0;
 10568  0C6B  01CE               	clrf	_clkAlarm+1
 10569                           
 10570                           ;main.c: 525: } else{
 10571  0C6C  2C89               	goto	l4977
 10572  0C6D                     l4967:
 10573                           
 10574                           ;main.c: 526: clkAlarm.alarmVal.m++;
 10575  0C6D  3001               	movlw	1
 10576  0C6E  0021               	movlb	1	; select bank1
 10577  0C6F  00A0               	movwf	??_editClock^(0+128)
 10578  0C70  0820               	movf	??_editClock^(0+128),w
 10579  0C71  0020               	movlb	0	; select bank0
 10580  0C72  07CE               	addwf	_clkAlarm+1,f
 10581  0C73  2C89               	goto	l4977
 10582  0C74                     l4969:
 10583  0C74  3003               	movlw	3
 10584  0C75  065C               	xorwf	_editingClockAlarm,w
 10585  0C76  045D               	iorwf	_editingClockAlarm+1,w
 10586  0C77  1D03               	btfss	3,2
 10587  0C78  2C7A               	goto	u4611
 10588  0C79  2C7B               	goto	u4610
 10589  0C7A                     u4611:
 10590  0C7A  2C89               	goto	l4977
 10591  0C7B                     u4610:
 10592  0C7B                     l4971:
 10593                           
 10594                           ;main.c: 529: if(clkAlarm.alarmVal.s == 59){
 10595  0C7B  303B               	movlw	59
 10596  0C7C  064F               	xorwf	_clkAlarm+2,w
 10597  0C7D  1D03               	btfss	3,2
 10598  0C7E  2C80               	goto	u4621
 10599  0C7F  2C81               	goto	u4620
 10600  0C80                     u4621:
 10601  0C80  2C83               	goto	l4975
 10602  0C81                     u4620:
 10603  0C81                     l4973:
 10604                           
 10605                           ;main.c: 530: clkAlarm.alarmVal.s = 0;
 10606  0C81  01CF               	clrf	_clkAlarm+2
 10607                           
 10608                           ;main.c: 531: } else{
 10609  0C82  2C89               	goto	l4977
 10610  0C83                     l4975:
 10611                           
 10612                           ;main.c: 532: clkAlarm.alarmVal.s++;
 10613  0C83  3001               	movlw	1
 10614  0C84  0021               	movlb	1	; select bank1
 10615  0C85  00A0               	movwf	??_editClock^(0+128)
 10616  0C86  0820               	movf	??_editClock^(0+128),w
 10617  0C87  0020               	movlb	0	; select bank0
 10618  0C88  07CF               	addwf	_clkAlarm+2,f
 10619  0C89                     l4977:
 10620                           
 10621                           ;main.c: 533: };main.c: 534: };main.c: 535: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
 10622  0C89  3021               	movlw	33
 10623  0C8A  0021               	movlb	1	; select bank1
 10624  0C8B  00A0               	movwf	??_editClock^(0+128)
 10625  0C8C  3076               	movlw	118
 10626  0C8D                     u4947:
 10627  0C8D  0B89               	decfsz	9,f
 10628  0C8E  2C8D               	goto	u4947
 10629  0C8F  0BA0               	decfsz	??_editClock^(0+128),f
 10630  0C90  2C8D               	goto	u4947
 10631  0C91  0000               	nop
 10632  0C92                     l4979:
 10633                           
 10634                           ;main.c: 536: };main.c: 537: if(mode != 1){
 10635  0C92  0020               	movlb	0	; select bank0
 10636  0C93  035A               	decf	_mode,w
 10637  0C94  045B               	iorwf	_mode+1,w
 10638  0C95  1903               	btfsc	3,2
 10639  0C96  2C98               	goto	u4631
 10640  0C97  2C99               	goto	u4630
 10641  0C98                     u4631:
 10642  0C98  2C44               	goto	l1273
 10643  0C99                     u4630:
 10644  0C99                     l4981:
 10645                           
 10646                           ;main.c: 538: editingClockAlarm = 0;
 10647  0C99  01DC               	clrf	_editingClockAlarm
 10648  0C9A  01DD               	clrf	_editingClockAlarm+1
 10649  0C9B                     l1289:	
 10650                           ;main.c: 539: break;
 10651                           
 10652  0C9B  0008               	return
 10653  0C9C                     __end_of_editClock:
 10654                           
 10655                           	psect	text6
 10656  1772                     __ptext6:	
 10657 ;; *************** function _TMR2_StopTimer *****************
 10658 ;; Defined at:
 10659 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 10660 ;; Parameters:    Size  Location     Type
 10661 ;;		None
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;		None
 10664 ;; Return value:  Size  Location     Type
 10665 ;;                  1    wreg      void 
 10666 ;; Registers used:
 10667 ;;		status,2, status,0, pclath, cstack
 10668 ;; Tracked objects:
 10669 ;;		On entry : 0/0
 10670 ;;		On exit  : 0/0
 10671 ;;		Unchanged: 0/0
 10672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10677 ;;Total ram usage:        0 bytes
 10678 ;; Hardware stack levels used:    1
 10679 ;; Hardware stack levels required when called:    8
 10680 ;; This function calls:
 10681 ;;		_TMR2_Stop
 10682 ;; This function is called by:
 10683 ;;		_main
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           
 10688                           ;psect for function _TMR2_StopTimer
 10689  1772                     _TMR2_StopTimer:
 10690  1772                     l4813:	
 10691                           ;incstack = 0
 10692                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 10693                           
 10694                           
 10695                           ;tmr2.c: 119: TMR2_Stop();
 10696  1772  3197  2767  3197   	fcall	_TMR2_Stop
 10697  1775                     l779:
 10698  1775  0008               	return
 10699  1776                     __end_of_TMR2_StopTimer:
 10700                           
 10701                           	psect	text7
 10702  1767                     __ptext7:	
 10703 ;; *************** function _TMR2_Stop *****************
 10704 ;; Defined at:
 10705 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 10706 ;; Parameters:    Size  Location     Type
 10707 ;;		None
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;		None
 10710 ;; Return value:  Size  Location     Type
 10711 ;;                  1    wreg      void 
 10712 ;; Registers used:
 10713 ;;		None
 10714 ;; Tracked objects:
 10715 ;;		On entry : 0/0
 10716 ;;		On exit  : 0/0
 10717 ;;		Unchanged: 0/0
 10718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;Total ram usage:        0 bytes
 10724 ;; Hardware stack levels used:    1
 10725 ;; Hardware stack levels required when called:    7
 10726 ;; This function calls:
 10727 ;;		Nothing
 10728 ;; This function is called by:
 10729 ;;		_TMR2_StopTimer
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733                           
 10734                           ;psect for function _TMR2_Stop
 10735  1767                     _TMR2_Stop:
 10736  1767                     l4467:	
 10737                           ;incstack = 0
 10738                           ; Regs used in _TMR2_Stop: []
 10739                           
 10740                           
 10741                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 10742  1767  0025               	movlb	5	; select bank5
 10743  1768  138E               	bcf	14,7	;volatile
 10744  1769                     l776:
 10745  1769  0008               	return
 10746  176A                     __end_of_TMR2_Stop:
 10747                           
 10748                           	psect	text8
 10749  09C3                     __ptext8:	
 10750 ;; *************** function _SYSTEM_Initialize *****************
 10751 ;; Defined at:
 10752 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;		None
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;		None
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  1    wreg      void 
 10759 ;; Registers used:
 10760 ;;		wreg, status,2, status,0, pclath, cstack
 10761 ;; Tracked objects:
 10762 ;;		On entry : 0/0
 10763 ;;		On exit  : 0/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10770 ;;Total ram usage:        0 bytes
 10771 ;; Hardware stack levels used:    1
 10772 ;; Hardware stack levels required when called:    9
 10773 ;; This function calls:
 10774 ;;		_ADCC_Initialize
 10775 ;;		_EXT_INT_Initialize
 10776 ;;		_OSCILLATOR_Initialize
 10777 ;;		_PIN_MANAGER_Initialize
 10778 ;;		_PMD_Initialize
 10779 ;;		_PWM6_Initialize
 10780 ;;		_TMR1_Initialize
 10781 ;;		_TMR2_Initialize
 10782 ;;		_TMR3_Initialize
 10783 ;;		_TMR5_Initialize
 10784 ;; This function is called by:
 10785 ;;		_main
 10786 ;; This function uses a non-reentrant model
 10787 ;;
 10788                           
 10789                           
 10790                           ;psect for function _SYSTEM_Initialize
 10791  09C3                     _SYSTEM_Initialize:
 10792  09C3                     l4751:	
 10793                           ;incstack = 0
 10794                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10795                           
 10796                           
 10797                           ;mcc.c: 52: PMD_Initialize();
 10798  09C3  3197  27B6  3189   	fcall	_PMD_Initialize
 10799  09C6                     l4753:
 10800                           
 10801                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 10802  09C6  318B  2324  3189   	fcall	_PIN_MANAGER_Initialize
 10803  09C9                     l4755:
 10804                           
 10805                           ;mcc.c: 54: OSCILLATOR_Initialize();
 10806  09C9  3188  2001  3189   	fcall	_OSCILLATOR_Initialize
 10807  09CC                     l4757:
 10808                           
 10809                           ;mcc.c: 55: PWM6_Initialize();
 10810  09CC  3197  27D7  3189   	fcall	_PWM6_Initialize
 10811  09CF                     l4759:
 10812                           
 10813                           ;mcc.c: 56: ADCC_Initialize();
 10814  09CF  3188  20DF  3189   	fcall	_ADCC_Initialize
 10815  09D2                     l4761:
 10816                           
 10817                           ;mcc.c: 57: TMR3_Initialize();
 10818  09D2  3189  2185  3189   	fcall	_TMR3_Initialize
 10819  09D5                     l4763:
 10820                           
 10821                           ;mcc.c: 58: TMR5_Initialize();
 10822  09D5  3189  21A4  3189   	fcall	_TMR5_Initialize
 10823  09D8                     l4765:
 10824                           
 10825                           ;mcc.c: 59: TMR2_Initialize();
 10826  09D8  3197  27F2  3189   	fcall	_TMR2_Initialize
 10827  09DB                     l4767:
 10828                           
 10829                           ;mcc.c: 60: EXT_INT_Initialize();
 10830  09DB  3197  27E4  3189   	fcall	_EXT_INT_Initialize
 10831  09DE                     l4769:
 10832                           
 10833                           ;mcc.c: 61: TMR1_Initialize();
 10834  09DE  3189  2166  3189   	fcall	_TMR1_Initialize
 10835  09E1                     l176:
 10836  09E1  0008               	return
 10837  09E2                     __end_of_SYSTEM_Initialize:
 10838                           
 10839                           	psect	text9
 10840  09A4                     __ptext9:	
 10841 ;; *************** function _TMR5_Initialize *****************
 10842 ;; Defined at:
 10843 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;		None
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;		None
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  1    wreg      void 
 10850 ;; Registers used:
 10851 ;;		wreg, status,2, status,0, pclath, cstack
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;Total ram usage:        0 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; Hardware stack levels required when called:    8
 10864 ;; This function calls:
 10865 ;;		_TMR5_SetInterruptHandler
 10866 ;; This function is called by:
 10867 ;;		_SYSTEM_Initialize
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           
 10872                           ;psect for function _TMR5_Initialize
 10873  09A4                     _TMR5_Initialize:
 10874  09A4                     l4371:	
 10875                           ;incstack = 0
 10876                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10877                           
 10878                           
 10879                           ;tmr5.c: 69: T5GCON = 0x00;
 10880  09A4  0024               	movlb	4	; select bank4
 10881  09A5  019B               	clrf	27	;volatile
 10882                           
 10883                           ;tmr5.c: 72: T5GATE = 0x00;
 10884  09A6  019C               	clrf	28	;volatile
 10885  09A7                     l4373:
 10886                           
 10887                           ;tmr5.c: 75: T5CLK = 0x04;
 10888  09A7  3004               	movlw	4
 10889  09A8  009D               	movwf	29	;volatile
 10890  09A9                     l4375:
 10891                           
 10892                           ;tmr5.c: 78: TMR5H = 0x4A;
 10893  09A9  304A               	movlw	74
 10894  09AA  0099               	movwf	25	;volatile
 10895  09AB                     l4377:
 10896                           
 10897                           ;tmr5.c: 81: TMR5L = 0x5C;
 10898  09AB  305C               	movlw	92
 10899  09AC  0098               	movwf	24	;volatile
 10900  09AD                     l4379:
 10901                           
 10902                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 10903  09AD  0819               	movf	25,w	;volatile
 10904  09AE  0021               	movlb	1	; select bank1
 10905  09AF  00B6               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 10906  09B0  0024               	movlb	4	; select bank4
 10907  09B1  0818               	movf	24,w	;volatile
 10908  09B2  0021               	movlb	1	; select bank1
 10909  09B3  00B5               	movwf	_timer5ReloadVal^(0+128)	;volatile
 10910  09B4                     l4381:
 10911                           
 10912                           ;tmr5.c: 87: PIR4bits.TMR5IF = 0;
 10913  09B4  002E               	movlb	14	; select bank14
 10914  09B5  1210               	bcf	16,4	;volatile
 10915  09B6                     l4383:
 10916                           
 10917                           ;tmr5.c: 90: PIE4bits.TMR5IE = 1;
 10918  09B6  161A               	bsf	26,4	;volatile
 10919  09B7                     l4385:
 10920                           
 10921                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 10922  09B7  3003               	movlw	low _TMR5_DefaultInterruptHandler
 10923  09B8  0021               	movlb	1	; select bank1
 10924  09B9  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
 10925  09BA  3000               	movlw	high _TMR5_DefaultInterruptHandler
 10926  09BB  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10927  09BC  3197  278E  3189   	fcall	_TMR5_SetInterruptHandler
 10928  09BF                     l4387:
 10929                           
 10930                           ;tmr5.c: 96: T5CON = 0x15;
 10931  09BF  3015               	movlw	21
 10932  09C0  0024               	movlb	4	; select bank4
 10933  09C1  009A               	movwf	26	;volatile
 10934  09C2                     l687:
 10935  09C2  0008               	return
 10936  09C3                     __end_of_TMR5_Initialize:
 10937                           
 10938                           	psect	text10
 10939  178E                     __ptext10:	
 10940 ;; *************** function _TMR5_SetInterruptHandler *****************
 10941 ;; Defined at:
 10942 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10945 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
 10946 ;; Auto vars:     Size  Location     Type
 10947 ;;		None
 10948 ;; Return value:  Size  Location     Type
 10949 ;;                  1    wreg      void 
 10950 ;; Registers used:
 10951 ;;		wreg
 10952 ;; Tracked objects:
 10953 ;;		On entry : 0/0
 10954 ;;		On exit  : 0/0
 10955 ;;		Unchanged: 0/0
 10956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10957 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;Total ram usage:        2 bytes
 10962 ;; Hardware stack levels used:    1
 10963 ;; Hardware stack levels required when called:    7
 10964 ;; This function calls:
 10965 ;;		Nothing
 10966 ;; This function is called by:
 10967 ;;		_TMR5_Initialize
 10968 ;;		_main
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972                           
 10973                           ;psect for function _TMR5_SetInterruptHandler
 10974  178E                     _TMR5_SetInterruptHandler:
 10975  178E                     l4049:	
 10976                           ;incstack = 0
 10977                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
 10978                           
 10979                           
 10980                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 10981  178E  0021               	movlb	1	; select bank1
 10982  178F  0821               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10983  1790  00B4               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
 10984  1791  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
 10985  1792  00B3               	movwf	_TMR5_InterruptHandler^(0+128)
 10986  1793                     l717:
 10987  1793  0008               	return
 10988  1794                     __end_of_TMR5_SetInterruptHandler:
 10989                           
 10990                           	psect	text11
 10991  0985                     __ptext11:	
 10992 ;; *************** function _TMR3_Initialize *****************
 10993 ;; Defined at:
 10994 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;		None
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;		None
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  1    wreg      void 
 11001 ;; Registers used:
 11002 ;;		wreg, status,2, status,0, pclath, cstack
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;Total ram usage:        0 bytes
 11013 ;; Hardware stack levels used:    1
 11014 ;; Hardware stack levels required when called:    8
 11015 ;; This function calls:
 11016 ;;		_TMR3_SetInterruptHandler
 11017 ;; This function is called by:
 11018 ;;		_SYSTEM_Initialize
 11019 ;; This function uses a non-reentrant model
 11020 ;;
 11021                           
 11022                           
 11023                           ;psect for function _TMR3_Initialize
 11024  0985                     _TMR3_Initialize:
 11025  0985                     l4353:	
 11026                           ;incstack = 0
 11027                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11028                           
 11029                           
 11030                           ;tmr3.c: 69: T3GCON = 0x00;
 11031  0985  0024               	movlb	4	; select bank4
 11032  0986  0195               	clrf	21	;volatile
 11033                           
 11034                           ;tmr3.c: 72: T3GATE = 0x00;
 11035  0987  0196               	clrf	22	;volatile
 11036  0988                     l4355:
 11037                           
 11038                           ;tmr3.c: 75: T3CLK = 0x04;
 11039  0988  3004               	movlw	4
 11040  0989  0097               	movwf	23	;volatile
 11041  098A                     l4357:
 11042                           
 11043                           ;tmr3.c: 78: TMR3H = 0xE7;
 11044  098A  30E7               	movlw	231
 11045  098B  0093               	movwf	19	;volatile
 11046  098C                     l4359:
 11047                           
 11048                           ;tmr3.c: 81: TMR3L = 0xC8;
 11049  098C  30C8               	movlw	200
 11050  098D  0092               	movwf	18	;volatile
 11051  098E                     l4361:
 11052                           
 11053                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 11054  098E  0813               	movf	19,w	;volatile
 11055  098F  0020               	movlb	0	; select bank0
 11056  0990  00EF               	movwf	_timer3ReloadVal+1	;volatile
 11057  0991  0024               	movlb	4	; select bank4
 11058  0992  0812               	movf	18,w	;volatile
 11059  0993  0020               	movlb	0	; select bank0
 11060  0994  00EE               	movwf	_timer3ReloadVal	;volatile
 11061  0995                     l4363:
 11062                           
 11063                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 11064  0995  002E               	movlb	14	; select bank14
 11065  0996  1110               	bcf	16,2	;volatile
 11066  0997                     l4365:
 11067                           
 11068                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 11069  0997  151A               	bsf	26,2	;volatile
 11070  0998                     l4367:
 11071                           
 11072                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 11073  0998  3002               	movlw	low _TMR3_DefaultInterruptHandler
 11074  0999  0021               	movlb	1	; select bank1
 11075  099A  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 11076  099B  3000               	movlw	high _TMR3_DefaultInterruptHandler
 11077  099C  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11078  099D  3197  2788  3189   	fcall	_TMR3_SetInterruptHandler
 11079  09A0                     l4369:
 11080                           
 11081                           ;tmr3.c: 96: T3CON = 0x05;
 11082  09A0  3005               	movlw	5
 11083  09A1  0024               	movlb	4	; select bank4
 11084  09A2  0094               	movwf	20	;volatile
 11085  09A3                     l463:
 11086  09A3  0008               	return
 11087  09A4                     __end_of_TMR3_Initialize:
 11088                           
 11089                           	psect	text12
 11090  1788                     __ptext12:	
 11091 ;; *************** function _TMR3_SetInterruptHandler *****************
 11092 ;; Defined at:
 11093 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 11094 ;; Parameters:    Size  Location     Type
 11095 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11096 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;		None
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  1    wreg      void 
 11101 ;; Registers used:
 11102 ;;		wreg
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11108 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;Total ram usage:        2 bytes
 11113 ;; Hardware stack levels used:    1
 11114 ;; Hardware stack levels required when called:    7
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		_TMR3_Initialize
 11119 ;;		_main
 11120 ;; This function uses a non-reentrant model
 11121 ;;
 11122                           
 11123                           
 11124                           ;psect for function _TMR3_SetInterruptHandler
 11125  1788                     _TMR3_SetInterruptHandler:
 11126  1788                     l4033:	
 11127                           ;incstack = 0
 11128                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 11129                           
 11130                           
 11131                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 11132  1788  0021               	movlb	1	; select bank1
 11133  1789  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11134  178A  00B8               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 11135  178B  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 11136  178C  00B7               	movwf	_TMR3_InterruptHandler^(0+128)
 11137  178D                     l493:
 11138  178D  0008               	return
 11139  178E                     __end_of_TMR3_SetInterruptHandler:
 11140                           
 11141                           	psect	text13
 11142  17F2                     __ptext13:	
 11143 ;; *************** function _TMR2_Initialize *****************
 11144 ;; Defined at:
 11145 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11146 ;; Parameters:    Size  Location     Type
 11147 ;;		None
 11148 ;; Auto vars:     Size  Location     Type
 11149 ;;		None
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  1    wreg      void 
 11152 ;; Registers used:
 11153 ;;		wreg, status,2
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/0
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;Total ram usage:        0 bytes
 11164 ;; Hardware stack levels used:    1
 11165 ;; Hardware stack levels required when called:    7
 11166 ;; This function calls:
 11167 ;;		Nothing
 11168 ;; This function is called by:
 11169 ;;		_SYSTEM_Initialize
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           
 11174                           ;psect for function _TMR2_Initialize
 11175  17F2                     _TMR2_Initialize:
 11176  17F2                     l4389:	
 11177                           ;incstack = 0
 11178                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11179                           
 11180                           
 11181                           ;tmr2.c: 67: T2CLKCON = 0x01;
 11182  17F2  3001               	movlw	1
 11183  17F3  0025               	movlb	5	; select bank5
 11184  17F4  0090               	movwf	16	;volatile
 11185  17F5                     l4391:
 11186                           
 11187                           ;tmr2.c: 70: T2HLT = 0x00;
 11188  17F5  018F               	clrf	15	;volatile
 11189  17F6                     l4393:
 11190                           
 11191                           ;tmr2.c: 73: T2RST = 0x00;
 11192  17F6  0191               	clrf	17	;volatile
 11193                           
 11194                           ;tmr2.c: 76: T2PR = 0xFF;
 11195  17F7  30FF               	movlw	255
 11196  17F8  008D               	movwf	13	;volatile
 11197  17F9                     l4395:
 11198                           
 11199                           ;tmr2.c: 79: T2TMR = 0x00;
 11200  17F9  018C               	clrf	12	;volatile
 11201  17FA                     l4397:
 11202                           
 11203                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 11204  17FA  002E               	movlb	14	; select bank14
 11205  17FB  1090               	bcf	16,1	;volatile
 11206  17FC                     l4399:
 11207                           
 11208                           ;tmr2.c: 85: T2CON = 0x80;
 11209  17FC  3080               	movlw	128
 11210  17FD  0025               	movlb	5	; select bank5
 11211  17FE  008E               	movwf	14	;volatile
 11212  17FF                     l761:
 11213  17FF  0008               	return
 11214  1800                     __end_of_TMR2_Initialize:
 11215                           
 11216                           	psect	text14
 11217  0966                     __ptext14:	
 11218 ;; *************** function _TMR1_Initialize *****************
 11219 ;; Defined at:
 11220 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 11221 ;; Parameters:    Size  Location     Type
 11222 ;;		None
 11223 ;; Auto vars:     Size  Location     Type
 11224 ;;		None
 11225 ;; Return value:  Size  Location     Type
 11226 ;;                  1    wreg      void 
 11227 ;; Registers used:
 11228 ;;		wreg, status,2, status,0, pclath, cstack
 11229 ;; Tracked objects:
 11230 ;;		On entry : 0/0
 11231 ;;		On exit  : 0/0
 11232 ;;		Unchanged: 0/0
 11233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11238 ;;Total ram usage:        0 bytes
 11239 ;; Hardware stack levels used:    1
 11240 ;; Hardware stack levels required when called:    8
 11241 ;; This function calls:
 11242 ;;		_TMR1_SetInterruptHandler
 11243 ;; This function is called by:
 11244 ;;		_SYSTEM_Initialize
 11245 ;; This function uses a non-reentrant model
 11246 ;;
 11247                           
 11248                           
 11249                           ;psect for function _TMR1_Initialize
 11250  0966                     _TMR1_Initialize:
 11251  0966                     l4407:	
 11252                           ;incstack = 0
 11253                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11254                           
 11255                           
 11256                           ;tmr1.c: 69: T1GCON = 0x00;
 11257  0966  0024               	movlb	4	; select bank4
 11258  0967  018F               	clrf	15	;volatile
 11259                           
 11260                           ;tmr1.c: 72: T1GATE = 0x00;
 11261  0968  0190               	clrf	16	;volatile
 11262  0969                     l4409:
 11263                           
 11264                           ;tmr1.c: 75: T1CLK = 0x04;
 11265  0969  3004               	movlw	4
 11266  096A  0091               	movwf	17	;volatile
 11267  096B                     l4411:
 11268                           
 11269                           ;tmr1.c: 78: TMR1H = 0x86;
 11270  096B  3086               	movlw	134
 11271  096C  008D               	movwf	13	;volatile
 11272  096D                     l4413:
 11273                           
 11274                           ;tmr1.c: 81: TMR1L = 0xE8;
 11275  096D  30E8               	movlw	232
 11276  096E  008C               	movwf	12	;volatile
 11277  096F                     l4415:
 11278                           
 11279                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 11280  096F  080D               	movf	13,w	;volatile
 11281  0970  0021               	movlb	1	; select bank1
 11282  0971  00BC               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 11283  0972  0024               	movlb	4	; select bank4
 11284  0973  080C               	movf	12,w	;volatile
 11285  0974  0021               	movlb	1	; select bank1
 11286  0975  00BB               	movwf	_timer1ReloadVal^(0+128)	;volatile
 11287  0976                     l4417:
 11288                           
 11289                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 11290  0976  002E               	movlb	14	; select bank14
 11291  0977  1010               	bcf	16,0	;volatile
 11292  0978                     l4419:
 11293                           
 11294                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 11295  0978  141A               	bsf	26,0	;volatile
 11296  0979                     l4421:
 11297                           
 11298                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 11299  0979  3000               	movlw	low _TMR1_DefaultInterruptHandler
 11300  097A  0021               	movlb	1	; select bank1
 11301  097B  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 11302  097C  3008               	movlw	high _TMR1_DefaultInterruptHandler
 11303  097D  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11304  097E  3197  2782  3189   	fcall	_TMR1_SetInterruptHandler
 11305  0981                     l4423:
 11306                           
 11307                           ;tmr1.c: 96: T1CON = 0x05;
 11308  0981  3005               	movlw	5
 11309  0982  0024               	movlb	4	; select bank4
 11310  0983  008E               	movwf	14	;volatile
 11311  0984                     l399:
 11312  0984  0008               	return
 11313  0985                     __end_of_TMR1_Initialize:
 11314                           
 11315                           	psect	text15
 11316  1782                     __ptext15:	
 11317 ;; *************** function _TMR1_SetInterruptHandler *****************
 11318 ;; Defined at:
 11319 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11322 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;		None
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  1    wreg      void 
 11327 ;; Registers used:
 11328 ;;		wreg
 11329 ;; Tracked objects:
 11330 ;;		On entry : 0/0
 11331 ;;		On exit  : 0/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11334 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11338 ;;Total ram usage:        2 bytes
 11339 ;; Hardware stack levels used:    1
 11340 ;; Hardware stack levels required when called:    7
 11341 ;; This function calls:
 11342 ;;		Nothing
 11343 ;; This function is called by:
 11344 ;;		_TMR1_Initialize
 11345 ;;		_main
 11346 ;; This function uses a non-reentrant model
 11347 ;;
 11348                           
 11349                           
 11350                           ;psect for function _TMR1_SetInterruptHandler
 11351  1782                     _TMR1_SetInterruptHandler:
 11352  1782                     l4031:	
 11353                           ;incstack = 0
 11354                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 11355                           
 11356                           
 11357                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 11358  1782  0021               	movlb	1	; select bank1
 11359  1783  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11360  1784  00BA               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 11361  1785  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
 11362  1786  00B9               	movwf	_TMR1_InterruptHandler^(0+128)
 11363  1787                     l429:
 11364  1787  0008               	return
 11365  1788                     __end_of_TMR1_SetInterruptHandler:
 11366                           
 11367                           	psect	text16
 11368  17D7                     __ptext16:	
 11369 ;; *************** function _PWM6_Initialize *****************
 11370 ;; Defined at:
 11371 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;		None
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  1    wreg      void 
 11378 ;; Registers used:
 11379 ;;		wreg, status,2, status,0
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11389 ;;Total ram usage:        0 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; Hardware stack levels required when called:    7
 11392 ;; This function calls:
 11393 ;;		Nothing
 11394 ;; This function is called by:
 11395 ;;		_SYSTEM_Initialize
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           
 11400                           ;psect for function _PWM6_Initialize
 11401  17D7                     _PWM6_Initialize:
 11402  17D7                     l4343:	
 11403                           ;incstack = 0
 11404                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 11405                           
 11406                           
 11407                           ;pwm6.c: 62: PWM6CON = 0x80;
 11408  17D7  3080               	movlw	128
 11409  17D8  0027               	movlb	7	; select bank7
 11410  17D9  008E               	movwf	14	;volatile
 11411                           
 11412                           ;pwm6.c: 65: PWM6DCH = 0xFF;
 11413  17DA  30FF               	movlw	255
 11414  17DB  008D               	movwf	13	;volatile
 11415                           
 11416                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 11417  17DC  30C0               	movlw	192
 11418  17DD  008C               	movwf	12	;volatile
 11419  17DE                     l4345:
 11420                           
 11421                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 11422  17DE  0024               	movlb	4	; select bank4
 11423  17DF  081F               	movf	31,w	;volatile
 11424  17E0  39F3               	andlw	-13
 11425  17E1  3804               	iorlw	4
 11426  17E2  009F               	movwf	31	;volatile
 11427  17E3                     l731:
 11428  17E3  0008               	return
 11429  17E4                     __end_of_PWM6_Initialize:
 11430                           
 11431                           	psect	text17
 11432  17B6                     __ptext17:	
 11433 ;; *************** function _PMD_Initialize *****************
 11434 ;; Defined at:
 11435 ;;		line 78 in file "mcc_generated_files/mcc.c"
 11436 ;; Parameters:    Size  Location     Type
 11437 ;;		None
 11438 ;; Auto vars:     Size  Location     Type
 11439 ;;		None
 11440 ;; Return value:  Size  Location     Type
 11441 ;;                  1    wreg      void 
 11442 ;; Registers used:
 11443 ;;		status,2
 11444 ;; Tracked objects:
 11445 ;;		On entry : 0/0
 11446 ;;		On exit  : 0/0
 11447 ;;		Unchanged: 0/0
 11448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11453 ;;Total ram usage:        0 bytes
 11454 ;; Hardware stack levels used:    1
 11455 ;; Hardware stack levels required when called:    7
 11456 ;; This function calls:
 11457 ;;		Nothing
 11458 ;; This function is called by:
 11459 ;;		_SYSTEM_Initialize
 11460 ;; This function uses a non-reentrant model
 11461 ;;
 11462                           
 11463                           
 11464                           ;psect for function _PMD_Initialize
 11465  17B6                     _PMD_Initialize:
 11466  17B6                     l4333:	
 11467                           ;incstack = 0
 11468                           ; Regs used in _PMD_Initialize: [status,2]
 11469                           
 11470                           
 11471                           ;mcc.c: 81: PMD0 = 0x00;
 11472  17B6  002F               	movlb	15	; select bank15
 11473  17B7  0196               	clrf	22	;volatile
 11474                           
 11475                           ;mcc.c: 83: PMD1 = 0x00;
 11476  17B8  0197               	clrf	23	;volatile
 11477                           
 11478                           ;mcc.c: 85: PMD2 = 0x00;
 11479  17B9  0198               	clrf	24	;volatile
 11480                           
 11481                           ;mcc.c: 87: PMD3 = 0x00;
 11482  17BA  0199               	clrf	25	;volatile
 11483                           
 11484                           ;mcc.c: 89: PMD4 = 0x00;
 11485  17BB  019A               	clrf	26	;volatile
 11486                           
 11487                           ;mcc.c: 91: PMD5 = 0x00;
 11488  17BC  019B               	clrf	27	;volatile
 11489  17BD                     l182:
 11490  17BD  0008               	return
 11491  17BE                     __end_of_PMD_Initialize:
 11492                           
 11493                           	psect	text18
 11494  0B24                     __ptext18:	
 11495 ;; *************** function _PIN_MANAGER_Initialize *****************
 11496 ;; Defined at:
 11497 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;		None
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;		None
 11502 ;; Return value:  Size  Location     Type
 11503 ;;                  1    wreg      void 
 11504 ;; Registers used:
 11505 ;;		wreg, status,2
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/0
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11515 ;;Total ram usage:        0 bytes
 11516 ;; Hardware stack levels used:    1
 11517 ;; Hardware stack levels required when called:    7
 11518 ;; This function calls:
 11519 ;;		Nothing
 11520 ;; This function is called by:
 11521 ;;		_SYSTEM_Initialize
 11522 ;; This function uses a non-reentrant model
 11523 ;;
 11524                           
 11525                           
 11526                           ;psect for function _PIN_MANAGER_Initialize
 11527  0B24                     _PIN_MANAGER_Initialize:
 11528  0B24                     l4289:	
 11529                           ;incstack = 0
 11530                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11531                           
 11532                           
 11533                           ;pin_manager.c: 62: LATE = 0x00;
 11534  0B24  0020               	movlb	0	; select bank0
 11535  0B25  019A               	clrf	26	;volatile
 11536                           
 11537                           ;pin_manager.c: 63: LATD = 0x00;
 11538  0B26  0199               	clrf	25	;volatile
 11539                           
 11540                           ;pin_manager.c: 64: LATA = 0x00;
 11541  0B27  0196               	clrf	22	;volatile
 11542                           
 11543                           ;pin_manager.c: 65: LATB = 0x00;
 11544  0B28  0197               	clrf	23	;volatile
 11545                           
 11546                           ;pin_manager.c: 66: LATC = 0x00;
 11547  0B29  0198               	clrf	24	;volatile
 11548  0B2A                     l4291:
 11549                           
 11550                           ;pin_manager.c: 71: TRISE = 0x07;
 11551  0B2A  3007               	movlw	7
 11552  0B2B  0095               	movwf	21	;volatile
 11553  0B2C                     l4293:
 11554                           
 11555                           ;pin_manager.c: 72: TRISA = 0x0F;
 11556  0B2C  300F               	movlw	15
 11557  0B2D  0091               	movwf	17	;volatile
 11558  0B2E                     l4295:
 11559                           
 11560                           ;pin_manager.c: 73: TRISB = 0xFF;
 11561  0B2E  30FF               	movlw	255
 11562  0B2F  0092               	movwf	18	;volatile
 11563  0B30                     l4297:
 11564                           
 11565                           ;pin_manager.c: 74: TRISC = 0xFF;
 11566  0B30  30FF               	movlw	255
 11567  0B31  0093               	movwf	19	;volatile
 11568  0B32                     l4299:
 11569                           
 11570                           ;pin_manager.c: 75: TRISD = 0xFF;
 11571  0B32  30FF               	movlw	255
 11572  0B33  0094               	movwf	20	;volatile
 11573  0B34                     l4301:
 11574                           
 11575                           ;pin_manager.c: 80: ANSELD = 0xFF;
 11576  0B34  30FF               	movlw	255
 11577  0B35  003E               	movlb	30	; select bank30
 11578  0B36  00D9               	movwf	89	;volatile
 11579  0B37                     l4303:
 11580                           
 11581                           ;pin_manager.c: 81: ANSELC = 0xC7;
 11582  0B37  30C7               	movlw	199
 11583  0B38  00CE               	movwf	78	;volatile
 11584  0B39                     l4305:
 11585                           
 11586                           ;pin_manager.c: 82: ANSELB = 0xEF;
 11587  0B39  30EF               	movlw	239
 11588  0B3A  00C3               	movwf	67	;volatile
 11589  0B3B                     l4307:
 11590                           
 11591                           ;pin_manager.c: 83: ANSELE = 0x07;
 11592  0B3B  3007               	movlw	7
 11593  0B3C  00E4               	movwf	100	;volatile
 11594  0B3D                     l4309:
 11595                           
 11596                           ;pin_manager.c: 84: ANSELA = 0x4F;
 11597  0B3D  304F               	movlw	79
 11598  0B3E  00B8               	movwf	56	;volatile
 11599                           
 11600                           ;pin_manager.c: 89: WPUD = 0x00;
 11601  0B3F  01DA               	clrf	90	;volatile
 11602                           
 11603                           ;pin_manager.c: 90: WPUE = 0x00;
 11604  0B40  01E5               	clrf	101	;volatile
 11605                           
 11606                           ;pin_manager.c: 91: WPUB = 0x00;
 11607  0B41  01C4               	clrf	68	;volatile
 11608                           
 11609                           ;pin_manager.c: 92: WPUA = 0x00;
 11610  0B42  01B9               	clrf	57	;volatile
 11611                           
 11612                           ;pin_manager.c: 93: WPUC = 0x00;
 11613  0B43  01CF               	clrf	79	;volatile
 11614                           
 11615                           ;pin_manager.c: 98: ODCONE = 0x00;
 11616  0B44  01E6               	clrf	102	;volatile
 11617                           
 11618                           ;pin_manager.c: 99: ODCONA = 0x00;
 11619  0B45  01BA               	clrf	58	;volatile
 11620                           
 11621                           ;pin_manager.c: 100: ODCONB = 0x00;
 11622  0B46  01C5               	clrf	69	;volatile
 11623                           
 11624                           ;pin_manager.c: 101: ODCONC = 0x00;
 11625  0B47  01D0               	clrf	80	;volatile
 11626                           
 11627                           ;pin_manager.c: 102: ODCOND = 0x00;
 11628  0B48  01DB               	clrf	91	;volatile
 11629  0B49                     l4311:
 11630                           
 11631                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 11632  0B49  30FF               	movlw	255
 11633  0B4A  00BB               	movwf	59	;volatile
 11634  0B4B                     l4313:
 11635                           
 11636                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 11637  0B4B  30FF               	movlw	255
 11638  0B4C  00C6               	movwf	70	;volatile
 11639  0B4D                     l4315:
 11640                           
 11641                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 11642  0B4D  30FF               	movlw	255
 11643  0B4E  00D1               	movwf	81	;volatile
 11644  0B4F                     l4317:
 11645                           
 11646                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 11647  0B4F  30FF               	movlw	255
 11648  0B50  00DC               	movwf	92	;volatile
 11649  0B51                     l4319:
 11650                           
 11651                           ;pin_manager.c: 111: SLRCONE = 0x07;
 11652  0B51  3007               	movlw	7
 11653  0B52  00E7               	movwf	103	;volatile
 11654  0B53                     l4321:
 11655                           
 11656                           ;pin_manager.c: 120: INTPPS = 0x0C;
 11657  0B53  300C               	movlw	12
 11658  0B54  003D               	movlb	29	; select bank29
 11659  0B55  0090               	movwf	16	;volatile
 11660  0B56                     l4323:
 11661                           
 11662                           ;pin_manager.c: 121: SSP1CLKPPS = 0x13;
 11663  0B56  3013               	movlw	19
 11664  0B57  00C5               	movwf	69	;volatile
 11665  0B58                     l4325:
 11666                           
 11667                           ;pin_manager.c: 122: RC3PPS = 0x14;
 11668  0B58  3014               	movlw	20
 11669  0B59  003E               	movlb	30	; select bank30
 11670  0B5A  00A3               	movwf	35	;volatile
 11671  0B5B                     l4327:
 11672                           
 11673                           ;pin_manager.c: 123: RC4PPS = 0x15;
 11674  0B5B  3015               	movlw	21
 11675  0B5C  00A4               	movwf	36	;volatile
 11676  0B5D                     l4329:
 11677                           
 11678                           ;pin_manager.c: 124: RA6PPS = 0x0E;
 11679  0B5D  300E               	movlw	14
 11680  0B5E  0096               	movwf	22	;volatile
 11681  0B5F                     l4331:
 11682                           
 11683                           ;pin_manager.c: 125: SSP1DATPPS = 0x14;
 11684  0B5F  3014               	movlw	20
 11685  0B60  003D               	movlb	29	; select bank29
 11686  0B61  00C6               	movwf	70	;volatile
 11687  0B62                     l124:
 11688  0B62  0008               	return
 11689  0B63                     __end_of_PIN_MANAGER_Initialize:
 11690                           
 11691                           	psect	text19
 11692  0801                     __ptext19:	
 11693 ;; *************** function _OSCILLATOR_Initialize *****************
 11694 ;; Defined at:
 11695 ;;		line 64 in file "mcc_generated_files/mcc.c"
 11696 ;; Parameters:    Size  Location     Type
 11697 ;;		None
 11698 ;; Auto vars:     Size  Location     Type
 11699 ;;		None
 11700 ;; Return value:  Size  Location     Type
 11701 ;;                  1    wreg      void 
 11702 ;; Registers used:
 11703 ;;		wreg, status,2
 11704 ;; Tracked objects:
 11705 ;;		On entry : 0/0
 11706 ;;		On exit  : 0/0
 11707 ;;		Unchanged: 0/0
 11708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11713 ;;Total ram usage:        0 bytes
 11714 ;; Hardware stack levels used:    1
 11715 ;; Hardware stack levels required when called:    7
 11716 ;; This function calls:
 11717 ;;		Nothing
 11718 ;; This function is called by:
 11719 ;;		_SYSTEM_Initialize
 11720 ;; This function uses a non-reentrant model
 11721 ;;
 11722                           
 11723                           
 11724                           ;psect for function _OSCILLATOR_Initialize
 11725  0801                     _OSCILLATOR_Initialize:
 11726  0801                     l4335:	
 11727                           ;incstack = 0
 11728                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11729                           
 11730                           
 11731                           ;mcc.c: 67: OSCCON1 = 0x62;
 11732  0801  3062               	movlw	98
 11733  0802  0031               	movlb	17	; select bank17
 11734  0803  008D               	movwf	13	;volatile
 11735  0804                     l4337:
 11736                           
 11737                           ;mcc.c: 69: OSCCON3 = 0x00;
 11738  0804  018F               	clrf	15	;volatile
 11739  0805                     l4339:
 11740                           
 11741                           ;mcc.c: 71: OSCEN = 0x00;
 11742  0805  0191               	clrf	17	;volatile
 11743                           
 11744                           ;mcc.c: 73: OSCFRQ = 0x02;
 11745  0806  3002               	movlw	2
 11746  0807  0093               	movwf	19	;volatile
 11747  0808                     l4341:
 11748                           
 11749                           ;mcc.c: 75: OSCTUNE = 0x00;
 11750  0808  0192               	clrf	18	;volatile
 11751  0809                     l179:
 11752  0809  0008               	return
 11753  080A                     __end_of_OSCILLATOR_Initialize:
 11754                           
 11755                           	psect	text20
 11756  17E4                     __ptext20:	
 11757 ;; *************** function _EXT_INT_Initialize *****************
 11758 ;; Defined at:
 11759 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;		None
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;		None
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  1    wreg      void 
 11766 ;; Registers used:
 11767 ;;		wreg, status,2, status,0, pclath, cstack
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11777 ;;Total ram usage:        0 bytes
 11778 ;; Hardware stack levels used:    1
 11779 ;; Hardware stack levels required when called:    8
 11780 ;; This function calls:
 11781 ;;		_INT_SetInterruptHandler
 11782 ;; This function is called by:
 11783 ;;		_SYSTEM_Initialize
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787                           
 11788                           ;psect for function _EXT_INT_Initialize
 11789  17E4                     _EXT_INT_Initialize:
 11790  17E4                     l4401:	
 11791                           ;incstack = 0
 11792                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11793                           
 11794                           
 11795                           ;ext_int.c: 64: (PIR0bits.INTF = 0);
 11796  17E4  002E               	movlb	14	; select bank14
 11797  17E5  100C               	bcf	12,0	;volatile
 11798                           
 11799                           ;ext_int.c: 65: (INTCONbits.INTEDG = 0);
 11800  17E6  100B               	bcf	11,0	;volatile
 11801  17E7                     l4403:
 11802                           
 11803                           ;ext_int.c: 67: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
 11804  17E7  3057               	movlw	low _INT_DefaultInterruptHandler
 11805  17E8  0021               	movlb	1	; select bank1
 11806  17E9  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 11807  17EA  3017               	movlw	high _INT_DefaultInterruptHandler
 11808  17EB  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11809  17EC  3197  277C  3197   	fcall	_INT_SetInterruptHandler
 11810  17EF                     l4405:
 11811                           
 11812                           ;ext_int.c: 68: (PIE0bits.INTE = 1);
 11813  17EF  002E               	movlb	14	; select bank14
 11814  17F0  1416               	bsf	22,0	;volatile
 11815  17F1                     l1377:
 11816  17F1  0008               	return
 11817  17F2                     __end_of_EXT_INT_Initialize:
 11818                           
 11819                           	psect	text21
 11820  177C                     __ptext21:	
 11821 ;; *************** function _INT_SetInterruptHandler *****************
 11822 ;; Defined at:
 11823 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 11824 ;; Parameters:    Size  Location     Type
 11825 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11826 ;;		 -> INT_DefaultInterruptHandler(1), S1_ISR(1), 
 11827 ;; Auto vars:     Size  Location     Type
 11828 ;;		None
 11829 ;; Return value:  Size  Location     Type
 11830 ;;                  1    wreg      void 
 11831 ;; Registers used:
 11832 ;;		wreg
 11833 ;; Tracked objects:
 11834 ;;		On entry : 0/0
 11835 ;;		On exit  : 0/0
 11836 ;;		Unchanged: 0/0
 11837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11838 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11841 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11842 ;;Total ram usage:        2 bytes
 11843 ;; Hardware stack levels used:    1
 11844 ;; Hardware stack levels required when called:    7
 11845 ;; This function calls:
 11846 ;;		Nothing
 11847 ;; This function is called by:
 11848 ;;		_main
 11849 ;;		_EXT_INT_Initialize
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           
 11854                           ;psect for function _INT_SetInterruptHandler
 11855  177C                     _INT_SetInterruptHandler:
 11856  177C                     l4261:	
 11857                           ;incstack = 0
 11858                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 11859                           
 11860                           
 11861                           ;ext_int.c: 51: INT_InterruptHandler = InterruptHandler;
 11862  177C  0021               	movlb	1	; select bank1
 11863  177D  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11864  177E  00B2               	movwf	(_INT_InterruptHandler+1)^(0+128)
 11865  177F  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 11866  1780  00B1               	movwf	_INT_InterruptHandler^(0+128)
 11867  1781                     l1371:
 11868  1781  0008               	return
 11869  1782                     __end_of_INT_SetInterruptHandler:
 11870                           
 11871                           	psect	text22
 11872  08DF                     __ptext22:	
 11873 ;; *************** function _ADCC_Initialize *****************
 11874 ;; Defined at:
 11875 ;;		line 63 in file "mcc_generated_files/adcc.c"
 11876 ;; Parameters:    Size  Location     Type
 11877 ;;		None
 11878 ;; Auto vars:     Size  Location     Type
 11879 ;;		None
 11880 ;; Return value:  Size  Location     Type
 11881 ;;                  1    wreg      void 
 11882 ;; Registers used:
 11883 ;;		wreg, status,2
 11884 ;; Tracked objects:
 11885 ;;		On entry : 0/0
 11886 ;;		On exit  : 0/0
 11887 ;;		Unchanged: 0/0
 11888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11893 ;;Total ram usage:        0 bytes
 11894 ;; Hardware stack levels used:    1
 11895 ;; Hardware stack levels required when called:    7
 11896 ;; This function calls:
 11897 ;;		Nothing
 11898 ;; This function is called by:
 11899 ;;		_SYSTEM_Initialize
 11900 ;; This function uses a non-reentrant model
 11901 ;;
 11902                           
 11903                           
 11904                           ;psect for function _ADCC_Initialize
 11905  08DF                     _ADCC_Initialize:
 11906  08DF                     l4347:	
 11907                           ;incstack = 0
 11908                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 11909                           
 11910                           
 11911                           ;adcc.c: 67: ADLTHL = 0x00;
 11912  08DF  0022               	movlb	2	; select bank2
 11913  08E0  018E               	clrf	14	;volatile
 11914                           
 11915                           ;adcc.c: 69: ADLTHH = 0x00;
 11916  08E1  018F               	clrf	15	;volatile
 11917                           
 11918                           ;adcc.c: 71: ADUTHL = 0x00;
 11919  08E2  0190               	clrf	16	;volatile
 11920                           
 11921                           ;adcc.c: 73: ADUTHH = 0x00;
 11922  08E3  0191               	clrf	17	;volatile
 11923                           
 11924                           ;adcc.c: 75: ADSTPTL = 0x00;
 11925  08E4  0192               	clrf	18	;volatile
 11926                           
 11927                           ;adcc.c: 77: ADSTPTH = 0x00;
 11928  08E5  0193               	clrf	19	;volatile
 11929                           
 11930                           ;adcc.c: 79: ADRPT = 0x00;
 11931  08E6  018D               	clrf	13	;volatile
 11932                           
 11933                           ;adcc.c: 81: ADPCH = 0x00;
 11934  08E7  0021               	movlb	1	; select bank1
 11935  08E8  019E               	clrf	30	;volatile
 11936                           
 11937                           ;adcc.c: 83: ADCAP = 0x00;
 11938  08E9  019B               	clrf	27	;volatile
 11939                           
 11940                           ;adcc.c: 85: ADCON1 = 0x00;
 11941  08EA  0194               	clrf	20	;volatile
 11942                           
 11943                           ;adcc.c: 87: ADCON2 = 0x00;
 11944  08EB  0195               	clrf	21	;volatile
 11945                           
 11946                           ;adcc.c: 89: ADCON3 = 0x00;
 11947  08EC  0196               	clrf	22	;volatile
 11948                           
 11949                           ;adcc.c: 91: ADSTAT = 0x00;
 11950  08ED  0197               	clrf	23	;volatile
 11951                           
 11952                           ;adcc.c: 93: ADREF = 0x00;
 11953  08EE  019A               	clrf	26	;volatile
 11954                           
 11955                           ;adcc.c: 95: ADACT = 0x00;
 11956  08EF  0199               	clrf	25	;volatile
 11957                           
 11958                           ;adcc.c: 97: ADCLK = 0x00;
 11959  08F0  0198               	clrf	24	;volatile
 11960  08F1                     l4349:
 11961                           
 11962                           ;adcc.c: 99: ADCON0 = 0x80;
 11963  08F1  3080               	movlw	128
 11964  08F2  0093               	movwf	19	;volatile
 11965  08F3                     l4351:
 11966                           
 11967                           ;adcc.c: 101: ADACQ = 0xFF;
 11968  08F3  30FF               	movlw	255
 11969  08F4  009D               	movwf	29	;volatile
 11970  08F5                     l575:
 11971  08F5  0008               	return
 11972  08F6                     __end_of_ADCC_Initialize:
 11973                           
 11974                           	psect	text23
 11975  1764                     __ptext23:	
 11976 ;; *************** function _PWM_Output_D4_Disable *****************
 11977 ;; Defined at:
 11978 ;;		line 246 in file "main.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;		None
 11981 ;; Auto vars:     Size  Location     Type
 11982 ;;		None
 11983 ;; Return value:  Size  Location     Type
 11984 ;;                  1    wreg      void 
 11985 ;; Registers used:
 11986 ;;		None
 11987 ;; Tracked objects:
 11988 ;;		On entry : 0/0
 11989 ;;		On exit  : 0/0
 11990 ;;		Unchanged: 0/0
 11991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11996 ;;Total ram usage:        0 bytes
 11997 ;; Hardware stack levels used:    1
 11998 ;; Hardware stack levels required when called:    7
 11999 ;; This function calls:
 12000 ;;		Nothing
 12001 ;; This function is called by:
 12002 ;;		_main
 12003 ;; This function uses a non-reentrant model
 12004 ;;
 12005                           
 12006                           
 12007                           ;psect for function _PWM_Output_D4_Disable
 12008  1764                     _PWM_Output_D4_Disable:
 12009  1764                     l4951:	
 12010                           ;incstack = 0
 12011                           ; Regs used in _PWM_Output_D4_Disable: []
 12012                           
 12013                           
 12014                           ;main.c: 247: PWM6EN = 0;
 12015  1764  0027               	movlb	7	; select bank7
 12016  1765  138E               	bcf	14,7	;volatile
 12017  1766                     l1165:
 12018  1766  0008               	return
 12019  1767                     __end_of_PWM_Output_D4_Disable:
 12020                           
 12021                           	psect	text24
 12022  08F6                     __ptext24:	
 12023 ;; *************** function _PWM6_LoadDutyValue *****************
 12024 ;; Defined at:
 12025 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 12026 ;; Parameters:    Size  Location     Type
 12027 ;;  dutyValue       2    0[BANK1 ] unsigned int 
 12028 ;; Auto vars:     Size  Location     Type
 12029 ;;		None
 12030 ;; Return value:  Size  Location     Type
 12031 ;;                  1    wreg      void 
 12032 ;; Registers used:
 12033 ;;		wreg, status,2, status,0
 12034 ;; Tracked objects:
 12035 ;;		On entry : 0/0
 12036 ;;		On exit  : 0/0
 12037 ;;		Unchanged: 0/0
 12038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12039 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12043 ;;Total ram usage:        4 bytes
 12044 ;; Hardware stack levels used:    1
 12045 ;; Hardware stack levels required when called:    7
 12046 ;; This function calls:
 12047 ;;		Nothing
 12048 ;; This function is called by:
 12049 ;;		_main
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           
 12054                           ;psect for function _PWM6_LoadDutyValue
 12055  08F6                     _PWM6_LoadDutyValue:
 12056  08F6                     l4811:	
 12057                           ;incstack = 0
 12058                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12059                           
 12060                           
 12061                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 12062  08F6  0021               	movlb	1	; select bank1
 12063  08F7  0821               	movf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128),w
 12064  08F8  00A3               	movwf	(??_PWM6_LoadDutyValue^(0+128)+1)
 12065  08F9  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 12066  08FA  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 12067  08FB  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 12068  08FC  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 12069  08FD  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 12070  08FE  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 12071  08FF  0822               	movf	??_PWM6_LoadDutyValue^(0+128),w
 12072  0900  0027               	movlb	7	; select bank7
 12073  0901  008D               	movwf	13	;volatile
 12074                           
 12075                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 12076  0902  0021               	movlb	1	; select bank1
 12077  0903  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 12078  0904  3903               	andlw	3
 12079  0905  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 12080  0906  3005               	movlw	5
 12081  0907                     u4275:
 12082  0907  35A2               	lslf	??_PWM6_LoadDutyValue^(0+128),f
 12083  0908  3EFF               	addlw	-1
 12084  0909  1D03               	skipz
 12085  090A  2907               	goto	u4275
 12086  090B  3522               	lslf	??_PWM6_LoadDutyValue^(0+128),w
 12087  090C  0027               	movlb	7	; select bank7
 12088  090D  008C               	movwf	12	;volatile
 12089  090E                     l734:
 12090  090E  0008               	return
 12091  090F                     __end_of_PWM6_LoadDutyValue:
 12092                           
 12093                           	psect	text25
 12094  0CF6                     __ptext25:	
 12095 ;; *************** function _LCDinit *****************
 12096 ;; Defined at:
 12097 ;;		line 173 in file "main.c"
 12098 ;; Parameters:    Size  Location     Type
 12099 ;;		None
 12100 ;; Auto vars:     Size  Location     Type
 12101 ;;		None
 12102 ;; Return value:  Size  Location     Type
 12103 ;;                  1    wreg      void 
 12104 ;; Registers used:
 12105 ;;		wreg, status,2, status,0, pclath, cstack
 12106 ;; Tracked objects:
 12107 ;;		On entry : 0/0
 12108 ;;		On exit  : 0/0
 12109 ;;		Unchanged: 0/0
 12110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12113 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12114 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12115 ;;Total ram usage:        1 bytes
 12116 ;; Hardware stack levels used:    1
 12117 ;; Hardware stack levels required when called:    9
 12118 ;; This function calls:
 12119 ;;		_LCDsend
 12120 ;;		_LCDsend2x4
 12121 ;; This function is called by:
 12122 ;;		_main
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126                           
 12127                           ;psect for function _LCDinit
 12128  0CF6                     _LCDinit:
 12129  0CF6                     l4917:	
 12130                           ;incstack = 0
 12131                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 12132                           
 12133                           
 12134                           ;main.c: 175: _delay((unsigned long)((50)*(1000000/4000.0)));
 12135  0CF6  3011               	movlw	17
 12136  0CF7  0021               	movlb	1	; select bank1
 12137  0CF8  00A8               	movwf	??_LCDinit^(0+128)
 12138  0CF9  303A               	movlw	58
 12139  0CFA                     u4957:
 12140  0CFA  0B89               	decfsz	9,f
 12141  0CFB  2CFA               	goto	u4957
 12142  0CFC  0BA8               	decfsz	??_LCDinit^(0+128),f
 12143  0CFD  2CFA               	goto	u4957
 12144  0CFE  0000               	nop
 12145  0CFF                     l4919:
 12146                           
 12147                           ;main.c: 176: LCDsend(0x30);
 12148  0CFF  3030               	movlw	48
 12149  0D00  318B  23F1  318C   	fcall	_LCDsend
 12150  0D03                     l4921:
 12151                           
 12152                           ;main.c: 177: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 12153  0D03  3034               	movlw	52
 12154  0D04  318B  23F1  318C   	fcall	_LCDsend
 12155  0D07  3029               	movlw	41
 12156  0D08                     u4967:
 12157  0D08  0B89               	decfsz	9,f
 12158  0D09  2D08               	goto	u4967
 12159  0D0A  3200               	nop2
 12160  0D0B                     l4923:
 12161  0D0B  3030               	movlw	48
 12162  0D0C  318B  23F1  318C   	fcall	_LCDsend
 12163  0D0F                     l4925:
 12164                           
 12165                           ;main.c: 178: _delay((unsigned long)((5)*(1000000/4000.0)));
 12166  0D0F  30FA               	movlw	250
 12167  0D10                     u4977:
 12168  0D10  3200               	nop2
 12169  0D11  0B89               	decfsz	9,f
 12170  0D12  2D10               	goto	u4977
 12171                           
 12172                           ;main.c: 179: LCDsend(0x30);
 12173  0D13  3030               	movlw	48
 12174  0D14  318B  23F1  318C   	fcall	_LCDsend
 12175                           
 12176                           ;main.c: 180: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 12177  0D17  3034               	movlw	52
 12178  0D18  318B  23F1  318C   	fcall	_LCDsend
 12179  0D1B                     l4927:
 12180  0D1B  3029               	movlw	41
 12181  0D1C                     u4987:
 12182  0D1C  0B89               	decfsz	9,f
 12183  0D1D  2D1C               	goto	u4987
 12184  0D1E  3200               	nop2
 12185  0D1F                     l4929:
 12186  0D1F  3030               	movlw	48
 12187  0D20  318B  23F1  318C   	fcall	_LCDsend
 12188                           
 12189                           ;main.c: 181: _delay((unsigned long)((100)*(1000000/4000000.0)));
 12190  0D23  3008               	movlw	8
 12191  0D24                     u4997:
 12192  0D24  0B89               	decfsz	9,f
 12193  0D25  2D24               	goto	u4997
 12194  0D26  0000               	nop
 12195  0D27                     l4931:
 12196                           
 12197                           ;main.c: 182: LCDsend(0x30);
 12198  0D27  3030               	movlw	48
 12199  0D28  318B  23F1  318C   	fcall	_LCDsend
 12200  0D2B                     l4933:
 12201                           
 12202                           ;main.c: 183: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 12203  0D2B  3034               	movlw	52
 12204  0D2C  318B  23F1  318C   	fcall	_LCDsend
 12205  0D2F  3029               	movlw	41
 12206  0D30                     u5007:
 12207  0D30  0B89               	decfsz	9,f
 12208  0D31  2D30               	goto	u5007
 12209  0D32  3200               	nop2
 12210  0D33                     l4935:
 12211  0D33  3030               	movlw	48
 12212  0D34  318B  23F1  318C   	fcall	_LCDsend
 12213  0D37                     l4937:
 12214                           
 12215                           ;main.c: 184: _delay((unsigned long)((100)*(1000000/4000000.0)));
 12216  0D37  3008               	movlw	8
 12217  0D38                     u5017:
 12218  0D38  0B89               	decfsz	9,f
 12219  0D39  2D38               	goto	u5017
 12220  0D3A  0000               	nop
 12221                           
 12222                           ;main.c: 185: LCDsend(0x20);
 12223  0D3B  3020               	movlw	32
 12224  0D3C  318B  23F1  318C   	fcall	_LCDsend
 12225                           
 12226                           ;main.c: 186: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 12227  0D3F  3024               	movlw	36
 12228  0D40  318B  23F1  318C   	fcall	_LCDsend
 12229  0D43                     l4939:
 12230  0D43  3029               	movlw	41
 12231  0D44                     u5027:
 12232  0D44  0B89               	decfsz	9,f
 12233  0D45  2D44               	goto	u5027
 12234  0D46  3200               	nop2
 12235  0D47                     l4941:
 12236  0D47  3020               	movlw	32
 12237  0D48  318B  23F1  318C   	fcall	_LCDsend
 12238                           
 12239                           ;main.c: 187: _delay((unsigned long)((5)*(1000000/4000.0)));
 12240  0D4B  30FA               	movlw	250
 12241  0D4C                     u5037:
 12242  0D4C  3200               	nop2
 12243  0D4D  0B89               	decfsz	9,f
 12244  0D4E  2D4C               	goto	u5037
 12245  0D4F                     l4943:
 12246                           
 12247                           ;main.c: 189: LCDsend2x4(0x28, 0);
 12248  0D4F  0021               	movlb	1	; select bank1
 12249  0D50  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12250  0D51  3028               	movlw	40
 12251  0D52  318E  261F  318C   	fcall	_LCDsend2x4
 12252  0D55                     l4945:
 12253                           
 12254                           ;main.c: 190: LCDsend2x4(0x06, 0);
 12255  0D55  0021               	movlb	1	; select bank1
 12256  0D56  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12257  0D57  3006               	movlw	6
 12258  0D58  318E  261F  318C   	fcall	_LCDsend2x4
 12259  0D5B                     l4947:
 12260                           
 12261                           ;main.c: 191: LCDsend2x4(0x0f, 0);
 12262  0D5B  0021               	movlb	1	; select bank1
 12263  0D5C  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12264  0D5D  300F               	movlw	15
 12265  0D5E  318E  261F  318C   	fcall	_LCDsend2x4
 12266  0D61                     l4949:
 12267                           
 12268                           ;main.c: 192: LCDsend2x4(0x01, 0);
 12269  0D61  0021               	movlb	1	; select bank1
 12270  0D62  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12271  0D63  3001               	movlw	1
 12272  0D64  318E  261F  318C   	fcall	_LCDsend2x4
 12273                           
 12274                           ;main.c: 193: _delay((unsigned long)((2)*(1000000/4000.0)));
 12275  0D67  30A6               	movlw	166
 12276  0D68                     u5047:
 12277  0D68  0B89               	decfsz	9,f
 12278  0D69  2D68               	goto	u5047
 12279  0D6A  3200               	nop2
 12280  0D6B                     l1134:
 12281  0D6B  0008               	return
 12282  0D6C                     __end_of_LCDinit:
 12283                           
 12284                           	psect	text26
 12285  0E1F                     __ptext26:	
 12286 ;; *************** function _LCDsend2x4 *****************
 12287 ;; Defined at:
 12288 ;;		line 150 in file "main.c"
 12289 ;; Parameters:    Size  Location     Type
 12290 ;;  c               1    wreg     unsigned char 
 12291 ;;  mode            1    2[BANK1 ] unsigned char 
 12292 ;; Auto vars:     Size  Location     Type
 12293 ;;  c               1    5[BANK1 ] unsigned char 
 12294 ;;  lc              1    7[BANK1 ] unsigned char 
 12295 ;;  hc              1    6[BANK1 ] unsigned char 
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  1    wreg      void 
 12298 ;; Registers used:
 12299 ;;		wreg, status,2, status,0, pclath, cstack
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12305 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12306 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12307 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12308 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12309 ;;Total ram usage:        6 bytes
 12310 ;; Hardware stack levels used:    1
 12311 ;; Hardware stack levels required when called:    8
 12312 ;; This function calls:
 12313 ;;		_WriteI2C
 12314 ;; This function is called by:
 12315 ;;		_LCDinit
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           
 12320                           ;psect for function _LCDsend2x4
 12321  0E1F                     _LCDsend2x4:
 12322                           
 12323                           ;incstack = 0
 12324                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 12325                           ;LCDsend2x4@c stored from wreg
 12326  0E1F  0021               	movlb	1	; select bank1
 12327  0E20  00A5               	movwf	LCDsend2x4@c^(0+128)
 12328  0E21                     l4483:
 12329                           
 12330                           ;main.c: 152: unsigned char hc;;main.c: 153: unsigned char lc;;main.c: 155: hc = c & 0xf
      +                          0;
 12331  0E21  0825               	movf	LCDsend2x4@c^(0+128),w
 12332  0E22  39F0               	andlw	240
 12333  0E23  00A3               	movwf	??_LCDsend2x4^(0+128)
 12334  0E24  0823               	movf	??_LCDsend2x4^(0+128),w
 12335  0E25  00A6               	movwf	LCDsend2x4@hc^(0+128)
 12336  0E26                     l4485:
 12337                           
 12338                           ;main.c: 156: lc = (c << 4) & 0xf0;
 12339  0E26  0825               	movf	LCDsend2x4@c^(0+128),w
 12340  0E27  00A3               	movwf	??_LCDsend2x4^(0+128)
 12341  0E28  3003               	movlw	3
 12342  0E29                     u3675:
 12343  0E29  35A3               	lslf	??_LCDsend2x4^(0+128),f
 12344  0E2A  3EFF               	addlw	-1
 12345  0E2B  1D03               	skipz
 12346  0E2C  2E29               	goto	u3675
 12347  0E2D  3523               	lslf	??_LCDsend2x4^(0+128),w
 12348  0E2E  39F0               	andlw	240
 12349  0E2F  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
 12350  0E30  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
 12351  0E31  00A7               	movwf	LCDsend2x4@lc^(0+128)
 12352  0E32                     l4487:	
 12353                           ;main.c: 158: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12354                           
 12355  0E32  0023               	movlb	3	; select bank3
 12356  0E33  0C0F               	rrf	15,w	;volatile
 12357  0E34  0C89               	rrf	9,f
 12358  0E35  3901               	andlw	1
 12359  0E36  0021               	movlb	1	; select bank1
 12360  0E37  00A3               	movwf	??_LCDsend2x4^(0+128)
 12361  0E38  0023               	movlb	3	; select bank3
 12362  0E39  0811               	movf	17,w	;volatile
 12363  0E3A  391F               	andlw	31
 12364  0E3B  0021               	movlb	1	; select bank1
 12365  0E3C  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12366  0E3D  1D03               	btfss	3,2
 12367  0E3E  2E40               	goto	u3681
 12368  0E3F  2E41               	goto	u3680
 12369  0E40                     u3681:
 12370  0E40  2E32               	goto	l4487
 12371  0E41                     u3680:
 12372  0E41                     l1100:
 12373                           
 12374                           ;main.c: 159: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 12375  0E41  0023               	movlb	3	; select bank3
 12376  0E42  1411               	bsf	17,0	;volatile
 12377  0E43                     l1101:
 12378  0E43  1811               	btfsc	17,0	;volatile
 12379  0E44  2E46               	goto	u3691
 12380  0E45  2E47               	goto	u3690
 12381  0E46                     u3691:
 12382  0E46  2E43               	goto	l1101
 12383  0E47                     u3690:
 12384  0E47                     l4489:
 12385  0E47  0023               	movlb	3	; select bank3
 12386  0E48  0C0F               	rrf	15,w	;volatile
 12387  0E49  0C89               	rrf	9,f
 12388  0E4A  3901               	andlw	1
 12389  0E4B  0021               	movlb	1	; select bank1
 12390  0E4C  00A3               	movwf	??_LCDsend2x4^(0+128)
 12391  0E4D  0023               	movlb	3	; select bank3
 12392  0E4E  0811               	movf	17,w	;volatile
 12393  0E4F  391F               	andlw	31
 12394  0E50  0021               	movlb	1	; select bank1
 12395  0E51  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12396  0E52  1D03               	btfss	3,2
 12397  0E53  2E55               	goto	u3701
 12398  0E54  2E56               	goto	u3700
 12399  0E55                     u3701:
 12400  0E55  2E47               	goto	l4489
 12401  0E56                     u3700:
 12402  0E56                     l4491:
 12403                           
 12404                           ;main.c: 160: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12405  0E56  304E               	movlw	78
 12406  0E57  318C  249C  318E   	fcall	_WriteI2C
 12407  0E5A                     l4493:
 12408  0E5A  0023               	movlb	3	; select bank3
 12409  0E5B  0C0F               	rrf	15,w	;volatile
 12410  0E5C  0C89               	rrf	9,f
 12411  0E5D  3901               	andlw	1
 12412  0E5E  0021               	movlb	1	; select bank1
 12413  0E5F  00A3               	movwf	??_LCDsend2x4^(0+128)
 12414  0E60  0023               	movlb	3	; select bank3
 12415  0E61  0811               	movf	17,w	;volatile
 12416  0E62  391F               	andlw	31
 12417  0E63  0021               	movlb	1	; select bank1
 12418  0E64  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12419  0E65  1D03               	btfss	3,2
 12420  0E66  2E68               	goto	u3711
 12421  0E67  2E69               	goto	u3710
 12422  0E68                     u3711:
 12423  0E68  2E5A               	goto	l4493
 12424  0E69                     u3710:
 12425  0E69                     l4495:
 12426                           
 12427                           ;main.c: 161: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12428  0E69  0826               	movf	LCDsend2x4@hc^(0+128),w
 12429  0E6A  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12430  0E6B  3808               	iorlw	8
 12431  0E6C  318C  249C  318E   	fcall	_WriteI2C
 12432  0E6F                     l4497:
 12433  0E6F  0023               	movlb	3	; select bank3
 12434  0E70  0C0F               	rrf	15,w	;volatile
 12435  0E71  0C89               	rrf	9,f
 12436  0E72  3901               	andlw	1
 12437  0E73  0021               	movlb	1	; select bank1
 12438  0E74  00A3               	movwf	??_LCDsend2x4^(0+128)
 12439  0E75  0023               	movlb	3	; select bank3
 12440  0E76  0811               	movf	17,w	;volatile
 12441  0E77  391F               	andlw	31
 12442  0E78  0021               	movlb	1	; select bank1
 12443  0E79  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12444  0E7A  1D03               	btfss	3,2
 12445  0E7B  2E7D               	goto	u3721
 12446  0E7C  2E7E               	goto	u3720
 12447  0E7D                     u3721:
 12448  0E7D  2E6F               	goto	l4497
 12449  0E7E                     u3720:
 12450  0E7E                     l4499:
 12451                           
 12452                           ;main.c: 162: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 12453  0E7E  0826               	movf	LCDsend2x4@hc^(0+128),w
 12454  0E7F  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12455  0E80  380C               	iorlw	12
 12456  0E81  318C  249C  318E   	fcall	_WriteI2C
 12457  0E84                     l4501:
 12458  0E84  0023               	movlb	3	; select bank3
 12459  0E85  0C0F               	rrf	15,w	;volatile
 12460  0E86  0C89               	rrf	9,f
 12461  0E87  3901               	andlw	1
 12462  0E88  0021               	movlb	1	; select bank1
 12463  0E89  00A3               	movwf	??_LCDsend2x4^(0+128)
 12464  0E8A  0023               	movlb	3	; select bank3
 12465  0E8B  0811               	movf	17,w	;volatile
 12466  0E8C  391F               	andlw	31
 12467  0E8D  0021               	movlb	1	; select bank1
 12468  0E8E  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12469  0E8F  1D03               	btfss	3,2
 12470  0E90  2E92               	goto	u3731
 12471  0E91  2E93               	goto	u3730
 12472  0E92                     u3731:
 12473  0E92  2E84               	goto	l4501
 12474  0E93                     u3730:
 12475  0E93                     l1115:
 12476  0E93                     l4503:	
 12477                           ;main.c: 163: _delay((unsigned long)((1)*(1000000/4000000.0)));
 12478                           
 12479                           
 12480                           ;main.c: 164: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12481  0E93  0021               	movlb	1	; select bank1
 12482  0E94  0826               	movf	LCDsend2x4@hc^(0+128),w
 12483  0E95  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12484  0E96  3808               	iorlw	8
 12485  0E97  318C  249C  318E   	fcall	_WriteI2C
 12486  0E9A                     l4505:
 12487  0E9A  0023               	movlb	3	; select bank3
 12488  0E9B  0C0F               	rrf	15,w	;volatile
 12489  0E9C  0C89               	rrf	9,f
 12490  0E9D  3901               	andlw	1
 12491  0E9E  0021               	movlb	1	; select bank1
 12492  0E9F  00A3               	movwf	??_LCDsend2x4^(0+128)
 12493  0EA0  0023               	movlb	3	; select bank3
 12494  0EA1  0811               	movf	17,w	;volatile
 12495  0EA2  391F               	andlw	31
 12496  0EA3  0021               	movlb	1	; select bank1
 12497  0EA4  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12498  0EA5  1D03               	btfss	3,2
 12499  0EA6  2EA8               	goto	u3741
 12500  0EA7  2EA9               	goto	u3740
 12501  0EA8                     u3741:
 12502  0EA8  2E9A               	goto	l4505
 12503  0EA9                     u3740:
 12504  0EA9                     l4507:
 12505                           
 12506                           ;main.c: 165: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12507  0EA9  0827               	movf	LCDsend2x4@lc^(0+128),w
 12508  0EAA  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12509  0EAB  3808               	iorlw	8
 12510  0EAC  318C  249C  318E   	fcall	_WriteI2C
 12511  0EAF                     l4509:
 12512  0EAF  0023               	movlb	3	; select bank3
 12513  0EB0  0C0F               	rrf	15,w	;volatile
 12514  0EB1  0C89               	rrf	9,f
 12515  0EB2  3901               	andlw	1
 12516  0EB3  0021               	movlb	1	; select bank1
 12517  0EB4  00A3               	movwf	??_LCDsend2x4^(0+128)
 12518  0EB5  0023               	movlb	3	; select bank3
 12519  0EB6  0811               	movf	17,w	;volatile
 12520  0EB7  391F               	andlw	31
 12521  0EB8  0021               	movlb	1	; select bank1
 12522  0EB9  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12523  0EBA  1D03               	btfss	3,2
 12524  0EBB  2EBD               	goto	u3751
 12525  0EBC  2EBE               	goto	u3750
 12526  0EBD                     u3751:
 12527  0EBD  2EAF               	goto	l4509
 12528  0EBE                     u3750:
 12529  0EBE                     l4511:
 12530                           
 12531                           ;main.c: 166: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 12532  0EBE  0827               	movf	LCDsend2x4@lc^(0+128),w
 12533  0EBF  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12534  0EC0  380C               	iorlw	12
 12535  0EC1  318C  249C  318E   	fcall	_WriteI2C
 12536  0EC4                     l4513:
 12537  0EC4  0023               	movlb	3	; select bank3
 12538  0EC5  0C0F               	rrf	15,w	;volatile
 12539  0EC6  0C89               	rrf	9,f
 12540  0EC7  3901               	andlw	1
 12541  0EC8  0021               	movlb	1	; select bank1
 12542  0EC9  00A3               	movwf	??_LCDsend2x4^(0+128)
 12543  0ECA  0023               	movlb	3	; select bank3
 12544  0ECB  0811               	movf	17,w	;volatile
 12545  0ECC  391F               	andlw	31
 12546  0ECD  0021               	movlb	1	; select bank1
 12547  0ECE  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12548  0ECF  1D03               	btfss	3,2
 12549  0ED0  2ED2               	goto	u3761
 12550  0ED1  2ED3               	goto	u3760
 12551  0ED2                     u3761:
 12552  0ED2  2EC4               	goto	l4513
 12553  0ED3                     u3760:
 12554  0ED3                     l1124:
 12555  0ED3                     l4515:	
 12556                           ;main.c: 167: _delay((unsigned long)((1)*(1000000/4000000.0)));
 12557                           
 12558                           
 12559                           ;main.c: 168: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12560  0ED3  0021               	movlb	1	; select bank1
 12561  0ED4  0827               	movf	LCDsend2x4@lc^(0+128),w
 12562  0ED5  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12563  0ED6  3808               	iorlw	8
 12564  0ED7  318C  249C  318E   	fcall	_WriteI2C
 12565  0EDA                     l4517:
 12566  0EDA  0023               	movlb	3	; select bank3
 12567  0EDB  0C0F               	rrf	15,w	;volatile
 12568  0EDC  0C89               	rrf	9,f
 12569  0EDD  3901               	andlw	1
 12570  0EDE  0021               	movlb	1	; select bank1
 12571  0EDF  00A3               	movwf	??_LCDsend2x4^(0+128)
 12572  0EE0  0023               	movlb	3	; select bank3
 12573  0EE1  0811               	movf	17,w	;volatile
 12574  0EE2  391F               	andlw	31
 12575  0EE3  0021               	movlb	1	; select bank1
 12576  0EE4  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12577  0EE5  1D03               	btfss	3,2
 12578  0EE6  2EE8               	goto	u3771
 12579  0EE7  2EE9               	goto	u3770
 12580  0EE8                     u3771:
 12581  0EE8  2EDA               	goto	l4517
 12582  0EE9                     u3770:
 12583  0EE9                     l1127:
 12584                           
 12585                           ;main.c: 169: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12586  0EE9  0023               	movlb	3	; select bank3
 12587  0EEA  1511               	bsf	17,2	;volatile
 12588  0EEB                     l1128:
 12589  0EEB  1911               	btfsc	17,2	;volatile
 12590  0EEC  2EEE               	goto	u3781
 12591  0EED  2EEF               	goto	u3780
 12592  0EEE                     u3781:
 12593  0EEE  2EEB               	goto	l1128
 12594  0EEF                     u3780:
 12595  0EEF                     l4519:
 12596                           
 12597                           ;main.c: 170: _delay((unsigned long)((50)*(1000000/4000000.0)));
 12598  0EEF  3004               	movlw	4
 12599  0EF0                     u5057:
 12600  0EF0  0B89               	decfsz	9,f
 12601  0EF1  2EF0               	goto	u5057
 12602  0EF2                     l1131:
 12603  0EF2  0008               	return
 12604  0EF3                     __end_of_LCDsend2x4:
 12605                           
 12606                           	psect	text27
 12607  0BF1                     __ptext27:	
 12608 ;; *************** function _LCDsend *****************
 12609 ;; Defined at:
 12610 ;;		line 111 in file "main.c"
 12611 ;; Parameters:    Size  Location     Type
 12612 ;;  c               1    wreg     unsigned char 
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;  c               1    3[BANK1 ] unsigned char 
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  1    wreg      void 
 12617 ;; Registers used:
 12618 ;;		wreg, status,2, status,0, pclath, cstack
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12625 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12626 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12627 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12628 ;;Total ram usage:        2 bytes
 12629 ;; Hardware stack levels used:    1
 12630 ;; Hardware stack levels required when called:    8
 12631 ;; This function calls:
 12632 ;;		_WriteI2C
 12633 ;; This function is called by:
 12634 ;;		_LCDinit
 12635 ;; This function uses a non-reentrant model
 12636 ;;
 12637                           
 12638                           
 12639                           ;psect for function _LCDsend
 12640  0BF1                     _LCDsend:
 12641                           
 12642                           ;incstack = 0
 12643                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 12644                           ;LCDsend@c stored from wreg
 12645  0BF1  0021               	movlb	1	; select bank1
 12646  0BF2  00A3               	movwf	LCDsend@c^(0+128)
 12647  0BF3                     l4469:
 12648  0BF3                     l4471:	
 12649                           ;main.c: 113: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12650                           
 12651  0BF3  0023               	movlb	3	; select bank3
 12652  0BF4  0C0F               	rrf	15,w	;volatile
 12653  0BF5  0C89               	rrf	9,f
 12654  0BF6  3901               	andlw	1
 12655  0BF7  0021               	movlb	1	; select bank1
 12656  0BF8  00A2               	movwf	??_LCDsend^(0+128)
 12657  0BF9  0023               	movlb	3	; select bank3
 12658  0BFA  0811               	movf	17,w	;volatile
 12659  0BFB  391F               	andlw	31
 12660  0BFC  0021               	movlb	1	; select bank1
 12661  0BFD  0422               	iorwf	??_LCDsend^(0+128),w
 12662  0BFE  1D03               	btfss	3,2
 12663  0BFF  2C01               	goto	u3611
 12664  0C00  2C02               	goto	u3610
 12665  0C01                     u3611:
 12666  0C01  2BF3               	goto	l4471
 12667  0C02                     u3610:
 12668  0C02                     l998:
 12669                           
 12670                           ;main.c: 114: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 12671  0C02  0023               	movlb	3	; select bank3
 12672  0C03  1411               	bsf	17,0	;volatile
 12673  0C04                     l999:
 12674  0C04  1811               	btfsc	17,0	;volatile
 12675  0C05  2C07               	goto	u3621
 12676  0C06  2C08               	goto	u3620
 12677  0C07                     u3621:
 12678  0C07  2C04               	goto	l999
 12679  0C08                     u3620:
 12680  0C08                     l4473:
 12681  0C08  0023               	movlb	3	; select bank3
 12682  0C09  0C0F               	rrf	15,w	;volatile
 12683  0C0A  0C89               	rrf	9,f
 12684  0C0B  3901               	andlw	1
 12685  0C0C  0021               	movlb	1	; select bank1
 12686  0C0D  00A2               	movwf	??_LCDsend^(0+128)
 12687  0C0E  0023               	movlb	3	; select bank3
 12688  0C0F  0811               	movf	17,w	;volatile
 12689  0C10  391F               	andlw	31
 12690  0C11  0021               	movlb	1	; select bank1
 12691  0C12  0422               	iorwf	??_LCDsend^(0+128),w
 12692  0C13  1D03               	btfss	3,2
 12693  0C14  2C16               	goto	u3631
 12694  0C15  2C17               	goto	u3630
 12695  0C16                     u3631:
 12696  0C16  2C08               	goto	l4473
 12697  0C17                     u3630:
 12698  0C17                     l4475:
 12699                           
 12700                           ;main.c: 115: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12701  0C17  304E               	movlw	78
 12702  0C18  318C  249C  318B   	fcall	_WriteI2C
 12703  0C1B                     l4477:
 12704  0C1B  0023               	movlb	3	; select bank3
 12705  0C1C  0C0F               	rrf	15,w	;volatile
 12706  0C1D  0C89               	rrf	9,f
 12707  0C1E  3901               	andlw	1
 12708  0C1F  0021               	movlb	1	; select bank1
 12709  0C20  00A2               	movwf	??_LCDsend^(0+128)
 12710  0C21  0023               	movlb	3	; select bank3
 12711  0C22  0811               	movf	17,w	;volatile
 12712  0C23  391F               	andlw	31
 12713  0C24  0021               	movlb	1	; select bank1
 12714  0C25  0422               	iorwf	??_LCDsend^(0+128),w
 12715  0C26  1D03               	btfss	3,2
 12716  0C27  2C29               	goto	u3641
 12717  0C28  2C2A               	goto	u3640
 12718  0C29                     u3641:
 12719  0C29  2C1B               	goto	l4477
 12720  0C2A                     u3640:
 12721  0C2A                     l4479:
 12722                           
 12723                           ;main.c: 116: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12724  0C2A  0823               	movf	LCDsend@c^(0+128),w
 12725  0C2B  318C  249C  318B   	fcall	_WriteI2C
 12726  0C2E                     l4481:
 12727  0C2E  0023               	movlb	3	; select bank3
 12728  0C2F  0C0F               	rrf	15,w	;volatile
 12729  0C30  0C89               	rrf	9,f
 12730  0C31  3901               	andlw	1
 12731  0C32  0021               	movlb	1	; select bank1
 12732  0C33  00A2               	movwf	??_LCDsend^(0+128)
 12733  0C34  0023               	movlb	3	; select bank3
 12734  0C35  0811               	movf	17,w	;volatile
 12735  0C36  391F               	andlw	31
 12736  0C37  0021               	movlb	1	; select bank1
 12737  0C38  0422               	iorwf	??_LCDsend^(0+128),w
 12738  0C39  1D03               	btfss	3,2
 12739  0C3A  2C3C               	goto	u3651
 12740  0C3B  2C3D               	goto	u3650
 12741  0C3C                     u3651:
 12742  0C3C  2C2E               	goto	l4481
 12743  0C3D                     u3650:
 12744  0C3D                     l1010:
 12745                           
 12746                           ;main.c: 117: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12747  0C3D  0023               	movlb	3	; select bank3
 12748  0C3E  1511               	bsf	17,2	;volatile
 12749  0C3F                     l1011:
 12750  0C3F  1911               	btfsc	17,2	;volatile
 12751  0C40  2C42               	goto	u3661
 12752  0C41  2C43               	goto	u3660
 12753  0C42                     u3661:
 12754  0C42  2C3F               	goto	l1011
 12755  0C43                     u3660:
 12756  0C43                     l1014:
 12757  0C43  0008               	return
 12758  0C44                     __end_of_LCDsend:
 12759                           
 12760                           	psect	text28
 12761  0C9C                     __ptext28:	
 12762 ;; *************** function _WriteI2C *****************
 12763 ;; Defined at:
 12764 ;;		line 47 in file "I2C/i2c.c"
 12765 ;; Parameters:    Size  Location     Type
 12766 ;;  data_out        1    wreg     unsigned char 
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;  data_out        1    1[BANK1 ] unsigned char 
 12769 ;; Return value:  Size  Location     Type
 12770 ;;                  1    wreg      char 
 12771 ;; Registers used:
 12772 ;;		wreg, status,2, status,0
 12773 ;; Tracked objects:
 12774 ;;		On entry : 0/0
 12775 ;;		On exit  : 0/0
 12776 ;;		Unchanged: 0/0
 12777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12779 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;Total ram usage:        2 bytes
 12783 ;; Hardware stack levels used:    1
 12784 ;; Hardware stack levels required when called:    7
 12785 ;; This function calls:
 12786 ;;		Nothing
 12787 ;; This function is called by:
 12788 ;;		_LCDsend
 12789 ;;		_LCDsend2x4
 12790 ;;		_LCDrecv
 12791 ;; This function uses a non-reentrant model
 12792 ;;
 12793                           
 12794                           
 12795                           ;psect for function _WriteI2C
 12796  0C9C                     _WriteI2C:
 12797                           
 12798                           ;incstack = 0
 12799                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 12800                           ;WriteI2C@data_out stored from wreg
 12801  0C9C  0021               	movlb	1	; select bank1
 12802  0C9D  00A1               	movwf	WriteI2C@data_out^(0+128)
 12803  0C9E                     l4001:
 12804                           
 12805                           ;i2c.c: 49: SSP1BUF = data_out;
 12806  0C9E  0821               	movf	WriteI2C@data_out^(0+128),w
 12807  0C9F  0023               	movlb	3	; select bank3
 12808  0CA0  008C               	movwf	12	;volatile
 12809  0CA1                     l4003:
 12810                           
 12811                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 12812  0CA1  1F90               	btfss	16,7	;volatile
 12813  0CA2  2CA4               	goto	u2931
 12814  0CA3  2CA5               	goto	u2930
 12815  0CA4                     u2931:
 12816  0CA4  2CA6               	goto	l4009
 12817  0CA5                     u2930:
 12818  0CA5  2CF5               	goto	l30
 12819  0CA6                     l4009:
 12820                           
 12821                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 12822  0CA6  300F               	movlw	15
 12823  0CA7  0510               	andwf	16,w	;volatile
 12824  0CA8  0021               	movlb	1	; select bank1
 12825  0CA9  00A0               	movwf	??_WriteI2C^(0+128)
 12826  0CAA  3008               	movlw	8
 12827  0CAB  0620               	xorwf	??_WriteI2C^(0+128),w
 12828  0CAC  1903               	btfsc	3,2
 12829  0CAD  2CAF               	goto	u2941
 12830  0CAE  2CB0               	goto	u2940
 12831  0CAF                     u2941:
 12832  0CAF  2CC9               	goto	l4021
 12833  0CB0                     u2940:
 12834  0CB0                     l4011:
 12835  0CB0  300F               	movlw	15
 12836  0CB1  0023               	movlb	3	; select bank3
 12837  0CB2  0510               	andwf	16,w	;volatile
 12838  0CB3  0021               	movlb	1	; select bank1
 12839  0CB4  00A0               	movwf	??_WriteI2C^(0+128)
 12840  0CB5  300B               	movlw	11
 12841  0CB6  0620               	xorwf	??_WriteI2C^(0+128),w
 12842  0CB7  1903               	btfsc	3,2
 12843  0CB8  2CBA               	goto	u2951
 12844  0CB9  2CBB               	goto	u2950
 12845  0CBA                     u2951:
 12846  0CBA  2CC9               	goto	l4021
 12847  0CBB                     u2950:
 12848  0CBB                     l4013:
 12849                           
 12850                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 12851  0CBB  0023               	movlb	3	; select bank3
 12852  0CBC  1610               	bsf	16,4	;volatile
 12853  0CBD                     l33:	
 12854                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 12855                           
 12856  0CBD  002E               	movlb	14	; select bank14
 12857  0CBE  1C0F               	btfss	15,0	;volatile
 12858  0CBF  2CC1               	goto	u2961
 12859  0CC0  2CC2               	goto	u2960
 12860  0CC1                     u2961:
 12861  0CC1  2CBD               	goto	l33
 12862  0CC2                     u2960:
 12863  0CC2                     l35:
 12864                           
 12865                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 12866  0CC2  0023               	movlb	3	; select bank3
 12867  0CC3  190F               	btfsc	15,2	;volatile
 12868  0CC4  2CC6               	goto	u2971
 12869  0CC5  2CC7               	goto	u2970
 12870  0CC6                     u2971:
 12871  0CC6  2CF5               	goto	l30
 12872  0CC7                     u2970:
 12873  0CC7                     l4015:
 12874  0CC7  080F               	movf	15,w	;volatile
 12875  0CC8  2CF5               	goto	l30
 12876  0CC9                     l4021:
 12877                           
 12878                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 12879  0CC9  300F               	movlw	15
 12880  0CCA  0023               	movlb	3	; select bank3
 12881  0CCB  0510               	andwf	16,w	;volatile
 12882  0CCC  0021               	movlb	1	; select bank1
 12883  0CCD  00A0               	movwf	??_WriteI2C^(0+128)
 12884  0CCE  3008               	movlw	8
 12885  0CCF  0620               	xorwf	??_WriteI2C^(0+128),w
 12886  0CD0  1903               	btfsc	3,2
 12887  0CD1  2CD3               	goto	u2981
 12888  0CD2  2CD4               	goto	u2980
 12889  0CD3                     u2981:
 12890  0CD3  2CDF               	goto	l42
 12891  0CD4                     u2980:
 12892  0CD4                     l4023:
 12893  0CD4  300F               	movlw	15
 12894  0CD5  0023               	movlb	3	; select bank3
 12895  0CD6  0510               	andwf	16,w	;volatile
 12896  0CD7  0021               	movlb	1	; select bank1
 12897  0CD8  00A0               	movwf	??_WriteI2C^(0+128)
 12898  0CD9  300B               	movlw	11
 12899  0CDA  0620               	xorwf	??_WriteI2C^(0+128),w
 12900  0CDB  1D03               	btfss	3,2
 12901  0CDC  2CDE               	goto	u2991
 12902  0CDD  2CDF               	goto	u2990
 12903  0CDE                     u2991:
 12904  0CDE  2CF5               	goto	l30
 12905  0CDF                     u2990:
 12906  0CDF                     l42:
 12907  0CDF  0023               	movlb	3	; select bank3
 12908  0CE0  180F               	btfsc	15,0	;volatile
 12909  0CE1  2CE3               	goto	u3001
 12910  0CE2  2CE4               	goto	u3000
 12911  0CE3                     u3001:
 12912  0CE3  2CDF               	goto	l42
 12913  0CE4                     u3000:
 12914  0CE4                     l4025:
 12915  0CE4  0023               	movlb	3	; select bank3
 12916  0CE5  0C0F               	rrf	15,w	;volatile
 12917  0CE6  0C89               	rrf	9,f
 12918  0CE7  3901               	andlw	1
 12919  0CE8  0021               	movlb	1	; select bank1
 12920  0CE9  00A0               	movwf	??_WriteI2C^(0+128)
 12921  0CEA  0023               	movlb	3	; select bank3
 12922  0CEB  0811               	movf	17,w	;volatile
 12923  0CEC  391F               	andlw	31
 12924  0CED  0021               	movlb	1	; select bank1
 12925  0CEE  0420               	iorwf	??_WriteI2C^(0+128),w
 12926  0CEF  1D03               	btfss	3,2
 12927  0CF0  2CF2               	goto	u3011
 12928  0CF1  2CF3               	goto	u3010
 12929  0CF2                     u3011:
 12930  0CF2  2CE4               	goto	l4025
 12931  0CF3                     u3010:
 12932  0CF3                     l47:
 12933                           
 12934                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 12935  0CF3  0023               	movlb	3	; select bank3
 12936  0CF4  0811               	movf	17,w	;volatile
 12937  0CF5                     l30:
 12938  0CF5  0008               	return
 12939  0CF6                     __end_of_WriteI2C:
 12940                           
 12941                           	psect	text29
 12942  09E2                     __ptext29:	
 12943 ;; *************** function _DATAEE_WriteByte *****************
 12944 ;; Defined at:
 12945 ;;		line 180 in file "mcc_generated_files/memory.c"
 12946 ;; Parameters:    Size  Location     Type
 12947 ;;  bAdd            2    0[BANK1 ] unsigned int 
 12948 ;;  bData           1    2[BANK1 ] unsigned char 
 12949 ;; Auto vars:     Size  Location     Type
 12950 ;;  GIEBitValue     1    3[BANK1 ] unsigned char 
 12951 ;; Return value:  Size  Location     Type
 12952 ;;                  1    wreg      void 
 12953 ;; Registers used:
 12954 ;;		wreg, status,2, status,0
 12955 ;; Tracked objects:
 12956 ;;		On entry : 0/0
 12957 ;;		On exit  : 0/0
 12958 ;;		Unchanged: 0/0
 12959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12960 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12961 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12963 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12964 ;;Total ram usage:        4 bytes
 12965 ;; Hardware stack levels used:    1
 12966 ;; Hardware stack levels required when called:    7
 12967 ;; This function calls:
 12968 ;;		Nothing
 12969 ;; This function is called by:
 12970 ;;		_main
 12971 ;; This function uses a non-reentrant model
 12972 ;;
 12973                           
 12974                           
 12975                           ;psect for function _DATAEE_WriteByte
 12976  09E2                     _DATAEE_WriteByte:
 12977  09E2                     l4815:	
 12978                           ;incstack = 0
 12979                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12980                           
 12981                           
 12982                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 12983  09E2  3000               	movlw	0
 12984  09E3  1B8B               	btfsc	11,7	;volatile
 12985  09E4  3001               	movlw	1
 12986  09E5  0021               	movlb	1	; select bank1
 12987  09E6  00A3               	movwf	DATAEE_WriteByte@GIEBitValue^(0+128)
 12988                           
 12989                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 12990  09E7  0821               	movf	(DATAEE_WriteByte@bAdd+1)^(0+128),w
 12991  09E8  0030               	movlb	16	; select bank16
 12992  09E9  009B               	movwf	27	;volatile
 12993  09EA                     l4817:
 12994                           
 12995                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 12996  09EA  0021               	movlb	1	; select bank1
 12997  09EB  0820               	movf	DATAEE_WriteByte@bAdd^(0+128),w
 12998  09EC  0030               	movlb	16	; select bank16
 12999  09ED  009A               	movwf	26	;volatile
 13000  09EE                     l4819:
 13001                           
 13002                           ;memory.c: 186: NVMDATL = bData;
 13003  09EE  0021               	movlb	1	; select bank1
 13004  09EF  0822               	movf	DATAEE_WriteByte@bData^(0+128),w
 13005  09F0  0030               	movlb	16	; select bank16
 13006  09F1  009C               	movwf	28	;volatile
 13007  09F2                     l4821:
 13008                           
 13009                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 13010  09F2  171E               	bsf	30,6	;volsfr
 13011  09F3                     l4823:
 13012                           
 13013                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 13014  09F3  151E               	bsf	30,2	;volsfr
 13015  09F4                     l4825:
 13016                           
 13017                           ;memory.c: 189: INTCONbits.GIE = 0;
 13018  09F4  138B               	bcf	11,7	;volatile
 13019  09F5                     l4827:
 13020                           
 13021                           ;memory.c: 190: NVMCON2 = 0x55;
 13022  09F5  3055               	movlw	85
 13023  09F6  009F               	movwf	31	;volsfr
 13024  09F7                     l4829:
 13025                           
 13026                           ;memory.c: 191: NVMCON2 = 0xAA;
 13027  09F7  30AA               	movlw	170
 13028  09F8  009F               	movwf	31	;volsfr
 13029  09F9                     l4831:
 13030                           
 13031                           ;memory.c: 192: NVMCON1bits.WR = 1;
 13032  09F9  149E               	bsf	30,1	;volsfr
 13033  09FA                     l842:	
 13034                           ;memory.c: 195: {
 13035                           
 13036  09FA  189E               	btfsc	30,1	;volsfr
 13037  09FB  29FD               	goto	u4281
 13038  09FC  29FE               	goto	u4280
 13039  09FD                     u4281:
 13040  09FD  29FA               	goto	l842
 13041  09FE                     u4280:
 13042  09FE                     l844:
 13043                           
 13044                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 13045  09FE  111E               	bcf	30,2	;volsfr
 13046  09FF                     l4833:
 13047                           
 13048                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 13049  09FF  0021               	movlb	1	; select bank1
 13050  0A00  0C23               	rrf	DATAEE_WriteByte@GIEBitValue^(0+128),w
 13051  0A01  1C03               	skipc
 13052  0A02  138B               	bcf	11,7	;volatile
 13053  0A03  1803               	skipnc
 13054  0A04  178B               	bsf	11,7	;volatile
 13055  0A05                     l845:
 13056  0A05  0008               	return
 13057  0A06                     __end_of_DATAEE_WriteByte:
 13058                           
 13059                           	psect	text30
 13060  080A                     __ptext30:	
 13061 ;; *************** function _DATAEE_ReadByte *****************
 13062 ;; Defined at:
 13063 ;;		line 202 in file "mcc_generated_files/memory.c"
 13064 ;; Parameters:    Size  Location     Type
 13065 ;;  bAdd            2    0[BANK1 ] unsigned int 
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;		None
 13068 ;; Return value:  Size  Location     Type
 13069 ;;                  1    wreg      unsigned char 
 13070 ;; Registers used:
 13071 ;;		wreg, status,2
 13072 ;; Tracked objects:
 13073 ;;		On entry : 0/0
 13074 ;;		On exit  : 0/0
 13075 ;;		Unchanged: 0/0
 13076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13077 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13080 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13081 ;;Total ram usage:        2 bytes
 13082 ;; Hardware stack levels used:    1
 13083 ;; Hardware stack levels required when called:    7
 13084 ;; This function calls:
 13085 ;;		Nothing
 13086 ;; This function is called by:
 13087 ;;		_main
 13088 ;; This function uses a non-reentrant model
 13089 ;;
 13090                           
 13091                           
 13092                           ;psect for function _DATAEE_ReadByte
 13093  080A                     _DATAEE_ReadByte:
 13094  080A                     l4835:	
 13095                           ;incstack = 0
 13096                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 13097                           
 13098                           
 13099                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 13100  080A  0021               	movlb	1	; select bank1
 13101  080B  0821               	movf	(DATAEE_ReadByte@bAdd+1)^(0+128),w
 13102  080C  0030               	movlb	16	; select bank16
 13103  080D  009B               	movwf	27	;volatile
 13104  080E                     l4837:
 13105                           
 13106                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 13107  080E  0021               	movlb	1	; select bank1
 13108  080F  0820               	movf	DATAEE_ReadByte@bAdd^(0+128),w
 13109  0810  0030               	movlb	16	; select bank16
 13110  0811  009A               	movwf	26	;volatile
 13111  0812                     l4839:
 13112                           
 13113                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 13114  0812  171E               	bsf	30,6	;volsfr
 13115  0813                     l4841:
 13116                           
 13117                           ;memory.c: 207: NVMCON1bits.RD = 1;
 13118  0813  141E               	bsf	30,0	;volsfr
 13119  0814                     l4843:
 13120                           
 13121                           ;memory.c: 208: __nop();
 13122  0814  0000               	nop
 13123  0815                     l4845:
 13124                           
 13125                           ;memory.c: 209: __nop();
 13126  0815  0000               	nop
 13127  0816                     l4847:
 13128                           
 13129                           ;memory.c: 211: return (NVMDATL);
 13130  0816  0030               	movlb	16	; select bank16
 13131  0817  081C               	movf	28,w	;volatile
 13132  0818                     l848:
 13133  0818  0008               	return
 13134  0819                     __end_of_DATAEE_ReadByte:
 13135                           
 13136                           	psect	intentry
 13137  0004                     __pintentry:	
 13138 ;; *************** function _INTERRUPT_InterruptManager *****************
 13139 ;; Defined at:
 13140 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13141 ;; Parameters:    Size  Location     Type
 13142 ;;		None
 13143 ;; Auto vars:     Size  Location     Type
 13144 ;;		None
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  1    wreg      void 
 13147 ;; Registers used:
 13148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13158 ;;Total ram usage:        0 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; Hardware stack levels required when called:    6
 13161 ;; This function calls:
 13162 ;;		_INT_ISR
 13163 ;;		_TMR1_ISR
 13164 ;;		_TMR3_ISR
 13165 ;;		_TMR5_ISR
 13166 ;; This function is called by:
 13167 ;;		Interrupt level 1
 13168 ;; This function uses a non-reentrant model
 13169 ;;
 13170                           
 13171  0004                     _INTERRUPT_InterruptManager:
 13172                           
 13173                           ;incstack = 0
 13174  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13175                           
 13176                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13177  0005  3180               	pagesel	$
 13178  0006                     i1l5025:
 13179                           
 13180                           ;interrupt_manager.c: 55: if(PIE0bits.INTE == 1 && PIR0bits.INTF == 1)
 13181  0006  002E               	movlb	14	; select bank14
 13182  0007  1C16               	btfss	22,0	;volatile
 13183  0008  280A               	goto	u473_21
 13184  0009  280B               	goto	u473_20
 13185  000A                     u473_21:
 13186  000A  2813               	goto	i1l354
 13187  000B                     u473_20:
 13188  000B                     i1l5027:
 13189  000B  1C0C               	btfss	12,0	;volatile
 13190  000C  280E               	goto	u474_21
 13191  000D  280F               	goto	u474_20
 13192  000E                     u474_21:
 13193  000E  2813               	goto	i1l354
 13194  000F                     u474_20:
 13195  000F                     i1l5029:
 13196                           
 13197                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: INT_ISR();
 13198  000F  3197  2776  3180   	fcall	_INT_ISR
 13199                           
 13200                           ;interrupt_manager.c: 58: }
 13201  0012  284A               	goto	i1l368
 13202  0013                     i1l354:
 13203                           
 13204                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
 13205  0013  1F0B               	btfss	11,6	;volatile
 13206  0014  2816               	goto	u475_21
 13207  0015  2817               	goto	u475_20
 13208  0016                     u475_21:
 13209  0016  284A               	goto	i1l368
 13210  0017                     u475_20:
 13211  0017                     i1l5031:
 13212                           
 13213                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 13214  0017  1E1A               	btfss	26,4	;volatile
 13215  0018  281A               	goto	u476_21
 13216  0019  281B               	goto	u476_20
 13217  001A                     u476_21:
 13218  001A  2823               	goto	i1l357
 13219  001B                     u476_20:
 13220  001B                     i1l5033:
 13221  001B  1E10               	btfss	16,4	;volatile
 13222  001C  281E               	goto	u477_21
 13223  001D  281F               	goto	u477_20
 13224  001E                     u477_21:
 13225  001E  2823               	goto	i1l357
 13226  001F                     u477_20:
 13227  001F                     i1l5035:
 13228                           
 13229                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR5_ISR();
 13230  001F  3188  20C8  3180   	fcall	_TMR5_ISR
 13231                           
 13232                           ;interrupt_manager.c: 64: }
 13233  0022  284A               	goto	i1l368
 13234  0023                     i1l357:
 13235                           
 13236                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 13237  0023  1D1A               	btfss	26,2	;volatile
 13238  0024  2826               	goto	u478_21
 13239  0025  2827               	goto	u478_20
 13240  0026                     u478_21:
 13241  0026  282F               	goto	i1l359
 13242  0027                     u478_20:
 13243  0027                     i1l5037:
 13244  0027  1D10               	btfss	16,2	;volatile
 13245  0028  282A               	goto	u479_21
 13246  0029  282B               	goto	u479_20
 13247  002A                     u479_21:
 13248  002A  282F               	goto	i1l359
 13249  002B                     u479_20:
 13250  002B                     i1l5039:
 13251                           
 13252                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR3_ISR();
 13253  002B  3188  20B1  3180   	fcall	_TMR3_ISR
 13254                           
 13255                           ;interrupt_manager.c: 68: }
 13256  002E  284A               	goto	i1l368
 13257  002F                     i1l359:
 13258                           
 13259                           ;interrupt_manager.c: 69: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 13260  002F  1C1A               	btfss	26,0	;volatile
 13261  0030  2832               	goto	u480_21
 13262  0031  2833               	goto	u480_20
 13263  0032                     u480_21:
 13264  0032  283B               	goto	i1l361
 13265  0033                     u480_20:
 13266  0033                     i1l5041:
 13267  0033  1C10               	btfss	16,0	;volatile
 13268  0034  2836               	goto	u481_21
 13269  0035  2837               	goto	u481_20
 13270  0036                     u481_21:
 13271  0036  283B               	goto	i1l361
 13272  0037                     u481_20:
 13273  0037                     i1l5043:
 13274                           
 13275                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR1_ISR();
 13276  0037  3188  209A  3180   	fcall	_TMR1_ISR
 13277                           
 13278                           ;interrupt_manager.c: 72: }
 13279  003A  284A               	goto	i1l368
 13280  003B                     i1l361:
 13281                           
 13282                           ;interrupt_manager.c: 73: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 13283  003B  1C99               	btfss	25,1	;volatile
 13284  003C  283E               	goto	u482_21
 13285  003D  283F               	goto	u482_20
 13286  003E                     u482_21:
 13287  003E  2844               	goto	i1l363
 13288  003F                     u482_20:
 13289  003F                     i1l5045:
 13290                           
 13291                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_busCollisionISR();
 13292  003F  1C8F               	btfss	15,1	;volatile
 13293  0040  2842               	goto	u483_21
 13294  0041  2843               	goto	u483_20
 13295  0042                     u483_21:
 13296  0042  2844               	goto	i1l363
 13297  0043                     u483_20:
 13298  0043  284A               	goto	i1l368
 13299  0044                     i1l363:
 13300                           
 13301                           ;interrupt_manager.c: 77: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 13302  0044  1C19               	btfss	25,0	;volatile
 13303  0045  2847               	goto	u484_21
 13304  0046  2848               	goto	u484_20
 13305  0047                     u484_21:
 13306  0047  284A               	goto	i1l362
 13307  0048                     u484_20:
 13308  0048                     i1l5049:
 13309                           
 13310                           ;interrupt_manager.c: 78: {;interrupt_manager.c: 79: i2c1_driver_i2cISR();
 13311  0048  080F               	movf	15,w	;volatile
 13312  0049  284A               	goto	i1l368
 13313  004A                     i1l362:
 13314  004A                     i1l368:
 13315  004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13316  004B  0009               	retfie
 13317  004C                     __end_of_INTERRUPT_InterruptManager:
 13318                           
 13319                           	psect	text32
 13320  08C8                     __ptext32:	
 13321 ;; *************** function _TMR5_ISR *****************
 13322 ;; Defined at:
 13323 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 13324 ;; Parameters:    Size  Location     Type
 13325 ;;		None
 13326 ;; Auto vars:     Size  Location     Type
 13327 ;;		None
 13328 ;; Return value:  Size  Location     Type
 13329 ;;                  1    wreg      void 
 13330 ;; Registers used:
 13331 ;;		wreg, status,2, status,0, pclath, cstack
 13332 ;; Tracked objects:
 13333 ;;		On entry : 0/0
 13334 ;;		On exit  : 0/0
 13335 ;;		Unchanged: 0/0
 13336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13341 ;;Total ram usage:        0 bytes
 13342 ;; Hardware stack levels used:    1
 13343 ;; Hardware stack levels required when called:    3
 13344 ;; This function calls:
 13345 ;;		Absolute function
 13346 ;;		_TMR5_DefaultInterruptHandler
 13347 ;;		_TMR5_WriteTimer
 13348 ;;		_monitoring_ISR
 13349 ;; This function is called by:
 13350 ;;		_INTERRUPT_InterruptManager
 13351 ;; This function uses a non-reentrant model
 13352 ;;
 13353                           
 13354                           
 13355                           ;psect for function _TMR5_ISR
 13356  08C8                     _TMR5_ISR:
 13357  08C8                     i1l4787:	
 13358                           ;incstack = 0
 13359                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 13360                           
 13361                           
 13362                           ;tmr5.c: 168: PIR4bits.TMR5IF = 0;
 13363  08C8  002E               	movlb	14	; select bank14
 13364  08C9  1210               	bcf	16,4	;volatile
 13365  08CA                     i1l4789:
 13366                           
 13367                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 13368  08CA  0021               	movlb	1	; select bank1
 13369  08CB  0836               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 13370  08CC  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 13371  08CD  0835               	movf	_timer5ReloadVal^(0+128),w	;volatile
 13372  08CE  00F0               	movwf	TMR5_WriteTimer@timerVal
 13373  08CF  3188  203B  3188   	fcall	_TMR5_WriteTimer
 13374  08D2                     i1l4791:
 13375                           
 13376                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 13377  08D2  0021               	movlb	1	; select bank1
 13378  08D3  0833               	movf	_TMR5_InterruptHandler^(0+128),w
 13379  08D4  0434               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 13380  08D5  1903               	btfsc	3,2
 13381  08D6  28D8               	goto	u424_21
 13382  08D7  28D9               	goto	u424_20
 13383  08D8                     u424_21:
 13384  08D8  28DE               	goto	i1l714
 13385  08D9                     u424_20:
 13386  08D9                     i1l4793:
 13387                           
 13388                           ;tmr5.c: 172: {;tmr5.c: 173: TMR5_InterruptHandler();
 13389  08D9  0834               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 13390  08DA  008A               	movwf	10
 13391  08DB  0833               	movf	_TMR5_InterruptHandler^(0+128),w
 13392  08DC  000A               	callw
 13393  08DD  3188               	pagesel	$
 13394  08DE                     i1l714:
 13395  08DE  0008               	return
 13396  08DF                     __end_of_TMR5_ISR:
 13397                           
 13398                           	psect	text33
 13399  0003                     __ptext33:	
 13400 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 13401 ;; Defined at:
 13402 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 13403 ;; Parameters:    Size  Location     Type
 13404 ;;		None
 13405 ;; Auto vars:     Size  Location     Type
 13406 ;;		None
 13407 ;; Return value:  Size  Location     Type
 13408 ;;                  1    wreg      void 
 13409 ;; Registers used:
 13410 ;;		None
 13411 ;; Tracked objects:
 13412 ;;		On entry : 0/0
 13413 ;;		On exit  : 0/0
 13414 ;;		Unchanged: 0/0
 13415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13420 ;;Total ram usage:        0 bytes
 13421 ;; Hardware stack levels used:    1
 13422 ;; This function calls:
 13423 ;;		Nothing
 13424 ;; This function is called by:
 13425 ;;		_TMR5_Initialize
 13426 ;;		_TMR5_ISR
 13427 ;; This function uses a non-reentrant model
 13428 ;;
 13429                           
 13430                           
 13431                           ;psect for function _TMR5_DefaultInterruptHandler
 13432  0003                     _TMR5_DefaultInterruptHandler:
 13433  0003                     i1l720:	
 13434                           ;incstack = 0
 13435                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 13436                           
 13437  0003  0008               	return
 13438  0004                     __end_of_TMR5_DefaultInterruptHandler:
 13439                           
 13440                           	psect	text34
 13441  05E1                     __ptext34:	
 13442 ;; *************** function _monitoring_ISR *****************
 13443 ;; Defined at:
 13444 ;;		line 446 in file "main.c"
 13445 ;; Parameters:    Size  Location     Type
 13446 ;;		None
 13447 ;; Auto vars:     Size  Location     Type
 13448 ;;		None
 13449 ;; Return value:  Size  Location     Type
 13450 ;;                  1    wreg      void 
 13451 ;; Registers used:
 13452 ;;		wreg, status,2, status,0, pclath, cstack
 13453 ;; Tracked objects:
 13454 ;;		On entry : 0/0
 13455 ;;		On exit  : 0/0
 13456 ;;		Unchanged: 0/0
 13457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13460 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13461 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13462 ;;Total ram usage:        3 bytes
 13463 ;; Hardware stack levels used:    1
 13464 ;; Hardware stack levels required when called:    2
 13465 ;; This function calls:
 13466 ;;		_ADCC_GetSingleConversion
 13467 ;;		___wmul
 13468 ;;		_tsttc
 13469 ;;		i1_DATAEE_WriteByte
 13470 ;; This function is called by:
 13471 ;;		_main
 13472 ;;		_TMR5_ISR
 13473 ;; This function uses a non-reentrant model
 13474 ;;
 13475                           
 13476                           
 13477                           ;psect for function _monitoring_ISR
 13478  05E1                     _monitoring_ISR:
 13479  05E1                     i1l4691:	
 13480                           ;incstack = 0
 13481                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 13482                           
 13483                           
 13484                           ;main.c: 447: temp = (uint8_t)tsttc();
 13485  05E1  318E  26F3  3185   	fcall	_tsttc
 13486  05E4  00FA               	movwf	??_monitoring_ISR
 13487  05E5  087A               	movf	??_monitoring_ISR,w
 13488  05E6  0020               	movlb	0	; select bank0
 13489  05E7  00E3               	movwf	_temp
 13490                           
 13491                           ;main.c: 449: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 13492  05E8  3000               	movlw	0
 13493  05E9  3188  205E  3185   	fcall	_ADCC_GetSingleConversion
 13494  05EC  0870               	movf	?_ADCC_GetSingleConversion,w
 13495  05ED  00FA               	movwf	??_monitoring_ISR
 13496  05EE  0871               	movf	?_ADCC_GetSingleConversion+1,w
 13497  05EF  00FB               	movwf	??_monitoring_ISR+1
 13498  05F0  300D               	movlw	13
 13499  05F1                     u411_25:
 13500  05F1  36FB               	lsrf	??_monitoring_ISR+1,f
 13501  05F2  0CFA               	rrf	??_monitoring_ISR,f
 13502  05F3  0B89               	decfsz	9,f
 13503  05F4  2DF1               	goto	u411_25
 13504  05F5  087A               	movf	??_monitoring_ISR,w
 13505  05F6  00FC               	movwf	??_monitoring_ISR+2
 13506  05F7  087C               	movf	??_monitoring_ISR+2,w
 13507  05F8  0020               	movlb	0	; select bank0
 13508  05F9  00E2               	movwf	_lumLevel
 13509  05FA                     i1l4693:
 13510                           
 13511                           ;main.c: 451: if(prevTemp != temp || prevLumLevel != lumLevel){
 13512  05FA  0863               	movf	_temp,w
 13513  05FB  00FA               	movwf	??_monitoring_ISR
 13514  05FC  01FB               	clrf	??_monitoring_ISR+1
 13515  05FD  086D               	movf	_prevTemp+1,w
 13516  05FE  067B               	xorwf	??_monitoring_ISR+1,w
 13517  05FF  1D03               	skipz
 13518  0600  2E03               	goto	u412_25
 13519  0601  086C               	movf	_prevTemp,w
 13520  0602  067A               	xorwf	??_monitoring_ISR,w
 13521  0603                     u412_25:
 13522  0603  1D03               	skipz
 13523  0604  2E06               	goto	u412_21
 13524  0605  2E07               	goto	u412_20
 13525  0606                     u412_21:
 13526  0606  2E14               	goto	i1l4697
 13527  0607                     u412_20:
 13528  0607                     i1l4695:
 13529  0607  0862               	movf	_lumLevel,w
 13530  0608  00FA               	movwf	??_monitoring_ISR
 13531  0609  01FB               	clrf	??_monitoring_ISR+1
 13532  060A  086B               	movf	_prevLumLevel+1,w
 13533  060B  067B               	xorwf	??_monitoring_ISR+1,w
 13534  060C  1D03               	skipz
 13535  060D  2E10               	goto	u413_25
 13536  060E  086A               	movf	_prevLumLevel,w
 13537  060F  067A               	xorwf	??_monitoring_ISR,w
 13538  0610                     u413_25:
 13539  0610  1903               	skipnz
 13540  0611  2E13               	goto	u413_21
 13541  0612  2E14               	goto	u413_20
 13542  0613                     u413_21:
 13543  0613  2EC0               	goto	i1l4709
 13544  0614                     u413_20:
 13545  0614                     i1l4697:
 13546                           
 13547                           ;main.c: 453: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*0) , t.h);
 13548  0614  0021               	movlb	1	; select bank1
 13549  0615  0845               	movf	_idx_RingBuffer^(0+128),w
 13550  0616  00FA               	movwf	??_monitoring_ISR
 13551  0617  01FB               	clrf	??_monitoring_ISR+1
 13552  0618  087A               	movf	??_monitoring_ISR,w
 13553  0619  00F0               	movwf	___wmul@multiplier
 13554  061A  087B               	movf	??_monitoring_ISR+1,w
 13555  061B  00F1               	movwf	___wmul@multiplier+1
 13556  061C  3005               	movlw	5
 13557  061D  00F2               	movwf	___wmul@multiplicand
 13558  061E  3000               	movlw	0
 13559  061F  00F3               	movwf	___wmul@multiplicand+1
 13560  0620  3189  2147  3185   	fcall	___wmul
 13561  0623  0870               	movf	?___wmul,w
 13562  0624  3E14               	addlw	20
 13563  0625  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13564  0626  3070               	movlw	112
 13565  0627  3D71               	addwfc	?___wmul+1,w
 13566  0628  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13567  0629  0020               	movlb	0	; select bank0
 13568  062A  0857               	movf	_t,w
 13569  062B  00FC               	movwf	??_monitoring_ISR+2
 13570  062C  087C               	movf	??_monitoring_ISR+2,w
 13571  062D  00F8               	movwf	i1DATAEE_WriteByte@bData
 13572  062E  3189  2129  3185   	fcall	i1_DATAEE_WriteByte
 13573                           
 13574                           ;main.c: 454: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*1) , t.m);
 13575  0631  0021               	movlb	1	; select bank1
 13576  0632  0845               	movf	_idx_RingBuffer^(0+128),w
 13577  0633  00FA               	movwf	??_monitoring_ISR
 13578  0634  01FB               	clrf	??_monitoring_ISR+1
 13579  0635  087A               	movf	??_monitoring_ISR,w
 13580  0636  00F0               	movwf	___wmul@multiplier
 13581  0637  087B               	movf	??_monitoring_ISR+1,w
 13582  0638  00F1               	movwf	___wmul@multiplier+1
 13583  0639  3005               	movlw	5
 13584  063A  00F2               	movwf	___wmul@multiplicand
 13585  063B  3000               	movlw	0
 13586  063C  00F3               	movwf	___wmul@multiplicand+1
 13587  063D  3189  2147  3185   	fcall	___wmul
 13588  0640  0870               	movf	?___wmul,w
 13589  0641  3E1C               	addlw	28
 13590  0642  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13591  0643  3070               	movlw	112
 13592  0644  3D71               	addwfc	?___wmul+1,w
 13593  0645  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13594  0646  0020               	movlb	0	; select bank0
 13595  0647  0858               	movf	_t+1,w
 13596  0648  00FC               	movwf	??_monitoring_ISR+2
 13597  0649  087C               	movf	??_monitoring_ISR+2,w
 13598  064A  00F8               	movwf	i1DATAEE_WriteByte@bData
 13599  064B  3189  2129  3185   	fcall	i1_DATAEE_WriteByte
 13600                           
 13601                           ;main.c: 455: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*2) , t.s);
 13602  064E  0021               	movlb	1	; select bank1
 13603  064F  0845               	movf	_idx_RingBuffer^(0+128),w
 13604  0650  00FA               	movwf	??_monitoring_ISR
 13605  0651  01FB               	clrf	??_monitoring_ISR+1
 13606  0652  087A               	movf	??_monitoring_ISR,w
 13607  0653  00F0               	movwf	___wmul@multiplier
 13608  0654  087B               	movf	??_monitoring_ISR+1,w
 13609  0655  00F1               	movwf	___wmul@multiplier+1
 13610  0656  3005               	movlw	5
 13611  0657  00F2               	movwf	___wmul@multiplicand
 13612  0658  3000               	movlw	0
 13613  0659  00F3               	movwf	___wmul@multiplicand+1
 13614  065A  3189  2147  3185   	fcall	___wmul
 13615  065D  0870               	movf	?___wmul,w
 13616  065E  3E24               	addlw	36
 13617  065F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13618  0660  3070               	movlw	112
 13619  0661  3D71               	addwfc	?___wmul+1,w
 13620  0662  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13621  0663  0020               	movlb	0	; select bank0
 13622  0664  0859               	movf	_t+2,w
 13623  0665  00FC               	movwf	??_monitoring_ISR+2
 13624  0666  087C               	movf	??_monitoring_ISR+2,w
 13625  0667  00F8               	movwf	i1DATAEE_WriteByte@bData
 13626  0668  3189  2129  3185   	fcall	i1_DATAEE_WriteByte
 13627                           
 13628                           ;main.c: 456: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*3) , temp);
 13629  066B  0021               	movlb	1	; select bank1
 13630  066C  0845               	movf	_idx_RingBuffer^(0+128),w
 13631  066D  00FA               	movwf	??_monitoring_ISR
 13632  066E  01FB               	clrf	??_monitoring_ISR+1
 13633  066F  087A               	movf	??_monitoring_ISR,w
 13634  0670  00F0               	movwf	___wmul@multiplier
 13635  0671  087B               	movf	??_monitoring_ISR+1,w
 13636  0672  00F1               	movwf	___wmul@multiplier+1
 13637  0673  3005               	movlw	5
 13638  0674  00F2               	movwf	___wmul@multiplicand
 13639  0675  3000               	movlw	0
 13640  0676  00F3               	movwf	___wmul@multiplicand+1
 13641  0677  3189  2147  3185   	fcall	___wmul
 13642  067A  0870               	movf	?___wmul,w
 13643  067B  3E2C               	addlw	44
 13644  067C  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13645  067D  3070               	movlw	112
 13646  067E  3D71               	addwfc	?___wmul+1,w
 13647  067F  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13648  0680  0020               	movlb	0	; select bank0
 13649  0681  0863               	movf	_temp,w
 13650  0682  00FC               	movwf	??_monitoring_ISR+2
 13651  0683  087C               	movf	??_monitoring_ISR+2,w
 13652  0684  00F8               	movwf	i1DATAEE_WriteByte@bData
 13653  0685  3189  2129  3185   	fcall	i1_DATAEE_WriteByte
 13654                           
 13655                           ;main.c: 457: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*4) , lumLevel);
 13656  0688  0021               	movlb	1	; select bank1
 13657  0689  0845               	movf	_idx_RingBuffer^(0+128),w
 13658  068A  00FA               	movwf	??_monitoring_ISR
 13659  068B  01FB               	clrf	??_monitoring_ISR+1
 13660  068C  087A               	movf	??_monitoring_ISR,w
 13661  068D  00F0               	movwf	___wmul@multiplier
 13662  068E  087B               	movf	??_monitoring_ISR+1,w
 13663  068F  00F1               	movwf	___wmul@multiplier+1
 13664  0690  3005               	movlw	5
 13665  0691  00F2               	movwf	___wmul@multiplicand
 13666  0692  3000               	movlw	0
 13667  0693  00F3               	movwf	___wmul@multiplicand+1
 13668  0694  3189  2147  3185   	fcall	___wmul
 13669  0697  0870               	movf	?___wmul,w
 13670  0698  3E34               	addlw	52
 13671  0699  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13672  069A  3070               	movlw	112
 13673  069B  3D71               	addwfc	?___wmul+1,w
 13674  069C  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13675  069D  0020               	movlb	0	; select bank0
 13676  069E  0862               	movf	_lumLevel,w
 13677  069F  00FC               	movwf	??_monitoring_ISR+2
 13678  06A0  087C               	movf	??_monitoring_ISR+2,w
 13679  06A1  00F8               	movwf	i1DATAEE_WriteByte@bData
 13680  06A2  3189  2129  3185   	fcall	i1_DATAEE_WriteByte
 13681  06A5                     i1l4699:
 13682                           
 13683                           ;main.c: 459: idx_RingBuffer++;
 13684  06A5  3001               	movlw	1
 13685  06A6  00FA               	movwf	??_monitoring_ISR
 13686  06A7  087A               	movf	??_monitoring_ISR,w
 13687  06A8  0021               	movlb	1	; select bank1
 13688  06A9  07C5               	addwf	_idx_RingBuffer^(0+128),f
 13689  06AA                     i1l4701:
 13690                           
 13691                           ;main.c: 460: if(idx_RingBuffer > NREG){
 13692  06AA  0845               	movf	_idx_RingBuffer^(0+128),w
 13693  06AB  0247               	subwf	_NREG^(0+128),w
 13694  06AC  1803               	skipnc
 13695  06AD  2EAF               	goto	u414_21
 13696  06AE  2EB0               	goto	u414_20
 13697  06AF                     u414_21:
 13698  06AF  2EB1               	goto	i1l4705
 13699  06B0                     u414_20:
 13700  06B0                     i1l4703:
 13701                           
 13702                           ;main.c: 461: idx_RingBuffer = 0;
 13703  06B0  01C5               	clrf	_idx_RingBuffer^(0+128)
 13704  06B1                     i1l4705:
 13705                           
 13706                           ;main.c: 462: };main.c: 463: prevTemp = temp;
 13707  06B1  0020               	movlb	0	; select bank0
 13708  06B2  0863               	movf	_temp,w
 13709  06B3  00FA               	movwf	??_monitoring_ISR
 13710  06B4  01FB               	clrf	??_monitoring_ISR+1
 13711  06B5  087A               	movf	??_monitoring_ISR,w
 13712  06B6  00EC               	movwf	_prevTemp
 13713  06B7  087B               	movf	??_monitoring_ISR+1,w
 13714  06B8  00ED               	movwf	_prevTemp+1
 13715  06B9                     i1l4707:
 13716                           
 13717                           ;main.c: 464: prevLumLevel = lumLevel;
 13718  06B9  0862               	movf	_lumLevel,w
 13719  06BA  00FA               	movwf	??_monitoring_ISR
 13720  06BB  01FB               	clrf	??_monitoring_ISR+1
 13721  06BC  087A               	movf	??_monitoring_ISR,w
 13722  06BD  00EA               	movwf	_prevLumLevel
 13723  06BE  087B               	movf	??_monitoring_ISR+1,w
 13724  06BF  00EB               	movwf	_prevLumLevel+1
 13725  06C0                     i1l4709:
 13726                           
 13727                           ;main.c: 465: };main.c: 468: if(ALAF == 'A'){
 13728  06C0  3041               	movlw	65
 13729  06C1  0665               	xorwf	_ALAF,w
 13730  06C2  1D03               	btfss	3,2
 13731  06C3  2EC5               	goto	u415_21
 13732  06C4  2EC6               	goto	u415_20
 13733  06C5                     u415_21:
 13734  06C5  2EFE               	goto	i1l1270
 13735  06C6                     u415_20:
 13736  06C6                     i1l4711:
 13737                           
 13738                           ;main.c: 470: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 13739  06C6  0851               	movf	_lumAlarm,w
 13740  06C7  0262               	subwf	_lumLevel,w
 13741  06C8  1803               	skipnc
 13742  06C9  2ECB               	goto	u416_21
 13743  06CA  2ECC               	goto	u416_20
 13744  06CB                     u416_21:
 13745  06CB  2EE0               	goto	i1l4725
 13746  06CC                     u416_20:
 13747  06CC                     i1l4713:
 13748  06CC  0860               	movf	_editingLumAlarm,w
 13749  06CD  1D03               	btfss	3,2
 13750  06CE  2ED0               	goto	u417_21
 13751  06CF  2ED1               	goto	u417_20
 13752  06D0                     u417_21:
 13753  06D0  2EE0               	goto	i1l4725
 13754  06D1                     u417_20:
 13755  06D1                     i1l4715:
 13756                           
 13757                           ;main.c: 471: if(!lumAlarm.triggered){
 13758  06D1  0853               	movf	_lumAlarm+2,w
 13759  06D2  1D03               	btfss	3,2
 13760  06D3  2ED5               	goto	u418_21
 13761  06D4  2ED6               	goto	u418_20
 13762  06D5                     u418_21:
 13763  06D5  2EDA               	goto	i1l4719
 13764  06D6                     u418_20:
 13765  06D6                     i1l4717:
 13766                           
 13767                           ;main.c: 472: alarmPWMStart.h = 0xff;
 13768  06D6  30FF               	movlw	255
 13769  06D7  00FA               	movwf	??_monitoring_ISR
 13770  06D8  087A               	movf	??_monitoring_ISR,w
 13771  06D9  00E7               	movwf	_alarmPWMStart
 13772  06DA                     i1l4719:
 13773                           
 13774                           ;main.c: 473: };main.c: 474: lumAlarm.triggered = 1;
 13775  06DA  01D3               	clrf	_lumAlarm+2
 13776  06DB  0AD3               	incf	_lumAlarm+2,f
 13777  06DC                     i1l4721:
 13778                           
 13779                           ;main.c: 476: lumAlarm.trigger = 1;
 13780  06DC  01D2               	clrf	_lumAlarm+1
 13781  06DD  0AD2               	incf	_lumAlarm+1,f
 13782  06DE                     i1l4723:
 13783  06DE  1616               	bsf	22,4	;volatile
 13784  06DF  2EE2               	goto	i1l4729
 13785  06E0                     i1l4725:
 13786                           
 13787                           ;main.c: 479: lumAlarm.triggered = 0;
 13788  06E0  01D3               	clrf	_lumAlarm+2
 13789  06E1                     i1l4727:
 13790  06E1  1216               	bcf	22,4	;volatile
 13791  06E2                     i1l4729:
 13792                           
 13793                           ;main.c: 481: };main.c: 484: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 13794  06E2  0863               	movf	_temp,w
 13795  06E3  0254               	subwf	_tempAlarm,w
 13796  06E4  1803               	skipnc
 13797  06E5  2EE7               	goto	u419_21
 13798  06E6  2EE8               	goto	u419_20
 13799  06E7                     u419_21:
 13800  06E7  2EFC               	goto	i1l4743
 13801  06E8                     u419_20:
 13802  06E8                     i1l4731:
 13803  06E8  0861               	movf	_editingTempAlarm,w
 13804  06E9  1D03               	btfss	3,2
 13805  06EA  2EEC               	goto	u420_21
 13806  06EB  2EED               	goto	u420_20
 13807  06EC                     u420_21:
 13808  06EC  2EFC               	goto	i1l4743
 13809  06ED                     u420_20:
 13810  06ED                     i1l4733:
 13811                           
 13812                           ;main.c: 485: if(!tempAlarm.triggered){
 13813  06ED  0856               	movf	_tempAlarm+2,w
 13814  06EE  1D03               	btfss	3,2
 13815  06EF  2EF1               	goto	u421_21
 13816  06F0  2EF2               	goto	u421_20
 13817  06F1                     u421_21:
 13818  06F1  2EF6               	goto	i1l4737
 13819  06F2                     u421_20:
 13820  06F2                     i1l4735:
 13821                           
 13822                           ;main.c: 486: alarmPWMStart.h = 0xff;
 13823  06F2  30FF               	movlw	255
 13824  06F3  00FA               	movwf	??_monitoring_ISR
 13825  06F4  087A               	movf	??_monitoring_ISR,w
 13826  06F5  00E7               	movwf	_alarmPWMStart
 13827  06F6                     i1l4737:
 13828                           
 13829                           ;main.c: 487: };main.c: 489: tempAlarm.triggered = 1;
 13830  06F6  01D6               	clrf	_tempAlarm+2
 13831  06F7  0AD6               	incf	_tempAlarm+2,f
 13832  06F8                     i1l4739:
 13833                           
 13834                           ;main.c: 491: tempAlarm.trigger = 1;
 13835  06F8  01D5               	clrf	_tempAlarm+1
 13836  06F9  0AD5               	incf	_tempAlarm+1,f
 13837  06FA                     i1l4741:
 13838  06FA  1696               	bsf	22,5	;volatile
 13839  06FB  2EFE               	goto	i1l1270
 13840  06FC                     i1l4743:
 13841                           
 13842                           ;main.c: 495: tempAlarm.triggered = 0;
 13843  06FC  01D6               	clrf	_tempAlarm+2
 13844  06FD                     i1l4745:
 13845  06FD  1296               	bcf	22,5	;volatile
 13846  06FE                     i1l1270:
 13847  06FE  0008               	return
 13848  06FF                     __end_of_monitoring_ISR:
 13849                           
 13850                           	psect	text35
 13851  0EF3                     __ptext35:	
 13852 ;; *************** function _tsttc *****************
 13853 ;; Defined at:
 13854 ;;		line 76 in file "main.c"
 13855 ;; Parameters:    Size  Location     Type
 13856 ;;		None
 13857 ;; Auto vars:     Size  Location     Type
 13858 ;;  value           1    3[COMMON] unsigned char 
 13859 ;; Return value:  Size  Location     Type
 13860 ;;                  1    wreg      unsigned char 
 13861 ;; Registers used:
 13862 ;;		wreg, status,2, status,0, pclath, cstack
 13863 ;; Tracked objects:
 13864 ;;		On entry : 0/0
 13865 ;;		On exit  : 0/0
 13866 ;;		Unchanged: 0/0
 13867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13872 ;;Total ram usage:        2 bytes
 13873 ;; Hardware stack levels used:    1
 13874 ;; Hardware stack levels required when called:    1
 13875 ;; This function calls:
 13876 ;;		_ReadI2C
 13877 ;;		i1_WriteI2C
 13878 ;; This function is called by:
 13879 ;;		_monitoring_ISR
 13880 ;; This function uses a non-reentrant model
 13881 ;;
 13882                           
 13883                           
 13884                           ;psect for function _tsttc
 13885  0EF3                     _tsttc:
 13886  0EF3                     i1l919:	
 13887                           ;incstack = 0
 13888                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 13889                           ;main.c: 78: unsigned char value;;main.c: 79: do{
 13890                           
 13891  0EF3                     i1l4053:	
 13892                           ;main.c: 80: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13893                           
 13894  0EF3  0023               	movlb	3	; select bank3
 13895  0EF4  0C0F               	rrf	15,w	;volatile
 13896  0EF5  0C89               	rrf	9,f
 13897  0EF6  3901               	andlw	1
 13898  0EF7  00F2               	movwf	??_tsttc
 13899  0EF8  0811               	movf	17,w	;volatile
 13900  0EF9  391F               	andlw	31
 13901  0EFA  0472               	iorwf	??_tsttc,w
 13902  0EFB  1D03               	btfss	3,2
 13903  0EFC  2EFE               	goto	u303_21
 13904  0EFD  2EFF               	goto	u303_20
 13905  0EFE                     u303_21:
 13906  0EFE  2EF3               	goto	i1l4053
 13907  0EFF                     u303_20:
 13908  0EFF                     i1l922:
 13909                           
 13910                           ;main.c: 81: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 13911  0EFF  1411               	bsf	17,0	;volatile
 13912  0F00                     i1l923:
 13913  0F00  1811               	btfsc	17,0	;volatile
 13914  0F01  2F03               	goto	u304_21
 13915  0F02  2F04               	goto	u304_20
 13916  0F03                     u304_21:
 13917  0F03  2F00               	goto	i1l923
 13918  0F04                     u304_20:
 13919  0F04                     i1l4055:
 13920  0F04  0C0F               	rrf	15,w	;volatile
 13921  0F05  0C89               	rrf	9,f
 13922  0F06  3901               	andlw	1
 13923  0F07  00F2               	movwf	??_tsttc
 13924  0F08  0811               	movf	17,w	;volatile
 13925  0F09  391F               	andlw	31
 13926  0F0A  0472               	iorwf	??_tsttc,w
 13927  0F0B  1D03               	btfss	3,2
 13928  0F0C  2F0E               	goto	u305_21
 13929  0F0D  2F0F               	goto	u305_20
 13930  0F0E                     u305_21:
 13931  0F0E  2F04               	goto	i1l4055
 13932  0F0F                     u305_20:
 13933  0F0F                     i1l4057:
 13934                           
 13935                           ;main.c: 83: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13936  0F0F  309A               	movlw	154
 13937  0F10  318B  23A6  318E   	fcall	i1_WriteI2C
 13938  0F13                     i1l4059:
 13939  0F13  0023               	movlb	3	; select bank3
 13940  0F14  0C0F               	rrf	15,w	;volatile
 13941  0F15  0C89               	rrf	9,f
 13942  0F16  3901               	andlw	1
 13943  0F17  00F2               	movwf	??_tsttc
 13944  0F18  0811               	movf	17,w	;volatile
 13945  0F19  391F               	andlw	31
 13946  0F1A  0472               	iorwf	??_tsttc,w
 13947  0F1B  1D03               	btfss	3,2
 13948  0F1C  2F1E               	goto	u306_21
 13949  0F1D  2F1F               	goto	u306_20
 13950  0F1E                     u306_21:
 13951  0F1E  2F13               	goto	i1l4059
 13952  0F1F                     u306_20:
 13953  0F1F                     i1l4061:
 13954                           
 13955                           ;main.c: 84: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13956  0F1F  3001               	movlw	1
 13957  0F20  318B  23A6  318E   	fcall	i1_WriteI2C
 13958  0F23                     i1l4063:
 13959  0F23  0023               	movlb	3	; select bank3
 13960  0F24  0C0F               	rrf	15,w	;volatile
 13961  0F25  0C89               	rrf	9,f
 13962  0F26  3901               	andlw	1
 13963  0F27  00F2               	movwf	??_tsttc
 13964  0F28  0811               	movf	17,w	;volatile
 13965  0F29  391F               	andlw	31
 13966  0F2A  0472               	iorwf	??_tsttc,w
 13967  0F2B  1D03               	btfss	3,2
 13968  0F2C  2F2E               	goto	u307_21
 13969  0F2D  2F2F               	goto	u307_20
 13970  0F2E                     u307_21:
 13971  0F2E  2F23               	goto	i1l4063
 13972  0F2F                     u307_20:
 13973  0F2F                     i1l934:
 13974                           
 13975                           ;main.c: 85: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 13976  0F2F  1491               	bsf	17,1	;volatile
 13977  0F30                     i1l935:
 13978  0F30  1891               	btfsc	17,1	;volatile
 13979  0F31  2F33               	goto	u308_21
 13980  0F32  2F34               	goto	u308_20
 13981  0F33                     u308_21:
 13982  0F33  2F30               	goto	i1l935
 13983  0F34                     u308_20:
 13984  0F34                     i1l4065:
 13985  0F34  0C0F               	rrf	15,w	;volatile
 13986  0F35  0C89               	rrf	9,f
 13987  0F36  3901               	andlw	1
 13988  0F37  00F2               	movwf	??_tsttc
 13989  0F38  0811               	movf	17,w	;volatile
 13990  0F39  391F               	andlw	31
 13991  0F3A  0472               	iorwf	??_tsttc,w
 13992  0F3B  1D03               	btfss	3,2
 13993  0F3C  2F3E               	goto	u309_21
 13994  0F3D  2F3F               	goto	u309_20
 13995  0F3E                     u309_21:
 13996  0F3E  2F34               	goto	i1l4065
 13997  0F3F                     u309_20:
 13998  0F3F                     i1l4067:
 13999                           
 14000                           ;main.c: 86: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14001  0F3F  309B               	movlw	155
 14002  0F40  318B  23A6  318E   	fcall	i1_WriteI2C
 14003  0F43                     i1l4069:
 14004  0F43  0023               	movlb	3	; select bank3
 14005  0F44  0C0F               	rrf	15,w	;volatile
 14006  0F45  0C89               	rrf	9,f
 14007  0F46  3901               	andlw	1
 14008  0F47  00F2               	movwf	??_tsttc
 14009  0F48  0811               	movf	17,w	;volatile
 14010  0F49  391F               	andlw	31
 14011  0F4A  0472               	iorwf	??_tsttc,w
 14012  0F4B  1D03               	btfss	3,2
 14013  0F4C  2F4E               	goto	u310_21
 14014  0F4D  2F4F               	goto	u310_20
 14015  0F4E                     u310_21:
 14016  0F4E  2F43               	goto	i1l4069
 14017  0F4F                     u310_20:
 14018  0F4F                     i1l4071:
 14019                           
 14020                           ;main.c: 87: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14021  0F4F  3189  210F  318E   	fcall	_ReadI2C
 14022  0F52  00F2               	movwf	??_tsttc
 14023  0F53  0872               	movf	??_tsttc,w
 14024  0F54  00F3               	movwf	tsttc@value
 14025  0F55                     i1l4073:
 14026  0F55  0023               	movlb	3	; select bank3
 14027  0F56  0C0F               	rrf	15,w	;volatile
 14028  0F57  0C89               	rrf	9,f
 14029  0F58  3901               	andlw	1
 14030  0F59  00F2               	movwf	??_tsttc
 14031  0F5A  0811               	movf	17,w	;volatile
 14032  0F5B  391F               	andlw	31
 14033  0F5C  0472               	iorwf	??_tsttc,w
 14034  0F5D  1D03               	btfss	3,2
 14035  0F5E  2F60               	goto	u311_21
 14036  0F5F  2F61               	goto	u311_20
 14037  0F60                     u311_21:
 14038  0F60  2F55               	goto	i1l4073
 14039  0F61                     u311_20:
 14040  0F61                     i1l946:
 14041                           
 14042                           ;main.c: 88: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14043  0F61  1691               	bsf	17,5	;volatile
 14044  0F62  1611               	bsf	17,4	;volatile
 14045  0F63                     i1l947:
 14046  0F63  1A11               	btfsc	17,4	;volatile
 14047  0F64  2F66               	goto	u312_21
 14048  0F65  2F67               	goto	u312_20
 14049  0F66                     u312_21:
 14050  0F66  2F63               	goto	i1l947
 14051  0F67                     u312_20:
 14052  0F67                     i1l4075:
 14053  0F67  0C0F               	rrf	15,w	;volatile
 14054  0F68  0C89               	rrf	9,f
 14055  0F69  3901               	andlw	1
 14056  0F6A  00F2               	movwf	??_tsttc
 14057  0F6B  0811               	movf	17,w	;volatile
 14058  0F6C  391F               	andlw	31
 14059  0F6D  0472               	iorwf	??_tsttc,w
 14060  0F6E  1D03               	btfss	3,2
 14061  0F6F  2F71               	goto	u313_21
 14062  0F70  2F72               	goto	u313_20
 14063  0F71                     u313_21:
 14064  0F71  2F67               	goto	i1l4075
 14065  0F72                     u313_20:
 14066  0F72                     i1l952:
 14067                           
 14068                           ;main.c: 89: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14069  0F72  1511               	bsf	17,2	;volatile
 14070  0F73                     i1l953:
 14071  0F73  1911               	btfsc	17,2	;volatile
 14072  0F74  2F76               	goto	u314_21
 14073  0F75  2F77               	goto	u314_20
 14074  0F76                     u314_21:
 14075  0F76  2F73               	goto	i1l953
 14076  0F77                     u314_20:
 14077  0F77                     i1l955:
 14078                           
 14079                           ;main.c: 90: } while (!(value & 0x40));
 14080  0F77  1F73               	btfss	tsttc@value,6
 14081  0F78  2F7A               	goto	u315_21
 14082  0F79  2F7B               	goto	u315_20
 14083  0F7A                     u315_21:
 14084  0F7A  2EF3               	goto	i1l919
 14085  0F7B                     u315_20:
 14086  0F7B                     i1l4077:
 14087  0F7B  0C0F               	rrf	15,w	;volatile
 14088  0F7C  0C89               	rrf	9,f
 14089  0F7D  3901               	andlw	1
 14090  0F7E  00F2               	movwf	??_tsttc
 14091  0F7F  0811               	movf	17,w	;volatile
 14092  0F80  391F               	andlw	31
 14093  0F81  0472               	iorwf	??_tsttc,w
 14094  0F82  1D03               	btfss	3,2
 14095  0F83  2F85               	goto	u316_21
 14096  0F84  2F86               	goto	u316_20
 14097  0F85                     u316_21:
 14098  0F85  2F7B               	goto	i1l4077
 14099  0F86                     u316_20:
 14100  0F86                     i1l959:
 14101                           
 14102                           ;main.c: 93: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 14103  0F86  1411               	bsf	17,0	;volatile
 14104  0F87                     i1l960:
 14105  0F87  1811               	btfsc	17,0	;volatile
 14106  0F88  2F8A               	goto	u317_21
 14107  0F89  2F8B               	goto	u317_20
 14108  0F8A                     u317_21:
 14109  0F8A  2F87               	goto	i1l960
 14110  0F8B                     u317_20:
 14111  0F8B                     i1l4079:
 14112  0F8B  0C0F               	rrf	15,w	;volatile
 14113  0F8C  0C89               	rrf	9,f
 14114  0F8D  3901               	andlw	1
 14115  0F8E  00F2               	movwf	??_tsttc
 14116  0F8F  0811               	movf	17,w	;volatile
 14117  0F90  391F               	andlw	31
 14118  0F91  0472               	iorwf	??_tsttc,w
 14119  0F92  1D03               	btfss	3,2
 14120  0F93  2F95               	goto	u318_21
 14121  0F94  2F96               	goto	u318_20
 14122  0F95                     u318_21:
 14123  0F95  2F8B               	goto	i1l4079
 14124  0F96                     u318_20:
 14125  0F96                     i1l4081:
 14126                           
 14127                           ;main.c: 94: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14128  0F96  309A               	movlw	154
 14129  0F97  318B  23A6  318E   	fcall	i1_WriteI2C
 14130  0F9A                     i1l4083:
 14131  0F9A  0023               	movlb	3	; select bank3
 14132  0F9B  0C0F               	rrf	15,w	;volatile
 14133  0F9C  0C89               	rrf	9,f
 14134  0F9D  3901               	andlw	1
 14135  0F9E  00F2               	movwf	??_tsttc
 14136  0F9F  0811               	movf	17,w	;volatile
 14137  0FA0  391F               	andlw	31
 14138  0FA1  0472               	iorwf	??_tsttc,w
 14139  0FA2  1D03               	btfss	3,2
 14140  0FA3  2FA5               	goto	u319_21
 14141  0FA4  2FA6               	goto	u319_20
 14142  0FA5                     u319_21:
 14143  0FA5  2F9A               	goto	i1l4083
 14144  0FA6                     u319_20:
 14145  0FA6                     i1l4085:
 14146                           
 14147                           ;main.c: 95: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14148  0FA6  3000               	movlw	0
 14149  0FA7  318B  23A6  318E   	fcall	i1_WriteI2C
 14150  0FAA                     i1l4087:
 14151  0FAA  0023               	movlb	3	; select bank3
 14152  0FAB  0C0F               	rrf	15,w	;volatile
 14153  0FAC  0C89               	rrf	9,f
 14154  0FAD  3901               	andlw	1
 14155  0FAE  00F2               	movwf	??_tsttc
 14156  0FAF  0811               	movf	17,w	;volatile
 14157  0FB0  391F               	andlw	31
 14158  0FB1  0472               	iorwf	??_tsttc,w
 14159  0FB2  1D03               	btfss	3,2
 14160  0FB3  2FB5               	goto	u320_21
 14161  0FB4  2FB6               	goto	u320_20
 14162  0FB5                     u320_21:
 14163  0FB5  2FAA               	goto	i1l4087
 14164  0FB6                     u320_20:
 14165  0FB6                     i1l971:
 14166                           
 14167                           ;main.c: 96: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 14168  0FB6  1491               	bsf	17,1	;volatile
 14169  0FB7                     i1l972:
 14170  0FB7  1891               	btfsc	17,1	;volatile
 14171  0FB8  2FBA               	goto	u321_21
 14172  0FB9  2FBB               	goto	u321_20
 14173  0FBA                     u321_21:
 14174  0FBA  2FB7               	goto	i1l972
 14175  0FBB                     u321_20:
 14176  0FBB                     i1l4089:
 14177  0FBB  0C0F               	rrf	15,w	;volatile
 14178  0FBC  0C89               	rrf	9,f
 14179  0FBD  3901               	andlw	1
 14180  0FBE  00F2               	movwf	??_tsttc
 14181  0FBF  0811               	movf	17,w	;volatile
 14182  0FC0  391F               	andlw	31
 14183  0FC1  0472               	iorwf	??_tsttc,w
 14184  0FC2  1D03               	btfss	3,2
 14185  0FC3  2FC5               	goto	u322_21
 14186  0FC4  2FC6               	goto	u322_20
 14187  0FC5                     u322_21:
 14188  0FC5  2FBB               	goto	i1l4089
 14189  0FC6                     u322_20:
 14190  0FC6                     i1l4091:
 14191                           
 14192                           ;main.c: 97: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14193  0FC6  309B               	movlw	155
 14194  0FC7  318B  23A6  318E   	fcall	i1_WriteI2C
 14195  0FCA                     i1l4093:
 14196  0FCA  0023               	movlb	3	; select bank3
 14197  0FCB  0C0F               	rrf	15,w	;volatile
 14198  0FCC  0C89               	rrf	9,f
 14199  0FCD  3901               	andlw	1
 14200  0FCE  00F2               	movwf	??_tsttc
 14201  0FCF  0811               	movf	17,w	;volatile
 14202  0FD0  391F               	andlw	31
 14203  0FD1  0472               	iorwf	??_tsttc,w
 14204  0FD2  1D03               	btfss	3,2
 14205  0FD3  2FD5               	goto	u323_21
 14206  0FD4  2FD6               	goto	u323_20
 14207  0FD5                     u323_21:
 14208  0FD5  2FCA               	goto	i1l4093
 14209  0FD6                     u323_20:
 14210  0FD6                     i1l4095:
 14211                           
 14212                           ;main.c: 98: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14213  0FD6  3189  210F  318E   	fcall	_ReadI2C
 14214  0FD9  00F2               	movwf	??_tsttc
 14215  0FDA  0872               	movf	??_tsttc,w
 14216  0FDB  00F3               	movwf	tsttc@value
 14217  0FDC                     i1l4097:
 14218  0FDC  0023               	movlb	3	; select bank3
 14219  0FDD  0C0F               	rrf	15,w	;volatile
 14220  0FDE  0C89               	rrf	9,f
 14221  0FDF  3901               	andlw	1
 14222  0FE0  00F2               	movwf	??_tsttc
 14223  0FE1  0811               	movf	17,w	;volatile
 14224  0FE2  391F               	andlw	31
 14225  0FE3  0472               	iorwf	??_tsttc,w
 14226  0FE4  1D03               	btfss	3,2
 14227  0FE5  2FE7               	goto	u324_21
 14228  0FE6  2FE8               	goto	u324_20
 14229  0FE7                     u324_21:
 14230  0FE7  2FDC               	goto	i1l4097
 14231  0FE8                     u324_20:
 14232  0FE8                     i1l983:
 14233                           
 14234                           ;main.c: 99: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14235  0FE8  1691               	bsf	17,5	;volatile
 14236  0FE9  1611               	bsf	17,4	;volatile
 14237  0FEA                     i1l984:
 14238  0FEA  1A11               	btfsc	17,4	;volatile
 14239  0FEB  2FED               	goto	u325_21
 14240  0FEC  2FEE               	goto	u325_20
 14241  0FED                     u325_21:
 14242  0FED  2FEA               	goto	i1l984
 14243  0FEE                     u325_20:
 14244  0FEE                     i1l4099:
 14245  0FEE  0C0F               	rrf	15,w	;volatile
 14246  0FEF  0C89               	rrf	9,f
 14247  0FF0  3901               	andlw	1
 14248  0FF1  00F2               	movwf	??_tsttc
 14249  0FF2  0811               	movf	17,w	;volatile
 14250  0FF3  391F               	andlw	31
 14251  0FF4  0472               	iorwf	??_tsttc,w
 14252  0FF5  1D03               	btfss	3,2
 14253  0FF6  2FF8               	goto	u326_21
 14254  0FF7  2FF9               	goto	u326_20
 14255  0FF8                     u326_21:
 14256  0FF8  2FEE               	goto	i1l4099
 14257  0FF9                     u326_20:
 14258  0FF9                     i1l989:
 14259                           
 14260                           ;main.c: 100: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14261  0FF9  1511               	bsf	17,2	;volatile
 14262  0FFA                     i1l990:
 14263  0FFA  1911               	btfsc	17,2	;volatile
 14264  0FFB  2FFD               	goto	u327_21
 14265  0FFC  2FFE               	goto	u327_20
 14266  0FFD                     u327_21:
 14267  0FFD  2FFA               	goto	i1l990
 14268  0FFE                     u327_20:
 14269  0FFE                     i1l4101:
 14270                           
 14271                           ;main.c: 102: return value;
 14272  0FFE  0873               	movf	tsttc@value,w
 14273  0FFF                     i1l993:
 14274  0FFF  0008               	return
 14275  1000                     __end_of_tsttc:
 14276                           
 14277                           	psect	text36
 14278  090F                     __ptext36:	
 14279 ;; *************** function _ReadI2C *****************
 14280 ;; Defined at:
 14281 ;;		line 32 in file "I2C/i2c.c"
 14282 ;; Parameters:    Size  Location     Type
 14283 ;;		None
 14284 ;; Auto vars:     Size  Location     Type
 14285 ;;		None
 14286 ;; Return value:  Size  Location     Type
 14287 ;;                  1    wreg      unsigned char 
 14288 ;; Registers used:
 14289 ;;		wreg, status,2, status,0
 14290 ;; Tracked objects:
 14291 ;;		On entry : 0/0
 14292 ;;		On exit  : 0/0
 14293 ;;		Unchanged: 0/0
 14294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14297 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14298 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14299 ;;Total ram usage:        1 bytes
 14300 ;; Hardware stack levels used:    1
 14301 ;; This function calls:
 14302 ;;		Nothing
 14303 ;; This function is called by:
 14304 ;;		_tsttc
 14305 ;;		_LCDrecv
 14306 ;; This function uses a non-reentrant model
 14307 ;;
 14308                           
 14309                           
 14310                           ;psect for function _ReadI2C
 14311  090F                     _ReadI2C:
 14312  090F                     i1l3913:	
 14313                           ;incstack = 0
 14314                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 14315                           
 14316                           
 14317                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 14318  090F  300F               	movlw	15
 14319  0910  0023               	movlb	3	; select bank3
 14320  0911  0510               	andwf	16,w	;volatile
 14321  0912  00F0               	movwf	??_ReadI2C
 14322  0913  3008               	movlw	8
 14323  0914  0670               	xorwf	??_ReadI2C,w
 14324  0915  1903               	btfsc	3,2
 14325  0916  2918               	goto	u271_21
 14326  0917  2919               	goto	u271_20
 14327  0918                     u271_21:
 14328  0918  2922               	goto	i1l22
 14329  0919                     u271_20:
 14330  0919                     i1l3915:
 14331  0919  300F               	movlw	15
 14332  091A  0510               	andwf	16,w	;volatile
 14333  091B  00F0               	movwf	??_ReadI2C
 14334  091C  300B               	movlw	11
 14335  091D  0670               	xorwf	??_ReadI2C,w
 14336  091E  1D03               	btfss	3,2
 14337  091F  2921               	goto	u272_21
 14338  0920  2922               	goto	u272_20
 14339  0921                     u272_21:
 14340  0921  2923               	goto	i1l23
 14341  0922                     u272_20:
 14342  0922                     i1l22:
 14343                           
 14344                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 14345  0922  1591               	bsf	17,3	;volatile
 14346  0923                     i1l23:
 14347  0923  1C0F               	btfss	15,0	;volatile
 14348  0924  2926               	goto	u273_21
 14349  0925  2927               	goto	u273_20
 14350  0926                     u273_21:
 14351  0926  2923               	goto	i1l23
 14352  0927                     u273_20:
 14353  0927                     i1l3917:
 14354                           
 14355                           ;i2c.c: 37: return ( SSP1BUF );
 14356  0927  080C               	movf	12,w	;volatile
 14357  0928                     i1l26:
 14358  0928  0008               	return
 14359  0929                     __end_of_ReadI2C:
 14360                           
 14361                           	psect	text37
 14362  085E                     __ptext37:	
 14363 ;; *************** function _ADCC_GetSingleConversion *****************
 14364 ;; Defined at:
 14365 ;;		line 130 in file "mcc_generated_files/adcc.c"
 14366 ;; Parameters:    Size  Location     Type
 14367 ;;  channel         1    wreg     enum E12086
 14368 ;; Auto vars:     Size  Location     Type
 14369 ;;  channel         1    3[COMMON] enum E12086
 14370 ;; Return value:  Size  Location     Type
 14371 ;;                  2    0[COMMON] unsigned int 
 14372 ;; Registers used:
 14373 ;;		wreg
 14374 ;; Tracked objects:
 14375 ;;		On entry : 0/0
 14376 ;;		On exit  : 0/0
 14377 ;;		Unchanged: 0/0
 14378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14379 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14382 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14383 ;;Total ram usage:        4 bytes
 14384 ;; Hardware stack levels used:    1
 14385 ;; This function calls:
 14386 ;;		Nothing
 14387 ;; This function is called by:
 14388 ;;		_monitoring_ISR
 14389 ;; This function uses a non-reentrant model
 14390 ;;
 14391                           
 14392                           
 14393                           ;psect for function _ADCC_GetSingleConversion
 14394  085E                     _ADCC_GetSingleConversion:
 14395                           
 14396                           ;incstack = 0
 14397                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 14398                           ;ADCC_GetSingleConversion@channel stored from wreg
 14399  085E  00F3               	movwf	ADCC_GetSingleConversion@channel
 14400  085F                     i1l4035:
 14401                           
 14402                           ;adcc.c: 133: ADPCH = channel;
 14403  085F  0873               	movf	ADCC_GetSingleConversion@channel,w
 14404  0860  0021               	movlb	1	; select bank1
 14405  0861  009E               	movwf	30	;volatile
 14406  0862                     i1l4037:
 14407                           
 14408                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 14409  0862  1793               	bsf	19,7	;volatile
 14410  0863                     i1l4039:
 14411                           
 14412                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 14413  0863  1313               	bcf	19,6	;volatile
 14414  0864                     i1l4041:
 14415                           
 14416                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 14417  0864  1413               	bsf	19,0	;volatile
 14418  0865                     i1l4043:
 14419                           
 14420                           ;adcc.c: 145: __nop();
 14421  0865  0000               	nop
 14422  0866                     i1l587:	
 14423                           ;adcc.c: 149: {
 14424                           
 14425  0866  0021               	movlb	1	; select bank1
 14426  0867  1813               	btfsc	19,0	;volatile
 14427  0868  286A               	goto	u302_21
 14428  0869  286B               	goto	u302_20
 14429  086A                     u302_21:
 14430  086A  2866               	goto	i1l587
 14431  086B                     u302_20:
 14432  086B                     i1l4045:
 14433                           
 14434                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14435  086B  080D               	movf	13,w	;volatile
 14436  086C  00F1               	movwf	?_ADCC_GetSingleConversion+1
 14437  086D  080C               	movf	12,w	;volatile
 14438  086E  00F0               	movwf	?_ADCC_GetSingleConversion
 14439  086F                     i1l590:
 14440  086F  0008               	return
 14441  0870                     __end_of_ADCC_GetSingleConversion:
 14442                           
 14443                           	psect	text38
 14444  083B                     __ptext38:	
 14445 ;; *************** function _TMR5_WriteTimer *****************
 14446 ;; Defined at:
 14447 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 14448 ;; Parameters:    Size  Location     Type
 14449 ;;  timerVal        2    0[COMMON] unsigned int 
 14450 ;; Auto vars:     Size  Location     Type
 14451 ;;		None
 14452 ;; Return value:  Size  Location     Type
 14453 ;;                  1    wreg      void 
 14454 ;; Registers used:
 14455 ;;		wreg, status,2
 14456 ;; Tracked objects:
 14457 ;;		On entry : 0/0
 14458 ;;		On exit  : 0/0
 14459 ;;		Unchanged: 0/0
 14460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14465 ;;Total ram usage:        2 bytes
 14466 ;; Hardware stack levels used:    1
 14467 ;; This function calls:
 14468 ;;		Nothing
 14469 ;; This function is called by:
 14470 ;;		_TMR5_ISR
 14471 ;;		_TMR5_Reload
 14472 ;; This function uses a non-reentrant model
 14473 ;;
 14474                           
 14475                           
 14476                           ;psect for function _TMR5_WriteTimer
 14477  083B                     _TMR5_WriteTimer:
 14478  083B                     i1l4453:	
 14479                           ;incstack = 0
 14480                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 14481                           
 14482                           
 14483                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 14484  083B  0024               	movlb	4	; select bank4
 14485  083C  1D1A               	btfss	26,2	;volatile
 14486  083D  283F               	goto	u360_21
 14487  083E  2840               	goto	u360_20
 14488  083F                     u360_21:
 14489  083F  2847               	goto	i1l4463
 14490  0840                     u360_20:
 14491  0840                     i1l4455:
 14492                           
 14493                           ;tmr5.c: 130: {;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 14494  0840  101A               	bcf	26,0	;volatile
 14495  0841                     i1l4457:
 14496                           
 14497                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 14498  0841  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 14499  0842  0099               	movwf	25	;volatile
 14500  0843                     i1l4459:
 14501                           
 14502                           ;tmr5.c: 136: TMR5L = timerVal;
 14503  0843  0870               	movf	TMR5_WriteTimer@timerVal,w
 14504  0844  0098               	movwf	24	;volatile
 14505  0845                     i1l4461:
 14506                           
 14507                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 14508  0845  141A               	bsf	26,0	;volatile
 14509                           
 14510                           ;tmr5.c: 140: }
 14511  0846  284B               	goto	i1l701
 14512  0847                     i1l4463:
 14513                           
 14514                           ;tmr5.c: 141: else;tmr5.c: 142: {;tmr5.c: 144: TMR5H = (timerVal >> 8);
 14515  0847  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 14516  0848  0099               	movwf	25	;volatile
 14517  0849                     i1l4465:
 14518                           
 14519                           ;tmr5.c: 145: TMR5L = timerVal;
 14520  0849  0870               	movf	TMR5_WriteTimer@timerVal,w
 14521  084A  0098               	movwf	24	;volatile
 14522  084B                     i1l701:
 14523  084B  0008               	return
 14524  084C                     __end_of_TMR5_WriteTimer:
 14525                           
 14526                           	psect	text39
 14527  08B1                     __ptext39:	
 14528 ;; *************** function _TMR3_ISR *****************
 14529 ;; Defined at:
 14530 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 14531 ;; Parameters:    Size  Location     Type
 14532 ;;		None
 14533 ;; Auto vars:     Size  Location     Type
 14534 ;;		None
 14535 ;; Return value:  Size  Location     Type
 14536 ;;                  1    wreg      void 
 14537 ;; Registers used:
 14538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14539 ;; Tracked objects:
 14540 ;;		On entry : 0/0
 14541 ;;		On exit  : 0/0
 14542 ;;		Unchanged: 0/0
 14543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14548 ;;Total ram usage:        0 bytes
 14549 ;; Hardware stack levels used:    1
 14550 ;; Hardware stack levels required when called:    5
 14551 ;; This function calls:
 14552 ;;		Absolute function
 14553 ;;		_TMR3_DefaultInterruptHandler
 14554 ;;		_TMR3_WriteTimer
 14555 ;;		_menuLCD_ISR
 14556 ;; This function is called by:
 14557 ;;		_INTERRUPT_InterruptManager
 14558 ;; This function uses a non-reentrant model
 14559 ;;
 14560                           
 14561                           
 14562                           ;psect for function _TMR3_ISR
 14563  08B1                     _TMR3_ISR:
 14564  08B1                     i1l4795:	
 14565                           ;incstack = 0
 14566                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14567                           
 14568                           
 14569                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 14570  08B1  002E               	movlb	14	; select bank14
 14571  08B2  1110               	bcf	16,2	;volatile
 14572  08B3                     i1l4797:
 14573                           
 14574                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 14575  08B3  0020               	movlb	0	; select bank0
 14576  08B4  086F               	movf	_timer3ReloadVal+1,w	;volatile
 14577  08B5  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 14578  08B6  086E               	movf	_timer3ReloadVal,w	;volatile
 14579  08B7  00F0               	movwf	TMR3_WriteTimer@timerVal
 14580  08B8  3188  202A  3188   	fcall	_TMR3_WriteTimer
 14581  08BB                     i1l4799:
 14582                           
 14583                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 14584  08BB  0021               	movlb	1	; select bank1
 14585  08BC  0837               	movf	_TMR3_InterruptHandler^(0+128),w
 14586  08BD  0438               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 14587  08BE  1903               	btfsc	3,2
 14588  08BF  28C1               	goto	u425_21
 14589  08C0  28C2               	goto	u425_20
 14590  08C1                     u425_21:
 14591  08C1  28C7               	goto	i1l490
 14592  08C2                     u425_20:
 14593  08C2                     i1l4801:
 14594                           
 14595                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 14596  08C2  0838               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 14597  08C3  008A               	movwf	10
 14598  08C4  0837               	movf	_TMR3_InterruptHandler^(0+128),w
 14599  08C5  000A               	callw
 14600  08C6  3188               	pagesel	$
 14601  08C7                     i1l490:
 14602  08C7  0008               	return
 14603  08C8                     __end_of_TMR3_ISR:
 14604                           
 14605                           	psect	text40
 14606  0002                     __ptext40:	
 14607 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 14608 ;; Defined at:
 14609 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 14610 ;; Parameters:    Size  Location     Type
 14611 ;;		None
 14612 ;; Auto vars:     Size  Location     Type
 14613 ;;		None
 14614 ;; Return value:  Size  Location     Type
 14615 ;;                  1    wreg      void 
 14616 ;; Registers used:
 14617 ;;		None
 14618 ;; Tracked objects:
 14619 ;;		On entry : 0/0
 14620 ;;		On exit  : 0/0
 14621 ;;		Unchanged: 0/0
 14622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14627 ;;Total ram usage:        0 bytes
 14628 ;; Hardware stack levels used:    1
 14629 ;; This function calls:
 14630 ;;		Nothing
 14631 ;; This function is called by:
 14632 ;;		_TMR3_Initialize
 14633 ;;		_TMR3_ISR
 14634 ;; This function uses a non-reentrant model
 14635 ;;
 14636                           
 14637                           
 14638                           ;psect for function _TMR3_DefaultInterruptHandler
 14639  0002                     _TMR3_DefaultInterruptHandler:
 14640  0002                     i1l496:	
 14641                           ;incstack = 0
 14642                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 14643                           
 14644  0002  0008               	return
 14645  0003                     __end_of_TMR3_DefaultInterruptHandler:
 14646                           
 14647                           	psect	text41
 14648  026B                     __ptext41:	
 14649 ;; *************** function _menuLCD_ISR *****************
 14650 ;; Defined at:
 14651 ;;		line 332 in file "main.c"
 14652 ;; Parameters:    Size  Location     Type
 14653 ;;		None
 14654 ;; Auto vars:     Size  Location     Type
 14655 ;;  diff            3   42[BANK0 ] struct Time
 14656 ;;  str             8   27[BANK0 ] unsigned char [8]
 14657 ;;  tt              4   35[BANK0 ] unsigned char [4]
 14658 ;;  l               3   39[BANK0 ] unsigned char [3]
 14659 ;; Return value:  Size  Location     Type
 14660 ;;                  1    wreg      void 
 14661 ;; Registers used:
 14662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14663 ;; Tracked objects:
 14664 ;;		On entry : 0/0
 14665 ;;		On exit  : 0/0
 14666 ;;		Unchanged: 0/0
 14667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14669 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;Total ram usage:       24 bytes
 14673 ;; Hardware stack levels used:    1
 14674 ;; Hardware stack levels required when called:    4
 14675 ;; This function calls:
 14676 ;;		_LCDchar
 14677 ;;		_LCDcmd
 14678 ;;		_LCDstr
 14679 ;;		_PWM_Output_D4_Enable
 14680 ;;		_TMR2_StartTimer
 14681 ;;		_differenceBetweenTimePeriod
 14682 ;;		_sprintf
 14683 ;;		i1_PWM6_LoadDutyValue
 14684 ;;		i1_PWM_Output_D4_Disable
 14685 ;;		i1_TMR2_StopTimer
 14686 ;; This function is called by:
 14687 ;;		_main
 14688 ;;		_TMR3_ISR
 14689 ;; This function uses a non-reentrant model
 14690 ;;
 14691                           
 14692                           
 14693                           ;psect for function _menuLCD_ISR
 14694  026B                     _menuLCD_ISR:
 14695  026B                     i1l4579:	
 14696                           ;incstack = 0
 14697                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14698                           
 14699                           
 14700                           ;main.c: 333: char str[8];;main.c: 334: if(editingClockAlarm){
 14701  026B  0020               	movlb	0	; select bank0
 14702  026C  085C               	movf	_editingClockAlarm,w
 14703  026D  045D               	iorwf	_editingClockAlarm+1,w
 14704  026E  1903               	btfsc	3,2
 14705  026F  2A71               	goto	u389_21
 14706  0270  2A72               	goto	u389_20
 14707  0271                     u389_21:
 14708  0271  2A90               	goto	i1l4583
 14709  0272                     u389_20:
 14710  0272                     i1l4581:
 14711                           
 14712                           ;main.c: 335: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 14713  0272  3000               	movlw	low (STR_1| (0+32768))
 14714  0273  00A0               	movwf	sprintf@f
 14715  0274  3090               	movlw	high (STR_1| (0+32768))
 14716  0275  00A1               	movwf	sprintf@f+1
 14717  0276  084D               	movf	_clkAlarm,w
 14718  0277  00B5               	movwf	??_menuLCD_ISR
 14719  0278  01B6               	clrf	??_menuLCD_ISR+1
 14720  0279  0835               	movf	??_menuLCD_ISR,w
 14721  027A  00A2               	movwf	?_sprintf+2
 14722  027B  0836               	movf	??_menuLCD_ISR+1,w
 14723  027C  00A3               	movwf	?_sprintf+3
 14724  027D  084E               	movf	_clkAlarm+1,w
 14725  027E  00B7               	movwf	??_menuLCD_ISR+2
 14726  027F  01B8               	clrf	??_menuLCD_ISR+3
 14727  0280  0837               	movf	??_menuLCD_ISR+2,w
 14728  0281  00A4               	movwf	?_sprintf+4
 14729  0282  0838               	movf	??_menuLCD_ISR+3,w
 14730  0283  00A5               	movwf	?_sprintf+5
 14731  0284  084F               	movf	_clkAlarm+2,w
 14732  0285  00B9               	movwf	??_menuLCD_ISR+4
 14733  0286  01BA               	clrf	??_menuLCD_ISR+5
 14734  0287  0839               	movf	??_menuLCD_ISR+4,w
 14735  0288  00A6               	movwf	?_sprintf+6
 14736  0289  083A               	movf	??_menuLCD_ISR+5,w
 14737  028A  00A7               	movwf	?_sprintf+7
 14738  028B  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14739  028C  3184  2444  3182   	fcall	_sprintf
 14740                           
 14741                           ;main.c: 336: } else {
 14742  028F  2AAD               	goto	i1l4585
 14743  0290                     i1l4583:
 14744                           
 14745                           ;main.c: 337: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 14746  0290  3000               	movlw	low (STR_1| (0+32768))
 14747  0291  00A0               	movwf	sprintf@f
 14748  0292  3090               	movlw	high (STR_1| (0+32768))
 14749  0293  00A1               	movwf	sprintf@f+1
 14750  0294  0857               	movf	_t,w
 14751  0295  00B5               	movwf	??_menuLCD_ISR
 14752  0296  01B6               	clrf	??_menuLCD_ISR+1
 14753  0297  0835               	movf	??_menuLCD_ISR,w
 14754  0298  00A2               	movwf	?_sprintf+2
 14755  0299  0836               	movf	??_menuLCD_ISR+1,w
 14756  029A  00A3               	movwf	?_sprintf+3
 14757  029B  0858               	movf	_t+1,w
 14758  029C  00B7               	movwf	??_menuLCD_ISR+2
 14759  029D  01B8               	clrf	??_menuLCD_ISR+3
 14760  029E  0837               	movf	??_menuLCD_ISR+2,w
 14761  029F  00A4               	movwf	?_sprintf+4
 14762  02A0  0838               	movf	??_menuLCD_ISR+3,w
 14763  02A1  00A5               	movwf	?_sprintf+5
 14764  02A2  0859               	movf	_t+2,w
 14765  02A3  00B9               	movwf	??_menuLCD_ISR+4
 14766  02A4  01BA               	clrf	??_menuLCD_ISR+5
 14767  02A5  0839               	movf	??_menuLCD_ISR+4,w
 14768  02A6  00A6               	movwf	?_sprintf+6
 14769  02A7  083A               	movf	??_menuLCD_ISR+5,w
 14770  02A8  00A7               	movwf	?_sprintf+7
 14771  02A9  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14772  02AA  3184  2444  3182   	fcall	_sprintf
 14773  02AD                     i1l4585:
 14774                           
 14775                           ;main.c: 338: };main.c: 339: LCDcmd(0x80);
 14776  02AD  3080               	movlw	128
 14777  02AE  3197  27A0  3182   	fcall	_LCDcmd
 14778  02B1                     i1l4587:
 14779                           
 14780                           ;main.c: 340: LCDstr(str);
 14781  02B1  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14782  02B2  3188  2070  3182   	fcall	_LCDstr
 14783  02B5                     i1l4589:
 14784                           
 14785                           ;main.c: 343: if(ALAF == 'A'){
 14786  02B5  3041               	movlw	65
 14787  02B6  0020               	movlb	0	; select bank0
 14788  02B7  0665               	xorwf	_ALAF,w
 14789  02B8  1D03               	btfss	3,2
 14790  02B9  2ABB               	goto	u390_21
 14791  02BA  2ABC               	goto	u390_20
 14792  02BB                     u390_21:
 14793  02BB  2B92               	goto	i1l4645
 14794  02BC                     u390_20:
 14795  02BC                     i1l4591:
 14796                           
 14797                           ;main.c: 344: LCDcmd(0x8F);
 14798  02BC  308F               	movlw	143
 14799  02BD  3197  27A0  3182   	fcall	_LCDcmd
 14800                           
 14801                           ;main.c: 345: LCDchar(ALAF);
 14802  02C0  0020               	movlb	0	; select bank0
 14803  02C1  0865               	movf	_ALAF,w
 14804  02C2  3197  27AE  3182   	fcall	_LCDchar
 14805  02C5                     i1l4593:
 14806                           
 14807                           ;main.c: 348: if(clkAlarm.trigger == 1){
 14808  02C5  0020               	movlb	0	; select bank0
 14809  02C6  0350               	decf	_clkAlarm+3,w
 14810  02C7  1D03               	btfss	3,2
 14811  02C8  2ACA               	goto	u391_21
 14812  02C9  2ACB               	goto	u391_20
 14813  02CA                     u391_21:
 14814  02CA  2AD4               	goto	i1l4597
 14815  02CB                     u391_20:
 14816  02CB                     i1l4595:
 14817                           
 14818                           ;main.c: 349: LCDcmd(0x8B);
 14819  02CB  308B               	movlw	139
 14820  02CC  3197  27A0  3182   	fcall	_LCDcmd
 14821                           
 14822                           ;main.c: 350: LCDchar('C');
 14823  02CF  3043               	movlw	67
 14824  02D0  3197  27AE  3182   	fcall	_LCDchar
 14825                           
 14826                           ;main.c: 351: } else{
 14827  02D3  2ADC               	goto	i1l4599
 14828  02D4                     i1l4597:
 14829                           
 14830                           ;main.c: 352: LCDcmd(0x8B);
 14831  02D4  308B               	movlw	139
 14832  02D5  3197  27A0  3182   	fcall	_LCDcmd
 14833                           
 14834                           ;main.c: 353: LCDchar(' ');
 14835  02D8  3020               	movlw	32
 14836  02D9  3197  27AE  3182   	fcall	_LCDchar
 14837  02DC                     i1l4599:
 14838                           
 14839                           ;main.c: 354: };main.c: 357: if(tempAlarm.trigger == 1){
 14840  02DC  0020               	movlb	0	; select bank0
 14841  02DD  0355               	decf	_tempAlarm+1,w
 14842  02DE  1D03               	btfss	3,2
 14843  02DF  2AE1               	goto	u392_21
 14844  02E0  2AE2               	goto	u392_20
 14845  02E1                     u392_21:
 14846  02E1  2AEB               	goto	i1l4603
 14847  02E2                     u392_20:
 14848  02E2                     i1l4601:
 14849                           
 14850                           ;main.c: 358: LCDcmd(0x8C);
 14851  02E2  308C               	movlw	140
 14852  02E3  3197  27A0  3182   	fcall	_LCDcmd
 14853                           
 14854                           ;main.c: 359: LCDchar('T');
 14855  02E6  3054               	movlw	84
 14856  02E7  3197  27AE  3182   	fcall	_LCDchar
 14857                           
 14858                           ;main.c: 360: } else{
 14859  02EA  2AF3               	goto	i1l4605
 14860  02EB                     i1l4603:
 14861                           
 14862                           ;main.c: 361: LCDcmd(0x8C);
 14863  02EB  308C               	movlw	140
 14864  02EC  3197  27A0  3182   	fcall	_LCDcmd
 14865                           
 14866                           ;main.c: 362: LCDchar(' ');
 14867  02EF  3020               	movlw	32
 14868  02F0  3197  27AE  3182   	fcall	_LCDchar
 14869  02F3                     i1l4605:
 14870                           
 14871                           ;main.c: 363: };main.c: 366: if(lumAlarm.trigger == 1){
 14872  02F3  0020               	movlb	0	; select bank0
 14873  02F4  0352               	decf	_lumAlarm+1,w
 14874  02F5  1D03               	btfss	3,2
 14875  02F6  2AF8               	goto	u393_21
 14876  02F7  2AF9               	goto	u393_20
 14877  02F8                     u393_21:
 14878  02F8  2B02               	goto	i1l4609
 14879  02F9                     u393_20:
 14880  02F9                     i1l4607:
 14881                           
 14882                           ;main.c: 367: LCDcmd(0x8D);
 14883  02F9  308D               	movlw	141
 14884  02FA  3197  27A0  3182   	fcall	_LCDcmd
 14885                           
 14886                           ;main.c: 368: LCDchar('L');
 14887  02FD  304C               	movlw	76
 14888  02FE  3197  27AE  3182   	fcall	_LCDchar
 14889                           
 14890                           ;main.c: 369: } else{
 14891  0301  2B0A               	goto	i1l4611
 14892  0302                     i1l4609:
 14893                           
 14894                           ;main.c: 370: LCDcmd(0x8D);
 14895  0302  308D               	movlw	141
 14896  0303  3197  27A0  3182   	fcall	_LCDcmd
 14897                           
 14898                           ;main.c: 371: LCDchar(' ');
 14899  0306  3020               	movlw	32
 14900  0307  3197  27AE  3182   	fcall	_LCDchar
 14901  030A                     i1l4611:
 14902                           
 14903                           ;main.c: 372: };main.c: 373: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 14904  030A  0020               	movlb	0	; select bank0
 14905  030B  0850               	movf	_clkAlarm+3,w
 14906  030C  1D03               	btfss	3,2
 14907  030D  2B0F               	goto	u394_21
 14908  030E  2B10               	goto	u394_20
 14909  030F                     u394_21:
 14910  030F  2B1A               	goto	i1l4617
 14911  0310                     u394_20:
 14912  0310                     i1l4613:
 14913  0310  0855               	movf	_tempAlarm+1,w
 14914  0311  1D03               	btfss	3,2
 14915  0312  2B14               	goto	u395_21
 14916  0313  2B15               	goto	u395_20
 14917  0314                     u395_21:
 14918  0314  2B1A               	goto	i1l4617
 14919  0315                     u395_20:
 14920  0315                     i1l4615:
 14921  0315  0852               	movf	_lumAlarm+1,w
 14922  0316  1903               	btfsc	3,2
 14923  0317  2B19               	goto	u396_21
 14924  0318  2B1A               	goto	u396_20
 14925  0319                     u396_21:
 14926  0319  2B9B               	goto	i1l1227
 14927  031A                     u396_20:
 14928  031A                     i1l4617:
 14929                           
 14930                           ;main.c: 374: if(alarmPWMStart.h == 0xff){
 14931  031A  0A67               	incf	_alarmPWMStart,w
 14932  031B  1D03               	btfss	3,2
 14933  031C  2B1E               	goto	u397_21
 14934  031D  2B1F               	goto	u397_20
 14935  031E                     u397_21:
 14936  031E  2B2B               	goto	i1l1218
 14937  031F                     u397_20:
 14938  031F                     i1l4619:
 14939                           
 14940                           ;main.c: 375: alarmPWMStart.h = t.h;
 14941  031F  0857               	movf	_t,w
 14942  0320  00B5               	movwf	??_menuLCD_ISR
 14943  0321  0835               	movf	??_menuLCD_ISR,w
 14944  0322  00E7               	movwf	_alarmPWMStart
 14945                           
 14946                           ;main.c: 376: alarmPWMStart.m = t.m;
 14947  0323  0858               	movf	_t+1,w
 14948  0324  00B5               	movwf	??_menuLCD_ISR
 14949  0325  0835               	movf	??_menuLCD_ISR,w
 14950  0326  00E8               	movwf	_alarmPWMStart+1
 14951                           
 14952                           ;main.c: 377: alarmPWMStart.s = t.s;
 14953  0327  0859               	movf	_t+2,w
 14954  0328  00B5               	movwf	??_menuLCD_ISR
 14955  0329  0835               	movf	??_menuLCD_ISR,w
 14956  032A  00E9               	movwf	_alarmPWMStart+2
 14957  032B                     i1l1218:
 14958                           
 14959                           ;main.c: 378: };main.c: 379: struct Time diff = {0,0,0};
 14960  032B  0021               	movlb	1	; select bank1
 14961  032C  083D               	movf	menuLCD_ISR@F12829^(0+128),w
 14962  032D  0020               	movlb	0	; select bank0
 14963  032E  00CA               	movwf	menuLCD_ISR@diff
 14964  032F  0021               	movlb	1	; select bank1
 14965  0330  083E               	movf	(menuLCD_ISR@F12829+1)^(0+128),w
 14966  0331  0020               	movlb	0	; select bank0
 14967  0332  00CB               	movwf	menuLCD_ISR@diff+1
 14968  0333  0021               	movlb	1	; select bank1
 14969  0334  083F               	movf	(menuLCD_ISR@F12829+2)^(0+128),w
 14970  0335  0020               	movlb	0	; select bank0
 14971  0336  00CC               	movwf	menuLCD_ISR@diff+2
 14972  0337                     i1l4621:
 14973                           
 14974                           ;main.c: 380: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 14975  0337  0857               	movf	_t,w
 14976  0338  00F0               	movwf	differenceBetweenTimePeriod@start
 14977  0339  0858               	movf	_t+1,w
 14978  033A  00F1               	movwf	differenceBetweenTimePeriod@start+1
 14979  033B  0859               	movf	_t+2,w
 14980  033C  00F2               	movwf	differenceBetweenTimePeriod@start+2
 14981  033D  0867               	movf	_alarmPWMStart,w
 14982  033E  00F3               	movwf	differenceBetweenTimePeriod@stop
 14983  033F  0868               	movf	_alarmPWMStart+1,w
 14984  0340  00F4               	movwf	differenceBetweenTimePeriod@stop+1
 14985  0341  0869               	movf	_alarmPWMStart+2,w
 14986  0342  00F5               	movwf	differenceBetweenTimePeriod@stop+2
 14987  0343  304A               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 14988  0344  00B5               	movwf	??_menuLCD_ISR
 14989  0345  0835               	movf	??_menuLCD_ISR,w
 14990  0346  00F6               	movwf	differenceBetweenTimePeriod@diff
 14991  0347  318A  2280  3182   	fcall	_differenceBetweenTimePeriod
 14992  034A                     i1l4623:
 14993                           
 14994                           ;main.c: 383: if(diff.s <= TALA){
 14995  034A  0020               	movlb	0	; select bank0
 14996  034B  084C               	movf	menuLCD_ISR@diff+2,w
 14997  034C  0266               	subwf	_TALA,w
 14998  034D  1C03               	skipc
 14999  034E  2B50               	goto	u398_21
 15000  034F  2B51               	goto	u398_20
 15001  0350                     u398_21:
 15002  0350  2B7E               	goto	i1l1221
 15003  0351                     u398_20:
 15004  0351                     i1l4625:
 15005                           
 15006                           ;main.c: 384: PWM_on = 1;
 15007  0351  0021               	movlb	1	; select bank1
 15008  0352  01C4               	clrf	_PWM_on^(0+128)
 15009  0353  0AC4               	incf	_PWM_on^(0+128),f
 15010                           
 15011                           ;main.c: 385: if(PWM6EN==0){
 15012  0354  0027               	movlb	7	; select bank7
 15013  0355  1B8E               	btfsc	14,7	;volatile
 15014  0356  2B58               	goto	u399_21
 15015  0357  2B59               	goto	u399_20
 15016  0358                     u399_21:
 15017  0358  2B5F               	goto	i1l4629
 15018  0359                     u399_20:
 15019  0359                     i1l4627:
 15020                           
 15021                           ;main.c: 386: TMR2_StartTimer();
 15022  0359  3197  276A  3182   	fcall	_TMR2_StartTimer
 15023                           
 15024                           ;main.c: 387: PWM_Output_D4_Enable();
 15025  035C  3197  2758  3182   	fcall	_PWM_Output_D4_Enable
 15026  035F                     i1l4629:
 15027                           
 15028                           ;main.c: 388: };main.c: 389: if(dimingLed <= 330){
 15029  035F  0020               	movlb	0	; select bank0
 15030  0360  085F               	movf	_dimingLed+1,w
 15031  0361  3A80               	xorlw	128
 15032  0362  00B5               	movwf	??_menuLCD_ISR
 15033  0363  3081               	movlw	129
 15034  0364  0235               	subwf	??_menuLCD_ISR,w
 15035  0365  1D03               	skipz
 15036  0366  2B69               	goto	u400_25
 15037  0367  304B               	movlw	75
 15038  0368  025E               	subwf	_dimingLed,w
 15039  0369                     u400_25:
 15040  0369  1803               	skipnc
 15041  036A  2B6C               	goto	u400_21
 15042  036B  2B6D               	goto	u400_20
 15043  036C                     u400_21:
 15044  036C  2B73               	goto	i1l4633
 15045  036D                     u400_20:
 15046  036D                     i1l4631:
 15047                           
 15048                           ;main.c: 390: dimingLed += 30;
 15049  036D  301E               	movlw	30
 15050  036E  0020               	movlb	0	; select bank0
 15051  036F  07DE               	addwf	_dimingLed,f
 15052  0370  3000               	movlw	0
 15053  0371  3DDF               	addwfc	_dimingLed+1,f
 15054                           
 15055                           ;main.c: 391: } else{
 15056  0372  2B76               	goto	i1l4635
 15057  0373                     i1l4633:
 15058                           
 15059                           ;main.c: 392: dimingLed = 0;
 15060  0373  0020               	movlb	0	; select bank0
 15061  0374  01DE               	clrf	_dimingLed
 15062  0375  01DF               	clrf	_dimingLed+1
 15063  0376                     i1l4635:
 15064                           
 15065                           ;main.c: 393: };main.c: 394: PWM6_LoadDutyValue(dimingLed);
 15066  0376  085F               	movf	_dimingLed+1,w
 15067  0377  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 15068  0378  085E               	movf	_dimingLed,w
 15069  0379  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 15070  037A  3188  2084  3182   	fcall	i1_PWM6_LoadDutyValue
 15071                           
 15072                           ;main.c: 395: } else if(PWM6EN==1){
 15073  037D  2B9B               	goto	i1l1227
 15074  037E                     i1l1221:
 15075  037E  0027               	movlb	7	; select bank7
 15076  037F  1F8E               	btfss	14,7	;volatile
 15077  0380  2B82               	goto	u401_21
 15078  0381  2B83               	goto	u401_20
 15079  0382                     u401_21:
 15080  0382  2B9B               	goto	i1l1227
 15081  0383                     u401_20:
 15082  0383                     i1l4637:
 15083                           
 15084                           ;main.c: 396: PWM_on = 0;
 15085  0383  0021               	movlb	1	; select bank1
 15086  0384  01C4               	clrf	_PWM_on^(0+128)
 15087  0385                     i1l4639:
 15088                           
 15089                           ;main.c: 397: PWM6_LoadDutyValue(0);
 15090  0385  3000               	movlw	0
 15091  0386  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 15092  0387  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 15093  0388  3188  2084  3182   	fcall	i1_PWM6_LoadDutyValue
 15094  038B                     i1l4641:
 15095                           
 15096                           ;main.c: 398: TMR2_StopTimer();
 15097  038B  3197  276E  3182   	fcall	i1_TMR2_StopTimer
 15098  038E                     i1l4643:
 15099                           
 15100                           ;main.c: 399: PWM_Output_D4_Disable();
 15101  038E  3197  275E  3182   	fcall	i1_PWM_Output_D4_Disable
 15102  0391  2B9B               	goto	i1l1227
 15103  0392                     i1l4645:
 15104                           
 15105                           ;main.c: 403: LCDcmd(0x8F);
 15106  0392  308F               	movlw	143
 15107  0393  3197  27A0  3182   	fcall	_LCDcmd
 15108                           
 15109                           ;main.c: 404: LCDchar(ALAF);
 15110  0396  0020               	movlb	0	; select bank0
 15111  0397  0865               	movf	_ALAF,w
 15112  0398  3197  27AE  3182   	fcall	_LCDchar
 15113  039B                     i1l1227:
 15114                           
 15115                           ;main.c: 405: };main.c: 407: LCDcmd(0xc0);
 15116  039B  30C0               	movlw	192
 15117  039C  3197  27A0  3182   	fcall	_LCDcmd
 15118  039F                     i1l4647:
 15119                           
 15120                           ;main.c: 408: char tt[4];;main.c: 409: if(editingTempAlarm){
 15121  039F  0020               	movlb	0	; select bank0
 15122  03A0  0861               	movf	_editingTempAlarm,w
 15123  03A1  1903               	btfsc	3,2
 15124  03A2  2BA4               	goto	u402_21
 15125  03A3  2BA5               	goto	u402_20
 15126  03A4                     u402_21:
 15127  03A4  2BB5               	goto	i1l4651
 15128  03A5                     u402_20:
 15129  03A5                     i1l4649:
 15130                           
 15131                           ;main.c: 410: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 15132  03A5  300A               	movlw	low (STR_3| (0+32768))
 15133  03A6  00A0               	movwf	sprintf@f
 15134  03A7  3098               	movlw	high (STR_3| (0+32768))
 15135  03A8  00A1               	movwf	sprintf@f+1
 15136  03A9  0854               	movf	_tempAlarm,w
 15137  03AA  00B5               	movwf	??_menuLCD_ISR
 15138  03AB  01B6               	clrf	??_menuLCD_ISR+1
 15139  03AC  0835               	movf	??_menuLCD_ISR,w
 15140  03AD  00A2               	movwf	?_sprintf+2
 15141  03AE  0836               	movf	??_menuLCD_ISR+1,w
 15142  03AF  00A3               	movwf	?_sprintf+3
 15143  03B0  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 15144  03B1  3184  2444  3182   	fcall	_sprintf
 15145                           
 15146                           ;main.c: 411: } else{
 15147  03B4  2BC4               	goto	i1l4653
 15148  03B5                     i1l4651:
 15149                           
 15150                           ;main.c: 412: sprintf(tt, "%02d C", temp);
 15151  03B5  300A               	movlw	low (STR_3| (0+32768))
 15152  03B6  00A0               	movwf	sprintf@f
 15153  03B7  3098               	movlw	high (STR_3| (0+32768))
 15154  03B8  00A1               	movwf	sprintf@f+1
 15155  03B9  0863               	movf	_temp,w
 15156  03BA  00B5               	movwf	??_menuLCD_ISR
 15157  03BB  01B6               	clrf	??_menuLCD_ISR+1
 15158  03BC  0835               	movf	??_menuLCD_ISR,w
 15159  03BD  00A2               	movwf	?_sprintf+2
 15160  03BE  0836               	movf	??_menuLCD_ISR+1,w
 15161  03BF  00A3               	movwf	?_sprintf+3
 15162  03C0  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 15163  03C1  3184  2444  3182   	fcall	_sprintf
 15164  03C4                     i1l4653:
 15165                           
 15166                           ;main.c: 413: };main.c: 414: LCDstr(tt);
 15167  03C4  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 15168  03C5  3188  2070  3182   	fcall	_LCDstr
 15169  03C8                     i1l4655:
 15170                           
 15171                           ;main.c: 416: LCDcmd(0xcd);
 15172  03C8  30CD               	movlw	205
 15173  03C9  3197  27A0  3182   	fcall	_LCDcmd
 15174  03CC                     i1l4657:
 15175                           
 15176                           ;main.c: 417: char l[3];;main.c: 419: if(editingLumAlarm){
 15177  03CC  0020               	movlb	0	; select bank0
 15178  03CD  0860               	movf	_editingLumAlarm,w
 15179  03CE  1903               	btfsc	3,2
 15180  03CF  2BD1               	goto	u403_21
 15181  03D0  2BD2               	goto	u403_20
 15182  03D1                     u403_21:
 15183  03D1  2BE2               	goto	i1l4661
 15184  03D2                     u403_20:
 15185  03D2                     i1l4659:
 15186                           
 15187                           ;main.c: 420: sprintf(l, "L %d", lumAlarm.alarmLum);
 15188  03D2  3011               	movlw	low (STR_5| (0+32768))
 15189  03D3  00A0               	movwf	sprintf@f
 15190  03D4  3098               	movlw	high (STR_5| (0+32768))
 15191  03D5  00A1               	movwf	sprintf@f+1
 15192  03D6  0851               	movf	_lumAlarm,w
 15193  03D7  00B5               	movwf	??_menuLCD_ISR
 15194  03D8  01B6               	clrf	??_menuLCD_ISR+1
 15195  03D9  0835               	movf	??_menuLCD_ISR,w
 15196  03DA  00A2               	movwf	?_sprintf+2
 15197  03DB  0836               	movf	??_menuLCD_ISR+1,w
 15198  03DC  00A3               	movwf	?_sprintf+3
 15199  03DD  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 15200  03DE  3184  2444  3182   	fcall	_sprintf
 15201                           
 15202                           ;main.c: 421: } else{
 15203  03E1  2BF1               	goto	i1l4663
 15204  03E2                     i1l4661:
 15205                           
 15206                           ;main.c: 422: sprintf(l, "L %d", lumLevel);
 15207  03E2  3011               	movlw	low (STR_5| (0+32768))
 15208  03E3  00A0               	movwf	sprintf@f
 15209  03E4  3098               	movlw	high (STR_5| (0+32768))
 15210  03E5  00A1               	movwf	sprintf@f+1
 15211  03E6  0862               	movf	_lumLevel,w
 15212  03E7  00B5               	movwf	??_menuLCD_ISR
 15213  03E8  01B6               	clrf	??_menuLCD_ISR+1
 15214  03E9  0835               	movf	??_menuLCD_ISR,w
 15215  03EA  00A2               	movwf	?_sprintf+2
 15216  03EB  0836               	movf	??_menuLCD_ISR+1,w
 15217  03EC  00A3               	movwf	?_sprintf+3
 15218  03ED  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 15219  03EE  3184  2444  3182   	fcall	_sprintf
 15220  03F1                     i1l4663:
 15221                           
 15222                           ;main.c: 423: };main.c: 424: LCDstr(l);
 15223  03F1  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 15224  03F2  3188  2070  3182   	fcall	_LCDstr
 15225  03F5                     i1l4665:
 15226                           
 15227                           ;main.c: 426: if(mode == 1){
 15228  03F5  0020               	movlb	0	; select bank0
 15229  03F6  035A               	decf	_mode,w
 15230  03F7  045B               	iorwf	_mode+1,w
 15231  03F8  1D03               	btfss	3,2
 15232  03F9  2BFB               	goto	u404_21
 15233  03FA  2BFC               	goto	u404_20
 15234  03FB                     u404_21:
 15235  03FB  2C20               	goto	i1l4679
 15236  03FC                     u404_20:
 15237  03FC                     i1l4667:
 15238                           
 15239                           ;main.c: 427: if(editingClockAlarm == 1){
 15240  03FC  035C               	decf	_editingClockAlarm,w
 15241  03FD  045D               	iorwf	_editingClockAlarm+1,w
 15242  03FE  1D03               	btfss	3,2
 15243  03FF  2C01               	goto	u405_21
 15244  0400  2C02               	goto	u405_20
 15245  0401                     u405_21:
 15246  0401  2C07               	goto	i1l4671
 15247  0402                     u405_20:
 15248  0402                     i1l4669:
 15249                           
 15250                           ;main.c: 428: LCDcmd(0x81);
 15251  0402  3081               	movlw	129
 15252  0403  3197  27A0  3182   	fcall	_LCDcmd
 15253                           
 15254                           ;main.c: 429: } else if(editingClockAlarm == 2){
 15255  0406  2C43               	goto	i1l1244
 15256  0407                     i1l4671:
 15257  0407  3002               	movlw	2
 15258  0408  065C               	xorwf	_editingClockAlarm,w
 15259  0409  045D               	iorwf	_editingClockAlarm+1,w
 15260  040A  1D03               	btfss	3,2
 15261  040B  2C0D               	goto	u406_21
 15262  040C  2C0E               	goto	u406_20
 15263  040D                     u406_21:
 15264  040D  2C13               	goto	i1l4675
 15265  040E                     u406_20:
 15266  040E                     i1l4673:
 15267                           
 15268                           ;main.c: 430: LCDcmd(0x84);
 15269  040E  3084               	movlw	132
 15270  040F  3197  27A0  3182   	fcall	_LCDcmd
 15271                           
 15272                           ;main.c: 431: } else if(editingClockAlarm == 3){
 15273  0412  2C43               	goto	i1l1244
 15274  0413                     i1l4675:
 15275  0413  3003               	movlw	3
 15276  0414  065C               	xorwf	_editingClockAlarm,w
 15277  0415  045D               	iorwf	_editingClockAlarm+1,w
 15278  0416  1D03               	btfss	3,2
 15279  0417  2C19               	goto	u407_21
 15280  0418  2C1A               	goto	u407_20
 15281  0419                     u407_21:
 15282  0419  2C1F               	goto	i1l1234
 15283  041A                     u407_20:
 15284  041A                     i1l4677:
 15285                           
 15286                           ;main.c: 432: LCDcmd(0x87);
 15287  041A  3087               	movlw	135
 15288  041B  3197  27A0  3182   	fcall	_LCDcmd
 15289  041E  2C43               	goto	i1l1244
 15290  041F                     i1l1234:
 15291                           
 15292                           ;main.c: 433: };main.c: 434: } else if(mode == 2){
 15293  041F  2C43               	goto	i1l1244
 15294  0420                     i1l4679:
 15295  0420  3002               	movlw	2
 15296  0421  065A               	xorwf	_mode,w
 15297  0422  045B               	iorwf	_mode+1,w
 15298  0423  1D03               	btfss	3,2
 15299  0424  2C26               	goto	u408_21
 15300  0425  2C27               	goto	u408_20
 15301  0426                     u408_21:
 15302  0426  2C2C               	goto	i1l4683
 15303  0427                     u408_20:
 15304  0427                     i1l4681:
 15305                           
 15306                           ;main.c: 435: LCDcmd(0xc1);
 15307  0427  30C1               	movlw	193
 15308  0428  3197  27A0  3182   	fcall	_LCDcmd
 15309                           
 15310                           ;main.c: 436: } else if(mode == 3){
 15311  042B  2C43               	goto	i1l1244
 15312  042C                     i1l4683:
 15313  042C  3003               	movlw	3
 15314  042D  065A               	xorwf	_mode,w
 15315  042E  045B               	iorwf	_mode+1,w
 15316  042F  1D03               	btfss	3,2
 15317  0430  2C32               	goto	u409_21
 15318  0431  2C33               	goto	u409_20
 15319  0432                     u409_21:
 15320  0432  2C38               	goto	i1l4687
 15321  0433                     u409_20:
 15322  0433                     i1l4685:
 15323                           
 15324                           ;main.c: 437: LCDcmd(0xcf);
 15325  0433  30CF               	movlw	207
 15326  0434  3197  27A0  3182   	fcall	_LCDcmd
 15327                           
 15328                           ;main.c: 438: } else if(mode == 4){
 15329  0437  2C43               	goto	i1l1244
 15330  0438                     i1l4687:
 15331  0438  3004               	movlw	4
 15332  0439  065A               	xorwf	_mode,w
 15333  043A  045B               	iorwf	_mode+1,w
 15334  043B  1D03               	btfss	3,2
 15335  043C  2C3E               	goto	u410_21
 15336  043D  2C3F               	goto	u410_20
 15337  043E                     u410_21:
 15338  043E  2C43               	goto	i1l1244
 15339  043F                     u410_20:
 15340  043F                     i1l4689:
 15341                           
 15342                           ;main.c: 439: LCDcmd(0x8f);
 15343  043F  308F               	movlw	143
 15344  0440  3197  27A0  3182   	fcall	_LCDcmd
 15345  0443                     i1l1244:
 15346  0443  0008               	return
 15347  0444                     __end_of_menuLCD_ISR:
 15348                           
 15349                           	psect	text42
 15350  176E                     __ptext42:	
 15351 ;; *************** function i1_TMR2_StopTimer *****************
 15352 ;; Defined at:
 15353 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 15354 ;; Parameters:    Size  Location     Type
 15355 ;;		None
 15356 ;; Auto vars:     Size  Location     Type
 15357 ;;		None
 15358 ;; Return value:  Size  Location     Type
 15359 ;;                  1    wreg      void 
 15360 ;; Registers used:
 15361 ;;		status,2, status,0, pclath, cstack
 15362 ;; Tracked objects:
 15363 ;;		On entry : 0/0
 15364 ;;		On exit  : 0/0
 15365 ;;		Unchanged: 0/0
 15366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15371 ;;Total ram usage:        0 bytes
 15372 ;; Hardware stack levels used:    1
 15373 ;; Hardware stack levels required when called:    1
 15374 ;; This function calls:
 15375 ;;		i1_TMR2_Stop
 15376 ;; This function is called by:
 15377 ;;		_menuLCD_ISR
 15378 ;; This function uses a non-reentrant model
 15379 ;;
 15380                           
 15381                           
 15382                           ;psect for function i1_TMR2_StopTimer
 15383  176E                     i1_TMR2_StopTimer:
 15384  176E                     i1l4265:	
 15385                           ;incstack = 0
 15386                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 15387                           
 15388                           
 15389                           ;tmr2.c: 119: TMR2_Stop();
 15390  176E  3197  2761  3197   	fcall	i1_TMR2_Stop
 15391  1771                     i1l779:
 15392  1771  0008               	return
 15393  1772                     __end_ofi1_TMR2_StopTimer:
 15394                           
 15395                           	psect	text43
 15396  1761                     __ptext43:	
 15397 ;; *************** function i1_TMR2_Stop *****************
 15398 ;; Defined at:
 15399 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 15400 ;; Parameters:    Size  Location     Type
 15401 ;;		None
 15402 ;; Auto vars:     Size  Location     Type
 15403 ;;		None
 15404 ;; Return value:  Size  Location     Type
 15405 ;;                  1    wreg      void 
 15406 ;; Registers used:
 15407 ;;		None
 15408 ;; Tracked objects:
 15409 ;;		On entry : 0/0
 15410 ;;		On exit  : 0/0
 15411 ;;		Unchanged: 0/0
 15412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15417 ;;Total ram usage:        0 bytes
 15418 ;; Hardware stack levels used:    1
 15419 ;; This function calls:
 15420 ;;		Nothing
 15421 ;; This function is called by:
 15422 ;;		i1_TMR2_StopTimer
 15423 ;; This function uses a non-reentrant model
 15424 ;;
 15425                           
 15426                           
 15427                           ;psect for function i1_TMR2_Stop
 15428  1761                     i1_TMR2_Stop:
 15429  1761                     i1l3999:	
 15430                           ;incstack = 0
 15431                           ; Regs used in i1_TMR2_Stop: []
 15432                           
 15433                           
 15434                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 15435  1761  0025               	movlb	5	; select bank5
 15436  1762  138E               	bcf	14,7	;volatile
 15437  1763                     i1l776:
 15438  1763  0008               	return
 15439  1764                     __end_ofi1_TMR2_Stop:
 15440                           
 15441                           	psect	text44
 15442  175E                     __ptext44:	
 15443 ;; *************** function i1_PWM_Output_D4_Disable *****************
 15444 ;; Defined at:
 15445 ;;		line 246 in file "main.c"
 15446 ;; Parameters:    Size  Location     Type
 15447 ;;		None
 15448 ;; Auto vars:     Size  Location     Type
 15449 ;;		None
 15450 ;; Return value:  Size  Location     Type
 15451 ;;                  1    wreg      void 
 15452 ;; Registers used:
 15453 ;;		None
 15454 ;; Tracked objects:
 15455 ;;		On entry : 0/0
 15456 ;;		On exit  : 0/0
 15457 ;;		Unchanged: 0/0
 15458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15463 ;;Total ram usage:        0 bytes
 15464 ;; Hardware stack levels used:    1
 15465 ;; This function calls:
 15466 ;;		Nothing
 15467 ;; This function is called by:
 15468 ;;		_menuLCD_ISR
 15469 ;; This function uses a non-reentrant model
 15470 ;;
 15471                           
 15472                           
 15473                           ;psect for function i1_PWM_Output_D4_Disable
 15474  175E                     i1_PWM_Output_D4_Disable:
 15475  175E                     i1l4287:	
 15476                           ;incstack = 0
 15477                           ; Regs used in i1_PWM_Output_D4_Disable: []
 15478                           
 15479                           
 15480                           ;main.c: 247: PWM6EN = 0;
 15481  175E  0027               	movlb	7	; select bank7
 15482  175F  138E               	bcf	14,7	;volatile
 15483  1760                     i1l1165:
 15484  1760  0008               	return
 15485  1761                     __end_ofi1_PWM_Output_D4_Disable:
 15486                           
 15487                           	psect	text45
 15488  0884                     __ptext45:	
 15489 ;; *************** function i1_PWM6_LoadDutyValue *****************
 15490 ;; Defined at:
 15491 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 15492 ;; Parameters:    Size  Location     Type
 15493 ;;  dutyValue       2    0[COMMON] unsigned int 
 15494 ;; Auto vars:     Size  Location     Type
 15495 ;;		None
 15496 ;; Return value:  Size  Location     Type
 15497 ;;                  1    wreg      void 
 15498 ;; Registers used:
 15499 ;;		wreg, status,2, status,0
 15500 ;; Tracked objects:
 15501 ;;		On entry : 0/0
 15502 ;;		On exit  : 0/0
 15503 ;;		Unchanged: 0/0
 15504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15508 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15509 ;;Total ram usage:        4 bytes
 15510 ;; Hardware stack levels used:    1
 15511 ;; This function calls:
 15512 ;;		Nothing
 15513 ;; This function is called by:
 15514 ;;		_menuLCD_ISR
 15515 ;; This function uses a non-reentrant model
 15516 ;;
 15517                           
 15518                           
 15519                           ;psect for function i1_PWM6_LoadDutyValue
 15520  0884                     i1_PWM6_LoadDutyValue:
 15521  0884                     i1l4263:	
 15522                           ;incstack = 0
 15523                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 15524                           
 15525                           
 15526                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 15527  0884  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 15528  0885  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 15529  0886  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 15530  0887  00F2               	movwf	??i1_PWM6_LoadDutyValue
 15531  0888  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 15532  0889  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 15533  088A  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 15534  088B  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 15535  088C  0872               	movf	??i1_PWM6_LoadDutyValue,w
 15536  088D  0027               	movlb	7	; select bank7
 15537  088E  008D               	movwf	13	;volatile
 15538                           
 15539                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 15540  088F  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 15541  0890  3903               	andlw	3
 15542  0891  00F2               	movwf	??i1_PWM6_LoadDutyValue
 15543  0892  3005               	movlw	5
 15544  0893                     u356_25:
 15545  0893  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 15546  0894  3EFF               	addlw	-1
 15547  0895  1D03               	skipz
 15548  0896  2893               	goto	u356_25
 15549  0897  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 15550  0898  008C               	movwf	12	;volatile
 15551  0899                     i1l734:
 15552  0899  0008               	return
 15553  089A                     __end_ofi1_PWM6_LoadDutyValue:
 15554                           
 15555                           	psect	text46
 15556  0444                     __ptext46:	
 15557 ;; *************** function _sprintf *****************
 15558 ;; Defined at:
 15559 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 15560 ;; Parameters:    Size  Location     Type
 15561 ;;  sp              1    wreg     PTR unsigned char 
 15562 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15563 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 15564 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 15565 ;;		 -> STR_2(15), STR_1(15), 
 15566 ;; Auto vars:     Size  Location     Type
 15567 ;;  sp              1   20[BANK0 ] PTR unsigned char 
 15568 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15569 ;;  tmpval          4    0        struct .
 15570 ;;  width           2   17[BANK0 ] int 
 15571 ;;  val             2   14[BANK0 ] unsigned int 
 15572 ;;  cp              2    0        PTR const unsigned char 
 15573 ;;  len             2    0        unsigned int 
 15574 ;;  c               1   19[BANK0 ] unsigned char 
 15575 ;;  flag            1   16[BANK0 ] unsigned char 
 15576 ;;  prec            1   13[BANK0 ] char 
 15577 ;;  ap              1   12[BANK0 ] PTR void [1]
 15578 ;;		 -> ?_sprintf(2), 
 15579 ;; Return value:  Size  Location     Type
 15580 ;;                  2    0[BANK0 ] int 
 15581 ;; Registers used:
 15582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15583 ;; Tracked objects:
 15584 ;;		On entry : 0/0
 15585 ;;		On exit  : 0/0
 15586 ;;		Unchanged: 0/0
 15587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15588 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15589 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15590 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15591 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15592 ;;Total ram usage:       21 bytes
 15593 ;; Hardware stack levels used:    1
 15594 ;; Hardware stack levels required when called:    1
 15595 ;; This function calls:
 15596 ;;		___lwdiv
 15597 ;;		___lwmod
 15598 ;;		___wmul
 15599 ;;		_isdigit
 15600 ;; This function is called by:
 15601 ;;		_menuLCD_ISR
 15602 ;; This function uses a non-reentrant model
 15603 ;;
 15604                           
 15605                           
 15606                           ;psect for function _sprintf
 15607  0444                     _sprintf:
 15608                           
 15609                           ;incstack = 0
 15610                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15611                           ;sprintf@sp stored from wreg
 15612  0444  0020               	movlb	0	; select bank0
 15613  0445  00B4               	movwf	sprintf@sp
 15614  0446                     i1l4129:
 15615                           
 15616                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 15617  0446  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 15618  0447  00A8               	movwf	??_sprintf
 15619  0448  0828               	movf	??_sprintf,w
 15620  0449  00AC               	movwf	sprintf@ap
 15621                           
 15622                           ;doprnt.c: 553: while((c = *f++)) {
 15623  044A  2DC8               	goto	i1l4233
 15624  044B                     i1l4131:
 15625                           
 15626                           ;doprnt.c: 555: if(c != '%')
 15627  044B  3025               	movlw	37
 15628  044C  0633               	xorwf	sprintf@c,w
 15629  044D  1903               	btfsc	3,2
 15630  044E  2C50               	goto	u331_21
 15631  044F  2C51               	goto	u331_20
 15632  0450                     u331_21:
 15633  0450  2C5D               	goto	i1l4137
 15634  0451                     u331_20:
 15635  0451                     i1l4133:
 15636                           
 15637                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 15638  0451  0833               	movf	sprintf@c,w
 15639  0452  00A8               	movwf	??_sprintf
 15640  0453  0834               	movf	sprintf@sp,w
 15641  0454  0086               	movwf	6
 15642  0455  0187               	clrf	7
 15643  0456  0828               	movf	??_sprintf,w
 15644  0457  0081               	movwf	1
 15645  0458                     i1l4135:
 15646  0458  3001               	movlw	1
 15647  0459  00A8               	movwf	??_sprintf
 15648  045A  0828               	movf	??_sprintf,w
 15649  045B  07B4               	addwf	sprintf@sp,f
 15650                           
 15651                           ;doprnt.c: 559: continue;
 15652  045C  2DC8               	goto	i1l4233
 15653  045D                     i1l4137:
 15654                           
 15655                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 15656  045D  01B1               	clrf	sprintf@width
 15657  045E  01B2               	clrf	sprintf@width+1
 15658                           
 15659                           ;doprnt.c: 565: flag = 0;
 15660  045F  01B0               	clrf	sprintf@flag
 15661  0460  2C66               	goto	i1l4143
 15662  0461                     i1l1541:	
 15663                           ;doprnt.c: 596: case '0':
 15664                           
 15665                           
 15666                           ;doprnt.c: 597: flag |= 0x04;
 15667  0461  1530               	bsf	sprintf@flag,2
 15668  0462                     i1l4139:
 15669                           
 15670                           ;doprnt.c: 598: f++;
 15671  0462  3001               	movlw	1
 15672  0463  07A0               	addwf	sprintf@f,f
 15673  0464  3000               	movlw	0
 15674  0465  3DA1               	addwfc	sprintf@f+1,f
 15675  0466                     i1l4143:	
 15676                           ;doprnt.c: 599: continue;
 15677                           
 15678  0466  0820               	movf	sprintf@f,w
 15679  0467  0084               	movwf	4
 15680  0468  0821               	movf	sprintf@f+1,w
 15681  0469  0085               	movwf	5
 15682  046A  0800               	movf	0,w	;code access
 15683                           
 15684                           ; Switch size 1, requested type "simple"
 15685                           ; Number of cases is 1, Range of values is 48 to 48
 15686                           ; switch strategies available:
 15687                           ; Name         Instructions Cycles
 15688                           ; simple_byte            4     3 (average)
 15689                           ; direct_byte           11     9 (fixed)
 15690                           ; jumptable            263     9 (fixed)
 15691                           ;	Chosen strategy is simple_byte
 15692  046B  3A30               	xorlw	48	; case 48
 15693  046C  1903               	skipnz
 15694  046D  2C61               	goto	i1l1541
 15695  046E  2C6F               	goto	i1l4145
 15696  046F                     i1l4145:
 15697                           
 15698                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 15699  046F  0820               	movf	sprintf@f,w
 15700  0470  0084               	movwf	4
 15701  0471  0821               	movf	sprintf@f+1,w
 15702  0472  0085               	movwf	5
 15703  0473  0800               	movf	0,w	;code access
 15704  0474  3188  204C  3184   	fcall	_isdigit
 15705  0477  1C03               	btfss	3,0
 15706  0478  2C7A               	goto	u332_21
 15707  0479  2C7B               	goto	u332_20
 15708  047A                     u332_21:
 15709  047A  2CAE               	goto	i1l4159
 15710  047B                     u332_20:
 15711  047B                     i1l4147:
 15712                           
 15713                           ;doprnt.c: 615: width = 0;
 15714  047B  0020               	movlb	0	; select bank0
 15715  047C  01B1               	clrf	sprintf@width
 15716  047D  01B2               	clrf	sprintf@width+1
 15717  047E                     i1l4149:
 15718                           
 15719                           ;doprnt.c: 617: width *= 10;
 15720  047E  300A               	movlw	10
 15721  047F  00F0               	movwf	___wmul@multiplier
 15722  0480  3000               	movlw	0
 15723  0481  00F1               	movwf	___wmul@multiplier+1
 15724  0482  0020               	movlb	0	; select bank0
 15725  0483  0832               	movf	sprintf@width+1,w
 15726  0484  00F3               	movwf	___wmul@multiplicand+1
 15727  0485  0831               	movf	sprintf@width,w
 15728  0486  00F2               	movwf	___wmul@multiplicand
 15729  0487  3189  2147  3184   	fcall	___wmul
 15730  048A  0871               	movf	?___wmul+1,w
 15731  048B  0020               	movlb	0	; select bank0
 15732  048C  00B2               	movwf	sprintf@width+1
 15733  048D  0870               	movf	?___wmul,w
 15734  048E  00B1               	movwf	sprintf@width
 15735  048F                     i1l4151:
 15736                           
 15737                           ;doprnt.c: 618: width += *f++ - '0';
 15738  048F  0820               	movf	sprintf@f,w
 15739  0490  0084               	movwf	4
 15740  0491  0821               	movf	sprintf@f+1,w
 15741  0492  0085               	movwf	5
 15742  0493  0800               	movf	0,w	;code access
 15743  0494  3ED0               	addlw	208
 15744  0495  00A8               	movwf	??_sprintf
 15745  0496  30FF               	movlw	255
 15746  0497  1803               	skipnc
 15747  0498  3000               	movlw	0
 15748  0499  00A9               	movwf	??_sprintf+1
 15749  049A  0828               	movf	??_sprintf,w
 15750  049B  07B1               	addwf	sprintf@width,f
 15751  049C  0829               	movf	??_sprintf+1,w
 15752  049D  3DB2               	addwfc	sprintf@width+1,f
 15753  049E                     i1l4153:
 15754  049E  3001               	movlw	1
 15755  049F  07A0               	addwf	sprintf@f,f
 15756  04A0  3000               	movlw	0
 15757  04A1  3DA1               	addwfc	sprintf@f+1,f
 15758  04A2                     i1l4155:
 15759                           
 15760                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 15761  04A2  0820               	movf	sprintf@f,w
 15762  04A3  0084               	movwf	4
 15763  04A4  0821               	movf	sprintf@f+1,w
 15764  04A5  0085               	movwf	5
 15765  04A6  0800               	movf	0,w	;code access
 15766  04A7  3188  204C  3184   	fcall	_isdigit
 15767  04AA  1803               	btfsc	3,0
 15768  04AB  2CAD               	goto	u333_21
 15769  04AC  2CAE               	goto	u333_20
 15770  04AD                     u333_21:
 15771  04AD  2C7E               	goto	i1l4149
 15772  04AE                     u333_20:
 15773  04AE                     i1l4159:
 15774  04AE  0020               	movlb	0	; select bank0
 15775  04AF  0821               	movf	sprintf@f+1,w
 15776  04B0  00A9               	movwf	??_sprintf+1
 15777  04B1  0820               	movf	sprintf@f,w
 15778  04B2  00A8               	movwf	??_sprintf
 15779  04B3  0AA0               	incf	sprintf@f,f
 15780  04B4  1903               	skipnz
 15781  04B5  0AA1               	incf	sprintf@f+1,f
 15782  04B6  0828               	movf	??_sprintf,w
 15783  04B7  0084               	movwf	4
 15784  04B8  0829               	movf	??_sprintf+1,w
 15785  04B9  0085               	movwf	5
 15786  04BA  0800               	movf	0,w	;code access
 15787  04BB  00B3               	movwf	sprintf@c
 15788                           
 15789                           ; Switch size 1, requested type "simple"
 15790                           ; Number of cases is 3, Range of values is 0 to 105
 15791                           ; switch strategies available:
 15792                           ; Name         Instructions Cycles
 15793                           ; simple_byte           10     6 (average)
 15794                           ; direct_byte          218     6 (fixed)
 15795                           ; jumptable            260     6 (fixed)
 15796                           ;	Chosen strategy is simple_byte
 15797  04BC  3A00               	xorlw	0	; case 0
 15798  04BD  1903               	skipnz
 15799  04BE  2DDC               	goto	i1l4235
 15800  04BF  3A64               	xorlw	100	; case 100
 15801  04C0  1903               	skipnz
 15802  04C1  2CC6               	goto	i1l4161
 15803  04C2  3A0D               	xorlw	13	; case 105
 15804  04C3  1903               	skipnz
 15805  04C4  2CC6               	goto	i1l4161
 15806  04C5  2DC8               	goto	i1l4233
 15807  04C6                     i1l4161:
 15808                           
 15809                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 15810  04C6  082C               	movf	sprintf@ap,w
 15811  04C7  0086               	movwf	6
 15812  04C8  0187               	clrf	7
 15813  04C9  3F40               	moviw [0]fsr1
 15814  04CA  00AE               	movwf	sprintf@val
 15815  04CB  3F41               	moviw [1]fsr1
 15816  04CC  00AF               	movwf	sprintf@val+1
 15817  04CD                     i1l4163:
 15818  04CD  3002               	movlw	2
 15819  04CE  00A8               	movwf	??_sprintf
 15820  04CF  0828               	movf	??_sprintf,w
 15821  04D0  07AC               	addwf	sprintf@ap,f
 15822  04D1                     i1l4165:
 15823                           
 15824                           ;doprnt.c: 1287: if((int)val < 0) {
 15825  04D1  1FAF               	btfss	sprintf@val+1,7
 15826  04D2  2CD4               	goto	u334_21
 15827  04D3  2CD5               	goto	u334_20
 15828  04D4                     u334_21:
 15829  04D4  2CDE               	goto	i1l4171
 15830  04D5                     u334_20:
 15831  04D5                     i1l4167:
 15832                           
 15833                           ;doprnt.c: 1288: flag |= 0x03;
 15834  04D5  3003               	movlw	3
 15835  04D6  00A8               	movwf	??_sprintf
 15836  04D7  0828               	movf	??_sprintf,w
 15837  04D8  04B0               	iorwf	sprintf@flag,f
 15838  04D9                     i1l4169:
 15839                           
 15840                           ;doprnt.c: 1289: val = -val;
 15841  04D9  09AE               	comf	sprintf@val,f
 15842  04DA  09AF               	comf	sprintf@val+1,f
 15843  04DB  0AAE               	incf	sprintf@val,f
 15844  04DC  1903               	skipnz
 15845  04DD  0AAF               	incf	sprintf@val+1,f
 15846  04DE                     i1l4171:
 15847                           
 15848                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 15849  04DE  01B3               	clrf	sprintf@c
 15850  04DF  0AB3               	incf	sprintf@c,f
 15851  04E0                     i1l4177:
 15852                           
 15853                           ;doprnt.c: 1332: if(val < dpowers[c])
 15854  04E0  0833               	movf	sprintf@c,w
 15855  04E1  00A8               	movwf	??_sprintf
 15856  04E2  01A9               	clrf	??_sprintf+1
 15857  04E3  35A8               	lslf	??_sprintf,f
 15858  04E4  0DA9               	rlf	??_sprintf+1,f
 15859  04E5  3000               	movlw	low (_dpowers| (0+32768))
 15860  04E6  0728               	addwf	??_sprintf,w
 15861  04E7  0084               	movwf	4
 15862  04E8  3098               	movlw	high (_dpowers| (0+32768))
 15863  04E9  3D29               	addwfc	??_sprintf+1,w
 15864  04EA  0085               	movwf	5
 15865  04EB  3F00               	moviw [0]fsr0
 15866  04EC  00AA               	movwf	??_sprintf+2
 15867  04ED  3F01               	moviw [1]fsr0
 15868  04EE  00AB               	movwf	??_sprintf+3
 15869  04EF  082B               	movf	??_sprintf+3,w
 15870  04F0  022F               	subwf	sprintf@val+1,w
 15871  04F1  1D03               	skipz
 15872  04F2  2CF5               	goto	u335_25
 15873  04F3  082A               	movf	??_sprintf+2,w
 15874  04F4  022E               	subwf	sprintf@val,w
 15875  04F5                     u335_25:
 15876  04F5  1803               	skipnc
 15877  04F6  2CF8               	goto	u335_21
 15878  04F7  2CF9               	goto	u335_20
 15879  04F8                     u335_21:
 15880  04F8  2CFA               	goto	i1l4181
 15881  04F9                     u335_20:
 15882  04F9  2D04               	goto	i1l4183
 15883  04FA                     i1l4181:
 15884  04FA  3001               	movlw	1
 15885  04FB  00A8               	movwf	??_sprintf
 15886  04FC  0828               	movf	??_sprintf,w
 15887  04FD  07B3               	addwf	sprintf@c,f
 15888  04FE  3005               	movlw	5
 15889  04FF  0633               	xorwf	sprintf@c,w
 15890  0500  1D03               	btfss	3,2
 15891  0501  2D03               	goto	u336_21
 15892  0502  2D04               	goto	u336_20
 15893  0503                     u336_21:
 15894  0503  2CE0               	goto	i1l4177
 15895  0504                     u336_20:
 15896  0504                     i1l4183:
 15897                           
 15898                           ;doprnt.c: 1371: if(width && flag & 0x03)
 15899  0504  0831               	movf	sprintf@width,w
 15900  0505  0432               	iorwf	sprintf@width+1,w
 15901  0506  1903               	btfsc	3,2
 15902  0507  2D09               	goto	u337_21
 15903  0508  2D0A               	goto	u337_20
 15904  0509                     u337_21:
 15905  0509  2D14               	goto	i1l1559
 15906  050A                     u337_20:
 15907  050A                     i1l4185:
 15908  050A  0830               	movf	sprintf@flag,w
 15909  050B  3903               	andlw	3
 15910  050C  1903               	btfsc	3,2
 15911  050D  2D0F               	goto	u338_21
 15912  050E  2D10               	goto	u338_20
 15913  050F                     u338_21:
 15914  050F  2D14               	goto	i1l1559
 15915  0510                     u338_20:
 15916  0510                     i1l4187:
 15917                           
 15918                           ;doprnt.c: 1372: width--;
 15919  0510  30FF               	movlw	255
 15920  0511  07B1               	addwf	sprintf@width,f
 15921  0512  30FF               	movlw	255
 15922  0513  3DB2               	addwfc	sprintf@width+1,f
 15923  0514                     i1l1559:
 15924                           
 15925                           ;doprnt.c: 1407: if(width > c)
 15926  0514  0832               	movf	sprintf@width+1,w
 15927  0515  3A80               	xorlw	128
 15928  0516  3C80               	sublw	128
 15929  0517  1D03               	skipz
 15930  0518  2D1B               	goto	u339_25
 15931  0519  0831               	movf	sprintf@width,w
 15932  051A  0233               	subwf	sprintf@c,w
 15933  051B                     u339_25:
 15934  051B  1803               	skipnc
 15935  051C  2D1E               	goto	u339_21
 15936  051D  2D1F               	goto	u339_20
 15937  051E                     u339_21:
 15938  051E  2D28               	goto	i1l4191
 15939  051F                     u339_20:
 15940  051F                     i1l4189:
 15941                           
 15942                           ;doprnt.c: 1408: width -= c;
 15943  051F  0020               	movlb	0	; select bank0
 15944  0520  0833               	movf	sprintf@c,w
 15945  0521  00A8               	movwf	??_sprintf
 15946  0522  01A9               	clrf	??_sprintf+1
 15947  0523  0828               	movf	??_sprintf,w
 15948  0524  02B1               	subwf	sprintf@width,f
 15949  0525  0829               	movf	??_sprintf+1,w
 15950  0526  3BB2               	subwfb	sprintf@width+1,f
 15951  0527  2D2B               	goto	i1l4193
 15952  0528                     i1l4191:
 15953                           
 15954                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 15955  0528  0020               	movlb	0	; select bank0
 15956  0529  01B1               	clrf	sprintf@width
 15957  052A  01B2               	clrf	sprintf@width+1
 15958  052B                     i1l4193:
 15959                           
 15960                           ;doprnt.c: 1413: if(flag & 0x04) {
 15961  052B  1D30               	btfss	sprintf@flag,2
 15962  052C  2D2E               	goto	u340_21
 15963  052D  2D2F               	goto	u340_20
 15964  052E                     u340_21:
 15965  052E  2D5C               	goto	i1l4209
 15966  052F                     u340_20:
 15967  052F                     i1l4195:
 15968                           
 15969                           ;doprnt.c: 1418: if(flag & 0x03)
 15970  052F  0830               	movf	sprintf@flag,w
 15971  0530  3903               	andlw	3
 15972  0531  1903               	btfsc	3,2
 15973  0532  2D34               	goto	u341_21
 15974  0533  2D35               	goto	u341_20
 15975  0534                     u341_21:
 15976  0534  2D40               	goto	i1l4201
 15977  0535                     u341_20:
 15978  0535                     i1l4197:
 15979                           
 15980                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 15981  0535  302D               	movlw	45
 15982  0536  00A8               	movwf	??_sprintf
 15983  0537  0834               	movf	sprintf@sp,w
 15984  0538  0086               	movwf	6
 15985  0539  0187               	clrf	7
 15986  053A  0828               	movf	??_sprintf,w
 15987  053B  0081               	movwf	1
 15988  053C                     i1l4199:
 15989  053C  3001               	movlw	1
 15990  053D  00A8               	movwf	??_sprintf
 15991  053E  0828               	movf	??_sprintf,w
 15992  053F  07B4               	addwf	sprintf@sp,f
 15993  0540                     i1l4201:
 15994                           
 15995                           ;doprnt.c: 1441: if(width)
 15996  0540  0831               	movf	sprintf@width,w
 15997  0541  0432               	iorwf	sprintf@width+1,w
 15998  0542  1903               	btfsc	3,2
 15999  0543  2D45               	goto	u342_21
 16000  0544  2D46               	goto	u342_20
 16001  0545                     u342_21:
 16002  0545  2D88               	goto	i1l4223
 16003  0546                     u342_20:
 16004  0546                     i1l4203:
 16005                           
 16006                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 16007  0546  3030               	movlw	48
 16008  0547  00A8               	movwf	??_sprintf
 16009  0548  0834               	movf	sprintf@sp,w
 16010  0549  0086               	movwf	6
 16011  054A  0187               	clrf	7
 16012  054B  0828               	movf	??_sprintf,w
 16013  054C  0081               	movwf	1
 16014  054D                     i1l4205:
 16015  054D  3001               	movlw	1
 16016  054E  00A8               	movwf	??_sprintf
 16017  054F  0828               	movf	??_sprintf,w
 16018  0550  07B4               	addwf	sprintf@sp,f
 16019  0551                     i1l4207:
 16020                           
 16021                           ;doprnt.c: 1444: while(--width);
 16022  0551  30FF               	movlw	255
 16023  0552  07B1               	addwf	sprintf@width,f
 16024  0553  30FF               	movlw	255
 16025  0554  3DB2               	addwfc	sprintf@width+1,f
 16026  0555  0831               	movf	sprintf@width,w
 16027  0556  0432               	iorwf	sprintf@width+1,w
 16028  0557  1D03               	btfss	3,2
 16029  0558  2D5A               	goto	u343_21
 16030  0559  2D5B               	goto	u343_20
 16031  055A                     u343_21:
 16032  055A  2D46               	goto	i1l4203
 16033  055B                     u343_20:
 16034  055B  2D88               	goto	i1l4223
 16035  055C                     i1l4209:
 16036                           
 16037                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 16038  055C  0831               	movf	sprintf@width,w
 16039  055D  0432               	iorwf	sprintf@width+1,w
 16040  055E  1903               	btfsc	3,2
 16041  055F  2D61               	goto	u344_21
 16042  0560  2D62               	goto	u344_20
 16043  0561                     u344_21:
 16044  0561  2D77               	goto	i1l4217
 16045  0562                     u344_20:
 16046  0562                     i1l4211:
 16047                           
 16048                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 16049  0562  3020               	movlw	32
 16050  0563  00A8               	movwf	??_sprintf
 16051  0564  0834               	movf	sprintf@sp,w
 16052  0565  0086               	movwf	6
 16053  0566  0187               	clrf	7
 16054  0567  0828               	movf	??_sprintf,w
 16055  0568  0081               	movwf	1
 16056  0569                     i1l4213:
 16057  0569  3001               	movlw	1
 16058  056A  00A8               	movwf	??_sprintf
 16059  056B  0828               	movf	??_sprintf,w
 16060  056C  07B4               	addwf	sprintf@sp,f
 16061  056D                     i1l4215:
 16062                           
 16063                           ;doprnt.c: 1457: while(--width);
 16064  056D  30FF               	movlw	255
 16065  056E  07B1               	addwf	sprintf@width,f
 16066  056F  30FF               	movlw	255
 16067  0570  3DB2               	addwfc	sprintf@width+1,f
 16068  0571  0831               	movf	sprintf@width,w
 16069  0572  0432               	iorwf	sprintf@width+1,w
 16070  0573  1D03               	btfss	3,2
 16071  0574  2D76               	goto	u345_21
 16072  0575  2D77               	goto	u345_20
 16073  0576                     u345_21:
 16074  0576  2D62               	goto	i1l4211
 16075  0577                     u345_20:
 16076  0577                     i1l4217:
 16077                           
 16078                           ;doprnt.c: 1464: if(flag & 0x03)
 16079  0577  0830               	movf	sprintf@flag,w
 16080  0578  3903               	andlw	3
 16081  0579  1903               	btfsc	3,2
 16082  057A  2D7C               	goto	u346_21
 16083  057B  2D7D               	goto	u346_20
 16084  057C                     u346_21:
 16085  057C  2D88               	goto	i1l4223
 16086  057D                     u346_20:
 16087  057D                     i1l4219:
 16088                           
 16089                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 16090  057D  302D               	movlw	45
 16091  057E  00A8               	movwf	??_sprintf
 16092  057F  0834               	movf	sprintf@sp,w
 16093  0580  0086               	movwf	6
 16094  0581  0187               	clrf	7
 16095  0582  0828               	movf	??_sprintf,w
 16096  0583  0081               	movwf	1
 16097  0584                     i1l4221:
 16098  0584  3001               	movlw	1
 16099  0585  00A8               	movwf	??_sprintf
 16100  0586  0828               	movf	??_sprintf,w
 16101  0587  07B4               	addwf	sprintf@sp,f
 16102  0588                     i1l4223:
 16103                           
 16104                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 16105  0588  0833               	movf	sprintf@c,w
 16106  0589  00A8               	movwf	??_sprintf
 16107  058A  0828               	movf	??_sprintf,w
 16108  058B  00AD               	movwf	sprintf@prec
 16109                           
 16110                           ;doprnt.c: 1500: while(prec--) {
 16111  058C  2DBF               	goto	i1l4231
 16112  058D                     i1l4225:
 16113                           
 16114                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 16115  058D  300A               	movlw	10
 16116  058E  00F8               	movwf	___lwmod@divisor
 16117  058F  3000               	movlw	0
 16118  0590  00F9               	movwf	___lwmod@divisor+1
 16119  0591  082D               	movf	sprintf@prec,w
 16120  0592  00A8               	movwf	??_sprintf
 16121  0593  01A9               	clrf	??_sprintf+1
 16122  0594  35A8               	lslf	??_sprintf,f
 16123  0595  0DA9               	rlf	??_sprintf+1,f
 16124  0596  3000               	movlw	low (_dpowers| (0+32768))
 16125  0597  0728               	addwf	??_sprintf,w
 16126  0598  0084               	movwf	4
 16127  0599  3098               	movlw	high (_dpowers| (0+32768))
 16128  059A  3D29               	addwfc	??_sprintf+1,w
 16129  059B  0085               	movwf	5
 16130  059C  3F00               	moviw [0]fsr0
 16131  059D  00F0               	movwf	___lwdiv@divisor
 16132  059E  3F01               	moviw [1]fsr0
 16133  059F  00F1               	movwf	___lwdiv@divisor+1
 16134  05A0  082F               	movf	sprintf@val+1,w
 16135  05A1  00F3               	movwf	___lwdiv@dividend+1
 16136  05A2  082E               	movf	sprintf@val,w
 16137  05A3  00F2               	movwf	___lwdiv@dividend
 16138  05A4  318A  22E8  3184   	fcall	___lwdiv
 16139  05A7  0871               	movf	?___lwdiv+1,w
 16140  05A8  00FB               	movwf	___lwmod@dividend+1
 16141  05A9  0870               	movf	?___lwdiv,w
 16142  05AA  00FA               	movwf	___lwmod@dividend
 16143  05AB  318A  22B4  3184   	fcall	___lwmod
 16144  05AE  0878               	movf	?___lwmod,w
 16145  05AF  3E30               	addlw	48
 16146  05B0  0020               	movlb	0	; select bank0
 16147  05B1  00AA               	movwf	??_sprintf+2
 16148  05B2  082A               	movf	??_sprintf+2,w
 16149  05B3  00B3               	movwf	sprintf@c
 16150  05B4                     i1l4227:
 16151                           
 16152                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 16153  05B4  0833               	movf	sprintf@c,w
 16154  05B5  00A8               	movwf	??_sprintf
 16155  05B6  0834               	movf	sprintf@sp,w
 16156  05B7  0086               	movwf	6
 16157  05B8  0187               	clrf	7
 16158  05B9  0828               	movf	??_sprintf,w
 16159  05BA  0081               	movwf	1
 16160  05BB                     i1l4229:
 16161  05BB  3001               	movlw	1
 16162  05BC  00A8               	movwf	??_sprintf
 16163  05BD  0828               	movf	??_sprintf,w
 16164  05BE  07B4               	addwf	sprintf@sp,f
 16165  05BF                     i1l4231:
 16166  05BF  30FF               	movlw	255
 16167  05C0  00A8               	movwf	??_sprintf
 16168  05C1  0828               	movf	??_sprintf,w
 16169  05C2  07AD               	addwf	sprintf@prec,f
 16170  05C3  0A2D               	incf	sprintf@prec,w
 16171  05C4  1D03               	btfss	3,2
 16172  05C5  2DC7               	goto	u347_21
 16173  05C6  2DC8               	goto	u347_20
 16174  05C7                     u347_21:
 16175  05C7  2D8D               	goto	i1l4225
 16176  05C8                     u347_20:
 16177  05C8                     i1l4233:
 16178  05C8  0821               	movf	sprintf@f+1,w
 16179  05C9  00A9               	movwf	??_sprintf+1
 16180  05CA  0820               	movf	sprintf@f,w
 16181  05CB  00A8               	movwf	??_sprintf
 16182  05CC  0AA0               	incf	sprintf@f,f
 16183  05CD  1903               	skipnz
 16184  05CE  0AA1               	incf	sprintf@f+1,f
 16185  05CF  0828               	movf	??_sprintf,w
 16186  05D0  0084               	movwf	4
 16187  05D1  0829               	movf	??_sprintf+1,w
 16188  05D2  0085               	movwf	5
 16189  05D3  0800               	movf	0,w	;code access
 16190  05D4  00AA               	movwf	??_sprintf+2
 16191  05D5  082A               	movf	??_sprintf+2,w
 16192  05D6  00B3               	movwf	sprintf@c
 16193  05D7  0833               	movf	sprintf@c,w
 16194  05D8  1D03               	btfss	3,2
 16195  05D9  2DDB               	goto	u348_21
 16196  05DA  2DDC               	goto	u348_20
 16197  05DB                     u348_21:
 16198  05DB  2C4B               	goto	i1l4131
 16199  05DC                     u348_20:
 16200  05DC                     i1l4235:
 16201                           
 16202                           ;doprnt.c: 1564: *sp = 0;
 16203  05DC  0834               	movf	sprintf@sp,w
 16204  05DD  0086               	movwf	6
 16205  05DE  0187               	clrf	7
 16206  05DF  0181               	clrf	1
 16207  05E0                     i1l1576:
 16208  05E0  0008               	return
 16209  05E1                     __end_of_sprintf:
 16210                           
 16211                           	psect	text47
 16212  084C                     __ptext47:	
 16213 ;; *************** function _isdigit *****************
 16214 ;; Defined at:
 16215 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 16216 ;; Parameters:    Size  Location     Type
 16217 ;;  c               1    wreg     unsigned char 
 16218 ;; Auto vars:     Size  Location     Type
 16219 ;;  c               1    1[COMMON] unsigned char 
 16220 ;; Return value:  Size  Location     Type
 16221 ;;		None               void
 16222 ;; Registers used:
 16223 ;;		wreg, status,2, status,0
 16224 ;; Tracked objects:
 16225 ;;		On entry : 0/0
 16226 ;;		On exit  : 0/0
 16227 ;;		Unchanged: 0/0
 16228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16232 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16233 ;;Total ram usage:        2 bytes
 16234 ;; Hardware stack levels used:    1
 16235 ;; This function calls:
 16236 ;;		Nothing
 16237 ;; This function is called by:
 16238 ;;		_sprintf
 16239 ;; This function uses a non-reentrant model
 16240 ;;
 16241                           
 16242                           
 16243                           ;psect for function _isdigit
 16244  084C                     _isdigit:
 16245                           
 16246                           ;incstack = 0
 16247                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 16248                           ;isdigit@c stored from wreg
 16249  084C  00F1               	movwf	isdigit@c
 16250  084D                     i1l3925:
 16251  084D  01F0               	clrf	_isdigit$2958
 16252  084E                     i1l3927:
 16253  084E  303A               	movlw	58
 16254  084F  0271               	subwf	isdigit@c,w
 16255  0850  1803               	skipnc
 16256  0851  2853               	goto	u274_21
 16257  0852  2854               	goto	u274_20
 16258  0853                     u274_21:
 16259  0853  285C               	goto	i1l3933
 16260  0854                     u274_20:
 16261  0854                     i1l3929:
 16262  0854  3030               	movlw	48
 16263  0855  0271               	subwf	isdigit@c,w
 16264  0856  1C03               	skipc
 16265  0857  2859               	goto	u275_21
 16266  0858  285A               	goto	u275_20
 16267  0859                     u275_21:
 16268  0859  285C               	goto	i1l3933
 16269  085A                     u275_20:
 16270  085A                     i1l3931:
 16271  085A  01F0               	clrf	_isdigit$2958
 16272  085B  0AF0               	incf	_isdigit$2958,f
 16273  085C                     i1l3933:
 16274  085C  0C70               	rrf	_isdigit$2958,w
 16275  085D                     i1l2033:
 16276  085D  0008               	return
 16277  085E                     __end_of_isdigit:
 16278                           
 16279                           	psect	text48
 16280  0947                     __ptext48:	
 16281 ;; *************** function ___wmul *****************
 16282 ;; Defined at:
 16283 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 16284 ;; Parameters:    Size  Location     Type
 16285 ;;  multiplier      2    0[COMMON] unsigned int 
 16286 ;;  multiplicand    2    2[COMMON] unsigned int 
 16287 ;; Auto vars:     Size  Location     Type
 16288 ;;  product         2    4[COMMON] unsigned int 
 16289 ;; Return value:  Size  Location     Type
 16290 ;;                  2    0[COMMON] unsigned int 
 16291 ;; Registers used:
 16292 ;;		wreg, status,2, status,0
 16293 ;; Tracked objects:
 16294 ;;		On entry : 0/0
 16295 ;;		On exit  : 0/0
 16296 ;;		Unchanged: 0/0
 16297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16301 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16302 ;;Total ram usage:        6 bytes
 16303 ;; Hardware stack levels used:    1
 16304 ;; This function calls:
 16305 ;;		Nothing
 16306 ;; This function is called by:
 16307 ;;		_monitoring_ISR
 16308 ;;		_sprintf
 16309 ;;		_map
 16310 ;; This function uses a non-reentrant model
 16311 ;;
 16312                           
 16313                           
 16314                           ;psect for function ___wmul
 16315  0947                     ___wmul:
 16316  0947                     i1l3937:	
 16317                           ;incstack = 0
 16318                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16319                           
 16320  0947  01F4               	clrf	___wmul@product
 16321  0948  01F5               	clrf	___wmul@product+1
 16322  0949                     i1l3939:
 16323  0949  1C70               	btfss	___wmul@multiplier,0
 16324  094A  294C               	goto	u276_21
 16325  094B  294D               	goto	u276_20
 16326  094C                     u276_21:
 16327  094C  2951               	goto	i1l1580
 16328  094D                     u276_20:
 16329  094D                     i1l3941:
 16330  094D  0872               	movf	___wmul@multiplicand,w
 16331  094E  07F4               	addwf	___wmul@product,f
 16332  094F  0873               	movf	___wmul@multiplicand+1,w
 16333  0950  3DF5               	addwfc	___wmul@product+1,f
 16334  0951                     i1l1580:
 16335  0951  3001               	movlw	1
 16336  0952                     u277_25:
 16337  0952  35F2               	lslf	___wmul@multiplicand,f
 16338  0953  0DF3               	rlf	___wmul@multiplicand+1,f
 16339  0954  0B89               	decfsz	9,f
 16340  0955  2952               	goto	u277_25
 16341  0956                     i1l3943:
 16342  0956  3001               	movlw	1
 16343  0957                     u278_25:
 16344  0957  36F1               	lsrf	___wmul@multiplier+1,f
 16345  0958  0CF0               	rrf	___wmul@multiplier,f
 16346  0959  0B89               	decfsz	9,f
 16347  095A  2957               	goto	u278_25
 16348  095B                     i1l3945:
 16349  095B  0870               	movf	___wmul@multiplier,w
 16350  095C  0471               	iorwf	___wmul@multiplier+1,w
 16351  095D  1D03               	btfss	3,2
 16352  095E  2960               	goto	u279_21
 16353  095F  2961               	goto	u279_20
 16354  0960                     u279_21:
 16355  0960  2949               	goto	i1l3939
 16356  0961                     u279_20:
 16357  0961                     i1l3947:
 16358  0961  0875               	movf	___wmul@product+1,w
 16359  0962  00F1               	movwf	?___wmul+1
 16360  0963  0874               	movf	___wmul@product,w
 16361  0964  00F0               	movwf	?___wmul
 16362  0965                     i1l1582:
 16363  0965  0008               	return
 16364  0966                     __end_of___wmul:
 16365                           
 16366                           	psect	text49
 16367  0AB4                     __ptext49:	
 16368 ;; *************** function ___lwmod *****************
 16369 ;; Defined at:
 16370 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 16371 ;; Parameters:    Size  Location     Type
 16372 ;;  divisor         2    8[COMMON] unsigned int 
 16373 ;;  dividend        2   10[COMMON] unsigned int 
 16374 ;; Auto vars:     Size  Location     Type
 16375 ;;  counter         1   13[COMMON] unsigned char 
 16376 ;; Return value:  Size  Location     Type
 16377 ;;                  2    8[COMMON] unsigned int 
 16378 ;; Registers used:
 16379 ;;		wreg, status,2, status,0
 16380 ;; Tracked objects:
 16381 ;;		On entry : 0/0
 16382 ;;		On exit  : 0/0
 16383 ;;		Unchanged: 0/0
 16384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16387 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16388 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16389 ;;Total ram usage:        6 bytes
 16390 ;; Hardware stack levels used:    1
 16391 ;; This function calls:
 16392 ;;		Nothing
 16393 ;; This function is called by:
 16394 ;;		_sprintf
 16395 ;; This function uses a non-reentrant model
 16396 ;;
 16397                           
 16398                           
 16399                           ;psect for function ___lwmod
 16400  0AB4                     ___lwmod:
 16401  0AB4                     i1l3977:	
 16402                           ;incstack = 0
 16403                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 16404                           
 16405  0AB4  0878               	movf	___lwmod@divisor,w
 16406  0AB5  0479               	iorwf	___lwmod@divisor+1,w
 16407  0AB6  1903               	btfsc	3,2
 16408  0AB7  2AB9               	goto	u287_21
 16409  0AB8  2ABA               	goto	u287_20
 16410  0AB9                     u287_21:
 16411  0AB9  2AE3               	goto	i1l3995
 16412  0ABA                     u287_20:
 16413  0ABA                     i1l3979:
 16414  0ABA  01FD               	clrf	___lwmod@counter
 16415  0ABB  0AFD               	incf	___lwmod@counter,f
 16416  0ABC  2AC6               	goto	i1l3985
 16417  0ABD                     i1l3981:
 16418  0ABD  3001               	movlw	1
 16419  0ABE                     u288_25:
 16420  0ABE  35F8               	lslf	___lwmod@divisor,f
 16421  0ABF  0DF9               	rlf	___lwmod@divisor+1,f
 16422  0AC0  0B89               	decfsz	9,f
 16423  0AC1  2ABE               	goto	u288_25
 16424  0AC2                     i1l3983:
 16425  0AC2  3001               	movlw	1
 16426  0AC3  00FC               	movwf	??___lwmod
 16427  0AC4  087C               	movf	??___lwmod,w
 16428  0AC5  07FD               	addwf	___lwmod@counter,f
 16429  0AC6                     i1l3985:
 16430  0AC6  1FF9               	btfss	___lwmod@divisor+1,7
 16431  0AC7  2AC9               	goto	u289_21
 16432  0AC8  2ACA               	goto	u289_20
 16433  0AC9                     u289_21:
 16434  0AC9  2ABD               	goto	i1l3981
 16435  0ACA                     u289_20:
 16436  0ACA                     i1l3987:
 16437  0ACA  0879               	movf	___lwmod@divisor+1,w
 16438  0ACB  027B               	subwf	___lwmod@dividend+1,w
 16439  0ACC  1D03               	skipz
 16440  0ACD  2AD0               	goto	u290_25
 16441  0ACE  0878               	movf	___lwmod@divisor,w
 16442  0ACF  027A               	subwf	___lwmod@dividend,w
 16443  0AD0                     u290_25:
 16444  0AD0  1C03               	skipc
 16445  0AD1  2AD3               	goto	u290_21
 16446  0AD2  2AD4               	goto	u290_20
 16447  0AD3                     u290_21:
 16448  0AD3  2AD8               	goto	i1l3991
 16449  0AD4                     u290_20:
 16450  0AD4                     i1l3989:
 16451  0AD4  0878               	movf	___lwmod@divisor,w
 16452  0AD5  02FA               	subwf	___lwmod@dividend,f
 16453  0AD6  0879               	movf	___lwmod@divisor+1,w
 16454  0AD7  3BFB               	subwfb	___lwmod@dividend+1,f
 16455  0AD8                     i1l3991:
 16456  0AD8  3001               	movlw	1
 16457  0AD9                     u291_25:
 16458  0AD9  36F9               	lsrf	___lwmod@divisor+1,f
 16459  0ADA  0CF8               	rrf	___lwmod@divisor,f
 16460  0ADB  0B89               	decfsz	9,f
 16461  0ADC  2AD9               	goto	u291_25
 16462  0ADD                     i1l3993:
 16463  0ADD  3001               	movlw	1
 16464  0ADE  02FD               	subwf	___lwmod@counter,f
 16465  0ADF  1D03               	btfss	3,2
 16466  0AE0  2AE2               	goto	u292_21
 16467  0AE1  2AE3               	goto	u292_20
 16468  0AE2                     u292_21:
 16469  0AE2  2ACA               	goto	i1l3987
 16470  0AE3                     u292_20:
 16471  0AE3                     i1l3995:
 16472  0AE3  087B               	movf	___lwmod@dividend+1,w
 16473  0AE4  00F9               	movwf	?___lwmod+1
 16474  0AE5  087A               	movf	___lwmod@dividend,w
 16475  0AE6  00F8               	movwf	?___lwmod
 16476  0AE7                     i1l1862:
 16477  0AE7  0008               	return
 16478  0AE8                     __end_of___lwmod:
 16479                           
 16480                           	psect	text50
 16481  0AE8                     __ptext50:	
 16482 ;; *************** function ___lwdiv *****************
 16483 ;; Defined at:
 16484 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 16485 ;; Parameters:    Size  Location     Type
 16486 ;;  divisor         2    0[COMMON] unsigned int 
 16487 ;;  dividend        2    2[COMMON] unsigned int 
 16488 ;; Auto vars:     Size  Location     Type
 16489 ;;  quotient        2    5[COMMON] unsigned int 
 16490 ;;  counter         1    7[COMMON] unsigned char 
 16491 ;; Return value:  Size  Location     Type
 16492 ;;                  2    0[COMMON] unsigned int 
 16493 ;; Registers used:
 16494 ;;		wreg, status,2, status,0
 16495 ;; Tracked objects:
 16496 ;;		On entry : 0/0
 16497 ;;		On exit  : 0/0
 16498 ;;		Unchanged: 0/0
 16499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16501 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16503 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16504 ;;Total ram usage:        8 bytes
 16505 ;; Hardware stack levels used:    1
 16506 ;; This function calls:
 16507 ;;		Nothing
 16508 ;; This function is called by:
 16509 ;;		_sprintf
 16510 ;; This function uses a non-reentrant model
 16511 ;;
 16512                           
 16513                           
 16514                           ;psect for function ___lwdiv
 16515  0AE8                     ___lwdiv:
 16516  0AE8                     i1l3951:	
 16517                           ;incstack = 0
 16518                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16519                           
 16520  0AE8  01F5               	clrf	___lwdiv@quotient
 16521  0AE9  01F6               	clrf	___lwdiv@quotient+1
 16522  0AEA                     i1l3953:
 16523  0AEA  0870               	movf	___lwdiv@divisor,w
 16524  0AEB  0471               	iorwf	___lwdiv@divisor+1,w
 16525  0AEC  1903               	btfsc	3,2
 16526  0AED  2AEF               	goto	u280_21
 16527  0AEE  2AF0               	goto	u280_20
 16528  0AEF                     u280_21:
 16529  0AEF  2B1F               	goto	i1l3973
 16530  0AF0                     u280_20:
 16531  0AF0                     i1l3955:
 16532  0AF0  01F7               	clrf	___lwdiv@counter
 16533  0AF1  0AF7               	incf	___lwdiv@counter,f
 16534  0AF2  2AFC               	goto	i1l3961
 16535  0AF3                     i1l3957:
 16536  0AF3  3001               	movlw	1
 16537  0AF4                     u281_25:
 16538  0AF4  35F0               	lslf	___lwdiv@divisor,f
 16539  0AF5  0DF1               	rlf	___lwdiv@divisor+1,f
 16540  0AF6  0B89               	decfsz	9,f
 16541  0AF7  2AF4               	goto	u281_25
 16542  0AF8                     i1l3959:
 16543  0AF8  3001               	movlw	1
 16544  0AF9  00F4               	movwf	??___lwdiv
 16545  0AFA  0874               	movf	??___lwdiv,w
 16546  0AFB  07F7               	addwf	___lwdiv@counter,f
 16547  0AFC                     i1l3961:
 16548  0AFC  1FF1               	btfss	___lwdiv@divisor+1,7
 16549  0AFD  2AFF               	goto	u282_21
 16550  0AFE  2B00               	goto	u282_20
 16551  0AFF                     u282_21:
 16552  0AFF  2AF3               	goto	i1l3957
 16553  0B00                     u282_20:
 16554  0B00                     i1l3963:
 16555  0B00  3001               	movlw	1
 16556  0B01                     u283_25:
 16557  0B01  35F5               	lslf	___lwdiv@quotient,f
 16558  0B02  0DF6               	rlf	___lwdiv@quotient+1,f
 16559  0B03  0B89               	decfsz	9,f
 16560  0B04  2B01               	goto	u283_25
 16561  0B05  0871               	movf	___lwdiv@divisor+1,w
 16562  0B06  0273               	subwf	___lwdiv@dividend+1,w
 16563  0B07  1D03               	skipz
 16564  0B08  2B0B               	goto	u284_25
 16565  0B09  0870               	movf	___lwdiv@divisor,w
 16566  0B0A  0272               	subwf	___lwdiv@dividend,w
 16567  0B0B                     u284_25:
 16568  0B0B  1C03               	skipc
 16569  0B0C  2B0E               	goto	u284_21
 16570  0B0D  2B0F               	goto	u284_20
 16571  0B0E                     u284_21:
 16572  0B0E  2B14               	goto	i1l3969
 16573  0B0F                     u284_20:
 16574  0B0F                     i1l3965:
 16575  0B0F  0870               	movf	___lwdiv@divisor,w
 16576  0B10  02F2               	subwf	___lwdiv@dividend,f
 16577  0B11  0871               	movf	___lwdiv@divisor+1,w
 16578  0B12  3BF3               	subwfb	___lwdiv@dividend+1,f
 16579  0B13                     i1l3967:
 16580  0B13  1475               	bsf	___lwdiv@quotient,0
 16581  0B14                     i1l3969:
 16582  0B14  3001               	movlw	1
 16583  0B15                     u285_25:
 16584  0B15  36F1               	lsrf	___lwdiv@divisor+1,f
 16585  0B16  0CF0               	rrf	___lwdiv@divisor,f
 16586  0B17  0B89               	decfsz	9,f
 16587  0B18  2B15               	goto	u285_25
 16588  0B19                     i1l3971:
 16589  0B19  3001               	movlw	1
 16590  0B1A  02F7               	subwf	___lwdiv@counter,f
 16591  0B1B  1D03               	btfss	3,2
 16592  0B1C  2B1E               	goto	u286_21
 16593  0B1D  2B1F               	goto	u286_20
 16594  0B1E                     u286_21:
 16595  0B1E  2B00               	goto	i1l3963
 16596  0B1F                     u286_20:
 16597  0B1F                     i1l3973:
 16598  0B1F  0876               	movf	___lwdiv@quotient+1,w
 16599  0B20  00F1               	movwf	?___lwdiv+1
 16600  0B21  0875               	movf	___lwdiv@quotient,w
 16601  0B22  00F0               	movwf	?___lwdiv
 16602  0B23                     i1l1852:
 16603  0B23  0008               	return
 16604  0B24                     __end_of___lwdiv:
 16605                           
 16606                           	psect	text51
 16607  0A80                     __ptext51:	
 16608 ;; *************** function _differenceBetweenTimePeriod *****************
 16609 ;; Defined at:
 16610 ;;		line 226 in file "main.c"
 16611 ;; Parameters:    Size  Location     Type
 16612 ;;  start           3    0[COMMON] struct Time
 16613 ;;  stop            3    3[COMMON] struct Time
 16614 ;;  diff            1    6[COMMON] PTR struct Time
 16615 ;;		 -> menuLCD_ISR@diff(3), 
 16616 ;; Auto vars:     Size  Location     Type
 16617 ;;		None
 16618 ;; Return value:  Size  Location     Type
 16619 ;;                  1    wreg      void 
 16620 ;; Registers used:
 16621 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16622 ;; Tracked objects:
 16623 ;;		On entry : 0/0
 16624 ;;		On exit  : 0/0
 16625 ;;		Unchanged: 0/0
 16626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16627 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16630 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16631 ;;Total ram usage:        8 bytes
 16632 ;; Hardware stack levels used:    1
 16633 ;; This function calls:
 16634 ;;		Nothing
 16635 ;; This function is called by:
 16636 ;;		_menuLCD_ISR
 16637 ;; This function uses a non-reentrant model
 16638 ;;
 16639                           
 16640                           
 16641                           ;psect for function _differenceBetweenTimePeriod
 16642  0A80                     _differenceBetweenTimePeriod:
 16643  0A80                     i1l4113:	
 16644                           ;incstack = 0
 16645                           ; Regs used in _differenceBetweenTimePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
 16646                           
 16647                           
 16648                           ;main.c: 229: while (stop.s > start.s) {
 16649  0A80  2A87               	goto	i1l4117
 16650  0A81                     i1l4115:
 16651                           
 16652                           ;main.c: 230: --start.m;
 16653  0A81  3001               	movlw	1
 16654  0A82  02F1               	subwf	differenceBetweenTimePeriod@start+1,f
 16655                           
 16656                           ;main.c: 231: start.s += 60;
 16657  0A83  303C               	movlw	60
 16658  0A84  00F7               	movwf	??_differenceBetweenTimePeriod
 16659  0A85  0877               	movf	??_differenceBetweenTimePeriod,w
 16660  0A86  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 16661  0A87                     i1l4117:
 16662  0A87  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 16663  0A88  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 16664  0A89  1C03               	skipc
 16665  0A8A  2A8C               	goto	u329_21
 16666  0A8B  2A8D               	goto	u329_20
 16667  0A8C                     u329_21:
 16668  0A8C  2A81               	goto	i1l4115
 16669  0A8D                     u329_20:
 16670  0A8D                     i1l4119:
 16671                           
 16672                           ;main.c: 232: };main.c: 233: diff->s = start.s - stop.s;
 16673  0A8D  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 16674  0A8E  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 16675  0A8F  00F7               	movwf	??_differenceBetweenTimePeriod
 16676  0A90  0876               	movf	differenceBetweenTimePeriod@diff,w
 16677  0A91  3E02               	addlw	2
 16678  0A92  0086               	movwf	6
 16679  0A93  0187               	clrf	7
 16680  0A94  0877               	movf	??_differenceBetweenTimePeriod,w
 16681  0A95  0081               	movwf	1
 16682                           
 16683                           ;main.c: 234: while (stop.m > start.m) {
 16684  0A96  2A9D               	goto	i1l4123
 16685  0A97                     i1l4121:
 16686                           
 16687                           ;main.c: 235: --start.h;
 16688  0A97  3001               	movlw	1
 16689  0A98  02F0               	subwf	differenceBetweenTimePeriod@start,f
 16690                           
 16691                           ;main.c: 236: start.m += 60;
 16692  0A99  303C               	movlw	60
 16693  0A9A  00F7               	movwf	??_differenceBetweenTimePeriod
 16694  0A9B  0877               	movf	??_differenceBetweenTimePeriod,w
 16695  0A9C  07F1               	addwf	differenceBetweenTimePeriod@start+1,f
 16696  0A9D                     i1l4123:
 16697  0A9D  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 16698  0A9E  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 16699  0A9F  1C03               	skipc
 16700  0AA0  2AA2               	goto	u330_21
 16701  0AA1  2AA3               	goto	u330_20
 16702  0AA2                     u330_21:
 16703  0AA2  2A97               	goto	i1l4121
 16704  0AA3                     u330_20:
 16705  0AA3                     i1l4125:
 16706                           
 16707                           ;main.c: 237: };main.c: 238: diff->m = start.m - stop.m;
 16708  0AA3  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 16709  0AA4  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 16710  0AA5  00F7               	movwf	??_differenceBetweenTimePeriod
 16711  0AA6  0A76               	incf	differenceBetweenTimePeriod@diff,w
 16712  0AA7  0086               	movwf	6
 16713  0AA8  0187               	clrf	7
 16714  0AA9  0877               	movf	??_differenceBetweenTimePeriod,w
 16715  0AAA  0081               	movwf	1
 16716                           
 16717                           ;main.c: 239: diff->h = start.h - stop.h;
 16718  0AAB  0873               	movf	differenceBetweenTimePeriod@stop,w
 16719  0AAC  0270               	subwf	differenceBetweenTimePeriod@start,w
 16720  0AAD  00F7               	movwf	??_differenceBetweenTimePeriod
 16721  0AAE  0876               	movf	differenceBetweenTimePeriod@diff,w
 16722  0AAF  0086               	movwf	6
 16723  0AB0  0187               	clrf	7
 16724  0AB1  0877               	movf	??_differenceBetweenTimePeriod,w
 16725  0AB2  0081               	movwf	1
 16726  0AB3                     i1l1159:
 16727  0AB3  0008               	return
 16728  0AB4                     __end_of_differenceBetweenTimePeriod:
 16729                           
 16730                           	psect	text52
 16731  176A                     __ptext52:	
 16732 ;; *************** function _TMR2_StartTimer *****************
 16733 ;; Defined at:
 16734 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 16735 ;; Parameters:    Size  Location     Type
 16736 ;;		None
 16737 ;; Auto vars:     Size  Location     Type
 16738 ;;		None
 16739 ;; Return value:  Size  Location     Type
 16740 ;;                  1    wreg      void 
 16741 ;; Registers used:
 16742 ;;		status,2, status,0, pclath, cstack
 16743 ;; Tracked objects:
 16744 ;;		On entry : 0/0
 16745 ;;		On exit  : 0/0
 16746 ;;		Unchanged: 0/0
 16747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16752 ;;Total ram usage:        0 bytes
 16753 ;; Hardware stack levels used:    1
 16754 ;; Hardware stack levels required when called:    1
 16755 ;; This function calls:
 16756 ;;		_TMR2_Start
 16757 ;; This function is called by:
 16758 ;;		_menuLCD_ISR
 16759 ;; This function uses a non-reentrant model
 16760 ;;
 16761                           
 16762                           
 16763                           ;psect for function _TMR2_StartTimer
 16764  176A                     _TMR2_StartTimer:
 16765  176A                     i1l4051:	
 16766                           ;incstack = 0
 16767                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 16768                           
 16769                           
 16770                           ;tmr2.c: 108: TMR2_Start();
 16771  176A  3197  275B  3197   	fcall	_TMR2_Start
 16772  176D                     i1l773:
 16773  176D  0008               	return
 16774  176E                     __end_of_TMR2_StartTimer:
 16775                           
 16776                           	psect	text53
 16777  175B                     __ptext53:	
 16778 ;; *************** function _TMR2_Start *****************
 16779 ;; Defined at:
 16780 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 16781 ;; Parameters:    Size  Location     Type
 16782 ;;		None
 16783 ;; Auto vars:     Size  Location     Type
 16784 ;;		None
 16785 ;; Return value:  Size  Location     Type
 16786 ;;                  1    wreg      void 
 16787 ;; Registers used:
 16788 ;;		None
 16789 ;; Tracked objects:
 16790 ;;		On entry : 0/0
 16791 ;;		On exit  : 0/0
 16792 ;;		Unchanged: 0/0
 16793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16798 ;;Total ram usage:        0 bytes
 16799 ;; Hardware stack levels used:    1
 16800 ;; This function calls:
 16801 ;;		Nothing
 16802 ;; This function is called by:
 16803 ;;		_TMR2_StartTimer
 16804 ;; This function uses a non-reentrant model
 16805 ;;
 16806                           
 16807                           
 16808                           ;psect for function _TMR2_Start
 16809  175B                     _TMR2_Start:
 16810  175B                     i1l3921:	
 16811                           ;incstack = 0
 16812                           ; Regs used in _TMR2_Start: []
 16813                           
 16814                           
 16815                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 16816  175B  0025               	movlb	5	; select bank5
 16817  175C  178E               	bsf	14,7	;volatile
 16818  175D                     i1l770:
 16819  175D  0008               	return
 16820  175E                     __end_of_TMR2_Start:
 16821                           
 16822                           	psect	text54
 16823  1758                     __ptext54:	
 16824 ;; *************** function _PWM_Output_D4_Enable *****************
 16825 ;; Defined at:
 16826 ;;		line 242 in file "main.c"
 16827 ;; Parameters:    Size  Location     Type
 16828 ;;		None
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;		None
 16831 ;; Return value:  Size  Location     Type
 16832 ;;                  1    wreg      void 
 16833 ;; Registers used:
 16834 ;;		None
 16835 ;; Tracked objects:
 16836 ;;		On entry : 0/0
 16837 ;;		On exit  : 0/0
 16838 ;;		Unchanged: 0/0
 16839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16844 ;;Total ram usage:        0 bytes
 16845 ;; Hardware stack levels used:    1
 16846 ;; This function calls:
 16847 ;;		Nothing
 16848 ;; This function is called by:
 16849 ;;		_menuLCD_ISR
 16850 ;; This function uses a non-reentrant model
 16851 ;;
 16852                           
 16853                           
 16854                           ;psect for function _PWM_Output_D4_Enable
 16855  1758                     _PWM_Output_D4_Enable:
 16856  1758                     i1l4127:	
 16857                           ;incstack = 0
 16858                           ; Regs used in _PWM_Output_D4_Enable: []
 16859                           
 16860                           
 16861                           ;main.c: 243: PWM6EN = 1;
 16862  1758  0027               	movlb	7	; select bank7
 16863  1759  178E               	bsf	14,7	;volatile
 16864  175A                     i1l1162:
 16865  175A  0008               	return
 16866  175B                     __end_of_PWM_Output_D4_Enable:
 16867                           
 16868                           	psect	text55
 16869  0870                     __ptext55:	
 16870 ;; *************** function _LCDstr *****************
 16871 ;; Defined at:
 16872 ;;		line 206 in file "main.c"
 16873 ;; Parameters:    Size  Location     Type
 16874 ;;  p               1    wreg     PTR unsigned char 
 16875 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 16876 ;; Auto vars:     Size  Location     Type
 16877 ;;  p               1   11[COMMON] PTR unsigned char 
 16878 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 16879 ;;  c               1   10[COMMON] unsigned char 
 16880 ;; Return value:  Size  Location     Type
 16881 ;;                  1    wreg      void 
 16882 ;; Registers used:
 16883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16884 ;; Tracked objects:
 16885 ;;		On entry : 0/0
 16886 ;;		On exit  : 0/0
 16887 ;;		Unchanged: 0/0
 16888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16891 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16892 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16893 ;;Total ram usage:        3 bytes
 16894 ;; Hardware stack levels used:    1
 16895 ;; Hardware stack levels required when called:    3
 16896 ;; This function calls:
 16897 ;;		_LCDchar
 16898 ;; This function is called by:
 16899 ;;		_menuLCD_ISR
 16900 ;; This function uses a non-reentrant model
 16901 ;;
 16902                           
 16903                           
 16904                           ;psect for function _LCDstr
 16905  0870                     _LCDstr:
 16906                           
 16907                           ;incstack = 0
 16908                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16909                           ;LCDstr@p stored from wreg
 16910  0870  00FB               	movwf	LCDstr@p
 16911  0871                     i1l4107:
 16912                           
 16913                           ;main.c: 208: unsigned char c;;main.c: 210: while((c = *p++)) LCDchar(c);
 16914  0871  2876               	goto	i1l4111
 16915  0872                     i1l4109:
 16916  0872  087A               	movf	LCDstr@c,w
 16917  0873  3197  27AE  3188   	fcall	_LCDchar
 16918  0876                     i1l4111:
 16919  0876  087B               	movf	LCDstr@p,w
 16920  0877  0086               	movwf	6
 16921  0878  0187               	clrf	7
 16922  0879  0AFB               	incf	LCDstr@p,f
 16923  087A  0801               	movf	1,w
 16924  087B  00F9               	movwf	??_LCDstr
 16925  087C  0879               	movf	??_LCDstr,w
 16926  087D  00FA               	movwf	LCDstr@c
 16927  087E  087A               	movf	LCDstr@c,w
 16928  087F  1D03               	btfss	3,2
 16929  0880  2882               	goto	u328_21
 16930  0881  2883               	goto	u328_20
 16931  0882                     u328_21:
 16932  0882  2872               	goto	i1l4109
 16933  0883                     u328_20:
 16934  0883                     i1l1146:
 16935  0883  0008               	return
 16936  0884                     __end_of_LCDstr:
 16937                           
 16938                           	psect	text56
 16939  17AE                     __ptext56:	
 16940 ;; *************** function _LCDchar *****************
 16941 ;; Defined at:
 16942 ;;		line 201 in file "main.c"
 16943 ;; Parameters:    Size  Location     Type
 16944 ;;  c               1    wreg     unsigned char 
 16945 ;; Auto vars:     Size  Location     Type
 16946 ;;  c               1    8[COMMON] unsigned char 
 16947 ;; Return value:  Size  Location     Type
 16948 ;;                  1    wreg      void 
 16949 ;; Registers used:
 16950 ;;		wreg, status,2, status,0, pclath, cstack
 16951 ;; Tracked objects:
 16952 ;;		On entry : 0/0
 16953 ;;		On exit  : 0/0
 16954 ;;		Unchanged: 0/0
 16955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16960 ;;Total ram usage:        1 bytes
 16961 ;; Hardware stack levels used:    1
 16962 ;; Hardware stack levels required when called:    2
 16963 ;; This function calls:
 16964 ;;		i1_LCDsend2x4
 16965 ;; This function is called by:
 16966 ;;		_LCDstr
 16967 ;;		_menuLCD_ISR
 16968 ;; This function uses a non-reentrant model
 16969 ;;
 16970                           
 16971                           
 16972                           ;psect for function _LCDchar
 16973  17AE                     _LCDchar:
 16974                           
 16975                           ;incstack = 0
 16976                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 16977                           ;LCDchar@c stored from wreg
 16978  17AE  00F8               	movwf	LCDchar@c
 16979  17AF                     i1l3923:
 16980                           
 16981                           ;main.c: 203: LCDsend2x4(c, 0x01);
 16982  17AF  01F2               	clrf	i1LCDsend2x4@mode
 16983  17B0  0AF2               	incf	i1LCDsend2x4@mode,f
 16984  17B1  0878               	movf	LCDchar@c,w
 16985  17B2  318D  256C  3197   	fcall	i1_LCDsend2x4
 16986  17B5                     i1l1140:
 16987  17B5  0008               	return
 16988  17B6                     __end_of_LCDchar:
 16989                           
 16990                           	psect	text57
 16991  17A0                     __ptext57:	
 16992 ;; *************** function _LCDcmd *****************
 16993 ;; Defined at:
 16994 ;;		line 196 in file "main.c"
 16995 ;; Parameters:    Size  Location     Type
 16996 ;;  c               1    wreg     unsigned char 
 16997 ;; Auto vars:     Size  Location     Type
 16998 ;;  c               1    8[COMMON] unsigned char 
 16999 ;; Return value:  Size  Location     Type
 17000 ;;                  1    wreg      void 
 17001 ;; Registers used:
 17002 ;;		wreg, status,2, status,0, pclath, cstack
 17003 ;; Tracked objects:
 17004 ;;		On entry : 0/0
 17005 ;;		On exit  : 0/0
 17006 ;;		Unchanged: 0/0
 17007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17011 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17012 ;;Total ram usage:        1 bytes
 17013 ;; Hardware stack levels used:    1
 17014 ;; Hardware stack levels required when called:    2
 17015 ;; This function calls:
 17016 ;;		i1_LCDsend2x4
 17017 ;; This function is called by:
 17018 ;;		_menuLCD_ISR
 17019 ;; This function uses a non-reentrant model
 17020 ;;
 17021                           
 17022                           
 17023                           ;psect for function _LCDcmd
 17024  17A0                     _LCDcmd:
 17025                           
 17026                           ;incstack = 0
 17027                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 17028                           ;LCDcmd@c stored from wreg
 17029  17A0  00F8               	movwf	LCDcmd@c
 17030  17A1                     i1l4105:
 17031                           
 17032                           ;main.c: 198: LCDsend2x4(c, 0);
 17033  17A1  01F2               	clrf	i1LCDsend2x4@mode
 17034  17A2  0878               	movf	LCDcmd@c,w
 17035  17A3  318D  256C  3197   	fcall	i1_LCDsend2x4
 17036  17A6                     i1l1137:
 17037  17A6  0008               	return
 17038  17A7                     __end_of_LCDcmd:
 17039                           
 17040                           	psect	text58
 17041  0D6C                     __ptext58:	
 17042 ;; *************** function i1_LCDsend2x4 *****************
 17043 ;; Defined at:
 17044 ;;		line 150 in file "main.c"
 17045 ;; Parameters:    Size  Location     Type
 17046 ;;  c               1    wreg     unsigned char 
 17047 ;;  mode            1    2[COMMON] unsigned char 
 17048 ;; Auto vars:     Size  Location     Type
 17049 ;;  c               1    5[COMMON] unsigned char 
 17050 ;;  lc              1    7[COMMON] unsigned char 
 17051 ;;  hc              1    6[COMMON] unsigned char 
 17052 ;; Return value:  Size  Location     Type
 17053 ;;                  1    wreg      void 
 17054 ;; Registers used:
 17055 ;;		wreg, status,2, status,0, pclath, cstack
 17056 ;; Tracked objects:
 17057 ;;		On entry : 0/0
 17058 ;;		On exit  : 0/0
 17059 ;;		Unchanged: 0/0
 17060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17061 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17062 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17064 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17065 ;;Total ram usage:        6 bytes
 17066 ;; Hardware stack levels used:    1
 17067 ;; Hardware stack levels required when called:    1
 17068 ;; This function calls:
 17069 ;;		i1_WriteI2C
 17070 ;; This function is called by:
 17071 ;;		_LCDcmd
 17072 ;;		_LCDchar
 17073 ;; This function uses a non-reentrant model
 17074 ;;
 17075                           
 17076                           
 17077                           ;psect for function i1_LCDsend2x4
 17078  0D6C                     i1_LCDsend2x4:
 17079                           
 17080                           ;incstack = 0
 17081                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 17082                           ;i1LCDsend2x4@c stored from wreg
 17083  0D6C  00F5               	movwf	i1LCDsend2x4@c
 17084  0D6D                     i1l3875:
 17085                           
 17086                           ;main.c: 152: unsigned char hc;;main.c: 153: unsigned char lc;;main.c: 155: hc = c & 0xf
      +                          0;
 17087  0D6D  0875               	movf	i1LCDsend2x4@c,w
 17088  0D6E  39F0               	andlw	240
 17089  0D6F  00F3               	movwf	??i1_LCDsend2x4
 17090  0D70  0873               	movf	??i1_LCDsend2x4,w
 17091  0D71  00F6               	movwf	i1LCDsend2x4@hc
 17092  0D72                     i1l3877:
 17093                           
 17094                           ;main.c: 156: lc = (c << 4) & 0xf0;
 17095  0D72  0875               	movf	i1LCDsend2x4@c,w
 17096  0D73  00F3               	movwf	??i1_LCDsend2x4
 17097  0D74  3003               	movlw	3
 17098  0D75                     u259_25:
 17099  0D75  35F3               	lslf	??i1_LCDsend2x4,f
 17100  0D76  3EFF               	addlw	-1
 17101  0D77  1D03               	skipz
 17102  0D78  2D75               	goto	u259_25
 17103  0D79  3573               	lslf	??i1_LCDsend2x4,w
 17104  0D7A  39F0               	andlw	240
 17105  0D7B  00F4               	movwf	??i1_LCDsend2x4+1
 17106  0D7C  0874               	movf	??i1_LCDsend2x4+1,w
 17107  0D7D  00F7               	movwf	i1LCDsend2x4@lc
 17108  0D7E                     i1l3879:	
 17109                           ;main.c: 158: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17110                           
 17111  0D7E  0023               	movlb	3	; select bank3
 17112  0D7F  0C0F               	rrf	15,w	;volatile
 17113  0D80  0C89               	rrf	9,f
 17114  0D81  3901               	andlw	1
 17115  0D82  00F3               	movwf	??i1_LCDsend2x4
 17116  0D83  0811               	movf	17,w	;volatile
 17117  0D84  391F               	andlw	31
 17118  0D85  0473               	iorwf	??i1_LCDsend2x4,w
 17119  0D86  1D03               	btfss	3,2
 17120  0D87  2D89               	goto	u260_21
 17121  0D88  2D8A               	goto	u260_20
 17122  0D89                     u260_21:
 17123  0D89  2D7E               	goto	i1l3879
 17124  0D8A                     u260_20:
 17125  0D8A                     i1l1100:
 17126                           
 17127                           ;main.c: 159: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 17128  0D8A  1411               	bsf	17,0	;volatile
 17129  0D8B                     i1l1101:
 17130  0D8B  1811               	btfsc	17,0	;volatile
 17131  0D8C  2D8E               	goto	u261_21
 17132  0D8D  2D8F               	goto	u261_20
 17133  0D8E                     u261_21:
 17134  0D8E  2D8B               	goto	i1l1101
 17135  0D8F                     u261_20:
 17136  0D8F                     i1l3881:
 17137  0D8F  0C0F               	rrf	15,w	;volatile
 17138  0D90  0C89               	rrf	9,f
 17139  0D91  3901               	andlw	1
 17140  0D92  00F3               	movwf	??i1_LCDsend2x4
 17141  0D93  0811               	movf	17,w	;volatile
 17142  0D94  391F               	andlw	31
 17143  0D95  0473               	iorwf	??i1_LCDsend2x4,w
 17144  0D96  1D03               	btfss	3,2
 17145  0D97  2D99               	goto	u262_21
 17146  0D98  2D9A               	goto	u262_20
 17147  0D99                     u262_21:
 17148  0D99  2D8F               	goto	i1l3881
 17149  0D9A                     u262_20:
 17150  0D9A                     i1l3883:
 17151                           
 17152                           ;main.c: 160: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17153  0D9A  304E               	movlw	78
 17154  0D9B  318B  23A6  318D   	fcall	i1_WriteI2C
 17155  0D9E                     i1l3885:
 17156  0D9E  0023               	movlb	3	; select bank3
 17157  0D9F  0C0F               	rrf	15,w	;volatile
 17158  0DA0  0C89               	rrf	9,f
 17159  0DA1  3901               	andlw	1
 17160  0DA2  00F3               	movwf	??i1_LCDsend2x4
 17161  0DA3  0811               	movf	17,w	;volatile
 17162  0DA4  391F               	andlw	31
 17163  0DA5  0473               	iorwf	??i1_LCDsend2x4,w
 17164  0DA6  1D03               	btfss	3,2
 17165  0DA7  2DA9               	goto	u263_21
 17166  0DA8  2DAA               	goto	u263_20
 17167  0DA9                     u263_21:
 17168  0DA9  2D9E               	goto	i1l3885
 17169  0DAA                     u263_20:
 17170  0DAA                     i1l3887:
 17171                           
 17172                           ;main.c: 161: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17173  0DAA  0876               	movf	i1LCDsend2x4@hc,w
 17174  0DAB  0472               	iorwf	i1LCDsend2x4@mode,w
 17175  0DAC  3808               	iorlw	8
 17176  0DAD  318B  23A6  318D   	fcall	i1_WriteI2C
 17177  0DB0                     i1l3889:
 17178  0DB0  0023               	movlb	3	; select bank3
 17179  0DB1  0C0F               	rrf	15,w	;volatile
 17180  0DB2  0C89               	rrf	9,f
 17181  0DB3  3901               	andlw	1
 17182  0DB4  00F3               	movwf	??i1_LCDsend2x4
 17183  0DB5  0811               	movf	17,w	;volatile
 17184  0DB6  391F               	andlw	31
 17185  0DB7  0473               	iorwf	??i1_LCDsend2x4,w
 17186  0DB8  1D03               	btfss	3,2
 17187  0DB9  2DBB               	goto	u264_21
 17188  0DBA  2DBC               	goto	u264_20
 17189  0DBB                     u264_21:
 17190  0DBB  2DB0               	goto	i1l3889
 17191  0DBC                     u264_20:
 17192  0DBC                     i1l3891:
 17193                           
 17194                           ;main.c: 162: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 17195  0DBC  0876               	movf	i1LCDsend2x4@hc,w
 17196  0DBD  0472               	iorwf	i1LCDsend2x4@mode,w
 17197  0DBE  380C               	iorlw	12
 17198  0DBF  318B  23A6  318D   	fcall	i1_WriteI2C
 17199  0DC2                     i1l3893:
 17200  0DC2  0023               	movlb	3	; select bank3
 17201  0DC3  0C0F               	rrf	15,w	;volatile
 17202  0DC4  0C89               	rrf	9,f
 17203  0DC5  3901               	andlw	1
 17204  0DC6  00F3               	movwf	??i1_LCDsend2x4
 17205  0DC7  0811               	movf	17,w	;volatile
 17206  0DC8  391F               	andlw	31
 17207  0DC9  0473               	iorwf	??i1_LCDsend2x4,w
 17208  0DCA  1D03               	btfss	3,2
 17209  0DCB  2DCD               	goto	u265_21
 17210  0DCC  2DCE               	goto	u265_20
 17211  0DCD                     u265_21:
 17212  0DCD  2DC2               	goto	i1l3893
 17213  0DCE                     u265_20:
 17214  0DCE                     i1l1115:
 17215  0DCE                     i1l3895:	
 17216                           ;main.c: 163: _delay((unsigned long)((1)*(1000000/4000000.0)));
 17217                           
 17218                           
 17219                           ;main.c: 164: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17220  0DCE  0876               	movf	i1LCDsend2x4@hc,w
 17221  0DCF  0472               	iorwf	i1LCDsend2x4@mode,w
 17222  0DD0  3808               	iorlw	8
 17223  0DD1  318B  23A6  318D   	fcall	i1_WriteI2C
 17224  0DD4                     i1l3897:
 17225  0DD4  0023               	movlb	3	; select bank3
 17226  0DD5  0C0F               	rrf	15,w	;volatile
 17227  0DD6  0C89               	rrf	9,f
 17228  0DD7  3901               	andlw	1
 17229  0DD8  00F3               	movwf	??i1_LCDsend2x4
 17230  0DD9  0811               	movf	17,w	;volatile
 17231  0DDA  391F               	andlw	31
 17232  0DDB  0473               	iorwf	??i1_LCDsend2x4,w
 17233  0DDC  1D03               	btfss	3,2
 17234  0DDD  2DDF               	goto	u266_21
 17235  0DDE  2DE0               	goto	u266_20
 17236  0DDF                     u266_21:
 17237  0DDF  2DD4               	goto	i1l3897
 17238  0DE0                     u266_20:
 17239  0DE0                     i1l3899:
 17240                           
 17241                           ;main.c: 165: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17242  0DE0  0877               	movf	i1LCDsend2x4@lc,w
 17243  0DE1  0472               	iorwf	i1LCDsend2x4@mode,w
 17244  0DE2  3808               	iorlw	8
 17245  0DE3  318B  23A6  318D   	fcall	i1_WriteI2C
 17246  0DE6                     i1l3901:
 17247  0DE6  0023               	movlb	3	; select bank3
 17248  0DE7  0C0F               	rrf	15,w	;volatile
 17249  0DE8  0C89               	rrf	9,f
 17250  0DE9  3901               	andlw	1
 17251  0DEA  00F3               	movwf	??i1_LCDsend2x4
 17252  0DEB  0811               	movf	17,w	;volatile
 17253  0DEC  391F               	andlw	31
 17254  0DED  0473               	iorwf	??i1_LCDsend2x4,w
 17255  0DEE  1D03               	btfss	3,2
 17256  0DEF  2DF1               	goto	u267_21
 17257  0DF0  2DF2               	goto	u267_20
 17258  0DF1                     u267_21:
 17259  0DF1  2DE6               	goto	i1l3901
 17260  0DF2                     u267_20:
 17261  0DF2                     i1l3903:
 17262                           
 17263                           ;main.c: 166: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 17264  0DF2  0877               	movf	i1LCDsend2x4@lc,w
 17265  0DF3  0472               	iorwf	i1LCDsend2x4@mode,w
 17266  0DF4  380C               	iorlw	12
 17267  0DF5  318B  23A6  318D   	fcall	i1_WriteI2C
 17268  0DF8                     i1l3905:
 17269  0DF8  0023               	movlb	3	; select bank3
 17270  0DF9  0C0F               	rrf	15,w	;volatile
 17271  0DFA  0C89               	rrf	9,f
 17272  0DFB  3901               	andlw	1
 17273  0DFC  00F3               	movwf	??i1_LCDsend2x4
 17274  0DFD  0811               	movf	17,w	;volatile
 17275  0DFE  391F               	andlw	31
 17276  0DFF  0473               	iorwf	??i1_LCDsend2x4,w
 17277  0E00  1D03               	btfss	3,2
 17278  0E01  2E03               	goto	u268_21
 17279  0E02  2E04               	goto	u268_20
 17280  0E03                     u268_21:
 17281  0E03  2DF8               	goto	i1l3905
 17282  0E04                     u268_20:
 17283  0E04                     i1l1124:
 17284  0E04                     i1l3907:	
 17285                           ;main.c: 167: _delay((unsigned long)((1)*(1000000/4000000.0)));
 17286                           
 17287                           
 17288                           ;main.c: 168: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17289  0E04  0877               	movf	i1LCDsend2x4@lc,w
 17290  0E05  0472               	iorwf	i1LCDsend2x4@mode,w
 17291  0E06  3808               	iorlw	8
 17292  0E07  318B  23A6  318D   	fcall	i1_WriteI2C
 17293  0E0A                     i1l3909:
 17294  0E0A  0023               	movlb	3	; select bank3
 17295  0E0B  0C0F               	rrf	15,w	;volatile
 17296  0E0C  0C89               	rrf	9,f
 17297  0E0D  3901               	andlw	1
 17298  0E0E  00F3               	movwf	??i1_LCDsend2x4
 17299  0E0F  0811               	movf	17,w	;volatile
 17300  0E10  391F               	andlw	31
 17301  0E11  0473               	iorwf	??i1_LCDsend2x4,w
 17302  0E12  1D03               	btfss	3,2
 17303  0E13  2E15               	goto	u269_21
 17304  0E14  2E16               	goto	u269_20
 17305  0E15                     u269_21:
 17306  0E15  2E0A               	goto	i1l3909
 17307  0E16                     u269_20:
 17308  0E16                     i1l1127:
 17309                           
 17310                           ;main.c: 169: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 17311  0E16  1511               	bsf	17,2	;volatile
 17312  0E17                     i1l1128:
 17313  0E17  1911               	btfsc	17,2	;volatile
 17314  0E18  2E1A               	goto	u270_21
 17315  0E19  2E1B               	goto	u270_20
 17316  0E1A                     u270_21:
 17317  0E1A  2E17               	goto	i1l1128
 17318  0E1B                     u270_20:
 17319  0E1B                     i1l3911:
 17320                           
 17321                           ;main.c: 170: _delay((unsigned long)((50)*(1000000/4000000.0)));
 17322  0E1B  3004               	movlw	4
 17323  0E1C                     u506_27:
 17324  0E1C  0B89               	decfsz	9,f
 17325  0E1D  2E1C               	goto	u506_27
 17326  0E1E                     i1l1131:
 17327  0E1E  0008               	return
 17328  0E1F                     __end_ofi1_LCDsend2x4:
 17329                           
 17330                           	psect	text59
 17331  0BA6                     __ptext59:	
 17332 ;; *************** function i1_WriteI2C *****************
 17333 ;; Defined at:
 17334 ;;		line 47 in file "I2C/i2c.c"
 17335 ;; Parameters:    Size  Location     Type
 17336 ;;  data_out        1    wreg     unsigned char 
 17337 ;; Auto vars:     Size  Location     Type
 17338 ;;  data_out        1    1[COMMON] unsigned char 
 17339 ;; Return value:  Size  Location     Type
 17340 ;;                  1    wreg      char 
 17341 ;; Registers used:
 17342 ;;		wreg, status,2, status,0
 17343 ;; Tracked objects:
 17344 ;;		On entry : 0/0
 17345 ;;		On exit  : 0/0
 17346 ;;		Unchanged: 0/0
 17347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17352 ;;Total ram usage:        2 bytes
 17353 ;; Hardware stack levels used:    1
 17354 ;; This function calls:
 17355 ;;		Nothing
 17356 ;; This function is called by:
 17357 ;;		_tsttc
 17358 ;;		i1_LCDsend2x4
 17359 ;; This function uses a non-reentrant model
 17360 ;;
 17361                           
 17362                           
 17363                           ;psect for function i1_WriteI2C
 17364  0BA6                     i1_WriteI2C:
 17365                           
 17366                           ;incstack = 0
 17367                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 17368                           ;i1WriteI2C@data_out stored from wreg
 17369  0BA6  00F1               	movwf	i1WriteI2C@data_out
 17370  0BA7                     i1l3845:
 17371                           
 17372                           ;i2c.c: 49: SSP1BUF = data_out;
 17373  0BA7  0871               	movf	i1WriteI2C@data_out,w
 17374  0BA8  0023               	movlb	3	; select bank3
 17375  0BA9  008C               	movwf	12	;volatile
 17376  0BAA                     i1l3847:
 17377                           
 17378                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 17379  0BAA  1F90               	btfss	16,7	;volatile
 17380  0BAB  2BAD               	goto	u250_21
 17381  0BAC  2BAE               	goto	u250_20
 17382  0BAD                     u250_21:
 17383  0BAD  2BAF               	goto	i1l3853
 17384  0BAE                     u250_20:
 17385  0BAE  2BF0               	goto	i1l30
 17386  0BAF                     i1l3853:
 17387                           
 17388                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 17389  0BAF  300F               	movlw	15
 17390  0BB0  0510               	andwf	16,w	;volatile
 17391  0BB1  00F0               	movwf	??i1_WriteI2C
 17392  0BB2  3008               	movlw	8
 17393  0BB3  0670               	xorwf	??i1_WriteI2C,w
 17394  0BB4  1903               	btfsc	3,2
 17395  0BB5  2BB7               	goto	u251_21
 17396  0BB6  2BB8               	goto	u251_20
 17397  0BB7                     u251_21:
 17398  0BB7  2BCE               	goto	i1l3865
 17399  0BB8                     u251_20:
 17400  0BB8                     i1l3855:
 17401  0BB8  300F               	movlw	15
 17402  0BB9  0510               	andwf	16,w	;volatile
 17403  0BBA  00F0               	movwf	??i1_WriteI2C
 17404  0BBB  300B               	movlw	11
 17405  0BBC  0670               	xorwf	??i1_WriteI2C,w
 17406  0BBD  1903               	btfsc	3,2
 17407  0BBE  2BC0               	goto	u252_21
 17408  0BBF  2BC1               	goto	u252_20
 17409  0BC0                     u252_21:
 17410  0BC0  2BCE               	goto	i1l3865
 17411  0BC1                     u252_20:
 17412  0BC1                     i1l3857:
 17413                           
 17414                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 17415  0BC1  1610               	bsf	16,4	;volatile
 17416  0BC2                     i1l33:	
 17417                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 17418                           
 17419  0BC2  002E               	movlb	14	; select bank14
 17420  0BC3  1C0F               	btfss	15,0	;volatile
 17421  0BC4  2BC6               	goto	u253_21
 17422  0BC5  2BC7               	goto	u253_20
 17423  0BC6                     u253_21:
 17424  0BC6  2BC2               	goto	i1l33
 17425  0BC7                     u253_20:
 17426  0BC7                     i1l35:
 17427                           
 17428                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 17429  0BC7  0023               	movlb	3	; select bank3
 17430  0BC8  190F               	btfsc	15,2	;volatile
 17431  0BC9  2BCB               	goto	u254_21
 17432  0BCA  2BCC               	goto	u254_20
 17433  0BCB                     u254_21:
 17434  0BCB  2BF0               	goto	i1l30
 17435  0BCC                     u254_20:
 17436  0BCC                     i1l3859:
 17437  0BCC  080F               	movf	15,w	;volatile
 17438  0BCD  2BF0               	goto	i1l30
 17439  0BCE                     i1l3865:
 17440                           
 17441                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 17442  0BCE  300F               	movlw	15
 17443  0BCF  0510               	andwf	16,w	;volatile
 17444  0BD0  00F0               	movwf	??i1_WriteI2C
 17445  0BD1  3008               	movlw	8
 17446  0BD2  0670               	xorwf	??i1_WriteI2C,w
 17447  0BD3  1903               	btfsc	3,2
 17448  0BD4  2BD6               	goto	u255_21
 17449  0BD5  2BD7               	goto	u255_20
 17450  0BD6                     u255_21:
 17451  0BD6  2BE0               	goto	i1l42
 17452  0BD7                     u255_20:
 17453  0BD7                     i1l3867:
 17454  0BD7  300F               	movlw	15
 17455  0BD8  0510               	andwf	16,w	;volatile
 17456  0BD9  00F0               	movwf	??i1_WriteI2C
 17457  0BDA  300B               	movlw	11
 17458  0BDB  0670               	xorwf	??i1_WriteI2C,w
 17459  0BDC  1D03               	btfss	3,2
 17460  0BDD  2BDF               	goto	u256_21
 17461  0BDE  2BE0               	goto	u256_20
 17462  0BDF                     u256_21:
 17463  0BDF  2BF0               	goto	i1l30
 17464  0BE0                     u256_20:
 17465  0BE0                     i1l42:
 17466  0BE0  180F               	btfsc	15,0	;volatile
 17467  0BE1  2BE3               	goto	u257_21
 17468  0BE2  2BE4               	goto	u257_20
 17469  0BE3                     u257_21:
 17470  0BE3  2BE0               	goto	i1l42
 17471  0BE4                     u257_20:
 17472  0BE4                     i1l3869:
 17473  0BE4  0C0F               	rrf	15,w	;volatile
 17474  0BE5  0C89               	rrf	9,f
 17475  0BE6  3901               	andlw	1
 17476  0BE7  00F0               	movwf	??i1_WriteI2C
 17477  0BE8  0811               	movf	17,w	;volatile
 17478  0BE9  391F               	andlw	31
 17479  0BEA  0470               	iorwf	??i1_WriteI2C,w
 17480  0BEB  1D03               	btfss	3,2
 17481  0BEC  2BEE               	goto	u258_21
 17482  0BED  2BEF               	goto	u258_20
 17483  0BEE                     u258_21:
 17484  0BEE  2BE4               	goto	i1l3869
 17485  0BEF                     u258_20:
 17486  0BEF                     i1l47:
 17487                           
 17488                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 17489  0BEF  0811               	movf	17,w	;volatile
 17490  0BF0                     i1l30:
 17491  0BF0  0008               	return
 17492  0BF1                     __end_ofi1_WriteI2C:
 17493                           
 17494                           	psect	text60
 17495  082A                     __ptext60:	
 17496 ;; *************** function _TMR3_WriteTimer *****************
 17497 ;; Defined at:
 17498 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 17499 ;; Parameters:    Size  Location     Type
 17500 ;;  timerVal        2    0[COMMON] unsigned int 
 17501 ;; Auto vars:     Size  Location     Type
 17502 ;;		None
 17503 ;; Return value:  Size  Location     Type
 17504 ;;                  1    wreg      void 
 17505 ;; Registers used:
 17506 ;;		wreg, status,2
 17507 ;; Tracked objects:
 17508 ;;		On entry : 0/0
 17509 ;;		On exit  : 0/0
 17510 ;;		Unchanged: 0/0
 17511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17516 ;;Total ram usage:        2 bytes
 17517 ;; Hardware stack levels used:    1
 17518 ;; This function calls:
 17519 ;;		Nothing
 17520 ;; This function is called by:
 17521 ;;		_TMR3_ISR
 17522 ;;		_TMR3_Reload
 17523 ;; This function uses a non-reentrant model
 17524 ;;
 17525                           
 17526                           
 17527                           ;psect for function _TMR3_WriteTimer
 17528  082A                     _TMR3_WriteTimer:
 17529  082A                     i1l4439:	
 17530                           ;incstack = 0
 17531                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 17532                           
 17533                           
 17534                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 17535  082A  0024               	movlb	4	; select bank4
 17536  082B  1D14               	btfss	20,2	;volatile
 17537  082C  282E               	goto	u359_21
 17538  082D  282F               	goto	u359_20
 17539  082E                     u359_21:
 17540  082E  2836               	goto	i1l4449
 17541  082F                     u359_20:
 17542  082F                     i1l4441:
 17543                           
 17544                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 17545  082F  1014               	bcf	20,0	;volatile
 17546  0830                     i1l4443:
 17547                           
 17548                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 17549  0830  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 17550  0831  0093               	movwf	19	;volatile
 17551  0832                     i1l4445:
 17552                           
 17553                           ;tmr3.c: 136: TMR3L = timerVal;
 17554  0832  0870               	movf	TMR3_WriteTimer@timerVal,w
 17555  0833  0092               	movwf	18	;volatile
 17556  0834                     i1l4447:
 17557                           
 17558                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 17559  0834  1414               	bsf	20,0	;volatile
 17560                           
 17561                           ;tmr3.c: 140: }
 17562  0835  283A               	goto	i1l477
 17563  0836                     i1l4449:
 17564                           
 17565                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 17566  0836  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 17567  0837  0093               	movwf	19	;volatile
 17568  0838                     i1l4451:
 17569                           
 17570                           ;tmr3.c: 145: TMR3L = timerVal;
 17571  0838  0870               	movf	TMR3_WriteTimer@timerVal,w
 17572  0839  0092               	movwf	18	;volatile
 17573  083A                     i1l477:
 17574  083A  0008               	return
 17575  083B                     __end_of_TMR3_WriteTimer:
 17576                           
 17577                           	psect	text61
 17578  089A                     __ptext61:	
 17579 ;; *************** function _TMR1_ISR *****************
 17580 ;; Defined at:
 17581 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 17582 ;; Parameters:    Size  Location     Type
 17583 ;;		None
 17584 ;; Auto vars:     Size  Location     Type
 17585 ;;		None
 17586 ;; Return value:  Size  Location     Type
 17587 ;;                  1    wreg      void 
 17588 ;; Registers used:
 17589 ;;		wreg, status,2, status,0, pclath, cstack
 17590 ;; Tracked objects:
 17591 ;;		On entry : 0/0
 17592 ;;		On exit  : 0/0
 17593 ;;		Unchanged: 0/0
 17594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17599 ;;Total ram usage:        0 bytes
 17600 ;; Hardware stack levels used:    1
 17601 ;; Hardware stack levels required when called:    2
 17602 ;; This function calls:
 17603 ;;		Absolute function
 17604 ;;		_Clock_ISR
 17605 ;;		_TMR1_DefaultInterruptHandler
 17606 ;;		_TMR1_WriteTimer
 17607 ;; This function is called by:
 17608 ;;		_INTERRUPT_InterruptManager
 17609 ;; This function uses a non-reentrant model
 17610 ;;
 17611                           
 17612                           
 17613                           ;psect for function _TMR1_ISR
 17614  089A                     _TMR1_ISR:
 17615  089A                     i1l4803:	
 17616                           ;incstack = 0
 17617                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17618                           
 17619                           
 17620                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 17621  089A  002E               	movlb	14	; select bank14
 17622  089B  1010               	bcf	16,0	;volatile
 17623  089C                     i1l4805:
 17624                           
 17625                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 17626  089C  0021               	movlb	1	; select bank1
 17627  089D  083C               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 17628  089E  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17629  089F  083B               	movf	_timer1ReloadVal^(0+128),w	;volatile
 17630  08A0  00F0               	movwf	TMR1_WriteTimer@timerVal
 17631  08A1  3188  2019  3188   	fcall	_TMR1_WriteTimer
 17632  08A4                     i1l4807:
 17633                           
 17634                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 17635  08A4  0021               	movlb	1	; select bank1
 17636  08A5  0839               	movf	_TMR1_InterruptHandler^(0+128),w
 17637  08A6  043A               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 17638  08A7  1903               	btfsc	3,2
 17639  08A8  28AA               	goto	u426_21
 17640  08A9  28AB               	goto	u426_20
 17641  08AA                     u426_21:
 17642  08AA  28B0               	goto	i1l426
 17643  08AB                     u426_20:
 17644  08AB                     i1l4809:
 17645                           
 17646                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 17647  08AB  083A               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 17648  08AC  008A               	movwf	10
 17649  08AD  0839               	movf	_TMR1_InterruptHandler^(0+128),w
 17650  08AE  000A               	callw
 17651  08AF  3188               	pagesel	$
 17652  08B0                     i1l426:
 17653  08B0  0008               	return
 17654  08B1                     __end_of_TMR1_ISR:
 17655                           
 17656                           	psect	text62
 17657  0819                     __ptext62:	
 17658 ;; *************** function _TMR1_WriteTimer *****************
 17659 ;; Defined at:
 17660 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 17661 ;; Parameters:    Size  Location     Type
 17662 ;;  timerVal        2    0[COMMON] unsigned int 
 17663 ;; Auto vars:     Size  Location     Type
 17664 ;;		None
 17665 ;; Return value:  Size  Location     Type
 17666 ;;                  1    wreg      void 
 17667 ;; Registers used:
 17668 ;;		wreg, status,2
 17669 ;; Tracked objects:
 17670 ;;		On entry : 0/0
 17671 ;;		On exit  : 0/0
 17672 ;;		Unchanged: 0/0
 17673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17678 ;;Total ram usage:        2 bytes
 17679 ;; Hardware stack levels used:    1
 17680 ;; This function calls:
 17681 ;;		Nothing
 17682 ;; This function is called by:
 17683 ;;		_TMR1_ISR
 17684 ;;		_TMR1_Reload
 17685 ;; This function uses a non-reentrant model
 17686 ;;
 17687                           
 17688                           
 17689                           ;psect for function _TMR1_WriteTimer
 17690  0819                     _TMR1_WriteTimer:
 17691  0819                     i1l4425:	
 17692                           ;incstack = 0
 17693                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 17694                           
 17695                           
 17696                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 17697  0819  0024               	movlb	4	; select bank4
 17698  081A  1D0E               	btfss	14,2	;volatile
 17699  081B  281D               	goto	u358_21
 17700  081C  281E               	goto	u358_20
 17701  081D                     u358_21:
 17702  081D  2825               	goto	i1l4435
 17703  081E                     u358_20:
 17704  081E                     i1l4427:
 17705                           
 17706                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 17707  081E  100E               	bcf	14,0	;volatile
 17708  081F                     i1l4429:
 17709                           
 17710                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 17711  081F  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17712  0820  008D               	movwf	13	;volatile
 17713  0821                     i1l4431:
 17714                           
 17715                           ;tmr1.c: 136: TMR1L = timerVal;
 17716  0821  0870               	movf	TMR1_WriteTimer@timerVal,w
 17717  0822  008C               	movwf	12	;volatile
 17718  0823                     i1l4433:
 17719                           
 17720                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 17721  0823  140E               	bsf	14,0	;volatile
 17722                           
 17723                           ;tmr1.c: 140: }
 17724  0824  2829               	goto	i1l413
 17725  0825                     i1l4435:
 17726                           
 17727                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 17728  0825  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17729  0826  008D               	movwf	13	;volatile
 17730  0827                     i1l4437:
 17731                           
 17732                           ;tmr1.c: 145: TMR1L = timerVal;
 17733  0827  0870               	movf	TMR1_WriteTimer@timerVal,w
 17734  0828  008C               	movwf	12	;volatile
 17735  0829                     i1l413:
 17736  0829  0008               	return
 17737  082A                     __end_of_TMR1_WriteTimer:
 17738                           
 17739                           	psect	text63
 17740  06FF                     __ptext63:	
 17741 ;; *************** function _Clock_ISR *****************
 17742 ;; Defined at:
 17743 ;;		line 289 in file "main.c"
 17744 ;; Parameters:    Size  Location     Type
 17745 ;;		None
 17746 ;; Auto vars:     Size  Location     Type
 17747 ;;		None
 17748 ;; Return value:  Size  Location     Type
 17749 ;;                  1    wreg      void 
 17750 ;; Registers used:
 17751 ;;		wreg, status,2, status,0, pclath, cstack
 17752 ;; Tracked objects:
 17753 ;;		On entry : 0/0
 17754 ;;		On exit  : 0/0
 17755 ;;		Unchanged: 0/0
 17756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17761 ;;Total ram usage:        1 bytes
 17762 ;; Hardware stack levels used:    1
 17763 ;; Hardware stack levels required when called:    1
 17764 ;; This function calls:
 17765 ;;		i1_DATAEE_WriteByte
 17766 ;; This function is called by:
 17767 ;;		_main
 17768 ;;		_TMR1_ISR
 17769 ;; This function uses a non-reentrant model
 17770 ;;
 17771                           
 17772                           
 17773                           ;psect for function _Clock_ISR
 17774  06FF                     _Clock_ISR:
 17775  06FF                     i1l4521:	
 17776                           ;incstack = 0
 17777                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0+pclath+cstack]
 17778                           
 17779                           
 17780                           ;main.c: 291: t.s++;
 17781  06FF  3001               	movlw	1
 17782  0700  00FA               	movwf	??_Clock_ISR
 17783  0701  087A               	movf	??_Clock_ISR,w
 17784  0702  0020               	movlb	0	; select bank0
 17785  0703  07D9               	addwf	_t+2,f
 17786                           
 17787                           ;main.c: 293: if(t.s==60){
 17788  0704  303C               	movlw	60
 17789  0705  0659               	xorwf	_t+2,w
 17790  0706  1D03               	btfss	3,2
 17791  0707  2F09               	goto	u379_21
 17792  0708  2F0A               	goto	u379_20
 17793  0709                     u379_21:
 17794  0709  2FB9               	goto	i1l4553
 17795  070A                     u379_20:
 17796  070A                     i1l4523:
 17797                           
 17798                           ;main.c: 294: t.m++;
 17799  070A  3001               	movlw	1
 17800  070B  00FA               	movwf	??_Clock_ISR
 17801  070C  087A               	movf	??_Clock_ISR,w
 17802  070D  07D8               	addwf	_t+1,f
 17803  070E                     i1l4525:
 17804                           
 17805                           ;main.c: 295: t.s=0;
 17806  070E  01D9               	clrf	_t+2
 17807  070F                     i1l4527:
 17808                           
 17809                           ;main.c: 298: DATAEE_WriteByte( 0x7000 + (1 * 8), NREG);
 17810  070F  3008               	movlw	8
 17811  0710  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17812  0711  3070               	movlw	112
 17813  0712  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17814  0713  0021               	movlb	1	; select bank1
 17815  0714  0847               	movf	_NREG^(0+128),w
 17816  0715  00FA               	movwf	??_Clock_ISR
 17817  0716  087A               	movf	??_Clock_ISR,w
 17818  0717  00F8               	movwf	i1DATAEE_WriteByte@bData
 17819  0718  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17820  071B                     i1l4529:
 17821                           
 17822                           ;main.c: 299: DATAEE_WriteByte( 0x7000 + (2 * 8), PMON);
 17823  071B  3010               	movlw	16
 17824  071C  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17825  071D  3070               	movlw	112
 17826  071E  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17827  071F  0021               	movlb	1	; select bank1
 17828  0720  0846               	movf	_PMON^(0+128),w
 17829  0721  00FA               	movwf	??_Clock_ISR
 17830  0722  087A               	movf	??_Clock_ISR,w
 17831  0723  00F8               	movwf	i1DATAEE_WriteByte@bData
 17832  0724  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17833  0727                     i1l4531:
 17834                           
 17835                           ;main.c: 300: DATAEE_WriteByte( 0x7000 + (3 * 8), TALA);
 17836  0727  3018               	movlw	24
 17837  0728  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17838  0729  3070               	movlw	112
 17839  072A  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17840  072B  0020               	movlb	0	; select bank0
 17841  072C  0866               	movf	_TALA,w
 17842  072D  00FA               	movwf	??_Clock_ISR
 17843  072E  087A               	movf	??_Clock_ISR,w
 17844  072F  00F8               	movwf	i1DATAEE_WriteByte@bData
 17845  0730  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17846  0733                     i1l4533:
 17847                           
 17848                           ;main.c: 301: DATAEE_WriteByte( 0x7000 + (4 * 8), clkAlarm.alarmVal.h);
 17849  0733  3020               	movlw	32
 17850  0734  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17851  0735  3070               	movlw	112
 17852  0736  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17853  0737  0020               	movlb	0	; select bank0
 17854  0738  084D               	movf	_clkAlarm,w
 17855  0739  00FA               	movwf	??_Clock_ISR
 17856  073A  087A               	movf	??_Clock_ISR,w
 17857  073B  00F8               	movwf	i1DATAEE_WriteByte@bData
 17858  073C  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17859  073F                     i1l4535:
 17860                           
 17861                           ;main.c: 302: DATAEE_WriteByte( 0x7000 + (5 * 8), clkAlarm.alarmVal.m);
 17862  073F  3028               	movlw	40
 17863  0740  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17864  0741  3070               	movlw	112
 17865  0742  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17866  0743  0020               	movlb	0	; select bank0
 17867  0744  084E               	movf	_clkAlarm+1,w
 17868  0745  00FA               	movwf	??_Clock_ISR
 17869  0746  087A               	movf	??_Clock_ISR,w
 17870  0747  00F8               	movwf	i1DATAEE_WriteByte@bData
 17871  0748  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17872  074B                     i1l4537:
 17873                           
 17874                           ;main.c: 303: DATAEE_WriteByte( 0x7000 + (6 * 8), clkAlarm.alarmVal.s);
 17875  074B  3030               	movlw	48
 17876  074C  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17877  074D  3070               	movlw	112
 17878  074E  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17879  074F  0020               	movlb	0	; select bank0
 17880  0750  084F               	movf	_clkAlarm+2,w
 17881  0751  00FA               	movwf	??_Clock_ISR
 17882  0752  087A               	movf	??_Clock_ISR,w
 17883  0753  00F8               	movwf	i1DATAEE_WriteByte@bData
 17884  0754  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17885  0757                     i1l4539:
 17886                           
 17887                           ;main.c: 304: DATAEE_WriteByte( 0x7000 + (7 * 8), tempAlarm.alarmTemp);
 17888  0757  3038               	movlw	56
 17889  0758  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17890  0759  3070               	movlw	112
 17891  075A  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17892  075B  0020               	movlb	0	; select bank0
 17893  075C  0854               	movf	_tempAlarm,w
 17894  075D  00FA               	movwf	??_Clock_ISR
 17895  075E  087A               	movf	??_Clock_ISR,w
 17896  075F  00F8               	movwf	i1DATAEE_WriteByte@bData
 17897  0760  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17898  0763                     i1l4541:
 17899                           
 17900                           ;main.c: 305: DATAEE_WriteByte( 0x7000 + (8 * 8), lumAlarm.alarmLum);
 17901  0763  3040               	movlw	64
 17902  0764  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17903  0765  3070               	movlw	112
 17904  0766  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17905  0767  0020               	movlb	0	; select bank0
 17906  0768  0851               	movf	_lumAlarm,w
 17907  0769  00FA               	movwf	??_Clock_ISR
 17908  076A  087A               	movf	??_Clock_ISR,w
 17909  076B  00F8               	movwf	i1DATAEE_WriteByte@bData
 17910  076C  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17911  076F                     i1l4543:
 17912                           
 17913                           ;main.c: 306: DATAEE_WriteByte( 0x7000 + (9 * 8), ALAF);
 17914  076F  3048               	movlw	72
 17915  0770  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17916  0771  3070               	movlw	112
 17917  0772  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17918  0773  0020               	movlb	0	; select bank0
 17919  0774  0865               	movf	_ALAF,w
 17920  0775  00FA               	movwf	??_Clock_ISR
 17921  0776  087A               	movf	??_Clock_ISR,w
 17922  0777  00F8               	movwf	i1DATAEE_WriteByte@bData
 17923  0778  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17924  077B                     i1l4545:
 17925                           
 17926                           ;main.c: 307: DATAEE_WriteByte( 0x7000 + (10 * 8), t.h);
 17927  077B  3050               	movlw	80
 17928  077C  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17929  077D  3070               	movlw	112
 17930  077E  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17931  077F  0020               	movlb	0	; select bank0
 17932  0780  0857               	movf	_t,w
 17933  0781  00FA               	movwf	??_Clock_ISR
 17934  0782  087A               	movf	??_Clock_ISR,w
 17935  0783  00F8               	movwf	i1DATAEE_WriteByte@bData
 17936  0784  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17937  0787                     i1l4547:
 17938                           
 17939                           ;main.c: 308: DATAEE_WriteByte( 0x7000 + (11 * 8), t.m);
 17940  0787  3058               	movlw	88
 17941  0788  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17942  0789  3070               	movlw	112
 17943  078A  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17944  078B  0020               	movlb	0	; select bank0
 17945  078C  0858               	movf	_t+1,w
 17946  078D  00FA               	movwf	??_Clock_ISR
 17947  078E  087A               	movf	??_Clock_ISR,w
 17948  078F  00F8               	movwf	i1DATAEE_WriteByte@bData
 17949  0790  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17950  0793                     i1l4549:
 17951                           
 17952                           ;main.c: 309: DATAEE_WriteByte( 0x7000 + (12 * 8), idx_RingBuffer);
 17953  0793  3060               	movlw	96
 17954  0794  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17955  0795  3070               	movlw	112
 17956  0796  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17957  0797  0021               	movlb	1	; select bank1
 17958  0798  0845               	movf	_idx_RingBuffer^(0+128),w
 17959  0799  00FA               	movwf	??_Clock_ISR
 17960  079A  087A               	movf	??_Clock_ISR,w
 17961  079B  00F8               	movwf	i1DATAEE_WriteByte@bData
 17962  079C  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17963  079F                     i1l4551:
 17964                           
 17965                           ;main.c: 310: DATAEE_WriteByte( 0x7000 + (13 * 8), NREG + PMON + TALA + clkAlarm.alarmVa
      +                          l.h + clkAlarm.alarmVal.m + clkAlarm.alarmVal.s + tempAlarm.alarmTemp + lumAlarm.alarmLu
      +                          m + ALAF + t.h + t.m + idx_RingBuffer);
 17966  079F  3068               	movlw	104
 17967  07A0  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17968  07A1  3070               	movlw	112
 17969  07A2  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17970  07A3  0020               	movlb	0	; select bank0
 17971  07A4  084E               	movf	_clkAlarm+1,w
 17972  07A5  074F               	addwf	_clkAlarm+2,w
 17973  07A6  0758               	addwf	_t+1,w
 17974  07A7  074D               	addwf	_clkAlarm,w
 17975  07A8  0754               	addwf	_tempAlarm,w
 17976  07A9  0751               	addwf	_lumAlarm,w
 17977  07AA  0757               	addwf	_t,w
 17978  07AB  0021               	movlb	1	; select bank1
 17979  07AC  0747               	addwf	_NREG^(0+128),w
 17980  07AD  0746               	addwf	_PMON^(0+128),w
 17981  07AE  0020               	movlb	0	; select bank0
 17982  07AF  0766               	addwf	_TALA,w
 17983  07B0  0765               	addwf	_ALAF,w
 17984  07B1  0021               	movlb	1	; select bank1
 17985  07B2  0745               	addwf	_idx_RingBuffer^(0+128),w
 17986  07B3  00FA               	movwf	??_Clock_ISR
 17987  07B4  087A               	movf	??_Clock_ISR,w
 17988  07B5  00F8               	movwf	i1DATAEE_WriteByte@bData
 17989  07B6  3189  2129  3186   	fcall	i1_DATAEE_WriteByte
 17990  07B9                     i1l4553:
 17991                           
 17992                           ;main.c: 311: };main.c: 312: if(t.m==60){
 17993  07B9  303C               	movlw	60
 17994  07BA  0020               	movlb	0	; select bank0
 17995  07BB  0658               	xorwf	_t+1,w
 17996  07BC  1D03               	btfss	3,2
 17997  07BD  2FBF               	goto	u380_21
 17998  07BE  2FC0               	goto	u380_20
 17999  07BF                     u380_21:
 18000  07BF  2FC5               	goto	i1l4559
 18001  07C0                     u380_20:
 18002  07C0                     i1l4555:
 18003                           
 18004                           ;main.c: 313: t.h++;
 18005  07C0  3001               	movlw	1
 18006  07C1  00FA               	movwf	??_Clock_ISR
 18007  07C2  087A               	movf	??_Clock_ISR,w
 18008  07C3  07D7               	addwf	_t,f
 18009  07C4                     i1l4557:
 18010                           
 18011                           ;main.c: 314: t.m=0;
 18012  07C4  01D8               	clrf	_t+1
 18013  07C5                     i1l4559:
 18014                           
 18015                           ;main.c: 315: };main.c: 316: if(t.h==24){
 18016  07C5  3018               	movlw	24
 18017  07C6  0657               	xorwf	_t,w
 18018  07C7  1D03               	btfss	3,2
 18019  07C8  2FCA               	goto	u381_21
 18020  07C9  2FCB               	goto	u381_20
 18021  07CA                     u381_21:
 18022  07CA  2FCC               	goto	i1l4563
 18023  07CB                     u381_20:
 18024  07CB                     i1l4561:
 18025                           
 18026                           ;main.c: 317: t.h=0;
 18027  07CB  01D7               	clrf	_t
 18028  07CC                     i1l4563:
 18029                           
 18030                           ;main.c: 318: };main.c: 321: if((ALAF == 'A') && t.s >= clkAlarm.alarmVal.s && t.m >= cl
      +                          kAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 18031  07CC  3041               	movlw	65
 18032  07CD  0665               	xorwf	_ALAF,w
 18033  07CE  1D03               	btfss	3,2
 18034  07CF  2FD1               	goto	u382_21
 18035  07D0  2FD2               	goto	u382_20
 18036  07D1                     u382_21:
 18037  07D1  2FF4               	goto	i1l4577
 18038  07D2                     u382_20:
 18039  07D2                     i1l4565:
 18040  07D2  084F               	movf	_clkAlarm+2,w
 18041  07D3  0259               	subwf	_t+2,w
 18042  07D4  1C03               	skipc
 18043  07D5  2FD7               	goto	u383_21
 18044  07D6  2FD8               	goto	u383_20
 18045  07D7                     u383_21:
 18046  07D7  2FF4               	goto	i1l4577
 18047  07D8                     u383_20:
 18048  07D8                     i1l4567:
 18049  07D8  084E               	movf	_clkAlarm+1,w
 18050  07D9  0258               	subwf	_t+1,w
 18051  07DA  1C03               	skipc
 18052  07DB  2FDD               	goto	u384_21
 18053  07DC  2FDE               	goto	u384_20
 18054  07DD                     u384_21:
 18055  07DD  2FF4               	goto	i1l4577
 18056  07DE                     u384_20:
 18057  07DE                     i1l4569:
 18058  07DE  084D               	movf	_clkAlarm,w
 18059  07DF  0257               	subwf	_t,w
 18060  07E0  1C03               	skipc
 18061  07E1  2FE3               	goto	u385_21
 18062  07E2  2FE4               	goto	u385_20
 18063  07E3                     u385_21:
 18064  07E3  2FF4               	goto	i1l4577
 18065  07E4                     u385_20:
 18066  07E4                     i1l4571:
 18067  07E4  085C               	movf	_editingClockAlarm,w
 18068  07E5  045D               	iorwf	_editingClockAlarm+1,w
 18069  07E6  1D03               	btfss	3,2
 18070  07E7  2FE9               	goto	u386_21
 18071  07E8  2FEA               	goto	u386_20
 18072  07E9                     u386_21:
 18073  07E9  2FF4               	goto	i1l4577
 18074  07EA                     u386_20:
 18075  07EA                     i1l4573:
 18076                           
 18077                           ;main.c: 322: alarmPWMStart.h = 0xff;
 18078  07EA  30FF               	movlw	255
 18079  07EB  00FA               	movwf	??_Clock_ISR
 18080  07EC  087A               	movf	??_Clock_ISR,w
 18081  07ED  00E7               	movwf	_alarmPWMStart
 18082  07EE                     i1l4575:
 18083                           
 18084                           ;main.c: 323: clkAlarm.trigger = 1;
 18085  07EE  01D0               	clrf	_clkAlarm+3
 18086  07EF  0AD0               	incf	_clkAlarm+3,f
 18087                           
 18088                           ;main.c: 324: clkAlarm.alarmVal.h = 25;
 18089  07F0  3019               	movlw	25
 18090  07F1  00FA               	movwf	??_Clock_ISR
 18091  07F2  087A               	movf	??_Clock_ISR,w
 18092  07F3  00CD               	movwf	_clkAlarm
 18093  07F4                     i1l4577:
 18094  07F4  1003               	clrc
 18095  07F5  1F96               	btfss	22,7	;volatile
 18096  07F6  1403               	setc
 18097  07F7  1803               	btfsc	3,0
 18098  07F8  2FFA               	goto	u387_21
 18099  07F9  2FFD               	goto	u387_20
 18100  07FA                     u387_21:
 18101  07FA  0020               	movlb	0	; select bank0
 18102  07FB  1796               	bsf	22,7	;volatile
 18103  07FC  2FFF               	goto	u388_24
 18104  07FD                     u387_20:
 18105  07FD  0020               	movlb	0	; select bank0
 18106  07FE  1396               	bcf	22,7	;volatile
 18107  07FF                     u388_24:
 18108  07FF                     i1l1201:
 18109  07FF  0008               	return
 18110  0800                     __end_of_Clock_ISR:
 18111                           
 18112                           	psect	text64
 18113  0800                     __ptext64:	
 18114 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 18115 ;; Defined at:
 18116 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 18117 ;; Parameters:    Size  Location     Type
 18118 ;;		None
 18119 ;; Auto vars:     Size  Location     Type
 18120 ;;		None
 18121 ;; Return value:  Size  Location     Type
 18122 ;;                  1    wreg      void 
 18123 ;; Registers used:
 18124 ;;		None
 18125 ;; Tracked objects:
 18126 ;;		On entry : 0/0
 18127 ;;		On exit  : 0/0
 18128 ;;		Unchanged: 0/0
 18129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18134 ;;Total ram usage:        0 bytes
 18135 ;; Hardware stack levels used:    1
 18136 ;; This function calls:
 18137 ;;		Nothing
 18138 ;; This function is called by:
 18139 ;;		_TMR1_Initialize
 18140 ;;		_TMR1_ISR
 18141 ;; This function uses a non-reentrant model
 18142 ;;
 18143                           
 18144                           
 18145                           ;psect for function _TMR1_DefaultInterruptHandler
 18146  0800                     _TMR1_DefaultInterruptHandler:
 18147  0800                     i1l432:	
 18148                           ;incstack = 0
 18149                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 18150                           
 18151  0800  0008               	return
 18152  0801                     __end_of_TMR1_DefaultInterruptHandler:
 18153                           
 18154                           	psect	text65
 18155  0929                     __ptext65:	
 18156 ;; *************** function i1_DATAEE_WriteByte *****************
 18157 ;; Defined at:
 18158 ;;		line 180 in file "mcc_generated_files/memory.c"
 18159 ;; Parameters:    Size  Location     Type
 18160 ;;  bAdd            2    6[COMMON] unsigned int 
 18161 ;;  bData           1    8[COMMON] unsigned char 
 18162 ;; Auto vars:     Size  Location     Type
 18163 ;;  GIEBitValue     1    9[COMMON] unsigned char 
 18164 ;; Return value:  Size  Location     Type
 18165 ;;                  1    wreg      void 
 18166 ;; Registers used:
 18167 ;;		wreg, status,2, status,0
 18168 ;; Tracked objects:
 18169 ;;		On entry : 0/0
 18170 ;;		On exit  : 0/0
 18171 ;;		Unchanged: 0/0
 18172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18173 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18176 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18177 ;;Total ram usage:        4 bytes
 18178 ;; Hardware stack levels used:    1
 18179 ;; This function calls:
 18180 ;;		Nothing
 18181 ;; This function is called by:
 18182 ;;		_Clock_ISR
 18183 ;;		_monitoring_ISR
 18184 ;; This function uses a non-reentrant model
 18185 ;;
 18186                           
 18187                           
 18188                           ;psect for function i1_DATAEE_WriteByte
 18189  0929                     i1_DATAEE_WriteByte:
 18190  0929                     i1l4267:	
 18191                           ;incstack = 0
 18192                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 18193                           
 18194                           
 18195                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 18196  0929  3000               	movlw	0
 18197  092A  1B8B               	btfsc	11,7	;volatile
 18198  092B  3001               	movlw	1
 18199  092C  00F9               	movwf	i1DATAEE_WriteByte@GIEBitValue
 18200                           
 18201                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 18202  092D  0877               	movf	i1DATAEE_WriteByte@bAdd+1,w
 18203  092E  0030               	movlb	16	; select bank16
 18204  092F  009B               	movwf	27	;volatile
 18205  0930                     i1l4269:
 18206                           
 18207                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 18208  0930  0876               	movf	i1DATAEE_WriteByte@bAdd,w
 18209  0931  009A               	movwf	26	;volatile
 18210  0932                     i1l4271:
 18211                           
 18212                           ;memory.c: 186: NVMDATL = bData;
 18213  0932  0878               	movf	i1DATAEE_WriteByte@bData,w
 18214  0933  009C               	movwf	28	;volatile
 18215  0934                     i1l4273:
 18216                           
 18217                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 18218  0934  171E               	bsf	30,6	;volsfr
 18219  0935                     i1l4275:
 18220                           
 18221                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 18222  0935  151E               	bsf	30,2	;volsfr
 18223  0936                     i1l4277:
 18224                           
 18225                           ;memory.c: 189: INTCONbits.GIE = 0;
 18226  0936  138B               	bcf	11,7	;volatile
 18227  0937                     i1l4279:
 18228                           
 18229                           ;memory.c: 190: NVMCON2 = 0x55;
 18230  0937  3055               	movlw	85
 18231  0938  009F               	movwf	31	;volsfr
 18232  0939                     i1l4281:
 18233                           
 18234                           ;memory.c: 191: NVMCON2 = 0xAA;
 18235  0939  30AA               	movlw	170
 18236  093A  009F               	movwf	31	;volsfr
 18237  093B                     i1l4283:
 18238                           
 18239                           ;memory.c: 192: NVMCON1bits.WR = 1;
 18240  093B  149E               	bsf	30,1	;volsfr
 18241  093C                     i1l842:	
 18242                           ;memory.c: 195: {
 18243                           
 18244  093C  189E               	btfsc	30,1	;volsfr
 18245  093D  293F               	goto	u357_21
 18246  093E  2940               	goto	u357_20
 18247  093F                     u357_21:
 18248  093F  293C               	goto	i1l842
 18249  0940                     u357_20:
 18250  0940                     i1l844:
 18251                           
 18252                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 18253  0940  111E               	bcf	30,2	;volsfr
 18254  0941                     i1l4285:
 18255                           
 18256                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 18257  0941  0C79               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 18258  0942  1C03               	skipc
 18259  0943  138B               	bcf	11,7	;volatile
 18260  0944  1803               	skipnc
 18261  0945  178B               	bsf	11,7	;volatile
 18262  0946                     i1l845:
 18263  0946  0008               	return
 18264  0947                     __end_ofi1_DATAEE_WriteByte:
 18265                           
 18266                           	psect	text66
 18267  1776                     __ptext66:	
 18268 ;; *************** function _INT_ISR *****************
 18269 ;; Defined at:
 18270 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 18271 ;; Parameters:    Size  Location     Type
 18272 ;;		None
 18273 ;; Auto vars:     Size  Location     Type
 18274 ;;		None
 18275 ;; Return value:  Size  Location     Type
 18276 ;;                  1    wreg      void 
 18277 ;; Registers used:
 18278 ;;		wreg, status,2, status,0, pclath, cstack
 18279 ;; Tracked objects:
 18280 ;;		On entry : 0/0
 18281 ;;		On exit  : 0/0
 18282 ;;		Unchanged: 0/0
 18283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18288 ;;Total ram usage:        0 bytes
 18289 ;; Hardware stack levels used:    1
 18290 ;; Hardware stack levels required when called:    2
 18291 ;; This function calls:
 18292 ;;		_INT_CallBack
 18293 ;; This function is called by:
 18294 ;;		_INTERRUPT_InterruptManager
 18295 ;; This function uses a non-reentrant model
 18296 ;;
 18297                           
 18298                           
 18299                           ;psect for function _INT_ISR
 18300  1776                     _INT_ISR:
 18301  1776                     i1l4783:	
 18302                           ;incstack = 0
 18303                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 18304                           
 18305                           
 18306                           ;ext_int.c: 34: (PIR0bits.INTF = 0);
 18307  1776  002E               	movlb	14	; select bank14
 18308  1777  100C               	bcf	12,0	;volatile
 18309  1778                     i1l4785:
 18310                           
 18311                           ;ext_int.c: 37: INT_CallBack();
 18312  1778  3197  27CA  3197   	fcall	_INT_CallBack
 18313  177B                     i1l1364:
 18314  177B  0008               	return
 18315  177C                     __end_of_INT_ISR:
 18316                           
 18317                           	psect	text67
 18318  17CA                     __ptext67:	
 18319 ;; *************** function _INT_CallBack *****************
 18320 ;; Defined at:
 18321 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 18322 ;; Parameters:    Size  Location     Type
 18323 ;;		None
 18324 ;; Auto vars:     Size  Location     Type
 18325 ;;		None
 18326 ;; Return value:  Size  Location     Type
 18327 ;;                  1    wreg      void 
 18328 ;; Registers used:
 18329 ;;		wreg, status,2, status,0, pclath, cstack
 18330 ;; Tracked objects:
 18331 ;;		On entry : 0/0
 18332 ;;		On exit  : 0/0
 18333 ;;		Unchanged: 0/0
 18334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18339 ;;Total ram usage:        0 bytes
 18340 ;; Hardware stack levels used:    1
 18341 ;; Hardware stack levels required when called:    1
 18342 ;; This function calls:
 18343 ;;		Absolute function
 18344 ;;		_INT_DefaultInterruptHandler
 18345 ;;		_S1_ISR
 18346 ;; This function is called by:
 18347 ;;		_INT_ISR
 18348 ;; This function uses a non-reentrant model
 18349 ;;
 18350                           
 18351                           
 18352                           ;psect for function _INT_CallBack
 18353  17CA                     _INT_CallBack:
 18354  17CA                     i1l4747:	
 18355                           ;incstack = 0
 18356                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 18357                           
 18358                           
 18359                           ;ext_int.c: 44: if(INT_InterruptHandler)
 18360  17CA  0021               	movlb	1	; select bank1
 18361  17CB  0831               	movf	_INT_InterruptHandler^(0+128),w
 18362  17CC  0432               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 18363  17CD  1903               	btfsc	3,2
 18364  17CE  2FD0               	goto	u422_21
 18365  17CF  2FD1               	goto	u422_20
 18366  17D0                     u422_21:
 18367  17D0  2FD6               	goto	i1l1368
 18368  17D1                     u422_20:
 18369  17D1                     i1l4749:
 18370                           
 18371                           ;ext_int.c: 45: {;ext_int.c: 46: INT_InterruptHandler();
 18372  17D1  0832               	movf	(_INT_InterruptHandler+1)^(0+128),w
 18373  17D2  008A               	movwf	10
 18374  17D3  0831               	movf	_INT_InterruptHandler^(0+128),w
 18375  17D4  000A               	callw
 18376  17D5  3197               	pagesel	$
 18377  17D6                     i1l1368:
 18378  17D6  0008               	return
 18379  17D7                     __end_of_INT_CallBack:
 18380                           
 18381                           	psect	text68
 18382  1757                     __ptext68:	
 18383 ;; *************** function _INT_DefaultInterruptHandler *****************
 18384 ;; Defined at:
 18385 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 18386 ;; Parameters:    Size  Location     Type
 18387 ;;		None
 18388 ;; Auto vars:     Size  Location     Type
 18389 ;;		None
 18390 ;; Return value:  Size  Location     Type
 18391 ;;                  1    wreg      void 
 18392 ;; Registers used:
 18393 ;;		None
 18394 ;; Tracked objects:
 18395 ;;		On entry : 0/0
 18396 ;;		On exit  : 0/0
 18397 ;;		Unchanged: 0/0
 18398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18403 ;;Total ram usage:        0 bytes
 18404 ;; Hardware stack levels used:    1
 18405 ;; This function calls:
 18406 ;;		Nothing
 18407 ;; This function is called by:
 18408 ;;		_EXT_INT_Initialize
 18409 ;;		_INT_CallBack
 18410 ;; This function uses a non-reentrant model
 18411 ;;
 18412                           
 18413                           
 18414                           ;psect for function _INT_DefaultInterruptHandler
 18415  1757                     _INT_DefaultInterruptHandler:
 18416  1757                     i1l1374:	
 18417                           ;incstack = 0
 18418                           ; Regs used in _INT_DefaultInterruptHandler: []
 18419                           
 18420  1757  0008               	return
 18421  1758                     __end_of_INT_DefaultInterruptHandler:
 18422                           
 18423                           	psect	text69
 18424  0B63                     __ptext69:	
 18425 ;; *************** function _S1_ISR *****************
 18426 ;; Defined at:
 18427 ;;		line 621 in file "main.c"
 18428 ;; Parameters:    Size  Location     Type
 18429 ;;		None
 18430 ;; Auto vars:     Size  Location     Type
 18431 ;;		None
 18432 ;; Return value:  Size  Location     Type
 18433 ;;                  1    wreg      void 
 18434 ;; Registers used:
 18435 ;;		wreg, status,2, status,0
 18436 ;; Tracked objects:
 18437 ;;		On entry : 0/0
 18438 ;;		On exit  : 0/0
 18439 ;;		Unchanged: 0/0
 18440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18445 ;;Total ram usage:        1 bytes
 18446 ;; Hardware stack levels used:    1
 18447 ;; This function calls:
 18448 ;;		Nothing
 18449 ;; This function is called by:
 18450 ;;		_main
 18451 ;;		_INT_CallBack
 18452 ;; This function uses a non-reentrant model
 18453 ;;
 18454                           
 18455                           
 18456                           ;psect for function _S1_ISR
 18457  0B63                     _S1_ISR:
 18458  0B63                     i1l4239:	
 18459                           ;incstack = 0
 18460                           ; Regs used in _S1_ISR: [wreg+status,2+status,0]
 18461                           
 18462                           
 18463                           ;main.c: 625: if(mode == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger
      +                          )){
 18464  0B63  0020               	movlb	0	; select bank0
 18465  0B64  085A               	movf	_mode,w
 18466  0B65  045B               	iorwf	_mode+1,w
 18467  0B66  1D03               	btfss	3,2
 18468  0B67  2B69               	goto	u349_21
 18469  0B68  2B6A               	goto	u349_20
 18470  0B69                     u349_21:
 18471  0B69  2B7D               	goto	i1l4249
 18472  0B6A                     u349_20:
 18473  0B6A                     i1l4241:
 18474  0B6A  0850               	movf	_clkAlarm+3,w
 18475  0B6B  1D03               	btfss	3,2
 18476  0B6C  2B6E               	goto	u350_21
 18477  0B6D  2B6F               	goto	u350_20
 18478  0B6E                     u350_21:
 18479  0B6E  2B79               	goto	i1l4247
 18480  0B6F                     u350_20:
 18481  0B6F                     i1l4243:
 18482  0B6F  0855               	movf	_tempAlarm+1,w
 18483  0B70  1D03               	btfss	3,2
 18484  0B71  2B73               	goto	u351_21
 18485  0B72  2B74               	goto	u351_20
 18486  0B73                     u351_21:
 18487  0B73  2B79               	goto	i1l4247
 18488  0B74                     u351_20:
 18489  0B74                     i1l4245:
 18490  0B74  0852               	movf	_lumAlarm+1,w
 18491  0B75  1903               	btfsc	3,2
 18492  0B76  2B78               	goto	u352_21
 18493  0B77  2B79               	goto	u352_20
 18494  0B78                     u352_21:
 18495  0B78  2B7D               	goto	i1l4249
 18496  0B79                     u352_20:
 18497  0B79                     i1l4247:
 18498                           
 18499                           ;main.c: 626: clkAlarm.trigger = 0;
 18500  0B79  01D0               	clrf	_clkAlarm+3
 18501                           
 18502                           ;main.c: 627: tempAlarm.trigger = 0;
 18503  0B7A  01D5               	clrf	_tempAlarm+1
 18504                           
 18505                           ;main.c: 628: lumAlarm.trigger = 0;
 18506  0B7B  01D2               	clrf	_lumAlarm+1
 18507                           
 18508                           ;main.c: 629: } else{
 18509  0B7C  2BA5               	goto	i1l1327
 18510  0B7D                     i1l4249:
 18511                           
 18512                           ;main.c: 630: if(mode != 1){
 18513  0B7D  035A               	decf	_mode,w
 18514  0B7E  045B               	iorwf	_mode+1,w
 18515  0B7F  1903               	btfsc	3,2
 18516  0B80  2B82               	goto	u353_21
 18517  0B81  2B83               	goto	u353_20
 18518  0B82                     u353_21:
 18519  0B82  2B87               	goto	i1l4253
 18520  0B83                     u353_20:
 18521  0B83                     i1l4251:
 18522                           
 18523                           ;main.c: 631: mode++;
 18524  0B83  3001               	movlw	1
 18525  0B84  07DA               	addwf	_mode,f
 18526  0B85  3000               	movlw	0
 18527  0B86  3DDB               	addwfc	_mode+1,f
 18528  0B87                     i1l4253:
 18529                           
 18530                           ;main.c: 632: };main.c: 633: if(mode == 1){
 18531  0B87  035A               	decf	_mode,w
 18532  0B88  045B               	iorwf	_mode+1,w
 18533  0B89  1D03               	btfss	3,2
 18534  0B8A  2B8C               	goto	u354_21
 18535  0B8B  2B8D               	goto	u354_20
 18536  0B8C                     u354_21:
 18537  0B8C  2BA5               	goto	i1l1327
 18538  0B8D                     u354_20:
 18539  0B8D                     i1l4255:
 18540                           
 18541                           ;main.c: 634: editingClockAlarm++;
 18542  0B8D  3001               	movlw	1
 18543  0B8E  07DC               	addwf	_editingClockAlarm,f
 18544  0B8F  3000               	movlw	0
 18545  0B90  3DDD               	addwfc	_editingClockAlarm+1,f
 18546                           
 18547                           ;main.c: 635: if(editingClockAlarm > 3){
 18548  0B91  085D               	movf	_editingClockAlarm+1,w
 18549  0B92  3A80               	xorlw	128
 18550  0B93  00F0               	movwf	??_S1_ISR
 18551  0B94  3080               	movlw	128
 18552  0B95  0270               	subwf	??_S1_ISR,w
 18553  0B96  1D03               	skipz
 18554  0B97  2B9A               	goto	u355_25
 18555  0B98  3004               	movlw	4
 18556  0B99  025C               	subwf	_editingClockAlarm,w
 18557  0B9A                     u355_25:
 18558  0B9A  1C03               	skipc
 18559  0B9B  2B9D               	goto	u355_21
 18560  0B9C  2B9E               	goto	u355_20
 18561  0B9D                     u355_21:
 18562  0B9D  2BA5               	goto	i1l1327
 18563  0B9E                     u355_20:
 18564  0B9E                     i1l4257:
 18565                           
 18566                           ;main.c: 636: editingClockAlarm = 0;
 18567  0B9E  0020               	movlb	0	; select bank0
 18568  0B9F  01DC               	clrf	_editingClockAlarm
 18569  0BA0  01DD               	clrf	_editingClockAlarm+1
 18570  0BA1                     i1l4259:
 18571                           
 18572                           ;main.c: 637: mode++;
 18573  0BA1  3001               	movlw	1
 18574  0BA2  07DA               	addwf	_mode,f
 18575  0BA3  3000               	movlw	0
 18576  0BA4  3DDB               	addwfc	_mode+1,f
 18577  0BA5                     i1l1327:
 18578  0BA5  0008               	return
 18579  0BA6                     __end_of_S1_ISR:
 18580  007E                     btemp	set	126	;btemp
 18581  007E                     int$flags	set	126
 18582  007E                     wtemp0	set	126
 18583                           
 18584                           	psect	config
 18585                           
 18586                           ;Config register CONFIG1 @ 0x8007
 18587                           ;	External Oscillator mode selection bits
 18588                           ;	FEXTOSC = OFF, Oscillator not enabled
 18589                           ;	Power-up default value for COSC bits
 18590                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 18591                           ;	Clock Out Enable bit
 18592                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 18593                           ;	Clock Switch Enable bit
 18594                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18595                           ;	Fail-Safe Clock Monitor Enable bit
 18596                           ;	FCMEN = ON, FSCM timer enabled
 18597  8007                     	org	32775
 18598  8007  3FEC               	dw	16364
 18599                           
 18600                           ;Config register CONFIG2 @ 0x8008
 18601                           ;	Master Clear Enable bit
 18602                           ;	MCLRE = ON, MCLR pin is Master Clear function
 18603                           ;	Power-up Timer Enable bit
 18604                           ;	PWRTE = OFF, PWRT disabled
 18605                           ;	Low-Power BOR enable bit
 18606                           ;	LPBOREN = OFF, ULPBOR disabled
 18607                           ;	Brown-out reset enable bits
 18608                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 18609                           ;	Brown-out Reset Voltage Selection
 18610                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 18611                           ;	Zero-cross detect disable
 18612                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 18613                           ;	Peripheral Pin Select one-way control
 18614                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 18615                           ;	Stack Overflow/Underflow Reset Enable bit
 18616                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 18617                           ;	Background Debugger
 18618                           ;	DEBUG = OFF, Background Debugger disabled
 18619  8008                     	org	32776
 18620  8008  3FFF               	dw	16383
 18621                           
 18622                           ;Config register CONFIG3 @ 0x8009
 18623                           ;	WDT Period Select bits
 18624                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18625                           ;	WDT operating mode
 18626                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 18627                           ;	WDT Window Select bits
 18628                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18629                           ;	WDT input clock selector
 18630                           ;	WDTCCS = SC, Software Control
 18631  8009                     	org	32777
 18632  8009  3F9F               	dw	16287
 18633                           
 18634                           ;Config register CONFIG4 @ 0x800A
 18635                           ;	UserNVM self-write protection bits
 18636                           ;	WRT = OFF, Write protection off
 18637                           ;	Scanner Enable bit
 18638                           ;	SCANE = available, Scanner module is available for use
 18639                           ;	Low Voltage Programming Enable bit
 18640                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 18641  800A                     	org	32778
 18642  800A  3FFF               	dw	16383
 18643                           
 18644                           ;Config register CONFIG5 @ 0x800B
 18645                           ;	UserNVM Program memory code protection bit
 18646                           ;	CP = OFF, Program Memory code protection disabled
 18647                           ;	DataNVM code protection bit
 18648                           ;	CPD = OFF, Data EEPROM code protection disabled
 18649  800B                     	org	32779
 18650  800B  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        7
    BSS         37
    Persistent  46
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      80
    BANK1            80     17      40
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), S1_ISR(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), S1_ISR(), Absolute function(), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 3
		 -> menuLCD_ISR@diff(BANK0[3]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->i1_DATAEE_WriteByte
    _tsttc->i1_WriteI2C
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_Clock_ISR
    _Clock_ISR->i1_DATAEE_WriteByte
    i1_DATAEE_WriteByte->___wmul
    _INT_CallBack->_S1_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7733
                                              9 BANK1      8     8      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                          _editClock
                            _editLum
                           _editTemp
                   _i2c1_driver_open
                       _toggleAlarms
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     696
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     220
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    4017
                                              0 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2    1184
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    9775
                            _INT_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0    2511
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       3     3      0    2271
                                             10 COMMON     3     3      0
           _ADCC_GetSingleConversion
                             ___wmul
                              _tsttc
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    5999
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         24    24      0    5759
                                             21 BANK0     24    24      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
               i1_PWM6_LoadDutyValue
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    3411
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                          8     1      7     595
                                              0 COMMON     8     1      7
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               3     3      0     550
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    1265
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0    1025
                                             10 COMMON     1     1      0
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) i1_DATAEE_WriteByte                                   4     1      3    1025
                                              6 COMMON     4     1      3
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
                             _S1_ISR *
 ---------------------------------------------------------------------------------
 (7) _S1_ISR                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _INT_SetInterruptHandler
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _editClock
   _editLum
   _editTemp
   _i2c1_driver_open
   _toggleAlarms

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _S1_ISR *
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
       i1_DATAEE_WriteByte
         ___wmul (ARG)
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       i1_PWM6_LoadDutyValue
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       ___wmul
       _tsttc
         _ReadI2C
         i1_WriteI2C
       i1_DATAEE_WriteByte
         ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     11      28       7       50.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      86      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      86      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Nov 06 22:51:20 2020

                                       _t 0057          __end_of_TMR5_SetInterruptHandler 1794  
                              i1_WriteI2C 0BA6                                        l30 0CF5  
                                      l33 0CBD                                        l42 0CDF  
                                      l35 0CC2                                        l47 0CF3  
                     ___wmul@multiplicand 0072                         ??_TMR5_WriteTimer 0072  
             __size_of_PWM6_LoadDutyValue 0019                                       l124 0B62  
                                     l243 17C9                                       l182 17BD  
                                     l176 09E1                                       l179 0809  
                                     l429 1787                                       l463 09A3  
                                     l731 17E3                                       l493 178D  
                                     l717 1793                                       l734 090E  
                                     l575 08F5                                       l399 0984  
                                     l761 17FF                                       l842 09FA  
                                     l844 09FE                                       l845 0A05  
                                     l687 09C2                                       l848 0818  
                                     l776 1769                                       l779 1775  
                                     l998 0C02                                       l999 0C04  
                                     _PR2 028D                           _timer1ReloadVal 00BB  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 17F2  
                                     wreg 0009                               ?_LCDsend2x4 00A2  
                         __end_of_LCDchar 17B6                                      l1010 0C3D  
                                    l1011 0C3F                                      l1100 0E41  
                                    l1101 0E43                                      l1014 0C43  
                                    l1131 0EF2                                      l1115 0E93  
                                    l1124 0ED3                                      l1301 0A09  
                                    l1134 0D6B                                      l1310 0A54  
                                    l1127 0EE9                                      l1128 0EEB  
                                    l1313 0A6C                                      l1307 0A2C  
                                    l1165 1766                                      l1317 0A7F  
                                    l1342 0245                                      l4001 0C9E  
                                    l1273 0C44                                      l1346 0249  
                                    l4011 0CB0                                      l4003 0CA1  
                                    l1371 1781                                      l1347 024C  
                         _timer3ReloadVal 006E                                      l1292 0A30  
                                    l1348 024F                                      l4013 0CBB  
                                    l4021 0CC9                                      l4023 0CD4  
                                    l4015 0CC7                                      l4031 1782  
                                    l4025 0CE4                                      l4009 0CA6  
                                    l1377 17F1                                      l4033 1788  
                                    l1289 0C9B                                      l5001 0A13  
                                    l1298 0A53                                      l5003 0A19  
                                    l5011 0A59                                      l4301 0B34  
                                    l5005 0A1A                                      l5013 0A5F  
                                    l5101 00F4                                      l4311 0B49  
                                    l4303 0B37                                      l5007 0A23  
                                    l5015 0A66                                      l5111 01B4  
                                    l5103 00F9                                      l4401 17E4  
                                    l4321 0B53                                      l4313 0B4B  
                                    l4305 0B39                                      l4049 178E  
                                    l5009 0A2B                                      l5017 0A75  
                                    l5121 01F5                                      l5113 01C1  
                                    l5105 0191                                      l4403 17E7  
                                    l4331 0B5F                                      l4323 0B56  
                                    l4315 0B4D                                      l4307 0B3B  
                                    l4411 096B                                      l5019 0A7D  
                                    l5131 022A                                      l5123 0202  
                                    l5115 01CE                                      l5107 019D  
                                    l4501 0E84                                      l4261 177C  
                                    l4405 17EF                                      l4341 0808  
                                    l4325 0B58                                      l4317 0B4F  
                                    l4309 0B3D                                      l4333 17B6  
                                    l4421 0979                                      l4413 096D  
                                    l5141 0231                                      l5133 022B  
                                    l5125 020F                                      l5117 01DB  
                                    l5109 01A8                                      l4511 0EBE  
                                    l4503 0E93                                      l4351 08F3  
                                    l4335 0801                                      l4327 0B5B  
                                    l4319 0B51                                      l4343 17D7  
                                    l4423 0981                                      l4415 096F  
                                    l4407 0966                                      l5151 023A  
                                    l5143 0233                                      l5135 022C  
                                    l5127 021C                                      l5119 01E8  
                                    l5071 007B                                      l4513 0EC4  
                                    l4505 0E9A                                      l4337 0804  
                                    l4329 0B5D                                      l4345 17DE  
                                    l4417 0976                                      l4409 0969  
                                    l4361 098E                                      l4353 0985  
                                    l5161 0246                                      l5153 023B  
                                    l5145 0234                                      l5137 022D  
                                    l5129 0228                                      l5081 00AF  
                                    l5073 009E                                      l4515 0ED3  
                                    l4507 0EA9                                      l4347 08DF  
                                    l4339 0805                                      l4291 0B2A  
                                    l4419 0978                                      l4363 0995  
                                    l4355 0988                                      l4371 09A4  
                                    l5155 023E                                      l5163 0252  
                                    l5147 0236                                      l5139 022E  
                                    l5091 00CD                                      l5083 00B1  
                                    l5075 00A0                                      l5067 006E  
                                    l4517 0EDA                                      l4509 0EAF  
                                    l4349 08F1                                      l4293 0B2C  
                                    l4365 0997                                      l4357 098A  
                                    l4381 09B4                                      l4373 09A7  
                                    l5149 0237                                      l5093 00D1  
                                    l5077 00A2                                      l5069 0078  
                                    l4471 0BF3                                      l4519 0EEF  
                                    l4295 0B2E                                      l4391 17F5  
                                    l4367 0998                                      l4359 098C  
                                    l4383 09B6                                      l4375 09A9  
                                    l5095 00DE                                      l5079 00A3  
                                    l4481 0C2E                                      l4473 0C08  
                         __end_of_LCDinit 0D6C                                      l4297 0B30  
                                    l4289 0B24                                      l4393 17F6  
                                    l4369 09A0                                      l4385 09B7  
                                    l4377 09AB                                      l5097 00EC  
                                    l5089 00B5                                      l4475 0C17  
                                    l4491 0E56                                      l4483 0E21  
                                    l4811 08F6                                      l4299 0B32  
                                    l4395 17F9                                      l4387 09BF  
                                    l4379 09AD                                      l4467 1767  
                                    l5099 00EE                                      l4821 09F2  
                                    l4477 0C1B                                      l4469 0BF3  
                                    l4493 0E5A                                      l4485 0E26  
                                    l4397 17FA                                      l4389 17F2  
                                    l4813 1772                                      l5189 0258  
                                    l4831 09F9                                      l4823 09F3  
                                    l4815 09E2                                      l4479 0C2A  
                                    l4495 0E69                                      l4487 0E32  
                                    l4399 17FC                                      l4751 09C3  
                                    l4841 0813                                      l4833 09FF  
                                    l4825 09F4                                      l4817 09EA  
                                    l4497 0E6F                                      l4489 0E47  
                                    l4921 0D03                                      l4761 09D2  
                                    l4753 09C6                                      l4843 0814  
                                    l4835 080A                                      l4827 09F5  
                                    l4819 09EE                                      l4499 0E7E  
                                    l4931 0D27                                      l4923 0D0B  
                                    l4763 09D5                                      l4755 09C9  
                                    l4771 17BE                                      l4845 0815  
                                    l4837 080E                                      l4829 09F7  
                                    l4941 0D47                                      l4933 0D2B  
                                    l4925 0D0F                                      l4917 0CF6  
                                    l4765 09D8                                      l4757 09CC  
                                    l4773 17C3                                      l4847 0816  
                                    l4839 0812                                      l4943 0D4F  
                                    l4935 0D33                                      l4927 0D1B  
                                    l4919 0CFF                                      l4951 1764  
                                    l4767 09DB                                      l4759 09CF  
                                    l4775 17C4                                      l4945 0D55  
                                    l4937 0D37                                      l4929 0D1F  
                                    l4769 09DE                                      l4961 0C5E  
                                    l4953 0C49                                      l4777 17C6  
                                    l4947 0D5B                                      l4939 0D43  
                                    l4971 0C7B                                      l4963 0C65  
                                    l4955 0C4F                                      l4949 0D61  
                                    l4981 0C99                                      l4973 0C81  
                                    l4965 0C6B                                      l4957 0C55  
                                    l4975 0C83                                      l4967 0C6D  
                                    l4959 0C57                                      l4991 0A41  
                                    l4983 0A2D                                      l4969 0C74  
                                    l4977 0C89                                      l4985 0A34  
                                    l4993 0A4A                                      l4979 0C92  
                                    l4995 0A52                                      l4987 0A3A  
                                    l4997 0A06                                      l4989 0A40  
                                    l4999 0A0D                                      _ALAF 0065  
                         __end_of_LCDsend 0C44                                      STR_1 1000  
                                    STR_2 1000                                      STR_3 180A  
                                    STR_4 180A                                      STR_5 1811  
                                    STR_6 1811                                      u3000 0CE4  
                                    u3001 0CE3                                      u3010 0CF3  
                                    u3011 0CF2                                      _LATA 0016  
                                    _LATB 0017                           __end_of_INT_ISR 177C  
                                    _LATC 0018                                      _LATD 0019  
                                    _LATE 001A                                      _T2PR 028D  
                                    u4230 17C3                                      u5007 0D30  
                                    u4231 17C2                                      u5017 0D38  
                                    u3610 0C02                                      u3611 0C01  
                                    u5027 0D44                                      u3620 0C08  
                                    u3700 0E56                                      u3621 0C07  
                                    u3701 0E55                                      u5037 0D4C  
                                    u3630 0C17                                      u3710 0E69  
                                    u3631 0C16                                      u3711 0E68  
                                    u5047 0D68                                      u4280 09FE  
                                    u3640 0C2A                                      u3720 0E7E  
                                    u4600 0C6B                                      u4281 09FD  
                                    u3641 0C29                                      u5057 0EF0  
                                    u3721 0E7D                                      u4601 0C6A  
                                    u2930 0CA5                                      u3650 0C3D  
                                    u3730 0E93                                      u4610 0C7B  
                                    u2931 0CA4                                      u3651 0C3C  
                                    u3731 0E92                                      u4275 0907  
                                    u4611 0C7A                                      u2940 0CB0  
                                    u3660 0C43                                      u3740 0EA9  
                                    u4620 0C81                                      u4700 0A59  
                                    _PMD0 0796                                      u2941 0CAF  
                                    u3661 0C42                                      u3741 0EA8  
                                    u4621 0C80                                      u4701 0A58  
                                    _PMD1 0797                                      i1l30 0BF0  
                                    i1l22 0922                                      u2950 0CBB  
                                    u3750 0EBE                                      u4630 0C99  
                                    u4710 0A5F                                      _PMD2 0798  
                                    i1l23 0923                                      u2951 0CBA  
                                    u3751 0EBD                                      u4631 0C98  
                                    u4711 0A5E                                      _PMD3 0799  
                                    u2960 0CC2                                      u3760 0ED3  
                                    u3680 0E41                                      u4560 0C49  
                                    u4640 0A34                                      u4720 0A7D  
                                    _PMD4 079A                                      i1l33 0BC2  
                                    u2961 0CC1                                      u3761 0ED2  
                                    u3681 0E40                                      u4561 0C48  
                                    u4641 0A33                                      u4721 0A7C  
                                    _PMD5 079B                                      i1l42 0BE0  
                                    i1l26 0928                                      u2970 0CC7  
                                    u3770 0EE9                                      u3690 0E47  
                                    u4570 0C4F                                      u4650 0A40  
                                    i1l35 0BC7                                      u2971 0CC6  
                                    u3771 0EE8                                      u3691 0E46  
                                    u3675 0E29                                      u4571 0C4E  
                                    u4651 0A3F                                      u2980 0CD4  
                                    u3780 0EEF                                      u4580 0C55  
                                    u4660 0A52                                      u4900 0244  
                                    u2981 0CD3                                      u3781 0EEE  
                                    u4581 0C54                                      u4661 0A51  
                                    u4901 0243                                      u2990 0CDF  
                                    u4590 0C65                                      u4670 0A0D  
                                    i1l47 0BEF                                      u2991 0CDE  
                                    u4591 0C64                                      u4671 0A0C  
                                    u4680 0A19                                      u4681 0A18  
                                    u4690 0A2B                                      u4850 00AF  
                                    u4691 0A2A                                      u4851 00AE  
                                    u4860 00DE                                      u4917 0A70  
                                    u4861 00DD                                      _TALA 0066  
                                    u4870 00EC                                      u4927 0A45  
                                    u4871 00EB                                      u4880 00F4  
                                    u4937 0A1E                                      u4881 00F3  
                                    u4865 00DA                                      u4890 00F9  
                                    u4947 0C8D                                      u4891 00F8  
                                    u4957 0CFA                                      u4967 0D08  
                                    u4977 0D10                                      _NREG 00C7  
                                    u4987 0D1C                                      u4997 0D24  
                                    _PMON 00C6                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                               main@notInit 00AD  
                            ?_menuLCD_ISR 0070                                      _main 006E  
                                    _mode 005A                                      _temp 0063  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E       __end_of_INT_DefaultInterruptHandler 1758  
             _INT_DefaultInterruptHandler 1757                                      start 004C  
                         _timer5ReloadVal 00B5                           _TMR3_Initialize 0985  
         __end_of_INT_SetInterruptHandler 1782                ??_TMR1_SetInterruptHandler 00A2  
                         __end_of_ReadI2C 0929                 __size_of_DATAEE_WriteByte 0024  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 080A  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 17CA  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                                     _ADPRE 009C  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T3CLK 0217  
                                   _T2CON 028E                                     _T3CON 0214  
                                   _T5CLK 021D                                     _T2HLT 028F  
                                   _T5CON 021A                           __end_of___lwdiv 0B24  
                                   _T2TMR 028C                                     _T2RST 0291  
                                   i1l413 0829                                     i1l432 0800  
                         __end_of___lwmod 0AE8                                     i1l361 003B  
                                   i1l426 08B0                                     i1l362 004A  
                                   i1l354 0013                                     i1l363 0044  
                                   i1l701 084B                                     i1l357 0023  
                                   i1l359 002F                                     i1l720 0003  
                                   i1l368 004A                                     i1l490 08C7  
                                   i1l714 08DE                                     i1l477 083A  
                                   i1l734 0899                                     i1l590 086F  
                                   i1l496 0002                                     i1l842 093C  
                                   i1l770 175D                                     i1l922 0EFF  
                                   i1l587 0866                                     i1l923 0F00  
                                   i1l844 0940                                     i1l845 0946  
                                   i1l773 176D                                     i1l934 0F2F  
                                   i1l935 0F30                                     i1l919 0EF3  
                                   i1l776 1763                                     i1l960 0F87  
                                   i1l952 0F72                                     i1l953 0F73  
                                   i1l946 0F61                                     i1l779 1771  
                                   i1l971 0FB6                                     i1l955 0F77  
                                   i1l947 0F63                                     i1l972 0FB7  
                                   i1l990 0FFA                                     i1l983 0FE8  
                                   i1l959 0F86                                     i1l984 0FEA  
                                   i1l993 0FFF                                     i1l989 0FF9  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TMR3H 0213  
                                   _TMR3L 0212                                     _TMR5H 0219  
                                   _TMR5L 0218                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
                         __end_of_editLum 0A2D                           _PWM6_Initialize 17D7  
       __size_of_TMR3_SetInterruptHandler 0006                 ?_TMR3_SetInterruptHandler 00A0  
                __end_ofi1_TMR2_StopTimer 1772                          __end_of_TMR1_ISR 08B1  
                        __end_of_TMR3_ISR 08C8                          __end_of_TMR5_ISR 08DF  
                         _DATAEE_ReadByte 080A            ??_TMR3_DefaultInterruptHandler 0070  
                         __end_of_dpowers 180A                        __size_of_TMR2_Stop 0003  
                             ?_TMR2_Start 0070                           __end_of_isdigit 085E  
                                   main@i 00AF                                     _tsttc 0EF3  
                 __end_of_TMR1_Initialize 0985                                     pclath 000A  
                          menuLCD_ISR@str 003B                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 05E1  
                  ??_PWM_Output_D4_Enable 0070                           _TMR2_StartTimer 176A  
                         _TMR1_WriteTimer 0819                           _TMR5_Initialize 09A4  
                         __initialization 004E                              ?i1_TMR2_Stop 0070  
                            __end_of_main 026B                               ?i1_WriteI2C 0070  
                     __size_of_LCDsend2x4 00D4                   __end_of_TMR2_Initialize 1800  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00A9  
                _TMR5_SetInterruptHandler 178E                        __size_of_Clock_ISR 0101  
                   _TMR3_InterruptHandler 00B7          differenceBetweenTimePeriod@start 0070  
                               ??_LCDchar 0078                                 ??_LCDinit 00A8  
                               ??_LCDsend 00A2                                 ??_INT_ISR 0071  
              __end_ofi1_DATAEE_WriteByte 0947                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                        __end_of_WriteI2C 0CF6                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _T3GATE 0216  
                                  _T3GCON 0215                                    _T5GATE 021C  
                                  _T5GCON 021B                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                                    i1l1100 0D8A  
                                  i1l1101 0D8B                                    i1l1201 07FF  
                 TMR1_WriteTimer@timerVal 0070                                    i1l1131 0E1E  
                                  i1l1115 0DCE                                    _RC4PPS 0F24  
                                  i1l1124 0E04                                    i1l1140 17B5  
                                  i1l1221 037E                                    i1l1127 0E16  
                                  i1l1128 0E17                                    i1l1137 17A6  
                                  i1l2033 085D                                    i1l1146 0883  
                                  i1l1162 175A                                    i1l1234 041F  
                                  i1l1218 032B                                    i1l1227 039B  
                                  i1l1244 0443                                    i1l1165 1760  
                                  i1l1270 06FE                                    i1l1327 0BA5  
                                  i1l1159 0AB3                                    _ODCONA 0F3A  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  i1l1364 177B                                    _ODCOND 0F5B  
                                  i1l1541 0461                                    i1l4101 0FFE  
                                  _ODCONE 0F66                                    i1l1374 1757  
                                  i1l4111 0876                                    i1l1368 17D6  
                                  i1l4105 17A1                                    i1l4121 0A97  
                                  i1l4113 0A80                                    i1l4201 0540  
                                  i1l4041 0864                                    i1l4107 0871  
                                  i1l4051 176A                                    i1l4123 0A9D  
                                  i1l4115 0A81                                    i1l4211 0562  
                                  i1l4203 0546                                    i1l4131 044B  
                                  i1l4043 0865                                    i1l4035 085F  
                                  i1l1580 0951                                    i1l4109 0872  
                                  i1l4125 0AA3                                    i1l4117 0A87  
                                  i1l4221 0584                                    i1l4213 0569  
                                  i1l4205 054D                                    i1l4133 0451  
                                  i1l4045 086B                                    i1l4037 0862  
                                  i1l4061 0F1F                                    i1l4053 0EF3  
                                  i1l1582 0965                                    i1l4127 1758  
                                  i1l4119 0A8D                                    i1l4231 05BF  
                                  i1l4215 056D                                    i1l4207 0551  
                                  i1l4223 0588                                    i1l1559 0514  
                                  i1l4151 048F                                    i1l4143 0466  
                                  i1l4135 0458                                    i1l4039 0863  
                                  i1l4071 0F4F                                    i1l4063 0F23  
                                  i1l4055 0F04                                    i1l5031 0017  
                                  i1l1576 05E0                                    i1l4241 0B6A  
                                  i1l4225 058D                                    i1l4217 0577  
                                  i1l4209 055C                                    i1l4161 04C6  
                                  i1l4153 049E                                    i1l4145 046F  
                                  i1l4137 045D                                    i1l4233 05C8  
                                  i1l4129 0446                                    i1l4081 0F96  
                                  i1l4073 0F55                                    i1l4065 0F34  
                                  i1l4057 0F0F                                    i1l5041 0033  
                                  i1l5033 001B                                    i1l5025 0006  
                                  i1l4251 0B83                                    i1l4243 0B6F  
                                  i1l4227 05B4                                    i1l4219 057D  
                                  i1l4171 04DE                                    i1l4163 04CD  
                                  i1l4235 05DC                                    i1l4155 04A2  
                                  i1l4147 047B                                    i1l4139 0462  
                                  i1l4091 0FC6                                    i1l4083 0F9A  
                                  i1l4075 0F67                                    i1l4067 0F3F  
                                  i1l4059 0F13                                    i1l5043 0037  
                                  i1l5035 001F                                    i1l5027 000B  
                                  i1l1852 0B23                   __end_of_TMR3_Initialize 09A4  
                                  i1l4253 0B87                                    i1l4245 0B74  
                                  i1l4229 05BB                                    i1l4181 04FA  
                                  i1l4165 04D1                                    i1l4149 047E  
                                  i1l4093 0FCA                                    i1l4085 0FA6  
                                  i1l4077 0F7B                                    i1l4069 0F43  
                                  i1l5045 003F                                    i1l5037 0027  
                                  i1l5029 000F                                    i1l1862 0AE7  
                                  i1l4255 0B8D                                    i1l4247 0B79  
                                  i1l4239 0B63                                    i1l4271 0932  
                                  i1l4431 0821                                    i1l4191 0528  
                                  i1l4183 0504                                    i1l4167 04D5  
                                  i1l4159 04AE                                    i1l4263 0884  
                                  i1l4095 0FD6                                    i1l4087 0FAA  
                                  i1l4079 0F8B                                    i1l5039 002B  
                                  i1l4257 0B9E                                    i1l4249 0B7D  
                                  i1l4281 0939                                    i1l4273 0934  
                                  i1l4521 06FF                                    i1l4433 0823  
                                  i1l4425 0819                                    i1l4441 082F  
                                  i1l4193 052B                                    i1l4185 050A  
                                  i1l4177 04E0                                    i1l4169 04D9  
                                  i1l4265 176E                                    i1l4601 02E2  
                                  i1l4097 0FDC                                    i1l4089 0FBB  
                                  i1l5049 0048                                    i1l4259 0BA1  
                                  i1l4283 093B                                    i1l4275 0935  
                                  i1l4267 0929                                    i1l4531 0727  
                                  i1l4523 070A                                    i1l4427 081E  
                                  i1l4435 0825                                    i1l4451 0838  
                                  i1l4443 0830                                    i1l4195 052F  
                                  i1l4187 0510                                    i1l4611 030A  
                                  i1l4603 02EB                                    i1l4099 0FEE  
                                  i1l4285 0941                                    i1l4277 0936  
                                  i1l4269 0930                                    i1l4541 0763  
                                  i1l4533 0733                                    i1l4525 070E  
                                  i1l4437 0827                                    i1l4429 081F  
                                  i1l4445 0832                                    i1l3901 0DE6  
                                  i1l4197 0535                                    i1l4189 051F  
                                  i1l4621 0337                                    i1l4613 0310  
                                  i1l4605 02F3                                    i1l4461 0845  
                                  i1l4453 083B                                    i1l4701 06AA  
                                  i1l4279 0937                                    i1l4551 079F  
                                  i1l4543 076F                                    i1l4535 073F  
                                  i1l4527 070F                                    i1l4447 0834  
                                  i1l4439 082A                                    i1l3911 0E1B  
                                  i1l3903 0DF2                                    i1l4199 053C  
                                  i1l4287 175E                                    i1l4631 036D  
                                  i1l4623 034A                                    i1l4615 0315  
                                  i1l4607 02F9                                    i1l4455 0840  
                                  i1l4463 0847                                    i1l4711 06C6  
                                  i1l4703 06B0                                    i1l4561 07CB  
                                  i1l4545 077B                                    i1l4537 074B  
                                  i1l4529 071B                                    i1l4553 07B9  
                                  i1l4449 0836                                    i1l3905 0DF8  
                                  i1l3921 175B                                    i1l4641 038B  
                                  i1l4633 0373                                    i1l4625 0351  
                                  i1l4617 031A                                    i1l4609 0302  
                                  i1l4801 08C2                                    i1l4465 0849  
                                  i1l4457 0841                                    i1l3913 090F  
                                  i1l4721 06DC                                    i1l4713 06CC  
                                  i1l4705 06B1                                    i1l4571 07E4  
                                  i1l4563 07CC                                    i1l4555 07C0  
                                  i1l4547 0787                                    i1l4539 0757  
                                  i1l4803 089A                                    i1l3907 0E04  
                                  i1l3923 17AF                                    i1l3931 085A  
                                  i1l4651 03B5                                    i1l4643 038E  
                                  i1l4635 0376                                    i1l4627 0359  
                                  i1l4619 031F                                    i1l4459 0843  
                                  i1l3915 0919                                    i1l4731 06E8  
                                  i1l4723 06DE                                    i1l4715 06D1  
                                  i1l4707 06B9                                    i1l4573 07EA  
                                  i1l4565 07D2                                    i1l4557 07C4  
                                  i1l4549 0793                                    i1l4805 089C  
                                  i1l3853 0BAF                                    i1l3845 0BA7  
                                  i1l3909 0E0A                                    i1l3941 094D  
                                  i1l3933 085C                                    i1l3925 084D  
                                  i1l4661 03E2                                    i1l4653 03C4  
                                  i1l4637 0383                                    i1l4629 035F  
                                  i1l4645 0392                                    i1l4581 0272  
                                  i1l3917 0927                                    i1l4741 06FA  
                                  i1l4733 06ED                                    i1l4717 06D6  
                                  i1l4725 06E0                                    i1l4709 06C0  
                                  i1l4575 07EE                                    i1l4567 07D8  
                                  i1l4559 07C5                                    i1l4807 08A4  
                                  i1l3855 0BB8                                    i1l3847 0BAA  
                                  i1l3951 0AE8                                    i1l3943 0956  
                                  i1l3927 084E                                    i1l4671 0407  
                                  i1l4663 03F1                                    i1l4655 03C8  
                                  i1l4647 039F                                    i1l4639 0385  
                                  i1l4591 02BC                                    i1l4583 0290  
                                  i1l4735 06F2                                    i1l4743 06FC  
                                  i1l4727 06E1                                    i1l4719 06DA  
                                  i1l4569 07DE                                    i1l4577 07F4  
                                  i1l4809 08AB                                    i1l3857 0BC1  
                                  i1l3865 0BCE                                    i1l3881 0D8F  
                                  i1l3961 0AFC                                    i1l3953 0AEA  
                                  i1l3945 095B                                    i1l3937 0947  
                                  i1l3929 0854                                    i1l4681 0427  
                                  i1l4673 040E                                    i1l4665 03F5  
                                  i1l4657 03CC                                    i1l4649 03A5  
                                  i1l4593 02C5                                    i1l4585 02AD  
                                  i1l4745 06FD                                    i1l4737 06F6  
                                  i1l4729 06E2                                    i1l4747 17CA  
                                  i1l3867 0BD7                                    i1l3859 0BCC  
                                  i1l3891 0DBC                                    i1l3883 0D9A  
                                  i1l3875 0D6D                                    i1l3971 0B19  
                                  i1l3963 0B00                                    i1l3955 0AF0  
                                  i1l3947 0961                                    i1l3939 0949  
                                  i1l4683 042C                                    i1l4675 0413  
                                  i1l4667 03FC                                    i1l4659 03D2  
                                  i1l4595 02CB                                    i1l4587 02B1  
                                  i1l4579 026B                                    i1l4739 06F8  
                                  i1l4691 05E1                                    i1l4749 17D1  
                                  i1l3869 0BE4                                    i1l3893 0DC2  
                                  i1l3885 0D9E                                    i1l3877 0D72  
                                  i1l3965 0B0F                                    i1l3957 0AF3  
                                  i1l3973 0B1F                                    i1l3981 0ABD  
                                  i1l4685 0433                                    i1l4677 041A  
                                  i1l4669 0402                                    i1l4597 02D4  
                                  i1l4589 02B5                                    i1l4693 05FA  
                                  i1l4783 1776                                    i1l3895 0DCE  
                                  i1l3887 0DAA                                    i1l3879 0D7E  
                                  i1l3967 0B13                                    i1l3959 0AF8  
                                  i1l3991 0AD8                                    i1l3983 0AC2  
                                  i1l4687 0438                                    i1l4679 0420  
                                  i1l4599 02DC                                    i1l4695 0607  
                                  i1l4791 08D2                                    u302_20 086B  
                                  u310_20 0F4F                                    i1l4785 1778  
                                  i1l3897 0DD4                                    i1l3889 0DB0  
                                  i1l3969 0B14                                    i1l3993 0ADD  
                                  i1l3985 0AC6                                    i1l3977 0AB4  
                                  i1l4689 043F                                    u302_21 086A  
                                  u310_21 0F4E                                    i1l4697 0614  
                                  i1l4793 08D9                                    i1l3899 0DE0  
                                  i1l3987 0ACA                                    i1l3979 0ABA  
                                  i1l3995 0AE3                                    i1l4795 08B1  
                                  i1l4699 06A5                                    i1l4787 08C8  
                                  _S1_ISR 0B63                                    i1l3989 0AD4  
                                  i1l4797 08B3                                    i1l4789 08CA  
                                  i1l3999 1761                                    i1l4799 08BB  
                                  u311_20 0F61                                    u303_20 0EFF  
                                  u311_21 0F60                                    u303_21 0EFE  
                                  u400_20 036D                                    u320_20 0FB6  
                                  u312_20 0F67                                    u304_20 0F04  
                                  u400_21 036C                                    u320_21 0FB5  
                                  u312_21 0F66                                    u304_21 0F03  
                                  u400_25 0369                                    u401_20 0383  
                                  u321_20 0FBB                                    u313_20 0F72  
                                  u305_20 0F0F                                    u401_21 0382  
                                  u321_21 0FBA                                    u313_21 0F71  
                                  u305_21 0F0E                                    _LCDcmd 17A0  
                                  u250_20 0BAE                                    u330_20 0AA3  
                                  u410_20 043F                                    u402_20 03A5  
                                  u322_20 0FC6                                    u314_20 0F77  
                                  u306_20 0F1F                                    u250_21 0BAD  
                                  u330_21 0AA2                                    u410_21 043E  
                                  u402_21 03A4                                    u322_21 0FC5  
                                  u314_21 0F76                                    u306_21 0F1E  
                                  u251_20 0BB8                                    u331_20 0451  
                                  u403_20 03D2                                    u323_20 0FD6  
                                  u315_20 0F7B                                    u307_20 0F2F  
                                  u251_21 0BB7                                    u331_21 0450  
                                  u403_21 03D1                                    u323_21 0FD5  
                                  u315_21 0F7A                                    u307_21 0F2E  
                                  u411_25 05F1                                    u252_20 0BC1  
                                  u260_20 0D8A                                    u340_20 052F  
                                  u332_20 047B                                    u404_20 03FC  
                                  u324_20 0FE8                                    u316_20 0F86  
                                  u308_20 0F34                                    u420_20 06ED  
                                  u412_20 0607                                    u252_21 0BC0  
                                  u260_21 0D89                                    u340_21 052E  
                                  u332_21 047A                                    u404_21 03FB  
                                  u324_21 0FE7                                    u316_21 0F85  
                                  u308_21 0F33                                    u420_21 06EC  
                                  u412_21 0606                                    u412_25 0603  
                                  u253_20 0BC7                                    u261_20 0D8F  
                                  u341_20 0535                                    u333_20 04AE  
                                  u405_20 0402                                    u325_20 0FEE  
                                  u317_20 0F8B                                    u309_20 0F3F  
                                  u421_20 06F2                                    u413_20 0614  
                                  u253_21 0BC6                                    u261_21 0D8E  
                                  u341_21 0534                                    u333_21 04AD  
                                  u405_21 0401                                    u325_21 0FED  
                                  u317_21 0F8A                                    u309_21 0F3E  
                                  u421_21 06F1                                    u413_21 0613  
                                  u413_25 0610                                    u350_20 0B6F  
                                  u422_20 17D1                                    u254_20 0BCC  
                                  u270_20 0E1B                                    u262_20 0D9A  
                                  u342_20 0546                                    u334_20 04D5  
                                  u406_20 040E                                    u326_20 0FF9  
                                  u318_20 0F96                                    u414_20 06B0  
                                  u350_21 0B6E                                    u422_21 17D0  
                                  u254_21 0BCB                                    u270_21 0E1A  
                                  u262_21 0D99                                    u342_21 0545  
                                  u334_21 04D4                                    u406_21 040D  
                                  u326_21 0FF8                                    u318_21 0F95  
                                  u414_21 06AF                                    u351_20 0B74  
                                  u255_20 0BD7                                    u263_20 0DAA  
                                  u343_20 055B                                    u335_20 04F9  
                                  u407_20 041A                                    u271_20 0919  
                                  u327_20 0FFE                                    u319_20 0FA6  
                                  u415_20 06C6                                    u351_21 0B73  
                                  u255_21 0BD6                                    u263_21 0DA9  
                                  u343_21 055A                                    u335_21 04F8  
                                  u407_21 0419                                    u271_21 0918  
                                  u327_21 0FFD                                    u319_21 0FA5  
                                  u415_21 06C5                                    u335_25 04F5  
                                  u352_20 0B79                                    u256_20 0BE0  
                                  u264_20 0DBC                                    u328_20 0883  
                                  u280_20 0AF0                                    u344_20 0562  
                                  u336_20 0504                                    u408_20 0427  
                                  u360_20 0840                                    u272_20 0922  
                                  u416_20 06CC                                    u424_20 08D9  
                                  u352_21 0B78                                    u256_21 0BDF  
                                  u264_21 0DBB                                    u328_21 0882  
                                  u280_21 0AEF                                    u344_21 0561  
                                  u336_21 0503                                    u408_21 0426  
                                  u360_21 083F                                    u272_21 0921  
                                  u416_21 06CB                                    u424_21 08D8  
                                  _INTPPS 0E90                                    u353_20 0B83  
                                  u257_20 0BE4                                    u265_20 0DCE  
                                  u329_20 0A8D                                    u345_20 0577  
                                  u337_20 050A                                    u409_20 0433  
                                  u425_20 08C2                                    u273_20 0927  
                                  u417_20 06D1                                    u353_21 0B82  
                                  u257_21 0BE3                                    u265_21 0DCD  
                                  u329_21 0A8C                                    u345_21 0576  
                                  u337_21 0509                                    u409_21 0432  
                                  u425_21 08C1                                    u273_21 0926  
                                  u417_21 06D0                                    u281_25 0AF4  
                                  u354_20 0B8D                                    u426_20 08AB  
                                  u258_20 0BEF                                    u266_20 0DE0  
                                  u282_20 0B00                                    u290_20 0AD4  
                                  u274_20 0854                                    u346_20 057D  
                                  u338_20 0510                                    u418_20 06D6  
                                  u354_21 0B8C                                    u426_21 08AA  
                                  u258_21 0BEE                                    u266_21 0DDF  
                                  u282_21 0AFF                                    u290_21 0AD3  
                                  u274_21 0853                                    u346_21 057C  
                                  u338_21 050F                                    u418_21 06D5  
                           main@corrupted 00AE                                    u290_25 0AD0  
                                  u506_27 0E1C                                    u355_20 0B9E  
                                  u267_20 0DF2                                    u275_20 085A  
                                  u347_20 05C8                                    u339_20 051F  
                                  u419_20 06E8                                    u355_21 0B9D  
                                  u267_21 0DF1                                    u275_21 0859  
                                  u347_21 05C7                                    u339_21 051E  
                                  u419_21 06E7                                    u355_25 0B9A  
                                  u259_25 0D75                                    u283_25 0B01  
                                  u291_25 0AD9                                    u339_25 051B  
                                  u380_20 07C0                                    u268_20 0E04  
                                  u284_20 0B0F                                    u292_20 0AE3  
                                  u276_20 094D                                    u348_20 05DC  
                                  u380_21 07BF                                    u268_21 0E03  
                                  u284_21 0B0E                                    u292_21 0AE2  
                                  u276_21 094C                                    u348_21 05DB  
                                  u284_25 0B0B                                    u356_25 0893  
                                  _LCDstr 0870                                    u349_20 0B6A  
                                  u357_20 0940                                    u381_20 07CB  
                                  u269_20 0E16                                    u349_21 0B69  
                                  u357_21 093F                                    u381_21 07CA  
                                  u269_21 0E15                                    u285_25 0B15  
                                  u277_25 0952                                    u382_20 07D2  
                                  u358_20 081E                                    u286_20 0B1F  
                                  u390_20 02BC                                    u382_21 07D1  
                                  u358_21 081D                                    u286_21 0B1E  
                                  u390_21 02BB                                    u278_25 0957  
                                  u383_20 07D8                                    u359_20 082F  
                                  u287_20 0ABA                                    u279_20 0961  
                                  u391_20 02CB                                    u383_21 07D7  
                                  u359_21 082E                                    u287_21 0AB9  
                                  u279_21 0960                                    u391_21 02CA  
                                  u384_20 07DE                                    u392_20 02E2  
                                  u480_20 0033                                    u384_21 07DD  
                                  u392_21 02E1                                    u480_21 0032  
                                  u288_25 0ABE                                    u385_20 07E4  
                                  u289_20 0ACA                                    u393_20 02F9  
                                  u481_20 0037                                    u473_20 000B  
                                  u385_21 07E3                                    u289_21 0AC9  
                                  u393_21 02F8                                    u481_21 0036  
                                  u473_21 000A                                    u386_20 07EA  
                                  u394_20 0310                                    u482_20 003F  
                                  u474_20 000F                                    u386_21 07E9  
                                  u394_21 030F                                    u482_21 003E  
                                  u474_21 000E                                    u387_20 07FD  
                                  u379_20 070A                                    u395_20 0315  
                                  u483_20 0043                                    u475_20 0017  
                                  u387_21 07FA                                    u379_21 0709  
                                  u395_21 0314                                    u483_21 0042  
                                  u475_21 0016                                    u396_20 031A  
                                  u484_20 0048                                    u476_20 001B  
                                  u396_21 0319                                    u484_21 0047  
                                  u476_21 001A                                    u388_24 07FF  
                                  _OSCFRQ 0893                                    u397_20 031F  
                                  u389_20 0272                                    u477_20 001F  
                                  u397_21 031E                                    u389_21 0271  
                                  u477_21 001E                                    u398_20 0351  
                                  u478_20 0027                                    u398_21 0350  
                                  u478_21 0026                                    u399_20 0359  
                                  u479_20 002B                                    u399_21 0358  
                                  u479_21 002A                                    _PWM6EN 1C77  
                               ??_ReadI2C 0070                                    _PWM_on 00C4  
                             LCDsend2x4@c 00A5                           _TMR3_WriteTimer 082A  
                        __end_of_editTemp 0A54              __end_ofi1_PWM6_LoadDutyValue 089A  
    __end_of_TMR1_DefaultInterruptHandler 0801     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0800                              _CCPTMRS1bits 021F  
                           ?i1_LCDsend2x4 0072                                    ___wmul 0947  
                       __end_of_TMR2_Stop 176A                                 ??___lwdiv 0074  
                               ??___lwmod 007C                       __size_of_TMR2_Start 0003  
                 __end_of_PWM6_Initialize 17E4                                 ??_editLum 00A0  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 0819  
                 __size_of_monitoring_ISR 011E                           _ADCC_Initialize 08DF  
                          _PMD_Initialize 17B6                                 ??_isdigit 0070  
                ?i1_PWM_Output_D4_Disable 0070                           menuLCD_ISR@diff 004A  
           i1DATAEE_WriteByte@GIEBitValue 0079         __size_of_ADCC_GetSingleConversion 0012  
        __size_of_INT_SetInterruptHandler 0006                 ?_ADCC_GetSingleConversion 0070  
                 __end_of_TMR2_StartTimer 176E   INT_SetInterruptHandler@InterruptHandler 00A0  
TMR5_SetInterruptHandler@InterruptHandler 00A0  TMR3_SetInterruptHandler@InterruptHandler 00A0  
TMR1_SetInterruptHandler@InterruptHandler 00A0                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 082A                   ??_PWM_Output_D4_Disable 00A0  
                     __size_ofi1_WriteI2C 004B                          ?_TMR1_Initialize 0070  
                 __end_of_TMR5_Initialize 09C3                         _SYSTEM_Initialize 09C3  
                 __end_of__initialization 006A                        ?_SYSTEM_Initialize 0070  
                       __end_of_Clock_ISR 0800                           _TMR5_WriteTimer 083B  
                    __size_of_menuLCD_ISR 01D9                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                              __pidataBANK0 17A7  
                     ??_SYSTEM_Initialize 00A2                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                                 ?_TMR3_ISR 0070  
                               ?_TMR5_ISR 0070                          _DATAEE_WriteByte 09E2  
                            menuLCD_ISR@l 0047                        __size_of_editClock 0058  
         differenceBetweenTimePeriod@diff 0076                             __end_of_tsttc 1000  
                        ?_TMR2_Initialize 0070                            ??_INT_CallBack 0071  
         differenceBetweenTimePeriod@stop 0073                    __end_of_PMD_Initialize 17BE  
             __size_of_EXT_INT_Initialize 000E                              ??_LCDsend2x4 00A3  
               __end_of_SYSTEM_Initialize 09E2                              sprintf@width 0031  
                 __end_of_TMR3_WriteTimer 083B                                   ??_tsttc 0072  
                              __pbssBANK0 004D                                __pbssBANK1 00BD  
                  i1DATAEE_WriteByte@bAdd 0076                                   ?_S1_ISR 0070  
                                 ?_LCDcmd 0070                          ?_TMR3_Initialize 0070  
                                 ?_LCDstr 0070                                   LCDcmd@c 0078  
                                 LCDstr@c 007A                                   LCDstr@p 007B  
                              __pmaintext 006E          __end_of_TMR3_SetInterruptHandler 178E  
                                 ?___wmul 0070                                ??_TMR1_ISR 007B  
                              ??_TMR3_ISR 007E                   __end_of_ADCC_Initialize 08F6  
              __end_of_PWM6_LoadDutyValue 090F                                ??_TMR5_ISR 007D  
                              __pintentry 0004                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                      __size_ofi1_TMR2_Stop 0003  
                      __end_of_LCDsend2x4 0EF3                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                        ?_PWM6_Initialize 0070                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112           __end_ofi1_PWM_Output_D4_Disable 1761  
                         ?_PMD_Initialize 0070                          ?_DATAEE_ReadByte 00A0  
                       ?_i2c1_driver_open 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                                 _LCDchar 17AE                                   _LCDinit 0CF6  
                                 _LCDsend 0BF1                        ??_i2c1_driver_open 00A0  
                                 _INT_ISR 1776                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                 ?_editTemp 0070  
                    i1_PWM6_LoadDutyValue 0884                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                         ?i1_TMR2_StopTimer 0070  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                                 _SSP1MSK 018E                              ??_TMR2_Start 0070  
                 __size_of_TMR2_StopTimer 0004                          ?_TMR2_StartTimer 0070  
                        ?_TMR1_WriteTimer 0070                        ??i1_TMR2_StopTimer 0070  
                 __end_of_TMR5_WriteTimer 084C                              LCDsend2x4@hc 00A6  
                            LCDsend2x4@lc 00A7                         __end_of_editClock 0C9C  
                        ?_TMR5_Initialize 0070                           __size_of_S1_ISR 0043  
                         __size_of_LCDcmd 0007                      DATAEE_WriteByte@bAdd 00A0  
                      _i2c1_driver_i2cISR 00C0                           __size_of_LCDstr 0014  
                                 _ReadI2C 090F                ??_TMR5_SetInterruptHandler 00A2  
                            ??i1_WriteI2C 0070                           __size_of___wmul 001F  
                                 ___lwdiv 0AE8                                   ___lwmod 0AB4  
                      __end_of_TMR2_Start 175E                                ??_WriteI2C 00A0  
                                 _editLum 0A06                                   __ptext1 0A54  
                                 __ptext2 17BE                                   __ptext3 0A2D  
                                 __ptext4 0A06                                   __ptext5 0C44  
                                 __ptext6 1772                                   __ptext7 1767  
                                 __ptext8 09C3                                   __ptext9 09A4  
                          _monitoring_ISR 05E1            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                                   _dpowers 1800  
                   _OSCILLATOR_Initialize 0801                                 _T2CONbits 028E  
                                 _isdigit 084C                                 _T3CONbits 0214  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                ??_PIN_MANAGER_Initialize 00A0                 ?_TMR1_SetInterruptHandler 00A0  
                               _T2HLTbits 028F                   _INT_SetInterruptHandler 177C  
                               _T5CONbits 021A                                ??_editTemp 00A0  
                    __end_ofi1_LCDsend2x4 0E1F                __size_of_SYSTEM_Initialize 001F  
                                 _sprintf 0444                                   clrloop0 1795  
                    end_of_initialization 006A                          ?_TMR3_WriteTimer 0070  
                               _T2RSTbits 0291                        __end_ofi1_WriteI2C 0BF1  
                                 init_ram 179A                                   initloop 179B  
                    __end_of_INT_CallBack 17D7                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077                        i1_DATAEE_WriteByte 0929  
           __size_of_PWM_Output_D4_Enable 0003              ?_differenceBetweenTimePeriod 0070  
                     ?i1_DATAEE_WriteByte 0076                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 0870                    __end_of_monitoring_ISR 06FF  
                               _PORTCbits 000E                                 _TMR2_Stop 1767  
                _TMR3_SetInterruptHandler 1788                     _TMR5_InterruptHandler 00B3  
                               _TRISCbits 0013                             ?_toggleAlarms 0070  
                    ??i1_DATAEE_WriteByte 0079                  __end_of_DATAEE_WriteByte 0A06  
                           _alarmPWMStart 0067                          ?_TMR5_WriteTimer 0070  
                 TMR5_WriteTimer@timerVal 0070            __size_of_PWM_Output_D4_Disable 0003  
           __end_of_PWM_Output_D4_Disable 1767                            __end_of_S1_ISR 0BA6  
                          __end_of_LCDcmd 17A7                            __end_of_LCDstr 0884  
        __size_ofi1_PWM_Output_D4_Disable 0003                            LCDsend2x4@mode 00A2  
                               _Clock_ISR 06FF                            __end_of___wmul 0966  
                         ?_monitoring_ISR 0070                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR3_ISR 0017                         __size_of_TMR5_ISR 0017  
                              ?_TMR2_Stop 0070                    ?_OSCILLATOR_Initialize 0070  
               ??_INT_SetInterruptHandler 00A2                           main@checkSumAux 00AC  
                  ??i1_PWM6_LoadDutyValue 0072                             menuLCD_ISR@tt 0043  
                     start_initialization 004E      __end_of_TMR5_DefaultInterruptHandler 0004  
   __size_of_TMR5_DefaultInterruptHandler 0001              _TMR5_DefaultInterruptHandler 0003  
                          ??_toggleAlarms 00A0           __size_of_PIN_MANAGER_Initialize 003F  
                          _TMR2_StopTimer 1772                          WriteI2C@data_out 00A1  
                                ??_S1_ISR 0070                                  ??_LCDcmd 0078  
                                ??_LCDstr 0079                             ??_menuLCD_ISR 0035  
                     DATAEE_ReadByte@bAdd 00A0              ?_INT_DefaultInterruptHandler 0070  
                __size_of_TMR1_Initialize 001F                          ??_PMD_Initialize 00A0  
                              ?_Clock_ISR 0070                                  ??___wmul 0074  
                             __pdataBANK0 0067                __end_of_EXT_INT_Initialize 17F2  
                       _editingClockAlarm 005C                         __size_of_WriteI2C 005A  
                   __size_ofi1_LCDsend2x4 00B3                  _ADCC_GetSingleConversion 085E  
                 i1DATAEE_WriteByte@bData 0078                    __end_of_TMR2_StopTimer 1776  
                                ?_LCDchar 0070                                  ?_LCDinit 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                                ?_INT_ISR 0070                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                        _PWM6_LoadDutyValue 08F6  
                __size_of_TMR2_Initialize 000E                              _isdigit$2958 0070  
                   __size_of_INT_CallBack 000D             ?_TMR5_DefaultInterruptHandler 0070  
    __size_of_differenceBetweenTimePeriod 0034                                  LCDchar@c 0078  
                       __size_of_editTemp 0027                                  LCDsend@c 00A3  
                     ?_PWM6_LoadDutyValue 00A0                               sprintf@flag 0030  
               __size_of_i2c1_driver_open 000C                               sprintf@prec 002D  
                                ?_ReadI2C 0070                                 __pnvBANK0 006E  
                               __pnvBANK1 00B1                                 _editClock 0C44  
                        ___lwdiv@dividend 0072                    _PIN_MANAGER_Initialize 0B24  
               __size_ofi1_TMR2_StopTimer 0004             ??_INT_DefaultInterruptHandler 0070  
                           ??i1_TMR2_Stop 0070                  __size_of_TMR3_Initialize 001F  
                     __end_of_menuLCD_ISR 0444          __end_of_TMR1_SetInterruptHandler 1788  
         ADCC_GetSingleConversion@channel 0073                              i1_LCDsend2x4 0D6C  
                               _dimingLed 005E                                  ?___lwdiv 0070  
                                ?___lwmod 0078               _i2c1_driver_busCollisionISR 00C2  
                    ??_PWM6_LoadDutyValue 00A2                                  ?_editLum 0070  
            ??_INTERRUPT_InterruptManager 007E                               ??_TMR2_Stop 00A0  
                            _INT_CallBack 17CA                                  ?_isdigit 0070  
                         ?_TMR2_StopTimer 0070                  __size_of_PWM6_Initialize 000D  
                        ___lwdiv@quotient 0075                                  ?_sprintf 0020  
                                _T2CLKCON 0290                  __size_of_DATAEE_ReadByte 000F  
                          __size_of_tsttc 010D                   i1_PWM_Output_D4_Disable 175E  
                          ___wmul@product 0074                                  _LATAbits 0016  
                               clear_ram0 1794                                  _PIE0bits 0716  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR2_StartTimer 0004                             i1LCDsend2x4@c 0075  
                              ?_editClock 0070                                 _tempAlarm 0054  
                                _S1_Value 0064                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0048                                  _PIR0bits 070C  
                                _PIR3bits 070F                                  _PIR4bits 0710  
              ??_TMR3_SetInterruptHandler 00A2                  __size_of_TMR5_Initialize 001F  
                             ??_Clock_ISR 007A                      __end_of_toggleAlarms 0A80  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR1_ISR 089A                                  _TMR3_ISR 08B1  
                                _TMR5_ISR 08C8                                  _SSP1STAT 018F  
                       ??_TMR1_Initialize 00A2                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                     __end_ofi1_TMR2_Stop 1764                                _ADCON3bits 0096  
                       ___wmul@multiplier 0070                        i1WriteI2C@data_out 0071  
            __end_of_PWM_Output_D4_Enable 175B      __size_of_INT_DefaultInterruptHandler 0001  
       __size_of_TMR5_SetInterruptHandler 0006                          __size_of_LCDchar 0008  
               ?_TMR5_SetInterruptHandler 00A0                     DATAEE_WriteByte@bData 00A2  
                        __size_of_LCDinit 0076                          __size_of_LCDsend 0053  
                        __size_of_INT_ISR 0006                         ?_DATAEE_WriteByte 00A0  
                       ??_TMR2_Initialize 00A0                               _menuLCD_ISR 026B  
          ??_TMR5_DefaultInterruptHandler 0070                        ??_DATAEE_WriteByte 00A3  
                        __size_of_ReadI2C 001A                                _ADSTATbits 0097  
                __size_of_TMR3_WriteTimer 0011                          ??_monitoring_ISR 007A  
                 ??_OSCILLATOR_Initialize 00A0                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0034                                  _WriteI2C 0C9C  
                       ??_TMR3_Initialize 00A2                  _TMR1_SetInterruptHandler 1782  
                        i1LCDsend2x4@mode 0072                          __size_of_editLum 0027  
                   _TMR1_InterruptHandler 00B9                                sprintf@val 002E  
                                _clkAlarm 004D                  __size_of_ADCC_Initialize 0017  
                        __size_of_isdigit 0012                                  _editTemp 0A2D  
                         ___lwdiv@divisor 0070                           ___lwdiv@counter 0077  
                                __ptext10 178E                                  __ptext11 0985  
                                __ptext20 17E4                                  __ptext12 1788  
                                __ptext21 177C                                  __ptext13 17F2  
                              _T1GCONbits 020F                                  __ptext30 080A  
                                __ptext22 08DF                                  __ptext14 0966  
                                __ptext23 1764                                  __ptext15 1782  
                                __ptext40 0002                                  __ptext32 08C8  
                                __ptext24 08F6                                  __ptext16 17D7  
                                __ptext41 026B                                  __ptext33 0003  
                                __ptext25 0CF6                                  __ptext17 17B6  
                                __ptext50 0AE8                                  __ptext42 176E  
                                __ptext34 05E1                                  __ptext26 0E1F  
                                __ptext18 0B24                                  __ptext51 0A80  
                                __ptext43 1761                                  __ptext35 0EF3  
                                __ptext27 0BF1                                  __ptext19 0801  
                                __ptext60 082A                                  __ptext52 176A  
                                __ptext44 175E                                  __ptext36 090F  
                                __ptext28 0C9C                                  __ptext61 089A  
                                __ptext53 175B                                  __ptext45 0884  
                                __ptext37 085E                                  __ptext29 09E2  
                                __ptext62 0819                                  __ptext54 1758  
                                __ptext46 0444                                  __ptext38 083B  
                                __ptext63 06FF                                  __ptext55 0870  
                                __ptext47 084C                                  __ptext39 08B1  
                                __ptext64 0800                                  __ptext56 17AE  
                                __ptext48 0947                                  __ptext65 0929  
                                __ptext57 17A0                                  __ptext49 0AB4  
                                __ptext66 1776                                  __ptext58 0D6C  
                                __ptext67 17CA                                  __ptext59 0BA6  
                                __ptext68 1757                                  __ptext69 0B63  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
               ??i1_PWM_Output_D4_Disable 0070               __size_ofi1_DATAEE_WriteByte 001E  
                        __size_of_sprintf 019D                                _T3GCONbits 0215  
             DATAEE_WriteByte@GIEBitValue 00A3                   TMR3_WriteTimer@timerVal 0070  
                        _i2c1_driver_open 17BE                         ??_PWM6_Initialize 00A0  
                           __size_of_main 01FD                                _T5GCONbits 021B  
                                _lumAlarm 0051                         ??_DATAEE_ReadByte 00A2  
                                _lumLevel 0062                     _PWM_Output_D4_Disable 1764  
                             ??_editClock 00A0                          _editingTempAlarm 0061  
                        i1_TMR2_StopTimer 176E                  __size_of_TMR5_WriteTimer 0011  
                                _prevTemp 006C                                tsttc@value 0073  
                             i1_TMR2_Stop 1761                ??_ADCC_GetSingleConversion 0073  
                                int$flags 007E                         ??_TMR2_StartTimer 0070  
      __end_of_INTERRUPT_InterruptManager 004C                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                       menuLCD_ISR@F12829 00BD      __end_of_TMR3_DefaultInterruptHandler 0003  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 0002  
                       ??_TMR5_Initialize 00A2                                _INTCONbits 000B  
                             _NVMCON1bits 081E                              _prevLumLevel 006A  
           __size_ofi1_PWM6_LoadDutyValue 0016                      _INT_InterruptHandler 00B1  
                                isdigit@c 0071                                _LCDsend2x4 0E1F  
                      _EXT_INT_Initialize 17E4                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0034  
                        ___lwmod@dividend 007A                   ?_PIN_MANAGER_Initialize 0070  
                   __size_of_toggleAlarms 002C                       ?_EXT_INT_Initialize 0070  
                         _editingLumAlarm 0060                      _PWM_Output_D4_Enable 1758  
     __end_of_differenceBetweenTimePeriod 0AB4               _differenceBetweenTimePeriod 0A80  
                ?_INT_SetInterruptHandler 00A0                          ??_TMR2_StopTimer 00A0  
                       ??_TMR3_WriteTimer 0072                             __pstringtext1 1800  
                           __pstringtext2 1000                             __pstringtext3 180A  
                           __pstringtext4 1811                             __pstringtext5 0000  
                    ??_EXT_INT_Initialize 00A2             ??_differenceBetweenTimePeriod 0077  
                                sprintf@c 0033                                  sprintf@f 0020  
           ?_TMR3_DefaultInterruptHandler 0070                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           ___lwmod@divisor 0078  
                         ___lwmod@counter 007D                            _idx_RingBuffer 00C5  
             PWM6_LoadDutyValue@dutyValue 00A0                              _toggleAlarms 0A54  
                              _TMR2_Start 175B            __end_of_PIN_MANAGER_Initialize 0B63  
                       ??_ADCC_Initialize 00A0                    ?_PWM_Output_D4_Disable 0070  
                   ?_PWM_Output_D4_Enable 0070                           _TMR1_Initialize 0966  
