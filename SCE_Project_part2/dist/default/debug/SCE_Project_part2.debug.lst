

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Dec 06 14:41:15 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    24                           	psect	inittext,global,class=CODE,delta=2
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text14,local,class=CODE,merge=1,delta=2
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,delta=2
    50                           	psect	text21,local,class=CODE,merge=1,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	text35,local,class=CODE,merge=1,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text40,local,class=CODE,merge=1,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	text49,local,class=CODE,merge=1,delta=2
    79                           	psect	text50,local,class=CODE,merge=1,delta=2
    80                           	psect	text51,local,class=CODE,merge=1,delta=2
    81                           	psect	text52,local,class=CODE,merge=1,delta=2
    82                           	psect	text53,local,class=CODE,merge=1,delta=2
    83                           	psect	text54,local,class=CODE,merge=1,delta=2
    84                           	psect	text55,local,class=CODE,merge=1,delta=2
    85                           	psect	text56,local,class=CODE,merge=1,delta=2
    86                           	psect	text57,local,class=CODE,merge=1,delta=2
    87                           	psect	text58,local,class=CODE,merge=1,delta=2
    88                           	psect	text59,local,class=CODE,merge=1,delta=2
    89                           	psect	text60,local,class=CODE,merge=1,delta=2
    90                           	psect	text61,local,class=CODE,merge=1,delta=2
    91                           	psect	text62,local,class=CODE,merge=1,delta=2
    92                           	psect	text63,local,class=CODE,merge=1,delta=2
    93                           	psect	text64,local,class=CODE,merge=1,delta=2
    94                           	psect	text65,local,class=CODE,merge=1,delta=2
    95                           	psect	text66,local,class=CODE,merge=1,delta=2
    96                           	psect	text67,local,class=CODE,merge=1,delta=2
    97                           	psect	text68,local,class=CODE,merge=1,delta=2
    98                           	psect	text69,local,class=CODE,merge=1,delta=2
    99                           	psect	text70,local,class=CODE,merge=1,delta=2
   100                           	psect	text71,local,class=CODE,merge=1,delta=2
   101                           	psect	intentry,global,class=CODE,delta=2
   102                           	psect	text73,local,class=CODE,merge=1,delta=2
   103                           	psect	text74,local,class=CODE,merge=1,delta=2
   104                           	psect	text75,local,class=CODE,merge=1,delta=2
   105                           	psect	text76,local,class=CODE,merge=1,delta=2
   106                           	psect	text77,local,class=CODE,merge=1,delta=2
   107                           	psect	text78,local,class=CODE,merge=1,delta=2
   108                           	psect	text79,local,class=CODE,merge=1,delta=2
   109                           	psect	text80,local,class=CODE,merge=1,delta=2
   110                           	psect	text81,local,class=CODE,merge=1,delta=2
   111                           	psect	text82,local,class=CODE,merge=1,delta=2
   112                           	psect	text83,local,class=CODE,merge=1,delta=2
   113                           	psect	text84,local,class=CODE,merge=1,delta=2
   114                           	psect	text85,local,class=CODE,merge=1,delta=2
   115                           	psect	text86,local,class=CODE,merge=1,delta=2
   116                           	psect	text87,local,class=CODE,merge=1,delta=2
   117                           	psect	text88,local,class=CODE,merge=1,delta=2
   118                           	psect	text89,local,class=CODE,merge=1,delta=2
   119                           	psect	text90,local,class=CODE,merge=1,delta=2
   120                           	psect	text91,local,class=CODE,merge=1,delta=2
   121                           	psect	text92,local,class=CODE,merge=1,delta=2
   122                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   123                           	dabs	1,0x7E,2
   124  0000                     
   125                           ; Version 2.30
   126                           ; Generated 15/09/2020 GMT
   127                           ; 
   128                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   129                           ; All rights reserved.
   130                           ; 
   131                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   132                           ; 
   133                           ; Redistribution and use in source and binary forms, with or without modification, are
   134                           ; permitted provided that the following conditions are met:
   135                           ; 
   136                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   137                           ;        conditions and the following disclaimer.
   138                           ; 
   139                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   140                           ;        of conditions and the following disclaimer in the documentation and/or other
   141                           ;        materials provided with the distribution. Publication is not required when
   142                           ;        this file is used in an embedded application.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC16F18875 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001C                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  008C                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0110                     	;# 
   220  0110                     	;# 
   221  0111                     	;# 
   222  0112                     	;# 
   223  0112                     	;# 
   224  0113                     	;# 
   225  0114                     	;# 
   226  0114                     	;# 
   227  0115                     	;# 
   228  0116                     	;# 
   229  0116                     	;# 
   230  0117                     	;# 
   231  0119                     	;# 
   232  0119                     	;# 
   233  0119                     	;# 
   234  011A                     	;# 
   235  011A                     	;# 
   236  011A                     	;# 
   237  011B                     	;# 
   238  011B                     	;# 
   239  011B                     	;# 
   240  011B                     	;# 
   241  011B                     	;# 
   242  011C                     	;# 
   243  011C                     	;# 
   244  011C                     	;# 
   245  011D                     	;# 
   246  011D                     	;# 
   247  011D                     	;# 
   248  011E                     	;# 
   249  011E                     	;# 
   250  011E                     	;# 
   251  011F                     	;# 
   252  011F                     	;# 
   253  011F                     	;# 
   254  011F                     	;# 
   255  011F                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258  018E                     	;# 
   259  018F                     	;# 
   260  0190                     	;# 
   261  0191                     	;# 
   262  0192                     	;# 
   263  0196                     	;# 
   264  0197                     	;# 
   265  0198                     	;# 
   266  0199                     	;# 
   267  019A                     	;# 
   268  019B                     	;# 
   269  019C                     	;# 
   270  020C                     	;# 
   271  020C                     	;# 
   272  020D                     	;# 
   273  020E                     	;# 
   274  020F                     	;# 
   275  020F                     	;# 
   276  0210                     	;# 
   277  0210                     	;# 
   278  0211                     	;# 
   279  0211                     	;# 
   280  0212                     	;# 
   281  0212                     	;# 
   282  0213                     	;# 
   283  0214                     	;# 
   284  0215                     	;# 
   285  0215                     	;# 
   286  0216                     	;# 
   287  0216                     	;# 
   288  0217                     	;# 
   289  0217                     	;# 
   290  0218                     	;# 
   291  0218                     	;# 
   292  0219                     	;# 
   293  021A                     	;# 
   294  021B                     	;# 
   295  021B                     	;# 
   296  021C                     	;# 
   297  021C                     	;# 
   298  021D                     	;# 
   299  021D                     	;# 
   300  021E                     	;# 
   301  021F                     	;# 
   302  028C                     	;# 
   303  028C                     	;# 
   304  028D                     	;# 
   305  028D                     	;# 
   306  028E                     	;# 
   307  028F                     	;# 
   308  0290                     	;# 
   309  0290                     	;# 
   310  0291                     	;# 
   311  0292                     	;# 
   312  0292                     	;# 
   313  0293                     	;# 
   314  0293                     	;# 
   315  0294                     	;# 
   316  0295                     	;# 
   317  0296                     	;# 
   318  0296                     	;# 
   319  0297                     	;# 
   320  0298                     	;# 
   321  0298                     	;# 
   322  0299                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029B                     	;# 
   326  029C                     	;# 
   327  029C                     	;# 
   328  029D                     	;# 
   329  030C                     	;# 
   330  030C                     	;# 
   331  030D                     	;# 
   332  030E                     	;# 
   333  030F                     	;# 
   334  0310                     	;# 
   335  0310                     	;# 
   336  0311                     	;# 
   337  0312                     	;# 
   338  0313                     	;# 
   339  0314                     	;# 
   340  0314                     	;# 
   341  0315                     	;# 
   342  0316                     	;# 
   343  0317                     	;# 
   344  0318                     	;# 
   345  0318                     	;# 
   346  0319                     	;# 
   347  031A                     	;# 
   348  031B                     	;# 
   349  031C                     	;# 
   350  031C                     	;# 
   351  031D                     	;# 
   352  031E                     	;# 
   353  031F                     	;# 
   354  038C                     	;# 
   355  038C                     	;# 
   356  038D                     	;# 
   357  038E                     	;# 
   358  0390                     	;# 
   359  0390                     	;# 
   360  0391                     	;# 
   361  0392                     	;# 
   362  040C                     	;# 
   363  040D                     	;# 
   364  040E                     	;# 
   365  040F                     	;# 
   366  0410                     	;# 
   367  0411                     	;# 
   368  0416                     	;# 
   369  0416                     	;# 
   370  0417                     	;# 
   371  0418                     	;# 
   372  0418                     	;# 
   373  0419                     	;# 
   374  041A                     	;# 
   375  041A                     	;# 
   376  041B                     	;# 
   377  041C                     	;# 
   378  041C                     	;# 
   379  041D                     	;# 
   380  041E                     	;# 
   381  041F                     	;# 
   382  048C                     	;# 
   383  048C                     	;# 
   384  048D                     	;# 
   385  048E                     	;# 
   386  048F                     	;# 
   387  048F                     	;# 
   388  0490                     	;# 
   389  0491                     	;# 
   390  0492                     	;# 
   391  0492                     	;# 
   392  0493                     	;# 
   393  0494                     	;# 
   394  0495                     	;# 
   395  0495                     	;# 
   396  0496                     	;# 
   397  0497                     	;# 
   398  0498                     	;# 
   399  0499                     	;# 
   400  049A                     	;# 
   401  049B                     	;# 
   402  049C                     	;# 
   403  049D                     	;# 
   404  050C                     	;# 
   405  050C                     	;# 
   406  050D                     	;# 
   407  050E                     	;# 
   408  050F                     	;# 
   409  050F                     	;# 
   410  0510                     	;# 
   411  0511                     	;# 
   412  0512                     	;# 
   413  0512                     	;# 
   414  0513                     	;# 
   415  0514                     	;# 
   416  0515                     	;# 
   417  0515                     	;# 
   418  0516                     	;# 
   419  0517                     	;# 
   420  0518                     	;# 
   421  0519                     	;# 
   422  051A                     	;# 
   423  051B                     	;# 
   424  051C                     	;# 
   425  051D                     	;# 
   426  058C                     	;# 
   427  058C                     	;# 
   428  058D                     	;# 
   429  058E                     	;# 
   430  058F                     	;# 
   431  058F                     	;# 
   432  0590                     	;# 
   433  0591                     	;# 
   434  0592                     	;# 
   435  0593                     	;# 
   436  060C                     	;# 
   437  060D                     	;# 
   438  060E                     	;# 
   439  060F                     	;# 
   440  0610                     	;# 
   441  0611                     	;# 
   442  0612                     	;# 
   443  0613                     	;# 
   444  0614                     	;# 
   445  0616                     	;# 
   446  0617                     	;# 
   447  0618                     	;# 
   448  0619                     	;# 
   449  061A                     	;# 
   450  061B                     	;# 
   451  061C                     	;# 
   452  061D                     	;# 
   453  061E                     	;# 
   454  068C                     	;# 
   455  068D                     	;# 
   456  068E                     	;# 
   457  068F                     	;# 
   458  0690                     	;# 
   459  0691                     	;# 
   460  0692                     	;# 
   461  0693                     	;# 
   462  0694                     	;# 
   463  070C                     	;# 
   464  070D                     	;# 
   465  070E                     	;# 
   466  070F                     	;# 
   467  0710                     	;# 
   468  0711                     	;# 
   469  0712                     	;# 
   470  0713                     	;# 
   471  0714                     	;# 
   472  0716                     	;# 
   473  0717                     	;# 
   474  0718                     	;# 
   475  0719                     	;# 
   476  071A                     	;# 
   477  071B                     	;# 
   478  071C                     	;# 
   479  071D                     	;# 
   480  071E                     	;# 
   481  0796                     	;# 
   482  0797                     	;# 
   483  0798                     	;# 
   484  0799                     	;# 
   485  079A                     	;# 
   486  079B                     	;# 
   487  080C                     	;# 
   488  080D                     	;# 
   489  080E                     	;# 
   490  080F                     	;# 
   491  0810                     	;# 
   492  0811                     	;# 
   493  0812                     	;# 
   494  0813                     	;# 
   495  0814                     	;# 
   496  081A                     	;# 
   497  081B                     	;# 
   498  081C                     	;# 
   499  081D                     	;# 
   500  081E                     	;# 
   501  081F                     	;# 
   502  088C                     	;# 
   503  088D                     	;# 
   504  088E                     	;# 
   505  088F                     	;# 
   506  0890                     	;# 
   507  0891                     	;# 
   508  0892                     	;# 
   509  0893                     	;# 
   510  0895                     	;# 
   511  0896                     	;# 
   512  0897                     	;# 
   513  0898                     	;# 
   514  0899                     	;# 
   515  089A                     	;# 
   516  089B                     	;# 
   517  090C                     	;# 
   518  090E                     	;# 
   519  090F                     	;# 
   520  091F                     	;# 
   521  091F                     	;# 
   522  098F                     	;# 
   523  098F                     	;# 
   524  0990                     	;# 
   525  0991                     	;# 
   526  0992                     	;# 
   527  0993                     	;# 
   528  0994                     	;# 
   529  0995                     	;# 
   530  0996                     	;# 
   531  0997                     	;# 
   532  0E0F                     	;# 
   533  0E10                     	;# 
   534  0E11                     	;# 
   535  0E12                     	;# 
   536  0E13                     	;# 
   537  0E14                     	;# 
   538  0E15                     	;# 
   539  0E16                     	;# 
   540  0E17                     	;# 
   541  0E18                     	;# 
   542  0E19                     	;# 
   543  0E1A                     	;# 
   544  0E1B                     	;# 
   545  0E1C                     	;# 
   546  0E1D                     	;# 
   547  0E1E                     	;# 
   548  0E1F                     	;# 
   549  0E20                     	;# 
   550  0E21                     	;# 
   551  0E22                     	;# 
   552  0E23                     	;# 
   553  0E24                     	;# 
   554  0E25                     	;# 
   555  0E26                     	;# 
   556  0E27                     	;# 
   557  0E28                     	;# 
   558  0E29                     	;# 
   559  0E2A                     	;# 
   560  0E2B                     	;# 
   561  0E2C                     	;# 
   562  0E2D                     	;# 
   563  0E2E                     	;# 
   564  0E2F                     	;# 
   565  0E30                     	;# 
   566  0E31                     	;# 
   567  0E32                     	;# 
   568  0E33                     	;# 
   569  0E34                     	;# 
   570  0E35                     	;# 
   571  0E36                     	;# 
   572  0E37                     	;# 
   573  0E8F                     	;# 
   574  0E90                     	;# 
   575  0E91                     	;# 
   576  0E92                     	;# 
   577  0E93                     	;# 
   578  0E94                     	;# 
   579  0E95                     	;# 
   580  0E96                     	;# 
   581  0E97                     	;# 
   582  0E9C                     	;# 
   583  0E9D                     	;# 
   584  0E9E                     	;# 
   585  0EA1                     	;# 
   586  0EA2                     	;# 
   587  0EA3                     	;# 
   588  0EA4                     	;# 
   589  0EA5                     	;# 
   590  0EA9                     	;# 
   591  0EAA                     	;# 
   592  0EAB                     	;# 
   593  0EAC                     	;# 
   594  0EB1                     	;# 
   595  0EB2                     	;# 
   596  0EB3                     	;# 
   597  0EB8                     	;# 
   598  0EB9                     	;# 
   599  0EBA                     	;# 
   600  0EBB                     	;# 
   601  0EBC                     	;# 
   602  0EBD                     	;# 
   603  0EBE                     	;# 
   604  0EC3                     	;# 
   605  0EC5                     	;# 
   606  0EC6                     	;# 
   607  0EC7                     	;# 
   608  0EC8                     	;# 
   609  0EC9                     	;# 
   610  0ECA                     	;# 
   611  0ECB                     	;# 
   612  0ECC                     	;# 
   613  0F10                     	;# 
   614  0F11                     	;# 
   615  0F12                     	;# 
   616  0F13                     	;# 
   617  0F14                     	;# 
   618  0F15                     	;# 
   619  0F16                     	;# 
   620  0F17                     	;# 
   621  0F18                     	;# 
   622  0F19                     	;# 
   623  0F1A                     	;# 
   624  0F1B                     	;# 
   625  0F1C                     	;# 
   626  0F1D                     	;# 
   627  0F1E                     	;# 
   628  0F1F                     	;# 
   629  0F20                     	;# 
   630  0F21                     	;# 
   631  0F22                     	;# 
   632  0F23                     	;# 
   633  0F24                     	;# 
   634  0F25                     	;# 
   635  0F26                     	;# 
   636  0F27                     	;# 
   637  0F28                     	;# 
   638  0F29                     	;# 
   639  0F2A                     	;# 
   640  0F2B                     	;# 
   641  0F2C                     	;# 
   642  0F2D                     	;# 
   643  0F2E                     	;# 
   644  0F2F                     	;# 
   645  0F30                     	;# 
   646  0F31                     	;# 
   647  0F32                     	;# 
   648  0F38                     	;# 
   649  0F39                     	;# 
   650  0F3A                     	;# 
   651  0F3B                     	;# 
   652  0F3C                     	;# 
   653  0F3D                     	;# 
   654  0F3E                     	;# 
   655  0F3F                     	;# 
   656  0F40                     	;# 
   657  0F41                     	;# 
   658  0F43                     	;# 
   659  0F44                     	;# 
   660  0F45                     	;# 
   661  0F46                     	;# 
   662  0F47                     	;# 
   663  0F48                     	;# 
   664  0F49                     	;# 
   665  0F4A                     	;# 
   666  0F4B                     	;# 
   667  0F4C                     	;# 
   668  0F4E                     	;# 
   669  0F4F                     	;# 
   670  0F50                     	;# 
   671  0F51                     	;# 
   672  0F52                     	;# 
   673  0F53                     	;# 
   674  0F54                     	;# 
   675  0F55                     	;# 
   676  0F56                     	;# 
   677  0F57                     	;# 
   678  0F59                     	;# 
   679  0F5A                     	;# 
   680  0F5B                     	;# 
   681  0F5C                     	;# 
   682  0F5D                     	;# 
   683  0F61                     	;# 
   684  0F62                     	;# 
   685  0F64                     	;# 
   686  0F65                     	;# 
   687  0F66                     	;# 
   688  0F67                     	;# 
   689  0F68                     	;# 
   690  0F69                     	;# 
   691  0F6A                     	;# 
   692  0F6B                     	;# 
   693  0F6C                     	;# 
   694  0F6D                     	;# 
   695  0FE4                     	;# 
   696  0FE5                     	;# 
   697  0FE6                     	;# 
   698  0FE7                     	;# 
   699  0FE8                     	;# 
   700  0FE9                     	;# 
   701  0FEA                     	;# 
   702  0FEB                     	;# 
   703  0FED                     	;# 
   704  0FEE                     	;# 
   705  0FEF                     	;# 
   706  0000                     	;# 
   707  0001                     	;# 
   708  0002                     	;# 
   709  0003                     	;# 
   710  0004                     	;# 
   711  0005                     	;# 
   712  0006                     	;# 
   713  0007                     	;# 
   714  0008                     	;# 
   715  0009                     	;# 
   716  000A                     	;# 
   717  000B                     	;# 
   718  000C                     	;# 
   719  000D                     	;# 
   720  000E                     	;# 
   721  000F                     	;# 
   722  0010                     	;# 
   723  0011                     	;# 
   724  0012                     	;# 
   725  0013                     	;# 
   726  0014                     	;# 
   727  0015                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001C                     	;# 
   734  001C                     	;# 
   735  001D                     	;# 
   736  001D                     	;# 
   737  001E                     	;# 
   738  001F                     	;# 
   739  008C                     	;# 
   740  008C                     	;# 
   741  008D                     	;# 
   742  008E                     	;# 
   743  008E                     	;# 
   744  008F                     	;# 
   745  0090                     	;# 
   746  0090                     	;# 
   747  0091                     	;# 
   748  0093                     	;# 
   749  0094                     	;# 
   750  0095                     	;# 
   751  0096                     	;# 
   752  0097                     	;# 
   753  0098                     	;# 
   754  0099                     	;# 
   755  009A                     	;# 
   756  009B                     	;# 
   757  009C                     	;# 
   758  009D                     	;# 
   759  009E                     	;# 
   760  010C                     	;# 
   761  010D                     	;# 
   762  010E                     	;# 
   763  010E                     	;# 
   764  010F                     	;# 
   765  0110                     	;# 
   766  0110                     	;# 
   767  0111                     	;# 
   768  0112                     	;# 
   769  0112                     	;# 
   770  0113                     	;# 
   771  0114                     	;# 
   772  0114                     	;# 
   773  0115                     	;# 
   774  0116                     	;# 
   775  0116                     	;# 
   776  0117                     	;# 
   777  0119                     	;# 
   778  0119                     	;# 
   779  0119                     	;# 
   780  011A                     	;# 
   781  011A                     	;# 
   782  011A                     	;# 
   783  011B                     	;# 
   784  011B                     	;# 
   785  011B                     	;# 
   786  011B                     	;# 
   787  011B                     	;# 
   788  011C                     	;# 
   789  011C                     	;# 
   790  011C                     	;# 
   791  011D                     	;# 
   792  011D                     	;# 
   793  011D                     	;# 
   794  011E                     	;# 
   795  011E                     	;# 
   796  011E                     	;# 
   797  011F                     	;# 
   798  011F                     	;# 
   799  011F                     	;# 
   800  011F                     	;# 
   801  011F                     	;# 
   802  018C                     	;# 
   803  018D                     	;# 
   804  018E                     	;# 
   805  018F                     	;# 
   806  0190                     	;# 
   807  0191                     	;# 
   808  0192                     	;# 
   809  0196                     	;# 
   810  0197                     	;# 
   811  0198                     	;# 
   812  0199                     	;# 
   813  019A                     	;# 
   814  019B                     	;# 
   815  019C                     	;# 
   816  020C                     	;# 
   817  020C                     	;# 
   818  020D                     	;# 
   819  020E                     	;# 
   820  020F                     	;# 
   821  020F                     	;# 
   822  0210                     	;# 
   823  0210                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  0212                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0214                     	;# 
   830  0215                     	;# 
   831  0215                     	;# 
   832  0216                     	;# 
   833  0216                     	;# 
   834  0217                     	;# 
   835  0217                     	;# 
   836  0218                     	;# 
   837  0218                     	;# 
   838  0219                     	;# 
   839  021A                     	;# 
   840  021B                     	;# 
   841  021B                     	;# 
   842  021C                     	;# 
   843  021C                     	;# 
   844  021D                     	;# 
   845  021D                     	;# 
   846  021E                     	;# 
   847  021F                     	;# 
   848  028C                     	;# 
   849  028C                     	;# 
   850  028D                     	;# 
   851  028D                     	;# 
   852  028E                     	;# 
   853  028F                     	;# 
   854  0290                     	;# 
   855  0290                     	;# 
   856  0291                     	;# 
   857  0292                     	;# 
   858  0292                     	;# 
   859  0293                     	;# 
   860  0293                     	;# 
   861  0294                     	;# 
   862  0295                     	;# 
   863  0296                     	;# 
   864  0296                     	;# 
   865  0297                     	;# 
   866  0298                     	;# 
   867  0298                     	;# 
   868  0299                     	;# 
   869  0299                     	;# 
   870  029A                     	;# 
   871  029B                     	;# 
   872  029C                     	;# 
   873  029C                     	;# 
   874  029D                     	;# 
   875  030C                     	;# 
   876  030C                     	;# 
   877  030D                     	;# 
   878  030E                     	;# 
   879  030F                     	;# 
   880  0310                     	;# 
   881  0310                     	;# 
   882  0311                     	;# 
   883  0312                     	;# 
   884  0313                     	;# 
   885  0314                     	;# 
   886  0314                     	;# 
   887  0315                     	;# 
   888  0316                     	;# 
   889  0317                     	;# 
   890  0318                     	;# 
   891  0318                     	;# 
   892  0319                     	;# 
   893  031A                     	;# 
   894  031B                     	;# 
   895  031C                     	;# 
   896  031C                     	;# 
   897  031D                     	;# 
   898  031E                     	;# 
   899  031F                     	;# 
   900  038C                     	;# 
   901  038C                     	;# 
   902  038D                     	;# 
   903  038E                     	;# 
   904  0390                     	;# 
   905  0390                     	;# 
   906  0391                     	;# 
   907  0392                     	;# 
   908  040C                     	;# 
   909  040D                     	;# 
   910  040E                     	;# 
   911  040F                     	;# 
   912  0410                     	;# 
   913  0411                     	;# 
   914  0416                     	;# 
   915  0416                     	;# 
   916  0417                     	;# 
   917  0418                     	;# 
   918  0418                     	;# 
   919  0419                     	;# 
   920  041A                     	;# 
   921  041A                     	;# 
   922  041B                     	;# 
   923  041C                     	;# 
   924  041C                     	;# 
   925  041D                     	;# 
   926  041E                     	;# 
   927  041F                     	;# 
   928  048C                     	;# 
   929  048C                     	;# 
   930  048D                     	;# 
   931  048E                     	;# 
   932  048F                     	;# 
   933  048F                     	;# 
   934  0490                     	;# 
   935  0491                     	;# 
   936  0492                     	;# 
   937  0492                     	;# 
   938  0493                     	;# 
   939  0494                     	;# 
   940  0495                     	;# 
   941  0495                     	;# 
   942  0496                     	;# 
   943  0497                     	;# 
   944  0498                     	;# 
   945  0499                     	;# 
   946  049A                     	;# 
   947  049B                     	;# 
   948  049C                     	;# 
   949  049D                     	;# 
   950  050C                     	;# 
   951  050C                     	;# 
   952  050D                     	;# 
   953  050E                     	;# 
   954  050F                     	;# 
   955  050F                     	;# 
   956  0510                     	;# 
   957  0511                     	;# 
   958  0512                     	;# 
   959  0512                     	;# 
   960  0513                     	;# 
   961  0514                     	;# 
   962  0515                     	;# 
   963  0515                     	;# 
   964  0516                     	;# 
   965  0517                     	;# 
   966  0518                     	;# 
   967  0519                     	;# 
   968  051A                     	;# 
   969  051B                     	;# 
   970  051C                     	;# 
   971  051D                     	;# 
   972  058C                     	;# 
   973  058C                     	;# 
   974  058D                     	;# 
   975  058E                     	;# 
   976  058F                     	;# 
   977  058F                     	;# 
   978  0590                     	;# 
   979  0591                     	;# 
   980  0592                     	;# 
   981  0593                     	;# 
   982  060C                     	;# 
   983  060D                     	;# 
   984  060E                     	;# 
   985  060F                     	;# 
   986  0610                     	;# 
   987  0611                     	;# 
   988  0612                     	;# 
   989  0613                     	;# 
   990  0614                     	;# 
   991  0616                     	;# 
   992  0617                     	;# 
   993  0618                     	;# 
   994  0619                     	;# 
   995  061A                     	;# 
   996  061B                     	;# 
   997  061C                     	;# 
   998  061D                     	;# 
   999  061E                     	;# 
  1000  068C                     	;# 
  1001  068D                     	;# 
  1002  068E                     	;# 
  1003  068F                     	;# 
  1004  0690                     	;# 
  1005  0691                     	;# 
  1006  0692                     	;# 
  1007  0693                     	;# 
  1008  0694                     	;# 
  1009  070C                     	;# 
  1010  070D                     	;# 
  1011  070E                     	;# 
  1012  070F                     	;# 
  1013  0710                     	;# 
  1014  0711                     	;# 
  1015  0712                     	;# 
  1016  0713                     	;# 
  1017  0714                     	;# 
  1018  0716                     	;# 
  1019  0717                     	;# 
  1020  0718                     	;# 
  1021  0719                     	;# 
  1022  071A                     	;# 
  1023  071B                     	;# 
  1024  071C                     	;# 
  1025  071D                     	;# 
  1026  071E                     	;# 
  1027  0796                     	;# 
  1028  0797                     	;# 
  1029  0798                     	;# 
  1030  0799                     	;# 
  1031  079A                     	;# 
  1032  079B                     	;# 
  1033  080C                     	;# 
  1034  080D                     	;# 
  1035  080E                     	;# 
  1036  080F                     	;# 
  1037  0810                     	;# 
  1038  0811                     	;# 
  1039  0812                     	;# 
  1040  0813                     	;# 
  1041  0814                     	;# 
  1042  081A                     	;# 
  1043  081B                     	;# 
  1044  081C                     	;# 
  1045  081D                     	;# 
  1046  081E                     	;# 
  1047  081F                     	;# 
  1048  088C                     	;# 
  1049  088D                     	;# 
  1050  088E                     	;# 
  1051  088F                     	;# 
  1052  0890                     	;# 
  1053  0891                     	;# 
  1054  0892                     	;# 
  1055  0893                     	;# 
  1056  0895                     	;# 
  1057  0896                     	;# 
  1058  0897                     	;# 
  1059  0898                     	;# 
  1060  0899                     	;# 
  1061  089A                     	;# 
  1062  089B                     	;# 
  1063  090C                     	;# 
  1064  090E                     	;# 
  1065  090F                     	;# 
  1066  091F                     	;# 
  1067  091F                     	;# 
  1068  098F                     	;# 
  1069  098F                     	;# 
  1070  0990                     	;# 
  1071  0991                     	;# 
  1072  0992                     	;# 
  1073  0993                     	;# 
  1074  0994                     	;# 
  1075  0995                     	;# 
  1076  0996                     	;# 
  1077  0997                     	;# 
  1078  0E0F                     	;# 
  1079  0E10                     	;# 
  1080  0E11                     	;# 
  1081  0E12                     	;# 
  1082  0E13                     	;# 
  1083  0E14                     	;# 
  1084  0E15                     	;# 
  1085  0E16                     	;# 
  1086  0E17                     	;# 
  1087  0E18                     	;# 
  1088  0E19                     	;# 
  1089  0E1A                     	;# 
  1090  0E1B                     	;# 
  1091  0E1C                     	;# 
  1092  0E1D                     	;# 
  1093  0E1E                     	;# 
  1094  0E1F                     	;# 
  1095  0E20                     	;# 
  1096  0E21                     	;# 
  1097  0E22                     	;# 
  1098  0E23                     	;# 
  1099  0E24                     	;# 
  1100  0E25                     	;# 
  1101  0E26                     	;# 
  1102  0E27                     	;# 
  1103  0E28                     	;# 
  1104  0E29                     	;# 
  1105  0E2A                     	;# 
  1106  0E2B                     	;# 
  1107  0E2C                     	;# 
  1108  0E2D                     	;# 
  1109  0E2E                     	;# 
  1110  0E2F                     	;# 
  1111  0E30                     	;# 
  1112  0E31                     	;# 
  1113  0E32                     	;# 
  1114  0E33                     	;# 
  1115  0E34                     	;# 
  1116  0E35                     	;# 
  1117  0E36                     	;# 
  1118  0E37                     	;# 
  1119  0E8F                     	;# 
  1120  0E90                     	;# 
  1121  0E91                     	;# 
  1122  0E92                     	;# 
  1123  0E93                     	;# 
  1124  0E94                     	;# 
  1125  0E95                     	;# 
  1126  0E96                     	;# 
  1127  0E97                     	;# 
  1128  0E9C                     	;# 
  1129  0E9D                     	;# 
  1130  0E9E                     	;# 
  1131  0EA1                     	;# 
  1132  0EA2                     	;# 
  1133  0EA3                     	;# 
  1134  0EA4                     	;# 
  1135  0EA5                     	;# 
  1136  0EA9                     	;# 
  1137  0EAA                     	;# 
  1138  0EAB                     	;# 
  1139  0EAC                     	;# 
  1140  0EB1                     	;# 
  1141  0EB2                     	;# 
  1142  0EB3                     	;# 
  1143  0EB8                     	;# 
  1144  0EB9                     	;# 
  1145  0EBA                     	;# 
  1146  0EBB                     	;# 
  1147  0EBC                     	;# 
  1148  0EBD                     	;# 
  1149  0EBE                     	;# 
  1150  0EC3                     	;# 
  1151  0EC5                     	;# 
  1152  0EC6                     	;# 
  1153  0EC7                     	;# 
  1154  0EC8                     	;# 
  1155  0EC9                     	;# 
  1156  0ECA                     	;# 
  1157  0ECB                     	;# 
  1158  0ECC                     	;# 
  1159  0F10                     	;# 
  1160  0F11                     	;# 
  1161  0F12                     	;# 
  1162  0F13                     	;# 
  1163  0F14                     	;# 
  1164  0F15                     	;# 
  1165  0F16                     	;# 
  1166  0F17                     	;# 
  1167  0F18                     	;# 
  1168  0F19                     	;# 
  1169  0F1A                     	;# 
  1170  0F1B                     	;# 
  1171  0F1C                     	;# 
  1172  0F1D                     	;# 
  1173  0F1E                     	;# 
  1174  0F1F                     	;# 
  1175  0F20                     	;# 
  1176  0F21                     	;# 
  1177  0F22                     	;# 
  1178  0F23                     	;# 
  1179  0F24                     	;# 
  1180  0F25                     	;# 
  1181  0F26                     	;# 
  1182  0F27                     	;# 
  1183  0F28                     	;# 
  1184  0F29                     	;# 
  1185  0F2A                     	;# 
  1186  0F2B                     	;# 
  1187  0F2C                     	;# 
  1188  0F2D                     	;# 
  1189  0F2E                     	;# 
  1190  0F2F                     	;# 
  1191  0F30                     	;# 
  1192  0F31                     	;# 
  1193  0F32                     	;# 
  1194  0F38                     	;# 
  1195  0F39                     	;# 
  1196  0F3A                     	;# 
  1197  0F3B                     	;# 
  1198  0F3C                     	;# 
  1199  0F3D                     	;# 
  1200  0F3E                     	;# 
  1201  0F3F                     	;# 
  1202  0F40                     	;# 
  1203  0F41                     	;# 
  1204  0F43                     	;# 
  1205  0F44                     	;# 
  1206  0F45                     	;# 
  1207  0F46                     	;# 
  1208  0F47                     	;# 
  1209  0F48                     	;# 
  1210  0F49                     	;# 
  1211  0F4A                     	;# 
  1212  0F4B                     	;# 
  1213  0F4C                     	;# 
  1214  0F4E                     	;# 
  1215  0F4F                     	;# 
  1216  0F50                     	;# 
  1217  0F51                     	;# 
  1218  0F52                     	;# 
  1219  0F53                     	;# 
  1220  0F54                     	;# 
  1221  0F55                     	;# 
  1222  0F56                     	;# 
  1223  0F57                     	;# 
  1224  0F59                     	;# 
  1225  0F5A                     	;# 
  1226  0F5B                     	;# 
  1227  0F5C                     	;# 
  1228  0F5D                     	;# 
  1229  0F61                     	;# 
  1230  0F62                     	;# 
  1231  0F64                     	;# 
  1232  0F65                     	;# 
  1233  0F66                     	;# 
  1234  0F67                     	;# 
  1235  0F68                     	;# 
  1236  0F69                     	;# 
  1237  0F6A                     	;# 
  1238  0F6B                     	;# 
  1239  0F6C                     	;# 
  1240  0F6D                     	;# 
  1241  0FE4                     	;# 
  1242  0FE5                     	;# 
  1243  0FE6                     	;# 
  1244  0FE7                     	;# 
  1245  0FE8                     	;# 
  1246  0FE9                     	;# 
  1247  0FEA                     	;# 
  1248  0FEB                     	;# 
  1249  0FED                     	;# 
  1250  0FEE                     	;# 
  1251  0FEF                     	;# 
  1252  0000                     	;# 
  1253  0001                     	;# 
  1254  0002                     	;# 
  1255  0003                     	;# 
  1256  0004                     	;# 
  1257  0005                     	;# 
  1258  0006                     	;# 
  1259  0007                     	;# 
  1260  0008                     	;# 
  1261  0009                     	;# 
  1262  000A                     	;# 
  1263  000B                     	;# 
  1264  000C                     	;# 
  1265  000D                     	;# 
  1266  000E                     	;# 
  1267  000F                     	;# 
  1268  0010                     	;# 
  1269  0011                     	;# 
  1270  0012                     	;# 
  1271  0013                     	;# 
  1272  0014                     	;# 
  1273  0015                     	;# 
  1274  0016                     	;# 
  1275  0017                     	;# 
  1276  0018                     	;# 
  1277  0019                     	;# 
  1278  001A                     	;# 
  1279  001C                     	;# 
  1280  001C                     	;# 
  1281  001D                     	;# 
  1282  001D                     	;# 
  1283  001E                     	;# 
  1284  001F                     	;# 
  1285  008C                     	;# 
  1286  008C                     	;# 
  1287  008D                     	;# 
  1288  008E                     	;# 
  1289  008E                     	;# 
  1290  008F                     	;# 
  1291  0090                     	;# 
  1292  0090                     	;# 
  1293  0091                     	;# 
  1294  0093                     	;# 
  1295  0094                     	;# 
  1296  0095                     	;# 
  1297  0096                     	;# 
  1298  0097                     	;# 
  1299  0098                     	;# 
  1300  0099                     	;# 
  1301  009A                     	;# 
  1302  009B                     	;# 
  1303  009C                     	;# 
  1304  009D                     	;# 
  1305  009E                     	;# 
  1306  010C                     	;# 
  1307  010D                     	;# 
  1308  010E                     	;# 
  1309  010E                     	;# 
  1310  010F                     	;# 
  1311  0110                     	;# 
  1312  0110                     	;# 
  1313  0111                     	;# 
  1314  0112                     	;# 
  1315  0112                     	;# 
  1316  0113                     	;# 
  1317  0114                     	;# 
  1318  0114                     	;# 
  1319  0115                     	;# 
  1320  0116                     	;# 
  1321  0116                     	;# 
  1322  0117                     	;# 
  1323  0119                     	;# 
  1324  0119                     	;# 
  1325  0119                     	;# 
  1326  011A                     	;# 
  1327  011A                     	;# 
  1328  011A                     	;# 
  1329  011B                     	;# 
  1330  011B                     	;# 
  1331  011B                     	;# 
  1332  011B                     	;# 
  1333  011B                     	;# 
  1334  011C                     	;# 
  1335  011C                     	;# 
  1336  011C                     	;# 
  1337  011D                     	;# 
  1338  011D                     	;# 
  1339  011D                     	;# 
  1340  011E                     	;# 
  1341  011E                     	;# 
  1342  011E                     	;# 
  1343  011F                     	;# 
  1344  011F                     	;# 
  1345  011F                     	;# 
  1346  011F                     	;# 
  1347  011F                     	;# 
  1348  018C                     	;# 
  1349  018D                     	;# 
  1350  018E                     	;# 
  1351  018F                     	;# 
  1352  0190                     	;# 
  1353  0191                     	;# 
  1354  0192                     	;# 
  1355  0196                     	;# 
  1356  0197                     	;# 
  1357  0198                     	;# 
  1358  0199                     	;# 
  1359  019A                     	;# 
  1360  019B                     	;# 
  1361  019C                     	;# 
  1362  020C                     	;# 
  1363  020C                     	;# 
  1364  020D                     	;# 
  1365  020E                     	;# 
  1366  020F                     	;# 
  1367  020F                     	;# 
  1368  0210                     	;# 
  1369  0210                     	;# 
  1370  0211                     	;# 
  1371  0211                     	;# 
  1372  0212                     	;# 
  1373  0212                     	;# 
  1374  0213                     	;# 
  1375  0214                     	;# 
  1376  0215                     	;# 
  1377  0215                     	;# 
  1378  0216                     	;# 
  1379  0216                     	;# 
  1380  0217                     	;# 
  1381  0217                     	;# 
  1382  0218                     	;# 
  1383  0218                     	;# 
  1384  0219                     	;# 
  1385  021A                     	;# 
  1386  021B                     	;# 
  1387  021B                     	;# 
  1388  021C                     	;# 
  1389  021C                     	;# 
  1390  021D                     	;# 
  1391  021D                     	;# 
  1392  021E                     	;# 
  1393  021F                     	;# 
  1394  028C                     	;# 
  1395  028C                     	;# 
  1396  028D                     	;# 
  1397  028D                     	;# 
  1398  028E                     	;# 
  1399  028F                     	;# 
  1400  0290                     	;# 
  1401  0290                     	;# 
  1402  0291                     	;# 
  1403  0292                     	;# 
  1404  0292                     	;# 
  1405  0293                     	;# 
  1406  0293                     	;# 
  1407  0294                     	;# 
  1408  0295                     	;# 
  1409  0296                     	;# 
  1410  0296                     	;# 
  1411  0297                     	;# 
  1412  0298                     	;# 
  1413  0298                     	;# 
  1414  0299                     	;# 
  1415  0299                     	;# 
  1416  029A                     	;# 
  1417  029B                     	;# 
  1418  029C                     	;# 
  1419  029C                     	;# 
  1420  029D                     	;# 
  1421  030C                     	;# 
  1422  030C                     	;# 
  1423  030D                     	;# 
  1424  030E                     	;# 
  1425  030F                     	;# 
  1426  0310                     	;# 
  1427  0310                     	;# 
  1428  0311                     	;# 
  1429  0312                     	;# 
  1430  0313                     	;# 
  1431  0314                     	;# 
  1432  0314                     	;# 
  1433  0315                     	;# 
  1434  0316                     	;# 
  1435  0317                     	;# 
  1436  0318                     	;# 
  1437  0318                     	;# 
  1438  0319                     	;# 
  1439  031A                     	;# 
  1440  031B                     	;# 
  1441  031C                     	;# 
  1442  031C                     	;# 
  1443  031D                     	;# 
  1444  031E                     	;# 
  1445  031F                     	;# 
  1446  038C                     	;# 
  1447  038C                     	;# 
  1448  038D                     	;# 
  1449  038E                     	;# 
  1450  0390                     	;# 
  1451  0390                     	;# 
  1452  0391                     	;# 
  1453  0392                     	;# 
  1454  040C                     	;# 
  1455  040D                     	;# 
  1456  040E                     	;# 
  1457  040F                     	;# 
  1458  0410                     	;# 
  1459  0411                     	;# 
  1460  0416                     	;# 
  1461  0416                     	;# 
  1462  0417                     	;# 
  1463  0418                     	;# 
  1464  0418                     	;# 
  1465  0419                     	;# 
  1466  041A                     	;# 
  1467  041A                     	;# 
  1468  041B                     	;# 
  1469  041C                     	;# 
  1470  041C                     	;# 
  1471  041D                     	;# 
  1472  041E                     	;# 
  1473  041F                     	;# 
  1474  048C                     	;# 
  1475  048C                     	;# 
  1476  048D                     	;# 
  1477  048E                     	;# 
  1478  048F                     	;# 
  1479  048F                     	;# 
  1480  0490                     	;# 
  1481  0491                     	;# 
  1482  0492                     	;# 
  1483  0492                     	;# 
  1484  0493                     	;# 
  1485  0494                     	;# 
  1486  0495                     	;# 
  1487  0495                     	;# 
  1488  0496                     	;# 
  1489  0497                     	;# 
  1490  0498                     	;# 
  1491  0499                     	;# 
  1492  049A                     	;# 
  1493  049B                     	;# 
  1494  049C                     	;# 
  1495  049D                     	;# 
  1496  050C                     	;# 
  1497  050C                     	;# 
  1498  050D                     	;# 
  1499  050E                     	;# 
  1500  050F                     	;# 
  1501  050F                     	;# 
  1502  0510                     	;# 
  1503  0511                     	;# 
  1504  0512                     	;# 
  1505  0512                     	;# 
  1506  0513                     	;# 
  1507  0514                     	;# 
  1508  0515                     	;# 
  1509  0515                     	;# 
  1510  0516                     	;# 
  1511  0517                     	;# 
  1512  0518                     	;# 
  1513  0519                     	;# 
  1514  051A                     	;# 
  1515  051B                     	;# 
  1516  051C                     	;# 
  1517  051D                     	;# 
  1518  058C                     	;# 
  1519  058C                     	;# 
  1520  058D                     	;# 
  1521  058E                     	;# 
  1522  058F                     	;# 
  1523  058F                     	;# 
  1524  0590                     	;# 
  1525  0591                     	;# 
  1526  0592                     	;# 
  1527  0593                     	;# 
  1528  060C                     	;# 
  1529  060D                     	;# 
  1530  060E                     	;# 
  1531  060F                     	;# 
  1532  0610                     	;# 
  1533  0611                     	;# 
  1534  0612                     	;# 
  1535  0613                     	;# 
  1536  0614                     	;# 
  1537  0616                     	;# 
  1538  0617                     	;# 
  1539  0618                     	;# 
  1540  0619                     	;# 
  1541  061A                     	;# 
  1542  061B                     	;# 
  1543  061C                     	;# 
  1544  061D                     	;# 
  1545  061E                     	;# 
  1546  068C                     	;# 
  1547  068D                     	;# 
  1548  068E                     	;# 
  1549  068F                     	;# 
  1550  0690                     	;# 
  1551  0691                     	;# 
  1552  0692                     	;# 
  1553  0693                     	;# 
  1554  0694                     	;# 
  1555  070C                     	;# 
  1556  070D                     	;# 
  1557  070E                     	;# 
  1558  070F                     	;# 
  1559  0710                     	;# 
  1560  0711                     	;# 
  1561  0712                     	;# 
  1562  0713                     	;# 
  1563  0714                     	;# 
  1564  0716                     	;# 
  1565  0717                     	;# 
  1566  0718                     	;# 
  1567  0719                     	;# 
  1568  071A                     	;# 
  1569  071B                     	;# 
  1570  071C                     	;# 
  1571  071D                     	;# 
  1572  071E                     	;# 
  1573  0796                     	;# 
  1574  0797                     	;# 
  1575  0798                     	;# 
  1576  0799                     	;# 
  1577  079A                     	;# 
  1578  079B                     	;# 
  1579  080C                     	;# 
  1580  080D                     	;# 
  1581  080E                     	;# 
  1582  080F                     	;# 
  1583  0810                     	;# 
  1584  0811                     	;# 
  1585  0812                     	;# 
  1586  0813                     	;# 
  1587  0814                     	;# 
  1588  081A                     	;# 
  1589  081B                     	;# 
  1590  081C                     	;# 
  1591  081D                     	;# 
  1592  081E                     	;# 
  1593  081F                     	;# 
  1594  088C                     	;# 
  1595  088D                     	;# 
  1596  088E                     	;# 
  1597  088F                     	;# 
  1598  0890                     	;# 
  1599  0891                     	;# 
  1600  0892                     	;# 
  1601  0893                     	;# 
  1602  0895                     	;# 
  1603  0896                     	;# 
  1604  0897                     	;# 
  1605  0898                     	;# 
  1606  0899                     	;# 
  1607  089A                     	;# 
  1608  089B                     	;# 
  1609  090C                     	;# 
  1610  090E                     	;# 
  1611  090F                     	;# 
  1612  091F                     	;# 
  1613  091F                     	;# 
  1614  098F                     	;# 
  1615  098F                     	;# 
  1616  0990                     	;# 
  1617  0991                     	;# 
  1618  0992                     	;# 
  1619  0993                     	;# 
  1620  0994                     	;# 
  1621  0995                     	;# 
  1622  0996                     	;# 
  1623  0997                     	;# 
  1624  0E0F                     	;# 
  1625  0E10                     	;# 
  1626  0E11                     	;# 
  1627  0E12                     	;# 
  1628  0E13                     	;# 
  1629  0E14                     	;# 
  1630  0E15                     	;# 
  1631  0E16                     	;# 
  1632  0E17                     	;# 
  1633  0E18                     	;# 
  1634  0E19                     	;# 
  1635  0E1A                     	;# 
  1636  0E1B                     	;# 
  1637  0E1C                     	;# 
  1638  0E1D                     	;# 
  1639  0E1E                     	;# 
  1640  0E1F                     	;# 
  1641  0E20                     	;# 
  1642  0E21                     	;# 
  1643  0E22                     	;# 
  1644  0E23                     	;# 
  1645  0E24                     	;# 
  1646  0E25                     	;# 
  1647  0E26                     	;# 
  1648  0E27                     	;# 
  1649  0E28                     	;# 
  1650  0E29                     	;# 
  1651  0E2A                     	;# 
  1652  0E2B                     	;# 
  1653  0E2C                     	;# 
  1654  0E2D                     	;# 
  1655  0E2E                     	;# 
  1656  0E2F                     	;# 
  1657  0E30                     	;# 
  1658  0E31                     	;# 
  1659  0E32                     	;# 
  1660  0E33                     	;# 
  1661  0E34                     	;# 
  1662  0E35                     	;# 
  1663  0E36                     	;# 
  1664  0E37                     	;# 
  1665  0E8F                     	;# 
  1666  0E90                     	;# 
  1667  0E91                     	;# 
  1668  0E92                     	;# 
  1669  0E93                     	;# 
  1670  0E94                     	;# 
  1671  0E95                     	;# 
  1672  0E96                     	;# 
  1673  0E97                     	;# 
  1674  0E9C                     	;# 
  1675  0E9D                     	;# 
  1676  0E9E                     	;# 
  1677  0EA1                     	;# 
  1678  0EA2                     	;# 
  1679  0EA3                     	;# 
  1680  0EA4                     	;# 
  1681  0EA5                     	;# 
  1682  0EA9                     	;# 
  1683  0EAA                     	;# 
  1684  0EAB                     	;# 
  1685  0EAC                     	;# 
  1686  0EB1                     	;# 
  1687  0EB2                     	;# 
  1688  0EB3                     	;# 
  1689  0EB8                     	;# 
  1690  0EB9                     	;# 
  1691  0EBA                     	;# 
  1692  0EBB                     	;# 
  1693  0EBC                     	;# 
  1694  0EBD                     	;# 
  1695  0EBE                     	;# 
  1696  0EC3                     	;# 
  1697  0EC5                     	;# 
  1698  0EC6                     	;# 
  1699  0EC7                     	;# 
  1700  0EC8                     	;# 
  1701  0EC9                     	;# 
  1702  0ECA                     	;# 
  1703  0ECB                     	;# 
  1704  0ECC                     	;# 
  1705  0F10                     	;# 
  1706  0F11                     	;# 
  1707  0F12                     	;# 
  1708  0F13                     	;# 
  1709  0F14                     	;# 
  1710  0F15                     	;# 
  1711  0F16                     	;# 
  1712  0F17                     	;# 
  1713  0F18                     	;# 
  1714  0F19                     	;# 
  1715  0F1A                     	;# 
  1716  0F1B                     	;# 
  1717  0F1C                     	;# 
  1718  0F1D                     	;# 
  1719  0F1E                     	;# 
  1720  0F1F                     	;# 
  1721  0F20                     	;# 
  1722  0F21                     	;# 
  1723  0F22                     	;# 
  1724  0F23                     	;# 
  1725  0F24                     	;# 
  1726  0F25                     	;# 
  1727  0F26                     	;# 
  1728  0F27                     	;# 
  1729  0F28                     	;# 
  1730  0F29                     	;# 
  1731  0F2A                     	;# 
  1732  0F2B                     	;# 
  1733  0F2C                     	;# 
  1734  0F2D                     	;# 
  1735  0F2E                     	;# 
  1736  0F2F                     	;# 
  1737  0F30                     	;# 
  1738  0F31                     	;# 
  1739  0F32                     	;# 
  1740  0F38                     	;# 
  1741  0F39                     	;# 
  1742  0F3A                     	;# 
  1743  0F3B                     	;# 
  1744  0F3C                     	;# 
  1745  0F3D                     	;# 
  1746  0F3E                     	;# 
  1747  0F3F                     	;# 
  1748  0F40                     	;# 
  1749  0F41                     	;# 
  1750  0F43                     	;# 
  1751  0F44                     	;# 
  1752  0F45                     	;# 
  1753  0F46                     	;# 
  1754  0F47                     	;# 
  1755  0F48                     	;# 
  1756  0F49                     	;# 
  1757  0F4A                     	;# 
  1758  0F4B                     	;# 
  1759  0F4C                     	;# 
  1760  0F4E                     	;# 
  1761  0F4F                     	;# 
  1762  0F50                     	;# 
  1763  0F51                     	;# 
  1764  0F52                     	;# 
  1765  0F53                     	;# 
  1766  0F54                     	;# 
  1767  0F55                     	;# 
  1768  0F56                     	;# 
  1769  0F57                     	;# 
  1770  0F59                     	;# 
  1771  0F5A                     	;# 
  1772  0F5B                     	;# 
  1773  0F5C                     	;# 
  1774  0F5D                     	;# 
  1775  0F61                     	;# 
  1776  0F62                     	;# 
  1777  0F64                     	;# 
  1778  0F65                     	;# 
  1779  0F66                     	;# 
  1780  0F67                     	;# 
  1781  0F68                     	;# 
  1782  0F69                     	;# 
  1783  0F6A                     	;# 
  1784  0F6B                     	;# 
  1785  0F6C                     	;# 
  1786  0F6D                     	;# 
  1787  0FE4                     	;# 
  1788  0FE5                     	;# 
  1789  0FE6                     	;# 
  1790  0FE7                     	;# 
  1791  0FE8                     	;# 
  1792  0FE9                     	;# 
  1793  0FEA                     	;# 
  1794  0FEB                     	;# 
  1795  0FED                     	;# 
  1796  0FEE                     	;# 
  1797  0FEF                     	;# 
  1798  0000                     	;# 
  1799  0001                     	;# 
  1800  0002                     	;# 
  1801  0003                     	;# 
  1802  0004                     	;# 
  1803  0005                     	;# 
  1804  0006                     	;# 
  1805  0007                     	;# 
  1806  0008                     	;# 
  1807  0009                     	;# 
  1808  000A                     	;# 
  1809  000B                     	;# 
  1810  000C                     	;# 
  1811  000D                     	;# 
  1812  000E                     	;# 
  1813  000F                     	;# 
  1814  0010                     	;# 
  1815  0011                     	;# 
  1816  0012                     	;# 
  1817  0013                     	;# 
  1818  0014                     	;# 
  1819  0015                     	;# 
  1820  0016                     	;# 
  1821  0017                     	;# 
  1822  0018                     	;# 
  1823  0019                     	;# 
  1824  001A                     	;# 
  1825  001C                     	;# 
  1826  001C                     	;# 
  1827  001D                     	;# 
  1828  001D                     	;# 
  1829  001E                     	;# 
  1830  001F                     	;# 
  1831  008C                     	;# 
  1832  008C                     	;# 
  1833  008D                     	;# 
  1834  008E                     	;# 
  1835  008E                     	;# 
  1836  008F                     	;# 
  1837  0090                     	;# 
  1838  0090                     	;# 
  1839  0091                     	;# 
  1840  0093                     	;# 
  1841  0094                     	;# 
  1842  0095                     	;# 
  1843  0096                     	;# 
  1844  0097                     	;# 
  1845  0098                     	;# 
  1846  0099                     	;# 
  1847  009A                     	;# 
  1848  009B                     	;# 
  1849  009C                     	;# 
  1850  009D                     	;# 
  1851  009E                     	;# 
  1852  010C                     	;# 
  1853  010D                     	;# 
  1854  010E                     	;# 
  1855  010E                     	;# 
  1856  010F                     	;# 
  1857  0110                     	;# 
  1858  0110                     	;# 
  1859  0111                     	;# 
  1860  0112                     	;# 
  1861  0112                     	;# 
  1862  0113                     	;# 
  1863  0114                     	;# 
  1864  0114                     	;# 
  1865  0115                     	;# 
  1866  0116                     	;# 
  1867  0116                     	;# 
  1868  0117                     	;# 
  1869  0119                     	;# 
  1870  0119                     	;# 
  1871  0119                     	;# 
  1872  011A                     	;# 
  1873  011A                     	;# 
  1874  011A                     	;# 
  1875  011B                     	;# 
  1876  011B                     	;# 
  1877  011B                     	;# 
  1878  011B                     	;# 
  1879  011B                     	;# 
  1880  011C                     	;# 
  1881  011C                     	;# 
  1882  011C                     	;# 
  1883  011D                     	;# 
  1884  011D                     	;# 
  1885  011D                     	;# 
  1886  011E                     	;# 
  1887  011E                     	;# 
  1888  011E                     	;# 
  1889  011F                     	;# 
  1890  011F                     	;# 
  1891  011F                     	;# 
  1892  011F                     	;# 
  1893  011F                     	;# 
  1894  018C                     	;# 
  1895  018D                     	;# 
  1896  018E                     	;# 
  1897  018F                     	;# 
  1898  0190                     	;# 
  1899  0191                     	;# 
  1900  0192                     	;# 
  1901  0196                     	;# 
  1902  0197                     	;# 
  1903  0198                     	;# 
  1904  0199                     	;# 
  1905  019A                     	;# 
  1906  019B                     	;# 
  1907  019C                     	;# 
  1908  020C                     	;# 
  1909  020C                     	;# 
  1910  020D                     	;# 
  1911  020E                     	;# 
  1912  020F                     	;# 
  1913  020F                     	;# 
  1914  0210                     	;# 
  1915  0210                     	;# 
  1916  0211                     	;# 
  1917  0211                     	;# 
  1918  0212                     	;# 
  1919  0212                     	;# 
  1920  0213                     	;# 
  1921  0214                     	;# 
  1922  0215                     	;# 
  1923  0215                     	;# 
  1924  0216                     	;# 
  1925  0216                     	;# 
  1926  0217                     	;# 
  1927  0217                     	;# 
  1928  0218                     	;# 
  1929  0218                     	;# 
  1930  0219                     	;# 
  1931  021A                     	;# 
  1932  021B                     	;# 
  1933  021B                     	;# 
  1934  021C                     	;# 
  1935  021C                     	;# 
  1936  021D                     	;# 
  1937  021D                     	;# 
  1938  021E                     	;# 
  1939  021F                     	;# 
  1940  028C                     	;# 
  1941  028C                     	;# 
  1942  028D                     	;# 
  1943  028D                     	;# 
  1944  028E                     	;# 
  1945  028F                     	;# 
  1946  0290                     	;# 
  1947  0290                     	;# 
  1948  0291                     	;# 
  1949  0292                     	;# 
  1950  0292                     	;# 
  1951  0293                     	;# 
  1952  0293                     	;# 
  1953  0294                     	;# 
  1954  0295                     	;# 
  1955  0296                     	;# 
  1956  0296                     	;# 
  1957  0297                     	;# 
  1958  0298                     	;# 
  1959  0298                     	;# 
  1960  0299                     	;# 
  1961  0299                     	;# 
  1962  029A                     	;# 
  1963  029B                     	;# 
  1964  029C                     	;# 
  1965  029C                     	;# 
  1966  029D                     	;# 
  1967  030C                     	;# 
  1968  030C                     	;# 
  1969  030D                     	;# 
  1970  030E                     	;# 
  1971  030F                     	;# 
  1972  0310                     	;# 
  1973  0310                     	;# 
  1974  0311                     	;# 
  1975  0312                     	;# 
  1976  0313                     	;# 
  1977  0314                     	;# 
  1978  0314                     	;# 
  1979  0315                     	;# 
  1980  0316                     	;# 
  1981  0317                     	;# 
  1982  0318                     	;# 
  1983  0318                     	;# 
  1984  0319                     	;# 
  1985  031A                     	;# 
  1986  031B                     	;# 
  1987  031C                     	;# 
  1988  031C                     	;# 
  1989  031D                     	;# 
  1990  031E                     	;# 
  1991  031F                     	;# 
  1992  038C                     	;# 
  1993  038C                     	;# 
  1994  038D                     	;# 
  1995  038E                     	;# 
  1996  0390                     	;# 
  1997  0390                     	;# 
  1998  0391                     	;# 
  1999  0392                     	;# 
  2000  040C                     	;# 
  2001  040D                     	;# 
  2002  040E                     	;# 
  2003  040F                     	;# 
  2004  0410                     	;# 
  2005  0411                     	;# 
  2006  0416                     	;# 
  2007  0416                     	;# 
  2008  0417                     	;# 
  2009  0418                     	;# 
  2010  0418                     	;# 
  2011  0419                     	;# 
  2012  041A                     	;# 
  2013  041A                     	;# 
  2014  041B                     	;# 
  2015  041C                     	;# 
  2016  041C                     	;# 
  2017  041D                     	;# 
  2018  041E                     	;# 
  2019  041F                     	;# 
  2020  048C                     	;# 
  2021  048C                     	;# 
  2022  048D                     	;# 
  2023  048E                     	;# 
  2024  048F                     	;# 
  2025  048F                     	;# 
  2026  0490                     	;# 
  2027  0491                     	;# 
  2028  0492                     	;# 
  2029  0492                     	;# 
  2030  0493                     	;# 
  2031  0494                     	;# 
  2032  0495                     	;# 
  2033  0495                     	;# 
  2034  0496                     	;# 
  2035  0497                     	;# 
  2036  0498                     	;# 
  2037  0499                     	;# 
  2038  049A                     	;# 
  2039  049B                     	;# 
  2040  049C                     	;# 
  2041  049D                     	;# 
  2042  050C                     	;# 
  2043  050C                     	;# 
  2044  050D                     	;# 
  2045  050E                     	;# 
  2046  050F                     	;# 
  2047  050F                     	;# 
  2048  0510                     	;# 
  2049  0511                     	;# 
  2050  0512                     	;# 
  2051  0512                     	;# 
  2052  0513                     	;# 
  2053  0514                     	;# 
  2054  0515                     	;# 
  2055  0515                     	;# 
  2056  0516                     	;# 
  2057  0517                     	;# 
  2058  0518                     	;# 
  2059  0519                     	;# 
  2060  051A                     	;# 
  2061  051B                     	;# 
  2062  051C                     	;# 
  2063  051D                     	;# 
  2064  058C                     	;# 
  2065  058C                     	;# 
  2066  058D                     	;# 
  2067  058E                     	;# 
  2068  058F                     	;# 
  2069  058F                     	;# 
  2070  0590                     	;# 
  2071  0591                     	;# 
  2072  0592                     	;# 
  2073  0593                     	;# 
  2074  060C                     	;# 
  2075  060D                     	;# 
  2076  060E                     	;# 
  2077  060F                     	;# 
  2078  0610                     	;# 
  2079  0611                     	;# 
  2080  0612                     	;# 
  2081  0613                     	;# 
  2082  0614                     	;# 
  2083  0616                     	;# 
  2084  0617                     	;# 
  2085  0618                     	;# 
  2086  0619                     	;# 
  2087  061A                     	;# 
  2088  061B                     	;# 
  2089  061C                     	;# 
  2090  061D                     	;# 
  2091  061E                     	;# 
  2092  068C                     	;# 
  2093  068D                     	;# 
  2094  068E                     	;# 
  2095  068F                     	;# 
  2096  0690                     	;# 
  2097  0691                     	;# 
  2098  0692                     	;# 
  2099  0693                     	;# 
  2100  0694                     	;# 
  2101  070C                     	;# 
  2102  070D                     	;# 
  2103  070E                     	;# 
  2104  070F                     	;# 
  2105  0710                     	;# 
  2106  0711                     	;# 
  2107  0712                     	;# 
  2108  0713                     	;# 
  2109  0714                     	;# 
  2110  0716                     	;# 
  2111  0717                     	;# 
  2112  0718                     	;# 
  2113  0719                     	;# 
  2114  071A                     	;# 
  2115  071B                     	;# 
  2116  071C                     	;# 
  2117  071D                     	;# 
  2118  071E                     	;# 
  2119  0796                     	;# 
  2120  0797                     	;# 
  2121  0798                     	;# 
  2122  0799                     	;# 
  2123  079A                     	;# 
  2124  079B                     	;# 
  2125  080C                     	;# 
  2126  080D                     	;# 
  2127  080E                     	;# 
  2128  080F                     	;# 
  2129  0810                     	;# 
  2130  0811                     	;# 
  2131  0812                     	;# 
  2132  0813                     	;# 
  2133  0814                     	;# 
  2134  081A                     	;# 
  2135  081B                     	;# 
  2136  081C                     	;# 
  2137  081D                     	;# 
  2138  081E                     	;# 
  2139  081F                     	;# 
  2140  088C                     	;# 
  2141  088D                     	;# 
  2142  088E                     	;# 
  2143  088F                     	;# 
  2144  0890                     	;# 
  2145  0891                     	;# 
  2146  0892                     	;# 
  2147  0893                     	;# 
  2148  0895                     	;# 
  2149  0896                     	;# 
  2150  0897                     	;# 
  2151  0898                     	;# 
  2152  0899                     	;# 
  2153  089A                     	;# 
  2154  089B                     	;# 
  2155  090C                     	;# 
  2156  090E                     	;# 
  2157  090F                     	;# 
  2158  091F                     	;# 
  2159  091F                     	;# 
  2160  098F                     	;# 
  2161  098F                     	;# 
  2162  0990                     	;# 
  2163  0991                     	;# 
  2164  0992                     	;# 
  2165  0993                     	;# 
  2166  0994                     	;# 
  2167  0995                     	;# 
  2168  0996                     	;# 
  2169  0997                     	;# 
  2170  0E0F                     	;# 
  2171  0E10                     	;# 
  2172  0E11                     	;# 
  2173  0E12                     	;# 
  2174  0E13                     	;# 
  2175  0E14                     	;# 
  2176  0E15                     	;# 
  2177  0E16                     	;# 
  2178  0E17                     	;# 
  2179  0E18                     	;# 
  2180  0E19                     	;# 
  2181  0E1A                     	;# 
  2182  0E1B                     	;# 
  2183  0E1C                     	;# 
  2184  0E1D                     	;# 
  2185  0E1E                     	;# 
  2186  0E1F                     	;# 
  2187  0E20                     	;# 
  2188  0E21                     	;# 
  2189  0E22                     	;# 
  2190  0E23                     	;# 
  2191  0E24                     	;# 
  2192  0E25                     	;# 
  2193  0E26                     	;# 
  2194  0E27                     	;# 
  2195  0E28                     	;# 
  2196  0E29                     	;# 
  2197  0E2A                     	;# 
  2198  0E2B                     	;# 
  2199  0E2C                     	;# 
  2200  0E2D                     	;# 
  2201  0E2E                     	;# 
  2202  0E2F                     	;# 
  2203  0E30                     	;# 
  2204  0E31                     	;# 
  2205  0E32                     	;# 
  2206  0E33                     	;# 
  2207  0E34                     	;# 
  2208  0E35                     	;# 
  2209  0E36                     	;# 
  2210  0E37                     	;# 
  2211  0E8F                     	;# 
  2212  0E90                     	;# 
  2213  0E91                     	;# 
  2214  0E92                     	;# 
  2215  0E93                     	;# 
  2216  0E94                     	;# 
  2217  0E95                     	;# 
  2218  0E96                     	;# 
  2219  0E97                     	;# 
  2220  0E9C                     	;# 
  2221  0E9D                     	;# 
  2222  0E9E                     	;# 
  2223  0EA1                     	;# 
  2224  0EA2                     	;# 
  2225  0EA3                     	;# 
  2226  0EA4                     	;# 
  2227  0EA5                     	;# 
  2228  0EA9                     	;# 
  2229  0EAA                     	;# 
  2230  0EAB                     	;# 
  2231  0EAC                     	;# 
  2232  0EB1                     	;# 
  2233  0EB2                     	;# 
  2234  0EB3                     	;# 
  2235  0EB8                     	;# 
  2236  0EB9                     	;# 
  2237  0EBA                     	;# 
  2238  0EBB                     	;# 
  2239  0EBC                     	;# 
  2240  0EBD                     	;# 
  2241  0EBE                     	;# 
  2242  0EC3                     	;# 
  2243  0EC5                     	;# 
  2244  0EC6                     	;# 
  2245  0EC7                     	;# 
  2246  0EC8                     	;# 
  2247  0EC9                     	;# 
  2248  0ECA                     	;# 
  2249  0ECB                     	;# 
  2250  0ECC                     	;# 
  2251  0F10                     	;# 
  2252  0F11                     	;# 
  2253  0F12                     	;# 
  2254  0F13                     	;# 
  2255  0F14                     	;# 
  2256  0F15                     	;# 
  2257  0F16                     	;# 
  2258  0F17                     	;# 
  2259  0F18                     	;# 
  2260  0F19                     	;# 
  2261  0F1A                     	;# 
  2262  0F1B                     	;# 
  2263  0F1C                     	;# 
  2264  0F1D                     	;# 
  2265  0F1E                     	;# 
  2266  0F1F                     	;# 
  2267  0F20                     	;# 
  2268  0F21                     	;# 
  2269  0F22                     	;# 
  2270  0F23                     	;# 
  2271  0F24                     	;# 
  2272  0F25                     	;# 
  2273  0F26                     	;# 
  2274  0F27                     	;# 
  2275  0F28                     	;# 
  2276  0F29                     	;# 
  2277  0F2A                     	;# 
  2278  0F2B                     	;# 
  2279  0F2C                     	;# 
  2280  0F2D                     	;# 
  2281  0F2E                     	;# 
  2282  0F2F                     	;# 
  2283  0F30                     	;# 
  2284  0F31                     	;# 
  2285  0F32                     	;# 
  2286  0F38                     	;# 
  2287  0F39                     	;# 
  2288  0F3A                     	;# 
  2289  0F3B                     	;# 
  2290  0F3C                     	;# 
  2291  0F3D                     	;# 
  2292  0F3E                     	;# 
  2293  0F3F                     	;# 
  2294  0F40                     	;# 
  2295  0F41                     	;# 
  2296  0F43                     	;# 
  2297  0F44                     	;# 
  2298  0F45                     	;# 
  2299  0F46                     	;# 
  2300  0F47                     	;# 
  2301  0F48                     	;# 
  2302  0F49                     	;# 
  2303  0F4A                     	;# 
  2304  0F4B                     	;# 
  2305  0F4C                     	;# 
  2306  0F4E                     	;# 
  2307  0F4F                     	;# 
  2308  0F50                     	;# 
  2309  0F51                     	;# 
  2310  0F52                     	;# 
  2311  0F53                     	;# 
  2312  0F54                     	;# 
  2313  0F55                     	;# 
  2314  0F56                     	;# 
  2315  0F57                     	;# 
  2316  0F59                     	;# 
  2317  0F5A                     	;# 
  2318  0F5B                     	;# 
  2319  0F5C                     	;# 
  2320  0F5D                     	;# 
  2321  0F61                     	;# 
  2322  0F62                     	;# 
  2323  0F64                     	;# 
  2324  0F65                     	;# 
  2325  0F66                     	;# 
  2326  0F67                     	;# 
  2327  0F68                     	;# 
  2328  0F69                     	;# 
  2329  0F6A                     	;# 
  2330  0F6B                     	;# 
  2331  0F6C                     	;# 
  2332  0F6D                     	;# 
  2333  0FE4                     	;# 
  2334  0FE5                     	;# 
  2335  0FE6                     	;# 
  2336  0FE7                     	;# 
  2337  0FE8                     	;# 
  2338  0FE9                     	;# 
  2339  0FEA                     	;# 
  2340  0FEB                     	;# 
  2341  0FED                     	;# 
  2342  0FEE                     	;# 
  2343  0FEF                     	;# 
  2344  0000                     	;# 
  2345  0001                     	;# 
  2346  0002                     	;# 
  2347  0003                     	;# 
  2348  0004                     	;# 
  2349  0005                     	;# 
  2350  0006                     	;# 
  2351  0007                     	;# 
  2352  0008                     	;# 
  2353  0009                     	;# 
  2354  000A                     	;# 
  2355  000B                     	;# 
  2356  000C                     	;# 
  2357  000D                     	;# 
  2358  000E                     	;# 
  2359  000F                     	;# 
  2360  0010                     	;# 
  2361  0011                     	;# 
  2362  0012                     	;# 
  2363  0013                     	;# 
  2364  0014                     	;# 
  2365  0015                     	;# 
  2366  0016                     	;# 
  2367  0017                     	;# 
  2368  0018                     	;# 
  2369  0019                     	;# 
  2370  001A                     	;# 
  2371  001C                     	;# 
  2372  001C                     	;# 
  2373  001D                     	;# 
  2374  001D                     	;# 
  2375  001E                     	;# 
  2376  001F                     	;# 
  2377  008C                     	;# 
  2378  008C                     	;# 
  2379  008D                     	;# 
  2380  008E                     	;# 
  2381  008E                     	;# 
  2382  008F                     	;# 
  2383  0090                     	;# 
  2384  0090                     	;# 
  2385  0091                     	;# 
  2386  0093                     	;# 
  2387  0094                     	;# 
  2388  0095                     	;# 
  2389  0096                     	;# 
  2390  0097                     	;# 
  2391  0098                     	;# 
  2392  0099                     	;# 
  2393  009A                     	;# 
  2394  009B                     	;# 
  2395  009C                     	;# 
  2396  009D                     	;# 
  2397  009E                     	;# 
  2398  010C                     	;# 
  2399  010D                     	;# 
  2400  010E                     	;# 
  2401  010E                     	;# 
  2402  010F                     	;# 
  2403  0110                     	;# 
  2404  0110                     	;# 
  2405  0111                     	;# 
  2406  0112                     	;# 
  2407  0112                     	;# 
  2408  0113                     	;# 
  2409  0114                     	;# 
  2410  0114                     	;# 
  2411  0115                     	;# 
  2412  0116                     	;# 
  2413  0116                     	;# 
  2414  0117                     	;# 
  2415  0119                     	;# 
  2416  0119                     	;# 
  2417  0119                     	;# 
  2418  011A                     	;# 
  2419  011A                     	;# 
  2420  011A                     	;# 
  2421  011B                     	;# 
  2422  011B                     	;# 
  2423  011B                     	;# 
  2424  011B                     	;# 
  2425  011B                     	;# 
  2426  011C                     	;# 
  2427  011C                     	;# 
  2428  011C                     	;# 
  2429  011D                     	;# 
  2430  011D                     	;# 
  2431  011D                     	;# 
  2432  011E                     	;# 
  2433  011E                     	;# 
  2434  011E                     	;# 
  2435  011F                     	;# 
  2436  011F                     	;# 
  2437  011F                     	;# 
  2438  011F                     	;# 
  2439  011F                     	;# 
  2440  018C                     	;# 
  2441  018D                     	;# 
  2442  018E                     	;# 
  2443  018F                     	;# 
  2444  0190                     	;# 
  2445  0191                     	;# 
  2446  0192                     	;# 
  2447  0196                     	;# 
  2448  0197                     	;# 
  2449  0198                     	;# 
  2450  0199                     	;# 
  2451  019A                     	;# 
  2452  019B                     	;# 
  2453  019C                     	;# 
  2454  020C                     	;# 
  2455  020C                     	;# 
  2456  020D                     	;# 
  2457  020E                     	;# 
  2458  020F                     	;# 
  2459  020F                     	;# 
  2460  0210                     	;# 
  2461  0210                     	;# 
  2462  0211                     	;# 
  2463  0211                     	;# 
  2464  0212                     	;# 
  2465  0212                     	;# 
  2466  0213                     	;# 
  2467  0214                     	;# 
  2468  0215                     	;# 
  2469  0215                     	;# 
  2470  0216                     	;# 
  2471  0216                     	;# 
  2472  0217                     	;# 
  2473  0217                     	;# 
  2474  0218                     	;# 
  2475  0218                     	;# 
  2476  0219                     	;# 
  2477  021A                     	;# 
  2478  021B                     	;# 
  2479  021B                     	;# 
  2480  021C                     	;# 
  2481  021C                     	;# 
  2482  021D                     	;# 
  2483  021D                     	;# 
  2484  021E                     	;# 
  2485  021F                     	;# 
  2486  028C                     	;# 
  2487  028C                     	;# 
  2488  028D                     	;# 
  2489  028D                     	;# 
  2490  028E                     	;# 
  2491  028F                     	;# 
  2492  0290                     	;# 
  2493  0290                     	;# 
  2494  0291                     	;# 
  2495  0292                     	;# 
  2496  0292                     	;# 
  2497  0293                     	;# 
  2498  0293                     	;# 
  2499  0294                     	;# 
  2500  0295                     	;# 
  2501  0296                     	;# 
  2502  0296                     	;# 
  2503  0297                     	;# 
  2504  0298                     	;# 
  2505  0298                     	;# 
  2506  0299                     	;# 
  2507  0299                     	;# 
  2508  029A                     	;# 
  2509  029B                     	;# 
  2510  029C                     	;# 
  2511  029C                     	;# 
  2512  029D                     	;# 
  2513  030C                     	;# 
  2514  030C                     	;# 
  2515  030D                     	;# 
  2516  030E                     	;# 
  2517  030F                     	;# 
  2518  0310                     	;# 
  2519  0310                     	;# 
  2520  0311                     	;# 
  2521  0312                     	;# 
  2522  0313                     	;# 
  2523  0314                     	;# 
  2524  0314                     	;# 
  2525  0315                     	;# 
  2526  0316                     	;# 
  2527  0317                     	;# 
  2528  0318                     	;# 
  2529  0318                     	;# 
  2530  0319                     	;# 
  2531  031A                     	;# 
  2532  031B                     	;# 
  2533  031C                     	;# 
  2534  031C                     	;# 
  2535  031D                     	;# 
  2536  031E                     	;# 
  2537  031F                     	;# 
  2538  038C                     	;# 
  2539  038C                     	;# 
  2540  038D                     	;# 
  2541  038E                     	;# 
  2542  0390                     	;# 
  2543  0390                     	;# 
  2544  0391                     	;# 
  2545  0392                     	;# 
  2546  040C                     	;# 
  2547  040D                     	;# 
  2548  040E                     	;# 
  2549  040F                     	;# 
  2550  0410                     	;# 
  2551  0411                     	;# 
  2552  0416                     	;# 
  2553  0416                     	;# 
  2554  0417                     	;# 
  2555  0418                     	;# 
  2556  0418                     	;# 
  2557  0419                     	;# 
  2558  041A                     	;# 
  2559  041A                     	;# 
  2560  041B                     	;# 
  2561  041C                     	;# 
  2562  041C                     	;# 
  2563  041D                     	;# 
  2564  041E                     	;# 
  2565  041F                     	;# 
  2566  048C                     	;# 
  2567  048C                     	;# 
  2568  048D                     	;# 
  2569  048E                     	;# 
  2570  048F                     	;# 
  2571  048F                     	;# 
  2572  0490                     	;# 
  2573  0491                     	;# 
  2574  0492                     	;# 
  2575  0492                     	;# 
  2576  0493                     	;# 
  2577  0494                     	;# 
  2578  0495                     	;# 
  2579  0495                     	;# 
  2580  0496                     	;# 
  2581  0497                     	;# 
  2582  0498                     	;# 
  2583  0499                     	;# 
  2584  049A                     	;# 
  2585  049B                     	;# 
  2586  049C                     	;# 
  2587  049D                     	;# 
  2588  050C                     	;# 
  2589  050C                     	;# 
  2590  050D                     	;# 
  2591  050E                     	;# 
  2592  050F                     	;# 
  2593  050F                     	;# 
  2594  0510                     	;# 
  2595  0511                     	;# 
  2596  0512                     	;# 
  2597  0512                     	;# 
  2598  0513                     	;# 
  2599  0514                     	;# 
  2600  0515                     	;# 
  2601  0515                     	;# 
  2602  0516                     	;# 
  2603  0517                     	;# 
  2604  0518                     	;# 
  2605  0519                     	;# 
  2606  051A                     	;# 
  2607  051B                     	;# 
  2608  051C                     	;# 
  2609  051D                     	;# 
  2610  058C                     	;# 
  2611  058C                     	;# 
  2612  058D                     	;# 
  2613  058E                     	;# 
  2614  058F                     	;# 
  2615  058F                     	;# 
  2616  0590                     	;# 
  2617  0591                     	;# 
  2618  0592                     	;# 
  2619  0593                     	;# 
  2620  060C                     	;# 
  2621  060D                     	;# 
  2622  060E                     	;# 
  2623  060F                     	;# 
  2624  0610                     	;# 
  2625  0611                     	;# 
  2626  0612                     	;# 
  2627  0613                     	;# 
  2628  0614                     	;# 
  2629  0616                     	;# 
  2630  0617                     	;# 
  2631  0618                     	;# 
  2632  0619                     	;# 
  2633  061A                     	;# 
  2634  061B                     	;# 
  2635  061C                     	;# 
  2636  061D                     	;# 
  2637  061E                     	;# 
  2638  068C                     	;# 
  2639  068D                     	;# 
  2640  068E                     	;# 
  2641  068F                     	;# 
  2642  0690                     	;# 
  2643  0691                     	;# 
  2644  0692                     	;# 
  2645  0693                     	;# 
  2646  0694                     	;# 
  2647  070C                     	;# 
  2648  070D                     	;# 
  2649  070E                     	;# 
  2650  070F                     	;# 
  2651  0710                     	;# 
  2652  0711                     	;# 
  2653  0712                     	;# 
  2654  0713                     	;# 
  2655  0714                     	;# 
  2656  0716                     	;# 
  2657  0717                     	;# 
  2658  0718                     	;# 
  2659  0719                     	;# 
  2660  071A                     	;# 
  2661  071B                     	;# 
  2662  071C                     	;# 
  2663  071D                     	;# 
  2664  071E                     	;# 
  2665  0796                     	;# 
  2666  0797                     	;# 
  2667  0798                     	;# 
  2668  0799                     	;# 
  2669  079A                     	;# 
  2670  079B                     	;# 
  2671  080C                     	;# 
  2672  080D                     	;# 
  2673  080E                     	;# 
  2674  080F                     	;# 
  2675  0810                     	;# 
  2676  0811                     	;# 
  2677  0812                     	;# 
  2678  0813                     	;# 
  2679  0814                     	;# 
  2680  081A                     	;# 
  2681  081B                     	;# 
  2682  081C                     	;# 
  2683  081D                     	;# 
  2684  081E                     	;# 
  2685  081F                     	;# 
  2686  088C                     	;# 
  2687  088D                     	;# 
  2688  088E                     	;# 
  2689  088F                     	;# 
  2690  0890                     	;# 
  2691  0891                     	;# 
  2692  0892                     	;# 
  2693  0893                     	;# 
  2694  0895                     	;# 
  2695  0896                     	;# 
  2696  0897                     	;# 
  2697  0898                     	;# 
  2698  0899                     	;# 
  2699  089A                     	;# 
  2700  089B                     	;# 
  2701  090C                     	;# 
  2702  090E                     	;# 
  2703  090F                     	;# 
  2704  091F                     	;# 
  2705  091F                     	;# 
  2706  098F                     	;# 
  2707  098F                     	;# 
  2708  0990                     	;# 
  2709  0991                     	;# 
  2710  0992                     	;# 
  2711  0993                     	;# 
  2712  0994                     	;# 
  2713  0995                     	;# 
  2714  0996                     	;# 
  2715  0997                     	;# 
  2716  0E0F                     	;# 
  2717  0E10                     	;# 
  2718  0E11                     	;# 
  2719  0E12                     	;# 
  2720  0E13                     	;# 
  2721  0E14                     	;# 
  2722  0E15                     	;# 
  2723  0E16                     	;# 
  2724  0E17                     	;# 
  2725  0E18                     	;# 
  2726  0E19                     	;# 
  2727  0E1A                     	;# 
  2728  0E1B                     	;# 
  2729  0E1C                     	;# 
  2730  0E1D                     	;# 
  2731  0E1E                     	;# 
  2732  0E1F                     	;# 
  2733  0E20                     	;# 
  2734  0E21                     	;# 
  2735  0E22                     	;# 
  2736  0E23                     	;# 
  2737  0E24                     	;# 
  2738  0E25                     	;# 
  2739  0E26                     	;# 
  2740  0E27                     	;# 
  2741  0E28                     	;# 
  2742  0E29                     	;# 
  2743  0E2A                     	;# 
  2744  0E2B                     	;# 
  2745  0E2C                     	;# 
  2746  0E2D                     	;# 
  2747  0E2E                     	;# 
  2748  0E2F                     	;# 
  2749  0E30                     	;# 
  2750  0E31                     	;# 
  2751  0E32                     	;# 
  2752  0E33                     	;# 
  2753  0E34                     	;# 
  2754  0E35                     	;# 
  2755  0E36                     	;# 
  2756  0E37                     	;# 
  2757  0E8F                     	;# 
  2758  0E90                     	;# 
  2759  0E91                     	;# 
  2760  0E92                     	;# 
  2761  0E93                     	;# 
  2762  0E94                     	;# 
  2763  0E95                     	;# 
  2764  0E96                     	;# 
  2765  0E97                     	;# 
  2766  0E9C                     	;# 
  2767  0E9D                     	;# 
  2768  0E9E                     	;# 
  2769  0EA1                     	;# 
  2770  0EA2                     	;# 
  2771  0EA3                     	;# 
  2772  0EA4                     	;# 
  2773  0EA5                     	;# 
  2774  0EA9                     	;# 
  2775  0EAA                     	;# 
  2776  0EAB                     	;# 
  2777  0EAC                     	;# 
  2778  0EB1                     	;# 
  2779  0EB2                     	;# 
  2780  0EB3                     	;# 
  2781  0EB8                     	;# 
  2782  0EB9                     	;# 
  2783  0EBA                     	;# 
  2784  0EBB                     	;# 
  2785  0EBC                     	;# 
  2786  0EBD                     	;# 
  2787  0EBE                     	;# 
  2788  0EC3                     	;# 
  2789  0EC5                     	;# 
  2790  0EC6                     	;# 
  2791  0EC7                     	;# 
  2792  0EC8                     	;# 
  2793  0EC9                     	;# 
  2794  0ECA                     	;# 
  2795  0ECB                     	;# 
  2796  0ECC                     	;# 
  2797  0F10                     	;# 
  2798  0F11                     	;# 
  2799  0F12                     	;# 
  2800  0F13                     	;# 
  2801  0F14                     	;# 
  2802  0F15                     	;# 
  2803  0F16                     	;# 
  2804  0F17                     	;# 
  2805  0F18                     	;# 
  2806  0F19                     	;# 
  2807  0F1A                     	;# 
  2808  0F1B                     	;# 
  2809  0F1C                     	;# 
  2810  0F1D                     	;# 
  2811  0F1E                     	;# 
  2812  0F1F                     	;# 
  2813  0F20                     	;# 
  2814  0F21                     	;# 
  2815  0F22                     	;# 
  2816  0F23                     	;# 
  2817  0F24                     	;# 
  2818  0F25                     	;# 
  2819  0F26                     	;# 
  2820  0F27                     	;# 
  2821  0F28                     	;# 
  2822  0F29                     	;# 
  2823  0F2A                     	;# 
  2824  0F2B                     	;# 
  2825  0F2C                     	;# 
  2826  0F2D                     	;# 
  2827  0F2E                     	;# 
  2828  0F2F                     	;# 
  2829  0F30                     	;# 
  2830  0F31                     	;# 
  2831  0F32                     	;# 
  2832  0F38                     	;# 
  2833  0F39                     	;# 
  2834  0F3A                     	;# 
  2835  0F3B                     	;# 
  2836  0F3C                     	;# 
  2837  0F3D                     	;# 
  2838  0F3E                     	;# 
  2839  0F3F                     	;# 
  2840  0F40                     	;# 
  2841  0F41                     	;# 
  2842  0F43                     	;# 
  2843  0F44                     	;# 
  2844  0F45                     	;# 
  2845  0F46                     	;# 
  2846  0F47                     	;# 
  2847  0F48                     	;# 
  2848  0F49                     	;# 
  2849  0F4A                     	;# 
  2850  0F4B                     	;# 
  2851  0F4C                     	;# 
  2852  0F4E                     	;# 
  2853  0F4F                     	;# 
  2854  0F50                     	;# 
  2855  0F51                     	;# 
  2856  0F52                     	;# 
  2857  0F53                     	;# 
  2858  0F54                     	;# 
  2859  0F55                     	;# 
  2860  0F56                     	;# 
  2861  0F57                     	;# 
  2862  0F59                     	;# 
  2863  0F5A                     	;# 
  2864  0F5B                     	;# 
  2865  0F5C                     	;# 
  2866  0F5D                     	;# 
  2867  0F61                     	;# 
  2868  0F62                     	;# 
  2869  0F64                     	;# 
  2870  0F65                     	;# 
  2871  0F66                     	;# 
  2872  0F67                     	;# 
  2873  0F68                     	;# 
  2874  0F69                     	;# 
  2875  0F6A                     	;# 
  2876  0F6B                     	;# 
  2877  0F6C                     	;# 
  2878  0F6D                     	;# 
  2879  0FE4                     	;# 
  2880  0FE5                     	;# 
  2881  0FE6                     	;# 
  2882  0FE7                     	;# 
  2883  0FE8                     	;# 
  2884  0FE9                     	;# 
  2885  0FEA                     	;# 
  2886  0FEB                     	;# 
  2887  0FED                     	;# 
  2888  0FEE                     	;# 
  2889  0FEF                     	;# 
  2890  0000                     	;# 
  2891  0001                     	;# 
  2892  0002                     	;# 
  2893  0003                     	;# 
  2894  0004                     	;# 
  2895  0005                     	;# 
  2896  0006                     	;# 
  2897  0007                     	;# 
  2898  0008                     	;# 
  2899  0009                     	;# 
  2900  000A                     	;# 
  2901  000B                     	;# 
  2902  000C                     	;# 
  2903  000D                     	;# 
  2904  000E                     	;# 
  2905  000F                     	;# 
  2906  0010                     	;# 
  2907  0011                     	;# 
  2908  0012                     	;# 
  2909  0013                     	;# 
  2910  0014                     	;# 
  2911  0015                     	;# 
  2912  0016                     	;# 
  2913  0017                     	;# 
  2914  0018                     	;# 
  2915  0019                     	;# 
  2916  001A                     	;# 
  2917  001C                     	;# 
  2918  001C                     	;# 
  2919  001D                     	;# 
  2920  001D                     	;# 
  2921  001E                     	;# 
  2922  001F                     	;# 
  2923  008C                     	;# 
  2924  008C                     	;# 
  2925  008D                     	;# 
  2926  008E                     	;# 
  2927  008E                     	;# 
  2928  008F                     	;# 
  2929  0090                     	;# 
  2930  0090                     	;# 
  2931  0091                     	;# 
  2932  0093                     	;# 
  2933  0094                     	;# 
  2934  0095                     	;# 
  2935  0096                     	;# 
  2936  0097                     	;# 
  2937  0098                     	;# 
  2938  0099                     	;# 
  2939  009A                     	;# 
  2940  009B                     	;# 
  2941  009C                     	;# 
  2942  009D                     	;# 
  2943  009E                     	;# 
  2944  010C                     	;# 
  2945  010D                     	;# 
  2946  010E                     	;# 
  2947  010E                     	;# 
  2948  010F                     	;# 
  2949  0110                     	;# 
  2950  0110                     	;# 
  2951  0111                     	;# 
  2952  0112                     	;# 
  2953  0112                     	;# 
  2954  0113                     	;# 
  2955  0114                     	;# 
  2956  0114                     	;# 
  2957  0115                     	;# 
  2958  0116                     	;# 
  2959  0116                     	;# 
  2960  0117                     	;# 
  2961  0119                     	;# 
  2962  0119                     	;# 
  2963  0119                     	;# 
  2964  011A                     	;# 
  2965  011A                     	;# 
  2966  011A                     	;# 
  2967  011B                     	;# 
  2968  011B                     	;# 
  2969  011B                     	;# 
  2970  011B                     	;# 
  2971  011B                     	;# 
  2972  011C                     	;# 
  2973  011C                     	;# 
  2974  011C                     	;# 
  2975  011D                     	;# 
  2976  011D                     	;# 
  2977  011D                     	;# 
  2978  011E                     	;# 
  2979  011E                     	;# 
  2980  011E                     	;# 
  2981  011F                     	;# 
  2982  011F                     	;# 
  2983  011F                     	;# 
  2984  011F                     	;# 
  2985  011F                     	;# 
  2986  018C                     	;# 
  2987  018D                     	;# 
  2988  018E                     	;# 
  2989  018F                     	;# 
  2990  0190                     	;# 
  2991  0191                     	;# 
  2992  0192                     	;# 
  2993  0196                     	;# 
  2994  0197                     	;# 
  2995  0198                     	;# 
  2996  0199                     	;# 
  2997  019A                     	;# 
  2998  019B                     	;# 
  2999  019C                     	;# 
  3000  020C                     	;# 
  3001  020C                     	;# 
  3002  020D                     	;# 
  3003  020E                     	;# 
  3004  020F                     	;# 
  3005  020F                     	;# 
  3006  0210                     	;# 
  3007  0210                     	;# 
  3008  0211                     	;# 
  3009  0211                     	;# 
  3010  0212                     	;# 
  3011  0212                     	;# 
  3012  0213                     	;# 
  3013  0214                     	;# 
  3014  0215                     	;# 
  3015  0215                     	;# 
  3016  0216                     	;# 
  3017  0216                     	;# 
  3018  0217                     	;# 
  3019  0217                     	;# 
  3020  0218                     	;# 
  3021  0218                     	;# 
  3022  0219                     	;# 
  3023  021A                     	;# 
  3024  021B                     	;# 
  3025  021B                     	;# 
  3026  021C                     	;# 
  3027  021C                     	;# 
  3028  021D                     	;# 
  3029  021D                     	;# 
  3030  021E                     	;# 
  3031  021F                     	;# 
  3032  028C                     	;# 
  3033  028C                     	;# 
  3034  028D                     	;# 
  3035  028D                     	;# 
  3036  028E                     	;# 
  3037  028F                     	;# 
  3038  0290                     	;# 
  3039  0290                     	;# 
  3040  0291                     	;# 
  3041  0292                     	;# 
  3042  0292                     	;# 
  3043  0293                     	;# 
  3044  0293                     	;# 
  3045  0294                     	;# 
  3046  0295                     	;# 
  3047  0296                     	;# 
  3048  0296                     	;# 
  3049  0297                     	;# 
  3050  0298                     	;# 
  3051  0298                     	;# 
  3052  0299                     	;# 
  3053  0299                     	;# 
  3054  029A                     	;# 
  3055  029B                     	;# 
  3056  029C                     	;# 
  3057  029C                     	;# 
  3058  029D                     	;# 
  3059  030C                     	;# 
  3060  030C                     	;# 
  3061  030D                     	;# 
  3062  030E                     	;# 
  3063  030F                     	;# 
  3064  0310                     	;# 
  3065  0310                     	;# 
  3066  0311                     	;# 
  3067  0312                     	;# 
  3068  0313                     	;# 
  3069  0314                     	;# 
  3070  0314                     	;# 
  3071  0315                     	;# 
  3072  0316                     	;# 
  3073  0317                     	;# 
  3074  0318                     	;# 
  3075  0318                     	;# 
  3076  0319                     	;# 
  3077  031A                     	;# 
  3078  031B                     	;# 
  3079  031C                     	;# 
  3080  031C                     	;# 
  3081  031D                     	;# 
  3082  031E                     	;# 
  3083  031F                     	;# 
  3084  038C                     	;# 
  3085  038C                     	;# 
  3086  038D                     	;# 
  3087  038E                     	;# 
  3088  0390                     	;# 
  3089  0390                     	;# 
  3090  0391                     	;# 
  3091  0392                     	;# 
  3092  040C                     	;# 
  3093  040D                     	;# 
  3094  040E                     	;# 
  3095  040F                     	;# 
  3096  0410                     	;# 
  3097  0411                     	;# 
  3098  0416                     	;# 
  3099  0416                     	;# 
  3100  0417                     	;# 
  3101  0418                     	;# 
  3102  0418                     	;# 
  3103  0419                     	;# 
  3104  041A                     	;# 
  3105  041A                     	;# 
  3106  041B                     	;# 
  3107  041C                     	;# 
  3108  041C                     	;# 
  3109  041D                     	;# 
  3110  041E                     	;# 
  3111  041F                     	;# 
  3112  048C                     	;# 
  3113  048C                     	;# 
  3114  048D                     	;# 
  3115  048E                     	;# 
  3116  048F                     	;# 
  3117  048F                     	;# 
  3118  0490                     	;# 
  3119  0491                     	;# 
  3120  0492                     	;# 
  3121  0492                     	;# 
  3122  0493                     	;# 
  3123  0494                     	;# 
  3124  0495                     	;# 
  3125  0495                     	;# 
  3126  0496                     	;# 
  3127  0497                     	;# 
  3128  0498                     	;# 
  3129  0499                     	;# 
  3130  049A                     	;# 
  3131  049B                     	;# 
  3132  049C                     	;# 
  3133  049D                     	;# 
  3134  050C                     	;# 
  3135  050C                     	;# 
  3136  050D                     	;# 
  3137  050E                     	;# 
  3138  050F                     	;# 
  3139  050F                     	;# 
  3140  0510                     	;# 
  3141  0511                     	;# 
  3142  0512                     	;# 
  3143  0512                     	;# 
  3144  0513                     	;# 
  3145  0514                     	;# 
  3146  0515                     	;# 
  3147  0515                     	;# 
  3148  0516                     	;# 
  3149  0517                     	;# 
  3150  0518                     	;# 
  3151  0519                     	;# 
  3152  051A                     	;# 
  3153  051B                     	;# 
  3154  051C                     	;# 
  3155  051D                     	;# 
  3156  058C                     	;# 
  3157  058C                     	;# 
  3158  058D                     	;# 
  3159  058E                     	;# 
  3160  058F                     	;# 
  3161  058F                     	;# 
  3162  0590                     	;# 
  3163  0591                     	;# 
  3164  0592                     	;# 
  3165  0593                     	;# 
  3166  060C                     	;# 
  3167  060D                     	;# 
  3168  060E                     	;# 
  3169  060F                     	;# 
  3170  0610                     	;# 
  3171  0611                     	;# 
  3172  0612                     	;# 
  3173  0613                     	;# 
  3174  0614                     	;# 
  3175  0616                     	;# 
  3176  0617                     	;# 
  3177  0618                     	;# 
  3178  0619                     	;# 
  3179  061A                     	;# 
  3180  061B                     	;# 
  3181  061C                     	;# 
  3182  061D                     	;# 
  3183  061E                     	;# 
  3184  068C                     	;# 
  3185  068D                     	;# 
  3186  068E                     	;# 
  3187  068F                     	;# 
  3188  0690                     	;# 
  3189  0691                     	;# 
  3190  0692                     	;# 
  3191  0693                     	;# 
  3192  0694                     	;# 
  3193  070C                     	;# 
  3194  070D                     	;# 
  3195  070E                     	;# 
  3196  070F                     	;# 
  3197  0710                     	;# 
  3198  0711                     	;# 
  3199  0712                     	;# 
  3200  0713                     	;# 
  3201  0714                     	;# 
  3202  0716                     	;# 
  3203  0717                     	;# 
  3204  0718                     	;# 
  3205  0719                     	;# 
  3206  071A                     	;# 
  3207  071B                     	;# 
  3208  071C                     	;# 
  3209  071D                     	;# 
  3210  071E                     	;# 
  3211  0796                     	;# 
  3212  0797                     	;# 
  3213  0798                     	;# 
  3214  0799                     	;# 
  3215  079A                     	;# 
  3216  079B                     	;# 
  3217  080C                     	;# 
  3218  080D                     	;# 
  3219  080E                     	;# 
  3220  080F                     	;# 
  3221  0810                     	;# 
  3222  0811                     	;# 
  3223  0812                     	;# 
  3224  0813                     	;# 
  3225  0814                     	;# 
  3226  081A                     	;# 
  3227  081B                     	;# 
  3228  081C                     	;# 
  3229  081D                     	;# 
  3230  081E                     	;# 
  3231  081F                     	;# 
  3232  088C                     	;# 
  3233  088D                     	;# 
  3234  088E                     	;# 
  3235  088F                     	;# 
  3236  0890                     	;# 
  3237  0891                     	;# 
  3238  0892                     	;# 
  3239  0893                     	;# 
  3240  0895                     	;# 
  3241  0896                     	;# 
  3242  0897                     	;# 
  3243  0898                     	;# 
  3244  0899                     	;# 
  3245  089A                     	;# 
  3246  089B                     	;# 
  3247  090C                     	;# 
  3248  090E                     	;# 
  3249  090F                     	;# 
  3250  091F                     	;# 
  3251  091F                     	;# 
  3252  098F                     	;# 
  3253  098F                     	;# 
  3254  0990                     	;# 
  3255  0991                     	;# 
  3256  0992                     	;# 
  3257  0993                     	;# 
  3258  0994                     	;# 
  3259  0995                     	;# 
  3260  0996                     	;# 
  3261  0997                     	;# 
  3262  0E0F                     	;# 
  3263  0E10                     	;# 
  3264  0E11                     	;# 
  3265  0E12                     	;# 
  3266  0E13                     	;# 
  3267  0E14                     	;# 
  3268  0E15                     	;# 
  3269  0E16                     	;# 
  3270  0E17                     	;# 
  3271  0E18                     	;# 
  3272  0E19                     	;# 
  3273  0E1A                     	;# 
  3274  0E1B                     	;# 
  3275  0E1C                     	;# 
  3276  0E1D                     	;# 
  3277  0E1E                     	;# 
  3278  0E1F                     	;# 
  3279  0E20                     	;# 
  3280  0E21                     	;# 
  3281  0E22                     	;# 
  3282  0E23                     	;# 
  3283  0E24                     	;# 
  3284  0E25                     	;# 
  3285  0E26                     	;# 
  3286  0E27                     	;# 
  3287  0E28                     	;# 
  3288  0E29                     	;# 
  3289  0E2A                     	;# 
  3290  0E2B                     	;# 
  3291  0E2C                     	;# 
  3292  0E2D                     	;# 
  3293  0E2E                     	;# 
  3294  0E2F                     	;# 
  3295  0E30                     	;# 
  3296  0E31                     	;# 
  3297  0E32                     	;# 
  3298  0E33                     	;# 
  3299  0E34                     	;# 
  3300  0E35                     	;# 
  3301  0E36                     	;# 
  3302  0E37                     	;# 
  3303  0E8F                     	;# 
  3304  0E90                     	;# 
  3305  0E91                     	;# 
  3306  0E92                     	;# 
  3307  0E93                     	;# 
  3308  0E94                     	;# 
  3309  0E95                     	;# 
  3310  0E96                     	;# 
  3311  0E97                     	;# 
  3312  0E9C                     	;# 
  3313  0E9D                     	;# 
  3314  0E9E                     	;# 
  3315  0EA1                     	;# 
  3316  0EA2                     	;# 
  3317  0EA3                     	;# 
  3318  0EA4                     	;# 
  3319  0EA5                     	;# 
  3320  0EA9                     	;# 
  3321  0EAA                     	;# 
  3322  0EAB                     	;# 
  3323  0EAC                     	;# 
  3324  0EB1                     	;# 
  3325  0EB2                     	;# 
  3326  0EB3                     	;# 
  3327  0EB8                     	;# 
  3328  0EB9                     	;# 
  3329  0EBA                     	;# 
  3330  0EBB                     	;# 
  3331  0EBC                     	;# 
  3332  0EBD                     	;# 
  3333  0EBE                     	;# 
  3334  0EC3                     	;# 
  3335  0EC5                     	;# 
  3336  0EC6                     	;# 
  3337  0EC7                     	;# 
  3338  0EC8                     	;# 
  3339  0EC9                     	;# 
  3340  0ECA                     	;# 
  3341  0ECB                     	;# 
  3342  0ECC                     	;# 
  3343  0F10                     	;# 
  3344  0F11                     	;# 
  3345  0F12                     	;# 
  3346  0F13                     	;# 
  3347  0F14                     	;# 
  3348  0F15                     	;# 
  3349  0F16                     	;# 
  3350  0F17                     	;# 
  3351  0F18                     	;# 
  3352  0F19                     	;# 
  3353  0F1A                     	;# 
  3354  0F1B                     	;# 
  3355  0F1C                     	;# 
  3356  0F1D                     	;# 
  3357  0F1E                     	;# 
  3358  0F1F                     	;# 
  3359  0F20                     	;# 
  3360  0F21                     	;# 
  3361  0F22                     	;# 
  3362  0F23                     	;# 
  3363  0F24                     	;# 
  3364  0F25                     	;# 
  3365  0F26                     	;# 
  3366  0F27                     	;# 
  3367  0F28                     	;# 
  3368  0F29                     	;# 
  3369  0F2A                     	;# 
  3370  0F2B                     	;# 
  3371  0F2C                     	;# 
  3372  0F2D                     	;# 
  3373  0F2E                     	;# 
  3374  0F2F                     	;# 
  3375  0F30                     	;# 
  3376  0F31                     	;# 
  3377  0F32                     	;# 
  3378  0F38                     	;# 
  3379  0F39                     	;# 
  3380  0F3A                     	;# 
  3381  0F3B                     	;# 
  3382  0F3C                     	;# 
  3383  0F3D                     	;# 
  3384  0F3E                     	;# 
  3385  0F3F                     	;# 
  3386  0F40                     	;# 
  3387  0F41                     	;# 
  3388  0F43                     	;# 
  3389  0F44                     	;# 
  3390  0F45                     	;# 
  3391  0F46                     	;# 
  3392  0F47                     	;# 
  3393  0F48                     	;# 
  3394  0F49                     	;# 
  3395  0F4A                     	;# 
  3396  0F4B                     	;# 
  3397  0F4C                     	;# 
  3398  0F4E                     	;# 
  3399  0F4F                     	;# 
  3400  0F50                     	;# 
  3401  0F51                     	;# 
  3402  0F52                     	;# 
  3403  0F53                     	;# 
  3404  0F54                     	;# 
  3405  0F55                     	;# 
  3406  0F56                     	;# 
  3407  0F57                     	;# 
  3408  0F59                     	;# 
  3409  0F5A                     	;# 
  3410  0F5B                     	;# 
  3411  0F5C                     	;# 
  3412  0F5D                     	;# 
  3413  0F61                     	;# 
  3414  0F62                     	;# 
  3415  0F64                     	;# 
  3416  0F65                     	;# 
  3417  0F66                     	;# 
  3418  0F67                     	;# 
  3419  0F68                     	;# 
  3420  0F69                     	;# 
  3421  0F6A                     	;# 
  3422  0F6B                     	;# 
  3423  0F6C                     	;# 
  3424  0F6D                     	;# 
  3425  0FE4                     	;# 
  3426  0FE5                     	;# 
  3427  0FE6                     	;# 
  3428  0FE7                     	;# 
  3429  0FE8                     	;# 
  3430  0FE9                     	;# 
  3431  0FEA                     	;# 
  3432  0FEB                     	;# 
  3433  0FED                     	;# 
  3434  0FEE                     	;# 
  3435  0FEF                     	;# 
  3436  0000                     	;# 
  3437  0001                     	;# 
  3438  0002                     	;# 
  3439  0003                     	;# 
  3440  0004                     	;# 
  3441  0005                     	;# 
  3442  0006                     	;# 
  3443  0007                     	;# 
  3444  0008                     	;# 
  3445  0009                     	;# 
  3446  000A                     	;# 
  3447  000B                     	;# 
  3448  000C                     	;# 
  3449  000D                     	;# 
  3450  000E                     	;# 
  3451  000F                     	;# 
  3452  0010                     	;# 
  3453  0011                     	;# 
  3454  0012                     	;# 
  3455  0013                     	;# 
  3456  0014                     	;# 
  3457  0015                     	;# 
  3458  0016                     	;# 
  3459  0017                     	;# 
  3460  0018                     	;# 
  3461  0019                     	;# 
  3462  001A                     	;# 
  3463  001C                     	;# 
  3464  001C                     	;# 
  3465  001D                     	;# 
  3466  001D                     	;# 
  3467  001E                     	;# 
  3468  001F                     	;# 
  3469  008C                     	;# 
  3470  008C                     	;# 
  3471  008D                     	;# 
  3472  008E                     	;# 
  3473  008E                     	;# 
  3474  008F                     	;# 
  3475  0090                     	;# 
  3476  0090                     	;# 
  3477  0091                     	;# 
  3478  0093                     	;# 
  3479  0094                     	;# 
  3480  0095                     	;# 
  3481  0096                     	;# 
  3482  0097                     	;# 
  3483  0098                     	;# 
  3484  0099                     	;# 
  3485  009A                     	;# 
  3486  009B                     	;# 
  3487  009C                     	;# 
  3488  009D                     	;# 
  3489  009E                     	;# 
  3490  010C                     	;# 
  3491  010D                     	;# 
  3492  010E                     	;# 
  3493  010E                     	;# 
  3494  010F                     	;# 
  3495  0110                     	;# 
  3496  0110                     	;# 
  3497  0111                     	;# 
  3498  0112                     	;# 
  3499  0112                     	;# 
  3500  0113                     	;# 
  3501  0114                     	;# 
  3502  0114                     	;# 
  3503  0115                     	;# 
  3504  0116                     	;# 
  3505  0116                     	;# 
  3506  0117                     	;# 
  3507  0119                     	;# 
  3508  0119                     	;# 
  3509  0119                     	;# 
  3510  011A                     	;# 
  3511  011A                     	;# 
  3512  011A                     	;# 
  3513  011B                     	;# 
  3514  011B                     	;# 
  3515  011B                     	;# 
  3516  011B                     	;# 
  3517  011B                     	;# 
  3518  011C                     	;# 
  3519  011C                     	;# 
  3520  011C                     	;# 
  3521  011D                     	;# 
  3522  011D                     	;# 
  3523  011D                     	;# 
  3524  011E                     	;# 
  3525  011E                     	;# 
  3526  011E                     	;# 
  3527  011F                     	;# 
  3528  011F                     	;# 
  3529  011F                     	;# 
  3530  011F                     	;# 
  3531  011F                     	;# 
  3532  018C                     	;# 
  3533  018D                     	;# 
  3534  018E                     	;# 
  3535  018F                     	;# 
  3536  0190                     	;# 
  3537  0191                     	;# 
  3538  0192                     	;# 
  3539  0196                     	;# 
  3540  0197                     	;# 
  3541  0198                     	;# 
  3542  0199                     	;# 
  3543  019A                     	;# 
  3544  019B                     	;# 
  3545  019C                     	;# 
  3546  020C                     	;# 
  3547  020C                     	;# 
  3548  020D                     	;# 
  3549  020E                     	;# 
  3550  020F                     	;# 
  3551  020F                     	;# 
  3552  0210                     	;# 
  3553  0210                     	;# 
  3554  0211                     	;# 
  3555  0211                     	;# 
  3556  0212                     	;# 
  3557  0212                     	;# 
  3558  0213                     	;# 
  3559  0214                     	;# 
  3560  0215                     	;# 
  3561  0215                     	;# 
  3562  0216                     	;# 
  3563  0216                     	;# 
  3564  0217                     	;# 
  3565  0217                     	;# 
  3566  0218                     	;# 
  3567  0218                     	;# 
  3568  0219                     	;# 
  3569  021A                     	;# 
  3570  021B                     	;# 
  3571  021B                     	;# 
  3572  021C                     	;# 
  3573  021C                     	;# 
  3574  021D                     	;# 
  3575  021D                     	;# 
  3576  021E                     	;# 
  3577  021F                     	;# 
  3578  028C                     	;# 
  3579  028C                     	;# 
  3580  028D                     	;# 
  3581  028D                     	;# 
  3582  028E                     	;# 
  3583  028F                     	;# 
  3584  0290                     	;# 
  3585  0290                     	;# 
  3586  0291                     	;# 
  3587  0292                     	;# 
  3588  0292                     	;# 
  3589  0293                     	;# 
  3590  0293                     	;# 
  3591  0294                     	;# 
  3592  0295                     	;# 
  3593  0296                     	;# 
  3594  0296                     	;# 
  3595  0297                     	;# 
  3596  0298                     	;# 
  3597  0298                     	;# 
  3598  0299                     	;# 
  3599  0299                     	;# 
  3600  029A                     	;# 
  3601  029B                     	;# 
  3602  029C                     	;# 
  3603  029C                     	;# 
  3604  029D                     	;# 
  3605  030C                     	;# 
  3606  030C                     	;# 
  3607  030D                     	;# 
  3608  030E                     	;# 
  3609  030F                     	;# 
  3610  0310                     	;# 
  3611  0310                     	;# 
  3612  0311                     	;# 
  3613  0312                     	;# 
  3614  0313                     	;# 
  3615  0314                     	;# 
  3616  0314                     	;# 
  3617  0315                     	;# 
  3618  0316                     	;# 
  3619  0317                     	;# 
  3620  0318                     	;# 
  3621  0318                     	;# 
  3622  0319                     	;# 
  3623  031A                     	;# 
  3624  031B                     	;# 
  3625  031C                     	;# 
  3626  031C                     	;# 
  3627  031D                     	;# 
  3628  031E                     	;# 
  3629  031F                     	;# 
  3630  038C                     	;# 
  3631  038C                     	;# 
  3632  038D                     	;# 
  3633  038E                     	;# 
  3634  0390                     	;# 
  3635  0390                     	;# 
  3636  0391                     	;# 
  3637  0392                     	;# 
  3638  040C                     	;# 
  3639  040D                     	;# 
  3640  040E                     	;# 
  3641  040F                     	;# 
  3642  0410                     	;# 
  3643  0411                     	;# 
  3644  0416                     	;# 
  3645  0416                     	;# 
  3646  0417                     	;# 
  3647  0418                     	;# 
  3648  0418                     	;# 
  3649  0419                     	;# 
  3650  041A                     	;# 
  3651  041A                     	;# 
  3652  041B                     	;# 
  3653  041C                     	;# 
  3654  041C                     	;# 
  3655  041D                     	;# 
  3656  041E                     	;# 
  3657  041F                     	;# 
  3658  048C                     	;# 
  3659  048C                     	;# 
  3660  048D                     	;# 
  3661  048E                     	;# 
  3662  048F                     	;# 
  3663  048F                     	;# 
  3664  0490                     	;# 
  3665  0491                     	;# 
  3666  0492                     	;# 
  3667  0492                     	;# 
  3668  0493                     	;# 
  3669  0494                     	;# 
  3670  0495                     	;# 
  3671  0495                     	;# 
  3672  0496                     	;# 
  3673  0497                     	;# 
  3674  0498                     	;# 
  3675  0499                     	;# 
  3676  049A                     	;# 
  3677  049B                     	;# 
  3678  049C                     	;# 
  3679  049D                     	;# 
  3680  050C                     	;# 
  3681  050C                     	;# 
  3682  050D                     	;# 
  3683  050E                     	;# 
  3684  050F                     	;# 
  3685  050F                     	;# 
  3686  0510                     	;# 
  3687  0511                     	;# 
  3688  0512                     	;# 
  3689  0512                     	;# 
  3690  0513                     	;# 
  3691  0514                     	;# 
  3692  0515                     	;# 
  3693  0515                     	;# 
  3694  0516                     	;# 
  3695  0517                     	;# 
  3696  0518                     	;# 
  3697  0519                     	;# 
  3698  051A                     	;# 
  3699  051B                     	;# 
  3700  051C                     	;# 
  3701  051D                     	;# 
  3702  058C                     	;# 
  3703  058C                     	;# 
  3704  058D                     	;# 
  3705  058E                     	;# 
  3706  058F                     	;# 
  3707  058F                     	;# 
  3708  0590                     	;# 
  3709  0591                     	;# 
  3710  0592                     	;# 
  3711  0593                     	;# 
  3712  060C                     	;# 
  3713  060D                     	;# 
  3714  060E                     	;# 
  3715  060F                     	;# 
  3716  0610                     	;# 
  3717  0611                     	;# 
  3718  0612                     	;# 
  3719  0613                     	;# 
  3720  0614                     	;# 
  3721  0616                     	;# 
  3722  0617                     	;# 
  3723  0618                     	;# 
  3724  0619                     	;# 
  3725  061A                     	;# 
  3726  061B                     	;# 
  3727  061C                     	;# 
  3728  061D                     	;# 
  3729  061E                     	;# 
  3730  068C                     	;# 
  3731  068D                     	;# 
  3732  068E                     	;# 
  3733  068F                     	;# 
  3734  0690                     	;# 
  3735  0691                     	;# 
  3736  0692                     	;# 
  3737  0693                     	;# 
  3738  0694                     	;# 
  3739  070C                     	;# 
  3740  070D                     	;# 
  3741  070E                     	;# 
  3742  070F                     	;# 
  3743  0710                     	;# 
  3744  0711                     	;# 
  3745  0712                     	;# 
  3746  0713                     	;# 
  3747  0714                     	;# 
  3748  0716                     	;# 
  3749  0717                     	;# 
  3750  0718                     	;# 
  3751  0719                     	;# 
  3752  071A                     	;# 
  3753  071B                     	;# 
  3754  071C                     	;# 
  3755  071D                     	;# 
  3756  071E                     	;# 
  3757  0796                     	;# 
  3758  0797                     	;# 
  3759  0798                     	;# 
  3760  0799                     	;# 
  3761  079A                     	;# 
  3762  079B                     	;# 
  3763  080C                     	;# 
  3764  080D                     	;# 
  3765  080E                     	;# 
  3766  080F                     	;# 
  3767  0810                     	;# 
  3768  0811                     	;# 
  3769  0812                     	;# 
  3770  0813                     	;# 
  3771  0814                     	;# 
  3772  081A                     	;# 
  3773  081B                     	;# 
  3774  081C                     	;# 
  3775  081D                     	;# 
  3776  081E                     	;# 
  3777  081F                     	;# 
  3778  088C                     	;# 
  3779  088D                     	;# 
  3780  088E                     	;# 
  3781  088F                     	;# 
  3782  0890                     	;# 
  3783  0891                     	;# 
  3784  0892                     	;# 
  3785  0893                     	;# 
  3786  0895                     	;# 
  3787  0896                     	;# 
  3788  0897                     	;# 
  3789  0898                     	;# 
  3790  0899                     	;# 
  3791  089A                     	;# 
  3792  089B                     	;# 
  3793  090C                     	;# 
  3794  090E                     	;# 
  3795  090F                     	;# 
  3796  091F                     	;# 
  3797  091F                     	;# 
  3798  098F                     	;# 
  3799  098F                     	;# 
  3800  0990                     	;# 
  3801  0991                     	;# 
  3802  0992                     	;# 
  3803  0993                     	;# 
  3804  0994                     	;# 
  3805  0995                     	;# 
  3806  0996                     	;# 
  3807  0997                     	;# 
  3808  0E0F                     	;# 
  3809  0E10                     	;# 
  3810  0E11                     	;# 
  3811  0E12                     	;# 
  3812  0E13                     	;# 
  3813  0E14                     	;# 
  3814  0E15                     	;# 
  3815  0E16                     	;# 
  3816  0E17                     	;# 
  3817  0E18                     	;# 
  3818  0E19                     	;# 
  3819  0E1A                     	;# 
  3820  0E1B                     	;# 
  3821  0E1C                     	;# 
  3822  0E1D                     	;# 
  3823  0E1E                     	;# 
  3824  0E1F                     	;# 
  3825  0E20                     	;# 
  3826  0E21                     	;# 
  3827  0E22                     	;# 
  3828  0E23                     	;# 
  3829  0E24                     	;# 
  3830  0E25                     	;# 
  3831  0E26                     	;# 
  3832  0E27                     	;# 
  3833  0E28                     	;# 
  3834  0E29                     	;# 
  3835  0E2A                     	;# 
  3836  0E2B                     	;# 
  3837  0E2C                     	;# 
  3838  0E2D                     	;# 
  3839  0E2E                     	;# 
  3840  0E2F                     	;# 
  3841  0E30                     	;# 
  3842  0E31                     	;# 
  3843  0E32                     	;# 
  3844  0E33                     	;# 
  3845  0E34                     	;# 
  3846  0E35                     	;# 
  3847  0E36                     	;# 
  3848  0E37                     	;# 
  3849  0E8F                     	;# 
  3850  0E90                     	;# 
  3851  0E91                     	;# 
  3852  0E92                     	;# 
  3853  0E93                     	;# 
  3854  0E94                     	;# 
  3855  0E95                     	;# 
  3856  0E96                     	;# 
  3857  0E97                     	;# 
  3858  0E9C                     	;# 
  3859  0E9D                     	;# 
  3860  0E9E                     	;# 
  3861  0EA1                     	;# 
  3862  0EA2                     	;# 
  3863  0EA3                     	;# 
  3864  0EA4                     	;# 
  3865  0EA5                     	;# 
  3866  0EA9                     	;# 
  3867  0EAA                     	;# 
  3868  0EAB                     	;# 
  3869  0EAC                     	;# 
  3870  0EB1                     	;# 
  3871  0EB2                     	;# 
  3872  0EB3                     	;# 
  3873  0EB8                     	;# 
  3874  0EB9                     	;# 
  3875  0EBA                     	;# 
  3876  0EBB                     	;# 
  3877  0EBC                     	;# 
  3878  0EBD                     	;# 
  3879  0EBE                     	;# 
  3880  0EC3                     	;# 
  3881  0EC5                     	;# 
  3882  0EC6                     	;# 
  3883  0EC7                     	;# 
  3884  0EC8                     	;# 
  3885  0EC9                     	;# 
  3886  0ECA                     	;# 
  3887  0ECB                     	;# 
  3888  0ECC                     	;# 
  3889  0F10                     	;# 
  3890  0F11                     	;# 
  3891  0F12                     	;# 
  3892  0F13                     	;# 
  3893  0F14                     	;# 
  3894  0F15                     	;# 
  3895  0F16                     	;# 
  3896  0F17                     	;# 
  3897  0F18                     	;# 
  3898  0F19                     	;# 
  3899  0F1A                     	;# 
  3900  0F1B                     	;# 
  3901  0F1C                     	;# 
  3902  0F1D                     	;# 
  3903  0F1E                     	;# 
  3904  0F1F                     	;# 
  3905  0F20                     	;# 
  3906  0F21                     	;# 
  3907  0F22                     	;# 
  3908  0F23                     	;# 
  3909  0F24                     	;# 
  3910  0F25                     	;# 
  3911  0F26                     	;# 
  3912  0F27                     	;# 
  3913  0F28                     	;# 
  3914  0F29                     	;# 
  3915  0F2A                     	;# 
  3916  0F2B                     	;# 
  3917  0F2C                     	;# 
  3918  0F2D                     	;# 
  3919  0F2E                     	;# 
  3920  0F2F                     	;# 
  3921  0F30                     	;# 
  3922  0F31                     	;# 
  3923  0F32                     	;# 
  3924  0F38                     	;# 
  3925  0F39                     	;# 
  3926  0F3A                     	;# 
  3927  0F3B                     	;# 
  3928  0F3C                     	;# 
  3929  0F3D                     	;# 
  3930  0F3E                     	;# 
  3931  0F3F                     	;# 
  3932  0F40                     	;# 
  3933  0F41                     	;# 
  3934  0F43                     	;# 
  3935  0F44                     	;# 
  3936  0F45                     	;# 
  3937  0F46                     	;# 
  3938  0F47                     	;# 
  3939  0F48                     	;# 
  3940  0F49                     	;# 
  3941  0F4A                     	;# 
  3942  0F4B                     	;# 
  3943  0F4C                     	;# 
  3944  0F4E                     	;# 
  3945  0F4F                     	;# 
  3946  0F50                     	;# 
  3947  0F51                     	;# 
  3948  0F52                     	;# 
  3949  0F53                     	;# 
  3950  0F54                     	;# 
  3951  0F55                     	;# 
  3952  0F56                     	;# 
  3953  0F57                     	;# 
  3954  0F59                     	;# 
  3955  0F5A                     	;# 
  3956  0F5B                     	;# 
  3957  0F5C                     	;# 
  3958  0F5D                     	;# 
  3959  0F61                     	;# 
  3960  0F62                     	;# 
  3961  0F64                     	;# 
  3962  0F65                     	;# 
  3963  0F66                     	;# 
  3964  0F67                     	;# 
  3965  0F68                     	;# 
  3966  0F69                     	;# 
  3967  0F6A                     	;# 
  3968  0F6B                     	;# 
  3969  0F6C                     	;# 
  3970  0F6D                     	;# 
  3971  0FE4                     	;# 
  3972  0FE5                     	;# 
  3973  0FE6                     	;# 
  3974  0FE7                     	;# 
  3975  0FE8                     	;# 
  3976  0FE9                     	;# 
  3977  0FEA                     	;# 
  3978  0FEB                     	;# 
  3979  0FED                     	;# 
  3980  0FEE                     	;# 
  3981  0FEF                     	;# 
  3982  0000                     	;# 
  3983  0001                     	;# 
  3984  0002                     	;# 
  3985  0003                     	;# 
  3986  0004                     	;# 
  3987  0005                     	;# 
  3988  0006                     	;# 
  3989  0007                     	;# 
  3990  0008                     	;# 
  3991  0009                     	;# 
  3992  000A                     	;# 
  3993  000B                     	;# 
  3994  000C                     	;# 
  3995  000D                     	;# 
  3996  000E                     	;# 
  3997  000F                     	;# 
  3998  0010                     	;# 
  3999  0011                     	;# 
  4000  0012                     	;# 
  4001  0013                     	;# 
  4002  0014                     	;# 
  4003  0015                     	;# 
  4004  0016                     	;# 
  4005  0017                     	;# 
  4006  0018                     	;# 
  4007  0019                     	;# 
  4008  001A                     	;# 
  4009  001C                     	;# 
  4010  001C                     	;# 
  4011  001D                     	;# 
  4012  001D                     	;# 
  4013  001E                     	;# 
  4014  001F                     	;# 
  4015  008C                     	;# 
  4016  008C                     	;# 
  4017  008D                     	;# 
  4018  008E                     	;# 
  4019  008E                     	;# 
  4020  008F                     	;# 
  4021  0090                     	;# 
  4022  0090                     	;# 
  4023  0091                     	;# 
  4024  0093                     	;# 
  4025  0094                     	;# 
  4026  0095                     	;# 
  4027  0096                     	;# 
  4028  0097                     	;# 
  4029  0098                     	;# 
  4030  0099                     	;# 
  4031  009A                     	;# 
  4032  009B                     	;# 
  4033  009C                     	;# 
  4034  009D                     	;# 
  4035  009E                     	;# 
  4036  010C                     	;# 
  4037  010D                     	;# 
  4038  010E                     	;# 
  4039  010E                     	;# 
  4040  010F                     	;# 
  4041  0110                     	;# 
  4042  0110                     	;# 
  4043  0111                     	;# 
  4044  0112                     	;# 
  4045  0112                     	;# 
  4046  0113                     	;# 
  4047  0114                     	;# 
  4048  0114                     	;# 
  4049  0115                     	;# 
  4050  0116                     	;# 
  4051  0116                     	;# 
  4052  0117                     	;# 
  4053  0119                     	;# 
  4054  0119                     	;# 
  4055  0119                     	;# 
  4056  011A                     	;# 
  4057  011A                     	;# 
  4058  011A                     	;# 
  4059  011B                     	;# 
  4060  011B                     	;# 
  4061  011B                     	;# 
  4062  011B                     	;# 
  4063  011B                     	;# 
  4064  011C                     	;# 
  4065  011C                     	;# 
  4066  011C                     	;# 
  4067  011D                     	;# 
  4068  011D                     	;# 
  4069  011D                     	;# 
  4070  011E                     	;# 
  4071  011E                     	;# 
  4072  011E                     	;# 
  4073  011F                     	;# 
  4074  011F                     	;# 
  4075  011F                     	;# 
  4076  011F                     	;# 
  4077  011F                     	;# 
  4078  018C                     	;# 
  4079  018D                     	;# 
  4080  018E                     	;# 
  4081  018F                     	;# 
  4082  0190                     	;# 
  4083  0191                     	;# 
  4084  0192                     	;# 
  4085  0196                     	;# 
  4086  0197                     	;# 
  4087  0198                     	;# 
  4088  0199                     	;# 
  4089  019A                     	;# 
  4090  019B                     	;# 
  4091  019C                     	;# 
  4092  020C                     	;# 
  4093  020C                     	;# 
  4094  020D                     	;# 
  4095  020E                     	;# 
  4096  020F                     	;# 
  4097  020F                     	;# 
  4098  0210                     	;# 
  4099  0210                     	;# 
  4100  0211                     	;# 
  4101  0211                     	;# 
  4102  0212                     	;# 
  4103  0212                     	;# 
  4104  0213                     	;# 
  4105  0214                     	;# 
  4106  0215                     	;# 
  4107  0215                     	;# 
  4108  0216                     	;# 
  4109  0216                     	;# 
  4110  0217                     	;# 
  4111  0217                     	;# 
  4112  0218                     	;# 
  4113  0218                     	;# 
  4114  0219                     	;# 
  4115  021A                     	;# 
  4116  021B                     	;# 
  4117  021B                     	;# 
  4118  021C                     	;# 
  4119  021C                     	;# 
  4120  021D                     	;# 
  4121  021D                     	;# 
  4122  021E                     	;# 
  4123  021F                     	;# 
  4124  028C                     	;# 
  4125  028C                     	;# 
  4126  028D                     	;# 
  4127  028D                     	;# 
  4128  028E                     	;# 
  4129  028F                     	;# 
  4130  0290                     	;# 
  4131  0290                     	;# 
  4132  0291                     	;# 
  4133  0292                     	;# 
  4134  0292                     	;# 
  4135  0293                     	;# 
  4136  0293                     	;# 
  4137  0294                     	;# 
  4138  0295                     	;# 
  4139  0296                     	;# 
  4140  0296                     	;# 
  4141  0297                     	;# 
  4142  0298                     	;# 
  4143  0298                     	;# 
  4144  0299                     	;# 
  4145  0299                     	;# 
  4146  029A                     	;# 
  4147  029B                     	;# 
  4148  029C                     	;# 
  4149  029C                     	;# 
  4150  029D                     	;# 
  4151  030C                     	;# 
  4152  030C                     	;# 
  4153  030D                     	;# 
  4154  030E                     	;# 
  4155  030F                     	;# 
  4156  0310                     	;# 
  4157  0310                     	;# 
  4158  0311                     	;# 
  4159  0312                     	;# 
  4160  0313                     	;# 
  4161  0314                     	;# 
  4162  0314                     	;# 
  4163  0315                     	;# 
  4164  0316                     	;# 
  4165  0317                     	;# 
  4166  0318                     	;# 
  4167  0318                     	;# 
  4168  0319                     	;# 
  4169  031A                     	;# 
  4170  031B                     	;# 
  4171  031C                     	;# 
  4172  031C                     	;# 
  4173  031D                     	;# 
  4174  031E                     	;# 
  4175  031F                     	;# 
  4176  038C                     	;# 
  4177  038C                     	;# 
  4178  038D                     	;# 
  4179  038E                     	;# 
  4180  0390                     	;# 
  4181  0390                     	;# 
  4182  0391                     	;# 
  4183  0392                     	;# 
  4184  040C                     	;# 
  4185  040D                     	;# 
  4186  040E                     	;# 
  4187  040F                     	;# 
  4188  0410                     	;# 
  4189  0411                     	;# 
  4190  0416                     	;# 
  4191  0416                     	;# 
  4192  0417                     	;# 
  4193  0418                     	;# 
  4194  0418                     	;# 
  4195  0419                     	;# 
  4196  041A                     	;# 
  4197  041A                     	;# 
  4198  041B                     	;# 
  4199  041C                     	;# 
  4200  041C                     	;# 
  4201  041D                     	;# 
  4202  041E                     	;# 
  4203  041F                     	;# 
  4204  048C                     	;# 
  4205  048C                     	;# 
  4206  048D                     	;# 
  4207  048E                     	;# 
  4208  048F                     	;# 
  4209  048F                     	;# 
  4210  0490                     	;# 
  4211  0491                     	;# 
  4212  0492                     	;# 
  4213  0492                     	;# 
  4214  0493                     	;# 
  4215  0494                     	;# 
  4216  0495                     	;# 
  4217  0495                     	;# 
  4218  0496                     	;# 
  4219  0497                     	;# 
  4220  0498                     	;# 
  4221  0499                     	;# 
  4222  049A                     	;# 
  4223  049B                     	;# 
  4224  049C                     	;# 
  4225  049D                     	;# 
  4226  050C                     	;# 
  4227  050C                     	;# 
  4228  050D                     	;# 
  4229  050E                     	;# 
  4230  050F                     	;# 
  4231  050F                     	;# 
  4232  0510                     	;# 
  4233  0511                     	;# 
  4234  0512                     	;# 
  4235  0512                     	;# 
  4236  0513                     	;# 
  4237  0514                     	;# 
  4238  0515                     	;# 
  4239  0515                     	;# 
  4240  0516                     	;# 
  4241  0517                     	;# 
  4242  0518                     	;# 
  4243  0519                     	;# 
  4244  051A                     	;# 
  4245  051B                     	;# 
  4246  051C                     	;# 
  4247  051D                     	;# 
  4248  058C                     	;# 
  4249  058C                     	;# 
  4250  058D                     	;# 
  4251  058E                     	;# 
  4252  058F                     	;# 
  4253  058F                     	;# 
  4254  0590                     	;# 
  4255  0591                     	;# 
  4256  0592                     	;# 
  4257  0593                     	;# 
  4258  060C                     	;# 
  4259  060D                     	;# 
  4260  060E                     	;# 
  4261  060F                     	;# 
  4262  0610                     	;# 
  4263  0611                     	;# 
  4264  0612                     	;# 
  4265  0613                     	;# 
  4266  0614                     	;# 
  4267  0616                     	;# 
  4268  0617                     	;# 
  4269  0618                     	;# 
  4270  0619                     	;# 
  4271  061A                     	;# 
  4272  061B                     	;# 
  4273  061C                     	;# 
  4274  061D                     	;# 
  4275  061E                     	;# 
  4276  068C                     	;# 
  4277  068D                     	;# 
  4278  068E                     	;# 
  4279  068F                     	;# 
  4280  0690                     	;# 
  4281  0691                     	;# 
  4282  0692                     	;# 
  4283  0693                     	;# 
  4284  0694                     	;# 
  4285  070C                     	;# 
  4286  070D                     	;# 
  4287  070E                     	;# 
  4288  070F                     	;# 
  4289  0710                     	;# 
  4290  0711                     	;# 
  4291  0712                     	;# 
  4292  0713                     	;# 
  4293  0714                     	;# 
  4294  0716                     	;# 
  4295  0717                     	;# 
  4296  0718                     	;# 
  4297  0719                     	;# 
  4298  071A                     	;# 
  4299  071B                     	;# 
  4300  071C                     	;# 
  4301  071D                     	;# 
  4302  071E                     	;# 
  4303  0796                     	;# 
  4304  0797                     	;# 
  4305  0798                     	;# 
  4306  0799                     	;# 
  4307  079A                     	;# 
  4308  079B                     	;# 
  4309  080C                     	;# 
  4310  080D                     	;# 
  4311  080E                     	;# 
  4312  080F                     	;# 
  4313  0810                     	;# 
  4314  0811                     	;# 
  4315  0812                     	;# 
  4316  0813                     	;# 
  4317  0814                     	;# 
  4318  081A                     	;# 
  4319  081B                     	;# 
  4320  081C                     	;# 
  4321  081D                     	;# 
  4322  081E                     	;# 
  4323  081F                     	;# 
  4324  088C                     	;# 
  4325  088D                     	;# 
  4326  088E                     	;# 
  4327  088F                     	;# 
  4328  0890                     	;# 
  4329  0891                     	;# 
  4330  0892                     	;# 
  4331  0893                     	;# 
  4332  0895                     	;# 
  4333  0896                     	;# 
  4334  0897                     	;# 
  4335  0898                     	;# 
  4336  0899                     	;# 
  4337  089A                     	;# 
  4338  089B                     	;# 
  4339  090C                     	;# 
  4340  090E                     	;# 
  4341  090F                     	;# 
  4342  091F                     	;# 
  4343  091F                     	;# 
  4344  098F                     	;# 
  4345  098F                     	;# 
  4346  0990                     	;# 
  4347  0991                     	;# 
  4348  0992                     	;# 
  4349  0993                     	;# 
  4350  0994                     	;# 
  4351  0995                     	;# 
  4352  0996                     	;# 
  4353  0997                     	;# 
  4354  0E0F                     	;# 
  4355  0E10                     	;# 
  4356  0E11                     	;# 
  4357  0E12                     	;# 
  4358  0E13                     	;# 
  4359  0E14                     	;# 
  4360  0E15                     	;# 
  4361  0E16                     	;# 
  4362  0E17                     	;# 
  4363  0E18                     	;# 
  4364  0E19                     	;# 
  4365  0E1A                     	;# 
  4366  0E1B                     	;# 
  4367  0E1C                     	;# 
  4368  0E1D                     	;# 
  4369  0E1E                     	;# 
  4370  0E1F                     	;# 
  4371  0E20                     	;# 
  4372  0E21                     	;# 
  4373  0E22                     	;# 
  4374  0E23                     	;# 
  4375  0E24                     	;# 
  4376  0E25                     	;# 
  4377  0E26                     	;# 
  4378  0E27                     	;# 
  4379  0E28                     	;# 
  4380  0E29                     	;# 
  4381  0E2A                     	;# 
  4382  0E2B                     	;# 
  4383  0E2C                     	;# 
  4384  0E2D                     	;# 
  4385  0E2E                     	;# 
  4386  0E2F                     	;# 
  4387  0E30                     	;# 
  4388  0E31                     	;# 
  4389  0E32                     	;# 
  4390  0E33                     	;# 
  4391  0E34                     	;# 
  4392  0E35                     	;# 
  4393  0E36                     	;# 
  4394  0E37                     	;# 
  4395  0E8F                     	;# 
  4396  0E90                     	;# 
  4397  0E91                     	;# 
  4398  0E92                     	;# 
  4399  0E93                     	;# 
  4400  0E94                     	;# 
  4401  0E95                     	;# 
  4402  0E96                     	;# 
  4403  0E97                     	;# 
  4404  0E9C                     	;# 
  4405  0E9D                     	;# 
  4406  0E9E                     	;# 
  4407  0EA1                     	;# 
  4408  0EA2                     	;# 
  4409  0EA3                     	;# 
  4410  0EA4                     	;# 
  4411  0EA5                     	;# 
  4412  0EA9                     	;# 
  4413  0EAA                     	;# 
  4414  0EAB                     	;# 
  4415  0EAC                     	;# 
  4416  0EB1                     	;# 
  4417  0EB2                     	;# 
  4418  0EB3                     	;# 
  4419  0EB8                     	;# 
  4420  0EB9                     	;# 
  4421  0EBA                     	;# 
  4422  0EBB                     	;# 
  4423  0EBC                     	;# 
  4424  0EBD                     	;# 
  4425  0EBE                     	;# 
  4426  0EC3                     	;# 
  4427  0EC5                     	;# 
  4428  0EC6                     	;# 
  4429  0EC7                     	;# 
  4430  0EC8                     	;# 
  4431  0EC9                     	;# 
  4432  0ECA                     	;# 
  4433  0ECB                     	;# 
  4434  0ECC                     	;# 
  4435  0F10                     	;# 
  4436  0F11                     	;# 
  4437  0F12                     	;# 
  4438  0F13                     	;# 
  4439  0F14                     	;# 
  4440  0F15                     	;# 
  4441  0F16                     	;# 
  4442  0F17                     	;# 
  4443  0F18                     	;# 
  4444  0F19                     	;# 
  4445  0F1A                     	;# 
  4446  0F1B                     	;# 
  4447  0F1C                     	;# 
  4448  0F1D                     	;# 
  4449  0F1E                     	;# 
  4450  0F1F                     	;# 
  4451  0F20                     	;# 
  4452  0F21                     	;# 
  4453  0F22                     	;# 
  4454  0F23                     	;# 
  4455  0F24                     	;# 
  4456  0F25                     	;# 
  4457  0F26                     	;# 
  4458  0F27                     	;# 
  4459  0F28                     	;# 
  4460  0F29                     	;# 
  4461  0F2A                     	;# 
  4462  0F2B                     	;# 
  4463  0F2C                     	;# 
  4464  0F2D                     	;# 
  4465  0F2E                     	;# 
  4466  0F2F                     	;# 
  4467  0F30                     	;# 
  4468  0F31                     	;# 
  4469  0F32                     	;# 
  4470  0F38                     	;# 
  4471  0F39                     	;# 
  4472  0F3A                     	;# 
  4473  0F3B                     	;# 
  4474  0F3C                     	;# 
  4475  0F3D                     	;# 
  4476  0F3E                     	;# 
  4477  0F3F                     	;# 
  4478  0F40                     	;# 
  4479  0F41                     	;# 
  4480  0F43                     	;# 
  4481  0F44                     	;# 
  4482  0F45                     	;# 
  4483  0F46                     	;# 
  4484  0F47                     	;# 
  4485  0F48                     	;# 
  4486  0F49                     	;# 
  4487  0F4A                     	;# 
  4488  0F4B                     	;# 
  4489  0F4C                     	;# 
  4490  0F4E                     	;# 
  4491  0F4F                     	;# 
  4492  0F50                     	;# 
  4493  0F51                     	;# 
  4494  0F52                     	;# 
  4495  0F53                     	;# 
  4496  0F54                     	;# 
  4497  0F55                     	;# 
  4498  0F56                     	;# 
  4499  0F57                     	;# 
  4500  0F59                     	;# 
  4501  0F5A                     	;# 
  4502  0F5B                     	;# 
  4503  0F5C                     	;# 
  4504  0F5D                     	;# 
  4505  0F61                     	;# 
  4506  0F62                     	;# 
  4507  0F64                     	;# 
  4508  0F65                     	;# 
  4509  0F66                     	;# 
  4510  0F67                     	;# 
  4511  0F68                     	;# 
  4512  0F69                     	;# 
  4513  0F6A                     	;# 
  4514  0F6B                     	;# 
  4515  0F6C                     	;# 
  4516  0F6D                     	;# 
  4517  0FE4                     	;# 
  4518  0FE5                     	;# 
  4519  0FE6                     	;# 
  4520  0FE7                     	;# 
  4521  0FE8                     	;# 
  4522  0FE9                     	;# 
  4523  0FEA                     	;# 
  4524  0FEB                     	;# 
  4525  0FED                     	;# 
  4526  0FEE                     	;# 
  4527  0FEF                     	;# 
  4528  0000                     	;# 
  4529  0001                     	;# 
  4530  0002                     	;# 
  4531  0003                     	;# 
  4532  0004                     	;# 
  4533  0005                     	;# 
  4534  0006                     	;# 
  4535  0007                     	;# 
  4536  0008                     	;# 
  4537  0009                     	;# 
  4538  000A                     	;# 
  4539  000B                     	;# 
  4540  000C                     	;# 
  4541  000D                     	;# 
  4542  000E                     	;# 
  4543  000F                     	;# 
  4544  0010                     	;# 
  4545  0011                     	;# 
  4546  0012                     	;# 
  4547  0013                     	;# 
  4548  0014                     	;# 
  4549  0015                     	;# 
  4550  0016                     	;# 
  4551  0017                     	;# 
  4552  0018                     	;# 
  4553  0019                     	;# 
  4554  001A                     	;# 
  4555  001C                     	;# 
  4556  001C                     	;# 
  4557  001D                     	;# 
  4558  001D                     	;# 
  4559  001E                     	;# 
  4560  001F                     	;# 
  4561  008C                     	;# 
  4562  008C                     	;# 
  4563  008D                     	;# 
  4564  008E                     	;# 
  4565  008E                     	;# 
  4566  008F                     	;# 
  4567  0090                     	;# 
  4568  0090                     	;# 
  4569  0091                     	;# 
  4570  0093                     	;# 
  4571  0094                     	;# 
  4572  0095                     	;# 
  4573  0096                     	;# 
  4574  0097                     	;# 
  4575  0098                     	;# 
  4576  0099                     	;# 
  4577  009A                     	;# 
  4578  009B                     	;# 
  4579  009C                     	;# 
  4580  009D                     	;# 
  4581  009E                     	;# 
  4582  010C                     	;# 
  4583  010D                     	;# 
  4584  010E                     	;# 
  4585  010E                     	;# 
  4586  010F                     	;# 
  4587  0110                     	;# 
  4588  0110                     	;# 
  4589  0111                     	;# 
  4590  0112                     	;# 
  4591  0112                     	;# 
  4592  0113                     	;# 
  4593  0114                     	;# 
  4594  0114                     	;# 
  4595  0115                     	;# 
  4596  0116                     	;# 
  4597  0116                     	;# 
  4598  0117                     	;# 
  4599  0119                     	;# 
  4600  0119                     	;# 
  4601  0119                     	;# 
  4602  011A                     	;# 
  4603  011A                     	;# 
  4604  011A                     	;# 
  4605  011B                     	;# 
  4606  011B                     	;# 
  4607  011B                     	;# 
  4608  011B                     	;# 
  4609  011B                     	;# 
  4610  011C                     	;# 
  4611  011C                     	;# 
  4612  011C                     	;# 
  4613  011D                     	;# 
  4614  011D                     	;# 
  4615  011D                     	;# 
  4616  011E                     	;# 
  4617  011E                     	;# 
  4618  011E                     	;# 
  4619  011F                     	;# 
  4620  011F                     	;# 
  4621  011F                     	;# 
  4622  011F                     	;# 
  4623  011F                     	;# 
  4624  018C                     	;# 
  4625  018D                     	;# 
  4626  018E                     	;# 
  4627  018F                     	;# 
  4628  0190                     	;# 
  4629  0191                     	;# 
  4630  0192                     	;# 
  4631  0196                     	;# 
  4632  0197                     	;# 
  4633  0198                     	;# 
  4634  0199                     	;# 
  4635  019A                     	;# 
  4636  019B                     	;# 
  4637  019C                     	;# 
  4638  020C                     	;# 
  4639  020C                     	;# 
  4640  020D                     	;# 
  4641  020E                     	;# 
  4642  020F                     	;# 
  4643  020F                     	;# 
  4644  0210                     	;# 
  4645  0210                     	;# 
  4646  0211                     	;# 
  4647  0211                     	;# 
  4648  0212                     	;# 
  4649  0212                     	;# 
  4650  0213                     	;# 
  4651  0214                     	;# 
  4652  0215                     	;# 
  4653  0215                     	;# 
  4654  0216                     	;# 
  4655  0216                     	;# 
  4656  0217                     	;# 
  4657  0217                     	;# 
  4658  0218                     	;# 
  4659  0218                     	;# 
  4660  0219                     	;# 
  4661  021A                     	;# 
  4662  021B                     	;# 
  4663  021B                     	;# 
  4664  021C                     	;# 
  4665  021C                     	;# 
  4666  021D                     	;# 
  4667  021D                     	;# 
  4668  021E                     	;# 
  4669  021F                     	;# 
  4670  028C                     	;# 
  4671  028C                     	;# 
  4672  028D                     	;# 
  4673  028D                     	;# 
  4674  028E                     	;# 
  4675  028F                     	;# 
  4676  0290                     	;# 
  4677  0290                     	;# 
  4678  0291                     	;# 
  4679  0292                     	;# 
  4680  0292                     	;# 
  4681  0293                     	;# 
  4682  0293                     	;# 
  4683  0294                     	;# 
  4684  0295                     	;# 
  4685  0296                     	;# 
  4686  0296                     	;# 
  4687  0297                     	;# 
  4688  0298                     	;# 
  4689  0298                     	;# 
  4690  0299                     	;# 
  4691  0299                     	;# 
  4692  029A                     	;# 
  4693  029B                     	;# 
  4694  029C                     	;# 
  4695  029C                     	;# 
  4696  029D                     	;# 
  4697  030C                     	;# 
  4698  030C                     	;# 
  4699  030D                     	;# 
  4700  030E                     	;# 
  4701  030F                     	;# 
  4702  0310                     	;# 
  4703  0310                     	;# 
  4704  0311                     	;# 
  4705  0312                     	;# 
  4706  0313                     	;# 
  4707  0314                     	;# 
  4708  0314                     	;# 
  4709  0315                     	;# 
  4710  0316                     	;# 
  4711  0317                     	;# 
  4712  0318                     	;# 
  4713  0318                     	;# 
  4714  0319                     	;# 
  4715  031A                     	;# 
  4716  031B                     	;# 
  4717  031C                     	;# 
  4718  031C                     	;# 
  4719  031D                     	;# 
  4720  031E                     	;# 
  4721  031F                     	;# 
  4722  038C                     	;# 
  4723  038C                     	;# 
  4724  038D                     	;# 
  4725  038E                     	;# 
  4726  0390                     	;# 
  4727  0390                     	;# 
  4728  0391                     	;# 
  4729  0392                     	;# 
  4730  040C                     	;# 
  4731  040D                     	;# 
  4732  040E                     	;# 
  4733  040F                     	;# 
  4734  0410                     	;# 
  4735  0411                     	;# 
  4736  0416                     	;# 
  4737  0416                     	;# 
  4738  0417                     	;# 
  4739  0418                     	;# 
  4740  0418                     	;# 
  4741  0419                     	;# 
  4742  041A                     	;# 
  4743  041A                     	;# 
  4744  041B                     	;# 
  4745  041C                     	;# 
  4746  041C                     	;# 
  4747  041D                     	;# 
  4748  041E                     	;# 
  4749  041F                     	;# 
  4750  048C                     	;# 
  4751  048C                     	;# 
  4752  048D                     	;# 
  4753  048E                     	;# 
  4754  048F                     	;# 
  4755  048F                     	;# 
  4756  0490                     	;# 
  4757  0491                     	;# 
  4758  0492                     	;# 
  4759  0492                     	;# 
  4760  0493                     	;# 
  4761  0494                     	;# 
  4762  0495                     	;# 
  4763  0495                     	;# 
  4764  0496                     	;# 
  4765  0497                     	;# 
  4766  0498                     	;# 
  4767  0499                     	;# 
  4768  049A                     	;# 
  4769  049B                     	;# 
  4770  049C                     	;# 
  4771  049D                     	;# 
  4772  050C                     	;# 
  4773  050C                     	;# 
  4774  050D                     	;# 
  4775  050E                     	;# 
  4776  050F                     	;# 
  4777  050F                     	;# 
  4778  0510                     	;# 
  4779  0511                     	;# 
  4780  0512                     	;# 
  4781  0512                     	;# 
  4782  0513                     	;# 
  4783  0514                     	;# 
  4784  0515                     	;# 
  4785  0515                     	;# 
  4786  0516                     	;# 
  4787  0517                     	;# 
  4788  0518                     	;# 
  4789  0519                     	;# 
  4790  051A                     	;# 
  4791  051B                     	;# 
  4792  051C                     	;# 
  4793  051D                     	;# 
  4794  058C                     	;# 
  4795  058C                     	;# 
  4796  058D                     	;# 
  4797  058E                     	;# 
  4798  058F                     	;# 
  4799  058F                     	;# 
  4800  0590                     	;# 
  4801  0591                     	;# 
  4802  0592                     	;# 
  4803  0593                     	;# 
  4804  060C                     	;# 
  4805  060D                     	;# 
  4806  060E                     	;# 
  4807  060F                     	;# 
  4808  0610                     	;# 
  4809  0611                     	;# 
  4810  0612                     	;# 
  4811  0613                     	;# 
  4812  0614                     	;# 
  4813  0616                     	;# 
  4814  0617                     	;# 
  4815  0618                     	;# 
  4816  0619                     	;# 
  4817  061A                     	;# 
  4818  061B                     	;# 
  4819  061C                     	;# 
  4820  061D                     	;# 
  4821  061E                     	;# 
  4822  068C                     	;# 
  4823  068D                     	;# 
  4824  068E                     	;# 
  4825  068F                     	;# 
  4826  0690                     	;# 
  4827  0691                     	;# 
  4828  0692                     	;# 
  4829  0693                     	;# 
  4830  0694                     	;# 
  4831  070C                     	;# 
  4832  070D                     	;# 
  4833  070E                     	;# 
  4834  070F                     	;# 
  4835  0710                     	;# 
  4836  0711                     	;# 
  4837  0712                     	;# 
  4838  0713                     	;# 
  4839  0714                     	;# 
  4840  0716                     	;# 
  4841  0717                     	;# 
  4842  0718                     	;# 
  4843  0719                     	;# 
  4844  071A                     	;# 
  4845  071B                     	;# 
  4846  071C                     	;# 
  4847  071D                     	;# 
  4848  071E                     	;# 
  4849  0796                     	;# 
  4850  0797                     	;# 
  4851  0798                     	;# 
  4852  0799                     	;# 
  4853  079A                     	;# 
  4854  079B                     	;# 
  4855  080C                     	;# 
  4856  080D                     	;# 
  4857  080E                     	;# 
  4858  080F                     	;# 
  4859  0810                     	;# 
  4860  0811                     	;# 
  4861  0812                     	;# 
  4862  0813                     	;# 
  4863  0814                     	;# 
  4864  081A                     	;# 
  4865  081B                     	;# 
  4866  081C                     	;# 
  4867  081D                     	;# 
  4868  081E                     	;# 
  4869  081F                     	;# 
  4870  088C                     	;# 
  4871  088D                     	;# 
  4872  088E                     	;# 
  4873  088F                     	;# 
  4874  0890                     	;# 
  4875  0891                     	;# 
  4876  0892                     	;# 
  4877  0893                     	;# 
  4878  0895                     	;# 
  4879  0896                     	;# 
  4880  0897                     	;# 
  4881  0898                     	;# 
  4882  0899                     	;# 
  4883  089A                     	;# 
  4884  089B                     	;# 
  4885  090C                     	;# 
  4886  090E                     	;# 
  4887  090F                     	;# 
  4888  091F                     	;# 
  4889  091F                     	;# 
  4890  098F                     	;# 
  4891  098F                     	;# 
  4892  0990                     	;# 
  4893  0991                     	;# 
  4894  0992                     	;# 
  4895  0993                     	;# 
  4896  0994                     	;# 
  4897  0995                     	;# 
  4898  0996                     	;# 
  4899  0997                     	;# 
  4900  0E0F                     	;# 
  4901  0E10                     	;# 
  4902  0E11                     	;# 
  4903  0E12                     	;# 
  4904  0E13                     	;# 
  4905  0E14                     	;# 
  4906  0E15                     	;# 
  4907  0E16                     	;# 
  4908  0E17                     	;# 
  4909  0E18                     	;# 
  4910  0E19                     	;# 
  4911  0E1A                     	;# 
  4912  0E1B                     	;# 
  4913  0E1C                     	;# 
  4914  0E1D                     	;# 
  4915  0E1E                     	;# 
  4916  0E1F                     	;# 
  4917  0E20                     	;# 
  4918  0E21                     	;# 
  4919  0E22                     	;# 
  4920  0E23                     	;# 
  4921  0E24                     	;# 
  4922  0E25                     	;# 
  4923  0E26                     	;# 
  4924  0E27                     	;# 
  4925  0E28                     	;# 
  4926  0E29                     	;# 
  4927  0E2A                     	;# 
  4928  0E2B                     	;# 
  4929  0E2C                     	;# 
  4930  0E2D                     	;# 
  4931  0E2E                     	;# 
  4932  0E2F                     	;# 
  4933  0E30                     	;# 
  4934  0E31                     	;# 
  4935  0E32                     	;# 
  4936  0E33                     	;# 
  4937  0E34                     	;# 
  4938  0E35                     	;# 
  4939  0E36                     	;# 
  4940  0E37                     	;# 
  4941  0E8F                     	;# 
  4942  0E90                     	;# 
  4943  0E91                     	;# 
  4944  0E92                     	;# 
  4945  0E93                     	;# 
  4946  0E94                     	;# 
  4947  0E95                     	;# 
  4948  0E96                     	;# 
  4949  0E97                     	;# 
  4950  0E9C                     	;# 
  4951  0E9D                     	;# 
  4952  0E9E                     	;# 
  4953  0EA1                     	;# 
  4954  0EA2                     	;# 
  4955  0EA3                     	;# 
  4956  0EA4                     	;# 
  4957  0EA5                     	;# 
  4958  0EA9                     	;# 
  4959  0EAA                     	;# 
  4960  0EAB                     	;# 
  4961  0EAC                     	;# 
  4962  0EB1                     	;# 
  4963  0EB2                     	;# 
  4964  0EB3                     	;# 
  4965  0EB8                     	;# 
  4966  0EB9                     	;# 
  4967  0EBA                     	;# 
  4968  0EBB                     	;# 
  4969  0EBC                     	;# 
  4970  0EBD                     	;# 
  4971  0EBE                     	;# 
  4972  0EC3                     	;# 
  4973  0EC5                     	;# 
  4974  0EC6                     	;# 
  4975  0EC7                     	;# 
  4976  0EC8                     	;# 
  4977  0EC9                     	;# 
  4978  0ECA                     	;# 
  4979  0ECB                     	;# 
  4980  0ECC                     	;# 
  4981  0F10                     	;# 
  4982  0F11                     	;# 
  4983  0F12                     	;# 
  4984  0F13                     	;# 
  4985  0F14                     	;# 
  4986  0F15                     	;# 
  4987  0F16                     	;# 
  4988  0F17                     	;# 
  4989  0F18                     	;# 
  4990  0F19                     	;# 
  4991  0F1A                     	;# 
  4992  0F1B                     	;# 
  4993  0F1C                     	;# 
  4994  0F1D                     	;# 
  4995  0F1E                     	;# 
  4996  0F1F                     	;# 
  4997  0F20                     	;# 
  4998  0F21                     	;# 
  4999  0F22                     	;# 
  5000  0F23                     	;# 
  5001  0F24                     	;# 
  5002  0F25                     	;# 
  5003  0F26                     	;# 
  5004  0F27                     	;# 
  5005  0F28                     	;# 
  5006  0F29                     	;# 
  5007  0F2A                     	;# 
  5008  0F2B                     	;# 
  5009  0F2C                     	;# 
  5010  0F2D                     	;# 
  5011  0F2E                     	;# 
  5012  0F2F                     	;# 
  5013  0F30                     	;# 
  5014  0F31                     	;# 
  5015  0F32                     	;# 
  5016  0F38                     	;# 
  5017  0F39                     	;# 
  5018  0F3A                     	;# 
  5019  0F3B                     	;# 
  5020  0F3C                     	;# 
  5021  0F3D                     	;# 
  5022  0F3E                     	;# 
  5023  0F3F                     	;# 
  5024  0F40                     	;# 
  5025  0F41                     	;# 
  5026  0F43                     	;# 
  5027  0F44                     	;# 
  5028  0F45                     	;# 
  5029  0F46                     	;# 
  5030  0F47                     	;# 
  5031  0F48                     	;# 
  5032  0F49                     	;# 
  5033  0F4A                     	;# 
  5034  0F4B                     	;# 
  5035  0F4C                     	;# 
  5036  0F4E                     	;# 
  5037  0F4F                     	;# 
  5038  0F50                     	;# 
  5039  0F51                     	;# 
  5040  0F52                     	;# 
  5041  0F53                     	;# 
  5042  0F54                     	;# 
  5043  0F55                     	;# 
  5044  0F56                     	;# 
  5045  0F57                     	;# 
  5046  0F59                     	;# 
  5047  0F5A                     	;# 
  5048  0F5B                     	;# 
  5049  0F5C                     	;# 
  5050  0F5D                     	;# 
  5051  0F61                     	;# 
  5052  0F62                     	;# 
  5053  0F64                     	;# 
  5054  0F65                     	;# 
  5055  0F66                     	;# 
  5056  0F67                     	;# 
  5057  0F68                     	;# 
  5058  0F69                     	;# 
  5059  0F6A                     	;# 
  5060  0F6B                     	;# 
  5061  0F6C                     	;# 
  5062  0F6D                     	;# 
  5063  0FE4                     	;# 
  5064  0FE5                     	;# 
  5065  0FE6                     	;# 
  5066  0FE7                     	;# 
  5067  0FE8                     	;# 
  5068  0FE9                     	;# 
  5069  0FEA                     	;# 
  5070  0FEB                     	;# 
  5071  0FED                     	;# 
  5072  0FEE                     	;# 
  5073  0FEF                     	;# 
  5074  0000                     	;# 
  5075  0001                     	;# 
  5076  0002                     	;# 
  5077  0003                     	;# 
  5078  0004                     	;# 
  5079  0005                     	;# 
  5080  0006                     	;# 
  5081  0007                     	;# 
  5082  0008                     	;# 
  5083  0009                     	;# 
  5084  000A                     	;# 
  5085  000B                     	;# 
  5086  000C                     	;# 
  5087  000D                     	;# 
  5088  000E                     	;# 
  5089  000F                     	;# 
  5090  0010                     	;# 
  5091  0011                     	;# 
  5092  0012                     	;# 
  5093  0013                     	;# 
  5094  0014                     	;# 
  5095  0015                     	;# 
  5096  0016                     	;# 
  5097  0017                     	;# 
  5098  0018                     	;# 
  5099  0019                     	;# 
  5100  001A                     	;# 
  5101  001C                     	;# 
  5102  001C                     	;# 
  5103  001D                     	;# 
  5104  001D                     	;# 
  5105  001E                     	;# 
  5106  001F                     	;# 
  5107  008C                     	;# 
  5108  008C                     	;# 
  5109  008D                     	;# 
  5110  008E                     	;# 
  5111  008E                     	;# 
  5112  008F                     	;# 
  5113  0090                     	;# 
  5114  0090                     	;# 
  5115  0091                     	;# 
  5116  0093                     	;# 
  5117  0094                     	;# 
  5118  0095                     	;# 
  5119  0096                     	;# 
  5120  0097                     	;# 
  5121  0098                     	;# 
  5122  0099                     	;# 
  5123  009A                     	;# 
  5124  009B                     	;# 
  5125  009C                     	;# 
  5126  009D                     	;# 
  5127  009E                     	;# 
  5128  010C                     	;# 
  5129  010D                     	;# 
  5130  010E                     	;# 
  5131  010E                     	;# 
  5132  010F                     	;# 
  5133  0110                     	;# 
  5134  0110                     	;# 
  5135  0111                     	;# 
  5136  0112                     	;# 
  5137  0112                     	;# 
  5138  0113                     	;# 
  5139  0114                     	;# 
  5140  0114                     	;# 
  5141  0115                     	;# 
  5142  0116                     	;# 
  5143  0116                     	;# 
  5144  0117                     	;# 
  5145  0119                     	;# 
  5146  0119                     	;# 
  5147  0119                     	;# 
  5148  011A                     	;# 
  5149  011A                     	;# 
  5150  011A                     	;# 
  5151  011B                     	;# 
  5152  011B                     	;# 
  5153  011B                     	;# 
  5154  011B                     	;# 
  5155  011B                     	;# 
  5156  011C                     	;# 
  5157  011C                     	;# 
  5158  011C                     	;# 
  5159  011D                     	;# 
  5160  011D                     	;# 
  5161  011D                     	;# 
  5162  011E                     	;# 
  5163  011E                     	;# 
  5164  011E                     	;# 
  5165  011F                     	;# 
  5166  011F                     	;# 
  5167  011F                     	;# 
  5168  011F                     	;# 
  5169  011F                     	;# 
  5170  018C                     	;# 
  5171  018D                     	;# 
  5172  018E                     	;# 
  5173  018F                     	;# 
  5174  0190                     	;# 
  5175  0191                     	;# 
  5176  0192                     	;# 
  5177  0196                     	;# 
  5178  0197                     	;# 
  5179  0198                     	;# 
  5180  0199                     	;# 
  5181  019A                     	;# 
  5182  019B                     	;# 
  5183  019C                     	;# 
  5184  020C                     	;# 
  5185  020C                     	;# 
  5186  020D                     	;# 
  5187  020E                     	;# 
  5188  020F                     	;# 
  5189  020F                     	;# 
  5190  0210                     	;# 
  5191  0210                     	;# 
  5192  0211                     	;# 
  5193  0211                     	;# 
  5194  0212                     	;# 
  5195  0212                     	;# 
  5196  0213                     	;# 
  5197  0214                     	;# 
  5198  0215                     	;# 
  5199  0215                     	;# 
  5200  0216                     	;# 
  5201  0216                     	;# 
  5202  0217                     	;# 
  5203  0217                     	;# 
  5204  0218                     	;# 
  5205  0218                     	;# 
  5206  0219                     	;# 
  5207  021A                     	;# 
  5208  021B                     	;# 
  5209  021B                     	;# 
  5210  021C                     	;# 
  5211  021C                     	;# 
  5212  021D                     	;# 
  5213  021D                     	;# 
  5214  021E                     	;# 
  5215  021F                     	;# 
  5216  028C                     	;# 
  5217  028C                     	;# 
  5218  028D                     	;# 
  5219  028D                     	;# 
  5220  028E                     	;# 
  5221  028F                     	;# 
  5222  0290                     	;# 
  5223  0290                     	;# 
  5224  0291                     	;# 
  5225  0292                     	;# 
  5226  0292                     	;# 
  5227  0293                     	;# 
  5228  0293                     	;# 
  5229  0294                     	;# 
  5230  0295                     	;# 
  5231  0296                     	;# 
  5232  0296                     	;# 
  5233  0297                     	;# 
  5234  0298                     	;# 
  5235  0298                     	;# 
  5236  0299                     	;# 
  5237  0299                     	;# 
  5238  029A                     	;# 
  5239  029B                     	;# 
  5240  029C                     	;# 
  5241  029C                     	;# 
  5242  029D                     	;# 
  5243  030C                     	;# 
  5244  030C                     	;# 
  5245  030D                     	;# 
  5246  030E                     	;# 
  5247  030F                     	;# 
  5248  0310                     	;# 
  5249  0310                     	;# 
  5250  0311                     	;# 
  5251  0312                     	;# 
  5252  0313                     	;# 
  5253  0314                     	;# 
  5254  0314                     	;# 
  5255  0315                     	;# 
  5256  0316                     	;# 
  5257  0317                     	;# 
  5258  0318                     	;# 
  5259  0318                     	;# 
  5260  0319                     	;# 
  5261  031A                     	;# 
  5262  031B                     	;# 
  5263  031C                     	;# 
  5264  031C                     	;# 
  5265  031D                     	;# 
  5266  031E                     	;# 
  5267  031F                     	;# 
  5268  038C                     	;# 
  5269  038C                     	;# 
  5270  038D                     	;# 
  5271  038E                     	;# 
  5272  0390                     	;# 
  5273  0390                     	;# 
  5274  0391                     	;# 
  5275  0392                     	;# 
  5276  040C                     	;# 
  5277  040D                     	;# 
  5278  040E                     	;# 
  5279  040F                     	;# 
  5280  0410                     	;# 
  5281  0411                     	;# 
  5282  0416                     	;# 
  5283  0416                     	;# 
  5284  0417                     	;# 
  5285  0418                     	;# 
  5286  0418                     	;# 
  5287  0419                     	;# 
  5288  041A                     	;# 
  5289  041A                     	;# 
  5290  041B                     	;# 
  5291  041C                     	;# 
  5292  041C                     	;# 
  5293  041D                     	;# 
  5294  041E                     	;# 
  5295  041F                     	;# 
  5296  048C                     	;# 
  5297  048C                     	;# 
  5298  048D                     	;# 
  5299  048E                     	;# 
  5300  048F                     	;# 
  5301  048F                     	;# 
  5302  0490                     	;# 
  5303  0491                     	;# 
  5304  0492                     	;# 
  5305  0492                     	;# 
  5306  0493                     	;# 
  5307  0494                     	;# 
  5308  0495                     	;# 
  5309  0495                     	;# 
  5310  0496                     	;# 
  5311  0497                     	;# 
  5312  0498                     	;# 
  5313  0499                     	;# 
  5314  049A                     	;# 
  5315  049B                     	;# 
  5316  049C                     	;# 
  5317  049D                     	;# 
  5318  050C                     	;# 
  5319  050C                     	;# 
  5320  050D                     	;# 
  5321  050E                     	;# 
  5322  050F                     	;# 
  5323  050F                     	;# 
  5324  0510                     	;# 
  5325  0511                     	;# 
  5326  0512                     	;# 
  5327  0512                     	;# 
  5328  0513                     	;# 
  5329  0514                     	;# 
  5330  0515                     	;# 
  5331  0515                     	;# 
  5332  0516                     	;# 
  5333  0517                     	;# 
  5334  0518                     	;# 
  5335  0519                     	;# 
  5336  051A                     	;# 
  5337  051B                     	;# 
  5338  051C                     	;# 
  5339  051D                     	;# 
  5340  058C                     	;# 
  5341  058C                     	;# 
  5342  058D                     	;# 
  5343  058E                     	;# 
  5344  058F                     	;# 
  5345  058F                     	;# 
  5346  0590                     	;# 
  5347  0591                     	;# 
  5348  0592                     	;# 
  5349  0593                     	;# 
  5350  060C                     	;# 
  5351  060D                     	;# 
  5352  060E                     	;# 
  5353  060F                     	;# 
  5354  0610                     	;# 
  5355  0611                     	;# 
  5356  0612                     	;# 
  5357  0613                     	;# 
  5358  0614                     	;# 
  5359  0616                     	;# 
  5360  0617                     	;# 
  5361  0618                     	;# 
  5362  0619                     	;# 
  5363  061A                     	;# 
  5364  061B                     	;# 
  5365  061C                     	;# 
  5366  061D                     	;# 
  5367  061E                     	;# 
  5368  068C                     	;# 
  5369  068D                     	;# 
  5370  068E                     	;# 
  5371  068F                     	;# 
  5372  0690                     	;# 
  5373  0691                     	;# 
  5374  0692                     	;# 
  5375  0693                     	;# 
  5376  0694                     	;# 
  5377  070C                     	;# 
  5378  070D                     	;# 
  5379  070E                     	;# 
  5380  070F                     	;# 
  5381  0710                     	;# 
  5382  0711                     	;# 
  5383  0712                     	;# 
  5384  0713                     	;# 
  5385  0714                     	;# 
  5386  0716                     	;# 
  5387  0717                     	;# 
  5388  0718                     	;# 
  5389  0719                     	;# 
  5390  071A                     	;# 
  5391  071B                     	;# 
  5392  071C                     	;# 
  5393  071D                     	;# 
  5394  071E                     	;# 
  5395  0796                     	;# 
  5396  0797                     	;# 
  5397  0798                     	;# 
  5398  0799                     	;# 
  5399  079A                     	;# 
  5400  079B                     	;# 
  5401  080C                     	;# 
  5402  080D                     	;# 
  5403  080E                     	;# 
  5404  080F                     	;# 
  5405  0810                     	;# 
  5406  0811                     	;# 
  5407  0812                     	;# 
  5408  0813                     	;# 
  5409  0814                     	;# 
  5410  081A                     	;# 
  5411  081B                     	;# 
  5412  081C                     	;# 
  5413  081D                     	;# 
  5414  081E                     	;# 
  5415  081F                     	;# 
  5416  088C                     	;# 
  5417  088D                     	;# 
  5418  088E                     	;# 
  5419  088F                     	;# 
  5420  0890                     	;# 
  5421  0891                     	;# 
  5422  0892                     	;# 
  5423  0893                     	;# 
  5424  0895                     	;# 
  5425  0896                     	;# 
  5426  0897                     	;# 
  5427  0898                     	;# 
  5428  0899                     	;# 
  5429  089A                     	;# 
  5430  089B                     	;# 
  5431  090C                     	;# 
  5432  090E                     	;# 
  5433  090F                     	;# 
  5434  091F                     	;# 
  5435  091F                     	;# 
  5436  098F                     	;# 
  5437  098F                     	;# 
  5438  0990                     	;# 
  5439  0991                     	;# 
  5440  0992                     	;# 
  5441  0993                     	;# 
  5442  0994                     	;# 
  5443  0995                     	;# 
  5444  0996                     	;# 
  5445  0997                     	;# 
  5446  0E0F                     	;# 
  5447  0E10                     	;# 
  5448  0E11                     	;# 
  5449  0E12                     	;# 
  5450  0E13                     	;# 
  5451  0E14                     	;# 
  5452  0E15                     	;# 
  5453  0E16                     	;# 
  5454  0E17                     	;# 
  5455  0E18                     	;# 
  5456  0E19                     	;# 
  5457  0E1A                     	;# 
  5458  0E1B                     	;# 
  5459  0E1C                     	;# 
  5460  0E1D                     	;# 
  5461  0E1E                     	;# 
  5462  0E1F                     	;# 
  5463  0E20                     	;# 
  5464  0E21                     	;# 
  5465  0E22                     	;# 
  5466  0E23                     	;# 
  5467  0E24                     	;# 
  5468  0E25                     	;# 
  5469  0E26                     	;# 
  5470  0E27                     	;# 
  5471  0E28                     	;# 
  5472  0E29                     	;# 
  5473  0E2A                     	;# 
  5474  0E2B                     	;# 
  5475  0E2C                     	;# 
  5476  0E2D                     	;# 
  5477  0E2E                     	;# 
  5478  0E2F                     	;# 
  5479  0E30                     	;# 
  5480  0E31                     	;# 
  5481  0E32                     	;# 
  5482  0E33                     	;# 
  5483  0E34                     	;# 
  5484  0E35                     	;# 
  5485  0E36                     	;# 
  5486  0E37                     	;# 
  5487  0E8F                     	;# 
  5488  0E90                     	;# 
  5489  0E91                     	;# 
  5490  0E92                     	;# 
  5491  0E93                     	;# 
  5492  0E94                     	;# 
  5493  0E95                     	;# 
  5494  0E96                     	;# 
  5495  0E97                     	;# 
  5496  0E9C                     	;# 
  5497  0E9D                     	;# 
  5498  0E9E                     	;# 
  5499  0EA1                     	;# 
  5500  0EA2                     	;# 
  5501  0EA3                     	;# 
  5502  0EA4                     	;# 
  5503  0EA5                     	;# 
  5504  0EA9                     	;# 
  5505  0EAA                     	;# 
  5506  0EAB                     	;# 
  5507  0EAC                     	;# 
  5508  0EB1                     	;# 
  5509  0EB2                     	;# 
  5510  0EB3                     	;# 
  5511  0EB8                     	;# 
  5512  0EB9                     	;# 
  5513  0EBA                     	;# 
  5514  0EBB                     	;# 
  5515  0EBC                     	;# 
  5516  0EBD                     	;# 
  5517  0EBE                     	;# 
  5518  0EC3                     	;# 
  5519  0EC5                     	;# 
  5520  0EC6                     	;# 
  5521  0EC7                     	;# 
  5522  0EC8                     	;# 
  5523  0EC9                     	;# 
  5524  0ECA                     	;# 
  5525  0ECB                     	;# 
  5526  0ECC                     	;# 
  5527  0F10                     	;# 
  5528  0F11                     	;# 
  5529  0F12                     	;# 
  5530  0F13                     	;# 
  5531  0F14                     	;# 
  5532  0F15                     	;# 
  5533  0F16                     	;# 
  5534  0F17                     	;# 
  5535  0F18                     	;# 
  5536  0F19                     	;# 
  5537  0F1A                     	;# 
  5538  0F1B                     	;# 
  5539  0F1C                     	;# 
  5540  0F1D                     	;# 
  5541  0F1E                     	;# 
  5542  0F1F                     	;# 
  5543  0F20                     	;# 
  5544  0F21                     	;# 
  5545  0F22                     	;# 
  5546  0F23                     	;# 
  5547  0F24                     	;# 
  5548  0F25                     	;# 
  5549  0F26                     	;# 
  5550  0F27                     	;# 
  5551  0F28                     	;# 
  5552  0F29                     	;# 
  5553  0F2A                     	;# 
  5554  0F2B                     	;# 
  5555  0F2C                     	;# 
  5556  0F2D                     	;# 
  5557  0F2E                     	;# 
  5558  0F2F                     	;# 
  5559  0F30                     	;# 
  5560  0F31                     	;# 
  5561  0F32                     	;# 
  5562  0F38                     	;# 
  5563  0F39                     	;# 
  5564  0F3A                     	;# 
  5565  0F3B                     	;# 
  5566  0F3C                     	;# 
  5567  0F3D                     	;# 
  5568  0F3E                     	;# 
  5569  0F3F                     	;# 
  5570  0F40                     	;# 
  5571  0F41                     	;# 
  5572  0F43                     	;# 
  5573  0F44                     	;# 
  5574  0F45                     	;# 
  5575  0F46                     	;# 
  5576  0F47                     	;# 
  5577  0F48                     	;# 
  5578  0F49                     	;# 
  5579  0F4A                     	;# 
  5580  0F4B                     	;# 
  5581  0F4C                     	;# 
  5582  0F4E                     	;# 
  5583  0F4F                     	;# 
  5584  0F50                     	;# 
  5585  0F51                     	;# 
  5586  0F52                     	;# 
  5587  0F53                     	;# 
  5588  0F54                     	;# 
  5589  0F55                     	;# 
  5590  0F56                     	;# 
  5591  0F57                     	;# 
  5592  0F59                     	;# 
  5593  0F5A                     	;# 
  5594  0F5B                     	;# 
  5595  0F5C                     	;# 
  5596  0F5D                     	;# 
  5597  0F61                     	;# 
  5598  0F62                     	;# 
  5599  0F64                     	;# 
  5600  0F65                     	;# 
  5601  0F66                     	;# 
  5602  0F67                     	;# 
  5603  0F68                     	;# 
  5604  0F69                     	;# 
  5605  0F6A                     	;# 
  5606  0F6B                     	;# 
  5607  0F6C                     	;# 
  5608  0F6D                     	;# 
  5609  0FE4                     	;# 
  5610  0FE5                     	;# 
  5611  0FE6                     	;# 
  5612  0FE7                     	;# 
  5613  0FE8                     	;# 
  5614  0FE9                     	;# 
  5615  0FEA                     	;# 
  5616  0FEB                     	;# 
  5617  0FED                     	;# 
  5618  0FEE                     	;# 
  5619  0FEF                     	;# 
  5620  0000                     	;# 
  5621  0001                     	;# 
  5622  0002                     	;# 
  5623  0003                     	;# 
  5624  0004                     	;# 
  5625  0005                     	;# 
  5626  0006                     	;# 
  5627  0007                     	;# 
  5628  0008                     	;# 
  5629  0009                     	;# 
  5630  000A                     	;# 
  5631  000B                     	;# 
  5632  000C                     	;# 
  5633  000D                     	;# 
  5634  000E                     	;# 
  5635  000F                     	;# 
  5636  0010                     	;# 
  5637  0011                     	;# 
  5638  0012                     	;# 
  5639  0013                     	;# 
  5640  0014                     	;# 
  5641  0015                     	;# 
  5642  0016                     	;# 
  5643  0017                     	;# 
  5644  0018                     	;# 
  5645  0019                     	;# 
  5646  001A                     	;# 
  5647  001C                     	;# 
  5648  001C                     	;# 
  5649  001D                     	;# 
  5650  001D                     	;# 
  5651  001E                     	;# 
  5652  001F                     	;# 
  5653  008C                     	;# 
  5654  008C                     	;# 
  5655  008D                     	;# 
  5656  008E                     	;# 
  5657  008E                     	;# 
  5658  008F                     	;# 
  5659  0090                     	;# 
  5660  0090                     	;# 
  5661  0091                     	;# 
  5662  0093                     	;# 
  5663  0094                     	;# 
  5664  0095                     	;# 
  5665  0096                     	;# 
  5666  0097                     	;# 
  5667  0098                     	;# 
  5668  0099                     	;# 
  5669  009A                     	;# 
  5670  009B                     	;# 
  5671  009C                     	;# 
  5672  009D                     	;# 
  5673  009E                     	;# 
  5674  010C                     	;# 
  5675  010D                     	;# 
  5676  010E                     	;# 
  5677  010E                     	;# 
  5678  010F                     	;# 
  5679  0110                     	;# 
  5680  0110                     	;# 
  5681  0111                     	;# 
  5682  0112                     	;# 
  5683  0112                     	;# 
  5684  0113                     	;# 
  5685  0114                     	;# 
  5686  0114                     	;# 
  5687  0115                     	;# 
  5688  0116                     	;# 
  5689  0116                     	;# 
  5690  0117                     	;# 
  5691  0119                     	;# 
  5692  0119                     	;# 
  5693  0119                     	;# 
  5694  011A                     	;# 
  5695  011A                     	;# 
  5696  011A                     	;# 
  5697  011B                     	;# 
  5698  011B                     	;# 
  5699  011B                     	;# 
  5700  011B                     	;# 
  5701  011B                     	;# 
  5702  011C                     	;# 
  5703  011C                     	;# 
  5704  011C                     	;# 
  5705  011D                     	;# 
  5706  011D                     	;# 
  5707  011D                     	;# 
  5708  011E                     	;# 
  5709  011E                     	;# 
  5710  011E                     	;# 
  5711  011F                     	;# 
  5712  011F                     	;# 
  5713  011F                     	;# 
  5714  011F                     	;# 
  5715  011F                     	;# 
  5716  018C                     	;# 
  5717  018D                     	;# 
  5718  018E                     	;# 
  5719  018F                     	;# 
  5720  0190                     	;# 
  5721  0191                     	;# 
  5722  0192                     	;# 
  5723  0196                     	;# 
  5724  0197                     	;# 
  5725  0198                     	;# 
  5726  0199                     	;# 
  5727  019A                     	;# 
  5728  019B                     	;# 
  5729  019C                     	;# 
  5730  020C                     	;# 
  5731  020C                     	;# 
  5732  020D                     	;# 
  5733  020E                     	;# 
  5734  020F                     	;# 
  5735  020F                     	;# 
  5736  0210                     	;# 
  5737  0210                     	;# 
  5738  0211                     	;# 
  5739  0211                     	;# 
  5740  0212                     	;# 
  5741  0212                     	;# 
  5742  0213                     	;# 
  5743  0214                     	;# 
  5744  0215                     	;# 
  5745  0215                     	;# 
  5746  0216                     	;# 
  5747  0216                     	;# 
  5748  0217                     	;# 
  5749  0217                     	;# 
  5750  0218                     	;# 
  5751  0218                     	;# 
  5752  0219                     	;# 
  5753  021A                     	;# 
  5754  021B                     	;# 
  5755  021B                     	;# 
  5756  021C                     	;# 
  5757  021C                     	;# 
  5758  021D                     	;# 
  5759  021D                     	;# 
  5760  021E                     	;# 
  5761  021F                     	;# 
  5762  028C                     	;# 
  5763  028C                     	;# 
  5764  028D                     	;# 
  5765  028D                     	;# 
  5766  028E                     	;# 
  5767  028F                     	;# 
  5768  0290                     	;# 
  5769  0290                     	;# 
  5770  0291                     	;# 
  5771  0292                     	;# 
  5772  0292                     	;# 
  5773  0293                     	;# 
  5774  0293                     	;# 
  5775  0294                     	;# 
  5776  0295                     	;# 
  5777  0296                     	;# 
  5778  0296                     	;# 
  5779  0297                     	;# 
  5780  0298                     	;# 
  5781  0298                     	;# 
  5782  0299                     	;# 
  5783  0299                     	;# 
  5784  029A                     	;# 
  5785  029B                     	;# 
  5786  029C                     	;# 
  5787  029C                     	;# 
  5788  029D                     	;# 
  5789  030C                     	;# 
  5790  030C                     	;# 
  5791  030D                     	;# 
  5792  030E                     	;# 
  5793  030F                     	;# 
  5794  0310                     	;# 
  5795  0310                     	;# 
  5796  0311                     	;# 
  5797  0312                     	;# 
  5798  0313                     	;# 
  5799  0314                     	;# 
  5800  0314                     	;# 
  5801  0315                     	;# 
  5802  0316                     	;# 
  5803  0317                     	;# 
  5804  0318                     	;# 
  5805  0318                     	;# 
  5806  0319                     	;# 
  5807  031A                     	;# 
  5808  031B                     	;# 
  5809  031C                     	;# 
  5810  031C                     	;# 
  5811  031D                     	;# 
  5812  031E                     	;# 
  5813  031F                     	;# 
  5814  038C                     	;# 
  5815  038C                     	;# 
  5816  038D                     	;# 
  5817  038E                     	;# 
  5818  0390                     	;# 
  5819  0390                     	;# 
  5820  0391                     	;# 
  5821  0392                     	;# 
  5822  040C                     	;# 
  5823  040D                     	;# 
  5824  040E                     	;# 
  5825  040F                     	;# 
  5826  0410                     	;# 
  5827  0411                     	;# 
  5828  0416                     	;# 
  5829  0416                     	;# 
  5830  0417                     	;# 
  5831  0418                     	;# 
  5832  0418                     	;# 
  5833  0419                     	;# 
  5834  041A                     	;# 
  5835  041A                     	;# 
  5836  041B                     	;# 
  5837  041C                     	;# 
  5838  041C                     	;# 
  5839  041D                     	;# 
  5840  041E                     	;# 
  5841  041F                     	;# 
  5842  048C                     	;# 
  5843  048C                     	;# 
  5844  048D                     	;# 
  5845  048E                     	;# 
  5846  048F                     	;# 
  5847  048F                     	;# 
  5848  0490                     	;# 
  5849  0491                     	;# 
  5850  0492                     	;# 
  5851  0492                     	;# 
  5852  0493                     	;# 
  5853  0494                     	;# 
  5854  0495                     	;# 
  5855  0495                     	;# 
  5856  0496                     	;# 
  5857  0497                     	;# 
  5858  0498                     	;# 
  5859  0499                     	;# 
  5860  049A                     	;# 
  5861  049B                     	;# 
  5862  049C                     	;# 
  5863  049D                     	;# 
  5864  050C                     	;# 
  5865  050C                     	;# 
  5866  050D                     	;# 
  5867  050E                     	;# 
  5868  050F                     	;# 
  5869  050F                     	;# 
  5870  0510                     	;# 
  5871  0511                     	;# 
  5872  0512                     	;# 
  5873  0512                     	;# 
  5874  0513                     	;# 
  5875  0514                     	;# 
  5876  0515                     	;# 
  5877  0515                     	;# 
  5878  0516                     	;# 
  5879  0517                     	;# 
  5880  0518                     	;# 
  5881  0519                     	;# 
  5882  051A                     	;# 
  5883  051B                     	;# 
  5884  051C                     	;# 
  5885  051D                     	;# 
  5886  058C                     	;# 
  5887  058C                     	;# 
  5888  058D                     	;# 
  5889  058E                     	;# 
  5890  058F                     	;# 
  5891  058F                     	;# 
  5892  0590                     	;# 
  5893  0591                     	;# 
  5894  0592                     	;# 
  5895  0593                     	;# 
  5896  060C                     	;# 
  5897  060D                     	;# 
  5898  060E                     	;# 
  5899  060F                     	;# 
  5900  0610                     	;# 
  5901  0611                     	;# 
  5902  0612                     	;# 
  5903  0613                     	;# 
  5904  0614                     	;# 
  5905  0616                     	;# 
  5906  0617                     	;# 
  5907  0618                     	;# 
  5908  0619                     	;# 
  5909  061A                     	;# 
  5910  061B                     	;# 
  5911  061C                     	;# 
  5912  061D                     	;# 
  5913  061E                     	;# 
  5914  068C                     	;# 
  5915  068D                     	;# 
  5916  068E                     	;# 
  5917  068F                     	;# 
  5918  0690                     	;# 
  5919  0691                     	;# 
  5920  0692                     	;# 
  5921  0693                     	;# 
  5922  0694                     	;# 
  5923  070C                     	;# 
  5924  070D                     	;# 
  5925  070E                     	;# 
  5926  070F                     	;# 
  5927  0710                     	;# 
  5928  0711                     	;# 
  5929  0712                     	;# 
  5930  0713                     	;# 
  5931  0714                     	;# 
  5932  0716                     	;# 
  5933  0717                     	;# 
  5934  0718                     	;# 
  5935  0719                     	;# 
  5936  071A                     	;# 
  5937  071B                     	;# 
  5938  071C                     	;# 
  5939  071D                     	;# 
  5940  071E                     	;# 
  5941  0796                     	;# 
  5942  0797                     	;# 
  5943  0798                     	;# 
  5944  0799                     	;# 
  5945  079A                     	;# 
  5946  079B                     	;# 
  5947  080C                     	;# 
  5948  080D                     	;# 
  5949  080E                     	;# 
  5950  080F                     	;# 
  5951  0810                     	;# 
  5952  0811                     	;# 
  5953  0812                     	;# 
  5954  0813                     	;# 
  5955  0814                     	;# 
  5956  081A                     	;# 
  5957  081B                     	;# 
  5958  081C                     	;# 
  5959  081D                     	;# 
  5960  081E                     	;# 
  5961  081F                     	;# 
  5962  088C                     	;# 
  5963  088D                     	;# 
  5964  088E                     	;# 
  5965  088F                     	;# 
  5966  0890                     	;# 
  5967  0891                     	;# 
  5968  0892                     	;# 
  5969  0893                     	;# 
  5970  0895                     	;# 
  5971  0896                     	;# 
  5972  0897                     	;# 
  5973  0898                     	;# 
  5974  0899                     	;# 
  5975  089A                     	;# 
  5976  089B                     	;# 
  5977  090C                     	;# 
  5978  090E                     	;# 
  5979  090F                     	;# 
  5980  091F                     	;# 
  5981  091F                     	;# 
  5982  098F                     	;# 
  5983  098F                     	;# 
  5984  0990                     	;# 
  5985  0991                     	;# 
  5986  0992                     	;# 
  5987  0993                     	;# 
  5988  0994                     	;# 
  5989  0995                     	;# 
  5990  0996                     	;# 
  5991  0997                     	;# 
  5992  0E0F                     	;# 
  5993  0E10                     	;# 
  5994  0E11                     	;# 
  5995  0E12                     	;# 
  5996  0E13                     	;# 
  5997  0E14                     	;# 
  5998  0E15                     	;# 
  5999  0E16                     	;# 
  6000  0E17                     	;# 
  6001  0E18                     	;# 
  6002  0E19                     	;# 
  6003  0E1A                     	;# 
  6004  0E1B                     	;# 
  6005  0E1C                     	;# 
  6006  0E1D                     	;# 
  6007  0E1E                     	;# 
  6008  0E1F                     	;# 
  6009  0E20                     	;# 
  6010  0E21                     	;# 
  6011  0E22                     	;# 
  6012  0E23                     	;# 
  6013  0E24                     	;# 
  6014  0E25                     	;# 
  6015  0E26                     	;# 
  6016  0E27                     	;# 
  6017  0E28                     	;# 
  6018  0E29                     	;# 
  6019  0E2A                     	;# 
  6020  0E2B                     	;# 
  6021  0E2C                     	;# 
  6022  0E2D                     	;# 
  6023  0E2E                     	;# 
  6024  0E2F                     	;# 
  6025  0E30                     	;# 
  6026  0E31                     	;# 
  6027  0E32                     	;# 
  6028  0E33                     	;# 
  6029  0E34                     	;# 
  6030  0E35                     	;# 
  6031  0E36                     	;# 
  6032  0E37                     	;# 
  6033  0E8F                     	;# 
  6034  0E90                     	;# 
  6035  0E91                     	;# 
  6036  0E92                     	;# 
  6037  0E93                     	;# 
  6038  0E94                     	;# 
  6039  0E95                     	;# 
  6040  0E96                     	;# 
  6041  0E97                     	;# 
  6042  0E9C                     	;# 
  6043  0E9D                     	;# 
  6044  0E9E                     	;# 
  6045  0EA1                     	;# 
  6046  0EA2                     	;# 
  6047  0EA3                     	;# 
  6048  0EA4                     	;# 
  6049  0EA5                     	;# 
  6050  0EA9                     	;# 
  6051  0EAA                     	;# 
  6052  0EAB                     	;# 
  6053  0EAC                     	;# 
  6054  0EB1                     	;# 
  6055  0EB2                     	;# 
  6056  0EB3                     	;# 
  6057  0EB8                     	;# 
  6058  0EB9                     	;# 
  6059  0EBA                     	;# 
  6060  0EBB                     	;# 
  6061  0EBC                     	;# 
  6062  0EBD                     	;# 
  6063  0EBE                     	;# 
  6064  0EC3                     	;# 
  6065  0EC5                     	;# 
  6066  0EC6                     	;# 
  6067  0EC7                     	;# 
  6068  0EC8                     	;# 
  6069  0EC9                     	;# 
  6070  0ECA                     	;# 
  6071  0ECB                     	;# 
  6072  0ECC                     	;# 
  6073  0F10                     	;# 
  6074  0F11                     	;# 
  6075  0F12                     	;# 
  6076  0F13                     	;# 
  6077  0F14                     	;# 
  6078  0F15                     	;# 
  6079  0F16                     	;# 
  6080  0F17                     	;# 
  6081  0F18                     	;# 
  6082  0F19                     	;# 
  6083  0F1A                     	;# 
  6084  0F1B                     	;# 
  6085  0F1C                     	;# 
  6086  0F1D                     	;# 
  6087  0F1E                     	;# 
  6088  0F1F                     	;# 
  6089  0F20                     	;# 
  6090  0F21                     	;# 
  6091  0F22                     	;# 
  6092  0F23                     	;# 
  6093  0F24                     	;# 
  6094  0F25                     	;# 
  6095  0F26                     	;# 
  6096  0F27                     	;# 
  6097  0F28                     	;# 
  6098  0F29                     	;# 
  6099  0F2A                     	;# 
  6100  0F2B                     	;# 
  6101  0F2C                     	;# 
  6102  0F2D                     	;# 
  6103  0F2E                     	;# 
  6104  0F2F                     	;# 
  6105  0F30                     	;# 
  6106  0F31                     	;# 
  6107  0F32                     	;# 
  6108  0F38                     	;# 
  6109  0F39                     	;# 
  6110  0F3A                     	;# 
  6111  0F3B                     	;# 
  6112  0F3C                     	;# 
  6113  0F3D                     	;# 
  6114  0F3E                     	;# 
  6115  0F3F                     	;# 
  6116  0F40                     	;# 
  6117  0F41                     	;# 
  6118  0F43                     	;# 
  6119  0F44                     	;# 
  6120  0F45                     	;# 
  6121  0F46                     	;# 
  6122  0F47                     	;# 
  6123  0F48                     	;# 
  6124  0F49                     	;# 
  6125  0F4A                     	;# 
  6126  0F4B                     	;# 
  6127  0F4C                     	;# 
  6128  0F4E                     	;# 
  6129  0F4F                     	;# 
  6130  0F50                     	;# 
  6131  0F51                     	;# 
  6132  0F52                     	;# 
  6133  0F53                     	;# 
  6134  0F54                     	;# 
  6135  0F55                     	;# 
  6136  0F56                     	;# 
  6137  0F57                     	;# 
  6138  0F59                     	;# 
  6139  0F5A                     	;# 
  6140  0F5B                     	;# 
  6141  0F5C                     	;# 
  6142  0F5D                     	;# 
  6143  0F61                     	;# 
  6144  0F62                     	;# 
  6145  0F64                     	;# 
  6146  0F65                     	;# 
  6147  0F66                     	;# 
  6148  0F67                     	;# 
  6149  0F68                     	;# 
  6150  0F69                     	;# 
  6151  0F6A                     	;# 
  6152  0F6B                     	;# 
  6153  0F6C                     	;# 
  6154  0F6D                     	;# 
  6155  0FE4                     	;# 
  6156  0FE5                     	;# 
  6157  0FE6                     	;# 
  6158  0FE7                     	;# 
  6159  0FE8                     	;# 
  6160  0FE9                     	;# 
  6161  0FEA                     	;# 
  6162  0FEB                     	;# 
  6163  0FED                     	;# 
  6164  0FEE                     	;# 
  6165  0FEF                     	;# 
  6166  0000                     	;# 
  6167  0001                     	;# 
  6168  0002                     	;# 
  6169  0003                     	;# 
  6170  0004                     	;# 
  6171  0005                     	;# 
  6172  0006                     	;# 
  6173  0007                     	;# 
  6174  0008                     	;# 
  6175  0009                     	;# 
  6176  000A                     	;# 
  6177  000B                     	;# 
  6178  000C                     	;# 
  6179  000D                     	;# 
  6180  000E                     	;# 
  6181  000F                     	;# 
  6182  0010                     	;# 
  6183  0011                     	;# 
  6184  0012                     	;# 
  6185  0013                     	;# 
  6186  0014                     	;# 
  6187  0015                     	;# 
  6188  0016                     	;# 
  6189  0017                     	;# 
  6190  0018                     	;# 
  6191  0019                     	;# 
  6192  001A                     	;# 
  6193  001C                     	;# 
  6194  001C                     	;# 
  6195  001D                     	;# 
  6196  001D                     	;# 
  6197  001E                     	;# 
  6198  001F                     	;# 
  6199  008C                     	;# 
  6200  008C                     	;# 
  6201  008D                     	;# 
  6202  008E                     	;# 
  6203  008E                     	;# 
  6204  008F                     	;# 
  6205  0090                     	;# 
  6206  0090                     	;# 
  6207  0091                     	;# 
  6208  0093                     	;# 
  6209  0094                     	;# 
  6210  0095                     	;# 
  6211  0096                     	;# 
  6212  0097                     	;# 
  6213  0098                     	;# 
  6214  0099                     	;# 
  6215  009A                     	;# 
  6216  009B                     	;# 
  6217  009C                     	;# 
  6218  009D                     	;# 
  6219  009E                     	;# 
  6220  010C                     	;# 
  6221  010D                     	;# 
  6222  010E                     	;# 
  6223  010E                     	;# 
  6224  010F                     	;# 
  6225  0110                     	;# 
  6226  0110                     	;# 
  6227  0111                     	;# 
  6228  0112                     	;# 
  6229  0112                     	;# 
  6230  0113                     	;# 
  6231  0114                     	;# 
  6232  0114                     	;# 
  6233  0115                     	;# 
  6234  0116                     	;# 
  6235  0116                     	;# 
  6236  0117                     	;# 
  6237  0119                     	;# 
  6238  0119                     	;# 
  6239  0119                     	;# 
  6240  011A                     	;# 
  6241  011A                     	;# 
  6242  011A                     	;# 
  6243  011B                     	;# 
  6244  011B                     	;# 
  6245  011B                     	;# 
  6246  011B                     	;# 
  6247  011B                     	;# 
  6248  011C                     	;# 
  6249  011C                     	;# 
  6250  011C                     	;# 
  6251  011D                     	;# 
  6252  011D                     	;# 
  6253  011D                     	;# 
  6254  011E                     	;# 
  6255  011E                     	;# 
  6256  011E                     	;# 
  6257  011F                     	;# 
  6258  011F                     	;# 
  6259  011F                     	;# 
  6260  011F                     	;# 
  6261  011F                     	;# 
  6262  018C                     	;# 
  6263  018D                     	;# 
  6264  018E                     	;# 
  6265  018F                     	;# 
  6266  0190                     	;# 
  6267  0191                     	;# 
  6268  0192                     	;# 
  6269  0196                     	;# 
  6270  0197                     	;# 
  6271  0198                     	;# 
  6272  0199                     	;# 
  6273  019A                     	;# 
  6274  019B                     	;# 
  6275  019C                     	;# 
  6276  020C                     	;# 
  6277  020C                     	;# 
  6278  020D                     	;# 
  6279  020E                     	;# 
  6280  020F                     	;# 
  6281  020F                     	;# 
  6282  0210                     	;# 
  6283  0210                     	;# 
  6284  0211                     	;# 
  6285  0211                     	;# 
  6286  0212                     	;# 
  6287  0212                     	;# 
  6288  0213                     	;# 
  6289  0214                     	;# 
  6290  0215                     	;# 
  6291  0215                     	;# 
  6292  0216                     	;# 
  6293  0216                     	;# 
  6294  0217                     	;# 
  6295  0217                     	;# 
  6296  0218                     	;# 
  6297  0218                     	;# 
  6298  0219                     	;# 
  6299  021A                     	;# 
  6300  021B                     	;# 
  6301  021B                     	;# 
  6302  021C                     	;# 
  6303  021C                     	;# 
  6304  021D                     	;# 
  6305  021D                     	;# 
  6306  021E                     	;# 
  6307  021F                     	;# 
  6308  028C                     	;# 
  6309  028C                     	;# 
  6310  028D                     	;# 
  6311  028D                     	;# 
  6312  028E                     	;# 
  6313  028F                     	;# 
  6314  0290                     	;# 
  6315  0290                     	;# 
  6316  0291                     	;# 
  6317  0292                     	;# 
  6318  0292                     	;# 
  6319  0293                     	;# 
  6320  0293                     	;# 
  6321  0294                     	;# 
  6322  0295                     	;# 
  6323  0296                     	;# 
  6324  0296                     	;# 
  6325  0297                     	;# 
  6326  0298                     	;# 
  6327  0298                     	;# 
  6328  0299                     	;# 
  6329  0299                     	;# 
  6330  029A                     	;# 
  6331  029B                     	;# 
  6332  029C                     	;# 
  6333  029C                     	;# 
  6334  029D                     	;# 
  6335  030C                     	;# 
  6336  030C                     	;# 
  6337  030D                     	;# 
  6338  030E                     	;# 
  6339  030F                     	;# 
  6340  0310                     	;# 
  6341  0310                     	;# 
  6342  0311                     	;# 
  6343  0312                     	;# 
  6344  0313                     	;# 
  6345  0314                     	;# 
  6346  0314                     	;# 
  6347  0315                     	;# 
  6348  0316                     	;# 
  6349  0317                     	;# 
  6350  0318                     	;# 
  6351  0318                     	;# 
  6352  0319                     	;# 
  6353  031A                     	;# 
  6354  031B                     	;# 
  6355  031C                     	;# 
  6356  031C                     	;# 
  6357  031D                     	;# 
  6358  031E                     	;# 
  6359  031F                     	;# 
  6360  038C                     	;# 
  6361  038C                     	;# 
  6362  038D                     	;# 
  6363  038E                     	;# 
  6364  0390                     	;# 
  6365  0390                     	;# 
  6366  0391                     	;# 
  6367  0392                     	;# 
  6368  040C                     	;# 
  6369  040D                     	;# 
  6370  040E                     	;# 
  6371  040F                     	;# 
  6372  0410                     	;# 
  6373  0411                     	;# 
  6374  0416                     	;# 
  6375  0416                     	;# 
  6376  0417                     	;# 
  6377  0418                     	;# 
  6378  0418                     	;# 
  6379  0419                     	;# 
  6380  041A                     	;# 
  6381  041A                     	;# 
  6382  041B                     	;# 
  6383  041C                     	;# 
  6384  041C                     	;# 
  6385  041D                     	;# 
  6386  041E                     	;# 
  6387  041F                     	;# 
  6388  048C                     	;# 
  6389  048C                     	;# 
  6390  048D                     	;# 
  6391  048E                     	;# 
  6392  048F                     	;# 
  6393  048F                     	;# 
  6394  0490                     	;# 
  6395  0491                     	;# 
  6396  0492                     	;# 
  6397  0492                     	;# 
  6398  0493                     	;# 
  6399  0494                     	;# 
  6400  0495                     	;# 
  6401  0495                     	;# 
  6402  0496                     	;# 
  6403  0497                     	;# 
  6404  0498                     	;# 
  6405  0499                     	;# 
  6406  049A                     	;# 
  6407  049B                     	;# 
  6408  049C                     	;# 
  6409  049D                     	;# 
  6410  050C                     	;# 
  6411  050C                     	;# 
  6412  050D                     	;# 
  6413  050E                     	;# 
  6414  050F                     	;# 
  6415  050F                     	;# 
  6416  0510                     	;# 
  6417  0511                     	;# 
  6418  0512                     	;# 
  6419  0512                     	;# 
  6420  0513                     	;# 
  6421  0514                     	;# 
  6422  0515                     	;# 
  6423  0515                     	;# 
  6424  0516                     	;# 
  6425  0517                     	;# 
  6426  0518                     	;# 
  6427  0519                     	;# 
  6428  051A                     	;# 
  6429  051B                     	;# 
  6430  051C                     	;# 
  6431  051D                     	;# 
  6432  058C                     	;# 
  6433  058C                     	;# 
  6434  058D                     	;# 
  6435  058E                     	;# 
  6436  058F                     	;# 
  6437  058F                     	;# 
  6438  0590                     	;# 
  6439  0591                     	;# 
  6440  0592                     	;# 
  6441  0593                     	;# 
  6442  060C                     	;# 
  6443  060D                     	;# 
  6444  060E                     	;# 
  6445  060F                     	;# 
  6446  0610                     	;# 
  6447  0611                     	;# 
  6448  0612                     	;# 
  6449  0613                     	;# 
  6450  0614                     	;# 
  6451  0616                     	;# 
  6452  0617                     	;# 
  6453  0618                     	;# 
  6454  0619                     	;# 
  6455  061A                     	;# 
  6456  061B                     	;# 
  6457  061C                     	;# 
  6458  061D                     	;# 
  6459  061E                     	;# 
  6460  068C                     	;# 
  6461  068D                     	;# 
  6462  068E                     	;# 
  6463  068F                     	;# 
  6464  0690                     	;# 
  6465  0691                     	;# 
  6466  0692                     	;# 
  6467  0693                     	;# 
  6468  0694                     	;# 
  6469  070C                     	;# 
  6470  070D                     	;# 
  6471  070E                     	;# 
  6472  070F                     	;# 
  6473  0710                     	;# 
  6474  0711                     	;# 
  6475  0712                     	;# 
  6476  0713                     	;# 
  6477  0714                     	;# 
  6478  0716                     	;# 
  6479  0717                     	;# 
  6480  0718                     	;# 
  6481  0719                     	;# 
  6482  071A                     	;# 
  6483  071B                     	;# 
  6484  071C                     	;# 
  6485  071D                     	;# 
  6486  071E                     	;# 
  6487  0796                     	;# 
  6488  0797                     	;# 
  6489  0798                     	;# 
  6490  0799                     	;# 
  6491  079A                     	;# 
  6492  079B                     	;# 
  6493  080C                     	;# 
  6494  080D                     	;# 
  6495  080E                     	;# 
  6496  080F                     	;# 
  6497  0810                     	;# 
  6498  0811                     	;# 
  6499  0812                     	;# 
  6500  0813                     	;# 
  6501  0814                     	;# 
  6502  081A                     	;# 
  6503  081B                     	;# 
  6504  081C                     	;# 
  6505  081D                     	;# 
  6506  081E                     	;# 
  6507  081F                     	;# 
  6508  088C                     	;# 
  6509  088D                     	;# 
  6510  088E                     	;# 
  6511  088F                     	;# 
  6512  0890                     	;# 
  6513  0891                     	;# 
  6514  0892                     	;# 
  6515  0893                     	;# 
  6516  0895                     	;# 
  6517  0896                     	;# 
  6518  0897                     	;# 
  6519  0898                     	;# 
  6520  0899                     	;# 
  6521  089A                     	;# 
  6522  089B                     	;# 
  6523  090C                     	;# 
  6524  090E                     	;# 
  6525  090F                     	;# 
  6526  091F                     	;# 
  6527  091F                     	;# 
  6528  098F                     	;# 
  6529  098F                     	;# 
  6530  0990                     	;# 
  6531  0991                     	;# 
  6532  0992                     	;# 
  6533  0993                     	;# 
  6534  0994                     	;# 
  6535  0995                     	;# 
  6536  0996                     	;# 
  6537  0997                     	;# 
  6538  0E0F                     	;# 
  6539  0E10                     	;# 
  6540  0E11                     	;# 
  6541  0E12                     	;# 
  6542  0E13                     	;# 
  6543  0E14                     	;# 
  6544  0E15                     	;# 
  6545  0E16                     	;# 
  6546  0E17                     	;# 
  6547  0E18                     	;# 
  6548  0E19                     	;# 
  6549  0E1A                     	;# 
  6550  0E1B                     	;# 
  6551  0E1C                     	;# 
  6552  0E1D                     	;# 
  6553  0E1E                     	;# 
  6554  0E1F                     	;# 
  6555  0E20                     	;# 
  6556  0E21                     	;# 
  6557  0E22                     	;# 
  6558  0E23                     	;# 
  6559  0E24                     	;# 
  6560  0E25                     	;# 
  6561  0E26                     	;# 
  6562  0E27                     	;# 
  6563  0E28                     	;# 
  6564  0E29                     	;# 
  6565  0E2A                     	;# 
  6566  0E2B                     	;# 
  6567  0E2C                     	;# 
  6568  0E2D                     	;# 
  6569  0E2E                     	;# 
  6570  0E2F                     	;# 
  6571  0E30                     	;# 
  6572  0E31                     	;# 
  6573  0E32                     	;# 
  6574  0E33                     	;# 
  6575  0E34                     	;# 
  6576  0E35                     	;# 
  6577  0E36                     	;# 
  6578  0E37                     	;# 
  6579  0E8F                     	;# 
  6580  0E90                     	;# 
  6581  0E91                     	;# 
  6582  0E92                     	;# 
  6583  0E93                     	;# 
  6584  0E94                     	;# 
  6585  0E95                     	;# 
  6586  0E96                     	;# 
  6587  0E97                     	;# 
  6588  0E9C                     	;# 
  6589  0E9D                     	;# 
  6590  0E9E                     	;# 
  6591  0EA1                     	;# 
  6592  0EA2                     	;# 
  6593  0EA3                     	;# 
  6594  0EA4                     	;# 
  6595  0EA5                     	;# 
  6596  0EA9                     	;# 
  6597  0EAA                     	;# 
  6598  0EAB                     	;# 
  6599  0EAC                     	;# 
  6600  0EB1                     	;# 
  6601  0EB2                     	;# 
  6602  0EB3                     	;# 
  6603  0EB8                     	;# 
  6604  0EB9                     	;# 
  6605  0EBA                     	;# 
  6606  0EBB                     	;# 
  6607  0EBC                     	;# 
  6608  0EBD                     	;# 
  6609  0EBE                     	;# 
  6610  0EC3                     	;# 
  6611  0EC5                     	;# 
  6612  0EC6                     	;# 
  6613  0EC7                     	;# 
  6614  0EC8                     	;# 
  6615  0EC9                     	;# 
  6616  0ECA                     	;# 
  6617  0ECB                     	;# 
  6618  0ECC                     	;# 
  6619  0F10                     	;# 
  6620  0F11                     	;# 
  6621  0F12                     	;# 
  6622  0F13                     	;# 
  6623  0F14                     	;# 
  6624  0F15                     	;# 
  6625  0F16                     	;# 
  6626  0F17                     	;# 
  6627  0F18                     	;# 
  6628  0F19                     	;# 
  6629  0F1A                     	;# 
  6630  0F1B                     	;# 
  6631  0F1C                     	;# 
  6632  0F1D                     	;# 
  6633  0F1E                     	;# 
  6634  0F1F                     	;# 
  6635  0F20                     	;# 
  6636  0F21                     	;# 
  6637  0F22                     	;# 
  6638  0F23                     	;# 
  6639  0F24                     	;# 
  6640  0F25                     	;# 
  6641  0F26                     	;# 
  6642  0F27                     	;# 
  6643  0F28                     	;# 
  6644  0F29                     	;# 
  6645  0F2A                     	;# 
  6646  0F2B                     	;# 
  6647  0F2C                     	;# 
  6648  0F2D                     	;# 
  6649  0F2E                     	;# 
  6650  0F2F                     	;# 
  6651  0F30                     	;# 
  6652  0F31                     	;# 
  6653  0F32                     	;# 
  6654  0F38                     	;# 
  6655  0F39                     	;# 
  6656  0F3A                     	;# 
  6657  0F3B                     	;# 
  6658  0F3C                     	;# 
  6659  0F3D                     	;# 
  6660  0F3E                     	;# 
  6661  0F3F                     	;# 
  6662  0F40                     	;# 
  6663  0F41                     	;# 
  6664  0F43                     	;# 
  6665  0F44                     	;# 
  6666  0F45                     	;# 
  6667  0F46                     	;# 
  6668  0F47                     	;# 
  6669  0F48                     	;# 
  6670  0F49                     	;# 
  6671  0F4A                     	;# 
  6672  0F4B                     	;# 
  6673  0F4C                     	;# 
  6674  0F4E                     	;# 
  6675  0F4F                     	;# 
  6676  0F50                     	;# 
  6677  0F51                     	;# 
  6678  0F52                     	;# 
  6679  0F53                     	;# 
  6680  0F54                     	;# 
  6681  0F55                     	;# 
  6682  0F56                     	;# 
  6683  0F57                     	;# 
  6684  0F59                     	;# 
  6685  0F5A                     	;# 
  6686  0F5B                     	;# 
  6687  0F5C                     	;# 
  6688  0F5D                     	;# 
  6689  0F61                     	;# 
  6690  0F62                     	;# 
  6691  0F64                     	;# 
  6692  0F65                     	;# 
  6693  0F66                     	;# 
  6694  0F67                     	;# 
  6695  0F68                     	;# 
  6696  0F69                     	;# 
  6697  0F6A                     	;# 
  6698  0F6B                     	;# 
  6699  0F6C                     	;# 
  6700  0F6D                     	;# 
  6701  0FE4                     	;# 
  6702  0FE5                     	;# 
  6703  0FE6                     	;# 
  6704  0FE7                     	;# 
  6705  0FE8                     	;# 
  6706  0FE9                     	;# 
  6707  0FEA                     	;# 
  6708  0FEB                     	;# 
  6709  0FED                     	;# 
  6710  0FEE                     	;# 
  6711  0FEF                     	;# 
  6712  0000                     	;# 
  6713  0001                     	;# 
  6714  0002                     	;# 
  6715  0003                     	;# 
  6716  0004                     	;# 
  6717  0005                     	;# 
  6718  0006                     	;# 
  6719  0007                     	;# 
  6720  0008                     	;# 
  6721  0009                     	;# 
  6722  000A                     	;# 
  6723  000B                     	;# 
  6724  000C                     	;# 
  6725  000D                     	;# 
  6726  000E                     	;# 
  6727  000F                     	;# 
  6728  0010                     	;# 
  6729  0011                     	;# 
  6730  0012                     	;# 
  6731  0013                     	;# 
  6732  0014                     	;# 
  6733  0015                     	;# 
  6734  0016                     	;# 
  6735  0017                     	;# 
  6736  0018                     	;# 
  6737  0019                     	;# 
  6738  001A                     	;# 
  6739  001C                     	;# 
  6740  001C                     	;# 
  6741  001D                     	;# 
  6742  001D                     	;# 
  6743  001E                     	;# 
  6744  001F                     	;# 
  6745  008C                     	;# 
  6746  008C                     	;# 
  6747  008D                     	;# 
  6748  008E                     	;# 
  6749  008E                     	;# 
  6750  008F                     	;# 
  6751  0090                     	;# 
  6752  0090                     	;# 
  6753  0091                     	;# 
  6754  0093                     	;# 
  6755  0094                     	;# 
  6756  0095                     	;# 
  6757  0096                     	;# 
  6758  0097                     	;# 
  6759  0098                     	;# 
  6760  0099                     	;# 
  6761  009A                     	;# 
  6762  009B                     	;# 
  6763  009C                     	;# 
  6764  009D                     	;# 
  6765  009E                     	;# 
  6766  010C                     	;# 
  6767  010D                     	;# 
  6768  010E                     	;# 
  6769  010E                     	;# 
  6770  010F                     	;# 
  6771  0110                     	;# 
  6772  0110                     	;# 
  6773  0111                     	;# 
  6774  0112                     	;# 
  6775  0112                     	;# 
  6776  0113                     	;# 
  6777  0114                     	;# 
  6778  0114                     	;# 
  6779  0115                     	;# 
  6780  0116                     	;# 
  6781  0116                     	;# 
  6782  0117                     	;# 
  6783  0119                     	;# 
  6784  0119                     	;# 
  6785  0119                     	;# 
  6786  011A                     	;# 
  6787  011A                     	;# 
  6788  011A                     	;# 
  6789  011B                     	;# 
  6790  011B                     	;# 
  6791  011B                     	;# 
  6792  011B                     	;# 
  6793  011B                     	;# 
  6794  011C                     	;# 
  6795  011C                     	;# 
  6796  011C                     	;# 
  6797  011D                     	;# 
  6798  011D                     	;# 
  6799  011D                     	;# 
  6800  011E                     	;# 
  6801  011E                     	;# 
  6802  011E                     	;# 
  6803  011F                     	;# 
  6804  011F                     	;# 
  6805  011F                     	;# 
  6806  011F                     	;# 
  6807  011F                     	;# 
  6808  018C                     	;# 
  6809  018D                     	;# 
  6810  018E                     	;# 
  6811  018F                     	;# 
  6812  0190                     	;# 
  6813  0191                     	;# 
  6814  0192                     	;# 
  6815  0196                     	;# 
  6816  0197                     	;# 
  6817  0198                     	;# 
  6818  0199                     	;# 
  6819  019A                     	;# 
  6820  019B                     	;# 
  6821  019C                     	;# 
  6822  020C                     	;# 
  6823  020C                     	;# 
  6824  020D                     	;# 
  6825  020E                     	;# 
  6826  020F                     	;# 
  6827  020F                     	;# 
  6828  0210                     	;# 
  6829  0210                     	;# 
  6830  0211                     	;# 
  6831  0211                     	;# 
  6832  0212                     	;# 
  6833  0212                     	;# 
  6834  0213                     	;# 
  6835  0214                     	;# 
  6836  0215                     	;# 
  6837  0215                     	;# 
  6838  0216                     	;# 
  6839  0216                     	;# 
  6840  0217                     	;# 
  6841  0217                     	;# 
  6842  0218                     	;# 
  6843  0218                     	;# 
  6844  0219                     	;# 
  6845  021A                     	;# 
  6846  021B                     	;# 
  6847  021B                     	;# 
  6848  021C                     	;# 
  6849  021C                     	;# 
  6850  021D                     	;# 
  6851  021D                     	;# 
  6852  021E                     	;# 
  6853  021F                     	;# 
  6854  028C                     	;# 
  6855  028C                     	;# 
  6856  028D                     	;# 
  6857  028D                     	;# 
  6858  028E                     	;# 
  6859  028F                     	;# 
  6860  0290                     	;# 
  6861  0290                     	;# 
  6862  0291                     	;# 
  6863  0292                     	;# 
  6864  0292                     	;# 
  6865  0293                     	;# 
  6866  0293                     	;# 
  6867  0294                     	;# 
  6868  0295                     	;# 
  6869  0296                     	;# 
  6870  0296                     	;# 
  6871  0297                     	;# 
  6872  0298                     	;# 
  6873  0298                     	;# 
  6874  0299                     	;# 
  6875  0299                     	;# 
  6876  029A                     	;# 
  6877  029B                     	;# 
  6878  029C                     	;# 
  6879  029C                     	;# 
  6880  029D                     	;# 
  6881  030C                     	;# 
  6882  030C                     	;# 
  6883  030D                     	;# 
  6884  030E                     	;# 
  6885  030F                     	;# 
  6886  0310                     	;# 
  6887  0310                     	;# 
  6888  0311                     	;# 
  6889  0312                     	;# 
  6890  0313                     	;# 
  6891  0314                     	;# 
  6892  0314                     	;# 
  6893  0315                     	;# 
  6894  0316                     	;# 
  6895  0317                     	;# 
  6896  0318                     	;# 
  6897  0318                     	;# 
  6898  0319                     	;# 
  6899  031A                     	;# 
  6900  031B                     	;# 
  6901  031C                     	;# 
  6902  031C                     	;# 
  6903  031D                     	;# 
  6904  031E                     	;# 
  6905  031F                     	;# 
  6906  038C                     	;# 
  6907  038C                     	;# 
  6908  038D                     	;# 
  6909  038E                     	;# 
  6910  0390                     	;# 
  6911  0390                     	;# 
  6912  0391                     	;# 
  6913  0392                     	;# 
  6914  040C                     	;# 
  6915  040D                     	;# 
  6916  040E                     	;# 
  6917  040F                     	;# 
  6918  0410                     	;# 
  6919  0411                     	;# 
  6920  0416                     	;# 
  6921  0416                     	;# 
  6922  0417                     	;# 
  6923  0418                     	;# 
  6924  0418                     	;# 
  6925  0419                     	;# 
  6926  041A                     	;# 
  6927  041A                     	;# 
  6928  041B                     	;# 
  6929  041C                     	;# 
  6930  041C                     	;# 
  6931  041D                     	;# 
  6932  041E                     	;# 
  6933  041F                     	;# 
  6934  048C                     	;# 
  6935  048C                     	;# 
  6936  048D                     	;# 
  6937  048E                     	;# 
  6938  048F                     	;# 
  6939  048F                     	;# 
  6940  0490                     	;# 
  6941  0491                     	;# 
  6942  0492                     	;# 
  6943  0492                     	;# 
  6944  0493                     	;# 
  6945  0494                     	;# 
  6946  0495                     	;# 
  6947  0495                     	;# 
  6948  0496                     	;# 
  6949  0497                     	;# 
  6950  0498                     	;# 
  6951  0499                     	;# 
  6952  049A                     	;# 
  6953  049B                     	;# 
  6954  049C                     	;# 
  6955  049D                     	;# 
  6956  050C                     	;# 
  6957  050C                     	;# 
  6958  050D                     	;# 
  6959  050E                     	;# 
  6960  050F                     	;# 
  6961  050F                     	;# 
  6962  0510                     	;# 
  6963  0511                     	;# 
  6964  0512                     	;# 
  6965  0512                     	;# 
  6966  0513                     	;# 
  6967  0514                     	;# 
  6968  0515                     	;# 
  6969  0515                     	;# 
  6970  0516                     	;# 
  6971  0517                     	;# 
  6972  0518                     	;# 
  6973  0519                     	;# 
  6974  051A                     	;# 
  6975  051B                     	;# 
  6976  051C                     	;# 
  6977  051D                     	;# 
  6978  058C                     	;# 
  6979  058C                     	;# 
  6980  058D                     	;# 
  6981  058E                     	;# 
  6982  058F                     	;# 
  6983  058F                     	;# 
  6984  0590                     	;# 
  6985  0591                     	;# 
  6986  0592                     	;# 
  6987  0593                     	;# 
  6988  060C                     	;# 
  6989  060D                     	;# 
  6990  060E                     	;# 
  6991  060F                     	;# 
  6992  0610                     	;# 
  6993  0611                     	;# 
  6994  0612                     	;# 
  6995  0613                     	;# 
  6996  0614                     	;# 
  6997  0616                     	;# 
  6998  0617                     	;# 
  6999  0618                     	;# 
  7000  0619                     	;# 
  7001  061A                     	;# 
  7002  061B                     	;# 
  7003  061C                     	;# 
  7004  061D                     	;# 
  7005  061E                     	;# 
  7006  068C                     	;# 
  7007  068D                     	;# 
  7008  068E                     	;# 
  7009  068F                     	;# 
  7010  0690                     	;# 
  7011  0691                     	;# 
  7012  0692                     	;# 
  7013  0693                     	;# 
  7014  0694                     	;# 
  7015  070C                     	;# 
  7016  070D                     	;# 
  7017  070E                     	;# 
  7018  070F                     	;# 
  7019  0710                     	;# 
  7020  0711                     	;# 
  7021  0712                     	;# 
  7022  0713                     	;# 
  7023  0714                     	;# 
  7024  0716                     	;# 
  7025  0717                     	;# 
  7026  0718                     	;# 
  7027  0719                     	;# 
  7028  071A                     	;# 
  7029  071B                     	;# 
  7030  071C                     	;# 
  7031  071D                     	;# 
  7032  071E                     	;# 
  7033  0796                     	;# 
  7034  0797                     	;# 
  7035  0798                     	;# 
  7036  0799                     	;# 
  7037  079A                     	;# 
  7038  079B                     	;# 
  7039  080C                     	;# 
  7040  080D                     	;# 
  7041  080E                     	;# 
  7042  080F                     	;# 
  7043  0810                     	;# 
  7044  0811                     	;# 
  7045  0812                     	;# 
  7046  0813                     	;# 
  7047  0814                     	;# 
  7048  081A                     	;# 
  7049  081B                     	;# 
  7050  081C                     	;# 
  7051  081D                     	;# 
  7052  081E                     	;# 
  7053  081F                     	;# 
  7054  088C                     	;# 
  7055  088D                     	;# 
  7056  088E                     	;# 
  7057  088F                     	;# 
  7058  0890                     	;# 
  7059  0891                     	;# 
  7060  0892                     	;# 
  7061  0893                     	;# 
  7062  0895                     	;# 
  7063  0896                     	;# 
  7064  0897                     	;# 
  7065  0898                     	;# 
  7066  0899                     	;# 
  7067  089A                     	;# 
  7068  089B                     	;# 
  7069  090C                     	;# 
  7070  090E                     	;# 
  7071  090F                     	;# 
  7072  091F                     	;# 
  7073  091F                     	;# 
  7074  098F                     	;# 
  7075  098F                     	;# 
  7076  0990                     	;# 
  7077  0991                     	;# 
  7078  0992                     	;# 
  7079  0993                     	;# 
  7080  0994                     	;# 
  7081  0995                     	;# 
  7082  0996                     	;# 
  7083  0997                     	;# 
  7084  0E0F                     	;# 
  7085  0E10                     	;# 
  7086  0E11                     	;# 
  7087  0E12                     	;# 
  7088  0E13                     	;# 
  7089  0E14                     	;# 
  7090  0E15                     	;# 
  7091  0E16                     	;# 
  7092  0E17                     	;# 
  7093  0E18                     	;# 
  7094  0E19                     	;# 
  7095  0E1A                     	;# 
  7096  0E1B                     	;# 
  7097  0E1C                     	;# 
  7098  0E1D                     	;# 
  7099  0E1E                     	;# 
  7100  0E1F                     	;# 
  7101  0E20                     	;# 
  7102  0E21                     	;# 
  7103  0E22                     	;# 
  7104  0E23                     	;# 
  7105  0E24                     	;# 
  7106  0E25                     	;# 
  7107  0E26                     	;# 
  7108  0E27                     	;# 
  7109  0E28                     	;# 
  7110  0E29                     	;# 
  7111  0E2A                     	;# 
  7112  0E2B                     	;# 
  7113  0E2C                     	;# 
  7114  0E2D                     	;# 
  7115  0E2E                     	;# 
  7116  0E2F                     	;# 
  7117  0E30                     	;# 
  7118  0E31                     	;# 
  7119  0E32                     	;# 
  7120  0E33                     	;# 
  7121  0E34                     	;# 
  7122  0E35                     	;# 
  7123  0E36                     	;# 
  7124  0E37                     	;# 
  7125  0E8F                     	;# 
  7126  0E90                     	;# 
  7127  0E91                     	;# 
  7128  0E92                     	;# 
  7129  0E93                     	;# 
  7130  0E94                     	;# 
  7131  0E95                     	;# 
  7132  0E96                     	;# 
  7133  0E97                     	;# 
  7134  0E9C                     	;# 
  7135  0E9D                     	;# 
  7136  0E9E                     	;# 
  7137  0EA1                     	;# 
  7138  0EA2                     	;# 
  7139  0EA3                     	;# 
  7140  0EA4                     	;# 
  7141  0EA5                     	;# 
  7142  0EA9                     	;# 
  7143  0EAA                     	;# 
  7144  0EAB                     	;# 
  7145  0EAC                     	;# 
  7146  0EB1                     	;# 
  7147  0EB2                     	;# 
  7148  0EB3                     	;# 
  7149  0EB8                     	;# 
  7150  0EB9                     	;# 
  7151  0EBA                     	;# 
  7152  0EBB                     	;# 
  7153  0EBC                     	;# 
  7154  0EBD                     	;# 
  7155  0EBE                     	;# 
  7156  0EC3                     	;# 
  7157  0EC5                     	;# 
  7158  0EC6                     	;# 
  7159  0EC7                     	;# 
  7160  0EC8                     	;# 
  7161  0EC9                     	;# 
  7162  0ECA                     	;# 
  7163  0ECB                     	;# 
  7164  0ECC                     	;# 
  7165  0F10                     	;# 
  7166  0F11                     	;# 
  7167  0F12                     	;# 
  7168  0F13                     	;# 
  7169  0F14                     	;# 
  7170  0F15                     	;# 
  7171  0F16                     	;# 
  7172  0F17                     	;# 
  7173  0F18                     	;# 
  7174  0F19                     	;# 
  7175  0F1A                     	;# 
  7176  0F1B                     	;# 
  7177  0F1C                     	;# 
  7178  0F1D                     	;# 
  7179  0F1E                     	;# 
  7180  0F1F                     	;# 
  7181  0F20                     	;# 
  7182  0F21                     	;# 
  7183  0F22                     	;# 
  7184  0F23                     	;# 
  7185  0F24                     	;# 
  7186  0F25                     	;# 
  7187  0F26                     	;# 
  7188  0F27                     	;# 
  7189  0F28                     	;# 
  7190  0F29                     	;# 
  7191  0F2A                     	;# 
  7192  0F2B                     	;# 
  7193  0F2C                     	;# 
  7194  0F2D                     	;# 
  7195  0F2E                     	;# 
  7196  0F2F                     	;# 
  7197  0F30                     	;# 
  7198  0F31                     	;# 
  7199  0F32                     	;# 
  7200  0F38                     	;# 
  7201  0F39                     	;# 
  7202  0F3A                     	;# 
  7203  0F3B                     	;# 
  7204  0F3C                     	;# 
  7205  0F3D                     	;# 
  7206  0F3E                     	;# 
  7207  0F3F                     	;# 
  7208  0F40                     	;# 
  7209  0F41                     	;# 
  7210  0F43                     	;# 
  7211  0F44                     	;# 
  7212  0F45                     	;# 
  7213  0F46                     	;# 
  7214  0F47                     	;# 
  7215  0F48                     	;# 
  7216  0F49                     	;# 
  7217  0F4A                     	;# 
  7218  0F4B                     	;# 
  7219  0F4C                     	;# 
  7220  0F4E                     	;# 
  7221  0F4F                     	;# 
  7222  0F50                     	;# 
  7223  0F51                     	;# 
  7224  0F52                     	;# 
  7225  0F53                     	;# 
  7226  0F54                     	;# 
  7227  0F55                     	;# 
  7228  0F56                     	;# 
  7229  0F57                     	;# 
  7230  0F59                     	;# 
  7231  0F5A                     	;# 
  7232  0F5B                     	;# 
  7233  0F5C                     	;# 
  7234  0F5D                     	;# 
  7235  0F61                     	;# 
  7236  0F62                     	;# 
  7237  0F64                     	;# 
  7238  0F65                     	;# 
  7239  0F66                     	;# 
  7240  0F67                     	;# 
  7241  0F68                     	;# 
  7242  0F69                     	;# 
  7243  0F6A                     	;# 
  7244  0F6B                     	;# 
  7245  0F6C                     	;# 
  7246  0F6D                     	;# 
  7247  0FE4                     	;# 
  7248  0FE5                     	;# 
  7249  0FE6                     	;# 
  7250  0FE7                     	;# 
  7251  0FE8                     	;# 
  7252  0FE9                     	;# 
  7253  0FEA                     	;# 
  7254  0FEB                     	;# 
  7255  0FED                     	;# 
  7256  0FEE                     	;# 
  7257  0FEF                     	;# 
  7258  0000                     	;# 
  7259  0001                     	;# 
  7260  0002                     	;# 
  7261  0003                     	;# 
  7262  0004                     	;# 
  7263  0005                     	;# 
  7264  0006                     	;# 
  7265  0007                     	;# 
  7266  0008                     	;# 
  7267  0009                     	;# 
  7268  000A                     	;# 
  7269  000B                     	;# 
  7270  000C                     	;# 
  7271  000D                     	;# 
  7272  000E                     	;# 
  7273  000F                     	;# 
  7274  0010                     	;# 
  7275  0011                     	;# 
  7276  0012                     	;# 
  7277  0013                     	;# 
  7278  0014                     	;# 
  7279  0015                     	;# 
  7280  0016                     	;# 
  7281  0017                     	;# 
  7282  0018                     	;# 
  7283  0019                     	;# 
  7284  001A                     	;# 
  7285  001C                     	;# 
  7286  001C                     	;# 
  7287  001D                     	;# 
  7288  001D                     	;# 
  7289  001E                     	;# 
  7290  001F                     	;# 
  7291  008C                     	;# 
  7292  008C                     	;# 
  7293  008D                     	;# 
  7294  008E                     	;# 
  7295  008E                     	;# 
  7296  008F                     	;# 
  7297  0090                     	;# 
  7298  0090                     	;# 
  7299  0091                     	;# 
  7300  0093                     	;# 
  7301  0094                     	;# 
  7302  0095                     	;# 
  7303  0096                     	;# 
  7304  0097                     	;# 
  7305  0098                     	;# 
  7306  0099                     	;# 
  7307  009A                     	;# 
  7308  009B                     	;# 
  7309  009C                     	;# 
  7310  009D                     	;# 
  7311  009E                     	;# 
  7312  010C                     	;# 
  7313  010D                     	;# 
  7314  010E                     	;# 
  7315  010E                     	;# 
  7316  010F                     	;# 
  7317  0110                     	;# 
  7318  0110                     	;# 
  7319  0111                     	;# 
  7320  0112                     	;# 
  7321  0112                     	;# 
  7322  0113                     	;# 
  7323  0114                     	;# 
  7324  0114                     	;# 
  7325  0115                     	;# 
  7326  0116                     	;# 
  7327  0116                     	;# 
  7328  0117                     	;# 
  7329  0119                     	;# 
  7330  0119                     	;# 
  7331  0119                     	;# 
  7332  011A                     	;# 
  7333  011A                     	;# 
  7334  011A                     	;# 
  7335  011B                     	;# 
  7336  011B                     	;# 
  7337  011B                     	;# 
  7338  011B                     	;# 
  7339  011B                     	;# 
  7340  011C                     	;# 
  7341  011C                     	;# 
  7342  011C                     	;# 
  7343  011D                     	;# 
  7344  011D                     	;# 
  7345  011D                     	;# 
  7346  011E                     	;# 
  7347  011E                     	;# 
  7348  011E                     	;# 
  7349  011F                     	;# 
  7350  011F                     	;# 
  7351  011F                     	;# 
  7352  011F                     	;# 
  7353  011F                     	;# 
  7354  018C                     	;# 
  7355  018D                     	;# 
  7356  018E                     	;# 
  7357  018F                     	;# 
  7358  0190                     	;# 
  7359  0191                     	;# 
  7360  0192                     	;# 
  7361  0196                     	;# 
  7362  0197                     	;# 
  7363  0198                     	;# 
  7364  0199                     	;# 
  7365  019A                     	;# 
  7366  019B                     	;# 
  7367  019C                     	;# 
  7368  020C                     	;# 
  7369  020C                     	;# 
  7370  020D                     	;# 
  7371  020E                     	;# 
  7372  020F                     	;# 
  7373  020F                     	;# 
  7374  0210                     	;# 
  7375  0210                     	;# 
  7376  0211                     	;# 
  7377  0211                     	;# 
  7378  0212                     	;# 
  7379  0212                     	;# 
  7380  0213                     	;# 
  7381  0214                     	;# 
  7382  0215                     	;# 
  7383  0215                     	;# 
  7384  0216                     	;# 
  7385  0216                     	;# 
  7386  0217                     	;# 
  7387  0217                     	;# 
  7388  0218                     	;# 
  7389  0218                     	;# 
  7390  0219                     	;# 
  7391  021A                     	;# 
  7392  021B                     	;# 
  7393  021B                     	;# 
  7394  021C                     	;# 
  7395  021C                     	;# 
  7396  021D                     	;# 
  7397  021D                     	;# 
  7398  021E                     	;# 
  7399  021F                     	;# 
  7400  028C                     	;# 
  7401  028C                     	;# 
  7402  028D                     	;# 
  7403  028D                     	;# 
  7404  028E                     	;# 
  7405  028F                     	;# 
  7406  0290                     	;# 
  7407  0290                     	;# 
  7408  0291                     	;# 
  7409  0292                     	;# 
  7410  0292                     	;# 
  7411  0293                     	;# 
  7412  0293                     	;# 
  7413  0294                     	;# 
  7414  0295                     	;# 
  7415  0296                     	;# 
  7416  0296                     	;# 
  7417  0297                     	;# 
  7418  0298                     	;# 
  7419  0298                     	;# 
  7420  0299                     	;# 
  7421  0299                     	;# 
  7422  029A                     	;# 
  7423  029B                     	;# 
  7424  029C                     	;# 
  7425  029C                     	;# 
  7426  029D                     	;# 
  7427  030C                     	;# 
  7428  030C                     	;# 
  7429  030D                     	;# 
  7430  030E                     	;# 
  7431  030F                     	;# 
  7432  0310                     	;# 
  7433  0310                     	;# 
  7434  0311                     	;# 
  7435  0312                     	;# 
  7436  0313                     	;# 
  7437  0314                     	;# 
  7438  0314                     	;# 
  7439  0315                     	;# 
  7440  0316                     	;# 
  7441  0317                     	;# 
  7442  0318                     	;# 
  7443  0318                     	;# 
  7444  0319                     	;# 
  7445  031A                     	;# 
  7446  031B                     	;# 
  7447  031C                     	;# 
  7448  031C                     	;# 
  7449  031D                     	;# 
  7450  031E                     	;# 
  7451  031F                     	;# 
  7452  038C                     	;# 
  7453  038C                     	;# 
  7454  038D                     	;# 
  7455  038E                     	;# 
  7456  0390                     	;# 
  7457  0390                     	;# 
  7458  0391                     	;# 
  7459  0392                     	;# 
  7460  040C                     	;# 
  7461  040D                     	;# 
  7462  040E                     	;# 
  7463  040F                     	;# 
  7464  0410                     	;# 
  7465  0411                     	;# 
  7466  0416                     	;# 
  7467  0416                     	;# 
  7468  0417                     	;# 
  7469  0418                     	;# 
  7470  0418                     	;# 
  7471  0419                     	;# 
  7472  041A                     	;# 
  7473  041A                     	;# 
  7474  041B                     	;# 
  7475  041C                     	;# 
  7476  041C                     	;# 
  7477  041D                     	;# 
  7478  041E                     	;# 
  7479  041F                     	;# 
  7480  048C                     	;# 
  7481  048C                     	;# 
  7482  048D                     	;# 
  7483  048E                     	;# 
  7484  048F                     	;# 
  7485  048F                     	;# 
  7486  0490                     	;# 
  7487  0491                     	;# 
  7488  0492                     	;# 
  7489  0492                     	;# 
  7490  0493                     	;# 
  7491  0494                     	;# 
  7492  0495                     	;# 
  7493  0495                     	;# 
  7494  0496                     	;# 
  7495  0497                     	;# 
  7496  0498                     	;# 
  7497  0499                     	;# 
  7498  049A                     	;# 
  7499  049B                     	;# 
  7500  049C                     	;# 
  7501  049D                     	;# 
  7502  050C                     	;# 
  7503  050C                     	;# 
  7504  050D                     	;# 
  7505  050E                     	;# 
  7506  050F                     	;# 
  7507  050F                     	;# 
  7508  0510                     	;# 
  7509  0511                     	;# 
  7510  0512                     	;# 
  7511  0512                     	;# 
  7512  0513                     	;# 
  7513  0514                     	;# 
  7514  0515                     	;# 
  7515  0515                     	;# 
  7516  0516                     	;# 
  7517  0517                     	;# 
  7518  0518                     	;# 
  7519  0519                     	;# 
  7520  051A                     	;# 
  7521  051B                     	;# 
  7522  051C                     	;# 
  7523  051D                     	;# 
  7524  058C                     	;# 
  7525  058C                     	;# 
  7526  058D                     	;# 
  7527  058E                     	;# 
  7528  058F                     	;# 
  7529  058F                     	;# 
  7530  0590                     	;# 
  7531  0591                     	;# 
  7532  0592                     	;# 
  7533  0593                     	;# 
  7534  060C                     	;# 
  7535  060D                     	;# 
  7536  060E                     	;# 
  7537  060F                     	;# 
  7538  0610                     	;# 
  7539  0611                     	;# 
  7540  0612                     	;# 
  7541  0613                     	;# 
  7542  0614                     	;# 
  7543  0616                     	;# 
  7544  0617                     	;# 
  7545  0618                     	;# 
  7546  0619                     	;# 
  7547  061A                     	;# 
  7548  061B                     	;# 
  7549  061C                     	;# 
  7550  061D                     	;# 
  7551  061E                     	;# 
  7552  068C                     	;# 
  7553  068D                     	;# 
  7554  068E                     	;# 
  7555  068F                     	;# 
  7556  0690                     	;# 
  7557  0691                     	;# 
  7558  0692                     	;# 
  7559  0693                     	;# 
  7560  0694                     	;# 
  7561  070C                     	;# 
  7562  070D                     	;# 
  7563  070E                     	;# 
  7564  070F                     	;# 
  7565  0710                     	;# 
  7566  0711                     	;# 
  7567  0712                     	;# 
  7568  0713                     	;# 
  7569  0714                     	;# 
  7570  0716                     	;# 
  7571  0717                     	;# 
  7572  0718                     	;# 
  7573  0719                     	;# 
  7574  071A                     	;# 
  7575  071B                     	;# 
  7576  071C                     	;# 
  7577  071D                     	;# 
  7578  071E                     	;# 
  7579  0796                     	;# 
  7580  0797                     	;# 
  7581  0798                     	;# 
  7582  0799                     	;# 
  7583  079A                     	;# 
  7584  079B                     	;# 
  7585  080C                     	;# 
  7586  080D                     	;# 
  7587  080E                     	;# 
  7588  080F                     	;# 
  7589  0810                     	;# 
  7590  0811                     	;# 
  7591  0812                     	;# 
  7592  0813                     	;# 
  7593  0814                     	;# 
  7594  081A                     	;# 
  7595  081B                     	;# 
  7596  081C                     	;# 
  7597  081D                     	;# 
  7598  081E                     	;# 
  7599  081F                     	;# 
  7600  088C                     	;# 
  7601  088D                     	;# 
  7602  088E                     	;# 
  7603  088F                     	;# 
  7604  0890                     	;# 
  7605  0891                     	;# 
  7606  0892                     	;# 
  7607  0893                     	;# 
  7608  0895                     	;# 
  7609  0896                     	;# 
  7610  0897                     	;# 
  7611  0898                     	;# 
  7612  0899                     	;# 
  7613  089A                     	;# 
  7614  089B                     	;# 
  7615  090C                     	;# 
  7616  090E                     	;# 
  7617  090F                     	;# 
  7618  091F                     	;# 
  7619  091F                     	;# 
  7620  098F                     	;# 
  7621  098F                     	;# 
  7622  0990                     	;# 
  7623  0991                     	;# 
  7624  0992                     	;# 
  7625  0993                     	;# 
  7626  0994                     	;# 
  7627  0995                     	;# 
  7628  0996                     	;# 
  7629  0997                     	;# 
  7630  0E0F                     	;# 
  7631  0E10                     	;# 
  7632  0E11                     	;# 
  7633  0E12                     	;# 
  7634  0E13                     	;# 
  7635  0E14                     	;# 
  7636  0E15                     	;# 
  7637  0E16                     	;# 
  7638  0E17                     	;# 
  7639  0E18                     	;# 
  7640  0E19                     	;# 
  7641  0E1A                     	;# 
  7642  0E1B                     	;# 
  7643  0E1C                     	;# 
  7644  0E1D                     	;# 
  7645  0E1E                     	;# 
  7646  0E1F                     	;# 
  7647  0E20                     	;# 
  7648  0E21                     	;# 
  7649  0E22                     	;# 
  7650  0E23                     	;# 
  7651  0E24                     	;# 
  7652  0E25                     	;# 
  7653  0E26                     	;# 
  7654  0E27                     	;# 
  7655  0E28                     	;# 
  7656  0E29                     	;# 
  7657  0E2A                     	;# 
  7658  0E2B                     	;# 
  7659  0E2C                     	;# 
  7660  0E2D                     	;# 
  7661  0E2E                     	;# 
  7662  0E2F                     	;# 
  7663  0E30                     	;# 
  7664  0E31                     	;# 
  7665  0E32                     	;# 
  7666  0E33                     	;# 
  7667  0E34                     	;# 
  7668  0E35                     	;# 
  7669  0E36                     	;# 
  7670  0E37                     	;# 
  7671  0E8F                     	;# 
  7672  0E90                     	;# 
  7673  0E91                     	;# 
  7674  0E92                     	;# 
  7675  0E93                     	;# 
  7676  0E94                     	;# 
  7677  0E95                     	;# 
  7678  0E96                     	;# 
  7679  0E97                     	;# 
  7680  0E9C                     	;# 
  7681  0E9D                     	;# 
  7682  0E9E                     	;# 
  7683  0EA1                     	;# 
  7684  0EA2                     	;# 
  7685  0EA3                     	;# 
  7686  0EA4                     	;# 
  7687  0EA5                     	;# 
  7688  0EA9                     	;# 
  7689  0EAA                     	;# 
  7690  0EAB                     	;# 
  7691  0EAC                     	;# 
  7692  0EB1                     	;# 
  7693  0EB2                     	;# 
  7694  0EB3                     	;# 
  7695  0EB8                     	;# 
  7696  0EB9                     	;# 
  7697  0EBA                     	;# 
  7698  0EBB                     	;# 
  7699  0EBC                     	;# 
  7700  0EBD                     	;# 
  7701  0EBE                     	;# 
  7702  0EC3                     	;# 
  7703  0EC5                     	;# 
  7704  0EC6                     	;# 
  7705  0EC7                     	;# 
  7706  0EC8                     	;# 
  7707  0EC9                     	;# 
  7708  0ECA                     	;# 
  7709  0ECB                     	;# 
  7710  0ECC                     	;# 
  7711  0F10                     	;# 
  7712  0F11                     	;# 
  7713  0F12                     	;# 
  7714  0F13                     	;# 
  7715  0F14                     	;# 
  7716  0F15                     	;# 
  7717  0F16                     	;# 
  7718  0F17                     	;# 
  7719  0F18                     	;# 
  7720  0F19                     	;# 
  7721  0F1A                     	;# 
  7722  0F1B                     	;# 
  7723  0F1C                     	;# 
  7724  0F1D                     	;# 
  7725  0F1E                     	;# 
  7726  0F1F                     	;# 
  7727  0F20                     	;# 
  7728  0F21                     	;# 
  7729  0F22                     	;# 
  7730  0F23                     	;# 
  7731  0F24                     	;# 
  7732  0F25                     	;# 
  7733  0F26                     	;# 
  7734  0F27                     	;# 
  7735  0F28                     	;# 
  7736  0F29                     	;# 
  7737  0F2A                     	;# 
  7738  0F2B                     	;# 
  7739  0F2C                     	;# 
  7740  0F2D                     	;# 
  7741  0F2E                     	;# 
  7742  0F2F                     	;# 
  7743  0F30                     	;# 
  7744  0F31                     	;# 
  7745  0F32                     	;# 
  7746  0F38                     	;# 
  7747  0F39                     	;# 
  7748  0F3A                     	;# 
  7749  0F3B                     	;# 
  7750  0F3C                     	;# 
  7751  0F3D                     	;# 
  7752  0F3E                     	;# 
  7753  0F3F                     	;# 
  7754  0F40                     	;# 
  7755  0F41                     	;# 
  7756  0F43                     	;# 
  7757  0F44                     	;# 
  7758  0F45                     	;# 
  7759  0F46                     	;# 
  7760  0F47                     	;# 
  7761  0F48                     	;# 
  7762  0F49                     	;# 
  7763  0F4A                     	;# 
  7764  0F4B                     	;# 
  7765  0F4C                     	;# 
  7766  0F4E                     	;# 
  7767  0F4F                     	;# 
  7768  0F50                     	;# 
  7769  0F51                     	;# 
  7770  0F52                     	;# 
  7771  0F53                     	;# 
  7772  0F54                     	;# 
  7773  0F55                     	;# 
  7774  0F56                     	;# 
  7775  0F57                     	;# 
  7776  0F59                     	;# 
  7777  0F5A                     	;# 
  7778  0F5B                     	;# 
  7779  0F5C                     	;# 
  7780  0F5D                     	;# 
  7781  0F61                     	;# 
  7782  0F62                     	;# 
  7783  0F64                     	;# 
  7784  0F65                     	;# 
  7785  0F66                     	;# 
  7786  0F67                     	;# 
  7787  0F68                     	;# 
  7788  0F69                     	;# 
  7789  0F6A                     	;# 
  7790  0F6B                     	;# 
  7791  0F6C                     	;# 
  7792  0F6D                     	;# 
  7793  0FE4                     	;# 
  7794  0FE5                     	;# 
  7795  0FE6                     	;# 
  7796  0FE7                     	;# 
  7797  0FE8                     	;# 
  7798  0FE9                     	;# 
  7799  0FEA                     	;# 
  7800  0FEB                     	;# 
  7801  0FED                     	;# 
  7802  0FEE                     	;# 
  7803  0FEF                     	;# 
  7804  0000                     	;# 
  7805  0001                     	;# 
  7806  0002                     	;# 
  7807  0003                     	;# 
  7808  0004                     	;# 
  7809  0005                     	;# 
  7810  0006                     	;# 
  7811  0007                     	;# 
  7812  0008                     	;# 
  7813  0009                     	;# 
  7814  000A                     	;# 
  7815  000B                     	;# 
  7816  000C                     	;# 
  7817  000D                     	;# 
  7818  000E                     	;# 
  7819  000F                     	;# 
  7820  0010                     	;# 
  7821  0011                     	;# 
  7822  0012                     	;# 
  7823  0013                     	;# 
  7824  0014                     	;# 
  7825  0015                     	;# 
  7826  0016                     	;# 
  7827  0017                     	;# 
  7828  0018                     	;# 
  7829  0019                     	;# 
  7830  001A                     	;# 
  7831  001C                     	;# 
  7832  001C                     	;# 
  7833  001D                     	;# 
  7834  001D                     	;# 
  7835  001E                     	;# 
  7836  001F                     	;# 
  7837  008C                     	;# 
  7838  008C                     	;# 
  7839  008D                     	;# 
  7840  008E                     	;# 
  7841  008E                     	;# 
  7842  008F                     	;# 
  7843  0090                     	;# 
  7844  0090                     	;# 
  7845  0091                     	;# 
  7846  0093                     	;# 
  7847  0094                     	;# 
  7848  0095                     	;# 
  7849  0096                     	;# 
  7850  0097                     	;# 
  7851  0098                     	;# 
  7852  0099                     	;# 
  7853  009A                     	;# 
  7854  009B                     	;# 
  7855  009C                     	;# 
  7856  009D                     	;# 
  7857  009E                     	;# 
  7858  010C                     	;# 
  7859  010D                     	;# 
  7860  010E                     	;# 
  7861  010E                     	;# 
  7862  010F                     	;# 
  7863  0110                     	;# 
  7864  0110                     	;# 
  7865  0111                     	;# 
  7866  0112                     	;# 
  7867  0112                     	;# 
  7868  0113                     	;# 
  7869  0114                     	;# 
  7870  0114                     	;# 
  7871  0115                     	;# 
  7872  0116                     	;# 
  7873  0116                     	;# 
  7874  0117                     	;# 
  7875  0119                     	;# 
  7876  0119                     	;# 
  7877  0119                     	;# 
  7878  011A                     	;# 
  7879  011A                     	;# 
  7880  011A                     	;# 
  7881  011B                     	;# 
  7882  011B                     	;# 
  7883  011B                     	;# 
  7884  011B                     	;# 
  7885  011B                     	;# 
  7886  011C                     	;# 
  7887  011C                     	;# 
  7888  011C                     	;# 
  7889  011D                     	;# 
  7890  011D                     	;# 
  7891  011D                     	;# 
  7892  011E                     	;# 
  7893  011E                     	;# 
  7894  011E                     	;# 
  7895  011F                     	;# 
  7896  011F                     	;# 
  7897  011F                     	;# 
  7898  011F                     	;# 
  7899  011F                     	;# 
  7900  018C                     	;# 
  7901  018D                     	;# 
  7902  018E                     	;# 
  7903  018F                     	;# 
  7904  0190                     	;# 
  7905  0191                     	;# 
  7906  0192                     	;# 
  7907  0196                     	;# 
  7908  0197                     	;# 
  7909  0198                     	;# 
  7910  0199                     	;# 
  7911  019A                     	;# 
  7912  019B                     	;# 
  7913  019C                     	;# 
  7914  020C                     	;# 
  7915  020C                     	;# 
  7916  020D                     	;# 
  7917  020E                     	;# 
  7918  020F                     	;# 
  7919  020F                     	;# 
  7920  0210                     	;# 
  7921  0210                     	;# 
  7922  0211                     	;# 
  7923  0211                     	;# 
  7924  0212                     	;# 
  7925  0212                     	;# 
  7926  0213                     	;# 
  7927  0214                     	;# 
  7928  0215                     	;# 
  7929  0215                     	;# 
  7930  0216                     	;# 
  7931  0216                     	;# 
  7932  0217                     	;# 
  7933  0217                     	;# 
  7934  0218                     	;# 
  7935  0218                     	;# 
  7936  0219                     	;# 
  7937  021A                     	;# 
  7938  021B                     	;# 
  7939  021B                     	;# 
  7940  021C                     	;# 
  7941  021C                     	;# 
  7942  021D                     	;# 
  7943  021D                     	;# 
  7944  021E                     	;# 
  7945  021F                     	;# 
  7946  028C                     	;# 
  7947  028C                     	;# 
  7948  028D                     	;# 
  7949  028D                     	;# 
  7950  028E                     	;# 
  7951  028F                     	;# 
  7952  0290                     	;# 
  7953  0290                     	;# 
  7954  0291                     	;# 
  7955  0292                     	;# 
  7956  0292                     	;# 
  7957  0293                     	;# 
  7958  0293                     	;# 
  7959  0294                     	;# 
  7960  0295                     	;# 
  7961  0296                     	;# 
  7962  0296                     	;# 
  7963  0297                     	;# 
  7964  0298                     	;# 
  7965  0298                     	;# 
  7966  0299                     	;# 
  7967  0299                     	;# 
  7968  029A                     	;# 
  7969  029B                     	;# 
  7970  029C                     	;# 
  7971  029C                     	;# 
  7972  029D                     	;# 
  7973  030C                     	;# 
  7974  030C                     	;# 
  7975  030D                     	;# 
  7976  030E                     	;# 
  7977  030F                     	;# 
  7978  0310                     	;# 
  7979  0310                     	;# 
  7980  0311                     	;# 
  7981  0312                     	;# 
  7982  0313                     	;# 
  7983  0314                     	;# 
  7984  0314                     	;# 
  7985  0315                     	;# 
  7986  0316                     	;# 
  7987  0317                     	;# 
  7988  0318                     	;# 
  7989  0318                     	;# 
  7990  0319                     	;# 
  7991  031A                     	;# 
  7992  031B                     	;# 
  7993  031C                     	;# 
  7994  031C                     	;# 
  7995  031D                     	;# 
  7996  031E                     	;# 
  7997  031F                     	;# 
  7998  038C                     	;# 
  7999  038C                     	;# 
  8000  038D                     	;# 
  8001  038E                     	;# 
  8002  0390                     	;# 
  8003  0390                     	;# 
  8004  0391                     	;# 
  8005  0392                     	;# 
  8006  040C                     	;# 
  8007  040D                     	;# 
  8008  040E                     	;# 
  8009  040F                     	;# 
  8010  0410                     	;# 
  8011  0411                     	;# 
  8012  0416                     	;# 
  8013  0416                     	;# 
  8014  0417                     	;# 
  8015  0418                     	;# 
  8016  0418                     	;# 
  8017  0419                     	;# 
  8018  041A                     	;# 
  8019  041A                     	;# 
  8020  041B                     	;# 
  8021  041C                     	;# 
  8022  041C                     	;# 
  8023  041D                     	;# 
  8024  041E                     	;# 
  8025  041F                     	;# 
  8026  048C                     	;# 
  8027  048C                     	;# 
  8028  048D                     	;# 
  8029  048E                     	;# 
  8030  048F                     	;# 
  8031  048F                     	;# 
  8032  0490                     	;# 
  8033  0491                     	;# 
  8034  0492                     	;# 
  8035  0492                     	;# 
  8036  0493                     	;# 
  8037  0494                     	;# 
  8038  0495                     	;# 
  8039  0495                     	;# 
  8040  0496                     	;# 
  8041  0497                     	;# 
  8042  0498                     	;# 
  8043  0499                     	;# 
  8044  049A                     	;# 
  8045  049B                     	;# 
  8046  049C                     	;# 
  8047  049D                     	;# 
  8048  050C                     	;# 
  8049  050C                     	;# 
  8050  050D                     	;# 
  8051  050E                     	;# 
  8052  050F                     	;# 
  8053  050F                     	;# 
  8054  0510                     	;# 
  8055  0511                     	;# 
  8056  0512                     	;# 
  8057  0512                     	;# 
  8058  0513                     	;# 
  8059  0514                     	;# 
  8060  0515                     	;# 
  8061  0515                     	;# 
  8062  0516                     	;# 
  8063  0517                     	;# 
  8064  0518                     	;# 
  8065  0519                     	;# 
  8066  051A                     	;# 
  8067  051B                     	;# 
  8068  051C                     	;# 
  8069  051D                     	;# 
  8070  058C                     	;# 
  8071  058C                     	;# 
  8072  058D                     	;# 
  8073  058E                     	;# 
  8074  058F                     	;# 
  8075  058F                     	;# 
  8076  0590                     	;# 
  8077  0591                     	;# 
  8078  0592                     	;# 
  8079  0593                     	;# 
  8080  060C                     	;# 
  8081  060D                     	;# 
  8082  060E                     	;# 
  8083  060F                     	;# 
  8084  0610                     	;# 
  8085  0611                     	;# 
  8086  0612                     	;# 
  8087  0613                     	;# 
  8088  0614                     	;# 
  8089  0616                     	;# 
  8090  0617                     	;# 
  8091  0618                     	;# 
  8092  0619                     	;# 
  8093  061A                     	;# 
  8094  061B                     	;# 
  8095  061C                     	;# 
  8096  061D                     	;# 
  8097  061E                     	;# 
  8098  068C                     	;# 
  8099  068D                     	;# 
  8100  068E                     	;# 
  8101  068F                     	;# 
  8102  0690                     	;# 
  8103  0691                     	;# 
  8104  0692                     	;# 
  8105  0693                     	;# 
  8106  0694                     	;# 
  8107  070C                     	;# 
  8108  070D                     	;# 
  8109  070E                     	;# 
  8110  070F                     	;# 
  8111  0710                     	;# 
  8112  0711                     	;# 
  8113  0712                     	;# 
  8114  0713                     	;# 
  8115  0714                     	;# 
  8116  0716                     	;# 
  8117  0717                     	;# 
  8118  0718                     	;# 
  8119  0719                     	;# 
  8120  071A                     	;# 
  8121  071B                     	;# 
  8122  071C                     	;# 
  8123  071D                     	;# 
  8124  071E                     	;# 
  8125  0796                     	;# 
  8126  0797                     	;# 
  8127  0798                     	;# 
  8128  0799                     	;# 
  8129  079A                     	;# 
  8130  079B                     	;# 
  8131  080C                     	;# 
  8132  080D                     	;# 
  8133  080E                     	;# 
  8134  080F                     	;# 
  8135  0810                     	;# 
  8136  0811                     	;# 
  8137  0812                     	;# 
  8138  0813                     	;# 
  8139  0814                     	;# 
  8140  081A                     	;# 
  8141  081B                     	;# 
  8142  081C                     	;# 
  8143  081D                     	;# 
  8144  081E                     	;# 
  8145  081F                     	;# 
  8146  088C                     	;# 
  8147  088D                     	;# 
  8148  088E                     	;# 
  8149  088F                     	;# 
  8150  0890                     	;# 
  8151  0891                     	;# 
  8152  0892                     	;# 
  8153  0893                     	;# 
  8154  0895                     	;# 
  8155  0896                     	;# 
  8156  0897                     	;# 
  8157  0898                     	;# 
  8158  0899                     	;# 
  8159  089A                     	;# 
  8160  089B                     	;# 
  8161  090C                     	;# 
  8162  090E                     	;# 
  8163  090F                     	;# 
  8164  091F                     	;# 
  8165  091F                     	;# 
  8166  098F                     	;# 
  8167  098F                     	;# 
  8168  0990                     	;# 
  8169  0991                     	;# 
  8170  0992                     	;# 
  8171  0993                     	;# 
  8172  0994                     	;# 
  8173  0995                     	;# 
  8174  0996                     	;# 
  8175  0997                     	;# 
  8176  0E0F                     	;# 
  8177  0E10                     	;# 
  8178  0E11                     	;# 
  8179  0E12                     	;# 
  8180  0E13                     	;# 
  8181  0E14                     	;# 
  8182  0E15                     	;# 
  8183  0E16                     	;# 
  8184  0E17                     	;# 
  8185  0E18                     	;# 
  8186  0E19                     	;# 
  8187  0E1A                     	;# 
  8188  0E1B                     	;# 
  8189  0E1C                     	;# 
  8190  0E1D                     	;# 
  8191  0E1E                     	;# 
  8192  0E1F                     	;# 
  8193  0E20                     	;# 
  8194  0E21                     	;# 
  8195  0E22                     	;# 
  8196  0E23                     	;# 
  8197  0E24                     	;# 
  8198  0E25                     	;# 
  8199  0E26                     	;# 
  8200  0E27                     	;# 
  8201  0E28                     	;# 
  8202  0E29                     	;# 
  8203  0E2A                     	;# 
  8204  0E2B                     	;# 
  8205  0E2C                     	;# 
  8206  0E2D                     	;# 
  8207  0E2E                     	;# 
  8208  0E2F                     	;# 
  8209  0E30                     	;# 
  8210  0E31                     	;# 
  8211  0E32                     	;# 
  8212  0E33                     	;# 
  8213  0E34                     	;# 
  8214  0E35                     	;# 
  8215  0E36                     	;# 
  8216  0E37                     	;# 
  8217  0E8F                     	;# 
  8218  0E90                     	;# 
  8219  0E91                     	;# 
  8220  0E92                     	;# 
  8221  0E93                     	;# 
  8222  0E94                     	;# 
  8223  0E95                     	;# 
  8224  0E96                     	;# 
  8225  0E97                     	;# 
  8226  0E9C                     	;# 
  8227  0E9D                     	;# 
  8228  0E9E                     	;# 
  8229  0EA1                     	;# 
  8230  0EA2                     	;# 
  8231  0EA3                     	;# 
  8232  0EA4                     	;# 
  8233  0EA5                     	;# 
  8234  0EA9                     	;# 
  8235  0EAA                     	;# 
  8236  0EAB                     	;# 
  8237  0EAC                     	;# 
  8238  0EB1                     	;# 
  8239  0EB2                     	;# 
  8240  0EB3                     	;# 
  8241  0EB8                     	;# 
  8242  0EB9                     	;# 
  8243  0EBA                     	;# 
  8244  0EBB                     	;# 
  8245  0EBC                     	;# 
  8246  0EBD                     	;# 
  8247  0EBE                     	;# 
  8248  0EC3                     	;# 
  8249  0EC5                     	;# 
  8250  0EC6                     	;# 
  8251  0EC7                     	;# 
  8252  0EC8                     	;# 
  8253  0EC9                     	;# 
  8254  0ECA                     	;# 
  8255  0ECB                     	;# 
  8256  0ECC                     	;# 
  8257  0F10                     	;# 
  8258  0F11                     	;# 
  8259  0F12                     	;# 
  8260  0F13                     	;# 
  8261  0F14                     	;# 
  8262  0F15                     	;# 
  8263  0F16                     	;# 
  8264  0F17                     	;# 
  8265  0F18                     	;# 
  8266  0F19                     	;# 
  8267  0F1A                     	;# 
  8268  0F1B                     	;# 
  8269  0F1C                     	;# 
  8270  0F1D                     	;# 
  8271  0F1E                     	;# 
  8272  0F1F                     	;# 
  8273  0F20                     	;# 
  8274  0F21                     	;# 
  8275  0F22                     	;# 
  8276  0F23                     	;# 
  8277  0F24                     	;# 
  8278  0F25                     	;# 
  8279  0F26                     	;# 
  8280  0F27                     	;# 
  8281  0F28                     	;# 
  8282  0F29                     	;# 
  8283  0F2A                     	;# 
  8284  0F2B                     	;# 
  8285  0F2C                     	;# 
  8286  0F2D                     	;# 
  8287  0F2E                     	;# 
  8288  0F2F                     	;# 
  8289  0F30                     	;# 
  8290  0F31                     	;# 
  8291  0F32                     	;# 
  8292  0F38                     	;# 
  8293  0F39                     	;# 
  8294  0F3A                     	;# 
  8295  0F3B                     	;# 
  8296  0F3C                     	;# 
  8297  0F3D                     	;# 
  8298  0F3E                     	;# 
  8299  0F3F                     	;# 
  8300  0F40                     	;# 
  8301  0F41                     	;# 
  8302  0F43                     	;# 
  8303  0F44                     	;# 
  8304  0F45                     	;# 
  8305  0F46                     	;# 
  8306  0F47                     	;# 
  8307  0F48                     	;# 
  8308  0F49                     	;# 
  8309  0F4A                     	;# 
  8310  0F4B                     	;# 
  8311  0F4C                     	;# 
  8312  0F4E                     	;# 
  8313  0F4F                     	;# 
  8314  0F50                     	;# 
  8315  0F51                     	;# 
  8316  0F52                     	;# 
  8317  0F53                     	;# 
  8318  0F54                     	;# 
  8319  0F55                     	;# 
  8320  0F56                     	;# 
  8321  0F57                     	;# 
  8322  0F59                     	;# 
  8323  0F5A                     	;# 
  8324  0F5B                     	;# 
  8325  0F5C                     	;# 
  8326  0F5D                     	;# 
  8327  0F61                     	;# 
  8328  0F62                     	;# 
  8329  0F64                     	;# 
  8330  0F65                     	;# 
  8331  0F66                     	;# 
  8332  0F67                     	;# 
  8333  0F68                     	;# 
  8334  0F69                     	;# 
  8335  0F6A                     	;# 
  8336  0F6B                     	;# 
  8337  0F6C                     	;# 
  8338  0F6D                     	;# 
  8339  0FE4                     	;# 
  8340  0FE5                     	;# 
  8341  0FE6                     	;# 
  8342  0FE7                     	;# 
  8343  0FE8                     	;# 
  8344  0FE9                     	;# 
  8345  0FEA                     	;# 
  8346  0FEB                     	;# 
  8347  0FED                     	;# 
  8348  0FEE                     	;# 
  8349  0FEF                     	;# 
  8350                           
  8351                           	psect	idataBANK0
  8352  0003                     __pidataBANK0:
  8353                           
  8354                           ;initializer for _updateLCD
  8355  0003  3401               	retlw	1
  8356                           
  8357                           	psect	idataBANK1
  8358  107B                     __pidataBANK1:
  8359                           
  8360                           ;initializer for _alarmPWMStart
  8361  107B  34FF               	retlw	255
  8362  107C  34FF               	retlw	255
  8363  107D  34FF               	retlw	255
  8364                           
  8365                           ;initializer for _prevLumLevel
  8366  107E  34FF               	retlw	255
  8367  107F  34FF               	retlw	255
  8368                           
  8369                           ;initializer for _prevTemp
  8370  1080  34FF               	retlw	255
  8371  1081  34FF               	retlw	255
  8372                           
  8373                           ;initializer for _TALA
  8374  1082  3405               	retlw	5
  8375                           
  8376                           ;initializer for _PMON
  8377  1083  3403               	retlw	3
  8378                           
  8379                           	psect	stringtext1
  8380  1800                     __pstringtext1:
  8381  1800                     _commands:
  8382  1800  347F               	retlw	low _cmd_rc
  8383  1801  3413               	retlw	high _cmd_rc
  8384  1802  34C0               	retlw	192
  8385  1803  3489               	retlw	low _cmd_sc
  8386  1804  3415               	retlw	high _cmd_sc
  8387  1805  34C1               	retlw	193
  8388  1806  34D0               	retlw	low _cmd_rtl
  8389  1807  3412               	retlw	high _cmd_rtl
  8390  1808  34C2               	retlw	194
  8391  1809  34A4               	retlw	low _cmd_rp
  8392  180A  3413               	retlw	high _cmd_rp
  8393  180B  34C3               	retlw	195
  8394  180C  3491               	retlw	low _cmd_mmp
  8395  180D  3408               	retlw	high _cmd_mmp
  8396  180E  34C4               	retlw	196
  8397  180F  34A3               	retlw	low _cmd_mta
  8398  1810  3411               	retlw	high _cmd_mta
  8399  1811  34C5               	retlw	197
  8400  1812  3409               	retlw	low _cmd_ra
  8401  1813  3416               	retlw	high _cmd_ra
  8402  1814  34C6               	retlw	198
  8403  1815  348E               	retlw	low _cmd_dac
  8404  1816  3416               	retlw	high _cmd_dac
  8405  1817  34C7               	retlw	199
  8406  1818  34AA               	retlw	low _cmd_dtl
  8407  1819  3414               	retlw	high _cmd_dtl
  8408  181A  34C8               	retlw	200
  8409  181B  3414               	retlw	low _cmd_aa
  8410  181C  3415               	retlw	high _cmd_aa
  8411  181D  34C9               	retlw	201
  8412  181E  34EF               	retlw	low _cmd_ir
  8413  181F  3413               	retlw	high _cmd_ir
  8414  1820  34CA               	retlw	202
  8415  1821  34F3               	retlw	low _cmd_trc
  8416  1822  3409               	retlw	high _cmd_trc
  8417  1823  34CB               	retlw	203
  8418  1824  348B               	retlw	low _cmd_tri
  8419  1825  340B               	retlw	high _cmd_tri
  8420  1826  34CC               	retlw	204
  8421  1827                     __end_of_commands:
  8422                           
  8423                           	psect	stringtext2
  8424  1836                     __pstringtext2:
  8425  1836                     _dpowers:
  8426  1836  3401               	retlw	1
  8427  1837  3400               	retlw	0
  8428  1838  340A               	retlw	10
  8429  1839  3400               	retlw	0
  8430  183A  3464               	retlw	100
  8431  183B  3400               	retlw	0
  8432  183C  34E8               	retlw	232
  8433  183D  3403               	retlw	3
  8434  183E  3410               	retlw	16
  8435  183F  3427               	retlw	39
  8436  1840                     __end_of_dpowers:
  8437                           
  8438                           	psect	nvBANK1
  8439  00DB                     __pnvBANK1:
  8440  00DB                     _INT_InterruptHandler:
  8441  00DB                     	ds	2
  8442  00DD                     _TMR5_InterruptHandler:
  8443  00DD                     	ds	2
  8444  00DF                     _timer5ReloadVal:
  8445  00DF                     	ds	2
  8446  00E1                     _TMR1_InterruptHandler:
  8447  00E1                     	ds	2
  8448  00E3                     _timer1ReloadVal:
  8449  00E3                     	ds	2
  8450  00E5                     _eusartTxBufferRemaining:
  8451  00E5                     	ds	1
  8452                           
  8453                           	psect	nvBANK2
  8454  0134                     __pnvBANK2:
  8455  0134                     _EUSART_RxDefaultInterruptHandler:
  8456  0134                     	ds	2
  8457  0136                     _EUSART_TxDefaultInterruptHandler:
  8458  0136                     	ds	2
  8459  0013                     _TRISCbits	set	19
  8460  000E                     _PORTCbits	set	14
  8461  0016                     _LATAbits	set	22
  8462  000B                     _INTCONbits	set	11
  8463  0014                     _TRISD	set	20
  8464  0013                     _TRISC	set	19
  8465  0012                     _TRISB	set	18
  8466  0011                     _TRISA	set	17
  8467  0015                     _TRISE	set	21
  8468  0018                     _LATC	set	24
  8469  0017                     _LATB	set	23
  8470  0016                     _LATA	set	22
  8471  0019                     _LATD	set	25
  8472  001A                     _LATE	set	26
  8473  0094                     _ADCON1bits	set	148
  8474  008E                     _ADPREVL	set	142
  8475  008F                     _ADPREVH	set	143
  8476  0097                     _ADSTATbits	set	151
  8477  0090                     _ADACCL	set	144
  8478  0091                     _ADACCH	set	145
  8479  0095                     _ADCON2bits	set	149
  8480  009C                     _ADPRE	set	156
  8481  0096                     _ADCON3bits	set	150
  8482  008C                     _ADRESL	set	140
  8483  008D                     _ADRESH	set	141
  8484  0093                     _ADCON0bits	set	147
  8485  009D                     _ADACQ	set	157
  8486  0093                     _ADCON0	set	147
  8487  0098                     _ADCLK	set	152
  8488  0099                     _ADACT	set	153
  8489  009A                     _ADREF	set	154
  8490  0097                     _ADSTAT	set	151
  8491  0096                     _ADCON3	set	150
  8492  0095                     _ADCON2	set	149
  8493  0094                     _ADCON1	set	148
  8494  009B                     _ADCAP	set	155
  8495  009E                     _ADPCH	set	158
  8496  0119                     _RC1REG	set	281
  8497  011D                     _RC1STAbits	set	285
  8498  011A                     _TX1REG	set	282
  8499  011E                     _TX1STAbits	set	286
  8500  011C                     _SP1BRGH	set	284
  8501  011B                     _SP1BRGL	set	283
  8502  011E                     _TX1STA	set	286
  8503  011D                     _RC1STA	set	285
  8504  011F                     _BAUD1CON	set	287
  8505  0116                     _ADERRL	set	278
  8506  0117                     _ADERRH	set	279
  8507  0114                     _ADFLTRL	set	276
  8508  0115                     _ADFLTRH	set	277
  8509  010C                     _ADCNT	set	268
  8510  010D                     _ADRPT	set	269
  8511  0113                     _ADSTPTH	set	275
  8512  0112                     _ADSTPTL	set	274
  8513  0111                     _ADUTHH	set	273
  8514  0110                     _ADUTHL	set	272
  8515  010F                     _ADLTHH	set	271
  8516  010E                     _ADLTHL	set	270
  8517  018E                     _SSP1MSK	set	398
  8518  018D                     _SSP1ADD	set	397
  8519  018F                     _SSP1STAT	set	399
  8520  0191                     _SSP1CON2	set	401
  8521  0190                     _SSP1CON1bits	set	400
  8522  018C                     _SSP1BUF	set	396
  8523  018F                     _SSP1STATbits	set	399
  8524  0191                     _SSP1CON2bits	set	401
  8525  0190                     _SSP1CON1	set	400
  8526  021F                     _CCPTMRS1bits	set	543
  8527  021B                     _T5GCONbits	set	539
  8528  021A                     _T5CONbits	set	538
  8529  021A                     _T5CON	set	538
  8530  0218                     _TMR5L	set	536
  8531  0219                     _TMR5H	set	537
  8532  021D                     _T5CLK	set	541
  8533  021C                     _T5GATE	set	540
  8534  021B                     _T5GCON	set	539
  8535  020F                     _T1GCONbits	set	527
  8536  020E                     _T1CONbits	set	526
  8537  020E                     _T1CON	set	526
  8538  020C                     _TMR1L	set	524
  8539  020D                     _TMR1H	set	525
  8540  0211                     _T1CLK	set	529
  8541  0210                     _T1GATE	set	528
  8542  020F                     _T1GCON	set	527
  8543  028D                     _PR2	set	653
  8544  028C                     _TMR2	set	652
  8545  028E                     _T2CONbits	set	654
  8546  0291                     _T2RSTbits	set	657
  8547  028F                     _T2HLTbits	set	655
  8548  028E                     _T2CON	set	654
  8549  028C                     _T2TMR	set	652
  8550  028D                     _T2PR	set	653
  8551  0291                     _T2RST	set	657
  8552  028F                     _T2HLT	set	655
  8553  0290                     _T2CLKCON	set	656
  8554  038C                     _PWM6DCL	set	908
  8555  038D                     _PWM6DCH	set	909
  8556  038E                     _PWM6CON	set	910
  8557  1C77                     _PWM6EN	set	7287
  8558  0710                     _PIR4bits	set	1808
  8559  071A                     _PIE4bits	set	1818
  8560  070C                     _PIR0bits	set	1804
  8561  0716                     _PIE0bits	set	1814
  8562  0719                     _PIE3bits	set	1817
  8563  070F                     _PIR3bits	set	1807
  8564  079B                     _PMD5	set	1947
  8565  079A                     _PMD4	set	1946
  8566  0799                     _PMD3	set	1945
  8567  0798                     _PMD2	set	1944
  8568  0797                     _PMD1	set	1943
  8569  0796                     _PMD0	set	1942
  8570  081F                     _NVMCON2	set	2079
  8571  081C                     _NVMDATL	set	2076
  8572  081D                     _NVMDATH	set	2077
  8573  081E                     _NVMCON1bits	set	2078
  8574  081B                     _NVMADRH	set	2075
  8575  081A                     _NVMADRL	set	2074
  8576  0892                     _OSCTUNE	set	2194
  8577  0893                     _OSCFRQ	set	2195
  8578  0891                     _OSCEN	set	2193
  8579  088F                     _OSCCON3	set	2191
  8580  088D                     _OSCCON1	set	2189
  8581  0EC6                     _SSP1DATPPS	set	3782
  8582  0EC5                     _SSP1CLKPPS	set	3781
  8583  0ECB                     _RXPPS	set	3787
  8584  0E90                     _INTPPS	set	3728
  8585  0F26                     _RC6PPS	set	3878
  8586  0F16                     _RA6PPS	set	3862
  8587  0F24                     _RC4PPS	set	3876
  8588  0F23                     _RC3PPS	set	3875
  8589  0F67                     _SLRCONE	set	3943
  8590  0F5C                     _SLRCOND	set	3932
  8591  0F51                     _SLRCONC	set	3921
  8592  0F46                     _SLRCONB	set	3910
  8593  0F3B                     _SLRCONA	set	3899
  8594  0F5B                     _ODCOND	set	3931
  8595  0F50                     _ODCONC	set	3920
  8596  0F45                     _ODCONB	set	3909
  8597  0F3A                     _ODCONA	set	3898
  8598  0F66                     _ODCONE	set	3942
  8599  0F4F                     _WPUC	set	3919
  8600  0F39                     _WPUA	set	3897
  8601  0F44                     _WPUB	set	3908
  8602  0F65                     _WPUE	set	3941
  8603  0F5A                     _WPUD	set	3930
  8604  0F38                     _ANSELA	set	3896
  8605  0F64                     _ANSELE	set	3940
  8606  0F43                     _ANSELB	set	3907
  8607  0F4E                     _ANSELC	set	3918
  8608  0F59                     _ANSELD	set	3929
  8609  7A7C                     _WPUC4	set	31356
  8610  7A7B                     _WPUC3	set	31355
  8611                           
  8612                           	psect	stringtext3
  8613  1827                     __pstringtext3:
  8614  1827                     STR_1:
  8615  1827  3425               	retlw	37	;'%'
  8616  1828  3430               	retlw	48	;'0'
  8617  1829  3432               	retlw	50	;'2'
  8618  182A  3464               	retlw	100	;'d'
  8619  182B  343A               	retlw	58	;':'
  8620  182C  3425               	retlw	37	;'%'
  8621  182D  3430               	retlw	48	;'0'
  8622  182E  3432               	retlw	50	;'2'
  8623  182F  3464               	retlw	100	;'d'
  8624  1830  343A               	retlw	58	;':'
  8625  1831  3425               	retlw	37	;'%'
  8626  1832  3430               	retlw	48	;'0'
  8627  1833  3432               	retlw	50	;'2'
  8628  1834  3464               	retlw	100	;'d'
  8629  1835  3400               	retlw	0
  8630                           
  8631                           	psect	stringtext4
  8632  1840                     __pstringtext4:
  8633  1840                     STR_3:
  8634  1840  3425               	retlw	37	;'%'
  8635  1841  3430               	retlw	48	;'0'
  8636  1842  3432               	retlw	50	;'2'
  8637  1843  3464               	retlw	100	;'d'
  8638  1844  3420               	retlw	32	;' '
  8639  1845  3443               	retlw	67	;'C'
  8640  1846  3400               	retlw	0
  8641                           
  8642                           	psect	stringtext5
  8643  1847                     __pstringtext5:
  8644  1847                     STR_5:
  8645  1847  344C               	retlw	76	;'L'
  8646  1848  3420               	retlw	32	;' '
  8647  1849  3425               	retlw	37	;'%'
  8648  184A  3464               	retlw	100	;'d'
  8649  184B  3400               	retlw	0
  8650                           
  8651                           	psect	stringtext6
  8652  184C                     __pstringtext6:
  8653  184C                     STR_7:
  8654  184C  3443               	retlw	67	;'C'
  8655  184D  3454               	retlw	84	;'T'
  8656  184E  344C               	retlw	76	;'L'
  8657  184F  3400               	retlw	0
  8658                           
  8659                           	psect	stringtext7
  8660  0000                     __pstringtext7:
  8661  1840                     
  8662                           	psect	cinit
  8663  0060                     start_initialization:	
  8664                           ; #config settings
  8665                           
  8666  0060                     __initialization:
  8667                           
  8668                           ; Initialize objects allocated to BANK0
  8669  0060  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  8670  0063  00EF               	movwf	__pdataBANK0& (0+127)
  8671                           
  8672                           ; Initialize objects allocated to BANK1
  8673  0064  307B               	movlw	low __pidataBANK1
  8674  0065  0084               	movwf	4
  8675  0066  3090               	movlw	(high __pidataBANK1)| (0+128)
  8676  0067  0085               	movwf	5
  8677  0068  30E6               	movlw	low __pdataBANK1
  8678  0069  0086               	movwf	6
  8679  006A  3000               	movlw	high __pdataBANK1
  8680  006B  0087               	movwf	7
  8681  006C  3009               	movlw	9
  8682  006D  3190  200D  3180   	fcall	init_ram
  8683                           
  8684                           ; Clear objects allocated to COMMON
  8685  0070  01FD               	clrf	__pbssCOMMON& (0+127)
  8686                           
  8687                           ; Clear objects allocated to BANK0
  8688  0071  305F               	movlw	low __pbssBANK0
  8689  0072  0084               	movwf	4
  8690  0073  3000               	movlw	high __pbssBANK0
  8691  0074  0085               	movwf	5
  8692  0075  3010               	movlw	16
  8693  0076  3190  2007  3180   	fcall	clear_ram0
  8694                           
  8695                           ; Clear objects allocated to BANK1
  8696  0079  30C0               	movlw	low __pbssBANK1
  8697  007A  0084               	movwf	4
  8698  007B  3000               	movlw	high __pbssBANK1
  8699  007C  0085               	movwf	5
  8700  007D  301B               	movlw	27
  8701  007E  3190  2007  3180   	fcall	clear_ram0
  8702                           
  8703                           ; Clear objects allocated to BANK2
  8704  0081  3020               	movlw	low __pbssBANK2
  8705  0082  0084               	movwf	4
  8706  0083  3001               	movlw	high __pbssBANK2
  8707  0084  0085               	movwf	5
  8708  0085  3014               	movlw	20
  8709  0086  3190  2007  3180   	fcall	clear_ram0
  8710                           
  8711                           ; Clear objects allocated to BANK3
  8712  0089  30A0               	movlw	low __pbssBANK3
  8713  008A  0084               	movwf	4
  8714  008B  3001               	movlw	high __pbssBANK3
  8715  008C  0085               	movwf	5
  8716  008D  3040               	movlw	64
  8717  008E  3190  2007  3180   	fcall	clear_ram0
  8718                           
  8719                           ; Clear objects allocated to BANK4
  8720  0091  3020               	movlw	low __pbssBANK4
  8721  0092  0084               	movwf	4
  8722  0093  3002               	movlw	high __pbssBANK4
  8723  0094  0085               	movwf	5
  8724  0095  3040               	movlw	64
  8725  0096  3190  2007  3180   	fcall	clear_ram0
  8726  0099                     end_of_initialization:	
  8727                           ;End of C runtime variable initialization code
  8728                           
  8729  0099                     __end_of__initialization:
  8730  0099  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8731  009A  0020               	movlb	0
  8732  009B  3180  289D         	ljmp	_main	;jump to C main() function
  8733                           
  8734                           	psect	bssCOMMON
  8735  007D                     __pbssCOMMON:
  8736  007D                     _iwrite:
  8737  007D                     	ds	1
  8738                           
  8739                           	psect	bssBANK0
  8740  005F                     __pbssBANK0:
  8741  005F                     _t:
  8742  005F                     	ds	3
  8743  0062                     _modeFlag:
  8744  0062                     	ds	2
  8745  0064                     _editingClockAlarm:
  8746  0064                     	ds	2
  8747  0066                     _iread:
  8748  0066                     	ds	1
  8749  0067                     _flagS1pushed:
  8750  0067                     	ds	1
  8751  0068                     _lumLevel:
  8752  0068                     	ds	1
  8753  0069                     _temp:
  8754  0069                     	ds	1
  8755  006A                     _ALAF:
  8756  006A                     	ds	1
  8757  006B                     _NREG:
  8758  006B                     	ds	1
  8759  006C                     _eusartRxHead:
  8760  006C                     	ds	1
  8761  006D                     _eusartTxTail:
  8762  006D                     	ds	1
  8763  006E                     _eusartTxHead:
  8764  006E                     	ds	1
  8765                           
  8766                           	psect	dataBANK0
  8767  006F                     __pdataBANK0:
  8768  006F                     _updateLCD:
  8769  006F                     	ds	1
  8770                           
  8771                           	psect	bssBANK1
  8772  00C0                     __pbssBANK1:
  8773  00C0                     _clkAlarm:
  8774  00C0                     	ds	4
  8775  00C4                     update_menuLCD@F12927:
  8776  00C4                     	ds	3
  8777  00C7                     _lumAlarm:
  8778  00C7                     	ds	3
  8779  00CA                     _tempAlarm:
  8780  00CA                     	ds	3
  8781  00CD                     _dimingLed:
  8782  00CD                     	ds	2
  8783  00CF                     _i2c1_driver_i2cISR:
  8784  00CF                     	ds	2
  8785  00D1                     _i2c1_driver_busCollisionISR:
  8786  00D1                     	ds	2
  8787  00D3                     _flagNr:
  8788  00D3                     	ds	1
  8789  00D4                     _nr:
  8790  00D4                     	ds	1
  8791  00D5                     _PWM_on:
  8792  00D5                     	ds	1
  8793  00D6                     _editingLumAlarm:
  8794  00D6                     	ds	1
  8795  00D7                     _editingTempAlarm:
  8796  00D7                     	ds	1
  8797  00D8                     _S1_Value:
  8798  00D8                     	ds	1
  8799  00D9                     _eusartRxCount:
  8800  00D9                     	ds	1
  8801  00DA                     _eusartRxTail:
  8802  00DA                     	ds	1
  8803                           
  8804                           	psect	dataBANK1
  8805  00E6                     __pdataBANK1:
  8806  00E6                     _alarmPWMStart:
  8807  00E6                     	ds	3
  8808  00E9                     _prevLumLevel:
  8809  00E9                     	ds	2
  8810  00EB                     _prevTemp:
  8811  00EB                     	ds	2
  8812  00ED                     _TALA:
  8813  00ED                     	ds	1
  8814  00EE                     _PMON:
  8815  00EE                     	ds	1
  8816                           
  8817                           	psect	bssBANK2
  8818  0120                     __pbssBANK2:
  8819  0120                     main@F13073:
  8820  0120                     	ds	20
  8821                           
  8822                           	psect	bssBANK3
  8823  01A0                     __pbssBANK3:
  8824  01A0                     _eusartTxBuffer:
  8825  01A0                     	ds	64
  8826                           
  8827                           	psect	bssBANK4
  8828  0220                     __pbssBANK4:
  8829  0220                     _eusartRxBuffer:
  8830  0220                     	ds	64
  8831                           
  8832                           	psect	inittext
  8833  100D                     init_ram:
  8834  100D  00FE               	movwf	btemp
  8835  100E                     initloop:
  8836  100E  0012               	moviw fsr0++
  8837  100F  001E               	movwi fsr1++
  8838  1010  0BFE               	decfsz	btemp,f
  8839  1011  280E               	goto	initloop
  8840  1012  3400               	retlw	0
  8841                           
  8842                           	psect	clrtext
  8843  1007                     clear_ram0:	
  8844                           ;	Called with FSR0 containing the base address, and
  8845                           ;	WREG with the size to clear
  8846                           
  8847  1007  0064               	clrwdt	;clear the watchdog before getting into this loop
  8848  1008                     clrloop0:
  8849  1008  0180               	clrf	0	;clear RAM location pointed to by FSR
  8850  1009  3101               	addfsr 0,1
  8851  100A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8852  100B  2808               	goto	clrloop0	;have we reached the end yet?
  8853  100C  3400               	retlw	0	;all done for this memory range, return
  8854                           
  8855                           	psect	cstackBANK1
  8856  00A0                     __pcstackBANK1:
  8857  00A0                     main@buff:
  8858                           
  8859                           ; 20 bytes @ 0x0
  8860  00A0                     	ds	20
  8861  00B4                     _main$3686:
  8862                           
  8863                           ; 2 bytes @ 0x14
  8864  00B4                     	ds	2
  8865  00B6                     main@checkSumAux:
  8866                           
  8867                           ; 1 bytes @ 0x16
  8868  00B6                     	ds	1
  8869  00B7                     main@notInit:
  8870                           
  8871                           ; 1 bytes @ 0x17
  8872  00B7                     	ds	1
  8873  00B8                     main@corrupted:
  8874                           
  8875                           ; 1 bytes @ 0x18
  8876  00B8                     	ds	1
  8877  00B9                     main@i:
  8878                           
  8879                           ; 2 bytes @ 0x19
  8880  00B9                     	ds	2
  8881  00BB                     main@i_2703:
  8882                           
  8883                           ; 2 bytes @ 0x1B
  8884  00BB                     	ds	2
  8885  00BD                     main@c:
  8886                           
  8887                           ; 1 bytes @ 0x1D
  8888  00BD                     	ds	1
  8889  00BE                     main@n:
  8890                           
  8891                           ; 2 bytes @ 0x1E
  8892  00BE                     	ds	2
  8893                           
  8894                           	psect	cstackCOMMON
  8895  0070                     __pcstackCOMMON:
  8896  0070                     ?_isdigit:
  8897  0070                     ?_i2c1_driver_open:	
  8898                           ; 1 bit 
  8899                           
  8900  0070                     ?_PMD_Initialize:	
  8901                           ; 1 bit 
  8902                           
  8903  0070                     ?_OSCILLATOR_Initialize:	
  8904                           ; 1 bytes @ 0x0
  8905                           
  8906  0070                     ?_PWM6_Initialize:	
  8907                           ; 1 bytes @ 0x0
  8908                           
  8909  0070                     ?_ADCC_Initialize:	
  8910                           ; 1 bytes @ 0x0
  8911                           
  8912  0070                     ?_TMR5_Initialize:	
  8913                           ; 1 bytes @ 0x0
  8914                           
  8915  0070                     ?_TMR2_Initialize:	
  8916                           ; 1 bytes @ 0x0
  8917                           
  8918  0070                     ?_TMR1_Initialize:	
  8919                           ; 1 bytes @ 0x0
  8920                           
  8921  0070                     ?_EXT_INT_Initialize:	
  8922                           ; 1 bytes @ 0x0
  8923                           
  8924  0070                     ?_EUSART_Initialize:	
  8925                           ; 1 bytes @ 0x0
  8926                           
  8927  0070                     ?_INT_ISR:	
  8928                           ; 1 bytes @ 0x0
  8929                           
  8930  0070                     ??_INT_ISR:	
  8931                           ; 1 bytes @ 0x0
  8932                           
  8933  0070                     ?_TMR5_ISR:	
  8934                           ; 1 bytes @ 0x0
  8935                           
  8936  0070                     ?_TMR1_ISR:	
  8937                           ; 1 bytes @ 0x0
  8938                           
  8939  0070                     ?_TMR1_DefaultInterruptHandler:	
  8940                           ; 1 bytes @ 0x0
  8941                           
  8942  0070                     ??_TMR1_DefaultInterruptHandler:	
  8943                           ; 1 bytes @ 0x0
  8944                           
  8945  0070                     ?_TMR5_DefaultInterruptHandler:	
  8946                           ; 1 bytes @ 0x0
  8947                           
  8948  0070                     ??_TMR5_DefaultInterruptHandler:	
  8949                           ; 1 bytes @ 0x0
  8950                           
  8951  0070                     ?_INT_CallBack:	
  8952                           ; 1 bytes @ 0x0
  8953                           
  8954  0070                     ??_INT_CallBack:	
  8955                           ; 1 bytes @ 0x0
  8956                           
  8957  0070                     ?_EUSART_Receive_ISR:	
  8958                           ; 1 bytes @ 0x0
  8959                           
  8960  0070                     ??_EUSART_Receive_ISR:	
  8961                           ; 1 bytes @ 0x0
  8962                           
  8963  0070                     ?_EUSART_Transmit_ISR:	
  8964                           ; 1 bytes @ 0x0
  8965                           
  8966  0070                     ??_EUSART_Transmit_ISR:	
  8967                           ; 1 bytes @ 0x0
  8968                           
  8969  0070                     ?_ReadI2C:	
  8970                           ; 1 bytes @ 0x0
  8971                           
  8972  0070                     ??_ReadI2C:	
  8973                           ; 1 bytes @ 0x0
  8974                           
  8975  0070                     ?_WriteI2C:	
  8976                           ; 1 bytes @ 0x0
  8977                           
  8978  0070                     ?_PIN_MANAGER_Initialize:	
  8979                           ; 1 bytes @ 0x0
  8980                           
  8981  0070                     ?_SYSTEM_Initialize:	
  8982                           ; 1 bytes @ 0x0
  8983                           
  8984  0070                     ?_INTERRUPT_InterruptManager:	
  8985                           ; 1 bytes @ 0x0
  8986                           
  8987  0070                     ?_TMR1_WriteTimer:	
  8988                           ; 1 bytes @ 0x0
  8989                           
  8990  0070                     ?_TMR5_StartTimer:	
  8991                           ; 1 bytes @ 0x0
  8992                           
  8993  0070                     ?_TMR5_StopTimer:	
  8994                           ; 1 bytes @ 0x0
  8995                           
  8996  0070                     ?_TMR5_WriteTimer:	
  8997                           ; 1 bytes @ 0x0
  8998                           
  8999  0070                     ?_TMR2_Start:	
  9000                           ; 1 bytes @ 0x0
  9001                           
  9002  0070                     ?_TMR2_StartTimer:	
  9003                           ; 1 bytes @ 0x0
  9004                           
  9005  0070                     ?_TMR2_Stop:	
  9006                           ; 1 bytes @ 0x0
  9007                           
  9008  0070                     ?_TMR2_StopTimer:	
  9009                           ; 1 bytes @ 0x0
  9010                           
  9011  0070                     ?_INT_DefaultInterruptHandler:	
  9012                           ; 1 bytes @ 0x0
  9013                           
  9014  0070                     ??_INT_DefaultInterruptHandler:	
  9015                           ; 1 bytes @ 0x0
  9016                           
  9017  0070                     ?_EUSART_is_rx_ready:	
  9018                           ; 1 bytes @ 0x0
  9019                           
  9020  0070                     ?_EUSART_Read:	
  9021                           ; 1 bytes @ 0x0
  9022                           
  9023  0070                     ?_EUSART_Write:	
  9024                           ; 1 bytes @ 0x0
  9025                           
  9026  0070                     ?_getch:	
  9027                           ; 1 bytes @ 0x0
  9028                           
  9029  0070                     ?_putch:	
  9030                           ; 1 bytes @ 0x0
  9031                           
  9032  0070                     ?_tsttc:	
  9033                           ; 1 bytes @ 0x0
  9034                           
  9035  0070                     ?_LCDsend:	
  9036                           ; 1 bytes @ 0x0
  9037                           
  9038  0070                     ?_LCDinit:	
  9039                           ; 1 bytes @ 0x0
  9040                           
  9041  0070                     ?_LCDcmd:	
  9042                           ; 1 bytes @ 0x0
  9043                           
  9044  0070                     ?_LCDchar:	
  9045                           ; 1 bytes @ 0x0
  9046                           
  9047  0070                     ?_PWM_Output_D4_Enable:	
  9048                           ; 1 bytes @ 0x0
  9049                           
  9050  0070                     ?_PWM_Output_D4_Disable:	
  9051                           ; 1 bytes @ 0x0
  9052                           
  9053  0070                     ?_Clock_ISR:	
  9054                           ; 1 bytes @ 0x0
  9055                           
  9056  0070                     ?_update_menuLCD:	
  9057                           ; 1 bytes @ 0x0
  9058                           
  9059  0070                     ?_monitoring_ISR:	
  9060                           ; 1 bytes @ 0x0
  9061                           
  9062  0070                     ?_S1button:	
  9063                           ; 1 bytes @ 0x0
  9064                           
  9065  0070                     ?_editClock:	
  9066                           ; 1 bytes @ 0x0
  9067                           
  9068  0070                     ?_editTemp:	
  9069                           ; 1 bytes @ 0x0
  9070                           
  9071  0070                     ?_editLum:	
  9072                           ; 1 bytes @ 0x0
  9073                           
  9074  0070                     ?_toggleAlarms:	
  9075                           ; 1 bytes @ 0x0
  9076                           
  9077  0070                     ?_S1_ISR:	
  9078                           ; 1 bytes @ 0x0
  9079                           
  9080  0070                     ??_S1_ISR:	
  9081                           ; 1 bytes @ 0x0
  9082                           
  9083  0070                     ?_sendOKMessage:	
  9084                           ; 1 bytes @ 0x0
  9085                           
  9086  0070                     ?_sendERRORMessage:	
  9087                           ; 1 bytes @ 0x0
  9088                           
  9089  0070                     ?_main:	
  9090                           ; 1 bytes @ 0x0
  9091                           
  9092  0070                     ?i1_WriteI2C:	
  9093                           ; 1 bytes @ 0x0
  9094                           
  9095  0070                     ??i1_WriteI2C:	
  9096                           ; 1 bytes @ 0x0
  9097                           
  9098  0070                     ?_ADCC_GetSingleConversion:	
  9099                           ; 1 bytes @ 0x0
  9100                           
  9101  0070                     ?i1___wmul:	
  9102                           ; 2 bytes @ 0x0
  9103                           
  9104  0070                     TMR1_WriteTimer@timerVal:	
  9105                           ; 2 bytes @ 0x0
  9106                           
  9107  0070                     TMR5_WriteTimer@timerVal:	
  9108                           ; 2 bytes @ 0x0
  9109                           
  9110  0070                     i1___wmul@multiplier:	
  9111                           ; 2 bytes @ 0x0
  9112                           
  9113                           
  9114                           ; 2 bytes @ 0x0
  9115  0070                     	ds	1
  9116  0071                     i1WriteI2C@data_out:
  9117                           
  9118                           ; 1 bytes @ 0x1
  9119  0071                     	ds	1
  9120  0072                     ??_TMR1_WriteTimer:
  9121  0072                     ??_TMR5_WriteTimer:	
  9122                           ; 1 bytes @ 0x2
  9123                           
  9124  0072                     ??_tsttc:	
  9125                           ; 1 bytes @ 0x2
  9126                           
  9127  0072                     i1___wmul@multiplicand:	
  9128                           ; 1 bytes @ 0x2
  9129                           
  9130                           
  9131                           ; 2 bytes @ 0x2
  9132  0072                     	ds	1
  9133  0073                     ??_ADCC_GetSingleConversion:
  9134  0073                     ADCC_GetSingleConversion@channel:	
  9135                           ; 1 bytes @ 0x3
  9136                           
  9137  0073                     tsttc@value:	
  9138                           ; 1 bytes @ 0x3
  9139                           
  9140                           
  9141                           ; 1 bytes @ 0x3
  9142  0073                     	ds	1
  9143  0074                     ??i1___wmul:
  9144  0074                     i1___wmul@product:	
  9145                           ; 1 bytes @ 0x4
  9146                           
  9147                           
  9148                           ; 2 bytes @ 0x4
  9149  0074                     	ds	2
  9150  0076                     ?i1_DATAEE_WriteByte:
  9151  0076                     i1DATAEE_WriteByte@bAdd:	
  9152                           ; 1 bytes @ 0x6
  9153                           
  9154                           
  9155                           ; 2 bytes @ 0x6
  9156  0076                     	ds	2
  9157  0078                     i1DATAEE_WriteByte@bData:
  9158                           
  9159                           ; 1 bytes @ 0x8
  9160  0078                     	ds	1
  9161  0079                     ??i1_DATAEE_WriteByte:
  9162  0079                     i1DATAEE_WriteByte@GIEBitValue:	
  9163                           ; 1 bytes @ 0x9
  9164                           
  9165                           
  9166                           ; 1 bytes @ 0x9
  9167  0079                     	ds	1
  9168  007A                     ??_Clock_ISR:
  9169  007A                     ??_monitoring_ISR:	
  9170                           ; 1 bytes @ 0xA
  9171                           
  9172                           
  9173                           ; 1 bytes @ 0xA
  9174  007A                     	ds	1
  9175  007B                     ??_TMR1_ISR:
  9176                           
  9177                           ; 1 bytes @ 0xB
  9178  007B                     	ds	2
  9179  007D                     ??_TMR5_ISR:
  9180  007D                     ??_INTERRUPT_InterruptManager:	
  9181                           ; 1 bytes @ 0xD
  9182                           
  9183                           
  9184                           	psect	cstackBANK0
  9185  0020                     __pcstackBANK0:	
  9186                           ; 1 bytes @ 0xD
  9187                           
  9188  0020                     ??_PMD_Initialize:
  9189  0020                     ??_OSCILLATOR_Initialize:	
  9190                           ; 1 bytes @ 0x0
  9191                           
  9192  0020                     ??_PWM6_Initialize:	
  9193                           ; 1 bytes @ 0x0
  9194                           
  9195  0020                     ??_ADCC_Initialize:	
  9196                           ; 1 bytes @ 0x0
  9197                           
  9198  0020                     ??_TMR2_Initialize:	
  9199                           ; 1 bytes @ 0x0
  9200                           
  9201  0020                     ?_TMR1_SetInterruptHandler:	
  9202                           ; 1 bytes @ 0x0
  9203                           
  9204  0020                     ?_TMR5_SetInterruptHandler:	
  9205                           ; 1 bytes @ 0x0
  9206                           
  9207  0020                     ?_EUSART_SetRxInterruptHandler:	
  9208                           ; 1 bytes @ 0x0
  9209                           
  9210  0020                     ?_EUSART_SetTxInterruptHandler:	
  9211                           ; 1 bytes @ 0x0
  9212                           
  9213  0020                     ?_memset:	
  9214                           ; 1 bytes @ 0x0
  9215                           
  9216  0020                     ??_isdigit:	
  9217                           ; 1 bytes @ 0x0
  9218                           
  9219  0020                     ??_WriteI2C:	
  9220                           ; 1 bytes @ 0x0
  9221                           
  9222  0020                     ??_PIN_MANAGER_Initialize:	
  9223                           ; 1 bytes @ 0x0
  9224                           
  9225  0020                     ??_i2c1_driver_open:	
  9226                           ; 1 bytes @ 0x0
  9227                           
  9228  0020                     ?_setTimer5ReloadVal:	
  9229                           ; 1 bytes @ 0x0
  9230                           
  9231  0020                     ??_TMR5_StartTimer:	
  9232                           ; 1 bytes @ 0x0
  9233                           
  9234  0020                     ??_TMR5_StopTimer:	
  9235                           ; 1 bytes @ 0x0
  9236                           
  9237  0020                     ?_PWM6_LoadDutyValue:	
  9238                           ; 1 bytes @ 0x0
  9239                           
  9240  0020                     ??_TMR2_Start:	
  9241                           ; 1 bytes @ 0x0
  9242                           
  9243  0020                     ??_TMR2_StartTimer:	
  9244                           ; 1 bytes @ 0x0
  9245                           
  9246  0020                     ??_TMR2_Stop:	
  9247                           ; 1 bytes @ 0x0
  9248                           
  9249  0020                     ??_TMR2_StopTimer:	
  9250                           ; 1 bytes @ 0x0
  9251                           
  9252  0020                     ?_DATAEE_WriteByte:	
  9253                           ; 1 bytes @ 0x0
  9254                           
  9255  0020                     ?_INT_SetInterruptHandler:	
  9256                           ; 1 bytes @ 0x0
  9257                           
  9258  0020                     ??_EUSART_is_rx_ready:	
  9259                           ; 1 bytes @ 0x0
  9260                           
  9261  0020                     ??_EUSART_Read:	
  9262                           ; 1 bytes @ 0x0
  9263                           
  9264  0020                     ??_EUSART_Write:	
  9265                           ; 1 bytes @ 0x0
  9266                           
  9267  0020                     ?_differenceBetweenTimePeriod:	
  9268                           ; 1 bytes @ 0x0
  9269                           
  9270  0020                     ??_PWM_Output_D4_Enable:	
  9271                           ; 1 bytes @ 0x0
  9272                           
  9273  0020                     ??_PWM_Output_D4_Disable:	
  9274                           ; 1 bytes @ 0x0
  9275                           
  9276  0020                     ??_S1button:	
  9277                           ; 1 bytes @ 0x0
  9278                           
  9279  0020                     ?___wmul:	
  9280                           ; 1 bytes @ 0x0
  9281                           
  9282  0020                     ?___lwdiv:	
  9283                           ; 2 bytes @ 0x0
  9284                           
  9285  0020                     ?___lmul:	
  9286                           ; 2 bytes @ 0x0
  9287                           
  9288  0020                     _isdigit$3163:	
  9289                           ; 4 bytes @ 0x0
  9290                           
  9291  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  9292                           ; 1 bytes @ 0x0
  9293                           
  9294  0020                     setTimer5ReloadVal@val:	
  9295                           ; 2 bytes @ 0x0
  9296                           
  9297  0020                     TMR5_SetInterruptHandler@InterruptHandler:	
  9298                           ; 2 bytes @ 0x0
  9299                           
  9300  0020                     PWM6_LoadDutyValue@dutyValue:	
  9301                           ; 2 bytes @ 0x0
  9302                           
  9303  0020                     DATAEE_WriteByte@bAdd:	
  9304                           ; 2 bytes @ 0x0
  9305                           
  9306  0020                     INT_SetInterruptHandler@InterruptHandler:	
  9307                           ; 2 bytes @ 0x0
  9308                           
  9309  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  9310                           ; 2 bytes @ 0x0
  9311                           
  9312  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  9313                           ; 2 bytes @ 0x0
  9314                           
  9315  0020                     ___wmul@multiplier:	
  9316                           ; 2 bytes @ 0x0
  9317                           
  9318  0020                     ___lwdiv@divisor:	
  9319                           ; 2 bytes @ 0x0
  9320                           
  9321  0020                     memset@c:	
  9322                           ; 2 bytes @ 0x0
  9323                           
  9324  0020                     differenceBetweenTimePeriod@start:	
  9325                           ; 2 bytes @ 0x0
  9326                           
  9327  0020                     ___lmul@multiplier:	
  9328                           ; 3 bytes @ 0x0
  9329                           
  9330                           
  9331                           ; 4 bytes @ 0x0
  9332  0020                     	ds	1
  9333  0021                     WriteI2C@data_out:
  9334  0021                     EUSART_Read@readValue:	
  9335                           ; 1 bytes @ 0x1
  9336                           
  9337  0021                     EUSART_Write@txData:	
  9338                           ; 1 bytes @ 0x1
  9339                           
  9340  0021                     isdigit@c:	
  9341                           ; 1 bytes @ 0x1
  9342                           
  9343                           
  9344                           ; 1 bytes @ 0x1
  9345  0021                     	ds	1
  9346  0022                     ??_TMR5_Initialize:
  9347  0022                     ??_TMR1_Initialize:	
  9348                           ; 1 bytes @ 0x2
  9349                           
  9350  0022                     ??_EXT_INT_Initialize:	
  9351                           ; 1 bytes @ 0x2
  9352                           
  9353  0022                     ??_EUSART_Initialize:	
  9354                           ; 1 bytes @ 0x2
  9355                           
  9356  0022                     ??_TMR1_SetInterruptHandler:	
  9357                           ; 1 bytes @ 0x2
  9358                           
  9359  0022                     ??_TMR5_SetInterruptHandler:	
  9360                           ; 1 bytes @ 0x2
  9361                           
  9362  0022                     ??_EUSART_SetRxInterruptHandler:	
  9363                           ; 1 bytes @ 0x2
  9364                           
  9365  0022                     ??_EUSART_SetTxInterruptHandler:	
  9366                           ; 1 bytes @ 0x2
  9367                           
  9368  0022                     ??_setTimer5ReloadVal:	
  9369                           ; 1 bytes @ 0x2
  9370                           
  9371  0022                     ??_PWM6_LoadDutyValue:	
  9372                           ; 1 bytes @ 0x2
  9373                           
  9374  0022                     ??_INT_SetInterruptHandler:	
  9375                           ; 1 bytes @ 0x2
  9376                           
  9377  0022                     ??_getch:	
  9378                           ; 1 bytes @ 0x2
  9379                           
  9380  0022                     ??_putch:	
  9381                           ; 1 bytes @ 0x2
  9382                           
  9383  0022                     ??_LCDsend:	
  9384                           ; 1 bytes @ 0x2
  9385                           
  9386  0022                     ?_LCDsend2x4:	
  9387                           ; 1 bytes @ 0x2
  9388                           
  9389  0022                     DATAEE_WriteByte@bData:	
  9390                           ; 1 bytes @ 0x2
  9391                           
  9392  0022                     putch@txData:	
  9393                           ; 1 bytes @ 0x2
  9394                           
  9395  0022                     LCDsend2x4@mode:	
  9396                           ; 1 bytes @ 0x2
  9397                           
  9398  0022                     ___wmul@multiplicand:	
  9399                           ; 1 bytes @ 0x2
  9400                           
  9401  0022                     ___lwdiv@dividend:	
  9402                           ; 2 bytes @ 0x2
  9403                           
  9404  0022                     memset@n:	
  9405                           ; 2 bytes @ 0x2
  9406                           
  9407                           
  9408                           ; 2 bytes @ 0x2
  9409  0022                     	ds	1
  9410  0023                     ??_SYSTEM_Initialize:
  9411  0023                     ??_DATAEE_WriteByte:	
  9412                           ; 1 bytes @ 0x3
  9413                           
  9414  0023                     ??_LCDsend2x4:	
  9415                           ; 1 bytes @ 0x3
  9416                           
  9417  0023                     ?_sendMessage:	
  9418                           ; 1 bytes @ 0x3
  9419                           
  9420  0023                     DATAEE_WriteByte@GIEBitValue:	
  9421                           ; 1 bytes @ 0x3
  9422                           
  9423  0023                     LCDsend@c:	
  9424                           ; 1 bytes @ 0x3
  9425                           
  9426  0023                     sendMessage@num:	
  9427                           ; 1 bytes @ 0x3
  9428                           
  9429  0023                     differenceBetweenTimePeriod@stop:	
  9430                           ; 2 bytes @ 0x3
  9431                           
  9432                           
  9433                           ; 3 bytes @ 0x3
  9434  0023                     	ds	1
  9435  0024                     ??_memset:
  9436  0024                     ??___wmul:	
  9437                           ; 1 bytes @ 0x4
  9438                           
  9439  0024                     ??___lwdiv:	
  9440                           ; 1 bytes @ 0x4
  9441                           
  9442  0024                     ___wmul@product:	
  9443                           ; 1 bytes @ 0x4
  9444                           
  9445  0024                     ___lmul@multiplicand:	
  9446                           ; 2 bytes @ 0x4
  9447                           
  9448                           
  9449                           ; 4 bytes @ 0x4
  9450  0024                     	ds	1
  9451  0025                     LCDsend2x4@c:
  9452  0025                     sendMessage@buffer:	
  9453                           ; 1 bytes @ 0x5
  9454                           
  9455  0025                     memset@p:	
  9456                           ; 1 bytes @ 0x5
  9457                           
  9458  0025                     ___lwdiv@quotient:	
  9459                           ; 1 bytes @ 0x5
  9460                           
  9461                           
  9462                           ; 2 bytes @ 0x5
  9463  0025                     	ds	1
  9464  0026                     ?_DATAEE_ReadByte:
  9465  0026                     ??_sendMessage:	
  9466                           ; 1 bytes @ 0x6
  9467                           
  9468  0026                     LCDsend2x4@hc:	
  9469                           ; 1 bytes @ 0x6
  9470                           
  9471  0026                     differenceBetweenTimePeriod@diff:	
  9472                           ; 1 bytes @ 0x6
  9473                           
  9474  0026                     memset@p1:	
  9475                           ; 1 bytes @ 0x6
  9476                           
  9477  0026                     DATAEE_ReadByte@bAdd:	
  9478                           ; 1 bytes @ 0x6
  9479                           
  9480                           
  9481                           ; 2 bytes @ 0x6
  9482  0026                     	ds	1
  9483  0027                     ??_differenceBetweenTimePeriod:
  9484  0027                     LCDsend2x4@lc:	
  9485                           ; 1 bytes @ 0x7
  9486                           
  9487  0027                     ___lwdiv@counter:	
  9488                           ; 1 bytes @ 0x7
  9489                           
  9490  0027                     sendMessage@n:	
  9491                           ; 1 bytes @ 0x7
  9492                           
  9493                           
  9494                           ; 2 bytes @ 0x7
  9495  0027                     	ds	1
  9496  0028                     ??_DATAEE_ReadByte:
  9497  0028                     ??_LCDinit:	
  9498                           ; 1 bytes @ 0x8
  9499                           
  9500  0028                     ??_LCDcmd:	
  9501                           ; 1 bytes @ 0x8
  9502                           
  9503  0028                     ??_LCDchar:	
  9504                           ; 1 bytes @ 0x8
  9505                           
  9506  0028                     ??___lmul:	
  9507                           ; 1 bytes @ 0x8
  9508                           
  9509  0028                     ?___lwmod:	
  9510                           ; 1 bytes @ 0x8
  9511                           
  9512  0028                     LCDcmd@c:	
  9513                           ; 2 bytes @ 0x8
  9514                           
  9515  0028                     LCDchar@c:	
  9516                           ; 1 bytes @ 0x8
  9517                           
  9518  0028                     ___lwmod@divisor:	
  9519                           ; 1 bytes @ 0x8
  9520                           
  9521  0028                     ___lmul@product:	
  9522                           ; 2 bytes @ 0x8
  9523                           
  9524                           
  9525                           ; 4 bytes @ 0x8
  9526  0028                     	ds	1
  9527  0029                     ?_LCDstr:
  9528  0029                     ??_sendOKMessage:	
  9529                           ; 1 bytes @ 0x9
  9530                           
  9531  0029                     ??_sendERRORMessage:	
  9532                           ; 1 bytes @ 0x9
  9533                           
  9534  0029                     LCDstr@p:	
  9535                           ; 1 bytes @ 0x9
  9536                           
  9537                           
  9538                           ; 2 bytes @ 0x9
  9539  0029                     	ds	1
  9540  002A                     sendOKMessage@cmd:
  9541  002A                     sendERRORMessage@cmd:	
  9542                           ; 1 bytes @ 0xA
  9543                           
  9544  002A                     ___lwmod@dividend:	
  9545                           ; 1 bytes @ 0xA
  9546                           
  9547                           
  9548                           ; 2 bytes @ 0xA
  9549  002A                     	ds	1
  9550  002B                     ??_LCDstr:
  9551  002B                     sendOKMessage@bufw:	
  9552                           ; 1 bytes @ 0xB
  9553                           
  9554  002B                     sendERRORMessage@bufw:	
  9555                           ; 4 bytes @ 0xB
  9556                           
  9557                           
  9558                           ; 4 bytes @ 0xB
  9559  002B                     	ds	1
  9560  002C                     ??___lwmod:
  9561                           
  9562                           ; 1 bytes @ 0xC
  9563  002C                     	ds	1
  9564  002D                     ___lwmod@counter:
  9565                           
  9566                           ; 1 bytes @ 0xD
  9567  002D                     	ds	1
  9568  002E                     ?_sprintf:
  9569  002E                     LCDstr@c:	
  9570                           ; 2 bytes @ 0xE
  9571                           
  9572  002E                     sprintf@f:	
  9573                           ; 1 bytes @ 0xE
  9574                           
  9575                           
  9576                           ; 2 bytes @ 0xE
  9577  002E                     	ds	1
  9578  002F                     ?_cmd_rc:
  9579  002F                     ?_cmd_sc:	
  9580                           ; 1 bytes @ 0xF
  9581                           
  9582  002F                     ?_cmd_rtl:	
  9583                           ; 1 bytes @ 0xF
  9584                           
  9585  002F                     ?_cmd_rp:	
  9586                           ; 1 bytes @ 0xF
  9587                           
  9588  002F                     ?_cmd_mmp:	
  9589                           ; 1 bytes @ 0xF
  9590                           
  9591  002F                     ?_cmd_mta:	
  9592                           ; 1 bytes @ 0xF
  9593                           
  9594  002F                     ?_cmd_ra:	
  9595                           ; 1 bytes @ 0xF
  9596                           
  9597  002F                     ?_cmd_dac:	
  9598                           ; 1 bytes @ 0xF
  9599                           
  9600  002F                     ?_cmd_dtl:	
  9601                           ; 1 bytes @ 0xF
  9602                           
  9603  002F                     ?_cmd_aa:	
  9604                           ; 1 bytes @ 0xF
  9605                           
  9606  002F                     ?_cmd_ir:	
  9607                           ; 1 bytes @ 0xF
  9608                           
  9609  002F                     ?_cmd_trc:	
  9610                           ; 1 bytes @ 0xF
  9611                           
  9612  002F                     ?_cmd_tri:	
  9613                           ; 1 bytes @ 0xF
  9614                           
  9615  002F                     cmd_rc@num:	
  9616                           ; 1 bytes @ 0xF
  9617                           
  9618  002F                     cmd_sc@num:	
  9619                           ; 2 bytes @ 0xF
  9620                           
  9621  002F                     cmd_rtl@num:	
  9622                           ; 2 bytes @ 0xF
  9623                           
  9624  002F                     cmd_rp@num:	
  9625                           ; 2 bytes @ 0xF
  9626                           
  9627  002F                     cmd_mmp@num:	
  9628                           ; 2 bytes @ 0xF
  9629                           
  9630  002F                     cmd_mta@num:	
  9631                           ; 2 bytes @ 0xF
  9632                           
  9633  002F                     cmd_ra@num:	
  9634                           ; 2 bytes @ 0xF
  9635                           
  9636  002F                     cmd_dac@num:	
  9637                           ; 2 bytes @ 0xF
  9638                           
  9639  002F                     cmd_dtl@num:	
  9640                           ; 2 bytes @ 0xF
  9641                           
  9642  002F                     cmd_aa@num:	
  9643                           ; 2 bytes @ 0xF
  9644                           
  9645  002F                     cmd_ir@num:	
  9646                           ; 2 bytes @ 0xF
  9647                           
  9648  002F                     cmd_trc@num:	
  9649                           ; 2 bytes @ 0xF
  9650                           
  9651  002F                     cmd_tri@num:	
  9652                           ; 2 bytes @ 0xF
  9653                           
  9654                           
  9655                           ; 2 bytes @ 0xF
  9656  002F                     	ds	2
  9657  0031                     cmd_rc@buffer:
  9658  0031                     cmd_sc@buffer:	
  9659                           ; 1 bytes @ 0x11
  9660                           
  9661  0031                     cmd_rtl@buffer:	
  9662                           ; 1 bytes @ 0x11
  9663                           
  9664  0031                     cmd_rp@buffer:	
  9665                           ; 1 bytes @ 0x11
  9666                           
  9667  0031                     cmd_mmp@buffer:	
  9668                           ; 1 bytes @ 0x11
  9669                           
  9670  0031                     cmd_mta@buffer:	
  9671                           ; 1 bytes @ 0x11
  9672                           
  9673  0031                     cmd_ra@buffer:	
  9674                           ; 1 bytes @ 0x11
  9675                           
  9676  0031                     cmd_dac@buffer:	
  9677                           ; 1 bytes @ 0x11
  9678                           
  9679  0031                     cmd_dtl@buffer:	
  9680                           ; 1 bytes @ 0x11
  9681                           
  9682  0031                     cmd_aa@buffer:	
  9683                           ; 1 bytes @ 0x11
  9684                           
  9685  0031                     cmd_ir@buffer:	
  9686                           ; 1 bytes @ 0x11
  9687                           
  9688  0031                     cmd_trc@buffer:	
  9689                           ; 1 bytes @ 0x11
  9690                           
  9691  0031                     cmd_tri@buffer:	
  9692                           ; 1 bytes @ 0x11
  9693                           
  9694                           
  9695                           ; 1 bytes @ 0x11
  9696  0031                     	ds	1
  9697  0032                     ??_cmd_rc:
  9698  0032                     ??_cmd_sc:	
  9699                           ; 1 bytes @ 0x12
  9700                           
  9701  0032                     ??_cmd_rtl:	
  9702                           ; 1 bytes @ 0x12
  9703                           
  9704  0032                     ??_cmd_rp:	
  9705                           ; 1 bytes @ 0x12
  9706                           
  9707  0032                     ??_cmd_mmp:	
  9708                           ; 1 bytes @ 0x12
  9709                           
  9710  0032                     ??_cmd_mta:	
  9711                           ; 1 bytes @ 0x12
  9712                           
  9713  0032                     ??_cmd_ra:	
  9714                           ; 1 bytes @ 0x12
  9715                           
  9716  0032                     ??_cmd_dac:	
  9717                           ; 1 bytes @ 0x12
  9718                           
  9719  0032                     ??_cmd_dtl:	
  9720                           ; 1 bytes @ 0x12
  9721                           
  9722  0032                     ??_cmd_aa:	
  9723                           ; 1 bytes @ 0x12
  9724                           
  9725  0032                     ??_cmd_ir:	
  9726                           ; 1 bytes @ 0x12
  9727                           
  9728  0032                     ??_cmd_trc:	
  9729                           ; 1 bytes @ 0x12
  9730                           
  9731  0032                     ??_cmd_tri:	
  9732                           ; 1 bytes @ 0x12
  9733                           
  9734  0032                     cmd_dtl@tempAux:	
  9735                           ; 1 bytes @ 0x12
  9736                           
  9737                           
  9738                           ; 1 bytes @ 0x12
  9739  0032                     	ds	1
  9740  0033                     cmd_sc@h:
  9741  0033                     cmd_dac@h:	
  9742                           ; 1 bytes @ 0x13
  9743                           
  9744  0033                     cmd_dtl@lumAux:	
  9745                           ; 1 bytes @ 0x13
  9746                           
  9747  0033                     cmd_rtl@buff:	
  9748                           ; 1 bytes @ 0x13
  9749                           
  9750  0033                     cmd_rp@buff:	
  9751                           ; 5 bytes @ 0x13
  9752                           
  9753  0033                     cmd_rc@buff:	
  9754                           ; 5 bytes @ 0x13
  9755                           
  9756  0033                     cmd_ir@buff:	
  9757                           ; 6 bytes @ 0x13
  9758                           
  9759  0033                     cmd_ra@buff:	
  9760                           ; 7 bytes @ 0x13
  9761                           
  9762                           
  9763                           ; 9 bytes @ 0x13
  9764  0033                     	ds	1
  9765  0034                     cmd_sc@m:
  9766  0034                     cmd_dac@m:	
  9767                           ; 1 bytes @ 0x14
  9768                           
  9769                           
  9770                           ; 1 bytes @ 0x14
  9771  0034                     	ds	1
  9772  0035                     cmd_sc@s:
  9773  0035                     cmd_dac@s:	
  9774                           ; 1 bytes @ 0x15
  9775                           
  9776                           
  9777                           ; 1 bytes @ 0x15
  9778  0035                     	ds	1
  9779  0036                     ??_sprintf:
  9780                           
  9781                           ; 1 bytes @ 0x16
  9782  0036                     	ds	2
  9783  0038                     cmd_trc@buffData:
  9784                           
  9785                           ; 5 bytes @ 0x18
  9786  0038                     	ds	1
  9787  0039                     cmd_tri@buffData:
  9788                           
  9789                           ; 5 bytes @ 0x19
  9790  0039                     	ds	1
  9791  003A                     sprintf@ap:
  9792                           
  9793                           ; 1 bytes @ 0x1A
  9794  003A                     	ds	1
  9795  003B                     sprintf@prec:
  9796                           
  9797                           ; 1 bytes @ 0x1B
  9798  003B                     	ds	1
  9799  003C                     cmd_mmp@timerValue:
  9800  003C                     sprintf@val:	
  9801                           ; 2 bytes @ 0x1C
  9802                           
  9803                           
  9804                           ; 2 bytes @ 0x1C
  9805  003C                     	ds	1
  9806  003D                     cmd_trc@buffInit:
  9807                           
  9808                           ; 2 bytes @ 0x1D
  9809  003D                     	ds	1
  9810  003E                     sprintf@flag:
  9811  003E                     cmd_tri@buffInit:	
  9812                           ; 1 bytes @ 0x1E
  9813                           
  9814                           
  9815                           ; 2 bytes @ 0x1E
  9816  003E                     	ds	1
  9817  003F                     cmd_trc@i:
  9818  003F                     sprintf@width:	
  9819                           ; 2 bytes @ 0x1F
  9820                           
  9821                           
  9822                           ; 2 bytes @ 0x1F
  9823  003F                     	ds	1
  9824  0040                     cmd_tri@indexAux:
  9825                           
  9826                           ; 2 bytes @ 0x20
  9827  0040                     	ds	1
  9828  0041                     sprintf@c:
  9829  0041                     cmd_trc@address:	
  9830                           ; 1 bytes @ 0x21
  9831                           
  9832                           
  9833                           ; 2 bytes @ 0x21
  9834  0041                     	ds	1
  9835  0042                     cmd_tri@n:
  9836  0042                     sprintf@sp:	
  9837                           ; 1 bytes @ 0x22
  9838                           
  9839                           
  9840                           ; 1 bytes @ 0x22
  9841  0042                     	ds	1
  9842  0043                     ??_update_menuLCD:
  9843  0043                     cmd_trc@buffEOM:	
  9844                           ; 1 bytes @ 0x23
  9845                           
  9846  0043                     cmd_tri@startingIndex:	
  9847                           ; 1 bytes @ 0x23
  9848                           
  9849                           
  9850                           ; 1 bytes @ 0x23
  9851  0043                     	ds	1
  9852  0044                     cmd_tri@buffEOM:
  9853  0044                     cmd_trc@n:	
  9854                           ; 1 bytes @ 0x24
  9855                           
  9856                           
  9857                           ; 2 bytes @ 0x24
  9858  0044                     	ds	1
  9859  0045                     cmd_tri@i:
  9860                           
  9861                           ; 2 bytes @ 0x25
  9862  0045                     	ds	1
  9863  0046                     cmd_trc@j:
  9864                           
  9865                           ; 1 bytes @ 0x26
  9866  0046                     	ds	1
  9867  0047                     cmd_tri@j:
  9868                           
  9869                           ; 1 bytes @ 0x27
  9870  0047                     	ds	1
  9871  0048                     cmd_tri@index:
  9872                           
  9873                           ; 1 bytes @ 0x28
  9874  0048                     	ds	1
  9875  0049                     update_menuLCD@str:
  9876                           
  9877                           ; 8 bytes @ 0x29
  9878  0049                     	ds	8
  9879  0051                     update_menuLCD@tt:
  9880                           
  9881                           ; 4 bytes @ 0x31
  9882  0051                     	ds	4
  9883  0055                     update_menuLCD@l:
  9884                           
  9885                           ; 3 bytes @ 0x35
  9886  0055                     	ds	3
  9887  0058                     update_menuLCD@diff:
  9888                           
  9889                           ; 3 bytes @ 0x38
  9890  0058                     	ds	3
  9891  005B                     ??_editClock:
  9892  005B                     ??_editTemp:	
  9893                           ; 1 bytes @ 0x3B
  9894                           
  9895  005B                     ??_editLum:	
  9896                           ; 1 bytes @ 0x3B
  9897                           
  9898  005B                     ??_toggleAlarms:	
  9899                           ; 1 bytes @ 0x3B
  9900                           
  9901                           
  9902                           ; 1 bytes @ 0x3B
  9903  005B                     	ds	1
  9904  005C                     ??_main:
  9905                           
  9906                           ; 1 bytes @ 0x3C
  9907  005C                     	ds	3
  9908                           
  9909                           	psect	maintext
  9910  009D                     __pmaintext:	
  9911 ;;
  9912 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  9913 ;;
  9914 ;; *************** function _main *****************
  9915 ;; Defined at:
  9916 ;;		line 1068 in file "main.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;		None
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;  i               2   25[BANK1 ] int 
  9921 ;;  buff           20    0[BANK1 ] unsigned char [20]
  9922 ;;  n               2   30[BANK1 ] int 
  9923 ;;  i               2   27[BANK1 ] int 
  9924 ;;  c               1   29[BANK1 ] unsigned char 
  9925 ;;  corrupted       1   24[BANK1 ] unsigned char 
  9926 ;;  notInit         1   23[BANK1 ] unsigned char 
  9927 ;;  checkSumAux     1   22[BANK1 ] unsigned char 
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  1    wreg      void 
  9930 ;; Registers used:
  9931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9932 ;; Tracked objects:
  9933 ;;		On entry : B1F/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9938 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  9939 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;      Totals:         0       3      32       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;Total ram usage:       35 bytes
  9942 ;; Hardware stack levels required when called:   11
  9943 ;; This function calls:
  9944 ;;		_DATAEE_ReadByte
  9945 ;;		_DATAEE_WriteByte
  9946 ;;		_EUSART_is_rx_ready
  9947 ;;		_INT_SetInterruptHandler
  9948 ;;		_LCDinit
  9949 ;;		_PWM6_LoadDutyValue
  9950 ;;		_PWM_Output_D4_Disable
  9951 ;;		_PWM_Output_D4_Enable
  9952 ;;		_S1button
  9953 ;;		_SYSTEM_Initialize
  9954 ;;		_TMR1_SetInterruptHandler
  9955 ;;		_TMR2_StartTimer
  9956 ;;		_TMR2_StopTimer
  9957 ;;		_TMR5_SetInterruptHandler
  9958 ;;		___wmul
  9959 ;;		_cmd_aa
  9960 ;;		_cmd_dac
  9961 ;;		_cmd_dtl
  9962 ;;		_cmd_ir
  9963 ;;		_cmd_mmp
  9964 ;;		_cmd_mta
  9965 ;;		_cmd_ra
  9966 ;;		_cmd_rc
  9967 ;;		_cmd_rp
  9968 ;;		_cmd_rtl
  9969 ;;		_cmd_sc
  9970 ;;		_cmd_trc
  9971 ;;		_cmd_tri
  9972 ;;		_editClock
  9973 ;;		_editLum
  9974 ;;		_editTemp
  9975 ;;		_getch
  9976 ;;		_i2c1_driver_open
  9977 ;;		_memset
  9978 ;;		_toggleAlarms
  9979 ;;		_update_menuLCD
  9980 ;; This function is called by:
  9981 ;;		Startup code after reset
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           
  9986                           ;psect for function _main
  9987  009D                     _main:
  9988  009D                     l6233:	
  9989                           ;incstack = 0
  9990                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9991                           
  9992                           
  9993                           ;main.c: 1071: SYSTEM_Initialize();
  9994  009D  3192  2272  3180   	fcall	_SYSTEM_Initialize
  9995                           
  9996                           ;main.c: 1073: PWM6_LoadDutyValue(0);
  9997  00A0  3000               	movlw	0
  9998  00A1  0020               	movlb	0	; select bank0
  9999  00A2  00A0               	movwf	PWM6_LoadDutyValue@dutyValue
 10000  00A3  00A1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10001  00A4  3191  2155  3180   	fcall	_PWM6_LoadDutyValue
 10002  00A7                     l6235:
 10003                           
 10004                           ;main.c: 1074: TMR2_StopTimer();
 10005  00A7  319F  27F8  3180   	fcall	_TMR2_StopTimer
 10006  00AA                     l6237:
 10007                           
 10008                           ;main.c: 1075: PWM_Output_D4_Disable();
 10009  00AA  319F  27EE  3180   	fcall	_PWM_Output_D4_Disable
 10010                           
 10011                           ;main.c: 1077: TMR1_SetInterruptHandler(Clock_ISR);
 10012  00AD  3075               	movlw	low _Clock_ISR
 10013  00AE  0020               	movlb	0	; select bank0
 10014  00AF  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10015  00B0  300C               	movlw	high _Clock_ISR
 10016  00B1  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10017  00B2  3190  2057  3180   	fcall	_TMR1_SetInterruptHandler
 10018                           
 10019                           ;main.c: 1079: TMR5_SetInterruptHandler(monitoring_ISR);
 10020  00B5  308D               	movlw	low _monitoring_ISR
 10021  00B6  0020               	movlb	0	; select bank0
 10022  00B7  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler
 10023  00B8  300E               	movlw	high _monitoring_ISR
 10024  00B9  00A1               	movwf	TMR5_SetInterruptHandler@InterruptHandler+1
 10025  00BA  3190  2060  3180   	fcall	_TMR5_SetInterruptHandler
 10026                           
 10027                           ;main.c: 1081: INT_SetInterruptHandler(S1_ISR);
 10028  00BD  302A               	movlw	low _S1_ISR
 10029  00BE  0020               	movlb	0	; select bank0
 10030  00BF  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
 10031  00C0  3010               	movlw	high _S1_ISR
 10032  00C1  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10033  00C2  3190  2045  3180   	fcall	_INT_SetInterruptHandler
 10034  00C5                     l6239:
 10035                           
 10036                           ;main.c: 1083: uint8_t checkSumAux = 0;
 10037  00C5  0021               	movlb	1	; select bank1
 10038  00C6  01B6               	clrf	main@checkSumAux^(0+128)
 10039  00C7                     l6241:
 10040                           
 10041                           ;main.c: 1084: bool notInit = 1;
 10042  00C7  01B7               	clrf	main@notInit^(0+128)
 10043  00C8  0AB7               	incf	main@notInit^(0+128),f
 10044  00C9                     l6243:
 10045                           
 10046                           ;main.c: 1085: bool corrupted = 0;
 10047  00C9  01B8               	clrf	main@corrupted^(0+128)
 10048  00CA                     l6245:
 10049                           
 10050                           ;main.c: 1086: if(DATAEE_ReadByte(0x7000) == 'S'){
 10051  00CA  3000               	movlw	0
 10052  00CB  0020               	movlb	0	; select bank0
 10053  00CC  00A6               	movwf	DATAEE_ReadByte@bAdd
 10054  00CD  3070               	movlw	112
 10055  00CE  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10056  00CF  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10057  00D2  3A53               	xorlw	83
 10058  00D3  1D03               	skipz
 10059  00D4  28D6               	goto	u6291
 10060  00D5  28D7               	goto	u6290
 10061  00D6                     u6291:
 10062  00D6  291C               	goto	l6265
 10063  00D7                     u6290:
 10064  00D7                     l6247:
 10065                           
 10066                           ;main.c: 1087: notInit = 0;
 10067  00D7  0021               	movlb	1	; select bank1
 10068  00D8  01B7               	clrf	main@notInit^(0+128)
 10069  00D9                     l6249:
 10070                           
 10071                           ;main.c: 1088: for(int i = 1; i < 13; i++){
 10072  00D9  3001               	movlw	1
 10073  00DA  00B9               	movwf	main@i^(0+128)
 10074  00DB  3000               	movlw	0
 10075  00DC  00BA               	movwf	(main@i^(0+128)+1)
 10076  00DD                     l6255:
 10077                           
 10078                           ;main.c: 1089: checkSumAux += DATAEE_ReadByte(0x7000 + (i*8));
 10079  00DD  0021               	movlb	1	; select bank1
 10080  00DE  083A               	movf	(main@i+1)^(0+128),w
 10081  00DF  0020               	movlb	0	; select bank0
 10082  00E0  00DD               	movwf	??_main+1
 10083  00E1  0021               	movlb	1	; select bank1
 10084  00E2  0839               	movf	main@i^(0+128),w
 10085  00E3  0020               	movlb	0	; select bank0
 10086  00E4  00DC               	movwf	??_main
 10087  00E5  35DC               	lslf	??_main,f
 10088  00E6  0DDD               	rlf	??_main+1,f
 10089  00E7  35DC               	lslf	??_main,f
 10090  00E8  0DDD               	rlf	??_main+1,f
 10091  00E9  35DC               	lslf	??_main,f
 10092  00EA  0DDD               	rlf	??_main+1,f
 10093  00EB  085C               	movf	??_main,w
 10094  00EC  3E00               	addlw	0
 10095  00ED  00A6               	movwf	DATAEE_ReadByte@bAdd
 10096  00EE  3070               	movlw	112
 10097  00EF  3D5D               	addwfc	??_main+1,w
 10098  00F0  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10099  00F1  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10100  00F4  0020               	movlb	0	; select bank0
 10101  00F5  00DE               	movwf	??_main+2
 10102  00F6  085E               	movf	??_main+2,w
 10103  00F7  0021               	movlb	1	; select bank1
 10104  00F8  07B6               	addwf	main@checkSumAux^(0+128),f
 10105  00F9                     l6257:
 10106  00F9  3001               	movlw	1
 10107  00FA  07B9               	addwf	main@i^(0+128),f
 10108  00FB  3000               	movlw	0
 10109  00FC  3DBA               	addwfc	(main@i+1)^(0+128),f
 10110  00FD                     l6259:
 10111  00FD  083A               	movf	(main@i+1)^(0+128),w
 10112  00FE  3A80               	xorlw	128
 10113  00FF  0020               	movlb	0	; select bank0
 10114  0100  00DC               	movwf	??_main
 10115  0101  3080               	movlw	128
 10116  0102  025C               	subwf	??_main,w
 10117  0103  1D03               	skipz
 10118  0104  2908               	goto	u6305
 10119  0105  300D               	movlw	13
 10120  0106  0021               	movlb	1	; select bank1
 10121  0107  0239               	subwf	main@i^(0+128),w
 10122  0108                     u6305:
 10123  0108  1C03               	skipc
 10124  0109  290B               	goto	u6301
 10125  010A  290C               	goto	u6300
 10126  010B                     u6301:
 10127  010B  28DD               	goto	l6255
 10128  010C                     u6300:
 10129  010C                     l6261:
 10130                           
 10131                           ;main.c: 1090: };main.c: 1091: if(checkSumAux != DATAEE_ReadByte(0x7000 + (13*8))){
 10132  010C  3068               	movlw	104
 10133  010D  0020               	movlb	0	; select bank0
 10134  010E  00A6               	movwf	DATAEE_ReadByte@bAdd
 10135  010F  3070               	movlw	112
 10136  0110  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10137  0111  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10138  0114  0021               	movlb	1	; select bank1
 10139  0115  0636               	xorwf	main@checkSumAux^(0+128),w
 10140  0116  1903               	skipnz
 10141  0117  2919               	goto	u6311
 10142  0118  291A               	goto	u6310
 10143  0119                     u6311:
 10144  0119  291C               	goto	l6265
 10145  011A                     u6310:
 10146  011A                     l6263:
 10147                           
 10148                           ;main.c: 1092: corrupted = 1;
 10149  011A  01B8               	clrf	main@corrupted^(0+128)
 10150  011B  0AB8               	incf	main@corrupted^(0+128),f
 10151  011C                     l6265:
 10152                           
 10153                           ;main.c: 1093: };main.c: 1094: };main.c: 1096: if(notInit || corrupted){
 10154  011C  0021               	movlb	1	; select bank1
 10155  011D  0837               	movf	main@notInit^(0+128),w
 10156  011E  1D03               	btfss	3,2
 10157  011F  2921               	goto	u6321
 10158  0120  2922               	goto	u6320
 10159  0121                     u6321:
 10160  0121  2927               	goto	l6269
 10161  0122                     u6320:
 10162  0122                     l6267:
 10163  0122  0838               	movf	main@corrupted^(0+128),w
 10164  0123  1903               	btfsc	3,2
 10165  0124  2926               	goto	u6331
 10166  0125  2927               	goto	u6330
 10167  0126                     u6331:
 10168  0126  29C0               	goto	l6271
 10169  0127                     u6330:
 10170  0127                     l6269:
 10171                           
 10172                           ;main.c: 1097: DATAEE_WriteByte( 0x7000 + (0 * 8), 'S');
 10173  0127  3000               	movlw	0
 10174  0128  0020               	movlb	0	; select bank0
 10175  0129  00A0               	movwf	DATAEE_WriteByte@bAdd
 10176  012A  3070               	movlw	112
 10177  012B  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10178  012C  3053               	movlw	83
 10179  012D  00DC               	movwf	??_main
 10180  012E  085C               	movf	??_main,w
 10181  012F  00A2               	movwf	DATAEE_WriteByte@bData
 10182  0130  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10183                           
 10184                           ;main.c: 1098: DATAEE_WriteByte( 0x7000 + (1 * 8), 25);
 10185  0133  3008               	movlw	8
 10186  0134  0020               	movlb	0	; select bank0
 10187  0135  00A0               	movwf	DATAEE_WriteByte@bAdd
 10188  0136  3070               	movlw	112
 10189  0137  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10190  0138  3019               	movlw	25
 10191  0139  00DC               	movwf	??_main
 10192  013A  085C               	movf	??_main,w
 10193  013B  00A2               	movwf	DATAEE_WriteByte@bData
 10194  013C  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10195                           
 10196                           ;main.c: 1099: DATAEE_WriteByte( 0x7000 + (2 * 8), 3);
 10197  013F  3010               	movlw	16
 10198  0140  0020               	movlb	0	; select bank0
 10199  0141  00A0               	movwf	DATAEE_WriteByte@bAdd
 10200  0142  3070               	movlw	112
 10201  0143  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10202  0144  3003               	movlw	3
 10203  0145  00DC               	movwf	??_main
 10204  0146  085C               	movf	??_main,w
 10205  0147  00A2               	movwf	DATAEE_WriteByte@bData
 10206  0148  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10207                           
 10208                           ;main.c: 1100: DATAEE_WriteByte( 0x7000 + (3 * 8), 5);
 10209  014B  3018               	movlw	24
 10210  014C  0020               	movlb	0	; select bank0
 10211  014D  00A0               	movwf	DATAEE_WriteByte@bAdd
 10212  014E  3070               	movlw	112
 10213  014F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10214  0150  3005               	movlw	5
 10215  0151  00DC               	movwf	??_main
 10216  0152  085C               	movf	??_main,w
 10217  0153  00A2               	movwf	DATAEE_WriteByte@bData
 10218  0154  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10219                           
 10220                           ;main.c: 1101: DATAEE_WriteByte( 0x7000 + (4 * 8), 12);
 10221  0157  3020               	movlw	32
 10222  0158  0020               	movlb	0	; select bank0
 10223  0159  00A0               	movwf	DATAEE_WriteByte@bAdd
 10224  015A  3070               	movlw	112
 10225  015B  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10226  015C  300C               	movlw	12
 10227  015D  00DC               	movwf	??_main
 10228  015E  085C               	movf	??_main,w
 10229  015F  00A2               	movwf	DATAEE_WriteByte@bData
 10230  0160  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10231                           
 10232                           ;main.c: 1102: DATAEE_WriteByte( 0x7000 + (5 * 8), 0);
 10233  0163  3028               	movlw	40
 10234  0164  0020               	movlb	0	; select bank0
 10235  0165  00A0               	movwf	DATAEE_WriteByte@bAdd
 10236  0166  3070               	movlw	112
 10237  0167  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10238  0168  01A2               	clrf	DATAEE_WriteByte@bData
 10239  0169  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10240                           
 10241                           ;main.c: 1103: DATAEE_WriteByte( 0x7000 + (6 * 8), 0);
 10242  016C  3030               	movlw	48
 10243  016D  0020               	movlb	0	; select bank0
 10244  016E  00A0               	movwf	DATAEE_WriteByte@bAdd
 10245  016F  3070               	movlw	112
 10246  0170  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10247  0171  01A2               	clrf	DATAEE_WriteByte@bData
 10248  0172  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10249                           
 10250                           ;main.c: 1104: DATAEE_WriteByte( 0x7000 + (7 * 8), 28);
 10251  0175  3038               	movlw	56
 10252  0176  0020               	movlb	0	; select bank0
 10253  0177  00A0               	movwf	DATAEE_WriteByte@bAdd
 10254  0178  3070               	movlw	112
 10255  0179  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10256  017A  301C               	movlw	28
 10257  017B  00DC               	movwf	??_main
 10258  017C  085C               	movf	??_main,w
 10259  017D  00A2               	movwf	DATAEE_WriteByte@bData
 10260  017E  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10261                           
 10262                           ;main.c: 1105: DATAEE_WriteByte( 0x7000 + (8 * 8), 4);
 10263  0181  3040               	movlw	64
 10264  0182  0020               	movlb	0	; select bank0
 10265  0183  00A0               	movwf	DATAEE_WriteByte@bAdd
 10266  0184  3070               	movlw	112
 10267  0185  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10268  0186  3004               	movlw	4
 10269  0187  00DC               	movwf	??_main
 10270  0188  085C               	movf	??_main,w
 10271  0189  00A2               	movwf	DATAEE_WriteByte@bData
 10272  018A  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10273                           
 10274                           ;main.c: 1106: DATAEE_WriteByte( 0x7000 + (9 * 8), 'a');
 10275  018D  3048               	movlw	72
 10276  018E  0020               	movlb	0	; select bank0
 10277  018F  00A0               	movwf	DATAEE_WriteByte@bAdd
 10278  0190  3070               	movlw	112
 10279  0191  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10280  0192  3061               	movlw	97
 10281  0193  00DC               	movwf	??_main
 10282  0194  085C               	movf	??_main,w
 10283  0195  00A2               	movwf	DATAEE_WriteByte@bData
 10284  0196  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10285                           
 10286                           ;main.c: 1107: DATAEE_WriteByte( 0x7000 + (10 * 8), 0);
 10287  0199  3050               	movlw	80
 10288  019A  0020               	movlb	0	; select bank0
 10289  019B  00A0               	movwf	DATAEE_WriteByte@bAdd
 10290  019C  3070               	movlw	112
 10291  019D  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10292  019E  01A2               	clrf	DATAEE_WriteByte@bData
 10293  019F  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10294                           
 10295                           ;main.c: 1108: DATAEE_WriteByte( 0x7000 + (11 * 8), 0);
 10296  01A2  3058               	movlw	88
 10297  01A3  0020               	movlb	0	; select bank0
 10298  01A4  00A0               	movwf	DATAEE_WriteByte@bAdd
 10299  01A5  3070               	movlw	112
 10300  01A6  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10301  01A7  01A2               	clrf	DATAEE_WriteByte@bData
 10302  01A8  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10303                           
 10304                           ;main.c: 1109: DATAEE_WriteByte( 0x7000 + (12 * 8), 0);
 10305  01AB  3060               	movlw	96
 10306  01AC  0020               	movlb	0	; select bank0
 10307  01AD  00A0               	movwf	DATAEE_WriteByte@bAdd
 10308  01AE  3070               	movlw	112
 10309  01AF  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10310  01B0  01A2               	clrf	DATAEE_WriteByte@bData
 10311  01B1  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10312                           
 10313                           ;main.c: 1110: DATAEE_WriteByte( 0x7000 + (13 * 8), 174);
 10314  01B4  3068               	movlw	104
 10315  01B5  0020               	movlb	0	; select bank0
 10316  01B6  00A0               	movwf	DATAEE_WriteByte@bAdd
 10317  01B7  3070               	movlw	112
 10318  01B8  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10319  01B9  30AE               	movlw	174
 10320  01BA  00DC               	movwf	??_main
 10321  01BB  085C               	movf	??_main,w
 10322  01BC  00A2               	movwf	DATAEE_WriteByte@bData
 10323  01BD  3193  2336  3180   	fcall	_DATAEE_WriteByte
 10324  01C0                     l6271:
 10325                           
 10326                           ;main.c: 1111: };main.c: 1113: NREG = DATAEE_ReadByte(0x7000 + (1*8));
 10327  01C0  3008               	movlw	8
 10328  01C1  0020               	movlb	0	; select bank0
 10329  01C2  00A6               	movwf	DATAEE_ReadByte@bAdd
 10330  01C3  3070               	movlw	112
 10331  01C4  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10332  01C5  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10333  01C8  0020               	movlb	0	; select bank0
 10334  01C9  00DC               	movwf	??_main
 10335  01CA  085C               	movf	??_main,w
 10336  01CB  00EB               	movwf	_NREG
 10337  01CC                     l6273:
 10338                           
 10339                           ;main.c: 1114: PMON = DATAEE_ReadByte(0x7000 + (2*8));
 10340  01CC  3010               	movlw	16
 10341  01CD  00A6               	movwf	DATAEE_ReadByte@bAdd
 10342  01CE  3070               	movlw	112
 10343  01CF  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10344  01D0  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10345  01D3  0020               	movlb	0	; select bank0
 10346  01D4  00DC               	movwf	??_main
 10347  01D5  085C               	movf	??_main,w
 10348  01D6  0021               	movlb	1	; select bank1
 10349  01D7  00EE               	movwf	_PMON^(0+128)
 10350  01D8                     l6275:
 10351                           
 10352                           ;main.c: 1115: TALA = DATAEE_ReadByte(0x7000 + (3*8));
 10353  01D8  3018               	movlw	24
 10354  01D9  0020               	movlb	0	; select bank0
 10355  01DA  00A6               	movwf	DATAEE_ReadByte@bAdd
 10356  01DB  3070               	movlw	112
 10357  01DC  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10358  01DD  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10359  01E0  0020               	movlb	0	; select bank0
 10360  01E1  00DC               	movwf	??_main
 10361  01E2  085C               	movf	??_main,w
 10362  01E3  0021               	movlb	1	; select bank1
 10363  01E4  00ED               	movwf	_TALA^(0+128)
 10364  01E5                     l6277:
 10365                           
 10366                           ;main.c: 1116: clkAlarm.alarmVal.h = DATAEE_ReadByte(0x7000 + (4*8));
 10367  01E5  3020               	movlw	32
 10368  01E6  0020               	movlb	0	; select bank0
 10369  01E7  00A6               	movwf	DATAEE_ReadByte@bAdd
 10370  01E8  3070               	movlw	112
 10371  01E9  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10372  01EA  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10373  01ED  0020               	movlb	0	; select bank0
 10374  01EE  00DC               	movwf	??_main
 10375  01EF  085C               	movf	??_main,w
 10376  01F0  0021               	movlb	1	; select bank1
 10377  01F1  00C0               	movwf	_clkAlarm^(0+128)
 10378  01F2                     l6279:
 10379                           
 10380                           ;main.c: 1117: clkAlarm.alarmVal.m = DATAEE_ReadByte(0x7000 + (5*8));
 10381  01F2  3028               	movlw	40
 10382  01F3  0020               	movlb	0	; select bank0
 10383  01F4  00A6               	movwf	DATAEE_ReadByte@bAdd
 10384  01F5  3070               	movlw	112
 10385  01F6  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10386  01F7  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10387  01FA  0020               	movlb	0	; select bank0
 10388  01FB  00DC               	movwf	??_main
 10389  01FC  085C               	movf	??_main,w
 10390  01FD  0021               	movlb	1	; select bank1
 10391  01FE  00C1               	movwf	(_clkAlarm^(0+128)+1)
 10392  01FF                     l6281:
 10393                           
 10394                           ;main.c: 1118: clkAlarm.alarmVal.s = DATAEE_ReadByte(0x7000 + (6*8));
 10395  01FF  3030               	movlw	48
 10396  0200  0020               	movlb	0	; select bank0
 10397  0201  00A6               	movwf	DATAEE_ReadByte@bAdd
 10398  0202  3070               	movlw	112
 10399  0203  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10400  0204  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10401  0207  0020               	movlb	0	; select bank0
 10402  0208  00DC               	movwf	??_main
 10403  0209  085C               	movf	??_main,w
 10404  020A  0021               	movlb	1	; select bank1
 10405  020B  00C2               	movwf	(_clkAlarm^(0+128)+2)
 10406  020C                     l6283:
 10407                           
 10408                           ;main.c: 1119: tempAlarm.alarmTemp = DATAEE_ReadByte(0x7000 + (7*8));
 10409  020C  3038               	movlw	56
 10410  020D  0020               	movlb	0	; select bank0
 10411  020E  00A6               	movwf	DATAEE_ReadByte@bAdd
 10412  020F  3070               	movlw	112
 10413  0210  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10414  0211  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10415  0214  0020               	movlb	0	; select bank0
 10416  0215  00DC               	movwf	??_main
 10417  0216  085C               	movf	??_main,w
 10418  0217  0021               	movlb	1	; select bank1
 10419  0218  00CA               	movwf	_tempAlarm^(0+128)
 10420  0219                     l6285:
 10421                           
 10422                           ;main.c: 1120: lumAlarm.alarmLum = DATAEE_ReadByte(0x7000 + (8*8));
 10423  0219  3040               	movlw	64
 10424  021A  0020               	movlb	0	; select bank0
 10425  021B  00A6               	movwf	DATAEE_ReadByte@bAdd
 10426  021C  3070               	movlw	112
 10427  021D  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10428  021E  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10429  0221  0020               	movlb	0	; select bank0
 10430  0222  00DC               	movwf	??_main
 10431  0223  085C               	movf	??_main,w
 10432  0224  0021               	movlb	1	; select bank1
 10433  0225  00C7               	movwf	_lumAlarm^(0+128)
 10434  0226                     l6287:
 10435                           
 10436                           ;main.c: 1121: ALAF = DATAEE_ReadByte(0x7000 + (9*8));
 10437  0226  3048               	movlw	72
 10438  0227  0020               	movlb	0	; select bank0
 10439  0228  00A6               	movwf	DATAEE_ReadByte@bAdd
 10440  0229  3070               	movlw	112
 10441  022A  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10442  022B  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10443  022E  0020               	movlb	0	; select bank0
 10444  022F  00DC               	movwf	??_main
 10445  0230  085C               	movf	??_main,w
 10446  0231  00EA               	movwf	_ALAF
 10447  0232                     l6289:
 10448                           
 10449                           ;main.c: 1122: t.h = DATAEE_ReadByte(0x7000 + (10*8));
 10450  0232  3050               	movlw	80
 10451  0233  00A6               	movwf	DATAEE_ReadByte@bAdd
 10452  0234  3070               	movlw	112
 10453  0235  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10454  0236  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10455  0239  0020               	movlb	0	; select bank0
 10456  023A  00DC               	movwf	??_main
 10457  023B  085C               	movf	??_main,w
 10458  023C  00DF               	movwf	_t
 10459  023D                     l6291:
 10460                           
 10461                           ;main.c: 1123: t.m = DATAEE_ReadByte(0x7000 + (11*8));
 10462  023D  3058               	movlw	88
 10463  023E  00A6               	movwf	DATAEE_ReadByte@bAdd
 10464  023F  3070               	movlw	112
 10465  0240  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10466  0241  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10467  0244  0020               	movlb	0	; select bank0
 10468  0245  00DC               	movwf	??_main
 10469  0246  085C               	movf	??_main,w
 10470  0247  00E0               	movwf	_t+1
 10471  0248                     l6293:
 10472                           
 10473                           ;main.c: 1124: iwrite = DATAEE_ReadByte(0x7000 + (12*8));
 10474  0248  3060               	movlw	96
 10475  0249  00A6               	movwf	DATAEE_ReadByte@bAdd
 10476  024A  3070               	movlw	112
 10477  024B  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 10478  024C  3190  20BA  3180   	fcall	_DATAEE_ReadByte
 10479  024F  0020               	movlb	0	; select bank0
 10480  0250  00DC               	movwf	??_main
 10481  0251  085C               	movf	??_main,w
 10482  0252  00FD               	movwf	_iwrite
 10483  0253                     l6295:
 10484                           
 10485                           ;main.c: 1128: tempAlarm.trigger = 0;
 10486  0253  0021               	movlb	1	; select bank1
 10487  0254  01CB               	clrf	(_tempAlarm^(0+128)+1)
 10488  0255                     l6297:
 10489                           
 10490                           ;main.c: 1129: tempAlarm.triggered = 0;
 10491  0255  01CC               	clrf	(_tempAlarm^(0+128)+2)
 10492  0256                     l6299:
 10493                           
 10494                           ;main.c: 1131: lumAlarm.trigger = 0;
 10495  0256  01C8               	clrf	(_lumAlarm^(0+128)+1)
 10496  0257                     l6301:
 10497                           
 10498                           ;main.c: 1132: lumAlarm.triggered = 0;
 10499  0257  01C9               	clrf	(_lumAlarm^(0+128)+2)
 10500  0258                     l6303:
 10501                           
 10502                           ;main.c: 1134: clkAlarm.trigger = 0;
 10503  0258  01C3               	clrf	(_clkAlarm^(0+128)+3)
 10504  0259                     l6305:
 10505                           
 10506                           ;main.c: 1137: i2c1_driver_open();
 10507  0259  3187  27F4  3180   	fcall	_i2c1_driver_open
 10508  025C                     l6307:
 10509                           
 10510                           ;main.c: 1138: TRISCbits.TRISC3 = 1;
 10511  025C  0020               	movlb	0	; select bank0
 10512  025D  1593               	bsf	19,3	;volatile
 10513  025E                     l6309:
 10514                           
 10515                           ;main.c: 1139: TRISCbits.TRISC4 = 1;
 10516  025E  1613               	bsf	19,4	;volatile
 10517  025F                     l6311:
 10518                           
 10519                           ;main.c: 1140: WPUC3 = 1;
 10520  025F  003E               	movlb	30	; select bank30
 10521  0260  15CF               	bsf	79,3	;volatile
 10522  0261                     l6313:
 10523                           
 10524                           ;main.c: 1141: WPUC4 = 1;
 10525  0261  164F               	bsf	79,4	;volatile
 10526  0262                     l6315:
 10527                           
 10528                           ;main.c: 1142: LCDinit();
 10529  0262  3188  20FD  3180   	fcall	_LCDinit
 10530  0265                     l6317:
 10531                           
 10532                           ;main.c: 1145: (INTCONbits.GIE = 1);
 10533  0265  178B               	bsf	11,7	;volatile
 10534  0266                     l6319:
 10535                           
 10536                           ;main.c: 1148: (INTCONbits.PEIE = 1);
 10537  0266  170B               	bsf	11,6	;volatile
 10538  0267                     l6321:
 10539                           
 10540                           ;main.c: 1152: uint8_t c;;main.c: 1153: char buff[20] = "";
 10541  0267  30A0               	movlw	low main@buff
 10542  0268  0086               	movwf	6
 10543  0269  3000               	movlw	high main@buff
 10544  026A  0087               	movwf	7
 10545  026B  3014               	movlw	20
 10546  026C  0020               	movlb	0	; select bank0
 10547  026D  00DC               	movwf	??_main
 10548  026E  3000               	movlw	0
 10549  026F                     u6340:
 10550  026F  001E               	movwi fsr1++
 10551  0270  0BDC               	decfsz	??_main,f
 10552  0271  2A6F               	goto	u6340
 10553  0272                     l6323:
 10554                           
 10555                           ;main.c: 1154: int n=0;
 10556  0272  0021               	movlb	1	; select bank1
 10557  0273  01BE               	clrf	main@n^(0+128)
 10558  0274  01BF               	clrf	(main@n+1)^(0+128)
 10559  0275                     l6325:
 10560  0275  2ACC               	goto	l6353
 10561  0276                     l6327:
 10562                           
 10563                           ;main.c: 1181: c = getch();
 10564  0276  319F  27FC  3180   	fcall	_getch
 10565  0279  0020               	movlb	0	; select bank0
 10566  027A  00DC               	movwf	??_main
 10567  027B  085C               	movf	??_main,w
 10568  027C  0021               	movlb	1	; select bank1
 10569  027D  00BD               	movwf	main@c^(0+128)
 10570  027E                     l6329:
 10571                           
 10572                           ;main.c: 1182: if((c == (uint8_t)0xFD || buff[0] == (uint8_t)0xFD)){
 10573  027E  30FD               	movlw	253
 10574  027F  063D               	xorwf	main@c^(0+128),w
 10575  0280  1903               	btfsc	3,2
 10576  0281  2A83               	goto	u6351
 10577  0282  2A84               	goto	u6350
 10578  0283                     u6351:
 10579  0283  2A8A               	goto	l6333
 10580  0284                     u6350:
 10581  0284                     l6331:
 10582  0284  30FD               	movlw	253
 10583  0285  0620               	xorwf	main@buff^(0+128),w
 10584  0286  1D03               	btfss	3,2
 10585  0287  2A89               	goto	u6361
 10586  0288  2A8A               	goto	u6360
 10587  0289                     u6361:
 10588  0289  2AC5               	goto	l6349
 10589  028A                     u6360:
 10590  028A                     l6333:
 10591                           
 10592                           ;main.c: 1183: if(c == (uint8_t)0xFD){
 10593  028A  30FD               	movlw	253
 10594  028B  063D               	xorwf	main@c^(0+128),w
 10595  028C  1D03               	btfss	3,2
 10596  028D  2A8F               	goto	u6371
 10597  028E  2A90               	goto	u6370
 10598  028F                     u6371:
 10599  028F  2A9F               	goto	l6339
 10600  0290                     u6370:
 10601  0290                     l6335:
 10602                           
 10603                           ;main.c: 1184: memset(buff, 0, sizeof buff);
 10604  0290  3000               	movlw	0
 10605  0291  0020               	movlb	0	; select bank0
 10606  0292  00A0               	movwf	memset@c
 10607  0293  00A1               	movwf	memset@c+1
 10608  0294  3014               	movlw	20
 10609  0295  00A2               	movwf	memset@n
 10610  0296  3000               	movlw	0
 10611  0297  00A3               	movwf	memset@n+1
 10612  0298  30A0               	movlw	(low (main@buff| 0))& (0+255)
 10613  0299  3192  2291  3180   	fcall	_memset
 10614  029C                     l6337:
 10615                           
 10616                           ;main.c: 1185: n=0;
 10617  029C  0021               	movlb	1	; select bank1
 10618  029D  01BE               	clrf	main@n^(0+128)
 10619  029E  01BF               	clrf	(main@n+1)^(0+128)
 10620  029F                     l6339:
 10621                           
 10622                           ;main.c: 1186: };main.c: 1187: buff[n] = c;
 10623  029F  083D               	movf	main@c^(0+128),w
 10624  02A0  0020               	movlb	0	; select bank0
 10625  02A1  00DC               	movwf	??_main
 10626  02A2  0021               	movlb	1	; select bank1
 10627  02A3  083E               	movf	main@n^(0+128),w
 10628  02A4  3EA0               	addlw	(low (main@buff| 0))& (0+255)
 10629  02A5  0086               	movwf	6
 10630  02A6  0187               	clrf	7
 10631  02A7  0020               	movlb	0	; select bank0
 10632  02A8  085C               	movf	??_main,w
 10633  02A9  0081               	movwf	1
 10634  02AA                     l6341:
 10635                           
 10636                           ;main.c: 1188: n++;
 10637  02AA  3001               	movlw	1
 10638  02AB  0021               	movlb	1	; select bank1
 10639  02AC  07BE               	addwf	main@n^(0+128),f
 10640  02AD  3000               	movlw	0
 10641  02AE  3DBF               	addwfc	(main@n+1)^(0+128),f
 10642  02AF                     l6343:
 10643                           
 10644                           ;main.c: 1189: if(n == 20){
 10645  02AF  3014               	movlw	20
 10646  02B0  063E               	xorwf	main@n^(0+128),w
 10647  02B1  043F               	iorwf	(main@n+1)^(0+128),w
 10648  02B2  1D03               	btfss	3,2
 10649  02B3  2AB5               	goto	u6381
 10650  02B4  2AB6               	goto	u6380
 10651  02B5                     u6381:
 10652  02B5  2AC5               	goto	l6349
 10653  02B6                     u6380:
 10654  02B6                     l6345:
 10655                           
 10656                           ;main.c: 1190: memset(buff, 0, sizeof buff);
 10657  02B6  3000               	movlw	0
 10658  02B7  0020               	movlb	0	; select bank0
 10659  02B8  00A0               	movwf	memset@c
 10660  02B9  00A1               	movwf	memset@c+1
 10661  02BA  3014               	movlw	20
 10662  02BB  00A2               	movwf	memset@n
 10663  02BC  3000               	movlw	0
 10664  02BD  00A3               	movwf	memset@n+1
 10665  02BE  30A0               	movlw	(low (main@buff| 0))& (0+255)
 10666  02BF  3192  2291  3180   	fcall	_memset
 10667  02C2                     l6347:
 10668                           
 10669                           ;main.c: 1191: n=0;
 10670  02C2  0021               	movlb	1	; select bank1
 10671  02C3  01BE               	clrf	main@n^(0+128)
 10672  02C4  01BF               	clrf	(main@n+1)^(0+128)
 10673  02C5                     l6349:
 10674                           
 10675                           ;main.c: 1192: };main.c: 1193: };main.c: 1194: if(c == (uint8_t)0xFE){
 10676  02C5  30FE               	movlw	254
 10677  02C6  063D               	xorwf	main@c^(0+128),w
 10678  02C7  1D03               	btfss	3,2
 10679  02C8  2ACA               	goto	u6391
 10680  02C9  2ACB               	goto	u6390
 10681  02CA                     u6391:
 10682  02CA  2ACC               	goto	l6353
 10683  02CB                     u6390:
 10684  02CB  2AD4               	goto	l6355
 10685  02CC                     l1603:
 10686  02CC                     l6353:
 10687  02CC  319F  27DF  3180   	fcall	_EUSART_is_rx_ready
 10688  02CF  3A00               	xorlw	0
 10689  02D0  1D03               	skipz
 10690  02D1  2AD3               	goto	u6401
 10691  02D2  2AD4               	goto	u6400
 10692  02D3                     u6401:
 10693  02D3  2A76               	goto	l6327
 10694  02D4                     u6400:
 10695  02D4                     l6355:
 10696                           
 10697                           ;main.c: 1196: };main.c: 1197: };main.c: 1198: if(buff[n-1] == (uint8_t)0xFE){
 10698  02D4  0021               	movlb	1	; select bank1
 10699  02D5  083E               	movf	main@n^(0+128),w
 10700  02D6  3EFF               	addlw	255
 10701  02D7  3EA0               	addlw	(low (main@buff| 0))& (0+255)
 10702  02D8  0086               	movwf	6
 10703  02D9  0187               	clrf	7
 10704  02DA  30FE               	movlw	254
 10705  02DB  0601               	xorwf	1,w
 10706  02DC  1D03               	btfss	3,2
 10707  02DD  2ADF               	goto	u6411
 10708  02DE  2AE0               	goto	u6410
 10709  02DF                     u6411:
 10710  02DF  2B4A               	goto	l6377
 10711  02E0                     u6410:
 10712  02E0                     l6357:
 10713                           
 10714                           ;main.c: 1199: for (i = 0; i < (sizeof(commands) / sizeof(struct command_d)); i++){
 10715  02E0  01BB               	clrf	main@i_2703^(0+128)
 10716  02E1  01BC               	clrf	(main@i_2703+1)^(0+128)
 10717  02E2                     l6363:
 10718                           
 10719                           ;main.c: 1200: if (buff[1] == commands[i].cmd_name){
 10720  02E2  083C               	movf	(main@i_2703+1)^(0+128),w
 10721  02E3  0020               	movlb	0	; select bank0
 10722  02E4  00A1               	movwf	___wmul@multiplier+1
 10723  02E5  0021               	movlb	1	; select bank1
 10724  02E6  083B               	movf	main@i_2703^(0+128),w
 10725  02E7  0020               	movlb	0	; select bank0
 10726  02E8  00A0               	movwf	___wmul@multiplier
 10727  02E9  3003               	movlw	3
 10728  02EA  00A2               	movwf	___wmul@multiplicand
 10729  02EB  3000               	movlw	0
 10730  02EC  00A3               	movwf	___wmul@multiplicand+1
 10731  02ED  3192  22B0  3180   	fcall	___wmul
 10732  02F0  0020               	movlb	0	; select bank0
 10733  02F1  0821               	movf	?___wmul+1,w
 10734  02F2  0085               	movwf	5
 10735  02F3  0820               	movf	?___wmul,w
 10736  02F4  0084               	movwf	4
 10737  02F5  3002               	movlw	low ((_commands+2)| (0+32768))
 10738  02F6  0784               	addwf	4,f
 10739  02F7  3098               	movlw	high ((_commands+2)| (0+32768))
 10740  02F8  3D85               	addwfc	5,f
 10741  02F9  0800               	movf	0,w	;code access
 10742  02FA  0021               	movlb	1	; select bank1
 10743  02FB  0621               	xorwf	(main@buff^(0+128)+1),w
 10744  02FC  1D03               	skipz
 10745  02FD  2AFF               	goto	u6421
 10746  02FE  2B00               	goto	u6420
 10747  02FF                     u6421:
 10748  02FF  2B2E               	goto	l6369
 10749  0300                     u6420:
 10750  0300                     l6365:
 10751                           
 10752                           ;main.c: 1201: commands[i].cmd_fnct(n, buff);
 10753  0300  083C               	movf	(main@i_2703+1)^(0+128),w
 10754  0301  0020               	movlb	0	; select bank0
 10755  0302  00A1               	movwf	___wmul@multiplier+1
 10756  0303  0021               	movlb	1	; select bank1
 10757  0304  083B               	movf	main@i_2703^(0+128),w
 10758  0305  0020               	movlb	0	; select bank0
 10759  0306  00A0               	movwf	___wmul@multiplier
 10760  0307  3003               	movlw	3
 10761  0308  00A2               	movwf	___wmul@multiplicand
 10762  0309  3000               	movlw	0
 10763  030A  00A3               	movwf	___wmul@multiplicand+1
 10764  030B  3192  22B0  3180   	fcall	___wmul
 10765  030E  0020               	movlb	0	; select bank0
 10766  030F  0821               	movf	?___wmul+1,w
 10767  0310  0085               	movwf	5
 10768  0311  0820               	movf	?___wmul,w
 10769  0312  0084               	movwf	4
 10770  0313  3000               	movlw	low (_commands| (0+32768))
 10771  0314  0784               	addwf	4,f
 10772  0315  3098               	movlw	high (_commands| (0+32768))
 10773  0316  3D85               	addwfc	5,f
 10774  0317  3F00               	moviw [0]fsr0
 10775  0318  0021               	movlb	1	; select bank1
 10776  0319  00B4               	movwf	_main$3686^(0+128)
 10777  031A  3F01               	moviw [1]fsr0
 10778  031B  00B5               	movwf	(_main$3686+1)^(0+128)
 10779  031C                     l6367:
 10780                           
 10781                           ;main.c: 1201: commands[i].cmd_fnct(n, buff);
 10782  031C  083F               	movf	(main@n+1)^(0+128),w
 10783  031D  0020               	movlb	0	; select bank0
 10784  031E  00B0               	movwf	cmd_tri@num+1
 10785  031F  0021               	movlb	1	; select bank1
 10786  0320  083E               	movf	main@n^(0+128),w
 10787  0321  0020               	movlb	0	; select bank0
 10788  0322  00AF               	movwf	cmd_tri@num
 10789  0323  30A0               	movlw	(low (main@buff| 0))& (0+255)
 10790  0324  00DC               	movwf	??_main
 10791  0325  085C               	movf	??_main,w
 10792  0326  00B1               	movwf	cmd_tri@buffer
 10793  0327  0021               	movlb	1	; select bank1
 10794  0328  0835               	movf	(_main$3686+1)^(0+128),w
 10795  0329  008A               	movwf	10
 10796  032A  0834               	movf	_main$3686^(0+128),w
 10797  032B  000A               	callw
 10798  032C  3180               	pagesel	$
 10799                           
 10800                           ;main.c: 1202: break;
 10801  032D  2B3B               	goto	l6371
 10802  032E                     l6369:
 10803  032E  3001               	movlw	1
 10804  032F  07BB               	addwf	main@i_2703^(0+128),f
 10805  0330  3000               	movlw	0
 10806  0331  3DBC               	addwfc	(main@i_2703+1)^(0+128),f
 10807  0332  3000               	movlw	0
 10808  0333  023C               	subwf	(main@i_2703+1)^(0+128),w
 10809  0334  300D               	movlw	13
 10810  0335  1903               	skipnz
 10811  0336  023B               	subwf	main@i_2703^(0+128),w
 10812  0337  1C03               	skipc
 10813  0338  2B3A               	goto	u6431
 10814  0339  2B3B               	goto	u6430
 10815  033A                     u6431:
 10816  033A  2AE2               	goto	l6363
 10817  033B                     u6430:
 10818  033B                     l6371:
 10819                           
 10820                           ;main.c: 1203: };main.c: 1204: };main.c: 1205: memset(buff, 0, sizeof buff);
 10821  033B  3000               	movlw	0
 10822  033C  0020               	movlb	0	; select bank0
 10823  033D  00A0               	movwf	memset@c
 10824  033E  00A1               	movwf	memset@c+1
 10825  033F  3014               	movlw	20
 10826  0340  00A2               	movwf	memset@n
 10827  0341  3000               	movlw	0
 10828  0342  00A3               	movwf	memset@n+1
 10829  0343  30A0               	movlw	(low (main@buff| 0))& (0+255)
 10830  0344  3192  2291  3180   	fcall	_memset
 10831  0347                     l6373:
 10832  0347                     l6375:
 10833                           
 10834                           ;main.c: 1207: n=0;
 10835  0347  0021               	movlb	1	; select bank1
 10836  0348  01BE               	clrf	main@n^(0+128)
 10837  0349  01BF               	clrf	(main@n+1)^(0+128)
 10838  034A                     l6377:
 10839                           
 10840                           ;main.c: 1208: };main.c: 1210: if(flagS1pushed){
 10841  034A  0020               	movlb	0	; select bank0
 10842  034B  0867               	movf	_flagS1pushed,w
 10843  034C  1903               	btfsc	3,2
 10844  034D  2B4F               	goto	u6441
 10845  034E  2B50               	goto	u6440
 10846  034F                     u6441:
 10847  034F  2B55               	goto	l6383
 10848  0350                     u6440:
 10849  0350                     l6379:
 10850                           
 10851                           ;main.c: 1211: S1button();
 10852  0350  3187  2797  3180   	fcall	_S1button
 10853  0353                     l6381:
 10854                           
 10855                           ;main.c: 1212: flagS1pushed=0;
 10856  0353  0020               	movlb	0	; select bank0
 10857  0354  01E7               	clrf	_flagS1pushed
 10858  0355                     l6383:
 10859                           
 10860                           ;main.c: 1216: };main.c: 1218: if(PWM_on){
 10861  0355  0021               	movlb	1	; select bank1
 10862  0356  0855               	movf	_PWM_on^(0+128),w
 10863  0357  1903               	btfsc	3,2
 10864  0358  2B5A               	goto	u6451
 10865  0359  2B5B               	goto	u6450
 10866  035A                     u6451:
 10867  035A  2B8D               	goto	l6399
 10868  035B                     u6450:
 10869  035B                     l6385:
 10870                           
 10871                           ;main.c: 1219: if(PWM6EN==0){
 10872  035B  0027               	movlb	7	; select bank7
 10873  035C  1B8E               	btfsc	14,7	;volatile
 10874  035D  2B5F               	goto	u6461
 10875  035E  2B60               	goto	u6460
 10876  035F                     u6461:
 10877  035F  2B66               	goto	l6389
 10878  0360                     u6460:
 10879  0360                     l6387:
 10880                           
 10881                           ;main.c: 1220: TMR2_StartTimer();
 10882  0360  319F  27F4  3180   	fcall	_TMR2_StartTimer
 10883                           
 10884                           ;main.c: 1221: PWM_Output_D4_Enable();
 10885  0363  319F  27E2  3180   	fcall	_PWM_Output_D4_Enable
 10886  0366                     l6389:
 10887                           
 10888                           ;main.c: 1222: };main.c: 1223: if(dimingLed <= 1023){
 10889  0366  0021               	movlb	1	; select bank1
 10890  0367  084E               	movf	(_dimingLed+1)^(0+128),w
 10891  0368  3A80               	xorlw	128
 10892  0369  0020               	movlb	0	; select bank0
 10893  036A  00DC               	movwf	??_main
 10894  036B  3084               	movlw	132
 10895  036C  025C               	subwf	??_main,w
 10896  036D  1D03               	skipz
 10897  036E  2B72               	goto	u6475
 10898  036F  3000               	movlw	0
 10899  0370  0021               	movlb	1	; select bank1
 10900  0371  024D               	subwf	_dimingLed^(0+128),w
 10901  0372                     u6475:
 10902  0372  1803               	skipnc
 10903  0373  2B75               	goto	u6471
 10904  0374  2B76               	goto	u6470
 10905  0375                     u6471:
 10906  0375  2B7C               	goto	l6393
 10907  0376                     u6470:
 10908  0376                     l6391:
 10909                           
 10910                           ;main.c: 1224: dimingLed += 1;
 10911  0376  3001               	movlw	1
 10912  0377  0021               	movlb	1	; select bank1
 10913  0378  07CD               	addwf	_dimingLed^(0+128),f
 10914  0379  3000               	movlw	0
 10915  037A  3DCE               	addwfc	(_dimingLed+1)^(0+128),f
 10916                           
 10917                           ;main.c: 1225: } else{
 10918  037B  2B7F               	goto	l6395
 10919  037C                     l6393:
 10920                           
 10921                           ;main.c: 1226: dimingLed = 0;
 10922  037C  0021               	movlb	1	; select bank1
 10923  037D  01CD               	clrf	_dimingLed^(0+128)
 10924  037E  01CE               	clrf	(_dimingLed+1)^(0+128)
 10925  037F                     l6395:
 10926                           
 10927                           ;main.c: 1227: };main.c: 1228: PWM6_LoadDutyValue(dimingLed);
 10928  037F  084E               	movf	(_dimingLed+1)^(0+128),w
 10929  0380  0020               	movlb	0	; select bank0
 10930  0381  00A1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10931  0382  0021               	movlb	1	; select bank1
 10932  0383  084D               	movf	_dimingLed^(0+128),w
 10933  0384  0020               	movlb	0	; select bank0
 10934  0385  00A0               	movwf	PWM6_LoadDutyValue@dutyValue
 10935  0386  3191  2155  3180   	fcall	_PWM6_LoadDutyValue
 10936  0389                     l6397:
 10937                           
 10938                           ;main.c: 1229: _delay((unsigned long)((1)*(1000000/4000.0)));
 10939  0389  3053               	movlw	83
 10940  038A                     u6557:
 10941  038A  0B89               	decfsz	9,f
 10942  038B  2B8A               	goto	u6557
 10943  038C  0000               	nop
 10944  038D                     l6399:
 10945                           
 10946                           ;main.c: 1230: };main.c: 1232: if(modeFlag == 0){
 10947  038D  0020               	movlb	0	; select bank0
 10948  038E  0862               	movf	_modeFlag,w
 10949  038F  0463               	iorwf	_modeFlag+1,w
 10950  0390  1D03               	btfss	3,2
 10951  0391  2B93               	goto	u6481
 10952  0392  2B94               	goto	u6480
 10953  0393                     u6481:
 10954  0393  2B9F               	goto	l6407
 10955  0394                     u6480:
 10956  0394                     l6401:
 10957                           
 10958                           ;main.c: 1233: if(updateLCD){
 10959  0394  086F               	movf	_updateLCD,w
 10960  0395  1903               	btfsc	3,2
 10961  0396  2B98               	goto	u6491
 10962  0397  2B99               	goto	u6490
 10963  0398                     u6491:
 10964  0398  2ACC               	goto	l6353
 10965  0399                     u6490:
 10966  0399                     l6403:
 10967                           
 10968                           ;main.c: 1234: update_menuLCD();
 10969  0399  3183  23DD  3180   	fcall	_update_menuLCD
 10970  039C                     l6405:
 10971                           
 10972                           ;main.c: 1235: updateLCD=0;
 10973  039C  0020               	movlb	0	; select bank0
 10974  039D  01EF               	clrf	_updateLCD
 10975  039E  2ACC               	goto	l6353
 10976  039F                     l6407:
 10977  039F  0362               	decf	_modeFlag,w
 10978  03A0  0463               	iorwf	_modeFlag+1,w
 10979  03A1  1D03               	btfss	3,2
 10980  03A2  2BA4               	goto	u6501
 10981  03A3  2BA5               	goto	u6500
 10982  03A4                     u6501:
 10983  03A4  2BA9               	goto	l6411
 10984  03A5                     u6500:
 10985  03A5                     l6409:
 10986                           
 10987                           ;main.c: 1243: editClock();
 10988  03A5  3189  2173  3180   	fcall	_editClock
 10989                           
 10990                           ;main.c: 1244: } else if(modeFlag == 2){
 10991  03A8  2ACC               	goto	l6353
 10992  03A9                     l6411:
 10993  03A9  3002               	movlw	2
 10994  03AA  0662               	xorwf	_modeFlag,w
 10995  03AB  0463               	iorwf	_modeFlag+1,w
 10996  03AC  1D03               	btfss	3,2
 10997  03AD  2BAF               	goto	u6511
 10998  03AE  2BB0               	goto	u6510
 10999  03AF                     u6511:
 11000  03AF  2BB4               	goto	l6415
 11001  03B0                     u6510:
 11002  03B0                     l6413:
 11003                           
 11004                           ;main.c: 1245: editTemp();
 11005  03B0  3197  271A  3180   	fcall	_editTemp
 11006                           
 11007                           ;main.c: 1246: } else if(modeFlag == 3){
 11008  03B3  2ACC               	goto	l6353
 11009  03B4                     l6415:
 11010  03B4  3003               	movlw	3
 11011  03B5  0662               	xorwf	_modeFlag,w
 11012  03B6  0463               	iorwf	_modeFlag+1,w
 11013  03B7  1D03               	btfss	3,2
 11014  03B8  2BBA               	goto	u6521
 11015  03B9  2BBB               	goto	u6520
 11016  03BA                     u6521:
 11017  03BA  2BBF               	goto	l6419
 11018  03BB                     u6520:
 11019  03BB                     l6417:
 11020                           
 11021                           ;main.c: 1247: editLum();
 11022  03BB  3196  26D2  3180   	fcall	_editLum
 11023                           
 11024                           ;main.c: 1248: } else if(modeFlag == 4){
 11025  03BE  2ACC               	goto	l6353
 11026  03BF                     l6419:
 11027  03BF  3004               	movlw	4
 11028  03C0  0662               	xorwf	_modeFlag,w
 11029  03C1  0463               	iorwf	_modeFlag+1,w
 11030  03C2  1D03               	btfss	3,2
 11031  03C3  2BC5               	goto	u6531
 11032  03C4  2BC6               	goto	u6530
 11033  03C5                     u6531:
 11034  03C5  2BCA               	goto	l6423
 11035  03C6                     u6530:
 11036  03C6                     l6421:
 11037                           
 11038                           ;main.c: 1249: toggleAlarms();
 11039  03C6  3195  25C8  3180   	fcall	_toggleAlarms
 11040                           
 11041                           ;main.c: 1250: } else if(modeFlag > 4){
 11042  03C9  2ACC               	goto	l6353
 11043  03CA                     l6423:
 11044  03CA  0863               	movf	_modeFlag+1,w
 11045  03CB  3A80               	xorlw	128
 11046  03CC  00DC               	movwf	??_main
 11047  03CD  3080               	movlw	128
 11048  03CE  025C               	subwf	??_main,w
 11049  03CF  1D03               	skipz
 11050  03D0  2BD3               	goto	u6545
 11051  03D1  3005               	movlw	5
 11052  03D2  0262               	subwf	_modeFlag,w
 11053  03D3                     u6545:
 11054  03D3  1C03               	skipc
 11055  03D4  2BD6               	goto	u6541
 11056  03D5  2BD7               	goto	u6540
 11057  03D6                     u6541:
 11058  03D6  2ACC               	goto	l1603
 11059  03D7                     u6540:
 11060  03D7                     l6425:
 11061                           
 11062                           ;main.c: 1251: modeFlag = 0;
 11063  03D7  0020               	movlb	0	; select bank0
 11064  03D8  01E2               	clrf	_modeFlag
 11065  03D9  01E3               	clrf	_modeFlag+1
 11066  03DA  2ACC               	goto	l6353
 11067  03DB  3180  285E         	ljmp	start
 11068  03DD                     __end_of_main:
 11069                           
 11070                           	psect	text1
 11071  15C8                     __ptext1:	
 11072 ;; *************** function _toggleAlarms *****************
 11073 ;; Defined at:
 11074 ;;		line 744 in file "main.c"
 11075 ;; Parameters:    Size  Location     Type
 11076 ;;		None
 11077 ;; Auto vars:     Size  Location     Type
 11078 ;;		None
 11079 ;; Return value:  Size  Location     Type
 11080 ;;                  1    wreg      void 
 11081 ;; Registers used:
 11082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11083 ;; Tracked objects:
 11084 ;;		On entry : 0/0
 11085 ;;		On exit  : 0/0
 11086 ;;		Unchanged: 0/0
 11087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11090 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11091 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;Total ram usage:        1 bytes
 11093 ;; Hardware stack levels used:    1
 11094 ;; Hardware stack levels required when called:   10
 11095 ;; This function calls:
 11096 ;;		_S1button
 11097 ;;		_update_menuLCD
 11098 ;; This function is called by:
 11099 ;;		_main
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           
 11104                           ;psect for function _toggleAlarms
 11105  15C8                     _toggleAlarms:
 11106  15C8                     l1487:	
 11107                           ;incstack = 0
 11108                           ; Regs used in _toggleAlarms: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11109                           ;main.c: 746: while(1){
 11110                           
 11111  15C8                     l5927:
 11112                           
 11113                           ;main.c: 747: if(flagS1pushed){
 11114  15C8  0020               	movlb	0	; select bank0
 11115  15C9  0867               	movf	_flagS1pushed,w
 11116  15CA  1903               	btfsc	3,2
 11117  15CB  2DCD               	goto	u5751
 11118  15CC  2DCE               	goto	u5750
 11119  15CD                     u5751:
 11120  15CD  2DD3               	goto	l5933
 11121  15CE                     u5750:
 11122  15CE                     l5929:
 11123                           
 11124                           ;main.c: 748: S1button();
 11125  15CE  3187  2797  3195   	fcall	_S1button
 11126  15D1                     l5931:
 11127                           
 11128                           ;main.c: 749: flagS1pushed=0;
 11129  15D1  0020               	movlb	0	; select bank0
 11130  15D2  01E7               	clrf	_flagS1pushed
 11131  15D3                     l5933:
 11132                           
 11133                           ;main.c: 753: };main.c: 754: if(PORTCbits.RC5 == 0){
 11134  15D3  1A8E               	btfsc	14,5	;volatile
 11135  15D4  2DD6               	goto	u5761
 11136  15D5  2DD7               	goto	u5760
 11137  15D6                     u5761:
 11138  15D6  2DF2               	goto	l5943
 11139  15D7                     u5760:
 11140  15D7                     l5935:
 11141                           
 11142                           ;main.c: 755: if(ALAF == 'A'){
 11143  15D7  3041               	movlw	65
 11144  15D8  066A               	xorwf	_ALAF,w
 11145  15D9  1D03               	btfss	3,2
 11146  15DA  2DDC               	goto	u5771
 11147  15DB  2DDD               	goto	u5770
 11148  15DC                     u5771:
 11149  15DC  2DE2               	goto	l5939
 11150  15DD                     u5770:
 11151  15DD                     l5937:
 11152                           
 11153                           ;main.c: 756: ALAF = 'a';
 11154  15DD  3061               	movlw	97
 11155  15DE  00DB               	movwf	??_toggleAlarms
 11156  15DF  085B               	movf	??_toggleAlarms,w
 11157  15E0  00EA               	movwf	_ALAF
 11158                           
 11159                           ;main.c: 757: } else {
 11160  15E1  2DE6               	goto	l1491
 11161  15E2                     l5939:
 11162                           
 11163                           ;main.c: 758: ALAF = 'A';
 11164  15E2  3041               	movlw	65
 11165  15E3  00DB               	movwf	??_toggleAlarms
 11166  15E4  085B               	movf	??_toggleAlarms,w
 11167  15E5  00EA               	movwf	_ALAF
 11168  15E6                     l1491:
 11169                           
 11170                           ;main.c: 759: };main.c: 760: _delay((unsigned long)((400)*(1000000/4000.0)));
 11171  15E6  3082               	movlw	130
 11172  15E7  0020               	movlb	0	; select bank0
 11173  15E8  00DB               	movwf	??_toggleAlarms
 11174  15E9  30DD               	movlw	221
 11175  15EA                     u6567:
 11176  15EA  0B89               	decfsz	9,f
 11177  15EB  2DEA               	goto	u6567
 11178  15EC  0BDB               	decfsz	??_toggleAlarms,f
 11179  15ED  2DEA               	goto	u6567
 11180  15EE  3200               	nop2
 11181  15EF                     l5941:
 11182                           
 11183                           ;main.c: 761: update_menuLCD();
 11184  15EF  3183  23DD  3195   	fcall	_update_menuLCD
 11185  15F2                     l5943:
 11186                           
 11187                           ;main.c: 762: };main.c: 763: if(modeFlag != 4){
 11188  15F2  3004               	movlw	4
 11189  15F3  0020               	movlb	0	; select bank0
 11190  15F4  0662               	xorwf	_modeFlag,w
 11191  15F5  0463               	iorwf	_modeFlag+1,w
 11192  15F6  1903               	btfsc	3,2
 11193  15F7  2DF9               	goto	u5781
 11194  15F8  2DFA               	goto	u5780
 11195  15F9                     u5781:
 11196  15F9  2DFD               	goto	l5947
 11197  15FA                     u5780:
 11198  15FA                     l5945:
 11199                           
 11200                           ;main.c: 764: modeFlag = 0;
 11201  15FA  01E2               	clrf	_modeFlag
 11202  15FB  01E3               	clrf	_modeFlag+1
 11203                           
 11204                           ;main.c: 765: break;
 11205  15FC  2E08               	goto	l1496
 11206  15FD                     l5947:
 11207                           
 11208                           ;main.c: 766: };main.c: 767: if(updateLCD){
 11209  15FD  086F               	movf	_updateLCD,w
 11210  15FE  1903               	btfsc	3,2
 11211  15FF  2E01               	goto	u5791
 11212  1600  2E02               	goto	u5790
 11213  1601                     u5791:
 11214  1601  2DC8               	goto	l1487
 11215  1602                     u5790:
 11216  1602                     l5949:
 11217                           
 11218                           ;main.c: 768: update_menuLCD();
 11219  1602  3183  23DD  3195   	fcall	_update_menuLCD
 11220  1605                     l5951:
 11221                           
 11222                           ;main.c: 769: updateLCD=0;
 11223  1605  0020               	movlb	0	; select bank0
 11224  1606  01EF               	clrf	_updateLCD
 11225  1607  2DC8               	goto	l1487
 11226  1608                     l1496:
 11227  1608  0008               	return
 11228  1609                     __end_of_toggleAlarms:
 11229                           
 11230                           	psect	text2
 11231  1291                     __ptext2:	
 11232 ;; *************** function _memset *****************
 11233 ;; Defined at:
 11234 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;  p1              1    wreg     PTR void 
 11237 ;;		 -> main@buff(20), 
 11238 ;;  c               2    0[BANK0 ] int 
 11239 ;;  n               2    2[BANK0 ] unsigned int 
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;  p1              1    6[BANK0 ] PTR void 
 11242 ;;		 -> main@buff(20), 
 11243 ;;  p               1    5[BANK0 ] PTR unsigned char 
 11244 ;;		 -> main@buff(20), 
 11245 ;; Return value:  Size  Location     Type
 11246 ;;                  1    wreg      PTR void 
 11247 ;; Registers used:
 11248 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11249 ;; Tracked objects:
 11250 ;;		On entry : 0/0
 11251 ;;		On exit  : 0/0
 11252 ;;		Unchanged: 0/0
 11253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11255 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11256 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11257 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11258 ;;Total ram usage:        7 bytes
 11259 ;; Hardware stack levels used:    1
 11260 ;; Hardware stack levels required when called:    5
 11261 ;; This function calls:
 11262 ;;		Nothing
 11263 ;; This function is called by:
 11264 ;;		_main
 11265 ;; This function uses a non-reentrant model
 11266 ;;
 11267                           
 11268                           
 11269                           ;psect for function _memset
 11270  1291                     _memset:
 11271                           
 11272                           ;incstack = 0
 11273                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11274                           ;memset@p1 stored from wreg
 11275  1291  0020               	movlb	0	; select bank0
 11276  1292  00A6               	movwf	memset@p1
 11277  1293                     l6177:
 11278  1293  0826               	movf	memset@p1,w
 11279  1294  00A4               	movwf	??_memset
 11280  1295  0824               	movf	??_memset,w
 11281  1296  00A5               	movwf	memset@p
 11282  1297  2AA3               	goto	l6183
 11283  1298                     l6179:
 11284  1298  0820               	movf	memset@c,w
 11285  1299  00A4               	movwf	??_memset
 11286  129A  0825               	movf	memset@p,w
 11287  129B  0086               	movwf	6
 11288  129C  0187               	clrf	7
 11289  129D  0824               	movf	??_memset,w
 11290  129E  0081               	movwf	1
 11291  129F                     l6181:
 11292  129F  3001               	movlw	1
 11293  12A0  00A4               	movwf	??_memset
 11294  12A1  0824               	movf	??_memset,w
 11295  12A2  07A5               	addwf	memset@p,f
 11296  12A3                     l6183:
 11297  12A3  3001               	movlw	1
 11298  12A4  02A2               	subwf	memset@n,f
 11299  12A5  3000               	movlw	0
 11300  12A6  3BA3               	subwfb	memset@n+1,f
 11301  12A7  0A22               	incf	memset@n,w
 11302  12A8  1D03               	skipz
 11303  12A9  2AAE               	goto	u6141
 11304  12AA  0A23               	incf	memset@n+1,w
 11305  12AB  1D03               	btfss	3,2
 11306  12AC  2AAE               	goto	u6141
 11307  12AD  2AAF               	goto	u6140
 11308  12AE                     u6141:
 11309  12AE  2A98               	goto	l6179
 11310  12AF                     u6140:
 11311  12AF                     l2297:
 11312  12AF  0008               	return
 11313  12B0                     __end_of_memset:
 11314                           
 11315                           	psect	text3
 11316  07F4                     __ptext3:	
 11317 ;; *************** function _i2c1_driver_open *****************
 11318 ;; Defined at:
 11319 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;		None
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;		None
 11324 ;; Return value:  Size  Location     Type
 11325 ;;		None               void
 11326 ;; Registers used:
 11327 ;;		wreg, status,2
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;Total ram usage:        0 bytes
 11338 ;; Hardware stack levels used:    1
 11339 ;; Hardware stack levels required when called:    5
 11340 ;; This function calls:
 11341 ;;		Nothing
 11342 ;; This function is called by:
 11343 ;;		_main
 11344 ;; This function uses a non-reentrant model
 11345 ;;
 11346                           
 11347                           
 11348                           ;psect for function _i2c1_driver_open
 11349  07F4                     _i2c1_driver_open:
 11350  07F4                     l5623:	
 11351                           ;incstack = 0
 11352                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 11353                           
 11354                           
 11355                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 11356  07F4  0023               	movlb	3	; select bank3
 11357  07F5  1A90               	btfsc	16,5	;volatile
 11358  07F6  2FF8               	goto	u5171
 11359  07F7  2FF9               	goto	u5170
 11360  07F8                     u5171:
 11361  07F8  2FFF               	goto	l255
 11362  07F9                     u5170:
 11363  07F9                     l5625:
 11364                           
 11365                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
 11366  07F9  018F               	clrf	15	;volatile
 11367  07FA                     l5627:
 11368                           
 11369                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 11370  07FA  3028               	movlw	40
 11371  07FB  0090               	movwf	16	;volatile
 11372  07FC                     l5629:
 11373                           
 11374                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 11375  07FC  0191               	clrf	17	;volatile
 11376                           
 11377                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 11378  07FD  3003               	movlw	3
 11379  07FE  008D               	movwf	13	;volatile
 11380  07FF                     l255:
 11381  07FF  0008               	return
 11382  0800                     __end_of_i2c1_driver_open:
 11383                           
 11384                           	psect	text4
 11385  1FFC                     __ptext4:	
 11386 ;; *************** function _getch *****************
 11387 ;; Defined at:
 11388 ;;		line 171 in file "mcc_generated_files/eusart.c"
 11389 ;; Parameters:    Size  Location     Type
 11390 ;;		None
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;		None
 11393 ;; Return value:  Size  Location     Type
 11394 ;;                  1    wreg      unsigned char 
 11395 ;; Registers used:
 11396 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11397 ;; Tracked objects:
 11398 ;;		On entry : 0/0
 11399 ;;		On exit  : 0/0
 11400 ;;		Unchanged: 0/0
 11401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11406 ;;Total ram usage:        0 bytes
 11407 ;; Hardware stack levels used:    1
 11408 ;; Hardware stack levels required when called:    6
 11409 ;; This function calls:
 11410 ;;		_EUSART_Read
 11411 ;; This function is called by:
 11412 ;;		_main
 11413 ;; This function uses a non-reentrant model
 11414 ;;
 11415                           
 11416                           
 11417                           ;psect for function _getch
 11418  1FFC                     _getch:
 11419  1FFC                     l5681:	
 11420                           ;incstack = 0
 11421                           ; Regs used in _getch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11422                           
 11423                           
 11424                           ;eusart.c: 173: return EUSART_Read();
 11425  1FFC  3193  23C9  319F   	fcall	_EUSART_Read
 11426  1FFF                     l912:
 11427  1FFF  0008               	return
 11428  2000                     __end_of_getch:
 11429                           
 11430                           	psect	text5
 11431  13C9                     __ptext5:	
 11432 ;; *************** function _EUSART_Read *****************
 11433 ;; Defined at:
 11434 ;;		line 128 in file "mcc_generated_files/eusart.c"
 11435 ;; Parameters:    Size  Location     Type
 11436 ;;		None
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;  readValue       1    1[BANK0 ] unsigned char 
 11439 ;; Return value:  Size  Location     Type
 11440 ;;                  1    wreg      unsigned char 
 11441 ;; Registers used:
 11442 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11443 ;; Tracked objects:
 11444 ;;		On entry : 0/0
 11445 ;;		On exit  : 0/0
 11446 ;;		Unchanged: 0/0
 11447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11450 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11451 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11452 ;;Total ram usage:        2 bytes
 11453 ;; Hardware stack levels used:    1
 11454 ;; Hardware stack levels required when called:    5
 11455 ;; This function calls:
 11456 ;;		Nothing
 11457 ;; This function is called by:
 11458 ;;		_getch
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           
 11463                           ;psect for function _EUSART_Read
 11464  13C9                     _EUSART_Read:
 11465  13C9                     l5253:	
 11466                           ;incstack = 0
 11467                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11468                           
 11469  13C9                     l5255:	
 11470                           ;eusart.c: 132: while(0 == eusartRxCount)
 11471                           
 11472  13C9  0021               	movlb	1	; select bank1
 11473  13CA  0859               	movf	_eusartRxCount^(0+128),w	;volatile
 11474  13CB  1903               	btfsc	3,2
 11475  13CC  2BCE               	goto	u4441
 11476  13CD  2BCF               	goto	u4440
 11477  13CE                     u4441:
 11478  13CE  2BC9               	goto	l5255
 11479  13CF                     u4440:
 11480  13CF                     l5257:
 11481                           
 11482                           ;eusart.c: 134: };eusart.c: 136: readValue = eusartRxBuffer[eusartRxTail++];
 11483  13CF  085A               	movf	_eusartRxTail^(0+128),w
 11484  13D0  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 11485  13D1  0086               	movwf	6
 11486  13D2  3002               	movlw	2	; select bank4/5
 11487  13D3  0087               	movwf	7
 11488  13D4  0801               	movf	1,w
 11489  13D5  0020               	movlb	0	; select bank0
 11490  13D6  00A0               	movwf	??_EUSART_Read
 11491  13D7  0820               	movf	??_EUSART_Read,w
 11492  13D8  00A1               	movwf	EUSART_Read@readValue
 11493  13D9                     l5259:
 11494  13D9  3001               	movlw	1
 11495  13DA  00A0               	movwf	??_EUSART_Read
 11496  13DB  0820               	movf	??_EUSART_Read,w
 11497  13DC  0021               	movlb	1	; select bank1
 11498  13DD  07DA               	addwf	_eusartRxTail^(0+128),f	;volatile
 11499  13DE                     l5261:
 11500                           
 11501                           ;eusart.c: 137: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 11502  13DE  3040               	movlw	64
 11503  13DF  025A               	subwf	_eusartRxTail^(0+128),w	;volatile
 11504  13E0  1C03               	skipc
 11505  13E1  2BE3               	goto	u4451
 11506  13E2  2BE4               	goto	u4450
 11507  13E3                     u4451:
 11508  13E3  2BE5               	goto	l5265
 11509  13E4                     u4450:
 11510  13E4                     l5263:
 11511                           
 11512                           ;eusart.c: 138: {;eusart.c: 139: eusartRxTail = 0;
 11513  13E4  01DA               	clrf	_eusartRxTail^(0+128)	;volatile
 11514  13E5                     l5265:
 11515                           
 11516                           ;eusart.c: 140: };eusart.c: 141: PIE3bits.RCIE = 0;
 11517  13E5  002E               	movlb	14	; select bank14
 11518  13E6  1299               	bcf	25,5	;volatile
 11519  13E7                     l5267:
 11520                           
 11521                           ;eusart.c: 142: eusartRxCount--;
 11522  13E7  3001               	movlw	1
 11523  13E8  0021               	movlb	1	; select bank1
 11524  13E9  02D9               	subwf	_eusartRxCount^(0+128),f	;volatile
 11525  13EA                     l5269:
 11526                           
 11527                           ;eusart.c: 143: PIE3bits.RCIE = 1;
 11528  13EA  002E               	movlb	14	; select bank14
 11529  13EB  1699               	bsf	25,5	;volatile
 11530  13EC                     l5271:
 11531                           
 11532                           ;eusart.c: 145: return readValue;
 11533  13EC  0020               	movlb	0	; select bank0
 11534  13ED  0821               	movf	EUSART_Read@readValue,w
 11535  13EE                     l900:
 11536  13EE  0008               	return
 11537  13EF                     __end_of_EUSART_Read:
 11538                           
 11539                           	psect	text6
 11540  171A                     __ptext6:	
 11541 ;; *************** function _editTemp *****************
 11542 ;; Defined at:
 11543 ;;		line 680 in file "main.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;		None
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;		None
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11559 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11560 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11561 ;;Total ram usage:        1 bytes
 11562 ;; Hardware stack levels used:    1
 11563 ;; Hardware stack levels required when called:   10
 11564 ;; This function calls:
 11565 ;;		_S1button
 11566 ;;		_update_menuLCD
 11567 ;; This function is called by:
 11568 ;;		_main
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           
 11573                           ;psect for function _editTemp
 11574  171A                     _editTemp:
 11575  171A                     l1461:	
 11576                           ;incstack = 0
 11577                           ; Regs used in _editTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11578                           ;main.c: 681: while(1){
 11579                           
 11580  171A                     l5863:
 11581                           
 11582                           ;main.c: 682: if(flagS1pushed){
 11583  171A  0020               	movlb	0	; select bank0
 11584  171B  0867               	movf	_flagS1pushed,w
 11585  171C  1903               	btfsc	3,2
 11586  171D  2F1F               	goto	u5631
 11587  171E  2F20               	goto	u5630
 11588  171F                     u5631:
 11589  171F  2F25               	goto	l5869
 11590  1720                     u5630:
 11591  1720                     l5865:
 11592                           
 11593                           ;main.c: 683: S1button();
 11594  1720  3187  2797  3197   	fcall	_S1button
 11595  1723                     l5867:
 11596                           
 11597                           ;main.c: 684: flagS1pushed=0;
 11598  1723  0020               	movlb	0	; select bank0
 11599  1724  01E7               	clrf	_flagS1pushed
 11600  1725                     l5869:
 11601                           
 11602                           ;main.c: 688: };main.c: 689: if(PORTCbits.RC5 == 0){
 11603  1725  1A8E               	btfsc	14,5	;volatile
 11604  1726  2F28               	goto	u5641
 11605  1727  2F29               	goto	u5640
 11606  1728                     u5641:
 11607  1728  2F4B               	goto	l5885
 11608  1729                     u5640:
 11609  1729                     l5871:
 11610                           
 11611                           ;main.c: 690: if(editingTempAlarm == 0){
 11612  1729  0021               	movlb	1	; select bank1
 11613  172A  0857               	movf	_editingTempAlarm^(0+128),w
 11614  172B  1D03               	btfss	3,2
 11615  172C  2F2E               	goto	u5651
 11616  172D  2F2F               	goto	u5650
 11617  172E                     u5651:
 11618  172E  2F32               	goto	l5875
 11619  172F                     u5650:
 11620  172F                     l5873:
 11621                           
 11622                           ;main.c: 691: editingTempAlarm = 1;
 11623  172F  01D7               	clrf	_editingTempAlarm^(0+128)
 11624  1730  0AD7               	incf	_editingTempAlarm^(0+128),f
 11625                           
 11626                           ;main.c: 692: } else {
 11627  1731  2F3F               	goto	l5881
 11628  1732                     l5875:
 11629                           
 11630                           ;main.c: 693: tempAlarm.alarmTemp++;
 11631  1732  3001               	movlw	1
 11632  1733  0020               	movlb	0	; select bank0
 11633  1734  00DB               	movwf	??_editTemp
 11634  1735  085B               	movf	??_editTemp,w
 11635  1736  0021               	movlb	1	; select bank1
 11636  1737  07CA               	addwf	_tempAlarm^(0+128),f
 11637  1738                     l5877:
 11638                           
 11639                           ;main.c: 694: if(tempAlarm.alarmTemp > 50){
 11640  1738  3033               	movlw	51
 11641  1739  024A               	subwf	_tempAlarm^(0+128),w
 11642  173A  1C03               	skipc
 11643  173B  2F3D               	goto	u5661
 11644  173C  2F3E               	goto	u5660
 11645  173D                     u5661:
 11646  173D  2F3F               	goto	l5881
 11647  173E                     u5660:
 11648  173E                     l5879:
 11649                           
 11650                           ;main.c: 695: tempAlarm.alarmTemp = 0;
 11651  173E  01CA               	clrf	_tempAlarm^(0+128)
 11652  173F                     l5881:
 11653                           
 11654                           ;main.c: 696: };main.c: 697: };main.c: 698: _delay((unsigned long)((400)*(1000000/4000.0
      +                          )));
 11655  173F  3082               	movlw	130
 11656  1740  0020               	movlb	0	; select bank0
 11657  1741  00DB               	movwf	??_editTemp
 11658  1742  30DD               	movlw	221
 11659  1743                     u6577:
 11660  1743  0B89               	decfsz	9,f
 11661  1744  2F43               	goto	u6577
 11662  1745  0BDB               	decfsz	??_editTemp,f
 11663  1746  2F43               	goto	u6577
 11664  1747  3200               	nop2
 11665  1748                     l5883:
 11666                           
 11667                           ;main.c: 699: update_menuLCD();
 11668  1748  3183  23DD  3197   	fcall	_update_menuLCD
 11669  174B                     l5885:
 11670                           
 11671                           ;main.c: 700: };main.c: 701: if(modeFlag != 2){
 11672  174B  3002               	movlw	2
 11673  174C  0020               	movlb	0	; select bank0
 11674  174D  0662               	xorwf	_modeFlag,w
 11675  174E  0463               	iorwf	_modeFlag+1,w
 11676  174F  1903               	btfsc	3,2
 11677  1750  2F52               	goto	u5671
 11678  1751  2F53               	goto	u5670
 11679  1752                     u5671:
 11680  1752  2F56               	goto	l5889
 11681  1753                     u5670:
 11682  1753                     l5887:
 11683                           
 11684                           ;main.c: 702: editingTempAlarm = 0;
 11685  1753  0021               	movlb	1	; select bank1
 11686  1754  01D7               	clrf	_editingTempAlarm^(0+128)
 11687                           
 11688                           ;main.c: 703: break;
 11689  1755  2F61               	goto	l1471
 11690  1756                     l5889:
 11691                           
 11692                           ;main.c: 704: };main.c: 705: if(updateLCD){
 11693  1756  086F               	movf	_updateLCD,w
 11694  1757  1903               	btfsc	3,2
 11695  1758  2F5A               	goto	u5681
 11696  1759  2F5B               	goto	u5680
 11697  175A                     u5681:
 11698  175A  2F1A               	goto	l1461
 11699  175B                     u5680:
 11700  175B                     l5891:
 11701                           
 11702                           ;main.c: 706: update_menuLCD();
 11703  175B  3183  23DD  3197   	fcall	_update_menuLCD
 11704  175E                     l5893:
 11705                           
 11706                           ;main.c: 707: updateLCD=0;
 11707  175E  0020               	movlb	0	; select bank0
 11708  175F  01EF               	clrf	_updateLCD
 11709  1760  2F1A               	goto	l1461
 11710  1761                     l1471:
 11711  1761  0008               	return
 11712  1762                     __end_of_editTemp:
 11713                           
 11714                           	psect	text7
 11715  16D2                     __ptext7:	
 11716 ;; *************** function _editLum *****************
 11717 ;; Defined at:
 11718 ;;		line 712 in file "main.c"
 11719 ;; Parameters:    Size  Location     Type
 11720 ;;		None
 11721 ;; Auto vars:     Size  Location     Type
 11722 ;;		None
 11723 ;; Return value:  Size  Location     Type
 11724 ;;                  1    wreg      void 
 11725 ;; Registers used:
 11726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11727 ;; Tracked objects:
 11728 ;;		On entry : 0/0
 11729 ;;		On exit  : 0/0
 11730 ;;		Unchanged: 0/0
 11731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11734 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11736 ;;Total ram usage:        1 bytes
 11737 ;; Hardware stack levels used:    1
 11738 ;; Hardware stack levels required when called:   10
 11739 ;; This function calls:
 11740 ;;		_S1button
 11741 ;;		_update_menuLCD
 11742 ;; This function is called by:
 11743 ;;		_main
 11744 ;; This function uses a non-reentrant model
 11745 ;;
 11746                           
 11747                           
 11748                           ;psect for function _editLum
 11749  16D2                     _editLum:
 11750  16D2                     l1474:	
 11751                           ;incstack = 0
 11752                           ; Regs used in _editLum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11753                           ;main.c: 713: while(1){
 11754                           
 11755  16D2                     l5895:
 11756                           
 11757                           ;main.c: 714: if(flagS1pushed){
 11758  16D2  0020               	movlb	0	; select bank0
 11759  16D3  0867               	movf	_flagS1pushed,w
 11760  16D4  1903               	btfsc	3,2
 11761  16D5  2ED7               	goto	u5691
 11762  16D6  2ED8               	goto	u5690
 11763  16D7                     u5691:
 11764  16D7  2EDD               	goto	l5901
 11765  16D8                     u5690:
 11766  16D8                     l5897:
 11767                           
 11768                           ;main.c: 715: S1button();
 11769  16D8  3187  2797  3196   	fcall	_S1button
 11770  16DB                     l5899:
 11771                           
 11772                           ;main.c: 716: flagS1pushed=0;
 11773  16DB  0020               	movlb	0	; select bank0
 11774  16DC  01E7               	clrf	_flagS1pushed
 11775  16DD                     l5901:
 11776                           
 11777                           ;main.c: 720: };main.c: 721: if(PORTCbits.RC5 == 0){
 11778  16DD  1A8E               	btfsc	14,5	;volatile
 11779  16DE  2EE0               	goto	u5701
 11780  16DF  2EE1               	goto	u5700
 11781  16E0                     u5701:
 11782  16E0  2F03               	goto	l5917
 11783  16E1                     u5700:
 11784  16E1                     l5903:
 11785                           
 11786                           ;main.c: 722: if(editingLumAlarm == 0){
 11787  16E1  0021               	movlb	1	; select bank1
 11788  16E2  0856               	movf	_editingLumAlarm^(0+128),w
 11789  16E3  1D03               	btfss	3,2
 11790  16E4  2EE6               	goto	u5711
 11791  16E5  2EE7               	goto	u5710
 11792  16E6                     u5711:
 11793  16E6  2EEA               	goto	l5907
 11794  16E7                     u5710:
 11795  16E7                     l5905:
 11796                           
 11797                           ;main.c: 723: editingLumAlarm = 1;
 11798  16E7  01D6               	clrf	_editingLumAlarm^(0+128)
 11799  16E8  0AD6               	incf	_editingLumAlarm^(0+128),f
 11800                           
 11801                           ;main.c: 724: } else {
 11802  16E9  2EF7               	goto	l5913
 11803  16EA                     l5907:
 11804                           
 11805                           ;main.c: 725: lumAlarm.alarmLum++;
 11806  16EA  3001               	movlw	1
 11807  16EB  0020               	movlb	0	; select bank0
 11808  16EC  00DB               	movwf	??_editLum
 11809  16ED  085B               	movf	??_editLum,w
 11810  16EE  0021               	movlb	1	; select bank1
 11811  16EF  07C7               	addwf	_lumAlarm^(0+128),f
 11812  16F0                     l5909:
 11813                           
 11814                           ;main.c: 726: if(lumAlarm.alarmLum > 7){
 11815  16F0  3008               	movlw	8
 11816  16F1  0247               	subwf	_lumAlarm^(0+128),w
 11817  16F2  1C03               	skipc
 11818  16F3  2EF5               	goto	u5721
 11819  16F4  2EF6               	goto	u5720
 11820  16F5                     u5721:
 11821  16F5  2EF7               	goto	l5913
 11822  16F6                     u5720:
 11823  16F6                     l5911:
 11824                           
 11825                           ;main.c: 727: lumAlarm.alarmLum = 0;
 11826  16F6  01C7               	clrf	_lumAlarm^(0+128)
 11827  16F7                     l5913:
 11828                           
 11829                           ;main.c: 728: };main.c: 729: };main.c: 730: _delay((unsigned long)((400)*(1000000/4000.0
      +                          )));
 11830  16F7  3082               	movlw	130
 11831  16F8  0020               	movlb	0	; select bank0
 11832  16F9  00DB               	movwf	??_editLum
 11833  16FA  30DD               	movlw	221
 11834  16FB                     u6587:
 11835  16FB  0B89               	decfsz	9,f
 11836  16FC  2EFB               	goto	u6587
 11837  16FD  0BDB               	decfsz	??_editLum,f
 11838  16FE  2EFB               	goto	u6587
 11839  16FF  3200               	nop2
 11840  1700                     l5915:
 11841                           
 11842                           ;main.c: 731: update_menuLCD();
 11843  1700  3183  23DD  3196   	fcall	_update_menuLCD
 11844  1703                     l5917:
 11845                           
 11846                           ;main.c: 732: };main.c: 733: if(modeFlag != 3){
 11847  1703  3003               	movlw	3
 11848  1704  0020               	movlb	0	; select bank0
 11849  1705  0662               	xorwf	_modeFlag,w
 11850  1706  0463               	iorwf	_modeFlag+1,w
 11851  1707  1903               	btfsc	3,2
 11852  1708  2F0A               	goto	u5731
 11853  1709  2F0B               	goto	u5730
 11854  170A                     u5731:
 11855  170A  2F0E               	goto	l5921
 11856  170B                     u5730:
 11857  170B                     l5919:
 11858                           
 11859                           ;main.c: 734: editingLumAlarm = 0;
 11860  170B  0021               	movlb	1	; select bank1
 11861  170C  01D6               	clrf	_editingLumAlarm^(0+128)
 11862                           
 11863                           ;main.c: 735: break;
 11864  170D  2F19               	goto	l1484
 11865  170E                     l5921:
 11866                           
 11867                           ;main.c: 736: };main.c: 737: if(updateLCD){
 11868  170E  086F               	movf	_updateLCD,w
 11869  170F  1903               	btfsc	3,2
 11870  1710  2F12               	goto	u5741
 11871  1711  2F13               	goto	u5740
 11872  1712                     u5741:
 11873  1712  2ED2               	goto	l1474
 11874  1713                     u5740:
 11875  1713                     l5923:
 11876                           
 11877                           ;main.c: 738: update_menuLCD();
 11878  1713  3183  23DD  3196   	fcall	_update_menuLCD
 11879  1716                     l5925:
 11880                           
 11881                           ;main.c: 739: updateLCD=0;
 11882  1716  0020               	movlb	0	; select bank0
 11883  1717  01EF               	clrf	_updateLCD
 11884  1718  2ED2               	goto	l1474
 11885  1719                     l1484:
 11886  1719  0008               	return
 11887  171A                     __end_of_editLum:
 11888                           
 11889                           	psect	text8
 11890  0973                     __ptext8:	
 11891 ;; *************** function _editClock *****************
 11892 ;; Defined at:
 11893 ;;		line 633 in file "main.c"
 11894 ;; Parameters:    Size  Location     Type
 11895 ;;		None
 11896 ;; Auto vars:     Size  Location     Type
 11897 ;;		None
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  1    wreg      void 
 11900 ;; Registers used:
 11901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 0/0
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11909 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11910 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11911 ;;Total ram usage:        1 bytes
 11912 ;; Hardware stack levels used:    1
 11913 ;; Hardware stack levels required when called:   10
 11914 ;; This function calls:
 11915 ;;		_S1button
 11916 ;;		_update_menuLCD
 11917 ;; This function is called by:
 11918 ;;		_main
 11919 ;; This function uses a non-reentrant model
 11920 ;;
 11921                           
 11922                           
 11923                           ;psect for function _editClock
 11924  0973                     _editClock:
 11925  0973                     l1438:	
 11926                           ;incstack = 0
 11927                           ; Regs used in _editClock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11928                           ;main.c: 635: while(1){
 11929                           
 11930  0973                     l5813:
 11931                           
 11932                           ;main.c: 636: if(flagS1pushed){
 11933  0973  0020               	movlb	0	; select bank0
 11934  0974  0867               	movf	_flagS1pushed,w
 11935  0975  1903               	btfsc	3,2
 11936  0976  2978               	goto	u5521
 11937  0977  2979               	goto	u5520
 11938  0978                     u5521:
 11939  0978  297E               	goto	l5819
 11940  0979                     u5520:
 11941  0979                     l5815:
 11942                           
 11943                           ;main.c: 637: S1button();
 11944  0979  3187  2797  3189   	fcall	_S1button
 11945  097C                     l5817:
 11946                           
 11947                           ;main.c: 638: flagS1pushed=0;
 11948  097C  0020               	movlb	0	; select bank0
 11949  097D  01E7               	clrf	_flagS1pushed
 11950  097E                     l5819:
 11951                           
 11952                           ;main.c: 642: };main.c: 643: if(PORTCbits.RC5 == 0){
 11953  097E  1A8E               	btfsc	14,5	;volatile
 11954  097F  2981               	goto	u5531
 11955  0980  2982               	goto	u5530
 11956  0981                     u5531:
 11957  0981  29DD               	goto	l5853
 11958  0982                     u5530:
 11959  0982                     l5821:
 11960                           
 11961                           ;main.c: 644: if(editingClockAlarm == 0){
 11962  0982  0864               	movf	_editingClockAlarm,w
 11963  0983  0465               	iorwf	_editingClockAlarm+1,w
 11964  0984  1D03               	btfss	3,2
 11965  0985  2987               	goto	u5541
 11966  0986  2988               	goto	u5540
 11967  0987                     u5541:
 11968  0987  298D               	goto	l5825
 11969  0988                     u5540:
 11970  0988                     l5823:
 11971                           
 11972                           ;main.c: 645: editingClockAlarm = 1;
 11973  0988  3001               	movlw	1
 11974  0989  00E4               	movwf	_editingClockAlarm
 11975  098A  3000               	movlw	0
 11976  098B  00E5               	movwf	_editingClockAlarm+1
 11977                           
 11978                           ;main.c: 647: } else if(editingClockAlarm == 1){
 11979  098C  29D1               	goto	l5849
 11980  098D                     l5825:
 11981  098D  0364               	decf	_editingClockAlarm,w
 11982  098E  0465               	iorwf	_editingClockAlarm+1,w
 11983  098F  1D03               	btfss	3,2
 11984  0990  2992               	goto	u5551
 11985  0991  2993               	goto	u5550
 11986  0992                     u5551:
 11987  0992  29A3               	goto	l5833
 11988  0993                     u5550:
 11989  0993                     l5827:
 11990                           
 11991                           ;main.c: 648: if(clkAlarm.alarmVal.h >= 23){
 11992  0993  3017               	movlw	23
 11993  0994  0021               	movlb	1	; select bank1
 11994  0995  0240               	subwf	_clkAlarm^(0+128),w
 11995  0996  1C03               	skipc
 11996  0997  2999               	goto	u5561
 11997  0998  299A               	goto	u5560
 11998  0999                     u5561:
 11999  0999  299C               	goto	l5831
 12000  099A                     u5560:
 12001  099A                     l5829:
 12002                           
 12003                           ;main.c: 649: clkAlarm.alarmVal.h = 0;
 12004  099A  01C0               	clrf	_clkAlarm^(0+128)
 12005                           
 12006                           ;main.c: 650: } else{
 12007  099B  29D1               	goto	l5849
 12008  099C                     l5831:
 12009                           
 12010                           ;main.c: 651: clkAlarm.alarmVal.h++;
 12011  099C  3001               	movlw	1
 12012  099D  0020               	movlb	0	; select bank0
 12013  099E  00DB               	movwf	??_editClock
 12014  099F  085B               	movf	??_editClock,w
 12015  09A0  0021               	movlb	1	; select bank1
 12016  09A1  07C0               	addwf	_clkAlarm^(0+128),f
 12017  09A2  29D1               	goto	l5849
 12018  09A3                     l5833:
 12019  09A3  3002               	movlw	2
 12020  09A4  0664               	xorwf	_editingClockAlarm,w
 12021  09A5  0465               	iorwf	_editingClockAlarm+1,w
 12022  09A6  1D03               	btfss	3,2
 12023  09A7  29A9               	goto	u5571
 12024  09A8  29AA               	goto	u5570
 12025  09A9                     u5571:
 12026  09A9  29BA               	goto	l5841
 12027  09AA                     u5570:
 12028  09AA                     l5835:
 12029                           
 12030                           ;main.c: 654: if(clkAlarm.alarmVal.m == 59){
 12031  09AA  303B               	movlw	59
 12032  09AB  0021               	movlb	1	; select bank1
 12033  09AC  0641               	xorwf	(_clkAlarm^(0+128)+1),w
 12034  09AD  1D03               	btfss	3,2
 12035  09AE  29B0               	goto	u5581
 12036  09AF  29B1               	goto	u5580
 12037  09B0                     u5581:
 12038  09B0  29B3               	goto	l5839
 12039  09B1                     u5580:
 12040  09B1                     l5837:
 12041                           
 12042                           ;main.c: 655: clkAlarm.alarmVal.m = 0;
 12043  09B1  01C1               	clrf	(_clkAlarm^(0+128)+1)
 12044                           
 12045                           ;main.c: 656: } else{
 12046  09B2  29D1               	goto	l5849
 12047  09B3                     l5839:
 12048                           
 12049                           ;main.c: 657: clkAlarm.alarmVal.m++;
 12050  09B3  3001               	movlw	1
 12051  09B4  0020               	movlb	0	; select bank0
 12052  09B5  00DB               	movwf	??_editClock
 12053  09B6  085B               	movf	??_editClock,w
 12054  09B7  0021               	movlb	1	; select bank1
 12055  09B8  07C1               	addwf	(_clkAlarm^(0+128)+1),f
 12056  09B9  29D1               	goto	l5849
 12057  09BA                     l5841:
 12058  09BA  3003               	movlw	3
 12059  09BB  0664               	xorwf	_editingClockAlarm,w
 12060  09BC  0465               	iorwf	_editingClockAlarm+1,w
 12061  09BD  1D03               	btfss	3,2
 12062  09BE  29C0               	goto	u5591
 12063  09BF  29C1               	goto	u5590
 12064  09C0                     u5591:
 12065  09C0  29D1               	goto	l1446
 12066  09C1                     u5590:
 12067  09C1                     l5843:
 12068                           
 12069                           ;main.c: 660: if(clkAlarm.alarmVal.s == 59){
 12070  09C1  303B               	movlw	59
 12071  09C2  0021               	movlb	1	; select bank1
 12072  09C3  0642               	xorwf	(_clkAlarm^(0+128)+2),w
 12073  09C4  1D03               	btfss	3,2
 12074  09C5  29C7               	goto	u5601
 12075  09C6  29C8               	goto	u5600
 12076  09C7                     u5601:
 12077  09C7  29CA               	goto	l5847
 12078  09C8                     u5600:
 12079  09C8                     l5845:
 12080                           
 12081                           ;main.c: 661: clkAlarm.alarmVal.s = 0;
 12082  09C8  01C2               	clrf	(_clkAlarm^(0+128)+2)
 12083                           
 12084                           ;main.c: 662: } else{
 12085  09C9  29D1               	goto	l5849
 12086  09CA                     l5847:
 12087                           
 12088                           ;main.c: 663: clkAlarm.alarmVal.s++;
 12089  09CA  3001               	movlw	1
 12090  09CB  0020               	movlb	0	; select bank0
 12091  09CC  00DB               	movwf	??_editClock
 12092  09CD  085B               	movf	??_editClock,w
 12093  09CE  0021               	movlb	1	; select bank1
 12094  09CF  07C2               	addwf	(_clkAlarm^(0+128)+2),f
 12095  09D0  29D1               	goto	l5849
 12096  09D1                     l1446:
 12097  09D1                     l5849:
 12098                           
 12099                           ;main.c: 664: };main.c: 665: };main.c: 666: _delay((unsigned long)((400)*(1000000/4000.0
      +                          )));
 12100  09D1  3082               	movlw	130
 12101  09D2  0020               	movlb	0	; select bank0
 12102  09D3  00DB               	movwf	??_editClock
 12103  09D4  30DD               	movlw	221
 12104  09D5                     u6597:
 12105  09D5  0B89               	decfsz	9,f
 12106  09D6  29D5               	goto	u6597
 12107  09D7  0BDB               	decfsz	??_editClock,f
 12108  09D8  29D5               	goto	u6597
 12109  09D9  3200               	nop2
 12110  09DA                     l5851:
 12111                           
 12112                           ;main.c: 667: update_menuLCD();
 12113  09DA  3183  23DD  3189   	fcall	_update_menuLCD
 12114  09DD                     l5853:
 12115                           
 12116                           ;main.c: 668: };main.c: 669: if(modeFlag != 1){
 12117  09DD  0020               	movlb	0	; select bank0
 12118  09DE  0362               	decf	_modeFlag,w
 12119  09DF  0463               	iorwf	_modeFlag+1,w
 12120  09E0  1903               	btfsc	3,2
 12121  09E1  29E3               	goto	u5611
 12122  09E2  29E4               	goto	u5610
 12123  09E3                     u5611:
 12124  09E3  29E7               	goto	l5857
 12125  09E4                     u5610:
 12126  09E4                     l5855:
 12127                           
 12128                           ;main.c: 670: editingClockAlarm = 0;
 12129  09E4  01E4               	clrf	_editingClockAlarm
 12130  09E5  01E5               	clrf	_editingClockAlarm+1
 12131                           
 12132                           ;main.c: 671: break;
 12133  09E6  29F2               	goto	l1458
 12134  09E7                     l5857:
 12135                           
 12136                           ;main.c: 672: };main.c: 673: if(updateLCD){
 12137  09E7  086F               	movf	_updateLCD,w
 12138  09E8  1903               	btfsc	3,2
 12139  09E9  29EB               	goto	u5621
 12140  09EA  29EC               	goto	u5620
 12141  09EB                     u5621:
 12142  09EB  2973               	goto	l1438
 12143  09EC                     u5620:
 12144  09EC                     l5859:
 12145                           
 12146                           ;main.c: 674: update_menuLCD();
 12147  09EC  3183  23DD  3189   	fcall	_update_menuLCD
 12148  09EF                     l5861:
 12149                           
 12150                           ;main.c: 675: updateLCD=0;
 12151  09EF  0020               	movlb	0	; select bank0
 12152  09F0  01EF               	clrf	_updateLCD
 12153  09F1  2973               	goto	l1438
 12154  09F2                     l1458:
 12155  09F2  0008               	return
 12156  09F3                     __end_of_editClock:
 12157                           
 12158                           	psect	text9
 12159  03DD                     __ptext9:	
 12160 ;; *************** function _update_menuLCD *****************
 12161 ;; Defined at:
 12162 ;;		line 398 in file "main.c"
 12163 ;; Parameters:    Size  Location     Type
 12164 ;;		None
 12165 ;; Auto vars:     Size  Location     Type
 12166 ;;  diff            3   56[BANK0 ] struct Time
 12167 ;;  str             8   41[BANK0 ] unsigned char [8]
 12168 ;;  tt              4   49[BANK0 ] unsigned char [4]
 12169 ;;  l               3   53[BANK0 ] unsigned char [3]
 12170 ;; Return value:  Size  Location     Type
 12171 ;;                  1    wreg      void 
 12172 ;; Registers used:
 12173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12174 ;; Tracked objects:
 12175 ;;		On entry : 0/0
 12176 ;;		On exit  : 0/0
 12177 ;;		Unchanged: 0/0
 12178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12180 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12181 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12182 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12183 ;;Total ram usage:       24 bytes
 12184 ;; Hardware stack levels used:    1
 12185 ;; Hardware stack levels required when called:    9
 12186 ;; This function calls:
 12187 ;;		_LCDchar
 12188 ;;		_LCDcmd
 12189 ;;		_LCDstr
 12190 ;;		_PWM6_LoadDutyValue
 12191 ;;		_PWM_Output_D4_Disable
 12192 ;;		_TMR2_StopTimer
 12193 ;;		_differenceBetweenTimePeriod
 12194 ;;		_sprintf
 12195 ;; This function is called by:
 12196 ;;		_editClock
 12197 ;;		_editTemp
 12198 ;;		_editLum
 12199 ;;		_toggleAlarms
 12200 ;;		_main
 12201 ;; This function uses a non-reentrant model
 12202 ;;
 12203                           
 12204                           
 12205                           ;psect for function _update_menuLCD
 12206  03DD                     _update_menuLCD:
 12207  03DD                     l5349:	
 12208                           ;incstack = 0
 12209                           ; Regs used in _update_menuLCD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12210                           
 12211                           
 12212                           ;main.c: 400: char str[8];;main.c: 401: if(editingClockAlarm){
 12213  03DD  0020               	movlb	0	; select bank0
 12214  03DE  0864               	movf	_editingClockAlarm,w
 12215  03DF  0465               	iorwf	_editingClockAlarm+1,w
 12216  03E0  1903               	btfsc	3,2
 12217  03E1  2BE3               	goto	u4621
 12218  03E2  2BE4               	goto	u4620
 12219  03E3                     u4621:
 12220  03E3  2C08               	goto	l5353
 12221  03E4                     u4620:
 12222  03E4                     l5351:
 12223                           
 12224                           ;main.c: 402: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 12225  03E4  3027               	movlw	low (STR_1| (0+32768))
 12226  03E5  00AE               	movwf	sprintf@f
 12227  03E6  3098               	movlw	high (STR_1| (0+32768))
 12228  03E7  00AF               	movwf	sprintf@f+1
 12229  03E8  0021               	movlb	1	; select bank1
 12230  03E9  0840               	movf	_clkAlarm^(0+128),w
 12231  03EA  0020               	movlb	0	; select bank0
 12232  03EB  00C3               	movwf	??_update_menuLCD
 12233  03EC  01C4               	clrf	??_update_menuLCD+1
 12234  03ED  0843               	movf	??_update_menuLCD,w
 12235  03EE  00B0               	movwf	?_sprintf+2
 12236  03EF  0844               	movf	??_update_menuLCD+1,w
 12237  03F0  00B1               	movwf	?_sprintf+3
 12238  03F1  0021               	movlb	1	; select bank1
 12239  03F2  0841               	movf	(_clkAlarm^(0+128)+1),w
 12240  03F3  0020               	movlb	0	; select bank0
 12241  03F4  00C5               	movwf	??_update_menuLCD+2
 12242  03F5  01C6               	clrf	??_update_menuLCD+3
 12243  03F6  0845               	movf	??_update_menuLCD+2,w
 12244  03F7  00B2               	movwf	?_sprintf+4
 12245  03F8  0846               	movf	??_update_menuLCD+3,w
 12246  03F9  00B3               	movwf	?_sprintf+5
 12247  03FA  0021               	movlb	1	; select bank1
 12248  03FB  0842               	movf	(_clkAlarm^(0+128)+2),w
 12249  03FC  0020               	movlb	0	; select bank0
 12250  03FD  00C7               	movwf	??_update_menuLCD+4
 12251  03FE  01C8               	clrf	??_update_menuLCD+5
 12252  03FF  0847               	movf	??_update_menuLCD+4,w
 12253  0400  00B4               	movwf	?_sprintf+6
 12254  0401  0848               	movf	??_update_menuLCD+5,w
 12255  0402  00B5               	movwf	?_sprintf+7
 12256  0403  3049               	movlw	(low (update_menuLCD@str| 0))& (0+255)
 12257  0404  3185  25F9  3183   	fcall	_sprintf
 12258                           
 12259                           ;main.c: 403: } else {
 12260  0407  2C25               	goto	l5355
 12261  0408                     l5353:
 12262                           
 12263                           ;main.c: 404: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 12264  0408  3027               	movlw	low (STR_1| (0+32768))
 12265  0409  00AE               	movwf	sprintf@f
 12266  040A  3098               	movlw	high (STR_1| (0+32768))
 12267  040B  00AF               	movwf	sprintf@f+1
 12268  040C  085F               	movf	_t,w
 12269  040D  00C3               	movwf	??_update_menuLCD
 12270  040E  01C4               	clrf	??_update_menuLCD+1
 12271  040F  0843               	movf	??_update_menuLCD,w
 12272  0410  00B0               	movwf	?_sprintf+2
 12273  0411  0844               	movf	??_update_menuLCD+1,w
 12274  0412  00B1               	movwf	?_sprintf+3
 12275  0413  0860               	movf	_t+1,w
 12276  0414  00C5               	movwf	??_update_menuLCD+2
 12277  0415  01C6               	clrf	??_update_menuLCD+3
 12278  0416  0845               	movf	??_update_menuLCD+2,w
 12279  0417  00B2               	movwf	?_sprintf+4
 12280  0418  0846               	movf	??_update_menuLCD+3,w
 12281  0419  00B3               	movwf	?_sprintf+5
 12282  041A  0861               	movf	_t+2,w
 12283  041B  00C7               	movwf	??_update_menuLCD+4
 12284  041C  01C8               	clrf	??_update_menuLCD+5
 12285  041D  0847               	movf	??_update_menuLCD+4,w
 12286  041E  00B4               	movwf	?_sprintf+6
 12287  041F  0848               	movf	??_update_menuLCD+5,w
 12288  0420  00B5               	movwf	?_sprintf+7
 12289  0421  3049               	movlw	(low (update_menuLCD@str| 0))& (0+255)
 12290  0422  3185  25F9  3183   	fcall	_sprintf
 12291  0425                     l5355:
 12292                           
 12293                           ;main.c: 405: };main.c: 406: LCDcmd(0x80);
 12294  0425  3080               	movlw	128
 12295  0426  3190  2022  3183   	fcall	_LCDcmd
 12296  0429                     l5357:
 12297                           
 12298                           ;main.c: 407: LCDstr(str);
 12299  0429  3049               	movlw	low update_menuLCD@str
 12300  042A  0020               	movlb	0	; select bank0
 12301  042B  00A9               	movwf	LCDstr@p
 12302  042C  3000               	movlw	high update_menuLCD@str
 12303  042D  00AA               	movwf	LCDstr@p+1
 12304  042E  3191  21BE  3183   	fcall	_LCDstr
 12305  0431                     l5359:
 12306                           
 12307                           ;main.c: 410: if(clkAlarm.trigger == 1){
 12308  0431  0021               	movlb	1	; select bank1
 12309  0432  0343               	decf	(_clkAlarm^(0+128)+3),w
 12310  0433  1D03               	btfss	3,2
 12311  0434  2C36               	goto	u4631
 12312  0435  2C37               	goto	u4630
 12313  0436                     u4631:
 12314  0436  2C40               	goto	l5363
 12315  0437                     u4630:
 12316  0437                     l5361:
 12317                           
 12318                           ;main.c: 411: LCDcmd(0x8B);
 12319  0437  308B               	movlw	139
 12320  0438  3190  2022  3183   	fcall	_LCDcmd
 12321                           
 12322                           ;main.c: 412: LCDchar('C');
 12323  043B  3043               	movlw	67
 12324  043C  3190  2072  3183   	fcall	_LCDchar
 12325                           
 12326                           ;main.c: 413: } else if(modeFlag == 0){
 12327  043F  2C4F               	goto	l5367
 12328  0440                     l5363:
 12329  0440  0020               	movlb	0	; select bank0
 12330  0441  0862               	movf	_modeFlag,w
 12331  0442  0463               	iorwf	_modeFlag+1,w
 12332  0443  1D03               	btfss	3,2
 12333  0444  2C46               	goto	u4641
 12334  0445  2C47               	goto	u4640
 12335  0446                     u4641:
 12336  0446  2C4F               	goto	l5367
 12337  0447                     u4640:
 12338  0447                     l5365:
 12339                           
 12340                           ;main.c: 414: LCDcmd(0x8B);
 12341  0447  308B               	movlw	139
 12342  0448  3190  2022  3183   	fcall	_LCDcmd
 12343                           
 12344                           ;main.c: 415: LCDchar(' ');
 12345  044B  3020               	movlw	32
 12346  044C  3190  2072  3183   	fcall	_LCDchar
 12347  044F                     l5367:
 12348                           
 12349                           ;main.c: 416: };main.c: 419: if(tempAlarm.trigger == 1){
 12350  044F  0021               	movlb	1	; select bank1
 12351  0450  034B               	decf	(_tempAlarm^(0+128)+1),w
 12352  0451  1D03               	btfss	3,2
 12353  0452  2C54               	goto	u4651
 12354  0453  2C55               	goto	u4650
 12355  0454                     u4651:
 12356  0454  2C5E               	goto	l5371
 12357  0455                     u4650:
 12358  0455                     l5369:
 12359                           
 12360                           ;main.c: 420: LCDcmd(0x8C);
 12361  0455  308C               	movlw	140
 12362  0456  3190  2022  3183   	fcall	_LCDcmd
 12363                           
 12364                           ;main.c: 421: LCDchar('T');
 12365  0459  3054               	movlw	84
 12366  045A  3190  2072  3183   	fcall	_LCDchar
 12367                           
 12368                           ;main.c: 422: } else if(modeFlag == 0){
 12369  045D  2C6D               	goto	l5375
 12370  045E                     l5371:
 12371  045E  0020               	movlb	0	; select bank0
 12372  045F  0862               	movf	_modeFlag,w
 12373  0460  0463               	iorwf	_modeFlag+1,w
 12374  0461  1D03               	btfss	3,2
 12375  0462  2C64               	goto	u4661
 12376  0463  2C65               	goto	u4660
 12377  0464                     u4661:
 12378  0464  2C6D               	goto	l5375
 12379  0465                     u4660:
 12380  0465                     l5373:
 12381                           
 12382                           ;main.c: 423: LCDcmd(0x8C);
 12383  0465  308C               	movlw	140
 12384  0466  3190  2022  3183   	fcall	_LCDcmd
 12385                           
 12386                           ;main.c: 424: LCDchar(' ');
 12387  0469  3020               	movlw	32
 12388  046A  3190  2072  3183   	fcall	_LCDchar
 12389  046D                     l5375:
 12390                           
 12391                           ;main.c: 425: };main.c: 428: if(lumAlarm.trigger == 1){
 12392  046D  0021               	movlb	1	; select bank1
 12393  046E  0348               	decf	(_lumAlarm^(0+128)+1),w
 12394  046F  1D03               	btfss	3,2
 12395  0470  2C72               	goto	u4671
 12396  0471  2C73               	goto	u4670
 12397  0472                     u4671:
 12398  0472  2C7C               	goto	l5379
 12399  0473                     u4670:
 12400  0473                     l5377:
 12401                           
 12402                           ;main.c: 429: LCDcmd(0x8D);
 12403  0473  308D               	movlw	141
 12404  0474  3190  2022  3183   	fcall	_LCDcmd
 12405                           
 12406                           ;main.c: 430: LCDchar('L');
 12407  0477  304C               	movlw	76
 12408  0478  3190  2072  3183   	fcall	_LCDchar
 12409                           
 12410                           ;main.c: 431: } else if(modeFlag == 0){
 12411  047B  2C8B               	goto	l1359
 12412  047C                     l5379:
 12413  047C  0020               	movlb	0	; select bank0
 12414  047D  0862               	movf	_modeFlag,w
 12415  047E  0463               	iorwf	_modeFlag+1,w
 12416  047F  1D03               	btfss	3,2
 12417  0480  2C82               	goto	u4681
 12418  0481  2C83               	goto	u4680
 12419  0482                     u4681:
 12420  0482  2C8B               	goto	l1359
 12421  0483                     u4680:
 12422  0483                     l5381:
 12423                           
 12424                           ;main.c: 432: LCDcmd(0x8D);
 12425  0483  308D               	movlw	141
 12426  0484  3190  2022  3183   	fcall	_LCDcmd
 12427                           
 12428                           ;main.c: 433: LCDchar(' ');
 12429  0487  3020               	movlw	32
 12430  0488  3190  2072  3183   	fcall	_LCDchar
 12431  048B                     l1359:
 12432                           
 12433                           ;main.c: 434: };main.c: 436: LCDcmd(0x8F);
 12434  048B  308F               	movlw	143
 12435  048C  3190  2022  3183   	fcall	_LCDcmd
 12436                           
 12437                           ;main.c: 437: LCDchar(ALAF);
 12438  048F  0020               	movlb	0	; select bank0
 12439  0490  086A               	movf	_ALAF,w
 12440  0491  3190  2072  3183   	fcall	_LCDchar
 12441  0494                     l5383:
 12442                           
 12443                           ;main.c: 440: if(ALAF == 'A'){
 12444  0494  3041               	movlw	65
 12445  0495  0020               	movlb	0	; select bank0
 12446  0496  066A               	xorwf	_ALAF,w
 12447  0497  1D03               	btfss	3,2
 12448  0498  2C9A               	goto	u4691
 12449  0499  2C9B               	goto	u4690
 12450  049A                     u4691:
 12451  049A  2D0C               	goto	l5417
 12452  049B                     u4690:
 12453  049B                     l5385:
 12454                           
 12455                           ;main.c: 441: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger){
 12456  049B  0021               	movlb	1	; select bank1
 12457  049C  0843               	movf	(_clkAlarm^(0+128)+3),w
 12458  049D  1D03               	btfss	3,2
 12459  049E  2CA0               	goto	u4701
 12460  049F  2CA1               	goto	u4700
 12461  04A0                     u4701:
 12462  04A0  2CAB               	goto	l5391
 12463  04A1                     u4700:
 12464  04A1                     l5387:
 12465  04A1  084B               	movf	(_tempAlarm^(0+128)+1),w
 12466  04A2  1D03               	btfss	3,2
 12467  04A3  2CA5               	goto	u4711
 12468  04A4  2CA6               	goto	u4710
 12469  04A5                     u4711:
 12470  04A5  2CAB               	goto	l5391
 12471  04A6                     u4710:
 12472  04A6                     l5389:
 12473  04A6  0848               	movf	(_lumAlarm^(0+128)+1),w
 12474  04A7  1903               	btfsc	3,2
 12475  04A8  2CAA               	goto	u4721
 12476  04A9  2CAB               	goto	u4720
 12477  04AA                     u4721:
 12478  04AA  2D06               	goto	l1362
 12479  04AB                     u4720:
 12480  04AB                     l5391:
 12481                           
 12482                           ;main.c: 442: if(alarmPWMStart.h == 0xff){
 12483  04AB  0A66               	incf	_alarmPWMStart^(0+128),w
 12484  04AC  1D03               	btfss	3,2
 12485  04AD  2CAF               	goto	u4731
 12486  04AE  2CB0               	goto	u4730
 12487  04AF                     u4731:
 12488  04AF  2CC2               	goto	l1365
 12489  04B0                     u4730:
 12490  04B0                     l5393:
 12491                           
 12492                           ;main.c: 443: alarmPWMStart.h = t.h;
 12493  04B0  0020               	movlb	0	; select bank0
 12494  04B1  085F               	movf	_t,w
 12495  04B2  00C3               	movwf	??_update_menuLCD
 12496  04B3  0843               	movf	??_update_menuLCD,w
 12497  04B4  0021               	movlb	1	; select bank1
 12498  04B5  00E6               	movwf	_alarmPWMStart^(0+128)
 12499                           
 12500                           ;main.c: 444: alarmPWMStart.m = t.m;
 12501  04B6  0020               	movlb	0	; select bank0
 12502  04B7  0860               	movf	_t+1,w
 12503  04B8  00C3               	movwf	??_update_menuLCD
 12504  04B9  0843               	movf	??_update_menuLCD,w
 12505  04BA  0021               	movlb	1	; select bank1
 12506  04BB  00E7               	movwf	(_alarmPWMStart^(0+128)+1)
 12507                           
 12508                           ;main.c: 445: alarmPWMStart.s = t.s;
 12509  04BC  0020               	movlb	0	; select bank0
 12510  04BD  0861               	movf	_t+2,w
 12511  04BE  00C3               	movwf	??_update_menuLCD
 12512  04BF  0843               	movf	??_update_menuLCD,w
 12513  04C0  0021               	movlb	1	; select bank1
 12514  04C1  00E8               	movwf	(_alarmPWMStart^(0+128)+2)
 12515  04C2                     l1365:
 12516                           
 12517                           ;main.c: 446: };main.c: 447: struct Time diff = {0,0,0};
 12518  04C2  0844               	movf	update_menuLCD@F12927^(0+128),w
 12519  04C3  0020               	movlb	0	; select bank0
 12520  04C4  00D8               	movwf	update_menuLCD@diff
 12521  04C5  0021               	movlb	1	; select bank1
 12522  04C6  0845               	movf	(update_menuLCD@F12927+1)^(0+128),w
 12523  04C7  0020               	movlb	0	; select bank0
 12524  04C8  00D9               	movwf	update_menuLCD@diff+1
 12525  04C9  0021               	movlb	1	; select bank1
 12526  04CA  0846               	movf	(update_menuLCD@F12927+2)^(0+128),w
 12527  04CB  0020               	movlb	0	; select bank0
 12528  04CC  00DA               	movwf	update_menuLCD@diff+2
 12529  04CD                     l5395:
 12530                           
 12531                           ;main.c: 448: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 12532  04CD  085F               	movf	_t,w
 12533  04CE  00A0               	movwf	differenceBetweenTimePeriod@start
 12534  04CF  0860               	movf	_t+1,w
 12535  04D0  00A1               	movwf	differenceBetweenTimePeriod@start+1
 12536  04D1  0861               	movf	_t+2,w
 12537  04D2  00A2               	movwf	differenceBetweenTimePeriod@start+2
 12538  04D3  0021               	movlb	1	; select bank1
 12539  04D4  0866               	movf	_alarmPWMStart^(0+128),w
 12540  04D5  0020               	movlb	0	; select bank0
 12541  04D6  00A3               	movwf	differenceBetweenTimePeriod@stop
 12542  04D7  0021               	movlb	1	; select bank1
 12543  04D8  0867               	movf	(_alarmPWMStart+1)^(0+128),w
 12544  04D9  0020               	movlb	0	; select bank0
 12545  04DA  00A4               	movwf	differenceBetweenTimePeriod@stop+1
 12546  04DB  0021               	movlb	1	; select bank1
 12547  04DC  0868               	movf	(_alarmPWMStart+2)^(0+128),w
 12548  04DD  0020               	movlb	0	; select bank0
 12549  04DE  00A5               	movwf	differenceBetweenTimePeriod@stop+2
 12550  04DF  3058               	movlw	(low (update_menuLCD@diff| 0))& (0+255)
 12551  04E0  00C3               	movwf	??_update_menuLCD
 12552  04E1  0843               	movf	??_update_menuLCD,w
 12553  04E2  00A6               	movwf	differenceBetweenTimePeriod@diff
 12554  04E3  3194  24DF  3183   	fcall	_differenceBetweenTimePeriod
 12555  04E6                     l5397:
 12556                           
 12557                           ;main.c: 450: if(diff.s <= TALA){
 12558  04E6  0020               	movlb	0	; select bank0
 12559  04E7  085A               	movf	update_menuLCD@diff+2,w
 12560  04E8  0021               	movlb	1	; select bank1
 12561  04E9  026D               	subwf	_TALA^(0+128),w
 12562  04EA  1C03               	skipc
 12563  04EB  2CED               	goto	u4741
 12564  04EC  2CEE               	goto	u4740
 12565  04ED                     u4741:
 12566  04ED  2CF1               	goto	l1368
 12567  04EE                     u4740:
 12568  04EE                     l5399:
 12569                           
 12570                           ;main.c: 451: PWM_on = 1;
 12571  04EE  01D5               	clrf	_PWM_on^(0+128)
 12572  04EF  0AD5               	incf	_PWM_on^(0+128),f
 12573                           
 12574                           ;main.c: 462: } else if(PWM6EN==1){
 12575  04F0  2D0C               	goto	l5417
 12576  04F1                     l1368:
 12577  04F1  0027               	movlb	7	; select bank7
 12578  04F2  1F8E               	btfss	14,7	;volatile
 12579  04F3  2CF5               	goto	u4751
 12580  04F4  2CF6               	goto	u4750
 12581  04F5                     u4751:
 12582  04F5  2D0C               	goto	l1371
 12583  04F6                     u4750:
 12584  04F6                     l5401:
 12585                           
 12586                           ;main.c: 463: PWM_on = 0;
 12587  04F6  0021               	movlb	1	; select bank1
 12588  04F7  01D5               	clrf	_PWM_on^(0+128)
 12589  04F8                     l5403:
 12590                           
 12591                           ;main.c: 464: PWM6_LoadDutyValue(0);
 12592  04F8  3000               	movlw	0
 12593  04F9  0020               	movlb	0	; select bank0
 12594  04FA  00A0               	movwf	PWM6_LoadDutyValue@dutyValue
 12595  04FB  00A1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12596  04FC  3191  2155  3183   	fcall	_PWM6_LoadDutyValue
 12597  04FF                     l5405:
 12598                           
 12599                           ;main.c: 465: TMR2_StopTimer();
 12600  04FF  319F  27F8  3183   	fcall	_TMR2_StopTimer
 12601  0502                     l5407:
 12602                           
 12603                           ;main.c: 466: PWM_Output_D4_Disable();
 12604  0502  319F  27EE  3183   	fcall	_PWM_Output_D4_Disable
 12605  0505  2D0C               	goto	l5417
 12606  0506                     l1362:
 12607  0506  0027               	movlb	7	; select bank7
 12608  0507  1F8E               	btfss	14,7	;volatile
 12609  0508  2D0A               	goto	u4761
 12610  0509  2D0B               	goto	u4760
 12611  050A                     u4761:
 12612  050A  2D0C               	goto	l5417
 12613  050B                     u4760:
 12614  050B  2CF6               	goto	l5401
 12615  050C                     l1371:
 12616  050C                     l5417:
 12617                           
 12618                           ;main.c: 473: };main.c: 474: };main.c: 476: LCDcmd(0xc0);
 12619  050C  30C0               	movlw	192
 12620  050D  3190  2022  3183   	fcall	_LCDcmd
 12621  0510                     l5419:
 12622                           
 12623                           ;main.c: 477: char tt[4];;main.c: 478: if(editingTempAlarm){
 12624  0510  0021               	movlb	1	; select bank1
 12625  0511  0857               	movf	_editingTempAlarm^(0+128),w
 12626  0512  1903               	btfsc	3,2
 12627  0513  2D15               	goto	u4771
 12628  0514  2D16               	goto	u4770
 12629  0515                     u4771:
 12630  0515  2D29               	goto	l5423
 12631  0516                     u4770:
 12632  0516                     l5421:
 12633                           
 12634                           ;main.c: 479: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 12635  0516  3040               	movlw	low (STR_3| (0+32768))
 12636  0517  0020               	movlb	0	; select bank0
 12637  0518  00AE               	movwf	sprintf@f
 12638  0519  3098               	movlw	high (STR_3| (0+32768))
 12639  051A  00AF               	movwf	sprintf@f+1
 12640  051B  0021               	movlb	1	; select bank1
 12641  051C  084A               	movf	_tempAlarm^(0+128),w
 12642  051D  0020               	movlb	0	; select bank0
 12643  051E  00C3               	movwf	??_update_menuLCD
 12644  051F  01C4               	clrf	??_update_menuLCD+1
 12645  0520  0843               	movf	??_update_menuLCD,w
 12646  0521  00B0               	movwf	?_sprintf+2
 12647  0522  0844               	movf	??_update_menuLCD+1,w
 12648  0523  00B1               	movwf	?_sprintf+3
 12649  0524  3051               	movlw	(low (update_menuLCD@tt| 0))& (0+255)
 12650  0525  3185  25F9  3183   	fcall	_sprintf
 12651                           
 12652                           ;main.c: 480: } else{
 12653  0528  2D39               	goto	l5425
 12654  0529                     l5423:
 12655                           
 12656                           ;main.c: 481: sprintf(tt, "%02d C", temp);
 12657  0529  3040               	movlw	low (STR_3| (0+32768))
 12658  052A  0020               	movlb	0	; select bank0
 12659  052B  00AE               	movwf	sprintf@f
 12660  052C  3098               	movlw	high (STR_3| (0+32768))
 12661  052D  00AF               	movwf	sprintf@f+1
 12662  052E  0869               	movf	_temp,w
 12663  052F  00C3               	movwf	??_update_menuLCD
 12664  0530  01C4               	clrf	??_update_menuLCD+1
 12665  0531  0843               	movf	??_update_menuLCD,w
 12666  0532  00B0               	movwf	?_sprintf+2
 12667  0533  0844               	movf	??_update_menuLCD+1,w
 12668  0534  00B1               	movwf	?_sprintf+3
 12669  0535  3051               	movlw	(low (update_menuLCD@tt| 0))& (0+255)
 12670  0536  3185  25F9  3183   	fcall	_sprintf
 12671  0539                     l5425:
 12672                           
 12673                           ;main.c: 482: };main.c: 483: LCDstr(tt);
 12674  0539  3051               	movlw	low update_menuLCD@tt
 12675  053A  0020               	movlb	0	; select bank0
 12676  053B  00A9               	movwf	LCDstr@p
 12677  053C  3000               	movlw	high update_menuLCD@tt
 12678  053D  00AA               	movwf	LCDstr@p+1
 12679  053E  3191  21BE  3183   	fcall	_LCDstr
 12680  0541                     l5427:
 12681                           
 12682                           ;main.c: 485: LCDcmd(0xcd);
 12683  0541  30CD               	movlw	205
 12684  0542  3190  2022  3183   	fcall	_LCDcmd
 12685  0545                     l5429:
 12686                           
 12687                           ;main.c: 486: char l[3];;main.c: 488: if(editingLumAlarm){
 12688  0545  0021               	movlb	1	; select bank1
 12689  0546  0856               	movf	_editingLumAlarm^(0+128),w
 12690  0547  1903               	btfsc	3,2
 12691  0548  2D4A               	goto	u4781
 12692  0549  2D4B               	goto	u4780
 12693  054A                     u4781:
 12694  054A  2D5E               	goto	l5433
 12695  054B                     u4780:
 12696  054B                     l5431:
 12697                           
 12698                           ;main.c: 489: sprintf(l, "L %d", lumAlarm.alarmLum);
 12699  054B  3047               	movlw	low (STR_5| (0+32768))
 12700  054C  0020               	movlb	0	; select bank0
 12701  054D  00AE               	movwf	sprintf@f
 12702  054E  3098               	movlw	high (STR_5| (0+32768))
 12703  054F  00AF               	movwf	sprintf@f+1
 12704  0550  0021               	movlb	1	; select bank1
 12705  0551  0847               	movf	_lumAlarm^(0+128),w
 12706  0552  0020               	movlb	0	; select bank0
 12707  0553  00C3               	movwf	??_update_menuLCD
 12708  0554  01C4               	clrf	??_update_menuLCD+1
 12709  0555  0843               	movf	??_update_menuLCD,w
 12710  0556  00B0               	movwf	?_sprintf+2
 12711  0557  0844               	movf	??_update_menuLCD+1,w
 12712  0558  00B1               	movwf	?_sprintf+3
 12713  0559  3055               	movlw	(low (update_menuLCD@l| 0))& (0+255)
 12714  055A  3185  25F9  3183   	fcall	_sprintf
 12715                           
 12716                           ;main.c: 490: } else{
 12717  055D  2D6E               	goto	l5435
 12718  055E                     l5433:
 12719                           
 12720                           ;main.c: 491: sprintf(l, "L %d", lumLevel);
 12721  055E  3047               	movlw	low (STR_5| (0+32768))
 12722  055F  0020               	movlb	0	; select bank0
 12723  0560  00AE               	movwf	sprintf@f
 12724  0561  3098               	movlw	high (STR_5| (0+32768))
 12725  0562  00AF               	movwf	sprintf@f+1
 12726  0563  0868               	movf	_lumLevel,w
 12727  0564  00C3               	movwf	??_update_menuLCD
 12728  0565  01C4               	clrf	??_update_menuLCD+1
 12729  0566  0843               	movf	??_update_menuLCD,w
 12730  0567  00B0               	movwf	?_sprintf+2
 12731  0568  0844               	movf	??_update_menuLCD+1,w
 12732  0569  00B1               	movwf	?_sprintf+3
 12733  056A  3055               	movlw	(low (update_menuLCD@l| 0))& (0+255)
 12734  056B  3185  25F9  3183   	fcall	_sprintf
 12735  056E                     l5435:
 12736                           
 12737                           ;main.c: 492: };main.c: 493: LCDstr(l);
 12738  056E  3055               	movlw	low update_menuLCD@l
 12739  056F  0020               	movlb	0	; select bank0
 12740  0570  00A9               	movwf	LCDstr@p
 12741  0571  3000               	movlw	high update_menuLCD@l
 12742  0572  00AA               	movwf	LCDstr@p+1
 12743  0573  3191  21BE  3183   	fcall	_LCDstr
 12744  0576                     l5437:
 12745                           
 12746                           ;main.c: 495: if(modeFlag != 0){
 12747  0576  0020               	movlb	0	; select bank0
 12748  0577  0862               	movf	_modeFlag,w
 12749  0578  0463               	iorwf	_modeFlag+1,w
 12750  0579  1903               	btfsc	3,2
 12751  057A  2D7C               	goto	u4791
 12752  057B  2D7D               	goto	u4790
 12753  057C                     u4791:
 12754  057C  2D89               	goto	l5443
 12755  057D                     u4790:
 12756  057D                     l5439:
 12757                           
 12758                           ;main.c: 496: LCDcmd(0x8B);
 12759  057D  308B               	movlw	139
 12760  057E  3190  2022  3183   	fcall	_LCDcmd
 12761  0581                     l5441:
 12762                           
 12763                           ;main.c: 497: LCDstr("CTL");
 12764  0581  304C               	movlw	low (STR_7| (0+32768))
 12765  0582  0020               	movlb	0	; select bank0
 12766  0583  00A9               	movwf	LCDstr@p
 12767  0584  3098               	movlw	high (STR_7| (0+32768))
 12768  0585  00AA               	movwf	LCDstr@p+1
 12769  0586  3191  21BE  3183   	fcall	_LCDstr
 12770  0589                     l5443:
 12771                           
 12772                           ;main.c: 498: };main.c: 500: if(modeFlag == 1){
 12773  0589  0020               	movlb	0	; select bank0
 12774  058A  0362               	decf	_modeFlag,w
 12775  058B  0463               	iorwf	_modeFlag+1,w
 12776  058C  1D03               	btfss	3,2
 12777  058D  2D8F               	goto	u4801
 12778  058E  2D90               	goto	u4800
 12779  058F                     u4801:
 12780  058F  2DBF               	goto	l5461
 12781  0590                     u4800:
 12782  0590                     l5445:
 12783                           
 12784                           ;main.c: 501: if(editingClockAlarm == 0){
 12785  0590  0864               	movf	_editingClockAlarm,w
 12786  0591  0465               	iorwf	_editingClockAlarm+1,w
 12787  0592  1D03               	btfss	3,2
 12788  0593  2D95               	goto	u4811
 12789  0594  2D96               	goto	u4810
 12790  0595                     u4811:
 12791  0595  2D9B               	goto	l5449
 12792  0596                     u4810:
 12793  0596                     l5447:
 12794                           
 12795                           ;main.c: 502: LCDcmd(0x8B);
 12796  0596  308B               	movlw	139
 12797  0597  3190  2022  3183   	fcall	_LCDcmd
 12798                           
 12799                           ;main.c: 503: } else{
 12800  059A  2DF8               	goto	l1396
 12801  059B                     l5449:
 12802                           
 12803                           ;main.c: 504: if(editingClockAlarm == 1){
 12804  059B  0364               	decf	_editingClockAlarm,w
 12805  059C  0465               	iorwf	_editingClockAlarm+1,w
 12806  059D  1D03               	btfss	3,2
 12807  059E  2DA0               	goto	u4821
 12808  059F  2DA1               	goto	u4820
 12809  05A0                     u4821:
 12810  05A0  2DA6               	goto	l5453
 12811  05A1                     u4820:
 12812  05A1                     l5451:
 12813                           
 12814                           ;main.c: 505: LCDcmd(0x81);
 12815  05A1  3081               	movlw	129
 12816  05A2  3190  2022  3183   	fcall	_LCDcmd
 12817                           
 12818                           ;main.c: 506: } else if(editingClockAlarm == 2){
 12819  05A5  2DF8               	goto	l1396
 12820  05A6                     l5453:
 12821  05A6  3002               	movlw	2
 12822  05A7  0664               	xorwf	_editingClockAlarm,w
 12823  05A8  0465               	iorwf	_editingClockAlarm+1,w
 12824  05A9  1D03               	btfss	3,2
 12825  05AA  2DAC               	goto	u4831
 12826  05AB  2DAD               	goto	u4830
 12827  05AC                     u4831:
 12828  05AC  2DB2               	goto	l5457
 12829  05AD                     u4830:
 12830  05AD                     l5455:
 12831                           
 12832                           ;main.c: 507: LCDcmd(0x84);
 12833  05AD  3084               	movlw	132
 12834  05AE  3190  2022  3183   	fcall	_LCDcmd
 12835                           
 12836                           ;main.c: 508: } else if(editingClockAlarm == 3){
 12837  05B1  2DF8               	goto	l1396
 12838  05B2                     l5457:
 12839  05B2  3003               	movlw	3
 12840  05B3  0664               	xorwf	_editingClockAlarm,w
 12841  05B4  0465               	iorwf	_editingClockAlarm+1,w
 12842  05B5  1D03               	btfss	3,2
 12843  05B6  2DB8               	goto	u4841
 12844  05B7  2DB9               	goto	u4840
 12845  05B8                     u4841:
 12846  05B8  2DBE               	goto	l1380
 12847  05B9                     u4840:
 12848  05B9                     l5459:
 12849                           
 12850                           ;main.c: 509: LCDcmd(0x87);
 12851  05B9  3087               	movlw	135
 12852  05BA  3190  2022  3183   	fcall	_LCDcmd
 12853  05BD  2DF8               	goto	l1396
 12854  05BE                     l1380:
 12855                           
 12856                           ;main.c: 510: };main.c: 511: };main.c: 512: } else if(modeFlag == 2){
 12857  05BE  2DF8               	goto	l1396
 12858  05BF                     l5461:
 12859  05BF  3002               	movlw	2
 12860  05C0  0662               	xorwf	_modeFlag,w
 12861  05C1  0463               	iorwf	_modeFlag+1,w
 12862  05C2  1D03               	btfss	3,2
 12863  05C3  2DC5               	goto	u4851
 12864  05C4  2DC6               	goto	u4850
 12865  05C5                     u4851:
 12866  05C5  2DD6               	goto	l5469
 12867  05C6                     u4850:
 12868  05C6                     l5463:
 12869                           
 12870                           ;main.c: 514: if(editingTempAlarm == 0){
 12871  05C6  0021               	movlb	1	; select bank1
 12872  05C7  0857               	movf	_editingTempAlarm^(0+128),w
 12873  05C8  1D03               	btfss	3,2
 12874  05C9  2DCB               	goto	u4861
 12875  05CA  2DCC               	goto	u4860
 12876  05CB                     u4861:
 12877  05CB  2DD1               	goto	l5467
 12878  05CC                     u4860:
 12879  05CC                     l5465:
 12880                           
 12881                           ;main.c: 515: LCDcmd(0x8c);
 12882  05CC  308C               	movlw	140
 12883  05CD  3190  2022  3183   	fcall	_LCDcmd
 12884                           
 12885                           ;main.c: 516: }else {
 12886  05D0  2DF8               	goto	l1396
 12887  05D1                     l5467:
 12888                           
 12889                           ;main.c: 517: LCDcmd(0xc1);
 12890  05D1  30C1               	movlw	193
 12891  05D2  3190  2022  3183   	fcall	_LCDcmd
 12892  05D5  2DF8               	goto	l1396
 12893  05D6                     l5469:
 12894  05D6  3003               	movlw	3
 12895  05D7  0662               	xorwf	_modeFlag,w
 12896  05D8  0463               	iorwf	_modeFlag+1,w
 12897  05D9  1D03               	btfss	3,2
 12898  05DA  2DDC               	goto	u4871
 12899  05DB  2DDD               	goto	u4870
 12900  05DC                     u4871:
 12901  05DC  2DED               	goto	l5477
 12902  05DD                     u4870:
 12903  05DD                     l5471:
 12904                           
 12905                           ;main.c: 522: if(editingLumAlarm == 0){
 12906  05DD  0021               	movlb	1	; select bank1
 12907  05DE  0856               	movf	_editingLumAlarm^(0+128),w
 12908  05DF  1D03               	btfss	3,2
 12909  05E0  2DE2               	goto	u4881
 12910  05E1  2DE3               	goto	u4880
 12911  05E2                     u4881:
 12912  05E2  2DE8               	goto	l5475
 12913  05E3                     u4880:
 12914  05E3                     l5473:
 12915                           
 12916                           ;main.c: 523: LCDcmd(0x8d);
 12917  05E3  308D               	movlw	141
 12918  05E4  3190  2022  3183   	fcall	_LCDcmd
 12919                           
 12920                           ;main.c: 524: }else {
 12921  05E7  2DF8               	goto	l1396
 12922  05E8                     l5475:
 12923                           
 12924                           ;main.c: 525: LCDcmd(0xcf);
 12925  05E8  30CF               	movlw	207
 12926  05E9  3190  2022  3183   	fcall	_LCDcmd
 12927  05EC  2DF8               	goto	l1396
 12928  05ED                     l5477:
 12929  05ED  3004               	movlw	4
 12930  05EE  0662               	xorwf	_modeFlag,w
 12931  05EF  0463               	iorwf	_modeFlag+1,w
 12932  05F0  1D03               	btfss	3,2
 12933  05F1  2DF3               	goto	u4891
 12934  05F2  2DF4               	goto	u4890
 12935  05F3                     u4891:
 12936  05F3  2DF8               	goto	l1396
 12937  05F4                     u4890:
 12938  05F4                     l5479:
 12939                           
 12940                           ;main.c: 529: LCDcmd(0x8f);
 12941  05F4  308F               	movlw	143
 12942  05F5  3190  2022  3183   	fcall	_LCDcmd
 12943  05F8                     l1396:
 12944  05F8  0008               	return
 12945  05F9                     __end_of_update_menuLCD:
 12946                           
 12947                           	psect	text10
 12948  05F9                     __ptext10:	
 12949 ;; *************** function _sprintf *****************
 12950 ;; Defined at:
 12951 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 12952 ;; Parameters:    Size  Location     Type
 12953 ;;  sp              1    wreg     PTR unsigned char 
 12954 ;;		 -> update_menuLCD@l(3), update_menuLCD@tt(4), update_menuLCD@str(8), 
 12955 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 12956 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 12957 ;;		 -> STR_2(15), STR_1(15), 
 12958 ;; Auto vars:     Size  Location     Type
 12959 ;;  sp              1   34[BANK0 ] PTR unsigned char 
 12960 ;;		 -> update_menuLCD@l(3), update_menuLCD@tt(4), update_menuLCD@str(8), 
 12961 ;;  tmpval          4    0        struct .
 12962 ;;  width           2   31[BANK0 ] int 
 12963 ;;  val             2   28[BANK0 ] unsigned int 
 12964 ;;  cp              2    0        PTR const unsigned char 
 12965 ;;  len             2    0        unsigned int 
 12966 ;;  c               1   33[BANK0 ] unsigned char 
 12967 ;;  flag            1   30[BANK0 ] unsigned char 
 12968 ;;  prec            1   27[BANK0 ] char 
 12969 ;;  ap              1   26[BANK0 ] PTR void [1]
 12970 ;;		 -> ?_sprintf(2), 
 12971 ;; Return value:  Size  Location     Type
 12972 ;;                  2   14[BANK0 ] int 
 12973 ;; Registers used:
 12974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12975 ;; Tracked objects:
 12976 ;;		On entry : 0/0
 12977 ;;		On exit  : 0/0
 12978 ;;		Unchanged: 0/0
 12979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12980 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12981 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12982 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12983 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12984 ;;Total ram usage:       21 bytes
 12985 ;; Hardware stack levels used:    1
 12986 ;; Hardware stack levels required when called:    6
 12987 ;; This function calls:
 12988 ;;		___lwdiv
 12989 ;;		___lwmod
 12990 ;;		___wmul
 12991 ;;		_isdigit
 12992 ;; This function is called by:
 12993 ;;		_update_menuLCD
 12994 ;; This function uses a non-reentrant model
 12995 ;;
 12996                           
 12997                           
 12998                           ;psect for function _sprintf
 12999  05F9                     _sprintf:
 13000                           
 13001                           ;incstack = 0
 13002                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13003                           ;sprintf@sp stored from wreg
 13004  05F9  0020               	movlb	0	; select bank0
 13005  05FA  00C2               	movwf	sprintf@sp
 13006  05FB                     l4891:
 13007                           
 13008                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 13009  05FB  3030               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 13010  05FC  00B6               	movwf	??_sprintf
 13011  05FD  0836               	movf	??_sprintf,w
 13012  05FE  00BA               	movwf	sprintf@ap
 13013                           
 13014                           ;doprnt.c: 553: while((c = *f++)) {
 13015  05FF  2F7E               	goto	l4995
 13016  0600                     l4893:
 13017                           
 13018                           ;doprnt.c: 555: if(c != '%')
 13019  0600  3025               	movlw	37
 13020  0601  0641               	xorwf	sprintf@c,w
 13021  0602  1903               	btfsc	3,2
 13022  0603  2E05               	goto	u4171
 13023  0604  2E06               	goto	u4170
 13024  0605                     u4171:
 13025  0605  2E12               	goto	l4899
 13026  0606                     u4170:
 13027  0606                     l4895:
 13028                           
 13029                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 13030  0606  0841               	movf	sprintf@c,w
 13031  0607  00B6               	movwf	??_sprintf
 13032  0608  0842               	movf	sprintf@sp,w
 13033  0609  0086               	movwf	6
 13034  060A  0187               	clrf	7
 13035  060B  0836               	movf	??_sprintf,w
 13036  060C  0081               	movwf	1
 13037  060D                     l4897:
 13038  060D  3001               	movlw	1
 13039  060E  00B6               	movwf	??_sprintf
 13040  060F  0836               	movf	??_sprintf,w
 13041  0610  07C2               	addwf	sprintf@sp,f
 13042                           
 13043                           ;doprnt.c: 559: continue;
 13044  0611  2F7E               	goto	l4995
 13045  0612                     l4899:
 13046                           
 13047                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 13048  0612  01BF               	clrf	sprintf@width
 13049  0613  01C0               	clrf	sprintf@width+1
 13050                           
 13051                           ;doprnt.c: 565: flag = 0;
 13052  0614  01BE               	clrf	sprintf@flag
 13053  0615  2E1B               	goto	l4905
 13054  0616                     l1799:	
 13055                           ;doprnt.c: 596: case '0':
 13056                           
 13057                           
 13058                           ;doprnt.c: 597: flag |= 0x04;
 13059  0616  153E               	bsf	sprintf@flag,2
 13060  0617                     l4901:
 13061                           
 13062                           ;doprnt.c: 598: f++;
 13063  0617  3001               	movlw	1
 13064  0618  07AE               	addwf	sprintf@f,f
 13065  0619  3000               	movlw	0
 13066  061A  3DAF               	addwfc	sprintf@f+1,f
 13067  061B                     l4905:	
 13068                           ;doprnt.c: 599: continue;
 13069                           
 13070  061B  082E               	movf	sprintf@f,w
 13071  061C  0084               	movwf	4
 13072  061D  082F               	movf	sprintf@f+1,w
 13073  061E  0085               	movwf	5
 13074  061F  0800               	movf	0,w	;code access
 13075                           
 13076                           ; Switch size 1, requested type "simple"
 13077                           ; Number of cases is 1, Range of values is 48 to 48
 13078                           ; switch strategies available:
 13079                           ; Name         Instructions Cycles
 13080                           ; simple_byte            4     3 (average)
 13081                           ; direct_byte           11     9 (fixed)
 13082                           ; jumptable            263     9 (fixed)
 13083                           ;	Chosen strategy is simple_byte
 13084  0620  3A30               	xorlw	48	; case 48
 13085  0621  1903               	skipnz
 13086  0622  2E16               	goto	l1799
 13087  0623  2E24               	goto	l4907
 13088  0624                     l4907:
 13089                           
 13090                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 13091  0624  082E               	movf	sprintf@f,w
 13092  0625  0084               	movwf	4
 13093  0626  082F               	movf	sprintf@f+1,w
 13094  0627  0085               	movwf	5
 13095  0628  0800               	movf	0,w	;code access
 13096  0629  3190  20FD  3185   	fcall	_isdigit
 13097  062C  1C03               	btfss	3,0
 13098  062D  2E2F               	goto	u4181
 13099  062E  2E30               	goto	u4180
 13100  062F                     u4181:
 13101  062F  2E63               	goto	l4921
 13102  0630                     u4180:
 13103  0630                     l4909:
 13104                           
 13105                           ;doprnt.c: 615: width = 0;
 13106  0630  0020               	movlb	0	; select bank0
 13107  0631  01BF               	clrf	sprintf@width
 13108  0632  01C0               	clrf	sprintf@width+1
 13109  0633                     l4911:
 13110                           
 13111                           ;doprnt.c: 617: width *= 10;
 13112  0633  300A               	movlw	10
 13113  0634  0020               	movlb	0	; select bank0
 13114  0635  00A0               	movwf	___wmul@multiplier
 13115  0636  3000               	movlw	0
 13116  0637  00A1               	movwf	___wmul@multiplier+1
 13117  0638  0840               	movf	sprintf@width+1,w
 13118  0639  00A3               	movwf	___wmul@multiplicand+1
 13119  063A  083F               	movf	sprintf@width,w
 13120  063B  00A2               	movwf	___wmul@multiplicand
 13121  063C  3192  22B0  3185   	fcall	___wmul
 13122  063F  0020               	movlb	0	; select bank0
 13123  0640  0821               	movf	?___wmul+1,w
 13124  0641  00C0               	movwf	sprintf@width+1
 13125  0642  0820               	movf	?___wmul,w
 13126  0643  00BF               	movwf	sprintf@width
 13127  0644                     l4913:
 13128                           
 13129                           ;doprnt.c: 618: width += *f++ - '0';
 13130  0644  082E               	movf	sprintf@f,w
 13131  0645  0084               	movwf	4
 13132  0646  082F               	movf	sprintf@f+1,w
 13133  0647  0085               	movwf	5
 13134  0648  0800               	movf	0,w	;code access
 13135  0649  3ED0               	addlw	208
 13136  064A  00B6               	movwf	??_sprintf
 13137  064B  30FF               	movlw	255
 13138  064C  1803               	skipnc
 13139  064D  3000               	movlw	0
 13140  064E  00B7               	movwf	??_sprintf+1
 13141  064F  0836               	movf	??_sprintf,w
 13142  0650  07BF               	addwf	sprintf@width,f
 13143  0651  0837               	movf	??_sprintf+1,w
 13144  0652  3DC0               	addwfc	sprintf@width+1,f
 13145  0653                     l4915:
 13146  0653  3001               	movlw	1
 13147  0654  07AE               	addwf	sprintf@f,f
 13148  0655  3000               	movlw	0
 13149  0656  3DAF               	addwfc	sprintf@f+1,f
 13150  0657                     l4917:
 13151                           
 13152                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 13153  0657  082E               	movf	sprintf@f,w
 13154  0658  0084               	movwf	4
 13155  0659  082F               	movf	sprintf@f+1,w
 13156  065A  0085               	movwf	5
 13157  065B  0800               	movf	0,w	;code access
 13158  065C  3190  20FD  3185   	fcall	_isdigit
 13159  065F  1803               	btfsc	3,0
 13160  0660  2E62               	goto	u4191
 13161  0661  2E63               	goto	u4190
 13162  0662                     u4191:
 13163  0662  2E33               	goto	l4911
 13164  0663                     u4190:
 13165  0663                     l4921:
 13166  0663  0020               	movlb	0	; select bank0
 13167  0664  082F               	movf	sprintf@f+1,w
 13168  0665  00B7               	movwf	??_sprintf+1
 13169  0666  082E               	movf	sprintf@f,w
 13170  0667  00B6               	movwf	??_sprintf
 13171  0668  0AAE               	incf	sprintf@f,f
 13172  0669  1903               	skipnz
 13173  066A  0AAF               	incf	sprintf@f+1,f
 13174  066B  0836               	movf	??_sprintf,w
 13175  066C  0084               	movwf	4
 13176  066D  0837               	movf	??_sprintf+1,w
 13177  066E  0085               	movwf	5
 13178  066F  0800               	movf	0,w	;code access
 13179  0670  00C1               	movwf	sprintf@c
 13180                           
 13181                           ; Switch size 1, requested type "simple"
 13182                           ; Number of cases is 3, Range of values is 0 to 105
 13183                           ; switch strategies available:
 13184                           ; Name         Instructions Cycles
 13185                           ; simple_byte           10     6 (average)
 13186                           ; direct_byte          218     6 (fixed)
 13187                           ; jumptable            260     6 (fixed)
 13188                           ;	Chosen strategy is simple_byte
 13189  0671  3A00               	xorlw	0	; case 0
 13190  0672  1903               	skipnz
 13191  0673  2F92               	goto	l4997
 13192  0674  3A64               	xorlw	100	; case 100
 13193  0675  1903               	skipnz
 13194  0676  2E7B               	goto	l4923
 13195  0677  3A0D               	xorlw	13	; case 105
 13196  0678  1903               	skipnz
 13197  0679  2E7B               	goto	l4923
 13198  067A  2F7E               	goto	l4995
 13199  067B                     l4923:
 13200                           
 13201                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 13202  067B  083A               	movf	sprintf@ap,w
 13203  067C  0086               	movwf	6
 13204  067D  0187               	clrf	7
 13205  067E  3F40               	moviw [0]fsr1
 13206  067F  00BC               	movwf	sprintf@val
 13207  0680  3F41               	moviw [1]fsr1
 13208  0681  00BD               	movwf	sprintf@val+1
 13209  0682                     l4925:
 13210  0682  3002               	movlw	2
 13211  0683  00B6               	movwf	??_sprintf
 13212  0684  0836               	movf	??_sprintf,w
 13213  0685  07BA               	addwf	sprintf@ap,f
 13214  0686                     l4927:
 13215                           
 13216                           ;doprnt.c: 1287: if((int)val < 0) {
 13217  0686  1FBD               	btfss	sprintf@val+1,7
 13218  0687  2E89               	goto	u4201
 13219  0688  2E8A               	goto	u4200
 13220  0689                     u4201:
 13221  0689  2E93               	goto	l4933
 13222  068A                     u4200:
 13223  068A                     l4929:
 13224                           
 13225                           ;doprnt.c: 1288: flag |= 0x03;
 13226  068A  3003               	movlw	3
 13227  068B  00B6               	movwf	??_sprintf
 13228  068C  0836               	movf	??_sprintf,w
 13229  068D  04BE               	iorwf	sprintf@flag,f
 13230  068E                     l4931:
 13231                           
 13232                           ;doprnt.c: 1289: val = -val;
 13233  068E  09BC               	comf	sprintf@val,f
 13234  068F  09BD               	comf	sprintf@val+1,f
 13235  0690  0ABC               	incf	sprintf@val,f
 13236  0691  1903               	skipnz
 13237  0692  0ABD               	incf	sprintf@val+1,f
 13238  0693                     l4933:
 13239                           
 13240                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 13241  0693  01C1               	clrf	sprintf@c
 13242  0694  0AC1               	incf	sprintf@c,f
 13243  0695                     l4939:
 13244                           
 13245                           ;doprnt.c: 1332: if(val < dpowers[c])
 13246  0695  0841               	movf	sprintf@c,w
 13247  0696  00B6               	movwf	??_sprintf
 13248  0697  01B7               	clrf	??_sprintf+1
 13249  0698  35B6               	lslf	??_sprintf,f
 13250  0699  0DB7               	rlf	??_sprintf+1,f
 13251  069A  3036               	movlw	low (_dpowers| (0+32768))
 13252  069B  0736               	addwf	??_sprintf,w
 13253  069C  0084               	movwf	4
 13254  069D  3098               	movlw	high (_dpowers| (0+32768))
 13255  069E  3D37               	addwfc	??_sprintf+1,w
 13256  069F  0085               	movwf	5
 13257  06A0  3F00               	moviw [0]fsr0
 13258  06A1  00B8               	movwf	??_sprintf+2
 13259  06A2  3F01               	moviw [1]fsr0
 13260  06A3  00B9               	movwf	??_sprintf+3
 13261  06A4  0839               	movf	??_sprintf+3,w
 13262  06A5  023D               	subwf	sprintf@val+1,w
 13263  06A6  1D03               	skipz
 13264  06A7  2EAA               	goto	u4215
 13265  06A8  0838               	movf	??_sprintf+2,w
 13266  06A9  023C               	subwf	sprintf@val,w
 13267  06AA                     u4215:
 13268  06AA  1803               	skipnc
 13269  06AB  2EAD               	goto	u4211
 13270  06AC  2EAE               	goto	u4210
 13271  06AD                     u4211:
 13272  06AD  2EAF               	goto	l4943
 13273  06AE                     u4210:
 13274  06AE  2EB9               	goto	l4945
 13275  06AF                     l4943:
 13276  06AF  3001               	movlw	1
 13277  06B0  00B6               	movwf	??_sprintf
 13278  06B1  0836               	movf	??_sprintf,w
 13279  06B2  07C1               	addwf	sprintf@c,f
 13280  06B3  3005               	movlw	5
 13281  06B4  0641               	xorwf	sprintf@c,w
 13282  06B5  1D03               	btfss	3,2
 13283  06B6  2EB8               	goto	u4221
 13284  06B7  2EB9               	goto	u4220
 13285  06B8                     u4221:
 13286  06B8  2E95               	goto	l4939
 13287  06B9                     u4220:
 13288  06B9                     l4945:
 13289                           
 13290                           ;doprnt.c: 1371: if(width && flag & 0x03)
 13291  06B9  083F               	movf	sprintf@width,w
 13292  06BA  0440               	iorwf	sprintf@width+1,w
 13293  06BB  1903               	btfsc	3,2
 13294  06BC  2EBE               	goto	u4231
 13295  06BD  2EBF               	goto	u4230
 13296  06BE                     u4231:
 13297  06BE  2EC9               	goto	l1817
 13298  06BF                     u4230:
 13299  06BF                     l4947:
 13300  06BF  083E               	movf	sprintf@flag,w
 13301  06C0  3903               	andlw	3
 13302  06C1  1903               	btfsc	3,2
 13303  06C2  2EC4               	goto	u4241
 13304  06C3  2EC5               	goto	u4240
 13305  06C4                     u4241:
 13306  06C4  2EC9               	goto	l1817
 13307  06C5                     u4240:
 13308  06C5                     l4949:
 13309                           
 13310                           ;doprnt.c: 1372: width--;
 13311  06C5  30FF               	movlw	255
 13312  06C6  07BF               	addwf	sprintf@width,f
 13313  06C7  30FF               	movlw	255
 13314  06C8  3DC0               	addwfc	sprintf@width+1,f
 13315  06C9                     l1817:
 13316                           
 13317                           ;doprnt.c: 1407: if(width > c)
 13318  06C9  0840               	movf	sprintf@width+1,w
 13319  06CA  3A80               	xorlw	128
 13320  06CB  3C80               	sublw	128
 13321  06CC  1D03               	skipz
 13322  06CD  2ED0               	goto	u4255
 13323  06CE  083F               	movf	sprintf@width,w
 13324  06CF  0241               	subwf	sprintf@c,w
 13325  06D0                     u4255:
 13326  06D0  1803               	skipnc
 13327  06D1  2ED3               	goto	u4251
 13328  06D2  2ED4               	goto	u4250
 13329  06D3                     u4251:
 13330  06D3  2EDD               	goto	l4953
 13331  06D4                     u4250:
 13332  06D4                     l4951:
 13333                           
 13334                           ;doprnt.c: 1408: width -= c;
 13335  06D4  0020               	movlb	0	; select bank0
 13336  06D5  0841               	movf	sprintf@c,w
 13337  06D6  00B6               	movwf	??_sprintf
 13338  06D7  01B7               	clrf	??_sprintf+1
 13339  06D8  0836               	movf	??_sprintf,w
 13340  06D9  02BF               	subwf	sprintf@width,f
 13341  06DA  0837               	movf	??_sprintf+1,w
 13342  06DB  3BC0               	subwfb	sprintf@width+1,f
 13343  06DC  2EE0               	goto	l4955
 13344  06DD                     l4953:
 13345                           
 13346                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 13347  06DD  0020               	movlb	0	; select bank0
 13348  06DE  01BF               	clrf	sprintf@width
 13349  06DF  01C0               	clrf	sprintf@width+1
 13350  06E0                     l4955:
 13351                           
 13352                           ;doprnt.c: 1413: if(flag & 0x04) {
 13353  06E0  1D3E               	btfss	sprintf@flag,2
 13354  06E1  2EE3               	goto	u4261
 13355  06E2  2EE4               	goto	u4260
 13356  06E3                     u4261:
 13357  06E3  2F11               	goto	l4971
 13358  06E4                     u4260:
 13359  06E4                     l4957:
 13360                           
 13361                           ;doprnt.c: 1418: if(flag & 0x03)
 13362  06E4  083E               	movf	sprintf@flag,w
 13363  06E5  3903               	andlw	3
 13364  06E6  1903               	btfsc	3,2
 13365  06E7  2EE9               	goto	u4271
 13366  06E8  2EEA               	goto	u4270
 13367  06E9                     u4271:
 13368  06E9  2EF5               	goto	l4963
 13369  06EA                     u4270:
 13370  06EA                     l4959:
 13371                           
 13372                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 13373  06EA  302D               	movlw	45
 13374  06EB  00B6               	movwf	??_sprintf
 13375  06EC  0842               	movf	sprintf@sp,w
 13376  06ED  0086               	movwf	6
 13377  06EE  0187               	clrf	7
 13378  06EF  0836               	movf	??_sprintf,w
 13379  06F0  0081               	movwf	1
 13380  06F1                     l4961:
 13381  06F1  3001               	movlw	1
 13382  06F2  00B6               	movwf	??_sprintf
 13383  06F3  0836               	movf	??_sprintf,w
 13384  06F4  07C2               	addwf	sprintf@sp,f
 13385  06F5                     l4963:
 13386                           
 13387                           ;doprnt.c: 1441: if(width)
 13388  06F5  083F               	movf	sprintf@width,w
 13389  06F6  0440               	iorwf	sprintf@width+1,w
 13390  06F7  1903               	btfsc	3,2
 13391  06F8  2EFA               	goto	u4281
 13392  06F9  2EFB               	goto	u4280
 13393  06FA                     u4281:
 13394  06FA  2F3D               	goto	l4985
 13395  06FB                     u4280:
 13396  06FB                     l4965:
 13397                           
 13398                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 13399  06FB  3030               	movlw	48
 13400  06FC  00B6               	movwf	??_sprintf
 13401  06FD  0842               	movf	sprintf@sp,w
 13402  06FE  0086               	movwf	6
 13403  06FF  0187               	clrf	7
 13404  0700  0836               	movf	??_sprintf,w
 13405  0701  0081               	movwf	1
 13406  0702                     l4967:
 13407  0702  3001               	movlw	1
 13408  0703  00B6               	movwf	??_sprintf
 13409  0704  0836               	movf	??_sprintf,w
 13410  0705  07C2               	addwf	sprintf@sp,f
 13411  0706                     l4969:
 13412                           
 13413                           ;doprnt.c: 1444: while(--width);
 13414  0706  30FF               	movlw	255
 13415  0707  07BF               	addwf	sprintf@width,f
 13416  0708  30FF               	movlw	255
 13417  0709  3DC0               	addwfc	sprintf@width+1,f
 13418  070A  083F               	movf	sprintf@width,w
 13419  070B  0440               	iorwf	sprintf@width+1,w
 13420  070C  1D03               	btfss	3,2
 13421  070D  2F0F               	goto	u4291
 13422  070E  2F10               	goto	u4290
 13423  070F                     u4291:
 13424  070F  2EFB               	goto	l4965
 13425  0710                     u4290:
 13426  0710  2F3D               	goto	l4985
 13427  0711                     l4971:
 13428                           
 13429                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 13430  0711  083F               	movf	sprintf@width,w
 13431  0712  0440               	iorwf	sprintf@width+1,w
 13432  0713  1903               	btfsc	3,2
 13433  0714  2F16               	goto	u4301
 13434  0715  2F17               	goto	u4300
 13435  0716                     u4301:
 13436  0716  2F2C               	goto	l4979
 13437  0717                     u4300:
 13438  0717                     l4973:
 13439                           
 13440                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 13441  0717  3020               	movlw	32
 13442  0718  00B6               	movwf	??_sprintf
 13443  0719  0842               	movf	sprintf@sp,w
 13444  071A  0086               	movwf	6
 13445  071B  0187               	clrf	7
 13446  071C  0836               	movf	??_sprintf,w
 13447  071D  0081               	movwf	1
 13448  071E                     l4975:
 13449  071E  3001               	movlw	1
 13450  071F  00B6               	movwf	??_sprintf
 13451  0720  0836               	movf	??_sprintf,w
 13452  0721  07C2               	addwf	sprintf@sp,f
 13453  0722                     l4977:
 13454                           
 13455                           ;doprnt.c: 1457: while(--width);
 13456  0722  30FF               	movlw	255
 13457  0723  07BF               	addwf	sprintf@width,f
 13458  0724  30FF               	movlw	255
 13459  0725  3DC0               	addwfc	sprintf@width+1,f
 13460  0726  083F               	movf	sprintf@width,w
 13461  0727  0440               	iorwf	sprintf@width+1,w
 13462  0728  1D03               	btfss	3,2
 13463  0729  2F2B               	goto	u4311
 13464  072A  2F2C               	goto	u4310
 13465  072B                     u4311:
 13466  072B  2F17               	goto	l4973
 13467  072C                     u4310:
 13468  072C                     l4979:
 13469                           
 13470                           ;doprnt.c: 1464: if(flag & 0x03)
 13471  072C  083E               	movf	sprintf@flag,w
 13472  072D  3903               	andlw	3
 13473  072E  1903               	btfsc	3,2
 13474  072F  2F31               	goto	u4321
 13475  0730  2F32               	goto	u4320
 13476  0731                     u4321:
 13477  0731  2F3D               	goto	l4985
 13478  0732                     u4320:
 13479  0732                     l4981:
 13480                           
 13481                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 13482  0732  302D               	movlw	45
 13483  0733  00B6               	movwf	??_sprintf
 13484  0734  0842               	movf	sprintf@sp,w
 13485  0735  0086               	movwf	6
 13486  0736  0187               	clrf	7
 13487  0737  0836               	movf	??_sprintf,w
 13488  0738  0081               	movwf	1
 13489  0739                     l4983:
 13490  0739  3001               	movlw	1
 13491  073A  00B6               	movwf	??_sprintf
 13492  073B  0836               	movf	??_sprintf,w
 13493  073C  07C2               	addwf	sprintf@sp,f
 13494  073D                     l4985:
 13495                           
 13496                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 13497  073D  0841               	movf	sprintf@c,w
 13498  073E  00B6               	movwf	??_sprintf
 13499  073F  0836               	movf	??_sprintf,w
 13500  0740  00BB               	movwf	sprintf@prec
 13501                           
 13502                           ;doprnt.c: 1500: while(prec--) {
 13503  0741  2F75               	goto	l4993
 13504  0742                     l4987:
 13505                           
 13506                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 13507  0742  300A               	movlw	10
 13508  0743  00A8               	movwf	___lwmod@divisor
 13509  0744  3000               	movlw	0
 13510  0745  00A9               	movwf	___lwmod@divisor+1
 13511  0746  083B               	movf	sprintf@prec,w
 13512  0747  00B6               	movwf	??_sprintf
 13513  0748  01B7               	clrf	??_sprintf+1
 13514  0749  35B6               	lslf	??_sprintf,f
 13515  074A  0DB7               	rlf	??_sprintf+1,f
 13516  074B  3036               	movlw	low (_dpowers| (0+32768))
 13517  074C  0736               	addwf	??_sprintf,w
 13518  074D  0084               	movwf	4
 13519  074E  3098               	movlw	high (_dpowers| (0+32768))
 13520  074F  3D37               	addwfc	??_sprintf+1,w
 13521  0750  0085               	movwf	5
 13522  0751  3F00               	moviw [0]fsr0
 13523  0752  00A0               	movwf	___lwdiv@divisor
 13524  0753  3F01               	moviw [1]fsr0
 13525  0754  00A1               	movwf	___lwdiv@divisor+1
 13526  0755  083D               	movf	sprintf@val+1,w
 13527  0756  00A3               	movwf	___lwdiv@dividend+1
 13528  0757  083C               	movf	sprintf@val,w
 13529  0758  00A2               	movwf	___lwdiv@dividend
 13530  0759  3195  254C  3185   	fcall	___lwdiv
 13531  075C  0020               	movlb	0	; select bank0
 13532  075D  0821               	movf	?___lwdiv+1,w
 13533  075E  00AB               	movwf	___lwmod@dividend+1
 13534  075F  0820               	movf	?___lwdiv,w
 13535  0760  00AA               	movwf	___lwmod@dividend
 13536  0761  3188  2002  3185   	fcall	___lwmod
 13537  0764  0020               	movlb	0	; select bank0
 13538  0765  0828               	movf	?___lwmod,w
 13539  0766  3E30               	addlw	48
 13540  0767  00B8               	movwf	??_sprintf+2
 13541  0768  0838               	movf	??_sprintf+2,w
 13542  0769  00C1               	movwf	sprintf@c
 13543  076A                     l4989:
 13544                           
 13545                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 13546  076A  0841               	movf	sprintf@c,w
 13547  076B  00B6               	movwf	??_sprintf
 13548  076C  0842               	movf	sprintf@sp,w
 13549  076D  0086               	movwf	6
 13550  076E  0187               	clrf	7
 13551  076F  0836               	movf	??_sprintf,w
 13552  0770  0081               	movwf	1
 13553  0771                     l4991:
 13554  0771  3001               	movlw	1
 13555  0772  00B6               	movwf	??_sprintf
 13556  0773  0836               	movf	??_sprintf,w
 13557  0774  07C2               	addwf	sprintf@sp,f
 13558  0775                     l4993:
 13559  0775  30FF               	movlw	255
 13560  0776  00B6               	movwf	??_sprintf
 13561  0777  0836               	movf	??_sprintf,w
 13562  0778  07BB               	addwf	sprintf@prec,f
 13563  0779  0A3B               	incf	sprintf@prec,w
 13564  077A  1D03               	btfss	3,2
 13565  077B  2F7D               	goto	u4331
 13566  077C  2F7E               	goto	u4330
 13567  077D                     u4331:
 13568  077D  2F42               	goto	l4987
 13569  077E                     u4330:
 13570  077E                     l4995:
 13571  077E  082F               	movf	sprintf@f+1,w
 13572  077F  00B7               	movwf	??_sprintf+1
 13573  0780  082E               	movf	sprintf@f,w
 13574  0781  00B6               	movwf	??_sprintf
 13575  0782  0AAE               	incf	sprintf@f,f
 13576  0783  1903               	skipnz
 13577  0784  0AAF               	incf	sprintf@f+1,f
 13578  0785  0836               	movf	??_sprintf,w
 13579  0786  0084               	movwf	4
 13580  0787  0837               	movf	??_sprintf+1,w
 13581  0788  0085               	movwf	5
 13582  0789  0800               	movf	0,w	;code access
 13583  078A  00B8               	movwf	??_sprintf+2
 13584  078B  0838               	movf	??_sprintf+2,w
 13585  078C  00C1               	movwf	sprintf@c
 13586  078D  0841               	movf	sprintf@c,w
 13587  078E  1D03               	btfss	3,2
 13588  078F  2F91               	goto	u4341
 13589  0790  2F92               	goto	u4340
 13590  0791                     u4341:
 13591  0791  2E00               	goto	l4893
 13592  0792                     u4340:
 13593  0792                     l4997:
 13594                           
 13595                           ;doprnt.c: 1564: *sp = 0;
 13596  0792  0842               	movf	sprintf@sp,w
 13597  0793  0086               	movwf	6
 13598  0794  0187               	clrf	7
 13599  0795  0181               	clrf	1
 13600  0796                     l1834:
 13601  0796  0008               	return
 13602  0797                     __end_of_sprintf:
 13603                           
 13604                           	psect	text11
 13605  10FD                     __ptext11:	
 13606 ;; *************** function _isdigit *****************
 13607 ;; Defined at:
 13608 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 13609 ;; Parameters:    Size  Location     Type
 13610 ;;  c               1    wreg     unsigned char 
 13611 ;; Auto vars:     Size  Location     Type
 13612 ;;  c               1    1[BANK0 ] unsigned char 
 13613 ;; Return value:  Size  Location     Type
 13614 ;;		None               void
 13615 ;; Registers used:
 13616 ;;		wreg, status,2, status,0
 13617 ;; Tracked objects:
 13618 ;;		On entry : 0/0
 13619 ;;		On exit  : 0/0
 13620 ;;		Unchanged: 0/0
 13621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13623 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13625 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;Total ram usage:        2 bytes
 13627 ;; Hardware stack levels used:    1
 13628 ;; Hardware stack levels required when called:    5
 13629 ;; This function calls:
 13630 ;;		Nothing
 13631 ;; This function is called by:
 13632 ;;		_sprintf
 13633 ;; This function uses a non-reentrant model
 13634 ;;
 13635                           
 13636                           
 13637                           ;psect for function _isdigit
 13638  10FD                     _isdigit:
 13639                           
 13640                           ;incstack = 0
 13641                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13642                           ;isdigit@c stored from wreg
 13643  10FD  0020               	movlb	0	; select bank0
 13644  10FE  00A1               	movwf	isdigit@c
 13645  10FF                     l4683:
 13646  10FF  01A0               	clrf	_isdigit$3163
 13647  1100                     l4685:
 13648  1100  303A               	movlw	58
 13649  1101  0221               	subwf	isdigit@c,w
 13650  1102  1803               	skipnc
 13651  1103  2905               	goto	u3591
 13652  1104  2906               	goto	u3590
 13653  1105                     u3591:
 13654  1105  290E               	goto	l4691
 13655  1106                     u3590:
 13656  1106                     l4687:
 13657  1106  3030               	movlw	48
 13658  1107  0221               	subwf	isdigit@c,w
 13659  1108  1C03               	skipc
 13660  1109  290B               	goto	u3601
 13661  110A  290C               	goto	u3600
 13662  110B                     u3601:
 13663  110B  290E               	goto	l4691
 13664  110C                     u3600:
 13665  110C                     l4689:
 13666  110C  01A0               	clrf	_isdigit$3163
 13667  110D  0AA0               	incf	_isdigit$3163,f
 13668  110E                     l4691:
 13669  110E  0C20               	rrf	_isdigit$3163,w
 13670  110F                     l2291:
 13671  110F  0008               	return
 13672  1110                     __end_of_isdigit:
 13673                           
 13674                           	psect	text12
 13675  0802                     __ptext12:	
 13676 ;; *************** function ___lwmod *****************
 13677 ;; Defined at:
 13678 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 13679 ;; Parameters:    Size  Location     Type
 13680 ;;  divisor         2    8[BANK0 ] unsigned int 
 13681 ;;  dividend        2   10[BANK0 ] unsigned int 
 13682 ;; Auto vars:     Size  Location     Type
 13683 ;;  counter         1   13[BANK0 ] unsigned char 
 13684 ;; Return value:  Size  Location     Type
 13685 ;;                  2    8[BANK0 ] unsigned int 
 13686 ;; Registers used:
 13687 ;;		wreg, status,2, status,0
 13688 ;; Tracked objects:
 13689 ;;		On entry : 0/0
 13690 ;;		On exit  : 0/0
 13691 ;;		Unchanged: 0/0
 13692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13693 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13694 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13695 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13696 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13697 ;;Total ram usage:        6 bytes
 13698 ;; Hardware stack levels used:    1
 13699 ;; Hardware stack levels required when called:    5
 13700 ;; This function calls:
 13701 ;;		Nothing
 13702 ;; This function is called by:
 13703 ;;		_sprintf
 13704 ;; This function uses a non-reentrant model
 13705 ;;
 13706                           
 13707                           
 13708                           ;psect for function ___lwmod
 13709  0802                     ___lwmod:
 13710  0802                     l4735:	
 13711                           ;incstack = 0
 13712                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13713                           
 13714  0802  0020               	movlb	0	; select bank0
 13715  0803  0828               	movf	___lwmod@divisor,w
 13716  0804  0429               	iorwf	___lwmod@divisor+1,w
 13717  0805  1903               	btfsc	3,2
 13718  0806  2808               	goto	u3721
 13719  0807  2809               	goto	u3720
 13720  0808                     u3721:
 13721  0808  2832               	goto	l4753
 13722  0809                     u3720:
 13723  0809                     l4737:
 13724  0809  01AD               	clrf	___lwmod@counter
 13725  080A  0AAD               	incf	___lwmod@counter,f
 13726  080B  2815               	goto	l4743
 13727  080C                     l4739:
 13728  080C  3001               	movlw	1
 13729  080D                     u3735:
 13730  080D  35A8               	lslf	___lwmod@divisor,f
 13731  080E  0DA9               	rlf	___lwmod@divisor+1,f
 13732  080F  0B89               	decfsz	9,f
 13733  0810  280D               	goto	u3735
 13734  0811                     l4741:
 13735  0811  3001               	movlw	1
 13736  0812  00AC               	movwf	??___lwmod
 13737  0813  082C               	movf	??___lwmod,w
 13738  0814  07AD               	addwf	___lwmod@counter,f
 13739  0815                     l4743:
 13740  0815  1FA9               	btfss	___lwmod@divisor+1,7
 13741  0816  2818               	goto	u3741
 13742  0817  2819               	goto	u3740
 13743  0818                     u3741:
 13744  0818  280C               	goto	l4739
 13745  0819                     u3740:
 13746  0819                     l4745:
 13747  0819  0829               	movf	___lwmod@divisor+1,w
 13748  081A  022B               	subwf	___lwmod@dividend+1,w
 13749  081B  1D03               	skipz
 13750  081C  281F               	goto	u3755
 13751  081D  0828               	movf	___lwmod@divisor,w
 13752  081E  022A               	subwf	___lwmod@dividend,w
 13753  081F                     u3755:
 13754  081F  1C03               	skipc
 13755  0820  2822               	goto	u3751
 13756  0821  2823               	goto	u3750
 13757  0822                     u3751:
 13758  0822  2827               	goto	l4749
 13759  0823                     u3750:
 13760  0823                     l4747:
 13761  0823  0828               	movf	___lwmod@divisor,w
 13762  0824  02AA               	subwf	___lwmod@dividend,f
 13763  0825  0829               	movf	___lwmod@divisor+1,w
 13764  0826  3BAB               	subwfb	___lwmod@dividend+1,f
 13765  0827                     l4749:
 13766  0827  3001               	movlw	1
 13767  0828                     u3765:
 13768  0828  36A9               	lsrf	___lwmod@divisor+1,f
 13769  0829  0CA8               	rrf	___lwmod@divisor,f
 13770  082A  0B89               	decfsz	9,f
 13771  082B  2828               	goto	u3765
 13772  082C                     l4751:
 13773  082C  3001               	movlw	1
 13774  082D  02AD               	subwf	___lwmod@counter,f
 13775  082E  1D03               	btfss	3,2
 13776  082F  2831               	goto	u3771
 13777  0830  2832               	goto	u3770
 13778  0831                     u3771:
 13779  0831  2819               	goto	l4745
 13780  0832                     u3770:
 13781  0832                     l4753:
 13782  0832  082B               	movf	___lwmod@dividend+1,w
 13783  0833  00A9               	movwf	?___lwmod+1
 13784  0834  082A               	movf	___lwmod@dividend,w
 13785  0835  00A8               	movwf	?___lwmod
 13786  0836                     l2120:
 13787  0836  0008               	return
 13788  0837                     __end_of___lwmod:
 13789                           
 13790                           	psect	text13
 13791  154C                     __ptext13:	
 13792 ;; *************** function ___lwdiv *****************
 13793 ;; Defined at:
 13794 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 13795 ;; Parameters:    Size  Location     Type
 13796 ;;  divisor         2    0[BANK0 ] unsigned int 
 13797 ;;  dividend        2    2[BANK0 ] unsigned int 
 13798 ;; Auto vars:     Size  Location     Type
 13799 ;;  quotient        2    5[BANK0 ] unsigned int 
 13800 ;;  counter         1    7[BANK0 ] unsigned char 
 13801 ;; Return value:  Size  Location     Type
 13802 ;;                  2    0[BANK0 ] unsigned int 
 13803 ;; Registers used:
 13804 ;;		wreg, status,2, status,0
 13805 ;; Tracked objects:
 13806 ;;		On entry : 0/0
 13807 ;;		On exit  : 0/0
 13808 ;;		Unchanged: 0/0
 13809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13810 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13811 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13812 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13813 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13814 ;;Total ram usage:        8 bytes
 13815 ;; Hardware stack levels used:    1
 13816 ;; Hardware stack levels required when called:    5
 13817 ;; This function calls:
 13818 ;;		Nothing
 13819 ;; This function is called by:
 13820 ;;		_sprintf
 13821 ;; This function uses a non-reentrant model
 13822 ;;
 13823                           
 13824                           
 13825                           ;psect for function ___lwdiv
 13826  154C                     ___lwdiv:
 13827  154C                     l4709:	
 13828                           ;incstack = 0
 13829                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13830                           
 13831  154C  0020               	movlb	0	; select bank0
 13832  154D  01A5               	clrf	___lwdiv@quotient
 13833  154E  01A6               	clrf	___lwdiv@quotient+1
 13834  154F                     l4711:
 13835  154F  0820               	movf	___lwdiv@divisor,w
 13836  1550  0421               	iorwf	___lwdiv@divisor+1,w
 13837  1551  1903               	btfsc	3,2
 13838  1552  2D54               	goto	u3651
 13839  1553  2D55               	goto	u3650
 13840  1554                     u3651:
 13841  1554  2D84               	goto	l4731
 13842  1555                     u3650:
 13843  1555                     l4713:
 13844  1555  01A7               	clrf	___lwdiv@counter
 13845  1556  0AA7               	incf	___lwdiv@counter,f
 13846  1557  2D61               	goto	l4719
 13847  1558                     l4715:
 13848  1558  3001               	movlw	1
 13849  1559                     u3665:
 13850  1559  35A0               	lslf	___lwdiv@divisor,f
 13851  155A  0DA1               	rlf	___lwdiv@divisor+1,f
 13852  155B  0B89               	decfsz	9,f
 13853  155C  2D59               	goto	u3665
 13854  155D                     l4717:
 13855  155D  3001               	movlw	1
 13856  155E  00A4               	movwf	??___lwdiv
 13857  155F  0824               	movf	??___lwdiv,w
 13858  1560  07A7               	addwf	___lwdiv@counter,f
 13859  1561                     l4719:
 13860  1561  1FA1               	btfss	___lwdiv@divisor+1,7
 13861  1562  2D64               	goto	u3671
 13862  1563  2D65               	goto	u3670
 13863  1564                     u3671:
 13864  1564  2D58               	goto	l4715
 13865  1565                     u3670:
 13866  1565                     l4721:
 13867  1565  3001               	movlw	1
 13868  1566                     u3685:
 13869  1566  35A5               	lslf	___lwdiv@quotient,f
 13870  1567  0DA6               	rlf	___lwdiv@quotient+1,f
 13871  1568  0B89               	decfsz	9,f
 13872  1569  2D66               	goto	u3685
 13873  156A  0821               	movf	___lwdiv@divisor+1,w
 13874  156B  0223               	subwf	___lwdiv@dividend+1,w
 13875  156C  1D03               	skipz
 13876  156D  2D70               	goto	u3695
 13877  156E  0820               	movf	___lwdiv@divisor,w
 13878  156F  0222               	subwf	___lwdiv@dividend,w
 13879  1570                     u3695:
 13880  1570  1C03               	skipc
 13881  1571  2D73               	goto	u3691
 13882  1572  2D74               	goto	u3690
 13883  1573                     u3691:
 13884  1573  2D79               	goto	l4727
 13885  1574                     u3690:
 13886  1574                     l4723:
 13887  1574  0820               	movf	___lwdiv@divisor,w
 13888  1575  02A2               	subwf	___lwdiv@dividend,f
 13889  1576  0821               	movf	___lwdiv@divisor+1,w
 13890  1577  3BA3               	subwfb	___lwdiv@dividend+1,f
 13891  1578                     l4725:
 13892  1578  1425               	bsf	___lwdiv@quotient,0
 13893  1579                     l4727:
 13894  1579  3001               	movlw	1
 13895  157A                     u3705:
 13896  157A  36A1               	lsrf	___lwdiv@divisor+1,f
 13897  157B  0CA0               	rrf	___lwdiv@divisor,f
 13898  157C  0B89               	decfsz	9,f
 13899  157D  2D7A               	goto	u3705
 13900  157E                     l4729:
 13901  157E  3001               	movlw	1
 13902  157F  02A7               	subwf	___lwdiv@counter,f
 13903  1580  1D03               	btfss	3,2
 13904  1581  2D83               	goto	u3711
 13905  1582  2D84               	goto	u3710
 13906  1583                     u3711:
 13907  1583  2D65               	goto	l4721
 13908  1584                     u3710:
 13909  1584                     l4731:
 13910  1584  0826               	movf	___lwdiv@quotient+1,w
 13911  1585  00A1               	movwf	?___lwdiv+1
 13912  1586  0825               	movf	___lwdiv@quotient,w
 13913  1587  00A0               	movwf	?___lwdiv
 13914  1588                     l2110:
 13915  1588  0008               	return
 13916  1589                     __end_of___lwdiv:
 13917                           
 13918                           	psect	text14
 13919  14DF                     __ptext14:	
 13920 ;; *************** function _differenceBetweenTimePeriod *****************
 13921 ;; Defined at:
 13922 ;;		line 327 in file "main.c"
 13923 ;; Parameters:    Size  Location     Type
 13924 ;;  start           3    0[BANK0 ] struct Time
 13925 ;;  stop            3    3[BANK0 ] struct Time
 13926 ;;  diff            1    6[BANK0 ] PTR struct Time
 13927 ;;		 -> update_menuLCD@diff(3), 
 13928 ;; Auto vars:     Size  Location     Type
 13929 ;;		None
 13930 ;; Return value:  Size  Location     Type
 13931 ;;                  1    wreg      void 
 13932 ;; Registers used:
 13933 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13934 ;; Tracked objects:
 13935 ;;		On entry : 0/0
 13936 ;;		On exit  : 0/0
 13937 ;;		Unchanged: 0/0
 13938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13939 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13942 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13943 ;;Total ram usage:        8 bytes
 13944 ;; Hardware stack levels used:    1
 13945 ;; Hardware stack levels required when called:    5
 13946 ;; This function calls:
 13947 ;;		Nothing
 13948 ;; This function is called by:
 13949 ;;		_update_menuLCD
 13950 ;; This function uses a non-reentrant model
 13951 ;;
 13952                           
 13953                           
 13954                           ;psect for function _differenceBetweenTimePeriod
 13955  14DF                     _differenceBetweenTimePeriod:
 13956  14DF                     l4875:	
 13957                           ;incstack = 0
 13958                           ; Regs used in _differenceBetweenTimePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13959                           
 13960                           
 13961                           ;main.c: 330: while (stop.s > start.s) {
 13962  14DF  2CE6               	goto	l4879
 13963  14E0                     l4877:
 13964                           
 13965                           ;main.c: 331: --start.m;
 13966  14E0  3001               	movlw	1
 13967  14E1  02A1               	subwf	differenceBetweenTimePeriod@start+1,f
 13968                           
 13969                           ;main.c: 332: start.s += 60;
 13970  14E2  303C               	movlw	60
 13971  14E3  00A7               	movwf	??_differenceBetweenTimePeriod
 13972  14E4  0827               	movf	??_differenceBetweenTimePeriod,w
 13973  14E5  07A2               	addwf	differenceBetweenTimePeriod@start+2,f
 13974  14E6                     l4879:
 13975  14E6  0020               	movlb	0	; select bank0
 13976  14E7  0825               	movf	differenceBetweenTimePeriod@stop+2,w
 13977  14E8  0222               	subwf	differenceBetweenTimePeriod@start+2,w
 13978  14E9  1C03               	skipc
 13979  14EA  2CEC               	goto	u4151
 13980  14EB  2CED               	goto	u4150
 13981  14EC                     u4151:
 13982  14EC  2CE0               	goto	l4877
 13983  14ED                     u4150:
 13984  14ED                     l4881:
 13985                           
 13986                           ;main.c: 333: };main.c: 334: diff->s = start.s - stop.s;
 13987  14ED  0825               	movf	differenceBetweenTimePeriod@stop+2,w
 13988  14EE  0222               	subwf	differenceBetweenTimePeriod@start+2,w
 13989  14EF  00A7               	movwf	??_differenceBetweenTimePeriod
 13990  14F0  0826               	movf	differenceBetweenTimePeriod@diff,w
 13991  14F1  3E02               	addlw	2
 13992  14F2  0086               	movwf	6
 13993  14F3  0187               	clrf	7
 13994  14F4  0827               	movf	??_differenceBetweenTimePeriod,w
 13995  14F5  0081               	movwf	1
 13996                           
 13997                           ;main.c: 335: while (stop.m > start.m) {
 13998  14F6  2CFD               	goto	l4885
 13999  14F7                     l4883:
 14000                           
 14001                           ;main.c: 336: --start.h;
 14002  14F7  3001               	movlw	1
 14003  14F8  02A0               	subwf	differenceBetweenTimePeriod@start,f
 14004                           
 14005                           ;main.c: 337: start.m += 60;
 14006  14F9  303C               	movlw	60
 14007  14FA  00A7               	movwf	??_differenceBetweenTimePeriod
 14008  14FB  0827               	movf	??_differenceBetweenTimePeriod,w
 14009  14FC  07A1               	addwf	differenceBetweenTimePeriod@start+1,f
 14010  14FD                     l4885:
 14011  14FD  0824               	movf	differenceBetweenTimePeriod@stop+1,w
 14012  14FE  0221               	subwf	differenceBetweenTimePeriod@start+1,w
 14013  14FF  1C03               	skipc
 14014  1500  2D02               	goto	u4161
 14015  1501  2D03               	goto	u4160
 14016  1502                     u4161:
 14017  1502  2CF7               	goto	l4883
 14018  1503                     u4160:
 14019  1503                     l4887:
 14020                           
 14021                           ;main.c: 338: };main.c: 339: diff->m = start.m - stop.m;
 14022  1503  0824               	movf	differenceBetweenTimePeriod@stop+1,w
 14023  1504  0221               	subwf	differenceBetweenTimePeriod@start+1,w
 14024  1505  00A7               	movwf	??_differenceBetweenTimePeriod
 14025  1506  0A26               	incf	differenceBetweenTimePeriod@diff,w
 14026  1507  0086               	movwf	6
 14027  1508  0187               	clrf	7
 14028  1509  0827               	movf	??_differenceBetweenTimePeriod,w
 14029  150A  0081               	movwf	1
 14030                           
 14031                           ;main.c: 340: diff->h = start.h - stop.h;
 14032  150B  0823               	movf	differenceBetweenTimePeriod@stop,w
 14033  150C  0220               	subwf	differenceBetweenTimePeriod@start,w
 14034  150D  00A7               	movwf	??_differenceBetweenTimePeriod
 14035  150E  0826               	movf	differenceBetweenTimePeriod@diff,w
 14036  150F  0086               	movwf	6
 14037  1510  0187               	clrf	7
 14038  1511  0827               	movf	??_differenceBetweenTimePeriod,w
 14039  1512  0081               	movwf	1
 14040  1513                     l1329:
 14041  1513  0008               	return
 14042  1514                     __end_of_differenceBetweenTimePeriod:
 14043                           
 14044                           	psect	text15
 14045  1FF8                     __ptext15:	
 14046 ;; *************** function _TMR2_StopTimer *****************
 14047 ;; Defined at:
 14048 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 14049 ;; Parameters:    Size  Location     Type
 14050 ;;		None
 14051 ;; Auto vars:     Size  Location     Type
 14052 ;;		None
 14053 ;; Return value:  Size  Location     Type
 14054 ;;                  1    wreg      void 
 14055 ;; Registers used:
 14056 ;;		status,2, status,0, pclath, cstack
 14057 ;; Tracked objects:
 14058 ;;		On entry : 0/0
 14059 ;;		On exit  : 0/0
 14060 ;;		Unchanged: 0/0
 14061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14066 ;;Total ram usage:        0 bytes
 14067 ;; Hardware stack levels used:    1
 14068 ;; Hardware stack levels required when called:    6
 14069 ;; This function calls:
 14070 ;;		_TMR2_Stop
 14071 ;; This function is called by:
 14072 ;;		_update_menuLCD
 14073 ;;		_main
 14074 ;; This function uses a non-reentrant model
 14075 ;;
 14076                           
 14077                           
 14078                           ;psect for function _TMR2_StopTimer
 14079  1FF8                     _TMR2_StopTimer:
 14080  1FF8                     l4807:	
 14081                           ;incstack = 0
 14082                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 14083                           
 14084                           
 14085                           ;tmr2.c: 119: TMR2_Stop();
 14086  1FF8  319F  27F1  319F   	fcall	_TMR2_Stop
 14087  1FFB                     l738:
 14088  1FFB  0008               	return
 14089  1FFC                     __end_of_TMR2_StopTimer:
 14090                           
 14091                           	psect	text16
 14092  1FF1                     __ptext16:	
 14093 ;; *************** function _TMR2_Stop *****************
 14094 ;; Defined at:
 14095 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 14096 ;; Parameters:    Size  Location     Type
 14097 ;;		None
 14098 ;; Auto vars:     Size  Location     Type
 14099 ;;		None
 14100 ;; Return value:  Size  Location     Type
 14101 ;;                  1    wreg      void 
 14102 ;; Registers used:
 14103 ;;		None
 14104 ;; Tracked objects:
 14105 ;;		On entry : 0/0
 14106 ;;		On exit  : 0/0
 14107 ;;		Unchanged: 0/0
 14108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14113 ;;Total ram usage:        0 bytes
 14114 ;; Hardware stack levels used:    1
 14115 ;; Hardware stack levels required when called:    5
 14116 ;; This function calls:
 14117 ;;		Nothing
 14118 ;; This function is called by:
 14119 ;;		_TMR2_StopTimer
 14120 ;; This function uses a non-reentrant model
 14121 ;;
 14122                           
 14123                           
 14124                           ;psect for function _TMR2_Stop
 14125  1FF1                     _TMR2_Stop:
 14126  1FF1                     l4677:	
 14127                           ;incstack = 0
 14128                           ; Regs used in _TMR2_Stop: []
 14129                           
 14130                           
 14131                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 14132  1FF1  0025               	movlb	5	; select bank5
 14133  1FF2  138E               	bcf	14,7	;volatile
 14134  1FF3                     l735:
 14135  1FF3  0008               	return
 14136  1FF4                     __end_of_TMR2_Stop:
 14137                           
 14138                           	psect	text17
 14139  1FEE                     __ptext17:	
 14140 ;; *************** function _PWM_Output_D4_Disable *****************
 14141 ;; Defined at:
 14142 ;;		line 347 in file "main.c"
 14143 ;; Parameters:    Size  Location     Type
 14144 ;;		None
 14145 ;; Auto vars:     Size  Location     Type
 14146 ;;		None
 14147 ;; Return value:  Size  Location     Type
 14148 ;;                  1    wreg      void 
 14149 ;; Registers used:
 14150 ;;		None
 14151 ;; Tracked objects:
 14152 ;;		On entry : 0/0
 14153 ;;		On exit  : 0/0
 14154 ;;		Unchanged: 0/0
 14155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14160 ;;Total ram usage:        0 bytes
 14161 ;; Hardware stack levels used:    1
 14162 ;; Hardware stack levels required when called:    5
 14163 ;; This function calls:
 14164 ;;		Nothing
 14165 ;; This function is called by:
 14166 ;;		_update_menuLCD
 14167 ;;		_main
 14168 ;; This function uses a non-reentrant model
 14169 ;;
 14170                           
 14171                           
 14172                           ;psect for function _PWM_Output_D4_Disable
 14173  1FEE                     _PWM_Output_D4_Disable:
 14174  1FEE                     l4889:	
 14175                           ;incstack = 0
 14176                           ; Regs used in _PWM_Output_D4_Disable: []
 14177                           
 14178                           
 14179                           ;main.c: 348: PWM6EN = 0;
 14180  1FEE  0027               	movlb	7	; select bank7
 14181  1FEF  138E               	bcf	14,7	;volatile
 14182  1FF0                     l1335:
 14183  1FF0  0008               	return
 14184  1FF1                     __end_of_PWM_Output_D4_Disable:
 14185                           
 14186                           	psect	text18
 14187  1155                     __ptext18:	
 14188 ;; *************** function _PWM6_LoadDutyValue *****************
 14189 ;; Defined at:
 14190 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14191 ;; Parameters:    Size  Location     Type
 14192 ;;  dutyValue       2    0[BANK0 ] unsigned int 
 14193 ;; Auto vars:     Size  Location     Type
 14194 ;;		None
 14195 ;; Return value:  Size  Location     Type
 14196 ;;                  1    wreg      void 
 14197 ;; Registers used:
 14198 ;;		wreg, status,2, status,0
 14199 ;; Tracked objects:
 14200 ;;		On entry : 0/0
 14201 ;;		On exit  : 0/0
 14202 ;;		Unchanged: 0/0
 14203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14206 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14207 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14208 ;;Total ram usage:        4 bytes
 14209 ;; Hardware stack levels used:    1
 14210 ;; Hardware stack levels required when called:    5
 14211 ;; This function calls:
 14212 ;;		Nothing
 14213 ;; This function is called by:
 14214 ;;		_update_menuLCD
 14215 ;;		_main
 14216 ;; This function uses a non-reentrant model
 14217 ;;
 14218                           
 14219                           
 14220                           ;psect for function _PWM6_LoadDutyValue
 14221  1155                     _PWM6_LoadDutyValue:
 14222  1155                     l4805:	
 14223                           ;incstack = 0
 14224                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14225                           
 14226                           
 14227                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 14228  1155  0020               	movlb	0	; select bank0
 14229  1156  0821               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 14230  1157  00A3               	movwf	??_PWM6_LoadDutyValue+1
 14231  1158  0820               	movf	PWM6_LoadDutyValue@dutyValue,w
 14232  1159  00A2               	movwf	??_PWM6_LoadDutyValue
 14233  115A  36A3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14234  115B  0CA2               	rrf	??_PWM6_LoadDutyValue,f
 14235  115C  36A3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14236  115D  0CA2               	rrf	??_PWM6_LoadDutyValue,f
 14237  115E  0822               	movf	??_PWM6_LoadDutyValue,w
 14238  115F  0027               	movlb	7	; select bank7
 14239  1160  008D               	movwf	13	;volatile
 14240                           
 14241                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 14242  1161  0020               	movlb	0	; select bank0
 14243  1162  0820               	movf	PWM6_LoadDutyValue@dutyValue,w
 14244  1163  3903               	andlw	3
 14245  1164  00A2               	movwf	??_PWM6_LoadDutyValue
 14246  1165  3005               	movlw	5
 14247  1166                     u3885:
 14248  1166  35A2               	lslf	??_PWM6_LoadDutyValue,f
 14249  1167  3EFF               	addlw	-1
 14250  1168  1D03               	skipz
 14251  1169  2966               	goto	u3885
 14252  116A  3522               	lslf	??_PWM6_LoadDutyValue,w
 14253  116B  0027               	movlb	7	; select bank7
 14254  116C  008C               	movwf	12	;volatile
 14255  116D                     l693:
 14256  116D  0008               	return
 14257  116E                     __end_of_PWM6_LoadDutyValue:
 14258                           
 14259                           	psect	text19
 14260  11BE                     __ptext19:	
 14261 ;; *************** function _LCDstr *****************
 14262 ;; Defined at:
 14263 ;;		line 313 in file "main.c"
 14264 ;; Parameters:    Size  Location     Type
 14265 ;;  p               2    9[BANK0 ] PTR unsigned char 
 14266 ;;		 -> STR_7(4), update_menuLCD@l(3), update_menuLCD@tt(4), update_menuLCD@str(8), 
 14267 ;; Auto vars:     Size  Location     Type
 14268 ;;  c               1   14[BANK0 ] unsigned char 
 14269 ;; Return value:  Size  Location     Type
 14270 ;;                  1    wreg      void 
 14271 ;; Registers used:
 14272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14273 ;; Tracked objects:
 14274 ;;		On entry : 0/0
 14275 ;;		On exit  : 0/0
 14276 ;;		Unchanged: 0/0
 14277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14278 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14280 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14281 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14282 ;;Total ram usage:        6 bytes
 14283 ;; Hardware stack levels used:    1
 14284 ;; Hardware stack levels required when called:    8
 14285 ;; This function calls:
 14286 ;;		_LCDchar
 14287 ;; This function is called by:
 14288 ;;		_update_menuLCD
 14289 ;; This function uses a non-reentrant model
 14290 ;;
 14291                           
 14292                           
 14293                           ;psect for function _LCDstr
 14294  11BE                     _LCDstr:
 14295  11BE                     l4869:	
 14296                           ;incstack = 0
 14297                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14298                           
 14299                           
 14300                           ;main.c: 315: unsigned char c;;main.c: 317: while((c = *p++)) LCDchar(c);
 14301  11BE  29C3               	goto	l4873
 14302  11BF                     l4871:
 14303  11BF  082E               	movf	LCDstr@c,w
 14304  11C0  3190  2072  3191   	fcall	_LCDchar
 14305  11C3                     l4873:
 14306  11C3  0020               	movlb	0	; select bank0
 14307  11C4  082A               	movf	LCDstr@p+1,w
 14308  11C5  00AC               	movwf	??_LCDstr+1
 14309  11C6  0829               	movf	LCDstr@p,w
 14310  11C7  00AB               	movwf	??_LCDstr
 14311  11C8  0AA9               	incf	LCDstr@p,f
 14312  11C9  1903               	skipnz
 14313  11CA  0AAA               	incf	LCDstr@p+1,f
 14314  11CB  082B               	movf	??_LCDstr,w
 14315  11CC  0084               	movwf	4
 14316  11CD  082C               	movf	??_LCDstr+1,w
 14317  11CE  0085               	movwf	5
 14318  11CF  0800               	movf	0,w	;code access
 14319  11D0  00AD               	movwf	??_LCDstr+2
 14320  11D1  082D               	movf	??_LCDstr+2,w
 14321  11D2  00AE               	movwf	LCDstr@c
 14322  11D3  082E               	movf	LCDstr@c,w
 14323  11D4  1D03               	btfss	3,2
 14324  11D5  29D7               	goto	u4141
 14325  11D6  29D8               	goto	u4140
 14326  11D7                     u4141:
 14327  11D7  29BF               	goto	l4871
 14328  11D8                     u4140:
 14329  11D8                     l1316:
 14330  11D8  0008               	return
 14331  11D9                     __end_of_LCDstr:
 14332                           
 14333                           	psect	text20
 14334  1072                     __ptext20:	
 14335 ;; *************** function _LCDchar *****************
 14336 ;; Defined at:
 14337 ;;		line 308 in file "main.c"
 14338 ;; Parameters:    Size  Location     Type
 14339 ;;  c               1    wreg     unsigned char 
 14340 ;; Auto vars:     Size  Location     Type
 14341 ;;  c               1    8[BANK0 ] unsigned char 
 14342 ;; Return value:  Size  Location     Type
 14343 ;;                  1    wreg      void 
 14344 ;; Registers used:
 14345 ;;		wreg, status,2, status,0, pclath, cstack
 14346 ;; Tracked objects:
 14347 ;;		On entry : 0/0
 14348 ;;		On exit  : 0/0
 14349 ;;		Unchanged: 0/0
 14350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14352 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14354 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14355 ;;Total ram usage:        1 bytes
 14356 ;; Hardware stack levels used:    1
 14357 ;; Hardware stack levels required when called:    7
 14358 ;; This function calls:
 14359 ;;		_LCDsend2x4
 14360 ;; This function is called by:
 14361 ;;		_LCDstr
 14362 ;;		_update_menuLCD
 14363 ;; This function uses a non-reentrant model
 14364 ;;
 14365                           
 14366                           
 14367                           ;psect for function _LCDchar
 14368  1072                     _LCDchar:
 14369                           
 14370                           ;incstack = 0
 14371                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 14372                           ;LCDchar@c stored from wreg
 14373  1072  0020               	movlb	0	; select bank0
 14374  1073  00A8               	movwf	LCDchar@c
 14375  1074                     l4681:
 14376                           
 14377                           ;main.c: 310: LCDsend2x4(c, 0x01);
 14378  1074  01A2               	clrf	LCDsend2x4@mode
 14379  1075  0AA2               	incf	LCDsend2x4@mode,f
 14380  1076  0828               	movf	LCDchar@c,w
 14381  1077  318A  22B7  3190   	fcall	_LCDsend2x4
 14382  107A                     l1310:
 14383  107A  0008               	return
 14384  107B                     __end_of_LCDchar:
 14385                           
 14386                           	psect	text21
 14387  1022                     __ptext21:	
 14388 ;; *************** function _LCDcmd *****************
 14389 ;; Defined at:
 14390 ;;		line 303 in file "main.c"
 14391 ;; Parameters:    Size  Location     Type
 14392 ;;  c               1    wreg     unsigned char 
 14393 ;; Auto vars:     Size  Location     Type
 14394 ;;  c               1    8[BANK0 ] unsigned char 
 14395 ;; Return value:  Size  Location     Type
 14396 ;;                  1    wreg      void 
 14397 ;; Registers used:
 14398 ;;		wreg, status,2, status,0, pclath, cstack
 14399 ;; Tracked objects:
 14400 ;;		On entry : 0/0
 14401 ;;		On exit  : 0/0
 14402 ;;		Unchanged: 0/0
 14403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14407 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14408 ;;Total ram usage:        1 bytes
 14409 ;; Hardware stack levels used:    1
 14410 ;; Hardware stack levels required when called:    7
 14411 ;; This function calls:
 14412 ;;		_LCDsend2x4
 14413 ;; This function is called by:
 14414 ;;		_update_menuLCD
 14415 ;; This function uses a non-reentrant model
 14416 ;;
 14417                           
 14418                           
 14419                           ;psect for function _LCDcmd
 14420  1022                     _LCDcmd:
 14421                           
 14422                           ;incstack = 0
 14423                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 14424                           ;LCDcmd@c stored from wreg
 14425  1022  0020               	movlb	0	; select bank0
 14426  1023  00A8               	movwf	LCDcmd@c
 14427  1024                     l4867:
 14428                           
 14429                           ;main.c: 305: LCDsend2x4(c, 0);
 14430  1024  01A2               	clrf	LCDsend2x4@mode
 14431  1025  0828               	movf	LCDcmd@c,w
 14432  1026  318A  22B7  3190   	fcall	_LCDsend2x4
 14433  1029                     l1307:
 14434  1029  0008               	return
 14435  102A                     __end_of_LCDcmd:
 14436                           
 14437                           	psect	text22
 14438  0797                     __ptext22:	
 14439 ;; *************** function _S1button *****************
 14440 ;; Defined at:
 14441 ;;		line 610 in file "main.c"
 14442 ;; Parameters:    Size  Location     Type
 14443 ;;		None
 14444 ;; Auto vars:     Size  Location     Type
 14445 ;;		None
 14446 ;; Return value:  Size  Location     Type
 14447 ;;                  1    wreg      void 
 14448 ;; Registers used:
 14449 ;;		wreg, status,2, status,0
 14450 ;; Tracked objects:
 14451 ;;		On entry : 0/0
 14452 ;;		On exit  : 0/0
 14453 ;;		Unchanged: 0/0
 14454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14457 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14459 ;;Total ram usage:        1 bytes
 14460 ;; Hardware stack levels used:    1
 14461 ;; Hardware stack levels required when called:    5
 14462 ;; This function calls:
 14463 ;;		Nothing
 14464 ;; This function is called by:
 14465 ;;		_editClock
 14466 ;;		_editTemp
 14467 ;;		_editLum
 14468 ;;		_toggleAlarms
 14469 ;;		_main
 14470 ;; This function uses a non-reentrant model
 14471 ;;
 14472                           
 14473                           
 14474                           ;psect for function _S1button
 14475  0797                     _S1button:
 14476  0797                     l5553:	
 14477                           ;incstack = 0
 14478                           ; Regs used in _S1button: [wreg+status,2+status,0]
 14479                           
 14480                           
 14481                           ;main.c: 612: if(modeFlag == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.tri
      +                          gger)){
 14482  0797  0020               	movlb	0	; select bank0
 14483  0798  0862               	movf	_modeFlag,w
 14484  0799  0463               	iorwf	_modeFlag+1,w
 14485  079A  1D03               	btfss	3,2
 14486  079B  2F9D               	goto	u5051
 14487  079C  2F9E               	goto	u5050
 14488  079D                     u5051:
 14489  079D  2FB5               	goto	l5565
 14490  079E                     u5050:
 14491  079E                     l5555:
 14492  079E  0021               	movlb	1	; select bank1
 14493  079F  0843               	movf	(_clkAlarm^(0+128)+3),w
 14494  07A0  1D03               	btfss	3,2
 14495  07A1  2FA3               	goto	u5061
 14496  07A2  2FA4               	goto	u5060
 14497  07A3                     u5061:
 14498  07A3  2FAE               	goto	l5561
 14499  07A4                     u5060:
 14500  07A4                     l5557:
 14501  07A4  084B               	movf	(_tempAlarm^(0+128)+1),w
 14502  07A5  1D03               	btfss	3,2
 14503  07A6  2FA8               	goto	u5071
 14504  07A7  2FA9               	goto	u5070
 14505  07A8                     u5071:
 14506  07A8  2FAE               	goto	l5561
 14507  07A9                     u5070:
 14508  07A9                     l5559:
 14509  07A9  0848               	movf	(_lumAlarm^(0+128)+1),w
 14510  07AA  1903               	btfsc	3,2
 14511  07AB  2FAD               	goto	u5081
 14512  07AC  2FAE               	goto	u5080
 14513  07AD                     u5081:
 14514  07AD  2FB5               	goto	l5565
 14515  07AE                     u5080:
 14516  07AE                     l5561:
 14517                           
 14518                           ;main.c: 613: clkAlarm.trigger = 0;
 14519  07AE  01C3               	clrf	(_clkAlarm^(0+128)+3)
 14520                           
 14521                           ;main.c: 614: tempAlarm.trigger = 0;
 14522  07AF  01CB               	clrf	(_tempAlarm^(0+128)+1)
 14523                           
 14524                           ;main.c: 615: lumAlarm.trigger = 0;
 14525  07B0  01C8               	clrf	(_lumAlarm^(0+128)+1)
 14526  07B1                     l5563:
 14527                           
 14528                           ;main.c: 616: updateLCD = 1;
 14529  07B1  0020               	movlb	0	; select bank0
 14530  07B2  01EF               	clrf	_updateLCD
 14531  07B3  0AEF               	incf	_updateLCD,f
 14532                           
 14533                           ;main.c: 617: } else{
 14534  07B4  2FEA               	goto	l1430
 14535  07B5                     l5565:
 14536                           
 14537                           ;main.c: 618: if(modeFlag == 1){
 14538  07B5  0020               	movlb	0	; select bank0
 14539  07B6  0362               	decf	_modeFlag,w
 14540  07B7  0463               	iorwf	_modeFlag+1,w
 14541  07B8  1D03               	btfss	3,2
 14542  07B9  2FBB               	goto	u5091
 14543  07BA  2FBC               	goto	u5090
 14544  07BB                     u5091:
 14545  07BB  2FDF               	goto	l5573
 14546  07BC                     u5090:
 14547  07BC                     l5567:
 14548                           
 14549                           ;main.c: 619: if(editingClockAlarm >= 1){
 14550  07BC  0865               	movf	_editingClockAlarm+1,w
 14551  07BD  3A80               	xorlw	128
 14552  07BE  00A0               	movwf	??_S1button
 14553  07BF  3080               	movlw	128
 14554  07C0  0220               	subwf	??_S1button,w
 14555  07C1  1D03               	skipz
 14556  07C2  2FC5               	goto	u5105
 14557  07C3  3001               	movlw	1
 14558  07C4  0264               	subwf	_editingClockAlarm,w
 14559  07C5                     u5105:
 14560  07C5  1C03               	skipc
 14561  07C6  2FC8               	goto	u5101
 14562  07C7  2FC9               	goto	u5100
 14563  07C8                     u5101:
 14564  07C8  2FCE               	goto	l1432
 14565  07C9                     u5100:
 14566  07C9                     l5569:
 14567                           
 14568                           ;main.c: 620: editingClockAlarm++;
 14569  07C9  3001               	movlw	1
 14570  07CA  0020               	movlb	0	; select bank0
 14571  07CB  07E4               	addwf	_editingClockAlarm,f
 14572  07CC  3000               	movlw	0
 14573  07CD  3DE5               	addwfc	_editingClockAlarm+1,f
 14574  07CE                     l1432:
 14575                           
 14576                           ;main.c: 621: };main.c: 622: if(editingClockAlarm > 3){
 14577  07CE  0020               	movlb	0	; select bank0
 14578  07CF  0865               	movf	_editingClockAlarm+1,w
 14579  07D0  3A80               	xorlw	128
 14580  07D1  00A0               	movwf	??_S1button
 14581  07D2  3080               	movlw	128
 14582  07D3  0220               	subwf	??_S1button,w
 14583  07D4  1D03               	skipz
 14584  07D5  2FD8               	goto	u5115
 14585  07D6  3004               	movlw	4
 14586  07D7  0264               	subwf	_editingClockAlarm,w
 14587  07D8                     u5115:
 14588  07D8  1C03               	skipc
 14589  07D9  2FDB               	goto	u5111
 14590  07DA  2FDC               	goto	u5110
 14591  07DB                     u5111:
 14592  07DB  2FDF               	goto	l5573
 14593  07DC                     u5110:
 14594  07DC                     l5571:
 14595                           
 14596                           ;main.c: 623: editingClockAlarm = 0;
 14597  07DC  0020               	movlb	0	; select bank0
 14598  07DD  01E4               	clrf	_editingClockAlarm
 14599  07DE  01E5               	clrf	_editingClockAlarm+1
 14600  07DF                     l5573:
 14601                           
 14602                           ;main.c: 624: };main.c: 625: };main.c: 626: if(editingClockAlarm == 0){
 14603  07DF  0020               	movlb	0	; select bank0
 14604  07E0  0864               	movf	_editingClockAlarm,w
 14605  07E1  0465               	iorwf	_editingClockAlarm+1,w
 14606  07E2  1D03               	btfss	3,2
 14607  07E3  2FE5               	goto	u5121
 14608  07E4  2FE6               	goto	u5120
 14609  07E5                     u5121:
 14610  07E5  2FEA               	goto	l1430
 14611  07E6                     u5120:
 14612  07E6                     l5575:
 14613                           
 14614                           ;main.c: 627: modeFlag++;
 14615  07E6  3001               	movlw	1
 14616  07E7  07E2               	addwf	_modeFlag,f
 14617  07E8  3000               	movlw	0
 14618  07E9  3DE3               	addwfc	_modeFlag+1,f
 14619  07EA                     l1430:
 14620                           
 14621                           ;main.c: 628: };main.c: 629: };main.c: 630: _delay((unsigned long)((50)*(1000000/4000.0)
      +                          ));
 14622  07EA  3011               	movlw	17
 14623  07EB  0020               	movlb	0	; select bank0
 14624  07EC  00A0               	movwf	??_S1button
 14625  07ED  303A               	movlw	58
 14626  07EE                     u6607:
 14627  07EE  0B89               	decfsz	9,f
 14628  07EF  2FEE               	goto	u6607
 14629  07F0  0BA0               	decfsz	??_S1button,f
 14630  07F1  2FEE               	goto	u6607
 14631  07F2  0000               	nop
 14632  07F3                     l1435:
 14633  07F3  0008               	return
 14634  07F4                     __end_of_S1button:
 14635                           
 14636                           	psect	text23
 14637  09F3                     __ptext23:	
 14638 ;; *************** function _cmd_trc *****************
 14639 ;; Defined at:
 14640 ;;		line 976 in file "main.c"
 14641 ;; Parameters:    Size  Location     Type
 14642 ;;  num             2   15[BANK0 ] int 
 14643 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 14644 ;;		 -> main@buff(20), 
 14645 ;; Auto vars:     Size  Location     Type
 14646 ;;  buffData        5   24[BANK0 ] unsigned char [5]
 14647 ;;  buffInit        2   29[BANK0 ] unsigned char [2]
 14648 ;;  n               2   36[BANK0 ] int 
 14649 ;;  address         2   33[BANK0 ] unsigned int 
 14650 ;;  i               2   31[BANK0 ] int 
 14651 ;;  j               1   38[BANK0 ] unsigned char 
 14652 ;;  buffEOM         1   35[BANK0 ] unsigned char [1]
 14653 ;; Return value:  Size  Location     Type
 14654 ;;                  1    wreg      void 
 14655 ;; Registers used:
 14656 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14657 ;; Tracked objects:
 14658 ;;		On entry : 0/0
 14659 ;;		On exit  : 0/0
 14660 ;;		Unchanged: 0/0
 14661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14662 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14663 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14664 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14665 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14666 ;;Total ram usage:       24 bytes
 14667 ;; Hardware stack levels used:    1
 14668 ;; Hardware stack levels required when called:    9
 14669 ;; This function calls:
 14670 ;;		_DATAEE_ReadByte
 14671 ;;		___wmul
 14672 ;;		_sendERRORMessage
 14673 ;;		_sendMessage
 14674 ;; This function is called by:
 14675 ;;		_main
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679                           
 14680                           ;psect for function _cmd_trc
 14681  09F3                     _cmd_trc:
 14682  09F3                     l6067:	
 14683                           ;incstack = 0
 14684                           ; Regs used in _cmd_trc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14685                           
 14686                           
 14687                           ;main.c: 977: if(num == 4){
 14688  09F3  3004               	movlw	4
 14689  09F4  0020               	movlb	0	; select bank0
 14690  09F5  062F               	xorwf	cmd_trc@num,w
 14691  09F6  0430               	iorwf	cmd_trc@num+1,w
 14692  09F7  1D03               	btfss	3,2
 14693  09F8  29FA               	goto	u6021
 14694  09F9  29FB               	goto	u6020
 14695  09FA                     u6021:
 14696  09FA  2AB2               	goto	l6115
 14697  09FB                     u6020:
 14698  09FB                     l6069:
 14699                           
 14700                           ;main.c: 978: int n = buffer[2];
 14701  09FB  0831               	movf	cmd_trc@buffer,w
 14702  09FC  3E02               	addlw	2
 14703  09FD  0086               	movwf	6
 14704  09FE  0187               	clrf	7
 14705  09FF  0801               	movf	1,w
 14706  0A00  00B2               	movwf	??_cmd_trc
 14707  0A01  01B3               	clrf	??_cmd_trc+1
 14708  0A02  0832               	movf	??_cmd_trc,w
 14709  0A03  00C4               	movwf	cmd_trc@n
 14710  0A04  0833               	movf	??_cmd_trc+1,w
 14711  0A05  00C5               	movwf	cmd_trc@n+1
 14712  0A06                     l6071:
 14713                           
 14714                           ;main.c: 979: if(n > nr){
 14715  0A06  0845               	movf	cmd_trc@n+1,w
 14716  0A07  3A80               	xorlw	128
 14717  0A08  3C80               	sublw	128
 14718  0A09  1D03               	skipz
 14719  0A0A  2A0E               	goto	u6035
 14720  0A0B  0844               	movf	cmd_trc@n,w
 14721  0A0C  0021               	movlb	1	; select bank1
 14722  0A0D  0254               	subwf	_nr^(0+128),w
 14723  0A0E                     u6035:
 14724  0A0E  1803               	skipnc
 14725  0A0F  2A11               	goto	u6031
 14726  0A10  2A12               	goto	u6030
 14727  0A11                     u6031:
 14728  0A11  2A17               	goto	l6077
 14729  0A12                     u6030:
 14730  0A12                     l6073:
 14731                           
 14732                           ;main.c: 980: sendERRORMessage((uint8_t)0XCB);
 14733  0A12  30CB               	movlw	203
 14734  0A13  3191  21F7  3189   	fcall	_sendERRORMessage
 14735  0A16  2AB6               	goto	l1565
 14736  0A17                     l6077:
 14737                           
 14738                           ;main.c: 982: };main.c: 987: uint8_t buffInit[2];;main.c: 988: buffInit[0] = (uint8_t)0x
      +                          FD;
 14739  0A17  30FD               	movlw	253
 14740  0A18  0020               	movlb	0	; select bank0
 14741  0A19  00B2               	movwf	??_cmd_trc
 14742  0A1A  0832               	movf	??_cmd_trc,w
 14743  0A1B  00BD               	movwf	cmd_trc@buffInit
 14744                           
 14745                           ;main.c: 989: buffInit[1] = (uint8_t)0XCB;
 14746  0A1C  30CB               	movlw	203
 14747  0A1D  00B2               	movwf	??_cmd_trc
 14748  0A1E  0832               	movf	??_cmd_trc,w
 14749  0A1F  00BE               	movwf	cmd_trc@buffInit+1
 14750  0A20                     l6079:
 14751                           
 14752                           ;main.c: 990: sendMessage(2,buffInit);
 14753  0A20  3002               	movlw	2
 14754  0A21  00A3               	movwf	sendMessage@num
 14755  0A22  3000               	movlw	0
 14756  0A23  00A4               	movwf	sendMessage@num+1
 14757  0A24  303D               	movlw	(low (cmd_trc@buffInit| 0))& (0+255)
 14758  0A25  00B2               	movwf	??_cmd_trc
 14759  0A26  0832               	movf	??_cmd_trc,w
 14760  0A27  00A5               	movwf	sendMessage@buffer
 14761  0A28  3193  2313  3189   	fcall	_sendMessage
 14762  0A2B                     l6081:
 14763  0A2B                     l6083:
 14764                           
 14765                           ;main.c: 995: for(i = 0; i < n; i++){
 14766  0A2B  0020               	movlb	0	; select bank0
 14767  0A2C  01BF               	clrf	cmd_trc@i
 14768  0A2D  01C0               	clrf	cmd_trc@i+1
 14769  0A2E  2A93               	goto	l6109
 14770  0A2F                     l6085:
 14771                           
 14772                           ;main.c: 996: for(j = 0; j < 5; j++){
 14773  0A2F  0020               	movlb	0	; select bank0
 14774  0A30  01C6               	clrf	cmd_trc@j
 14775  0A31                     l6091:
 14776                           
 14777                           ;main.c: 997: address = (iread * 0x5) + 0x7014 + j;
 14778  0A31  0846               	movf	cmd_trc@j,w
 14779  0A32  00B2               	movwf	??_cmd_trc
 14780  0A33  01B3               	clrf	??_cmd_trc+1
 14781  0A34  0866               	movf	_iread,w
 14782  0A35  00B4               	movwf	??_cmd_trc+2
 14783  0A36  01B5               	clrf	??_cmd_trc+3
 14784  0A37  0834               	movf	??_cmd_trc+2,w
 14785  0A38  00A0               	movwf	___wmul@multiplier
 14786  0A39  0835               	movf	??_cmd_trc+3,w
 14787  0A3A  00A1               	movwf	___wmul@multiplier+1
 14788  0A3B  3005               	movlw	5
 14789  0A3C  00A2               	movwf	___wmul@multiplicand
 14790  0A3D  3000               	movlw	0
 14791  0A3E  00A3               	movwf	___wmul@multiplicand+1
 14792  0A3F  3192  22B0  3189   	fcall	___wmul
 14793  0A42  0020               	movlb	0	; select bank0
 14794  0A43  0832               	movf	??_cmd_trc,w
 14795  0A44  0720               	addwf	?___wmul,w
 14796  0A45  00B6               	movwf	??_cmd_trc+4
 14797  0A46  0833               	movf	??_cmd_trc+1,w
 14798  0A47  3D21               	addwfc	?___wmul+1,w
 14799  0A48  00B7               	movwf	??_cmd_trc+5
 14800  0A49  0836               	movf	??_cmd_trc+4,w
 14801  0A4A  3E14               	addlw	20
 14802  0A4B  00C1               	movwf	cmd_trc@address
 14803  0A4C  3070               	movlw	112
 14804  0A4D  3D37               	addwfc	??_cmd_trc+5,w
 14805  0A4E  00C2               	movwf	cmd_trc@address+1
 14806  0A4F                     l6093:
 14807                           
 14808                           ;main.c: 998: buffData[j] = DATAEE_ReadByte(address);
 14809  0A4F  0842               	movf	cmd_trc@address+1,w
 14810  0A50  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 14811  0A51  0841               	movf	cmd_trc@address,w
 14812  0A52  00A6               	movwf	DATAEE_ReadByte@bAdd
 14813  0A53  3190  20BA  3189   	fcall	_DATAEE_ReadByte
 14814  0A56  0020               	movlb	0	; select bank0
 14815  0A57  00B2               	movwf	??_cmd_trc
 14816  0A58  0846               	movf	cmd_trc@j,w
 14817  0A59  3E38               	addlw	(low (cmd_trc@buffData| 0))& (0+255)
 14818  0A5A  0086               	movwf	6
 14819  0A5B  0187               	clrf	7
 14820  0A5C  0832               	movf	??_cmd_trc,w
 14821  0A5D  0081               	movwf	1
 14822  0A5E                     l6095:
 14823  0A5E  3001               	movlw	1
 14824  0A5F  00B2               	movwf	??_cmd_trc
 14825  0A60  0832               	movf	??_cmd_trc,w
 14826  0A61  07C6               	addwf	cmd_trc@j,f
 14827  0A62                     l6097:
 14828  0A62  3005               	movlw	5
 14829  0A63  0246               	subwf	cmd_trc@j,w
 14830  0A64  1C03               	skipc
 14831  0A65  2A67               	goto	u6041
 14832  0A66  2A68               	goto	u6040
 14833  0A67                     u6041:
 14834  0A67  2A31               	goto	l6091
 14835  0A68                     u6040:
 14836  0A68                     l6099:
 14837                           
 14838                           ;main.c: 999: };main.c: 1000: sendMessage(5,buffData);
 14839  0A68  3005               	movlw	5
 14840  0A69  00A3               	movwf	sendMessage@num
 14841  0A6A  3000               	movlw	0
 14842  0A6B  00A4               	movwf	sendMessage@num+1
 14843  0A6C  3038               	movlw	(low (cmd_trc@buffData| 0))& (0+255)
 14844  0A6D  00B2               	movwf	??_cmd_trc
 14845  0A6E  0832               	movf	??_cmd_trc,w
 14846  0A6F  00A5               	movwf	sendMessage@buffer
 14847  0A70  3193  2313  3189   	fcall	_sendMessage
 14848  0A73                     l6101:
 14849                           
 14850                           ;main.c: 1001: iread++;
 14851  0A73  3001               	movlw	1
 14852  0A74  0020               	movlb	0	; select bank0
 14853  0A75  00B2               	movwf	??_cmd_trc
 14854  0A76  0832               	movf	??_cmd_trc,w
 14855  0A77  07E6               	addwf	_iread,f
 14856  0A78                     l6103:
 14857                           
 14858                           ;main.c: 1002: if(iread>NREG-1){
 14859  0A78  086B               	movf	_NREG,w
 14860  0A79  3EFF               	addlw	255
 14861  0A7A  00B2               	movwf	??_cmd_trc
 14862  0A7B  30FF               	movlw	255
 14863  0A7C  1803               	skipnc
 14864  0A7D  3000               	movlw	0
 14865  0A7E  00B3               	movwf	??_cmd_trc+1
 14866  0A7F  0833               	movf	??_cmd_trc+1,w
 14867  0A80  3A80               	xorlw	128
 14868  0A81  00B4               	movwf	??_cmd_trc+2
 14869  0A82  3080               	movlw	128
 14870  0A83  0234               	subwf	??_cmd_trc+2,w
 14871  0A84  1D03               	skipz
 14872  0A85  2A88               	goto	u6055
 14873  0A86  0866               	movf	_iread,w
 14874  0A87  0232               	subwf	??_cmd_trc,w
 14875  0A88                     u6055:
 14876  0A88  1803               	skipnc
 14877  0A89  2A8B               	goto	u6051
 14878  0A8A  2A8C               	goto	u6050
 14879  0A8B                     u6051:
 14880  0A8B  2A8E               	goto	l6107
 14881  0A8C                     u6050:
 14882  0A8C                     l6105:
 14883                           
 14884                           ;main.c: 1003: iread=0;
 14885  0A8C  0020               	movlb	0	; select bank0
 14886  0A8D  01E6               	clrf	_iread
 14887  0A8E                     l6107:
 14888  0A8E  3001               	movlw	1
 14889  0A8F  0020               	movlb	0	; select bank0
 14890  0A90  07BF               	addwf	cmd_trc@i,f
 14891  0A91  3000               	movlw	0
 14892  0A92  3DC0               	addwfc	cmd_trc@i+1,f
 14893  0A93                     l6109:
 14894  0A93  0840               	movf	cmd_trc@i+1,w
 14895  0A94  3A80               	xorlw	128
 14896  0A95  00B2               	movwf	??_cmd_trc
 14897  0A96  0845               	movf	cmd_trc@n+1,w
 14898  0A97  3A80               	xorlw	128
 14899  0A98  0232               	subwf	??_cmd_trc,w
 14900  0A99  1D03               	skipz
 14901  0A9A  2A9D               	goto	u6065
 14902  0A9B  0844               	movf	cmd_trc@n,w
 14903  0A9C  023F               	subwf	cmd_trc@i,w
 14904  0A9D                     u6065:
 14905  0A9D  1C03               	skipc
 14906  0A9E  2AA0               	goto	u6061
 14907  0A9F  2AA1               	goto	u6060
 14908  0AA0                     u6061:
 14909  0AA0  2A2F               	goto	l6085
 14910  0AA1                     u6060:
 14911  0AA1                     l6111:
 14912                           
 14913                           ;main.c: 1004: };main.c: 1005: };main.c: 1006: uint8_t buffEOM[1];;main.c: 1007: buffEOM
      +                          [0] = (uint8_t)0xFE;
 14914  0AA1  30FE               	movlw	254
 14915  0AA2  0020               	movlb	0	; select bank0
 14916  0AA3  00B2               	movwf	??_cmd_trc
 14917  0AA4  0832               	movf	??_cmd_trc,w
 14918  0AA5  00C3               	movwf	cmd_trc@buffEOM
 14919  0AA6                     l6113:
 14920                           
 14921                           ;main.c: 1008: sendMessage(1,buffEOM);
 14922  0AA6  3001               	movlw	1
 14923  0AA7  00A3               	movwf	sendMessage@num
 14924  0AA8  3000               	movlw	0
 14925  0AA9  00A4               	movwf	sendMessage@num+1
 14926  0AAA  3043               	movlw	(low (cmd_trc@buffEOM| 0))& (0+255)
 14927  0AAB  00B2               	movwf	??_cmd_trc
 14928  0AAC  0832               	movf	??_cmd_trc,w
 14929  0AAD  00A5               	movwf	sendMessage@buffer
 14930  0AAE  3193  2313  3189   	fcall	_sendMessage
 14931                           
 14932                           ;main.c: 1009: } else{
 14933  0AB1  2AB6               	goto	l1565
 14934  0AB2                     l6115:
 14935                           
 14936                           ;main.c: 1010: sendERRORMessage((uint8_t)0XCB);
 14937  0AB2  30CB               	movlw	203
 14938  0AB3  3191  21F7  3189   	fcall	_sendERRORMessage
 14939  0AB6                     l1565:
 14940  0AB6  0008               	return
 14941  0AB7                     __end_of_cmd_trc:
 14942                           
 14943                           	psect	text24
 14944  13EF                     __ptext24:	
 14945 ;; *************** function _cmd_ir *****************
 14946 ;; Defined at:
 14947 ;;		line 963 in file "main.c"
 14948 ;; Parameters:    Size  Location     Type
 14949 ;;  num             2   15[BANK0 ] int 
 14950 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 14951 ;;		 -> main@buff(20), 
 14952 ;; Auto vars:     Size  Location     Type
 14953 ;;  buff            7   19[BANK0 ] unsigned char [7]
 14954 ;; Return value:  Size  Location     Type
 14955 ;;                  1    wreg      void 
 14956 ;; Registers used:
 14957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14958 ;; Tracked objects:
 14959 ;;		On entry : 0/0
 14960 ;;		On exit  : 0/0
 14961 ;;		Unchanged: 0/0
 14962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14963 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14964 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14965 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14966 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14967 ;;Total ram usage:       11 bytes
 14968 ;; Hardware stack levels used:    1
 14969 ;; Hardware stack levels required when called:    8
 14970 ;; This function calls:
 14971 ;;		_sendMessage
 14972 ;; This function is called by:
 14973 ;;		_main
 14974 ;; This function uses a non-reentrant model
 14975 ;;
 14976                           
 14977                           
 14978                           ;psect for function _cmd_ir
 14979  13EF                     _cmd_ir:
 14980  13EF                     l6063:	
 14981                           ;incstack = 0
 14982                           ; Regs used in _cmd_ir: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14983                           
 14984                           
 14985                           ;main.c: 964: uint8_t buff[7];;main.c: 965: buff[0] = (uint8_t)0xFD;
 14986  13EF  30FD               	movlw	253
 14987  13F0  0020               	movlb	0	; select bank0
 14988  13F1  00B2               	movwf	??_cmd_ir
 14989  13F2  0832               	movf	??_cmd_ir,w
 14990  13F3  00B3               	movwf	cmd_ir@buff
 14991                           
 14992                           ;main.c: 966: buff[1] = (uint8_t)0XCA;
 14993  13F4  30CA               	movlw	202
 14994  13F5  00B2               	movwf	??_cmd_ir
 14995  13F6  0832               	movf	??_cmd_ir,w
 14996  13F7  00B4               	movwf	cmd_ir@buff+1
 14997                           
 14998                           ;main.c: 967: buff[2] = NREG;
 14999  13F8  086B               	movf	_NREG,w
 15000  13F9  00B2               	movwf	??_cmd_ir
 15001  13FA  0832               	movf	??_cmd_ir,w
 15002  13FB  00B5               	movwf	cmd_ir@buff+2
 15003                           
 15004                           ;main.c: 968: buff[3] = nr;
 15005  13FC  0021               	movlb	1	; select bank1
 15006  13FD  0854               	movf	_nr^(0+128),w
 15007  13FE  0020               	movlb	0	; select bank0
 15008  13FF  00B2               	movwf	??_cmd_ir
 15009  1400  0832               	movf	??_cmd_ir,w
 15010  1401  00B6               	movwf	cmd_ir@buff+3
 15011                           
 15012                           ;main.c: 969: buff[4] = iread;
 15013  1402  0866               	movf	_iread,w
 15014  1403  00B2               	movwf	??_cmd_ir
 15015  1404  0832               	movf	??_cmd_ir,w
 15016  1405  00B7               	movwf	cmd_ir@buff+4
 15017                           
 15018                           ;main.c: 970: buff[5] = iwrite;
 15019  1406  087D               	movf	_iwrite,w
 15020  1407  00B2               	movwf	??_cmd_ir
 15021  1408  0832               	movf	??_cmd_ir,w
 15022  1409  00B8               	movwf	cmd_ir@buff+5
 15023                           
 15024                           ;main.c: 971: buff[6] = (uint8_t)0xFE;
 15025  140A  30FE               	movlw	254
 15026  140B  00B2               	movwf	??_cmd_ir
 15027  140C  0832               	movf	??_cmd_ir,w
 15028  140D  00B9               	movwf	cmd_ir@buff+6
 15029  140E                     l6065:
 15030                           
 15031                           ;main.c: 973: sendMessage(7,buff);
 15032  140E  3007               	movlw	7
 15033  140F  00A3               	movwf	sendMessage@num
 15034  1410  3000               	movlw	0
 15035  1411  00A4               	movwf	sendMessage@num+1
 15036  1412  3033               	movlw	(low (cmd_ir@buff| 0))& (0+255)
 15037  1413  00B2               	movwf	??_cmd_ir
 15038  1414  0832               	movf	??_cmd_ir,w
 15039  1415  00A5               	movwf	sendMessage@buffer
 15040  1416  3193  2313  3193   	fcall	_sendMessage
 15041  1419                     l1560:
 15042  1419  0008               	return
 15043  141A                     __end_of_cmd_ir:
 15044                           
 15045                           	psect	text25
 15046  1514                     __ptext25:	
 15047 ;; *************** function _cmd_aa *****************
 15048 ;; Defined at:
 15049 ;;		line 951 in file "main.c"
 15050 ;; Parameters:    Size  Location     Type
 15051 ;;  num             2   15[BANK0 ] int 
 15052 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15053 ;;		 -> main@buff(20), 
 15054 ;; Auto vars:     Size  Location     Type
 15055 ;;		None
 15056 ;; Return value:  Size  Location     Type
 15057 ;;                  1    wreg      void 
 15058 ;; Registers used:
 15059 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15060 ;; Tracked objects:
 15061 ;;		On entry : 0/0
 15062 ;;		On exit  : 0/0
 15063 ;;		Unchanged: 0/0
 15064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15065 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15067 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15068 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15069 ;;Total ram usage:        4 bytes
 15070 ;; Hardware stack levels used:    1
 15071 ;; Hardware stack levels required when called:    9
 15072 ;; This function calls:
 15073 ;;		_sendERRORMessage
 15074 ;;		_sendOKMessage
 15075 ;; This function is called by:
 15076 ;;		_main
 15077 ;; This function uses a non-reentrant model
 15078 ;;
 15079                           
 15080                           
 15081                           ;psect for function _cmd_aa
 15082  1514                     _cmd_aa:
 15083  1514                     l6045:	
 15084                           ;incstack = 0
 15085                           ; Regs used in _cmd_aa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15086                           
 15087                           
 15088                           ;main.c: 952: if(buffer[2] == 0 && num == 4){
 15089  1514  0020               	movlb	0	; select bank0
 15090  1515  0831               	movf	cmd_aa@buffer,w
 15091  1516  3E02               	addlw	2
 15092  1517  0086               	movwf	6
 15093  1518  0187               	clrf	7
 15094  1519  0801               	movf	1,w
 15095  151A  1D03               	btfss	3,2
 15096  151B  2D1D               	goto	u5981
 15097  151C  2D1E               	goto	u5980
 15098  151D                     u5981:
 15099  151D  2D2E               	goto	l6053
 15100  151E                     u5980:
 15101  151E                     l6047:
 15102  151E  3004               	movlw	4
 15103  151F  062F               	xorwf	cmd_aa@num,w
 15104  1520  0430               	iorwf	cmd_aa@num+1,w
 15105  1521  1D03               	btfss	3,2
 15106  1522  2D24               	goto	u5991
 15107  1523  2D25               	goto	u5990
 15108  1524                     u5991:
 15109  1524  2D2E               	goto	l6053
 15110  1525                     u5990:
 15111  1525                     l6049:
 15112                           
 15113                           ;main.c: 953: ALAF = 'a';
 15114  1525  3061               	movlw	97
 15115  1526  00B2               	movwf	??_cmd_aa
 15116  1527  0832               	movf	??_cmd_aa,w
 15117  1528  00EA               	movwf	_ALAF
 15118  1529                     l6051:
 15119                           
 15120                           ;main.c: 954: sendOKMessage((uint8_t)0XC9);
 15121  1529  30C9               	movlw	201
 15122  152A  3191  2188  3195   	fcall	_sendOKMessage
 15123                           
 15124                           ;main.c: 955: } else if(buffer[2] == 1 && num == 4){
 15125  152D  2D4B               	goto	l1557
 15126  152E                     l6053:
 15127  152E  0831               	movf	cmd_aa@buffer,w
 15128  152F  3E02               	addlw	2
 15129  1530  0086               	movwf	6
 15130  1531  0187               	clrf	7
 15131  1532  0301               	decf	1,w
 15132  1533  1D03               	btfss	3,2
 15133  1534  2D36               	goto	u6001
 15134  1535  2D37               	goto	u6000
 15135  1536                     u6001:
 15136  1536  2D47               	goto	l6061
 15137  1537                     u6000:
 15138  1537                     l6055:
 15139  1537  3004               	movlw	4
 15140  1538  062F               	xorwf	cmd_aa@num,w
 15141  1539  0430               	iorwf	cmd_aa@num+1,w
 15142  153A  1D03               	btfss	3,2
 15143  153B  2D3D               	goto	u6011
 15144  153C  2D3E               	goto	u6010
 15145  153D                     u6011:
 15146  153D  2D47               	goto	l6061
 15147  153E                     u6010:
 15148  153E                     l6057:
 15149                           
 15150                           ;main.c: 956: ALAF = 'A';
 15151  153E  3041               	movlw	65
 15152  153F  00B2               	movwf	??_cmd_aa
 15153  1540  0832               	movf	??_cmd_aa,w
 15154  1541  00EA               	movwf	_ALAF
 15155  1542                     l6059:
 15156                           
 15157                           ;main.c: 957: sendOKMessage((uint8_t)0XC9);
 15158  1542  30C9               	movlw	201
 15159  1543  3191  2188  3195   	fcall	_sendOKMessage
 15160                           
 15161                           ;main.c: 958: } else {
 15162  1546  2D4B               	goto	l1557
 15163  1547                     l6061:
 15164                           
 15165                           ;main.c: 959: sendERRORMessage((uint8_t)0XC9);
 15166  1547  30C9               	movlw	201
 15167  1548  3191  21F7  3195   	fcall	_sendERRORMessage
 15168  154B                     l1557:
 15169  154B  0008               	return
 15170  154C                     __end_of_cmd_aa:
 15171                           
 15172                           	psect	text26
 15173  14AA                     __ptext26:	
 15174 ;; *************** function _cmd_dtl *****************
 15175 ;; Defined at:
 15176 ;;		line 939 in file "main.c"
 15177 ;; Parameters:    Size  Location     Type
 15178 ;;  num             2   15[BANK0 ] int 
 15179 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15180 ;;		 -> main@buff(20), 
 15181 ;; Auto vars:     Size  Location     Type
 15182 ;;  lumAux          1   19[BANK0 ] unsigned char 
 15183 ;;  tempAux         1   18[BANK0 ] unsigned char 
 15184 ;; Return value:  Size  Location     Type
 15185 ;;                  1    wreg      void 
 15186 ;; Registers used:
 15187 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15188 ;; Tracked objects:
 15189 ;;		On entry : 0/0
 15190 ;;		On exit  : 0/0
 15191 ;;		Unchanged: 0/0
 15192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15193 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15194 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15196 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15197 ;;Total ram usage:        5 bytes
 15198 ;; Hardware stack levels used:    1
 15199 ;; Hardware stack levels required when called:    9
 15200 ;; This function calls:
 15201 ;;		_sendERRORMessage
 15202 ;;		_sendOKMessage
 15203 ;; This function is called by:
 15204 ;;		_main
 15205 ;; This function uses a non-reentrant model
 15206 ;;
 15207                           
 15208                           
 15209                           ;psect for function _cmd_dtl
 15210  14AA                     _cmd_dtl:
 15211  14AA                     l6031:	
 15212                           ;incstack = 0
 15213                           ; Regs used in _cmd_dtl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15214                           
 15215                           
 15216                           ;main.c: 940: uint8_t tempAux = buffer[2];
 15217  14AA  0020               	movlb	0	; select bank0
 15218  14AB  0831               	movf	cmd_dtl@buffer,w
 15219  14AC  0086               	movwf	6
 15220  14AD  0187               	clrf	7
 15221  14AE  3F42               	moviw [2]fsr1
 15222  14AF  00B2               	movwf	cmd_dtl@tempAux
 15223                           
 15224                           ;main.c: 941: uint8_t lumAux = buffer[3];
 15225  14B0  0831               	movf	cmd_dtl@buffer,w
 15226  14B1  0086               	movwf	6
 15227  14B2  0187               	clrf	7
 15228  14B3  3F43               	moviw [3]fsr1
 15229  14B4  00B3               	movwf	cmd_dtl@lumAux
 15230  14B5                     l6033:
 15231                           
 15232                           ;main.c: 942: if((tempAux >= 0 && tempAux < 50) && (lumAux >= 0 && lumAux < 8) && num ==
      +                           5){
 15233  14B5  3032               	movlw	50
 15234  14B6  0232               	subwf	cmd_dtl@tempAux,w
 15235  14B7  1803               	skipnc
 15236  14B8  2CBA               	goto	u5951
 15237  14B9  2CBB               	goto	u5950
 15238  14BA                     u5951:
 15239  14BA  2CDA               	goto	l6043
 15240  14BB                     u5950:
 15241  14BB                     l6035:
 15242  14BB  3008               	movlw	8
 15243  14BC  0233               	subwf	cmd_dtl@lumAux,w
 15244  14BD  1803               	skipnc
 15245  14BE  2CC0               	goto	u5961
 15246  14BF  2CC1               	goto	u5960
 15247  14C0                     u5961:
 15248  14C0  2CDA               	goto	l6043
 15249  14C1                     u5960:
 15250  14C1                     l6037:
 15251  14C1  3005               	movlw	5
 15252  14C2  062F               	xorwf	cmd_dtl@num,w
 15253  14C3  0430               	iorwf	cmd_dtl@num+1,w
 15254  14C4  1D03               	btfss	3,2
 15255  14C5  2CC7               	goto	u5971
 15256  14C6  2CC8               	goto	u5970
 15257  14C7                     u5971:
 15258  14C7  2CDA               	goto	l6043
 15259  14C8                     u5970:
 15260  14C8                     l6039:
 15261                           
 15262                           ;main.c: 943: tempAlarm.alarmTemp = buffer[2];
 15263  14C8  0831               	movf	cmd_dtl@buffer,w
 15264  14C9  0086               	movwf	6
 15265  14CA  0187               	clrf	7
 15266  14CB  3F42               	moviw [2]fsr1
 15267  14CC  0021               	movlb	1	; select bank1
 15268  14CD  00CA               	movwf	_tempAlarm^(0+128)
 15269                           
 15270                           ;main.c: 944: lumAlarm.alarmLum = buffer[3];
 15271  14CE  0020               	movlb	0	; select bank0
 15272  14CF  0831               	movf	cmd_dtl@buffer,w
 15273  14D0  0086               	movwf	6
 15274  14D1  0187               	clrf	7
 15275  14D2  3F43               	moviw [3]fsr1
 15276  14D3  0021               	movlb	1	; select bank1
 15277  14D4  00C7               	movwf	_lumAlarm^(0+128)
 15278  14D5                     l6041:
 15279                           
 15280                           ;main.c: 945: sendOKMessage((uint8_t)0XC8);
 15281  14D5  30C8               	movlw	200
 15282  14D6  3191  2188  3194   	fcall	_sendOKMessage
 15283                           
 15284                           ;main.c: 946: } else {
 15285  14D9  2CDE               	goto	l1550
 15286  14DA                     l6043:
 15287                           
 15288                           ;main.c: 947: sendERRORMessage((uint8_t)0XC8);
 15289  14DA  30C8               	movlw	200
 15290  14DB  3191  21F7  3194   	fcall	_sendERRORMessage
 15291  14DE                     l1550:
 15292  14DE  0008               	return
 15293  14DF                     __end_of_cmd_dtl:
 15294                           
 15295                           	psect	text27
 15296  168E                     __ptext27:	
 15297 ;; *************** function _cmd_dac *****************
 15298 ;; Defined at:
 15299 ;;		line 925 in file "main.c"
 15300 ;; Parameters:    Size  Location     Type
 15301 ;;  num             2   15[BANK0 ] int 
 15302 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15303 ;;		 -> main@buff(20), 
 15304 ;; Auto vars:     Size  Location     Type
 15305 ;;  s               1   21[BANK0 ] unsigned char 
 15306 ;;  m               1   20[BANK0 ] unsigned char 
 15307 ;;  h               1   19[BANK0 ] unsigned char 
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  1    wreg      void 
 15310 ;; Registers used:
 15311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15317 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15318 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15320 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15321 ;;Total ram usage:        7 bytes
 15322 ;; Hardware stack levels used:    1
 15323 ;; Hardware stack levels required when called:    9
 15324 ;; This function calls:
 15325 ;;		_sendERRORMessage
 15326 ;;		_sendOKMessage
 15327 ;; This function is called by:
 15328 ;;		_main
 15329 ;; This function uses a non-reentrant model
 15330 ;;
 15331                           
 15332                           
 15333                           ;psect for function _cmd_dac
 15334  168E                     _cmd_dac:
 15335  168E                     l6015:	
 15336                           ;incstack = 0
 15337                           ; Regs used in _cmd_dac: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15338                           
 15339                           
 15340                           ;main.c: 926: uint8_t h = buffer[2];
 15341  168E  0020               	movlb	0	; select bank0
 15342  168F  0831               	movf	cmd_dac@buffer,w
 15343  1690  0086               	movwf	6
 15344  1691  0187               	clrf	7
 15345  1692  3F42               	moviw [2]fsr1
 15346  1693  00B3               	movwf	cmd_dac@h
 15347                           
 15348                           ;main.c: 927: uint8_t m = buffer[3];
 15349  1694  0831               	movf	cmd_dac@buffer,w
 15350  1695  0086               	movwf	6
 15351  1696  0187               	clrf	7
 15352  1697  3F43               	moviw [3]fsr1
 15353  1698  00B4               	movwf	cmd_dac@m
 15354                           
 15355                           ;main.c: 928: uint8_t s = buffer[4];
 15356  1699  0831               	movf	cmd_dac@buffer,w
 15357  169A  0086               	movwf	6
 15358  169B  0187               	clrf	7
 15359  169C  3F44               	moviw [4]fsr1
 15360  169D  00B5               	movwf	cmd_dac@s
 15361  169E                     l6017:
 15362                           
 15363                           ;main.c: 929: if((h >= 0 && h < 24) && (m >= 0 && m < 60) && (s >= 0 && s < 60) && num =
      +                          = 6){
 15364  169E  3018               	movlw	24
 15365  169F  0233               	subwf	cmd_dac@h,w
 15366  16A0  1803               	skipnc
 15367  16A1  2EA3               	goto	u5911
 15368  16A2  2EA4               	goto	u5910
 15369  16A3                     u5911:
 15370  16A3  2ECD               	goto	l6029
 15371  16A4                     u5910:
 15372  16A4                     l6019:
 15373  16A4  303C               	movlw	60
 15374  16A5  0234               	subwf	cmd_dac@m,w
 15375  16A6  1803               	skipnc
 15376  16A7  2EA9               	goto	u5921
 15377  16A8  2EAA               	goto	u5920
 15378  16A9                     u5921:
 15379  16A9  2ECD               	goto	l6029
 15380  16AA                     u5920:
 15381  16AA                     l6021:
 15382  16AA  303C               	movlw	60
 15383  16AB  0235               	subwf	cmd_dac@s,w
 15384  16AC  1803               	skipnc
 15385  16AD  2EAF               	goto	u5931
 15386  16AE  2EB0               	goto	u5930
 15387  16AF                     u5931:
 15388  16AF  2ECD               	goto	l6029
 15389  16B0                     u5930:
 15390  16B0                     l6023:
 15391  16B0  3006               	movlw	6
 15392  16B1  062F               	xorwf	cmd_dac@num,w
 15393  16B2  0430               	iorwf	cmd_dac@num+1,w
 15394  16B3  1D03               	btfss	3,2
 15395  16B4  2EB6               	goto	u5941
 15396  16B5  2EB7               	goto	u5940
 15397  16B6                     u5941:
 15398  16B6  2ECD               	goto	l6029
 15399  16B7                     u5940:
 15400  16B7                     l6025:
 15401                           
 15402                           ;main.c: 930: clkAlarm.alarmVal.h = h;
 15403  16B7  0833               	movf	cmd_dac@h,w
 15404  16B8  00B2               	movwf	??_cmd_dac
 15405  16B9  0832               	movf	??_cmd_dac,w
 15406  16BA  0021               	movlb	1	; select bank1
 15407  16BB  00C0               	movwf	_clkAlarm^(0+128)
 15408                           
 15409                           ;main.c: 931: clkAlarm.alarmVal.m = m;
 15410  16BC  0020               	movlb	0	; select bank0
 15411  16BD  0834               	movf	cmd_dac@m,w
 15412  16BE  00B2               	movwf	??_cmd_dac
 15413  16BF  0832               	movf	??_cmd_dac,w
 15414  16C0  0021               	movlb	1	; select bank1
 15415  16C1  00C1               	movwf	(_clkAlarm^(0+128)+1)
 15416                           
 15417                           ;main.c: 932: clkAlarm.alarmVal.s = s;
 15418  16C2  0020               	movlb	0	; select bank0
 15419  16C3  0835               	movf	cmd_dac@s,w
 15420  16C4  00B2               	movwf	??_cmd_dac
 15421  16C5  0832               	movf	??_cmd_dac,w
 15422  16C6  0021               	movlb	1	; select bank1
 15423  16C7  00C2               	movwf	(_clkAlarm^(0+128)+2)
 15424  16C8                     l6027:
 15425                           
 15426                           ;main.c: 933: sendOKMessage((uint8_t)0XC7);
 15427  16C8  30C7               	movlw	199
 15428  16C9  3191  2188  3196   	fcall	_sendOKMessage
 15429                           
 15430                           ;main.c: 934: } else {
 15431  16CC  2ED1               	goto	l1545
 15432  16CD                     l6029:
 15433                           
 15434                           ;main.c: 935: sendERRORMessage((uint8_t)0XC7);
 15435  16CD  30C7               	movlw	199
 15436  16CE  3191  21F7  3196   	fcall	_sendERRORMessage
 15437  16D1                     l1545:
 15438  16D1  0008               	return
 15439  16D2                     __end_of_cmd_dac:
 15440                           
 15441                           	psect	text28
 15442  1609                     __ptext28:	
 15443 ;; *************** function _cmd_ra *****************
 15444 ;; Defined at:
 15445 ;;		line 910 in file "main.c"
 15446 ;; Parameters:    Size  Location     Type
 15447 ;;  num             2   15[BANK0 ] int 
 15448 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15449 ;;		 -> main@buff(20), 
 15450 ;; Auto vars:     Size  Location     Type
 15451 ;;  buff            9   19[BANK0 ] unsigned char [9]
 15452 ;; Return value:  Size  Location     Type
 15453 ;;                  1    wreg      void 
 15454 ;; Registers used:
 15455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15456 ;; Tracked objects:
 15457 ;;		On entry : 0/0
 15458 ;;		On exit  : 0/0
 15459 ;;		Unchanged: 0/0
 15460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15461 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15462 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15463 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15464 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15465 ;;Total ram usage:       13 bytes
 15466 ;; Hardware stack levels used:    1
 15467 ;; Hardware stack levels required when called:    8
 15468 ;; This function calls:
 15469 ;;		_sendMessage
 15470 ;; This function is called by:
 15471 ;;		_main
 15472 ;; This function uses a non-reentrant model
 15473 ;;
 15474                           
 15475                           
 15476                           ;psect for function _cmd_ra
 15477  1609                     _cmd_ra:
 15478  1609                     l6007:	
 15479                           ;incstack = 0
 15480                           ; Regs used in _cmd_ra: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15481                           
 15482                           
 15483                           ;main.c: 911: uint8_t buff[9];;main.c: 912: buff[0] = (uint8_t)0xFD;
 15484  1609  30FD               	movlw	253
 15485  160A  0020               	movlb	0	; select bank0
 15486  160B  00B2               	movwf	??_cmd_ra
 15487  160C  0832               	movf	??_cmd_ra,w
 15488  160D  00B3               	movwf	cmd_ra@buff
 15489                           
 15490                           ;main.c: 913: buff[1] = (uint8_t)0XC6;
 15491  160E  30C6               	movlw	198
 15492  160F  00B2               	movwf	??_cmd_ra
 15493  1610  0832               	movf	??_cmd_ra,w
 15494  1611  00B4               	movwf	cmd_ra@buff+1
 15495                           
 15496                           ;main.c: 914: buff[2] = clkAlarm.alarmVal.h;
 15497  1612  0021               	movlb	1	; select bank1
 15498  1613  0840               	movf	_clkAlarm^(0+128),w
 15499  1614  0020               	movlb	0	; select bank0
 15500  1615  00B2               	movwf	??_cmd_ra
 15501  1616  0832               	movf	??_cmd_ra,w
 15502  1617  00B5               	movwf	cmd_ra@buff+2
 15503                           
 15504                           ;main.c: 915: buff[3] = clkAlarm.alarmVal.m;
 15505  1618  0021               	movlb	1	; select bank1
 15506  1619  0841               	movf	(_clkAlarm^(0+128)+1),w
 15507  161A  0020               	movlb	0	; select bank0
 15508  161B  00B2               	movwf	??_cmd_ra
 15509  161C  0832               	movf	??_cmd_ra,w
 15510  161D  00B6               	movwf	cmd_ra@buff+3
 15511                           
 15512                           ;main.c: 916: buff[4] = clkAlarm.alarmVal.s;
 15513  161E  0021               	movlb	1	; select bank1
 15514  161F  0842               	movf	(_clkAlarm^(0+128)+2),w
 15515  1620  0020               	movlb	0	; select bank0
 15516  1621  00B2               	movwf	??_cmd_ra
 15517  1622  0832               	movf	??_cmd_ra,w
 15518  1623  00B7               	movwf	cmd_ra@buff+4
 15519                           
 15520                           ;main.c: 917: buff[5] = tempAlarm.alarmTemp;
 15521  1624  0021               	movlb	1	; select bank1
 15522  1625  084A               	movf	_tempAlarm^(0+128),w
 15523  1626  0020               	movlb	0	; select bank0
 15524  1627  00B2               	movwf	??_cmd_ra
 15525  1628  0832               	movf	??_cmd_ra,w
 15526  1629  00B8               	movwf	cmd_ra@buff+5
 15527                           
 15528                           ;main.c: 918: buff[6] = lumAlarm.alarmLum;
 15529  162A  0021               	movlb	1	; select bank1
 15530  162B  0847               	movf	_lumAlarm^(0+128),w
 15531  162C  0020               	movlb	0	; select bank0
 15532  162D  00B2               	movwf	??_cmd_ra
 15533  162E  0832               	movf	??_cmd_ra,w
 15534  162F  00B9               	movwf	cmd_ra@buff+6
 15535  1630                     l6009:
 15536                           
 15537                           ;main.c: 919: buff[7] = ALAF == 'A' ? 1 : 0;
 15538  1630  3041               	movlw	65
 15539  1631  066A               	xorwf	_ALAF,w
 15540  1632  1903               	btfsc	3,2
 15541  1633  2E35               	goto	u5891
 15542  1634  2E37               	goto	u5890
 15543  1635                     u5891:
 15544  1635  3001               	movlw	1
 15545  1636  2E38               	goto	u5900
 15546  1637                     u5890:
 15547  1637  3000               	movlw	0
 15548  1638                     u5900:
 15549  1638  00B2               	movwf	??_cmd_ra
 15550  1639  0832               	movf	??_cmd_ra,w
 15551  163A  00BA               	movwf	cmd_ra@buff+7
 15552  163B                     l6011:
 15553                           
 15554                           ;main.c: 920: buff[8] = (uint8_t)0xFE;
 15555  163B  30FE               	movlw	254
 15556  163C  00B2               	movwf	??_cmd_ra
 15557  163D  0832               	movf	??_cmd_ra,w
 15558  163E  00BB               	movwf	cmd_ra@buff+8
 15559  163F                     l6013:
 15560                           
 15561                           ;main.c: 922: sendMessage(9,buff);
 15562  163F  3009               	movlw	9
 15563  1640  00A3               	movwf	sendMessage@num
 15564  1641  3000               	movlw	0
 15565  1642  00A4               	movwf	sendMessage@num+1
 15566  1643  3033               	movlw	(low (cmd_ra@buff| 0))& (0+255)
 15567  1644  00B2               	movwf	??_cmd_ra
 15568  1645  0832               	movf	??_cmd_ra,w
 15569  1646  00A5               	movwf	sendMessage@buffer
 15570  1647  3193  2313  3196   	fcall	_sendMessage
 15571  164A                     l1540:
 15572  164A  0008               	return
 15573  164B                     __end_of_cmd_ra:
 15574                           
 15575                           	psect	text29
 15576  11A3                     __ptext29:	
 15577 ;; *************** function _cmd_mta *****************
 15578 ;; Defined at:
 15579 ;;		line 901 in file "main.c"
 15580 ;; Parameters:    Size  Location     Type
 15581 ;;  num             2   15[BANK0 ] int 
 15582 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15583 ;;		 -> main@buff(20), 
 15584 ;; Auto vars:     Size  Location     Type
 15585 ;;		None
 15586 ;; Return value:  Size  Location     Type
 15587 ;;                  1    wreg      void 
 15588 ;; Registers used:
 15589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15590 ;; Tracked objects:
 15591 ;;		On entry : 0/0
 15592 ;;		On exit  : 0/0
 15593 ;;		Unchanged: 0/0
 15594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15595 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15598 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15599 ;;Total ram usage:        3 bytes
 15600 ;; Hardware stack levels used:    1
 15601 ;; Hardware stack levels required when called:    9
 15602 ;; This function calls:
 15603 ;;		_sendERRORMessage
 15604 ;;		_sendOKMessage
 15605 ;; This function is called by:
 15606 ;;		_main
 15607 ;; This function uses a non-reentrant model
 15608 ;;
 15609                           
 15610                           
 15611                           ;psect for function _cmd_mta
 15612  11A3                     _cmd_mta:
 15613  11A3                     l5999:	
 15614                           ;incstack = 0
 15615                           ; Regs used in _cmd_mta: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15616                           
 15617                           
 15618                           ;main.c: 902: if(buffer[2] >= 0x00 && buffer[2] < 0x3c){
 15619  11A3  0020               	movlb	0	; select bank0
 15620  11A4  0831               	movf	cmd_mta@buffer,w
 15621  11A5  3E02               	addlw	2
 15622  11A6  0086               	movwf	6
 15623  11A7  0187               	clrf	7
 15624  11A8  303C               	movlw	60
 15625  11A9  0201               	subwf	1,w
 15626  11AA  1803               	skipnc
 15627  11AB  29AD               	goto	u5881
 15628  11AC  29AE               	goto	u5880
 15629  11AD                     u5881:
 15630  11AD  29B9               	goto	l6005
 15631  11AE                     u5880:
 15632  11AE                     l6001:
 15633                           
 15634                           ;main.c: 903: TALA = buffer[2];
 15635  11AE  0831               	movf	cmd_mta@buffer,w
 15636  11AF  0086               	movwf	6
 15637  11B0  0187               	clrf	7
 15638  11B1  3F42               	moviw [2]fsr1
 15639  11B2  0021               	movlb	1	; select bank1
 15640  11B3  00ED               	movwf	_TALA^(0+128)
 15641  11B4                     l6003:
 15642                           
 15643                           ;main.c: 904: sendOKMessage((uint8_t)0XC5);
 15644  11B4  30C5               	movlw	197
 15645  11B5  3191  2188  3191   	fcall	_sendOKMessage
 15646                           
 15647                           ;main.c: 905: } else {
 15648  11B8  29BD               	goto	l1537
 15649  11B9                     l6005:
 15650                           
 15651                           ;main.c: 906: sendERRORMessage((uint8_t)0XC5);
 15652  11B9  30C5               	movlw	197
 15653  11BA  3191  21F7  3191   	fcall	_sendERRORMessage
 15654  11BD                     l1537:
 15655  11BD  0008               	return
 15656  11BE                     __end_of_cmd_mta:
 15657                           
 15658                           	psect	text30
 15659  0891                     __ptext30:	
 15660 ;; *************** function _cmd_mmp *****************
 15661 ;; Defined at:
 15662 ;;		line 881 in file "main.c"
 15663 ;; Parameters:    Size  Location     Type
 15664 ;;  num             2   15[BANK0 ] int 
 15665 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15666 ;;		 -> main@buff(20), 
 15667 ;; Auto vars:     Size  Location     Type
 15668 ;;  timerValue      2   28[BANK0 ] unsigned int 
 15669 ;; Return value:  Size  Location     Type
 15670 ;;                  1    wreg      void 
 15671 ;; Registers used:
 15672 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15673 ;; Tracked objects:
 15674 ;;		On entry : 0/0
 15675 ;;		On exit  : 0/0
 15676 ;;		Unchanged: 0/0
 15677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15678 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15679 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15680 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15681 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15682 ;;Total ram usage:       15 bytes
 15683 ;; Hardware stack levels used:    1
 15684 ;; Hardware stack levels required when called:    9
 15685 ;; This function calls:
 15686 ;;		_TMR5_StartTimer
 15687 ;;		_TMR5_StopTimer
 15688 ;;		___lmul
 15689 ;;		_sendERRORMessage
 15690 ;;		_sendOKMessage
 15691 ;;		_setTimer5ReloadVal
 15692 ;; This function is called by:
 15693 ;;		_main
 15694 ;; This function uses a non-reentrant model
 15695 ;;
 15696                           
 15697                           
 15698                           ;psect for function _cmd_mmp
 15699  0891                     _cmd_mmp:
 15700  0891                     l5981:	
 15701                           ;incstack = 0
 15702                           ; Regs used in _cmd_mmp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15703                           
 15704                           
 15705                           ;main.c: 883: if(buffer[2] == 0x0){
 15706  0891  0020               	movlb	0	; select bank0
 15707  0892  0831               	movf	cmd_mmp@buffer,w
 15708  0893  3E02               	addlw	2
 15709  0894  0086               	movwf	6
 15710  0895  0187               	clrf	7
 15711  0896  0801               	movf	1,w
 15712  0897  1D03               	btfss	3,2
 15713  0898  289A               	goto	u5841
 15714  0899  289B               	goto	u5840
 15715  089A                     u5841:
 15716  089A  289F               	goto	l5985
 15717  089B                     u5840:
 15718  089B                     l5983:
 15719                           
 15720                           ;main.c: 884: TMR5_StopTimer();
 15721  089B  319F  27EB  3188   	fcall	_TMR5_StopTimer
 15722                           
 15723                           ;main.c: 885: } else if(buffer[2] >= 0x01 && buffer[2] <= 0x10){
 15724  089E  28F8               	goto	l1529
 15725  089F                     l5985:
 15726  089F  0831               	movf	cmd_mmp@buffer,w
 15727  08A0  3E02               	addlw	2
 15728  08A1  0086               	movwf	6
 15729  08A2  0187               	clrf	7
 15730  08A3  0801               	movf	1,w
 15731  08A4  1903               	btfsc	3,2
 15732  08A5  28A7               	goto	u5851
 15733  08A6  28A8               	goto	u5850
 15734  08A7                     u5851:
 15735  08A7  28F4               	goto	l5997
 15736  08A8                     u5850:
 15737  08A8                     l5987:
 15738  08A8  0831               	movf	cmd_mmp@buffer,w
 15739  08A9  3E02               	addlw	2
 15740  08AA  0086               	movwf	6
 15741  08AB  0187               	clrf	7
 15742  08AC  3011               	movlw	17
 15743  08AD  0201               	subwf	1,w
 15744  08AE  1803               	skipnc
 15745  08AF  28B1               	goto	u5861
 15746  08B0  28B2               	goto	u5860
 15747  08B1                     u5861:
 15748  08B1  28F4               	goto	l5997
 15749  08B2                     u5860:
 15750  08B2                     l5989:
 15751                           
 15752                           ;main.c: 886: PMON = buffer[2];
 15753  08B2  0831               	movf	cmd_mmp@buffer,w
 15754  08B3  0086               	movwf	6
 15755  08B4  0187               	clrf	7
 15756  08B5  3F42               	moviw [2]fsr1
 15757  08B6  0021               	movlb	1	; select bank1
 15758  08B7  00EE               	movwf	_PMON^(0+128)
 15759  08B8                     l5991:
 15760                           
 15761                           ;main.c: 892: uint16_t timerValue = (uint32_t)65536 - (uint32_t)((uint32_t)((uint32_t)PM
      +                          ON*(uint32_t)31000)/8);
 15762  08B8  086E               	movf	_PMON^(0+128),w
 15763  08B9  0020               	movlb	0	; select bank0
 15764  08BA  00B2               	movwf	??_cmd_mmp
 15765  08BB  01B3               	clrf	??_cmd_mmp+1
 15766  08BC  01B4               	clrf	??_cmd_mmp+2
 15767  08BD  01B5               	clrf	??_cmd_mmp+3
 15768  08BE  0835               	movf	??_cmd_mmp+3,w
 15769  08BF  00A3               	movwf	___lmul@multiplier+3
 15770  08C0  0834               	movf	??_cmd_mmp+2,w
 15771  08C1  00A2               	movwf	___lmul@multiplier+2
 15772  08C2  0833               	movf	??_cmd_mmp+1,w
 15773  08C3  00A1               	movwf	___lmul@multiplier+1
 15774  08C4  0832               	movf	??_cmd_mmp,w
 15775  08C5  00A0               	movwf	___lmul@multiplier
 15776  08C6  3000               	movlw	0
 15777  08C7  00A7               	movwf	___lmul@multiplicand+3
 15778  08C8  3000               	movlw	0
 15779  08C9  00A6               	movwf	___lmul@multiplicand+2
 15780  08CA  3079               	movlw	121
 15781  08CB  00A5               	movwf	___lmul@multiplicand+1
 15782  08CC  3018               	movlw	24
 15783  08CD  00A4               	movwf	___lmul@multiplicand
 15784  08CE  3194  2476  3188   	fcall	___lmul
 15785  08D1  0020               	movlb	0	; select bank0
 15786  08D2  0820               	movf	?___lmul,w
 15787  08D3  00B6               	movwf	??_cmd_mmp+4
 15788  08D4  0821               	movf	?___lmul+1,w
 15789  08D5  00B7               	movwf	??_cmd_mmp+5
 15790  08D6  0822               	movf	?___lmul+2,w
 15791  08D7  00B8               	movwf	??_cmd_mmp+6
 15792  08D8  0823               	movf	?___lmul+3,w
 15793  08D9  00B9               	movwf	??_cmd_mmp+7
 15794  08DA  3003               	movlw	3
 15795  08DB                     u5875:
 15796  08DB  36B9               	lsrf	??_cmd_mmp+7,f
 15797  08DC  0CB8               	rrf	??_cmd_mmp+6,f
 15798  08DD  0CB7               	rrf	??_cmd_mmp+5,f
 15799  08DE  0CB6               	rrf	??_cmd_mmp+4,f
 15800  08DF                     u5870:
 15801  08DF  0B89               	decfsz	9,f
 15802  08E0  28DB               	goto	u5875
 15803  08E1  01BA               	clrf	??_cmd_mmp+8
 15804  08E2  01BB               	clrf	??_cmd_mmp+9
 15805  08E3  0836               	movf	??_cmd_mmp+4,w
 15806  08E4  023A               	subwf	??_cmd_mmp+8,w
 15807  08E5  00BC               	movwf	cmd_mmp@timerValue
 15808  08E6  0837               	movf	??_cmd_mmp+5,w
 15809  08E7  3B3B               	subwfb	??_cmd_mmp+9,w
 15810  08E8  00BD               	movwf	cmd_mmp@timerValue+1
 15811  08E9                     l5993:
 15812                           
 15813                           ;main.c: 893: setTimer5ReloadVal(timerValue);
 15814  08E9  083D               	movf	cmd_mmp@timerValue+1,w
 15815  08EA  00A1               	movwf	setTimer5ReloadVal@val+1
 15816  08EB  083C               	movf	cmd_mmp@timerValue,w
 15817  08EC  00A0               	movwf	setTimer5ReloadVal@val
 15818  08ED  3190  2069  3188   	fcall	_setTimer5ReloadVal
 15819  08F0                     l5995:
 15820                           
 15821                           ;main.c: 894: TMR5_StartTimer();
 15822  08F0  319F  27E8  3188   	fcall	_TMR5_StartTimer
 15823                           
 15824                           ;main.c: 895: } else {
 15825  08F3  28F8               	goto	l1529
 15826  08F4                     l5997:
 15827                           
 15828                           ;main.c: 896: sendERRORMessage((uint8_t)0XC4);
 15829  08F4  30C4               	movlw	196
 15830  08F5  3191  21F7  3188   	fcall	_sendERRORMessage
 15831  08F8                     l1529:
 15832                           
 15833                           ;main.c: 897: };main.c: 898: sendOKMessage((uint8_t)0XC4);
 15834  08F8  30C4               	movlw	196
 15835  08F9  3191  2188  3188   	fcall	_sendOKMessage
 15836  08FC                     l1532:
 15837  08FC  0008               	return
 15838  08FD                     __end_of_cmd_mmp:
 15839                           
 15840                           	psect	text31
 15841  13A4                     __ptext31:	
 15842 ;; *************** function _cmd_rp *****************
 15843 ;; Defined at:
 15844 ;;		line 869 in file "main.c"
 15845 ;; Parameters:    Size  Location     Type
 15846 ;;  num             2   15[BANK0 ] int 
 15847 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15848 ;;		 -> main@buff(20), 
 15849 ;; Auto vars:     Size  Location     Type
 15850 ;;  buff            5   19[BANK0 ] unsigned char [5]
 15851 ;; Return value:  Size  Location     Type
 15852 ;;                  1    wreg      void 
 15853 ;; Registers used:
 15854 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15855 ;; Tracked objects:
 15856 ;;		On entry : 0/0
 15857 ;;		On exit  : 0/0
 15858 ;;		Unchanged: 0/0
 15859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15860 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15861 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15862 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15863 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15864 ;;Total ram usage:        9 bytes
 15865 ;; Hardware stack levels used:    1
 15866 ;; Hardware stack levels required when called:    8
 15867 ;; This function calls:
 15868 ;;		_sendMessage
 15869 ;; This function is called by:
 15870 ;;		_main
 15871 ;; This function uses a non-reentrant model
 15872 ;;
 15873                           
 15874                           
 15875                           ;psect for function _cmd_rp
 15876  13A4                     _cmd_rp:
 15877  13A4                     l5977:	
 15878                           ;incstack = 0
 15879                           ; Regs used in _cmd_rp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15880                           
 15881                           
 15882                           ;main.c: 870: uint8_t buff[5];;main.c: 871: buff[0] = (uint8_t)0xFD;
 15883  13A4  30FD               	movlw	253
 15884  13A5  0020               	movlb	0	; select bank0
 15885  13A6  00B2               	movwf	??_cmd_rp
 15886  13A7  0832               	movf	??_cmd_rp,w
 15887  13A8  00B3               	movwf	cmd_rp@buff
 15888                           
 15889                           ;main.c: 872: buff[1] = (uint8_t)0XC3;
 15890  13A9  30C3               	movlw	195
 15891  13AA  00B2               	movwf	??_cmd_rp
 15892  13AB  0832               	movf	??_cmd_rp,w
 15893  13AC  00B4               	movwf	cmd_rp@buff+1
 15894                           
 15895                           ;main.c: 873: buff[2] = PMON;
 15896  13AD  0021               	movlb	1	; select bank1
 15897  13AE  086E               	movf	_PMON^(0+128),w
 15898  13AF  0020               	movlb	0	; select bank0
 15899  13B0  00B2               	movwf	??_cmd_rp
 15900  13B1  0832               	movf	??_cmd_rp,w
 15901  13B2  00B5               	movwf	cmd_rp@buff+2
 15902                           
 15903                           ;main.c: 874: buff[3] = TALA;
 15904  13B3  0021               	movlb	1	; select bank1
 15905  13B4  086D               	movf	_TALA^(0+128),w
 15906  13B5  0020               	movlb	0	; select bank0
 15907  13B6  00B2               	movwf	??_cmd_rp
 15908  13B7  0832               	movf	??_cmd_rp,w
 15909  13B8  00B6               	movwf	cmd_rp@buff+3
 15910                           
 15911                           ;main.c: 875: buff[4] = (uint8_t)0xFE;
 15912  13B9  30FE               	movlw	254
 15913  13BA  00B2               	movwf	??_cmd_rp
 15914  13BB  0832               	movf	??_cmd_rp,w
 15915  13BC  00B7               	movwf	cmd_rp@buff+4
 15916  13BD                     l5979:
 15917                           
 15918                           ;main.c: 877: sendMessage(5,buff);
 15919  13BD  3005               	movlw	5
 15920  13BE  00A3               	movwf	sendMessage@num
 15921  13BF  3000               	movlw	0
 15922  13C0  00A4               	movwf	sendMessage@num+1
 15923  13C1  3033               	movlw	(low (cmd_rp@buff| 0))& (0+255)
 15924  13C2  00B2               	movwf	??_cmd_rp
 15925  13C3  0832               	movf	??_cmd_rp,w
 15926  13C4  00A5               	movwf	sendMessage@buffer
 15927  13C5  3193  2313  3193   	fcall	_sendMessage
 15928  13C8                     l1525:
 15929  13C8  0008               	return
 15930  13C9                     __end_of_cmd_rp:
 15931                           
 15932                           	psect	text32
 15933  12D0                     __ptext32:	
 15934 ;; *************** function _cmd_rtl *****************
 15935 ;; Defined at:
 15936 ;;		line 858 in file "main.c"
 15937 ;; Parameters:    Size  Location     Type
 15938 ;;  num             2   15[BANK0 ] int 
 15939 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15940 ;;		 -> main@buff(20), 
 15941 ;; Auto vars:     Size  Location     Type
 15942 ;;  buff            5   19[BANK0 ] unsigned char [5]
 15943 ;; Return value:  Size  Location     Type
 15944 ;;                  1    wreg      void 
 15945 ;; Registers used:
 15946 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15947 ;; Tracked objects:
 15948 ;;		On entry : 0/0
 15949 ;;		On exit  : 0/0
 15950 ;;		Unchanged: 0/0
 15951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15952 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15953 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15954 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15955 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15956 ;;Total ram usage:        9 bytes
 15957 ;; Hardware stack levels used:    1
 15958 ;; Hardware stack levels required when called:    8
 15959 ;; This function calls:
 15960 ;;		_sendMessage
 15961 ;; This function is called by:
 15962 ;;		_main
 15963 ;; This function uses a non-reentrant model
 15964 ;;
 15965                           
 15966                           
 15967                           ;psect for function _cmd_rtl
 15968  12D0                     _cmd_rtl:
 15969  12D0                     l5973:	
 15970                           ;incstack = 0
 15971                           ; Regs used in _cmd_rtl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15972                           
 15973                           
 15974                           ;main.c: 859: uint8_t buff[5];;main.c: 860: buff[0] = (uint8_t)0xFD;
 15975  12D0  30FD               	movlw	253
 15976  12D1  0020               	movlb	0	; select bank0
 15977  12D2  00B2               	movwf	??_cmd_rtl
 15978  12D3  0832               	movf	??_cmd_rtl,w
 15979  12D4  00B3               	movwf	cmd_rtl@buff
 15980                           
 15981                           ;main.c: 861: buff[1] = (uint8_t)0XC2;
 15982  12D5  30C2               	movlw	194
 15983  12D6  00B2               	movwf	??_cmd_rtl
 15984  12D7  0832               	movf	??_cmd_rtl,w
 15985  12D8  00B4               	movwf	cmd_rtl@buff+1
 15986                           
 15987                           ;main.c: 862: buff[2] = temp;
 15988  12D9  0869               	movf	_temp,w
 15989  12DA  00B2               	movwf	??_cmd_rtl
 15990  12DB  0832               	movf	??_cmd_rtl,w
 15991  12DC  00B5               	movwf	cmd_rtl@buff+2
 15992                           
 15993                           ;main.c: 863: buff[3] = lumLevel;
 15994  12DD  0868               	movf	_lumLevel,w
 15995  12DE  00B2               	movwf	??_cmd_rtl
 15996  12DF  0832               	movf	??_cmd_rtl,w
 15997  12E0  00B6               	movwf	cmd_rtl@buff+3
 15998                           
 15999                           ;main.c: 864: buff[4] = (uint8_t)0xFE;
 16000  12E1  30FE               	movlw	254
 16001  12E2  00B2               	movwf	??_cmd_rtl
 16002  12E3  0832               	movf	??_cmd_rtl,w
 16003  12E4  00B7               	movwf	cmd_rtl@buff+4
 16004  12E5                     l5975:
 16005                           
 16006                           ;main.c: 866: sendMessage(5,buff);
 16007  12E5  3005               	movlw	5
 16008  12E6  00A3               	movwf	sendMessage@num
 16009  12E7  3000               	movlw	0
 16010  12E8  00A4               	movwf	sendMessage@num+1
 16011  12E9  3033               	movlw	(low (cmd_rtl@buff| 0))& (0+255)
 16012  12EA  00B2               	movwf	??_cmd_rtl
 16013  12EB  0832               	movf	??_cmd_rtl,w
 16014  12EC  00A5               	movwf	sendMessage@buffer
 16015  12ED  3193  2313  3192   	fcall	_sendMessage
 16016  12F0                     l1522:
 16017  12F0  0008               	return
 16018  12F1                     __end_of_cmd_rtl:
 16019                           
 16020                           	psect	text33
 16021  1589                     __ptext33:	
 16022 ;; *************** function _cmd_sc *****************
 16023 ;; Defined at:
 16024 ;;		line 843 in file "main.c"
 16025 ;; Parameters:    Size  Location     Type
 16026 ;;  num             2   15[BANK0 ] int 
 16027 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 16028 ;;		 -> main@buff(20), 
 16029 ;; Auto vars:     Size  Location     Type
 16030 ;;  s               1   21[BANK0 ] unsigned char 
 16031 ;;  m               1   20[BANK0 ] unsigned char 
 16032 ;;  h               1   19[BANK0 ] unsigned char 
 16033 ;; Return value:  Size  Location     Type
 16034 ;;                  1    wreg      void 
 16035 ;; Registers used:
 16036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16037 ;; Tracked objects:
 16038 ;;		On entry : 0/0
 16039 ;;		On exit  : 0/0
 16040 ;;		Unchanged: 0/0
 16041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16042 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16043 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16044 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16045 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16046 ;;Total ram usage:        7 bytes
 16047 ;; Hardware stack levels used:    1
 16048 ;; Hardware stack levels required when called:    9
 16049 ;; This function calls:
 16050 ;;		_sendERRORMessage
 16051 ;;		_sendOKMessage
 16052 ;; This function is called by:
 16053 ;;		_main
 16054 ;; This function uses a non-reentrant model
 16055 ;;
 16056                           
 16057                           
 16058                           ;psect for function _cmd_sc
 16059  1589                     _cmd_sc:
 16060  1589                     l5957:	
 16061                           ;incstack = 0
 16062                           ; Regs used in _cmd_sc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16063                           
 16064                           
 16065                           ;main.c: 844: uint8_t h = buffer[2];
 16066  1589  0020               	movlb	0	; select bank0
 16067  158A  0831               	movf	cmd_sc@buffer,w
 16068  158B  0086               	movwf	6
 16069  158C  0187               	clrf	7
 16070  158D  3F42               	moviw [2]fsr1
 16071  158E  00B3               	movwf	cmd_sc@h
 16072                           
 16073                           ;main.c: 845: uint8_t m = buffer[3];
 16074  158F  0831               	movf	cmd_sc@buffer,w
 16075  1590  0086               	movwf	6
 16076  1591  0187               	clrf	7
 16077  1592  3F43               	moviw [3]fsr1
 16078  1593  00B4               	movwf	cmd_sc@m
 16079                           
 16080                           ;main.c: 846: uint8_t s = buffer[4];
 16081  1594  0831               	movf	cmd_sc@buffer,w
 16082  1595  0086               	movwf	6
 16083  1596  0187               	clrf	7
 16084  1597  3F44               	moviw [4]fsr1
 16085  1598  00B5               	movwf	cmd_sc@s
 16086  1599                     l5959:
 16087                           
 16088                           ;main.c: 847: if((h >= 0 && h < 24) && (m >= 0 && m < 60) && (s >= 0 && s < 60) && num =
      +                          = 6){
 16089  1599  3018               	movlw	24
 16090  159A  0233               	subwf	cmd_sc@h,w
 16091  159B  1803               	skipnc
 16092  159C  2D9E               	goto	u5801
 16093  159D  2D9F               	goto	u5800
 16094  159E                     u5801:
 16095  159E  2DC3               	goto	l5971
 16096  159F                     u5800:
 16097  159F                     l5961:
 16098  159F  303C               	movlw	60
 16099  15A0  0234               	subwf	cmd_sc@m,w
 16100  15A1  1803               	skipnc
 16101  15A2  2DA4               	goto	u5811
 16102  15A3  2DA5               	goto	u5810
 16103  15A4                     u5811:
 16104  15A4  2DC3               	goto	l5971
 16105  15A5                     u5810:
 16106  15A5                     l5963:
 16107  15A5  303C               	movlw	60
 16108  15A6  0235               	subwf	cmd_sc@s,w
 16109  15A7  1803               	skipnc
 16110  15A8  2DAA               	goto	u5821
 16111  15A9  2DAB               	goto	u5820
 16112  15AA                     u5821:
 16113  15AA  2DC3               	goto	l5971
 16114  15AB                     u5820:
 16115  15AB                     l5965:
 16116  15AB  3006               	movlw	6
 16117  15AC  062F               	xorwf	cmd_sc@num,w
 16118  15AD  0430               	iorwf	cmd_sc@num+1,w
 16119  15AE  1D03               	btfss	3,2
 16120  15AF  2DB1               	goto	u5831
 16121  15B0  2DB2               	goto	u5830
 16122  15B1                     u5831:
 16123  15B1  2DC3               	goto	l5971
 16124  15B2                     u5830:
 16125  15B2                     l5967:
 16126                           
 16127                           ;main.c: 848: t.h = h;
 16128  15B2  0833               	movf	cmd_sc@h,w
 16129  15B3  00B2               	movwf	??_cmd_sc
 16130  15B4  0832               	movf	??_cmd_sc,w
 16131  15B5  00DF               	movwf	_t
 16132                           
 16133                           ;main.c: 849: t.m = m;
 16134  15B6  0834               	movf	cmd_sc@m,w
 16135  15B7  00B2               	movwf	??_cmd_sc
 16136  15B8  0832               	movf	??_cmd_sc,w
 16137  15B9  00E0               	movwf	_t+1
 16138                           
 16139                           ;main.c: 850: t.s = s;
 16140  15BA  0835               	movf	cmd_sc@s,w
 16141  15BB  00B2               	movwf	??_cmd_sc
 16142  15BC  0832               	movf	??_cmd_sc,w
 16143  15BD  00E1               	movwf	_t+2
 16144  15BE                     l5969:
 16145                           
 16146                           ;main.c: 851: sendOKMessage((uint8_t)0XC1);
 16147  15BE  30C1               	movlw	193
 16148  15BF  3191  2188  3195   	fcall	_sendOKMessage
 16149                           
 16150                           ;main.c: 852: } else {
 16151  15C2  2DC7               	goto	l1519
 16152  15C3                     l5971:
 16153                           
 16154                           ;main.c: 853: sendERRORMessage((uint8_t)0XC1);
 16155  15C3  30C1               	movlw	193
 16156  15C4  3191  21F7  3195   	fcall	_sendERRORMessage
 16157  15C7                     l1519:
 16158  15C7  0008               	return
 16159  15C8                     __end_of_cmd_sc:
 16160                           
 16161                           	psect	text34
 16162  137F                     __ptext34:	
 16163 ;; *************** function _cmd_rc *****************
 16164 ;; Defined at:
 16165 ;;		line 831 in file "main.c"
 16166 ;; Parameters:    Size  Location     Type
 16167 ;;  num             2   15[BANK0 ] int 
 16168 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 16169 ;;		 -> main@buff(20), 
 16170 ;; Auto vars:     Size  Location     Type
 16171 ;;  buff            6   19[BANK0 ] unsigned char [6]
 16172 ;; Return value:  Size  Location     Type
 16173 ;;                  1    wreg      void 
 16174 ;; Registers used:
 16175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16176 ;; Tracked objects:
 16177 ;;		On entry : 0/0
 16178 ;;		On exit  : 0/0
 16179 ;;		Unchanged: 0/0
 16180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16181 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16182 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16183 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16184 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16185 ;;Total ram usage:       10 bytes
 16186 ;; Hardware stack levels used:    1
 16187 ;; Hardware stack levels required when called:    8
 16188 ;; This function calls:
 16189 ;;		_sendMessage
 16190 ;; This function is called by:
 16191 ;;		_main
 16192 ;; This function uses a non-reentrant model
 16193 ;;
 16194                           
 16195                           
 16196                           ;psect for function _cmd_rc
 16197  137F                     _cmd_rc:
 16198  137F                     l5953:	
 16199                           ;incstack = 0
 16200                           ; Regs used in _cmd_rc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16201                           
 16202                           
 16203                           ;main.c: 832: uint8_t buff[6];;main.c: 833: buff[0] = (uint8_t)0xFD;
 16204  137F  30FD               	movlw	253
 16205  1380  0020               	movlb	0	; select bank0
 16206  1381  00B2               	movwf	??_cmd_rc
 16207  1382  0832               	movf	??_cmd_rc,w
 16208  1383  00B3               	movwf	cmd_rc@buff
 16209                           
 16210                           ;main.c: 834: buff[1] = (uint8_t)0xC0;
 16211  1384  30C0               	movlw	192
 16212  1385  00B2               	movwf	??_cmd_rc
 16213  1386  0832               	movf	??_cmd_rc,w
 16214  1387  00B4               	movwf	cmd_rc@buff+1
 16215                           
 16216                           ;main.c: 835: buff[2] = t.h;
 16217  1388  085F               	movf	_t,w
 16218  1389  00B2               	movwf	??_cmd_rc
 16219  138A  0832               	movf	??_cmd_rc,w
 16220  138B  00B5               	movwf	cmd_rc@buff+2
 16221                           
 16222                           ;main.c: 836: buff[3] = t.m;
 16223  138C  0860               	movf	_t+1,w
 16224  138D  00B2               	movwf	??_cmd_rc
 16225  138E  0832               	movf	??_cmd_rc,w
 16226  138F  00B6               	movwf	cmd_rc@buff+3
 16227                           
 16228                           ;main.c: 837: buff[4] = t.s;
 16229  1390  0861               	movf	_t+2,w
 16230  1391  00B2               	movwf	??_cmd_rc
 16231  1392  0832               	movf	??_cmd_rc,w
 16232  1393  00B7               	movwf	cmd_rc@buff+4
 16233                           
 16234                           ;main.c: 838: buff[5] = (uint8_t)0xFE;
 16235  1394  30FE               	movlw	254
 16236  1395  00B2               	movwf	??_cmd_rc
 16237  1396  0832               	movf	??_cmd_rc,w
 16238  1397  00B8               	movwf	cmd_rc@buff+5
 16239  1398                     l5955:
 16240                           
 16241                           ;main.c: 840: sendMessage(6,buff);
 16242  1398  3006               	movlw	6
 16243  1399  00A3               	movwf	sendMessage@num
 16244  139A  3000               	movlw	0
 16245  139B  00A4               	movwf	sendMessage@num+1
 16246  139C  3033               	movlw	(low (cmd_rc@buff| 0))& (0+255)
 16247  139D  00B2               	movwf	??_cmd_rc
 16248  139E  0832               	movf	??_cmd_rc,w
 16249  139F  00A5               	movwf	sendMessage@buffer
 16250  13A0  3193  2313  3193   	fcall	_sendMessage
 16251  13A3                     l1514:
 16252  13A3  0008               	return
 16253  13A4                     __end_of_cmd_rc:
 16254                           
 16255                           	psect	text35
 16256  0B8B                     __ptext35:	
 16257 ;; *************** function _cmd_tri *****************
 16258 ;; Defined at:
 16259 ;;		line 1017 in file "main.c"
 16260 ;; Parameters:    Size  Location     Type
 16261 ;;  num             2   15[BANK0 ] int 
 16262 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 16263 ;;		 -> main@buff(20), 
 16264 ;; Auto vars:     Size  Location     Type
 16265 ;;  buffData        5   25[BANK0 ] unsigned char [5]
 16266 ;;  buffInit        2   30[BANK0 ] unsigned char [2]
 16267 ;;  i               2   37[BANK0 ] int 
 16268 ;;  indexAux        2   32[BANK0 ] int 
 16269 ;;  nMessagesSen    2    0        int 
 16270 ;;  index           1   40[BANK0 ] unsigned char 
 16271 ;;  j               1   39[BANK0 ] unsigned char 
 16272 ;;  buffEOM         1   36[BANK0 ] unsigned char [1]
 16273 ;;  startingInde    1   35[BANK0 ] unsigned char 
 16274 ;;  n               1   34[BANK0 ] unsigned char 
 16275 ;; Return value:  Size  Location     Type
 16276 ;;                  1    wreg      void 
 16277 ;; Registers used:
 16278 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16279 ;; Tracked objects:
 16280 ;;		On entry : 0/0
 16281 ;;		On exit  : 0/0
 16282 ;;		Unchanged: 0/0
 16283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16284 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16285 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16286 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16287 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16288 ;;Total ram usage:       26 bytes
 16289 ;; Hardware stack levels used:    1
 16290 ;; Hardware stack levels required when called:    9
 16291 ;; This function calls:
 16292 ;;		_DATAEE_ReadByte
 16293 ;;		___wmul
 16294 ;;		_sendERRORMessage
 16295 ;;		_sendMessage
 16296 ;; This function is called by:
 16297 ;;		_main
 16298 ;; This function uses a non-reentrant model
 16299 ;;
 16300                           
 16301                           
 16302                           ;psect for function _cmd_tri
 16303  0B8B                     _cmd_tri:
 16304  0B8B                     l6117:	
 16305                           ;incstack = 0
 16306                           ; Regs used in _cmd_tri: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16307                           
 16308                           
 16309                           ;main.c: 1018: if(num == 5){
 16310  0B8B  3005               	movlw	5
 16311  0B8C  0020               	movlb	0	; select bank0
 16312  0B8D  062F               	xorwf	cmd_tri@num,w
 16313  0B8E  0430               	iorwf	cmd_tri@num+1,w
 16314  0B8F  1D03               	btfss	3,2
 16315  0B90  2B92               	goto	u6071
 16316  0B91  2B93               	goto	u6070
 16317  0B92                     u6071:
 16318  0B92  2C70               	goto	l6175
 16319  0B93                     u6070:
 16320  0B93                     l6119:
 16321                           
 16322                           ;main.c: 1019: uint8_t n = buffer[2];
 16323  0B93  0831               	movf	cmd_tri@buffer,w
 16324  0B94  0086               	movwf	6
 16325  0B95  0187               	clrf	7
 16326  0B96  3F42               	moviw [2]fsr1
 16327  0B97  00C2               	movwf	cmd_tri@n
 16328                           
 16329                           ;main.c: 1020: uint8_t index = buffer[3];
 16330  0B98  0831               	movf	cmd_tri@buffer,w
 16331  0B99  0086               	movwf	6
 16332  0B9A  0187               	clrf	7
 16333  0B9B  3F43               	moviw [3]fsr1
 16334  0B9C  00C8               	movwf	cmd_tri@index
 16335  0B9D                     l6121:
 16336                           
 16337                           ;main.c: 1022: if((n > nr) || (index < 0) || (index > NREG-1)){
 16338  0B9D  0842               	movf	cmd_tri@n,w
 16339  0B9E  0021               	movlb	1	; select bank1
 16340  0B9F  0254               	subwf	_nr^(0+128),w
 16341  0BA0  1C03               	skipc
 16342  0BA1  2BA3               	goto	u6081
 16343  0BA2  2BA4               	goto	u6080
 16344  0BA3                     u6081:
 16345  0BA3  2BB9               	goto	l6125
 16346  0BA4                     u6080:
 16347  0BA4                     l6123:
 16348  0BA4  0020               	movlb	0	; select bank0
 16349  0BA5  086B               	movf	_NREG,w
 16350  0BA6  3EFF               	addlw	255
 16351  0BA7  00B2               	movwf	??_cmd_tri
 16352  0BA8  30FF               	movlw	255
 16353  0BA9  1803               	skipnc
 16354  0BAA  3000               	movlw	0
 16355  0BAB  00B3               	movwf	??_cmd_tri+1
 16356  0BAC  0833               	movf	??_cmd_tri+1,w
 16357  0BAD  3A80               	xorlw	128
 16358  0BAE  00B4               	movwf	??_cmd_tri+2
 16359  0BAF  3080               	movlw	128
 16360  0BB0  0234               	subwf	??_cmd_tri+2,w
 16361  0BB1  1D03               	skipz
 16362  0BB2  2BB5               	goto	u6095
 16363  0BB3  0848               	movf	cmd_tri@index,w
 16364  0BB4  0232               	subwf	??_cmd_tri,w
 16365  0BB5                     u6095:
 16366  0BB5  1803               	skipnc
 16367  0BB6  2BB8               	goto	u6091
 16368  0BB7  2BB9               	goto	u6090
 16369  0BB8                     u6091:
 16370  0BB8  2BBE               	goto	l6129
 16371  0BB9                     u6090:
 16372  0BB9                     l6125:
 16373                           
 16374                           ;main.c: 1023: sendERRORMessage((uint8_t)0XCC);
 16375  0BB9  30CC               	movlw	204
 16376  0BBA  3191  21F7  318B   	fcall	_sendERRORMessage
 16377  0BBD  2C74               	goto	l1579
 16378  0BBE                     l6129:
 16379                           
 16380                           ;main.c: 1025: };main.c: 1027: uint8_t startingIndex;;main.c: 1028: if(((iwrite-1)-index
      +                          ) < 0){
 16381  0BBE  087D               	movf	_iwrite,w
 16382  0BBF  0020               	movlb	0	; select bank0
 16383  0BC0  00B2               	movwf	??_cmd_tri
 16384  0BC1  01B3               	clrf	??_cmd_tri+1
 16385  0BC2  0833               	movf	??_cmd_tri+1,w
 16386  0BC3  00B5               	movwf	??_cmd_tri+3
 16387  0BC4  0848               	movf	cmd_tri@index,w
 16388  0BC5  0232               	subwf	??_cmd_tri,w
 16389  0BC6  00B4               	movwf	??_cmd_tri+2
 16390  0BC7  1C03               	skipc
 16391  0BC8  03B5               	decf	??_cmd_tri+3,f
 16392  0BC9  30FF               	movlw	255
 16393  0BCA  0734               	addwf	??_cmd_tri+2,w
 16394  0BCB  0835               	movf	??_cmd_tri+3,w
 16395  0BCC  1803               	skipnc
 16396  0BCD  0A35               	incf	??_cmd_tri+3,w
 16397  0BCE  3EFF               	addlw	255
 16398  0BCF  1F89               	btfss	9,7
 16399  0BD0  2BD2               	goto	u6101
 16400  0BD1  2BD3               	goto	u6100
 16401  0BD2                     u6101:
 16402  0BD2  2BDB               	goto	l6133
 16403  0BD3                     u6100:
 16404  0BD3                     l6131:
 16405                           
 16406                           ;main.c: 1029: startingIndex = NREG - ((iwrite-1)-index);
 16407  0BD3  087D               	movf	_iwrite,w
 16408  0BD4  026B               	subwf	_NREG,w
 16409  0BD5  0748               	addwf	cmd_tri@index,w
 16410  0BD6  3E01               	addlw	1
 16411  0BD7  00B2               	movwf	??_cmd_tri
 16412  0BD8  0832               	movf	??_cmd_tri,w
 16413  0BD9  00C3               	movwf	cmd_tri@startingIndex
 16414                           
 16415                           ;main.c: 1030: } else {
 16416  0BDA  2BE1               	goto	l6135
 16417  0BDB                     l6133:
 16418                           
 16419                           ;main.c: 1031: startingIndex = ((iwrite-1)-index);
 16420  0BDB  0848               	movf	cmd_tri@index,w
 16421  0BDC  027D               	subwf	_iwrite,w
 16422  0BDD  3EFF               	addlw	255
 16423  0BDE  00B2               	movwf	??_cmd_tri
 16424  0BDF  0832               	movf	??_cmd_tri,w
 16425  0BE0  00C3               	movwf	cmd_tri@startingIndex
 16426  0BE1                     l6135:
 16427                           
 16428                           ;main.c: 1032: };main.c: 1035: uint8_t buffInit[2];;main.c: 1036: buffInit[0] = (uint8_t
      +                          )0xFD;
 16429  0BE1  30FD               	movlw	253
 16430  0BE2  00B2               	movwf	??_cmd_tri
 16431  0BE3  0832               	movf	??_cmd_tri,w
 16432  0BE4  00BE               	movwf	cmd_tri@buffInit
 16433  0BE5                     l6137:
 16434                           
 16435                           ;main.c: 1037: buffInit[1] = (uint8_t)0XCC;
 16436  0BE5  30CC               	movlw	204
 16437  0BE6  00B2               	movwf	??_cmd_tri
 16438  0BE7  0832               	movf	??_cmd_tri,w
 16439  0BE8  00BF               	movwf	cmd_tri@buffInit+1
 16440  0BE9                     l6139:
 16441                           
 16442                           ;main.c: 1038: sendMessage(2,buffInit);
 16443  0BE9  3002               	movlw	2
 16444  0BEA  00A3               	movwf	sendMessage@num
 16445  0BEB  3000               	movlw	0
 16446  0BEC  00A4               	movwf	sendMessage@num+1
 16447  0BED  303E               	movlw	(low (cmd_tri@buffInit| 0))& (0+255)
 16448  0BEE  00B2               	movwf	??_cmd_tri
 16449  0BEF  0832               	movf	??_cmd_tri,w
 16450  0BF0  00A5               	movwf	sendMessage@buffer
 16451  0BF1  3193  2313  318B   	fcall	_sendMessage
 16452  0BF4                     l6141:
 16453  0BF4                     l6143:
 16454                           
 16455                           ;main.c: 1042: int i = startingIndex;
 16456  0BF4  0020               	movlb	0	; select bank0
 16457  0BF5  0843               	movf	cmd_tri@startingIndex,w
 16458  0BF6  00B2               	movwf	??_cmd_tri
 16459  0BF7  01B3               	clrf	??_cmd_tri+1
 16460  0BF8  0832               	movf	??_cmd_tri,w
 16461  0BF9  00C5               	movwf	cmd_tri@i
 16462  0BFA  0833               	movf	??_cmd_tri+1,w
 16463  0BFB  00C6               	movwf	cmd_tri@i+1
 16464  0BFC                     l6145:
 16465                           
 16466                           ;main.c: 1043: int indexAux = index;
 16467  0BFC  0848               	movf	cmd_tri@index,w
 16468  0BFD  00B2               	movwf	??_cmd_tri
 16469  0BFE  01B3               	clrf	??_cmd_tri+1
 16470  0BFF  0832               	movf	??_cmd_tri,w
 16471  0C00  00C0               	movwf	cmd_tri@indexAux
 16472  0C01  0833               	movf	??_cmd_tri+1,w
 16473  0C02  00C1               	movwf	cmd_tri@indexAux+1
 16474                           
 16475                           ;main.c: 1044: uint8_t j;;main.c: 1045: uint8_t buffData[5];;main.c: 1046: while(indexAu
      +                          x){
 16476  0C03  2C59               	goto	l6169
 16477  0C04                     l6147:
 16478                           
 16479                           ;main.c: 1047: for(j = 0; j < 5; j++){
 16480  0C04  01C7               	clrf	cmd_tri@j
 16481  0C05                     l6153:
 16482                           
 16483                           ;main.c: 1048: buffData[j] = DATAEE_ReadByte( (i * 0x5) + 0x7014 + j);
 16484  0C05  0847               	movf	cmd_tri@j,w
 16485  0C06  00B2               	movwf	??_cmd_tri
 16486  0C07  01B3               	clrf	??_cmd_tri+1
 16487  0C08  0846               	movf	cmd_tri@i+1,w
 16488  0C09  00A1               	movwf	___wmul@multiplier+1
 16489  0C0A  0845               	movf	cmd_tri@i,w
 16490  0C0B  00A0               	movwf	___wmul@multiplier
 16491  0C0C  3005               	movlw	5
 16492  0C0D  00A2               	movwf	___wmul@multiplicand
 16493  0C0E  3000               	movlw	0
 16494  0C0F  00A3               	movwf	___wmul@multiplicand+1
 16495  0C10  3192  22B0  318B   	fcall	___wmul
 16496  0C13  0020               	movlb	0	; select bank0
 16497  0C14  0832               	movf	??_cmd_tri,w
 16498  0C15  0720               	addwf	?___wmul,w
 16499  0C16  00B4               	movwf	??_cmd_tri+2
 16500  0C17  0833               	movf	??_cmd_tri+1,w
 16501  0C18  3D21               	addwfc	?___wmul+1,w
 16502  0C19  00B5               	movwf	??_cmd_tri+3
 16503  0C1A  0834               	movf	??_cmd_tri+2,w
 16504  0C1B  3E14               	addlw	20
 16505  0C1C  00A6               	movwf	DATAEE_ReadByte@bAdd
 16506  0C1D  3070               	movlw	112
 16507  0C1E  3D35               	addwfc	??_cmd_tri+3,w
 16508  0C1F  00A7               	movwf	DATAEE_ReadByte@bAdd+1
 16509  0C20  3190  20BA  318B   	fcall	_DATAEE_ReadByte
 16510  0C23  0020               	movlb	0	; select bank0
 16511  0C24  00B6               	movwf	??_cmd_tri+4
 16512  0C25  0847               	movf	cmd_tri@j,w
 16513  0C26  3E39               	addlw	(low (cmd_tri@buffData| 0))& (0+255)
 16514  0C27  0086               	movwf	6
 16515  0C28  0187               	clrf	7
 16516  0C29  0836               	movf	??_cmd_tri+4,w
 16517  0C2A  0081               	movwf	1
 16518  0C2B                     l6155:
 16519  0C2B  3001               	movlw	1
 16520  0C2C  00B2               	movwf	??_cmd_tri
 16521  0C2D  0832               	movf	??_cmd_tri,w
 16522  0C2E  07C7               	addwf	cmd_tri@j,f
 16523  0C2F                     l6157:
 16524  0C2F  3005               	movlw	5
 16525  0C30  0247               	subwf	cmd_tri@j,w
 16526  0C31  1C03               	skipc
 16527  0C32  2C34               	goto	u6111
 16528  0C33  2C35               	goto	u6110
 16529  0C34                     u6111:
 16530  0C34  2C05               	goto	l6153
 16531  0C35                     u6110:
 16532  0C35                     l6159:
 16533                           
 16534                           ;main.c: 1049: };main.c: 1050: sendMessage(5,buffData);
 16535  0C35  3005               	movlw	5
 16536  0C36  00A3               	movwf	sendMessage@num
 16537  0C37  3000               	movlw	0
 16538  0C38  00A4               	movwf	sendMessage@num+1
 16539  0C39  3039               	movlw	(low (cmd_tri@buffData| 0))& (0+255)
 16540  0C3A  00B2               	movwf	??_cmd_tri
 16541  0C3B  0832               	movf	??_cmd_tri,w
 16542  0C3C  00A5               	movwf	sendMessage@buffer
 16543  0C3D  3193  2313  318B   	fcall	_sendMessage
 16544  0C40                     l6161:
 16545                           
 16546                           ;main.c: 1051: i++;
 16547  0C40  3001               	movlw	1
 16548  0C41  0020               	movlb	0	; select bank0
 16549  0C42  07C5               	addwf	cmd_tri@i,f
 16550  0C43  3000               	movlw	0
 16551  0C44  3DC6               	addwfc	cmd_tri@i+1,f
 16552  0C45                     l6163:
 16553                           
 16554                           ;main.c: 1052: indexAux--;
 16555  0C45  30FF               	movlw	255
 16556  0C46  07C0               	addwf	cmd_tri@indexAux,f
 16557  0C47  30FF               	movlw	255
 16558  0C48  3DC1               	addwfc	cmd_tri@indexAux+1,f
 16559  0C49                     l6165:
 16560                           
 16561                           ;main.c: 1053: if(i >= NREG){
 16562  0C49  0846               	movf	cmd_tri@i+1,w
 16563  0C4A  3A80               	xorlw	128
 16564  0C4B  00B2               	movwf	??_cmd_tri
 16565  0C4C  3080               	movlw	128
 16566  0C4D  0232               	subwf	??_cmd_tri,w
 16567  0C4E  1D03               	skipz
 16568  0C4F  2C52               	goto	u6125
 16569  0C50  086B               	movf	_NREG,w
 16570  0C51  0245               	subwf	cmd_tri@i,w
 16571  0C52                     u6125:
 16572  0C52  1C03               	skipc
 16573  0C53  2C55               	goto	u6121
 16574  0C54  2C56               	goto	u6120
 16575  0C55                     u6121:
 16576  0C55  2C59               	goto	l6169
 16577  0C56                     u6120:
 16578  0C56                     l6167:
 16579                           
 16580                           ;main.c: 1054: i=0;
 16581  0C56  0020               	movlb	0	; select bank0
 16582  0C57  01C5               	clrf	cmd_tri@i
 16583  0C58  01C6               	clrf	cmd_tri@i+1
 16584  0C59                     l6169:
 16585  0C59  0020               	movlb	0	; select bank0
 16586  0C5A  0840               	movf	cmd_tri@indexAux,w
 16587  0C5B  0441               	iorwf	cmd_tri@indexAux+1,w
 16588  0C5C  1D03               	btfss	3,2
 16589  0C5D  2C5F               	goto	u6131
 16590  0C5E  2C60               	goto	u6130
 16591  0C5F                     u6131:
 16592  0C5F  2C04               	goto	l6147
 16593  0C60                     u6130:
 16594  0C60                     l6171:
 16595                           
 16596                           ;main.c: 1055: };main.c: 1056: };main.c: 1059: uint8_t buffEOM[1];;main.c: 1060: buffEOM
      +                          [0] = (uint8_t)0xFE;
 16597  0C60  30FE               	movlw	254
 16598  0C61  00B2               	movwf	??_cmd_tri
 16599  0C62  0832               	movf	??_cmd_tri,w
 16600  0C63  00C4               	movwf	cmd_tri@buffEOM
 16601  0C64                     l6173:
 16602                           
 16603                           ;main.c: 1061: sendMessage(1,buffEOM);
 16604  0C64  3001               	movlw	1
 16605  0C65  00A3               	movwf	sendMessage@num
 16606  0C66  3000               	movlw	0
 16607  0C67  00A4               	movwf	sendMessage@num+1
 16608  0C68  3044               	movlw	(low (cmd_tri@buffEOM| 0))& (0+255)
 16609  0C69  00B2               	movwf	??_cmd_tri
 16610  0C6A  0832               	movf	??_cmd_tri,w
 16611  0C6B  00A5               	movwf	sendMessage@buffer
 16612  0C6C  3193  2313  318B   	fcall	_sendMessage
 16613                           
 16614                           ;main.c: 1062: } else{
 16615  0C6F  2C74               	goto	l1579
 16616  0C70                     l6175:
 16617                           
 16618                           ;main.c: 1063: sendERRORMessage((uint8_t)0XCC);
 16619  0C70  30CC               	movlw	204
 16620  0C71  3191  21F7  318B   	fcall	_sendERRORMessage
 16621  0C74                     l1579:
 16622  0C74  0008               	return
 16623  0C75                     __end_of_cmd_tri:
 16624                           
 16625                           	psect	text36
 16626  12B0                     __ptext36:	
 16627 ;; *************** function ___wmul *****************
 16628 ;; Defined at:
 16629 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 16630 ;; Parameters:    Size  Location     Type
 16631 ;;  multiplier      2    0[BANK0 ] unsigned int 
 16632 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 16633 ;; Auto vars:     Size  Location     Type
 16634 ;;  product         2    4[BANK0 ] unsigned int 
 16635 ;; Return value:  Size  Location     Type
 16636 ;;                  2    0[BANK0 ] unsigned int 
 16637 ;; Registers used:
 16638 ;;		wreg, status,2, status,0
 16639 ;; Tracked objects:
 16640 ;;		On entry : 0/0
 16641 ;;		On exit  : 0/0
 16642 ;;		Unchanged: 0/0
 16643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16644 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16645 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16647 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16648 ;;Total ram usage:        6 bytes
 16649 ;; Hardware stack levels used:    1
 16650 ;; Hardware stack levels required when called:    5
 16651 ;; This function calls:
 16652 ;;		Nothing
 16653 ;; This function is called by:
 16654 ;;		_cmd_trc
 16655 ;;		_cmd_tri
 16656 ;;		_main
 16657 ;;		_sprintf
 16658 ;;		_map
 16659 ;; This function uses a non-reentrant model
 16660 ;;
 16661                           
 16662                           
 16663                           ;psect for function ___wmul
 16664  12B0                     ___wmul:
 16665  12B0                     l4695:	
 16666                           ;incstack = 0
 16667                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16668                           
 16669  12B0  0020               	movlb	0	; select bank0
 16670  12B1  01A4               	clrf	___wmul@product
 16671  12B2  01A5               	clrf	___wmul@product+1
 16672  12B3                     l4697:
 16673  12B3  1C20               	btfss	___wmul@multiplier,0
 16674  12B4  2AB6               	goto	u3611
 16675  12B5  2AB7               	goto	u3610
 16676  12B6                     u3611:
 16677  12B6  2ABB               	goto	l1838
 16678  12B7                     u3610:
 16679  12B7                     l4699:
 16680  12B7  0822               	movf	___wmul@multiplicand,w
 16681  12B8  07A4               	addwf	___wmul@product,f
 16682  12B9  0823               	movf	___wmul@multiplicand+1,w
 16683  12BA  3DA5               	addwfc	___wmul@product+1,f
 16684  12BB                     l1838:
 16685  12BB  3001               	movlw	1
 16686  12BC                     u3625:
 16687  12BC  35A2               	lslf	___wmul@multiplicand,f
 16688  12BD  0DA3               	rlf	___wmul@multiplicand+1,f
 16689  12BE  0B89               	decfsz	9,f
 16690  12BF  2ABC               	goto	u3625
 16691  12C0                     l4701:
 16692  12C0  3001               	movlw	1
 16693  12C1                     u3635:
 16694  12C1  36A1               	lsrf	___wmul@multiplier+1,f
 16695  12C2  0CA0               	rrf	___wmul@multiplier,f
 16696  12C3  0B89               	decfsz	9,f
 16697  12C4  2AC1               	goto	u3635
 16698  12C5                     l4703:
 16699  12C5  0820               	movf	___wmul@multiplier,w
 16700  12C6  0421               	iorwf	___wmul@multiplier+1,w
 16701  12C7  1D03               	btfss	3,2
 16702  12C8  2ACA               	goto	u3641
 16703  12C9  2ACB               	goto	u3640
 16704  12CA                     u3641:
 16705  12CA  2AB3               	goto	l4697
 16706  12CB                     u3640:
 16707  12CB                     l4705:
 16708  12CB  0825               	movf	___wmul@product+1,w
 16709  12CC  00A1               	movwf	?___wmul+1
 16710  12CD  0824               	movf	___wmul@product,w
 16711  12CE  00A0               	movwf	?___wmul
 16712  12CF                     l1840:
 16713  12CF  0008               	return
 16714  12D0                     __end_of___wmul:
 16715                           
 16716                           	psect	text37
 16717  10BA                     __ptext37:	
 16718 ;; *************** function _DATAEE_ReadByte *****************
 16719 ;; Defined at:
 16720 ;;		line 202 in file "mcc_generated_files/memory.c"
 16721 ;; Parameters:    Size  Location     Type
 16722 ;;  bAdd            2    6[BANK0 ] unsigned int 
 16723 ;; Auto vars:     Size  Location     Type
 16724 ;;		None
 16725 ;; Return value:  Size  Location     Type
 16726 ;;                  1    wreg      unsigned char 
 16727 ;; Registers used:
 16728 ;;		wreg, status,2
 16729 ;; Tracked objects:
 16730 ;;		On entry : 0/0
 16731 ;;		On exit  : 0/0
 16732 ;;		Unchanged: 0/0
 16733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16738 ;;Total ram usage:        2 bytes
 16739 ;; Hardware stack levels used:    1
 16740 ;; Hardware stack levels required when called:    5
 16741 ;; This function calls:
 16742 ;;		Nothing
 16743 ;; This function is called by:
 16744 ;;		_cmd_trc
 16745 ;;		_cmd_tri
 16746 ;;		_main
 16747 ;; This function uses a non-reentrant model
 16748 ;;
 16749                           
 16750                           
 16751                           ;psect for function _DATAEE_ReadByte
 16752  10BA                     _DATAEE_ReadByte:
 16753  10BA                     l5233:	
 16754                           ;incstack = 0
 16755                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 16756                           
 16757                           
 16758                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 16759  10BA  0020               	movlb	0	; select bank0
 16760  10BB  0827               	movf	DATAEE_ReadByte@bAdd+1,w
 16761  10BC  0030               	movlb	16	; select bank16
 16762  10BD  009B               	movwf	27	;volatile
 16763  10BE                     l5235:
 16764                           
 16765                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 16766  10BE  0020               	movlb	0	; select bank0
 16767  10BF  0826               	movf	DATAEE_ReadByte@bAdd,w
 16768  10C0  0030               	movlb	16	; select bank16
 16769  10C1  009A               	movwf	26	;volatile
 16770  10C2                     l5237:
 16771                           
 16772                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 16773  10C2  171E               	bsf	30,6	;volsfr
 16774  10C3                     l5239:
 16775                           
 16776                           ;memory.c: 207: NVMCON1bits.RD = 1;
 16777  10C3  141E               	bsf	30,0	;volsfr
 16778  10C4                     l5241:
 16779                           
 16780                           ;memory.c: 208: __nop();
 16781  10C4  0000               	nop
 16782  10C5                     l5243:
 16783                           
 16784                           ;memory.c: 209: __nop();
 16785  10C5  0000               	nop
 16786  10C6                     l5245:
 16787                           
 16788                           ;memory.c: 211: return (NVMDATL);
 16789  10C6  0030               	movlb	16	; select bank16
 16790  10C7  081C               	movf	28,w	;volatile
 16791  10C8                     l807:
 16792  10C8  0008               	return
 16793  10C9                     __end_of_DATAEE_ReadByte:
 16794                           
 16795                           	psect	text38
 16796  1069                     __ptext38:	
 16797 ;; *************** function _setTimer5ReloadVal *****************
 16798 ;; Defined at:
 16799 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 16800 ;; Parameters:    Size  Location     Type
 16801 ;;  val             2    0[BANK0 ] unsigned int 
 16802 ;; Auto vars:     Size  Location     Type
 16803 ;;		None
 16804 ;; Return value:  Size  Location     Type
 16805 ;;                  1    wreg      void 
 16806 ;; Registers used:
 16807 ;;		wreg
 16808 ;; Tracked objects:
 16809 ;;		On entry : 0/0
 16810 ;;		On exit  : 0/0
 16811 ;;		Unchanged: 0/0
 16812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16817 ;;Total ram usage:        2 bytes
 16818 ;; Hardware stack levels used:    1
 16819 ;; Hardware stack levels required when called:    5
 16820 ;; This function calls:
 16821 ;;		Nothing
 16822 ;; This function is called by:
 16823 ;;		_cmd_mmp
 16824 ;; This function uses a non-reentrant model
 16825 ;;
 16826                           
 16827                           
 16828                           ;psect for function _setTimer5ReloadVal
 16829  1069                     _setTimer5ReloadVal:
 16830  1069                     l5211:	
 16831                           ;incstack = 0
 16832                           ; Regs used in _setTimer5ReloadVal: [wreg]
 16833                           
 16834                           
 16835                           ;tmr5.c: 100: timer5ReloadVal = val;
 16836  1069  0020               	movlb	0	; select bank0
 16837  106A  0821               	movf	setTimer5ReloadVal@val+1,w
 16838  106B  0021               	movlb	1	; select bank1
 16839  106C  00E0               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 16840  106D  0020               	movlb	0	; select bank0
 16841  106E  0820               	movf	setTimer5ReloadVal@val,w
 16842  106F  0021               	movlb	1	; select bank1
 16843  1070  00DF               	movwf	_timer5ReloadVal^(0+128)	;volatile
 16844  1071                     l646:
 16845  1071  0008               	return
 16846  1072                     __end_of_setTimer5ReloadVal:
 16847                           
 16848                           	psect	text39
 16849  1476                     __ptext39:	
 16850 ;; *************** function ___lmul *****************
 16851 ;; Defined at:
 16852 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 16853 ;; Parameters:    Size  Location     Type
 16854 ;;  multiplier      4    0[BANK0 ] unsigned long 
 16855 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 16856 ;; Auto vars:     Size  Location     Type
 16857 ;;  product         4    8[BANK0 ] unsigned long 
 16858 ;; Return value:  Size  Location     Type
 16859 ;;                  4    0[BANK0 ] unsigned long 
 16860 ;; Registers used:
 16861 ;;		wreg, status,2, status,0
 16862 ;; Tracked objects:
 16863 ;;		On entry : 0/0
 16864 ;;		On exit  : 0/0
 16865 ;;		Unchanged: 0/0
 16866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16867 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16868 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16870 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16871 ;;Total ram usage:       12 bytes
 16872 ;; Hardware stack levels used:    1
 16873 ;; Hardware stack levels required when called:    5
 16874 ;; This function calls:
 16875 ;;		Nothing
 16876 ;; This function is called by:
 16877 ;;		_cmd_mmp
 16878 ;; This function uses a non-reentrant model
 16879 ;;
 16880                           
 16881                           
 16882                           ;psect for function ___lmul
 16883  1476                     ___lmul:
 16884  1476                     l5589:	
 16885                           ;incstack = 0
 16886                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 16887                           
 16888  1476  3000               	movlw	0
 16889  1477  0020               	movlb	0	; select bank0
 16890  1478  00AB               	movwf	___lmul@product+3
 16891  1479  3000               	movlw	0
 16892  147A  00AA               	movwf	___lmul@product+2
 16893  147B  3000               	movlw	0
 16894  147C  00A9               	movwf	___lmul@product+1
 16895  147D  3000               	movlw	0
 16896  147E  00A8               	movwf	___lmul@product
 16897  147F                     l5591:
 16898  147F  1C20               	btfss	___lmul@multiplier,0
 16899  1480  2C82               	goto	u5131
 16900  1481  2C83               	goto	u5130
 16901  1482                     u5131:
 16902  1482  2C8B               	goto	l5595
 16903  1483                     u5130:
 16904  1483                     l5593:
 16905  1483  0824               	movf	___lmul@multiplicand,w
 16906  1484  07A8               	addwf	___lmul@product,f
 16907  1485  0825               	movf	___lmul@multiplicand+1,w
 16908  1486  3DA9               	addwfc	___lmul@product+1,f
 16909  1487  0826               	movf	___lmul@multiplicand+2,w
 16910  1488  3DAA               	addwfc	___lmul@product+2,f
 16911  1489  0827               	movf	___lmul@multiplicand+3,w
 16912  148A  3DAB               	addwfc	___lmul@product+3,f
 16913  148B                     l5595:
 16914  148B  3001               	movlw	1
 16915  148C                     u5145:
 16916  148C  35A4               	lslf	___lmul@multiplicand,f
 16917  148D  0DA5               	rlf	___lmul@multiplicand+1,f
 16918  148E  0DA6               	rlf	___lmul@multiplicand+2,f
 16919  148F  0DA7               	rlf	___lmul@multiplicand+3,f
 16920  1490  0B89               	decfsz	9,f
 16921  1491  2C8C               	goto	u5145
 16922  1492                     l5597:
 16923  1492  3001               	movlw	1
 16924  1493                     u5155:
 16925  1493  36A3               	lsrf	___lmul@multiplier+3,f
 16926  1494  0CA2               	rrf	___lmul@multiplier+2,f
 16927  1495  0CA1               	rrf	___lmul@multiplier+1,f
 16928  1496  0CA0               	rrf	___lmul@multiplier,f
 16929  1497  0B89               	decfsz	9,f
 16930  1498  2C93               	goto	u5155
 16931  1499  0823               	movf	___lmul@multiplier+3,w
 16932  149A  0422               	iorwf	___lmul@multiplier+2,w
 16933  149B  0421               	iorwf	___lmul@multiplier+1,w
 16934  149C  0420               	iorwf	___lmul@multiplier,w
 16935  149D  1D03               	skipz
 16936  149E  2CA0               	goto	u5161
 16937  149F  2CA1               	goto	u5160
 16938  14A0                     u5161:
 16939  14A0  2C7F               	goto	l5591
 16940  14A1                     u5160:
 16941  14A1                     l5599:
 16942  14A1  082B               	movf	___lmul@product+3,w
 16943  14A2  00A3               	movwf	?___lmul+3
 16944  14A3  082A               	movf	___lmul@product+2,w
 16945  14A4  00A2               	movwf	?___lmul+2
 16946  14A5  0829               	movf	___lmul@product+1,w
 16947  14A6  00A1               	movwf	?___lmul+1
 16948  14A7  0828               	movf	___lmul@product,w
 16949  14A8  00A0               	movwf	?___lmul
 16950  14A9                     l1852:
 16951  14A9  0008               	return
 16952  14AA                     __end_of___lmul:
 16953                           
 16954                           	psect	text40
 16955  1FEB                     __ptext40:	
 16956 ;; *************** function _TMR5_StopTimer *****************
 16957 ;; Defined at:
 16958 ;;		line 109 in file "mcc_generated_files/tmr5.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;		None
 16961 ;; Auto vars:     Size  Location     Type
 16962 ;;		None
 16963 ;; Return value:  Size  Location     Type
 16964 ;;                  1    wreg      void 
 16965 ;; Registers used:
 16966 ;;		None
 16967 ;; Tracked objects:
 16968 ;;		On entry : 0/0
 16969 ;;		On exit  : 0/0
 16970 ;;		Unchanged: 0/0
 16971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16976 ;;Total ram usage:        0 bytes
 16977 ;; Hardware stack levels used:    1
 16978 ;; Hardware stack levels required when called:    5
 16979 ;; This function calls:
 16980 ;;		Nothing
 16981 ;; This function is called by:
 16982 ;;		_cmd_mmp
 16983 ;; This function uses a non-reentrant model
 16984 ;;
 16985                           
 16986                           
 16987                           ;psect for function _TMR5_StopTimer
 16988  1FEB                     _TMR5_StopTimer:
 16989  1FEB                     l5215:	
 16990                           ;incstack = 0
 16991                           ; Regs used in _TMR5_StopTimer: []
 16992                           
 16993                           
 16994                           ;tmr5.c: 112: T5CONbits.TMR5ON = 0;
 16995  1FEB  0024               	movlb	4	; select bank4
 16996  1FEC  101A               	bcf	26,0	;volatile
 16997  1FED                     l652:
 16998  1FED  0008               	return
 16999  1FEE                     __end_of_TMR5_StopTimer:
 17000                           
 17001                           	psect	text41
 17002  1FE8                     __ptext41:	
 17003 ;; *************** function _TMR5_StartTimer *****************
 17004 ;; Defined at:
 17005 ;;		line 103 in file "mcc_generated_files/tmr5.c"
 17006 ;; Parameters:    Size  Location     Type
 17007 ;;		None
 17008 ;; Auto vars:     Size  Location     Type
 17009 ;;		None
 17010 ;; Return value:  Size  Location     Type
 17011 ;;                  1    wreg      void 
 17012 ;; Registers used:
 17013 ;;		None
 17014 ;; Tracked objects:
 17015 ;;		On entry : 0/0
 17016 ;;		On exit  : 0/0
 17017 ;;		Unchanged: 0/0
 17018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17023 ;;Total ram usage:        0 bytes
 17024 ;; Hardware stack levels used:    1
 17025 ;; Hardware stack levels required when called:    5
 17026 ;; This function calls:
 17027 ;;		Nothing
 17028 ;; This function is called by:
 17029 ;;		_cmd_mmp
 17030 ;; This function uses a non-reentrant model
 17031 ;;
 17032                           
 17033                           
 17034                           ;psect for function _TMR5_StartTimer
 17035  1FE8                     _TMR5_StartTimer:
 17036  1FE8                     l5213:	
 17037                           ;incstack = 0
 17038                           ; Regs used in _TMR5_StartTimer: []
 17039                           
 17040                           
 17041                           ;tmr5.c: 106: T5CONbits.TMR5ON = 1;
 17042  1FE8  0024               	movlb	4	; select bank4
 17043  1FE9  141A               	bsf	26,0	;volatile
 17044  1FEA                     l649:
 17045  1FEA  0008               	return
 17046  1FEB                     __end_of_TMR5_StartTimer:
 17047                           
 17048                           	psect	text42
 17049  1188                     __ptext42:	
 17050 ;; *************** function _sendOKMessage *****************
 17051 ;; Defined at:
 17052 ;;		line 811 in file "main.c"
 17053 ;; Parameters:    Size  Location     Type
 17054 ;;  cmd             1    wreg     unsigned char 
 17055 ;; Auto vars:     Size  Location     Type
 17056 ;;  cmd             1   10[BANK0 ] unsigned char 
 17057 ;;  bufw            4   11[BANK0 ] unsigned char [4]
 17058 ;; Return value:  Size  Location     Type
 17059 ;;                  1    wreg      void 
 17060 ;; Registers used:
 17061 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17062 ;; Tracked objects:
 17063 ;;		On entry : 0/0
 17064 ;;		On exit  : 0/0
 17065 ;;		Unchanged: 0/0
 17066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17068 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17069 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17070 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17071 ;;Total ram usage:        6 bytes
 17072 ;; Hardware stack levels used:    1
 17073 ;; Hardware stack levels required when called:    8
 17074 ;; This function calls:
 17075 ;;		_sendMessage
 17076 ;; This function is called by:
 17077 ;;		_cmd_sc
 17078 ;;		_cmd_mmp
 17079 ;;		_cmd_mta
 17080 ;;		_cmd_dac
 17081 ;;		_cmd_dtl
 17082 ;;		_cmd_aa
 17083 ;; This function uses a non-reentrant model
 17084 ;;
 17085                           
 17086                           
 17087                           ;psect for function _sendOKMessage
 17088  1188                     _sendOKMessage:
 17089                           
 17090                           ;incstack = 0
 17091                           ; Regs used in _sendOKMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17092                           ;sendOKMessage@cmd stored from wreg
 17093  1188  0020               	movlb	0	; select bank0
 17094  1189  00AA               	movwf	sendOKMessage@cmd
 17095  118A                     l5577:
 17096                           
 17097                           ;main.c: 812: uint8_t bufw[4];;main.c: 813: bufw[0] = (uint8_t)0xFD;
 17098  118A  30FD               	movlw	253
 17099  118B  00A9               	movwf	??_sendOKMessage
 17100  118C  0829               	movf	??_sendOKMessage,w
 17101  118D  00AB               	movwf	sendOKMessage@bufw
 17102                           
 17103                           ;main.c: 814: bufw[1] = (uint8_t)cmd;
 17104  118E  082A               	movf	sendOKMessage@cmd,w
 17105  118F  00A9               	movwf	??_sendOKMessage
 17106  1190  0829               	movf	??_sendOKMessage,w
 17107  1191  00AC               	movwf	sendOKMessage@bufw+1
 17108  1192                     l5579:
 17109                           
 17110                           ;main.c: 815: bufw[2] = (uint8_t)0;
 17111  1192  01AD               	clrf	sendOKMessage@bufw+2
 17112  1193                     l5581:
 17113                           
 17114                           ;main.c: 816: bufw[3] = (uint8_t)0xFE;
 17115  1193  30FE               	movlw	254
 17116  1194  00A9               	movwf	??_sendOKMessage
 17117  1195  0829               	movf	??_sendOKMessage,w
 17118  1196  00AE               	movwf	sendOKMessage@bufw+3
 17119  1197                     l5583:
 17120                           
 17121                           ;main.c: 818: sendMessage(4,bufw);
 17122  1197  3004               	movlw	4
 17123  1198  00A3               	movwf	sendMessage@num
 17124  1199  3000               	movlw	0
 17125  119A  00A4               	movwf	sendMessage@num+1
 17126  119B  302B               	movlw	(low (sendOKMessage@bufw| 0))& (0+255)
 17127  119C  00A9               	movwf	??_sendOKMessage
 17128  119D  0829               	movf	??_sendOKMessage,w
 17129  119E  00A5               	movwf	sendMessage@buffer
 17130  119F  3193  2313  3191   	fcall	_sendMessage
 17131  11A2                     l1508:
 17132  11A2  0008               	return
 17133  11A3                     __end_of_sendOKMessage:
 17134                           
 17135                           	psect	text43
 17136  11F7                     __ptext43:	
 17137 ;; *************** function _sendERRORMessage *****************
 17138 ;; Defined at:
 17139 ;;		line 821 in file "main.c"
 17140 ;; Parameters:    Size  Location     Type
 17141 ;;  cmd             1    wreg     unsigned char 
 17142 ;; Auto vars:     Size  Location     Type
 17143 ;;  cmd             1   10[BANK0 ] unsigned char 
 17144 ;;  bufw            4   11[BANK0 ] unsigned char [4]
 17145 ;; Return value:  Size  Location     Type
 17146 ;;                  1    wreg      void 
 17147 ;; Registers used:
 17148 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17149 ;; Tracked objects:
 17150 ;;		On entry : 0/0
 17151 ;;		On exit  : 0/0
 17152 ;;		Unchanged: 0/0
 17153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17155 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17156 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17157 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17158 ;;Total ram usage:        6 bytes
 17159 ;; Hardware stack levels used:    1
 17160 ;; Hardware stack levels required when called:    8
 17161 ;; This function calls:
 17162 ;;		_sendMessage
 17163 ;; This function is called by:
 17164 ;;		_cmd_sc
 17165 ;;		_cmd_mmp
 17166 ;;		_cmd_mta
 17167 ;;		_cmd_dac
 17168 ;;		_cmd_dtl
 17169 ;;		_cmd_aa
 17170 ;;		_cmd_trc
 17171 ;;		_cmd_tri
 17172 ;; This function uses a non-reentrant model
 17173 ;;
 17174                           
 17175                           
 17176                           ;psect for function _sendERRORMessage
 17177  11F7                     _sendERRORMessage:
 17178                           
 17179                           ;incstack = 0
 17180                           ; Regs used in _sendERRORMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17181                           ;sendERRORMessage@cmd stored from wreg
 17182  11F7  0020               	movlb	0	; select bank0
 17183  11F8  00AA               	movwf	sendERRORMessage@cmd
 17184  11F9                     l5585:
 17185                           
 17186                           ;main.c: 822: uint8_t bufw[4];;main.c: 823: bufw[0] = (uint8_t)0xFD;
 17187  11F9  30FD               	movlw	253
 17188  11FA  00A9               	movwf	??_sendERRORMessage
 17189  11FB  0829               	movf	??_sendERRORMessage,w
 17190  11FC  00AB               	movwf	sendERRORMessage@bufw
 17191                           
 17192                           ;main.c: 824: bufw[1] = (uint8_t)cmd;
 17193  11FD  082A               	movf	sendERRORMessage@cmd,w
 17194  11FE  00A9               	movwf	??_sendERRORMessage
 17195  11FF  0829               	movf	??_sendERRORMessage,w
 17196  1200  00AC               	movwf	sendERRORMessage@bufw+1
 17197                           
 17198                           ;main.c: 825: bufw[2] = (uint8_t)0xFF;
 17199  1201  30FF               	movlw	255
 17200  1202  00A9               	movwf	??_sendERRORMessage
 17201  1203  0829               	movf	??_sendERRORMessage,w
 17202  1204  00AD               	movwf	sendERRORMessage@bufw+2
 17203                           
 17204                           ;main.c: 826: bufw[3] = (uint8_t)0xFE;
 17205  1205  30FE               	movlw	254
 17206  1206  00A9               	movwf	??_sendERRORMessage
 17207  1207  0829               	movf	??_sendERRORMessage,w
 17208  1208  00AE               	movwf	sendERRORMessage@bufw+3
 17209  1209                     l5587:
 17210                           
 17211                           ;main.c: 828: sendMessage(4,bufw);
 17212  1209  3004               	movlw	4
 17213  120A  00A3               	movwf	sendMessage@num
 17214  120B  3000               	movlw	0
 17215  120C  00A4               	movwf	sendMessage@num+1
 17216  120D  302B               	movlw	(low (sendERRORMessage@bufw| 0))& (0+255)
 17217  120E  00A9               	movwf	??_sendERRORMessage
 17218  120F  0829               	movf	??_sendERRORMessage,w
 17219  1210  00A5               	movwf	sendMessage@buffer
 17220  1211  3193  2313  3191   	fcall	_sendMessage
 17221  1214                     l1511:
 17222  1214  0008               	return
 17223  1215                     __end_of_sendERRORMessage:
 17224                           
 17225                           	psect	text44
 17226  1313                     __ptext44:	
 17227 ;; *************** function _sendMessage *****************
 17228 ;; Defined at:
 17229 ;;		line 803 in file "main.c"
 17230 ;; Parameters:    Size  Location     Type
 17231 ;;  num             2    3[BANK0 ] int 
 17232 ;;  buffer          1    5[BANK0 ] PTR unsigned char 
 17233 ;;		 -> cmd_tri@buffEOM(1), cmd_tri@buffData(5), cmd_tri@buffInit(2), cmd_trc@buffEOM(1), 
 17234 ;;		 -> cmd_trc@buffData(5), cmd_trc@buffInit(2), cmd_ir@buff(7), cmd_ra@buff(9), 
 17235 ;;		 -> cmd_rp@buff(5), cmd_rtl@buff(5), cmd_rc@buff(6), sendERRORMessage@bufw(4), 
 17236 ;;		 -> sendOKMessage@bufw(4), 
 17237 ;; Auto vars:     Size  Location     Type
 17238 ;;  n               2    7[BANK0 ] int 
 17239 ;; Return value:  Size  Location     Type
 17240 ;;                  1    wreg      void 
 17241 ;; Registers used:
 17242 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17243 ;; Tracked objects:
 17244 ;;		On entry : 0/0
 17245 ;;		On exit  : 0/0
 17246 ;;		Unchanged: 0/0
 17247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17248 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17249 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17250 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17251 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17252 ;;Total ram usage:        6 bytes
 17253 ;; Hardware stack levels used:    1
 17254 ;; Hardware stack levels required when called:    7
 17255 ;; This function calls:
 17256 ;;		_putch
 17257 ;; This function is called by:
 17258 ;;		_sendOKMessage
 17259 ;;		_sendERRORMessage
 17260 ;;		_cmd_rc
 17261 ;;		_cmd_rtl
 17262 ;;		_cmd_rp
 17263 ;;		_cmd_ra
 17264 ;;		_cmd_ir
 17265 ;;		_cmd_trc
 17266 ;;		_cmd_tri
 17267 ;; This function uses a non-reentrant model
 17268 ;;
 17269                           
 17270                           
 17271                           ;psect for function _sendMessage
 17272  1313                     _sendMessage:
 17273  1313                     l5003:	
 17274                           ;incstack = 0
 17275                           ; Regs used in _sendMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17276                           
 17277                           
 17278                           ;main.c: 804: int n = 0;
 17279  1313  0020               	movlb	0	; select bank0
 17280  1314  01A7               	clrf	sendMessage@n
 17281  1315  01A8               	clrf	sendMessage@n+1
 17282                           
 17283                           ;main.c: 805: while(n<num){
 17284  1316  2B27               	goto	l5009
 17285  1317                     l5005:
 17286                           
 17287                           ;main.c: 806: putch(buffer[n]);
 17288  1317  0020               	movlb	0	; select bank0
 17289  1318  0827               	movf	sendMessage@n,w
 17290  1319  0725               	addwf	sendMessage@buffer,w
 17291  131A  00A6               	movwf	??_sendMessage
 17292  131B  0826               	movf	??_sendMessage,w
 17293  131C  0086               	movwf	6
 17294  131D  0187               	clrf	7
 17295  131E  0801               	movf	1,w
 17296  131F  3190  2013  3193   	fcall	_putch
 17297  1322                     l5007:
 17298                           
 17299                           ;main.c: 807: n++;
 17300  1322  3001               	movlw	1
 17301  1323  0020               	movlb	0	; select bank0
 17302  1324  07A7               	addwf	sendMessage@n,f
 17303  1325  3000               	movlw	0
 17304  1326  3DA8               	addwfc	sendMessage@n+1,f
 17305  1327                     l5009:
 17306  1327  0828               	movf	sendMessage@n+1,w
 17307  1328  3A80               	xorlw	128
 17308  1329  00A6               	movwf	??_sendMessage
 17309  132A  0824               	movf	sendMessage@num+1,w
 17310  132B  3A80               	xorlw	128
 17311  132C  0226               	subwf	??_sendMessage,w
 17312  132D  1D03               	skipz
 17313  132E  2B31               	goto	u4355
 17314  132F  0823               	movf	sendMessage@num,w
 17315  1330  0227               	subwf	sendMessage@n,w
 17316  1331                     u4355:
 17317  1331  1C03               	skipc
 17318  1332  2B34               	goto	u4351
 17319  1333  2B35               	goto	u4350
 17320  1334                     u4351:
 17321  1334  2B17               	goto	l5005
 17322  1335                     u4350:
 17323  1335                     l1505:
 17324  1335  0008               	return
 17325  1336                     __end_of_sendMessage:
 17326                           
 17327                           	psect	text45
 17328  1013                     __ptext45:	
 17329 ;; *************** function _putch *****************
 17330 ;; Defined at:
 17331 ;;		line 176 in file "mcc_generated_files/eusart.c"
 17332 ;; Parameters:    Size  Location     Type
 17333 ;;  txData          1    wreg     unsigned char 
 17334 ;; Auto vars:     Size  Location     Type
 17335 ;;  txData          1    2[BANK0 ] unsigned char 
 17336 ;; Return value:  Size  Location     Type
 17337 ;;                  1    wreg      void 
 17338 ;; Registers used:
 17339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17340 ;; Tracked objects:
 17341 ;;		On entry : 0/0
 17342 ;;		On exit  : 0/0
 17343 ;;		Unchanged: 0/0
 17344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17346 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17348 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17349 ;;Total ram usage:        1 bytes
 17350 ;; Hardware stack levels used:    1
 17351 ;; Hardware stack levels required when called:    6
 17352 ;; This function calls:
 17353 ;;		_EUSART_Write
 17354 ;; This function is called by:
 17355 ;;		_sendMessage
 17356 ;; This function uses a non-reentrant model
 17357 ;;
 17358                           
 17359                           
 17360                           ;psect for function _putch
 17361  1013                     _putch:
 17362                           
 17363                           ;incstack = 0
 17364                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17365                           ;putch@txData stored from wreg
 17366  1013  0020               	movlb	0	; select bank0
 17367  1014  00A2               	movwf	putch@txData
 17368  1015                     l4679:
 17369                           
 17370                           ;eusart.c: 178: EUSART_Write(txData);
 17371  1015  0822               	movf	putch@txData,w
 17372  1016  3194  2448  3190   	fcall	_EUSART_Write
 17373  1019                     l915:
 17374  1019  0008               	return
 17375  101A                     __end_of_putch:
 17376                           
 17377                           	psect	text46
 17378  1448                     __ptext46:	
 17379 ;; *************** function _EUSART_Write *****************
 17380 ;; Defined at:
 17381 ;;		line 148 in file "mcc_generated_files/eusart.c"
 17382 ;; Parameters:    Size  Location     Type
 17383 ;;  txData          1    wreg     unsigned char 
 17384 ;; Auto vars:     Size  Location     Type
 17385 ;;  txData          1    1[BANK0 ] unsigned char 
 17386 ;; Return value:  Size  Location     Type
 17387 ;;                  1    wreg      void 
 17388 ;; Registers used:
 17389 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17390 ;; Tracked objects:
 17391 ;;		On entry : 0/0
 17392 ;;		On exit  : 0/0
 17393 ;;		Unchanged: 0/0
 17394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17396 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17397 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17398 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17399 ;;Total ram usage:        2 bytes
 17400 ;; Hardware stack levels used:    1
 17401 ;; Hardware stack levels required when called:    5
 17402 ;; This function calls:
 17403 ;;		Nothing
 17404 ;; This function is called by:
 17405 ;;		_putch
 17406 ;; This function uses a non-reentrant model
 17407 ;;
 17408                           
 17409                           
 17410                           ;psect for function _EUSART_Write
 17411  1448                     _EUSART_Write:
 17412                           
 17413                           ;incstack = 0
 17414                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 17415                           ;EUSART_Write@txData stored from wreg
 17416  1448  0020               	movlb	0	; select bank0
 17417  1449  00A1               	movwf	EUSART_Write@txData
 17418  144A                     l4613:
 17419  144A                     l4615:	
 17420                           ;eusart.c: 150: while(0 == eusartTxBufferRemaining)
 17421                           
 17422  144A  0021               	movlb	1	; select bank1
 17423  144B  0865               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 17424  144C  1903               	btfsc	3,2
 17425  144D  2C4F               	goto	u3411
 17426  144E  2C50               	goto	u3410
 17427  144F                     u3411:
 17428  144F  2C4A               	goto	l4615
 17429  1450                     u3410:
 17430  1450                     l905:
 17431                           
 17432                           ;eusart.c: 152: };eusart.c: 154: if(0 == PIE3bits.TXIE)
 17433  1450  002E               	movlb	14	; select bank14
 17434  1451  1A19               	btfsc	25,4	;volatile
 17435  1452  2C54               	goto	u3421
 17436  1453  2C55               	goto	u3420
 17437  1454                     u3421:
 17438  1454  2C5A               	goto	l906
 17439  1455                     u3420:
 17440  1455                     l4617:
 17441                           
 17442                           ;eusart.c: 155: {;eusart.c: 156: TX1REG = txData;
 17443  1455  0020               	movlb	0	; select bank0
 17444  1456  0821               	movf	EUSART_Write@txData,w
 17445  1457  0022               	movlb	2	; select bank2
 17446  1458  009A               	movwf	26	;volatile
 17447                           
 17448                           ;eusart.c: 157: }
 17449  1459  2C73               	goto	l4629
 17450  145A                     l906:
 17451                           
 17452                           ;eusart.c: 158: else;eusart.c: 159: {;eusart.c: 160: PIE3bits.TXIE = 0;
 17453  145A  1219               	bcf	25,4	;volatile
 17454  145B                     l4619:
 17455                           
 17456                           ;eusart.c: 161: eusartTxBuffer[eusartTxHead++] = txData;
 17457  145B  0020               	movlb	0	; select bank0
 17458  145C  0821               	movf	EUSART_Write@txData,w
 17459  145D  00A0               	movwf	??_EUSART_Write
 17460  145E  086E               	movf	_eusartTxHead,w
 17461  145F  3EA0               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 17462  1460  0086               	movwf	6
 17463  1461  3001               	movlw	1	; select bank3/4
 17464  1462  0087               	movwf	7
 17465  1463  0820               	movf	??_EUSART_Write,w
 17466  1464  0081               	movwf	1
 17467  1465                     l4621:
 17468  1465  3001               	movlw	1
 17469  1466  00A0               	movwf	??_EUSART_Write
 17470  1467  0820               	movf	??_EUSART_Write,w
 17471  1468  07EE               	addwf	_eusartTxHead,f	;volatile
 17472  1469                     l4623:
 17473                           
 17474                           ;eusart.c: 162: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 17475  1469  3040               	movlw	64
 17476  146A  026E               	subwf	_eusartTxHead,w	;volatile
 17477  146B  1C03               	skipc
 17478  146C  2C6E               	goto	u3431
 17479  146D  2C6F               	goto	u3430
 17480  146E                     u3431:
 17481  146E  2C70               	goto	l4627
 17482  146F                     u3430:
 17483  146F                     l4625:
 17484                           
 17485                           ;eusart.c: 163: {;eusart.c: 164: eusartTxHead = 0;
 17486  146F  01EE               	clrf	_eusartTxHead	;volatile
 17487  1470                     l4627:
 17488                           
 17489                           ;eusart.c: 165: };eusart.c: 166: eusartTxBufferRemaining--;
 17490  1470  3001               	movlw	1
 17491  1471  0021               	movlb	1	; select bank1
 17492  1472  02E5               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 17493  1473                     l4629:
 17494                           
 17495                           ;eusart.c: 167: };eusart.c: 168: PIE3bits.TXIE = 1;
 17496  1473  002E               	movlb	14	; select bank14
 17497  1474  1619               	bsf	25,4	;volatile
 17498  1475                     l909:
 17499  1475  0008               	return
 17500  1476                     __end_of_EUSART_Write:
 17501                           
 17502                           	psect	text47
 17503  1FF4                     __ptext47:	
 17504 ;; *************** function _TMR2_StartTimer *****************
 17505 ;; Defined at:
 17506 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 17507 ;; Parameters:    Size  Location     Type
 17508 ;;		None
 17509 ;; Auto vars:     Size  Location     Type
 17510 ;;		None
 17511 ;; Return value:  Size  Location     Type
 17512 ;;                  1    wreg      void 
 17513 ;; Registers used:
 17514 ;;		status,2, status,0, pclath, cstack
 17515 ;; Tracked objects:
 17516 ;;		On entry : 0/0
 17517 ;;		On exit  : 0/0
 17518 ;;		Unchanged: 0/0
 17519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17524 ;;Total ram usage:        0 bytes
 17525 ;; Hardware stack levels used:    1
 17526 ;; Hardware stack levels required when called:    6
 17527 ;; This function calls:
 17528 ;;		_TMR2_Start
 17529 ;; This function is called by:
 17530 ;;		_main
 17531 ;; This function uses a non-reentrant model
 17532 ;;
 17533                           
 17534                           
 17535                           ;psect for function _TMR2_StartTimer
 17536  1FF4                     _TMR2_StartTimer:
 17537  1FF4                     l5655:	
 17538                           ;incstack = 0
 17539                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 17540                           
 17541                           
 17542                           ;tmr2.c: 108: TMR2_Start();
 17543  1FF4  319F  27E5  319F   	fcall	_TMR2_Start
 17544  1FF7                     l732:
 17545  1FF7  0008               	return
 17546  1FF8                     __end_of_TMR2_StartTimer:
 17547                           
 17548                           	psect	text48
 17549  1FE5                     __ptext48:	
 17550 ;; *************** function _TMR2_Start *****************
 17551 ;; Defined at:
 17552 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 17553 ;; Parameters:    Size  Location     Type
 17554 ;;		None
 17555 ;; Auto vars:     Size  Location     Type
 17556 ;;		None
 17557 ;; Return value:  Size  Location     Type
 17558 ;;                  1    wreg      void 
 17559 ;; Registers used:
 17560 ;;		None
 17561 ;; Tracked objects:
 17562 ;;		On entry : 0/0
 17563 ;;		On exit  : 0/0
 17564 ;;		Unchanged: 0/0
 17565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17570 ;;Total ram usage:        0 bytes
 17571 ;; Hardware stack levels used:    1
 17572 ;; Hardware stack levels required when called:    5
 17573 ;; This function calls:
 17574 ;;		Nothing
 17575 ;; This function is called by:
 17576 ;;		_TMR2_StartTimer
 17577 ;; This function uses a non-reentrant model
 17578 ;;
 17579                           
 17580                           
 17581                           ;psect for function _TMR2_Start
 17582  1FE5                     _TMR2_Start:
 17583  1FE5                     l5231:	
 17584                           ;incstack = 0
 17585                           ; Regs used in _TMR2_Start: []
 17586                           
 17587                           
 17588                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 17589  1FE5  0025               	movlb	5	; select bank5
 17590  1FE6  178E               	bsf	14,7	;volatile
 17591  1FE7                     l729:
 17592  1FE7  0008               	return
 17593  1FE8                     __end_of_TMR2_Start:
 17594                           
 17595                           	psect	text49
 17596  1272                     __ptext49:	
 17597 ;; *************** function _SYSTEM_Initialize *****************
 17598 ;; Defined at:
 17599 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17600 ;; Parameters:    Size  Location     Type
 17601 ;;		None
 17602 ;; Auto vars:     Size  Location     Type
 17603 ;;		None
 17604 ;; Return value:  Size  Location     Type
 17605 ;;                  1    wreg      void 
 17606 ;; Registers used:
 17607 ;;		wreg, status,2, status,0, pclath, cstack
 17608 ;; Tracked objects:
 17609 ;;		On entry : 0/0
 17610 ;;		On exit  : 0/0
 17611 ;;		Unchanged: 0/0
 17612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17617 ;;Total ram usage:        0 bytes
 17618 ;; Hardware stack levels used:    1
 17619 ;; Hardware stack levels required when called:    7
 17620 ;; This function calls:
 17621 ;;		_ADCC_Initialize
 17622 ;;		_EUSART_Initialize
 17623 ;;		_EXT_INT_Initialize
 17624 ;;		_OSCILLATOR_Initialize
 17625 ;;		_PIN_MANAGER_Initialize
 17626 ;;		_PMD_Initialize
 17627 ;;		_PWM6_Initialize
 17628 ;;		_TMR1_Initialize
 17629 ;;		_TMR2_Initialize
 17630 ;;		_TMR5_Initialize
 17631 ;; This function is called by:
 17632 ;;		_main
 17633 ;; This function uses a non-reentrant model
 17634 ;;
 17635                           
 17636                           
 17637                           ;psect for function _SYSTEM_Initialize
 17638  1272                     _SYSTEM_Initialize:
 17639  1272                     l5603:	
 17640                           ;incstack = 0
 17641                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17642                           
 17643                           
 17644                           ;mcc.c: 52: PMD_Initialize();
 17645  1272  3190  201A  3192   	fcall	_PMD_Initialize
 17646  1275                     l5605:
 17647                           
 17648                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 17649  1275  3196  264B  3192   	fcall	_PIN_MANAGER_Initialize
 17650  1278                     l5607:
 17651                           
 17652                           ;mcc.c: 54: OSCILLATOR_Initialize();
 17653  1278  3190  204E  3192   	fcall	_OSCILLATOR_Initialize
 17654  127B                     l5609:
 17655                           
 17656                           ;mcc.c: 55: PWM6_Initialize();
 17657  127B  3190  2091  3192   	fcall	_PWM6_Initialize
 17658  127E                     l5611:
 17659                           
 17660                           ;mcc.c: 56: ADCC_Initialize();
 17661  127E  3191  213E  3192   	fcall	_ADCC_Initialize
 17662  1281                     l5613:
 17663                           
 17664                           ;mcc.c: 57: TMR5_Initialize();
 17665  1281  3192  2253  3192   	fcall	_TMR5_Initialize
 17666  1284                     l5615:
 17667                           
 17668                           ;mcc.c: 58: TMR2_Initialize();
 17669  1284  3190  20AC  3192   	fcall	_TMR2_Initialize
 17670  1287                     l5617:
 17671                           
 17672                           ;mcc.c: 59: TMR1_Initialize();
 17673  1287  3192  2234  3192   	fcall	_TMR1_Initialize
 17674  128A                     l5619:
 17675                           
 17676                           ;mcc.c: 60: EXT_INT_Initialize();
 17677  128A  3190  209E  3192   	fcall	_EXT_INT_Initialize
 17678  128D                     l5621:
 17679                           
 17680                           ;mcc.c: 61: EUSART_Initialize();
 17681  128D  3194  241A  3192   	fcall	_EUSART_Initialize
 17682  1290                     l184:
 17683  1290  0008               	return
 17684  1291                     __end_of_SYSTEM_Initialize:
 17685                           
 17686                           	psect	text50
 17687  1253                     __ptext50:	
 17688 ;; *************** function _TMR5_Initialize *****************
 17689 ;; Defined at:
 17690 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 17691 ;; Parameters:    Size  Location     Type
 17692 ;;		None
 17693 ;; Auto vars:     Size  Location     Type
 17694 ;;		None
 17695 ;; Return value:  Size  Location     Type
 17696 ;;                  1    wreg      void 
 17697 ;; Registers used:
 17698 ;;		wreg, status,2, status,0, pclath, cstack
 17699 ;; Tracked objects:
 17700 ;;		On entry : 0/0
 17701 ;;		On exit  : 0/0
 17702 ;;		Unchanged: 0/0
 17703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17708 ;;Total ram usage:        0 bytes
 17709 ;; Hardware stack levels used:    1
 17710 ;; Hardware stack levels required when called:    6
 17711 ;; This function calls:
 17712 ;;		_TMR5_SetInterruptHandler
 17713 ;; This function is called by:
 17714 ;;		_SYSTEM_Initialize
 17715 ;; This function uses a non-reentrant model
 17716 ;;
 17717                           
 17718                           
 17719                           ;psect for function _TMR5_Initialize
 17720  1253                     _TMR5_Initialize:
 17721  1253                     l5113:	
 17722                           ;incstack = 0
 17723                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17724                           
 17725                           
 17726                           ;tmr5.c: 69: T5GCON = 0x00;
 17727  1253  0024               	movlb	4	; select bank4
 17728  1254  019B               	clrf	27	;volatile
 17729                           
 17730                           ;tmr5.c: 72: T5GATE = 0x00;
 17731  1255  019C               	clrf	28	;volatile
 17732  1256                     l5115:
 17733                           
 17734                           ;tmr5.c: 75: T5CLK = 0x04;
 17735  1256  3004               	movlw	4
 17736  1257  009D               	movwf	29	;volatile
 17737  1258                     l5117:
 17738                           
 17739                           ;tmr5.c: 78: TMR5H = 0xD2;
 17740  1258  30D2               	movlw	210
 17741  1259  0099               	movwf	25	;volatile
 17742  125A                     l5119:
 17743                           
 17744                           ;tmr5.c: 81: TMR5L = 0x97;
 17745  125A  3097               	movlw	151
 17746  125B  0098               	movwf	24	;volatile
 17747  125C                     l5121:
 17748                           
 17749                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 17750  125C  0819               	movf	25,w	;volatile
 17751  125D  0021               	movlb	1	; select bank1
 17752  125E  00E0               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 17753  125F  0024               	movlb	4	; select bank4
 17754  1260  0818               	movf	24,w	;volatile
 17755  1261  0021               	movlb	1	; select bank1
 17756  1262  00DF               	movwf	_timer5ReloadVal^(0+128)	;volatile
 17757  1263                     l5123:
 17758                           
 17759                           ;tmr5.c: 87: PIR4bits.TMR5IF = 0;
 17760  1263  002E               	movlb	14	; select bank14
 17761  1264  1210               	bcf	16,4	;volatile
 17762  1265                     l5125:
 17763                           
 17764                           ;tmr5.c: 90: PIE4bits.TMR5IE = 1;
 17765  1265  161A               	bsf	26,4	;volatile
 17766  1266                     l5127:
 17767                           
 17768                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 17769  1266  3002               	movlw	low _TMR5_DefaultInterruptHandler
 17770  1267  0020               	movlb	0	; select bank0
 17771  1268  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler
 17772  1269  3000               	movlw	high _TMR5_DefaultInterruptHandler
 17773  126A  00A1               	movwf	TMR5_SetInterruptHandler@InterruptHandler+1
 17774  126B  3190  2060  3192   	fcall	_TMR5_SetInterruptHandler
 17775  126E                     l5129:
 17776                           
 17777                           ;tmr5.c: 96: T5CON = 0x15;
 17778  126E  3015               	movlw	21
 17779  126F  0024               	movlb	4	; select bank4
 17780  1270  009A               	movwf	26	;volatile
 17781  1271                     l643:
 17782  1271  0008               	return
 17783  1272                     __end_of_TMR5_Initialize:
 17784                           
 17785                           	psect	text51
 17786  1060                     __ptext51:	
 17787 ;; *************** function _TMR5_SetInterruptHandler *****************
 17788 ;; Defined at:
 17789 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 17790 ;; Parameters:    Size  Location     Type
 17791 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 17792 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
 17793 ;; Auto vars:     Size  Location     Type
 17794 ;;		None
 17795 ;; Return value:  Size  Location     Type
 17796 ;;                  1    wreg      void 
 17797 ;; Registers used:
 17798 ;;		wreg
 17799 ;; Tracked objects:
 17800 ;;		On entry : 0/0
 17801 ;;		On exit  : 0/0
 17802 ;;		Unchanged: 0/0
 17803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17804 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17807 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17808 ;;Total ram usage:        2 bytes
 17809 ;; Hardware stack levels used:    1
 17810 ;; Hardware stack levels required when called:    5
 17811 ;; This function calls:
 17812 ;;		Nothing
 17813 ;; This function is called by:
 17814 ;;		_TMR5_Initialize
 17815 ;;		_main
 17816 ;; This function uses a non-reentrant model
 17817 ;;
 17818                           
 17819                           
 17820                           ;psect for function _TMR5_SetInterruptHandler
 17821  1060                     _TMR5_SetInterruptHandler:
 17822  1060                     l4803:	
 17823                           ;incstack = 0
 17824                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
 17825                           
 17826                           
 17827                           ;tmr5.c: 183: TMR5_InterruptHandler = InterruptHandler;
 17828  1060  0020               	movlb	0	; select bank0
 17829  1061  0821               	movf	TMR5_SetInterruptHandler@InterruptHandler+1,w
 17830  1062  0021               	movlb	1	; select bank1
 17831  1063  00DE               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
 17832  1064  0020               	movlb	0	; select bank0
 17833  1065  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler,w
 17834  1066  0021               	movlb	1	; select bank1
 17835  1067  00DD               	movwf	_TMR5_InterruptHandler^(0+128)
 17836  1068                     l676:
 17837  1068  0008               	return
 17838  1069                     __end_of_TMR5_SetInterruptHandler:
 17839                           
 17840                           	psect	text52
 17841  10AC                     __ptext52:	
 17842 ;; *************** function _TMR2_Initialize *****************
 17843 ;; Defined at:
 17844 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 17845 ;; Parameters:    Size  Location     Type
 17846 ;;		None
 17847 ;; Auto vars:     Size  Location     Type
 17848 ;;		None
 17849 ;; Return value:  Size  Location     Type
 17850 ;;                  1    wreg      void 
 17851 ;; Registers used:
 17852 ;;		wreg, status,2
 17853 ;; Tracked objects:
 17854 ;;		On entry : 0/0
 17855 ;;		On exit  : 0/0
 17856 ;;		Unchanged: 0/0
 17857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17862 ;;Total ram usage:        0 bytes
 17863 ;; Hardware stack levels used:    1
 17864 ;; Hardware stack levels required when called:    5
 17865 ;; This function calls:
 17866 ;;		Nothing
 17867 ;; This function is called by:
 17868 ;;		_SYSTEM_Initialize
 17869 ;; This function uses a non-reentrant model
 17870 ;;
 17871                           
 17872                           
 17873                           ;psect for function _TMR2_Initialize
 17874  10AC                     _TMR2_Initialize:
 17875  10AC                     l5131:	
 17876                           ;incstack = 0
 17877                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 17878                           
 17879                           
 17880                           ;tmr2.c: 67: T2CLKCON = 0x01;
 17881  10AC  3001               	movlw	1
 17882  10AD  0025               	movlb	5	; select bank5
 17883  10AE  0090               	movwf	16	;volatile
 17884  10AF                     l5133:
 17885                           
 17886                           ;tmr2.c: 70: T2HLT = 0x00;
 17887  10AF  018F               	clrf	15	;volatile
 17888  10B0                     l5135:
 17889                           
 17890                           ;tmr2.c: 73: T2RST = 0x00;
 17891  10B0  0191               	clrf	17	;volatile
 17892                           
 17893                           ;tmr2.c: 76: T2PR = 0xFF;
 17894  10B1  30FF               	movlw	255
 17895  10B2  008D               	movwf	13	;volatile
 17896  10B3                     l5137:
 17897                           
 17898                           ;tmr2.c: 79: T2TMR = 0x00;
 17899  10B3  018C               	clrf	12	;volatile
 17900  10B4                     l5139:
 17901                           
 17902                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 17903  10B4  002E               	movlb	14	; select bank14
 17904  10B5  1090               	bcf	16,1	;volatile
 17905  10B6                     l5141:
 17906                           
 17907                           ;tmr2.c: 85: T2CON = 0x80;
 17908  10B6  3080               	movlw	128
 17909  10B7  0025               	movlb	5	; select bank5
 17910  10B8  008E               	movwf	14	;volatile
 17911  10B9                     l720:
 17912  10B9  0008               	return
 17913  10BA                     __end_of_TMR2_Initialize:
 17914                           
 17915                           	psect	text53
 17916  1234                     __ptext53:	
 17917 ;; *************** function _TMR1_Initialize *****************
 17918 ;; Defined at:
 17919 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 17920 ;; Parameters:    Size  Location     Type
 17921 ;;		None
 17922 ;; Auto vars:     Size  Location     Type
 17923 ;;		None
 17924 ;; Return value:  Size  Location     Type
 17925 ;;                  1    wreg      void 
 17926 ;; Registers used:
 17927 ;;		wreg, status,2, status,0, pclath, cstack
 17928 ;; Tracked objects:
 17929 ;;		On entry : 0/0
 17930 ;;		On exit  : 0/0
 17931 ;;		Unchanged: 0/0
 17932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17937 ;;Total ram usage:        0 bytes
 17938 ;; Hardware stack levels used:    1
 17939 ;; Hardware stack levels required when called:    6
 17940 ;; This function calls:
 17941 ;;		_TMR1_SetInterruptHandler
 17942 ;; This function is called by:
 17943 ;;		_SYSTEM_Initialize
 17944 ;; This function uses a non-reentrant model
 17945 ;;
 17946                           
 17947                           
 17948                           ;psect for function _TMR1_Initialize
 17949  1234                     _TMR1_Initialize:
 17950  1234                     l5143:	
 17951                           ;incstack = 0
 17952                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17953                           
 17954                           
 17955                           ;tmr1.c: 69: T1GCON = 0x00;
 17956  1234  0024               	movlb	4	; select bank4
 17957  1235  018F               	clrf	15	;volatile
 17958                           
 17959                           ;tmr1.c: 72: T1GATE = 0x00;
 17960  1236  0190               	clrf	16	;volatile
 17961  1237                     l5145:
 17962                           
 17963                           ;tmr1.c: 75: T1CLK = 0x04;
 17964  1237  3004               	movlw	4
 17965  1238  0091               	movwf	17	;volatile
 17966  1239                     l5147:
 17967                           
 17968                           ;tmr1.c: 78: TMR1H = 0x86;
 17969  1239  3086               	movlw	134
 17970  123A  008D               	movwf	13	;volatile
 17971  123B                     l5149:
 17972                           
 17973                           ;tmr1.c: 81: TMR1L = 0xE8;
 17974  123B  30E8               	movlw	232
 17975  123C  008C               	movwf	12	;volatile
 17976  123D                     l5151:
 17977                           
 17978                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17979  123D  080D               	movf	13,w	;volatile
 17980  123E  0021               	movlb	1	; select bank1
 17981  123F  00E4               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 17982  1240  0024               	movlb	4	; select bank4
 17983  1241  080C               	movf	12,w	;volatile
 17984  1242  0021               	movlb	1	; select bank1
 17985  1243  00E3               	movwf	_timer1ReloadVal^(0+128)	;volatile
 17986  1244                     l5153:
 17987                           
 17988                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 17989  1244  002E               	movlb	14	; select bank14
 17990  1245  1010               	bcf	16,0	;volatile
 17991  1246                     l5155:
 17992                           
 17993                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 17994  1246  141A               	bsf	26,0	;volatile
 17995  1247                     l5157:
 17996                           
 17997                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 17998  1247  3001               	movlw	low _TMR1_DefaultInterruptHandler
 17999  1248  0020               	movlb	0	; select bank0
 18000  1249  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 18001  124A  3008               	movlw	high _TMR1_DefaultInterruptHandler
 18002  124B  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 18003  124C  3190  2057  3192   	fcall	_TMR1_SetInterruptHandler
 18004  124F                     l5159:
 18005                           
 18006                           ;tmr1.c: 96: T1CON = 0x05;
 18007  124F  3005               	movlw	5
 18008  1250  0024               	movlb	4	; select bank4
 18009  1251  008E               	movwf	14	;volatile
 18010  1252                     l415:
 18011  1252  0008               	return
 18012  1253                     __end_of_TMR1_Initialize:
 18013                           
 18014                           	psect	text54
 18015  1057                     __ptext54:	
 18016 ;; *************** function _TMR1_SetInterruptHandler *****************
 18017 ;; Defined at:
 18018 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 18019 ;; Parameters:    Size  Location     Type
 18020 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 18021 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
 18022 ;; Auto vars:     Size  Location     Type
 18023 ;;		None
 18024 ;; Return value:  Size  Location     Type
 18025 ;;                  1    wreg      void 
 18026 ;; Registers used:
 18027 ;;		wreg
 18028 ;; Tracked objects:
 18029 ;;		On entry : 0/0
 18030 ;;		On exit  : 0/0
 18031 ;;		Unchanged: 0/0
 18032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18036 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18037 ;;Total ram usage:        2 bytes
 18038 ;; Hardware stack levels used:    1
 18039 ;; Hardware stack levels required when called:    5
 18040 ;; This function calls:
 18041 ;;		Nothing
 18042 ;; This function is called by:
 18043 ;;		_TMR1_Initialize
 18044 ;;		_main
 18045 ;; This function uses a non-reentrant model
 18046 ;;
 18047                           
 18048                           
 18049                           ;psect for function _TMR1_SetInterruptHandler
 18050  1057                     _TMR1_SetInterruptHandler:
 18051  1057                     l4787:	
 18052                           ;incstack = 0
 18053                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 18054                           
 18055                           
 18056                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 18057  1057  0020               	movlb	0	; select bank0
 18058  1058  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 18059  1059  0021               	movlb	1	; select bank1
 18060  105A  00E2               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 18061  105B  0020               	movlb	0	; select bank0
 18062  105C  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 18063  105D  0021               	movlb	1	; select bank1
 18064  105E  00E1               	movwf	_TMR1_InterruptHandler^(0+128)
 18065  105F                     l445:
 18066  105F  0008               	return
 18067  1060                     __end_of_TMR1_SetInterruptHandler:
 18068                           
 18069                           	psect	text55
 18070  1091                     __ptext55:	
 18071 ;; *************** function _PWM6_Initialize *****************
 18072 ;; Defined at:
 18073 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 18074 ;; Parameters:    Size  Location     Type
 18075 ;;		None
 18076 ;; Auto vars:     Size  Location     Type
 18077 ;;		None
 18078 ;; Return value:  Size  Location     Type
 18079 ;;                  1    wreg      void 
 18080 ;; Registers used:
 18081 ;;		wreg, status,2, status,0
 18082 ;; Tracked objects:
 18083 ;;		On entry : 0/0
 18084 ;;		On exit  : 0/0
 18085 ;;		Unchanged: 0/0
 18086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18091 ;;Total ram usage:        0 bytes
 18092 ;; Hardware stack levels used:    1
 18093 ;; Hardware stack levels required when called:    5
 18094 ;; This function calls:
 18095 ;;		Nothing
 18096 ;; This function is called by:
 18097 ;;		_SYSTEM_Initialize
 18098 ;; This function uses a non-reentrant model
 18099 ;;
 18100                           
 18101                           
 18102                           ;psect for function _PWM6_Initialize
 18103  1091                     _PWM6_Initialize:
 18104  1091                     l5103:	
 18105                           ;incstack = 0
 18106                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 18107                           
 18108                           
 18109                           ;pwm6.c: 62: PWM6CON = 0x80;
 18110  1091  3080               	movlw	128
 18111  1092  0027               	movlb	7	; select bank7
 18112  1093  008E               	movwf	14	;volatile
 18113                           
 18114                           ;pwm6.c: 65: PWM6DCH = 0xFF;
 18115  1094  30FF               	movlw	255
 18116  1095  008D               	movwf	13	;volatile
 18117                           
 18118                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 18119  1096  30C0               	movlw	192
 18120  1097  008C               	movwf	12	;volatile
 18121  1098                     l5105:
 18122                           
 18123                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 18124  1098  0024               	movlb	4	; select bank4
 18125  1099  081F               	movf	31,w	;volatile
 18126  109A  39F3               	andlw	-13
 18127  109B  3804               	iorlw	4
 18128  109C  009F               	movwf	31	;volatile
 18129  109D                     l690:
 18130  109D  0008               	return
 18131  109E                     __end_of_PWM6_Initialize:
 18132                           
 18133                           	psect	text56
 18134  101A                     __ptext56:	
 18135 ;; *************** function _PMD_Initialize *****************
 18136 ;; Defined at:
 18137 ;;		line 78 in file "mcc_generated_files/mcc.c"
 18138 ;; Parameters:    Size  Location     Type
 18139 ;;		None
 18140 ;; Auto vars:     Size  Location     Type
 18141 ;;		None
 18142 ;; Return value:  Size  Location     Type
 18143 ;;                  1    wreg      void 
 18144 ;; Registers used:
 18145 ;;		status,2
 18146 ;; Tracked objects:
 18147 ;;		On entry : 0/0
 18148 ;;		On exit  : 0/0
 18149 ;;		Unchanged: 0/0
 18150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18155 ;;Total ram usage:        0 bytes
 18156 ;; Hardware stack levels used:    1
 18157 ;; Hardware stack levels required when called:    5
 18158 ;; This function calls:
 18159 ;;		Nothing
 18160 ;; This function is called by:
 18161 ;;		_SYSTEM_Initialize
 18162 ;; This function uses a non-reentrant model
 18163 ;;
 18164                           
 18165                           
 18166                           ;psect for function _PMD_Initialize
 18167  101A                     _PMD_Initialize:
 18168  101A                     l5093:	
 18169                           ;incstack = 0
 18170                           ; Regs used in _PMD_Initialize: [status,2]
 18171                           
 18172                           
 18173                           ;mcc.c: 81: PMD0 = 0x00;
 18174  101A  002F               	movlb	15	; select bank15
 18175  101B  0196               	clrf	22	;volatile
 18176                           
 18177                           ;mcc.c: 83: PMD1 = 0x00;
 18178  101C  0197               	clrf	23	;volatile
 18179                           
 18180                           ;mcc.c: 85: PMD2 = 0x00;
 18181  101D  0198               	clrf	24	;volatile
 18182                           
 18183                           ;mcc.c: 87: PMD3 = 0x00;
 18184  101E  0199               	clrf	25	;volatile
 18185                           
 18186                           ;mcc.c: 89: PMD4 = 0x00;
 18187  101F  019A               	clrf	26	;volatile
 18188                           
 18189                           ;mcc.c: 91: PMD5 = 0x00;
 18190  1020  019B               	clrf	27	;volatile
 18191  1021                     l190:
 18192  1021  0008               	return
 18193  1022                     __end_of_PMD_Initialize:
 18194                           
 18195                           	psect	text57
 18196  164B                     __ptext57:	
 18197 ;; *************** function _PIN_MANAGER_Initialize *****************
 18198 ;; Defined at:
 18199 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 18200 ;; Parameters:    Size  Location     Type
 18201 ;;		None
 18202 ;; Auto vars:     Size  Location     Type
 18203 ;;		None
 18204 ;; Return value:  Size  Location     Type
 18205 ;;                  1    wreg      void 
 18206 ;; Registers used:
 18207 ;;		wreg, status,2
 18208 ;; Tracked objects:
 18209 ;;		On entry : 0/0
 18210 ;;		On exit  : 0/0
 18211 ;;		Unchanged: 0/0
 18212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18217 ;;Total ram usage:        0 bytes
 18218 ;; Hardware stack levels used:    1
 18219 ;; Hardware stack levels required when called:    5
 18220 ;; This function calls:
 18221 ;;		Nothing
 18222 ;; This function is called by:
 18223 ;;		_SYSTEM_Initialize
 18224 ;; This function uses a non-reentrant model
 18225 ;;
 18226                           
 18227                           
 18228                           ;psect for function _PIN_MANAGER_Initialize
 18229  164B                     _PIN_MANAGER_Initialize:
 18230  164B                     l5045:	
 18231                           ;incstack = 0
 18232                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 18233                           
 18234                           
 18235                           ;pin_manager.c: 62: LATE = 0x00;
 18236  164B  0020               	movlb	0	; select bank0
 18237  164C  019A               	clrf	26	;volatile
 18238                           
 18239                           ;pin_manager.c: 63: LATD = 0x00;
 18240  164D  0199               	clrf	25	;volatile
 18241                           
 18242                           ;pin_manager.c: 64: LATA = 0x00;
 18243  164E  0196               	clrf	22	;volatile
 18244                           
 18245                           ;pin_manager.c: 65: LATB = 0x00;
 18246  164F  0197               	clrf	23	;volatile
 18247                           
 18248                           ;pin_manager.c: 66: LATC = 0x00;
 18249  1650  0198               	clrf	24	;volatile
 18250  1651                     l5047:
 18251                           
 18252                           ;pin_manager.c: 71: TRISE = 0x07;
 18253  1651  3007               	movlw	7
 18254  1652  0095               	movwf	21	;volatile
 18255  1653                     l5049:
 18256                           
 18257                           ;pin_manager.c: 72: TRISA = 0x0F;
 18258  1653  300F               	movlw	15
 18259  1654  0091               	movwf	17	;volatile
 18260  1655                     l5051:
 18261                           
 18262                           ;pin_manager.c: 73: TRISB = 0xFF;
 18263  1655  30FF               	movlw	255
 18264  1656  0092               	movwf	18	;volatile
 18265  1657                     l5053:
 18266                           
 18267                           ;pin_manager.c: 74: TRISC = 0xBF;
 18268  1657  30BF               	movlw	191
 18269  1658  0093               	movwf	19	;volatile
 18270  1659                     l5055:
 18271                           
 18272                           ;pin_manager.c: 75: TRISD = 0xFF;
 18273  1659  30FF               	movlw	255
 18274  165A  0094               	movwf	20	;volatile
 18275  165B                     l5057:
 18276                           
 18277                           ;pin_manager.c: 80: ANSELD = 0xFF;
 18278  165B  30FF               	movlw	255
 18279  165C  003E               	movlb	30	; select bank30
 18280  165D  00D9               	movwf	89	;volatile
 18281  165E                     l5059:
 18282                           
 18283                           ;pin_manager.c: 81: ANSELC = 0x47;
 18284  165E  3047               	movlw	71
 18285  165F  00CE               	movwf	78	;volatile
 18286  1660                     l5061:
 18287                           
 18288                           ;pin_manager.c: 82: ANSELB = 0xEF;
 18289  1660  30EF               	movlw	239
 18290  1661  00C3               	movwf	67	;volatile
 18291  1662                     l5063:
 18292                           
 18293                           ;pin_manager.c: 83: ANSELE = 0x07;
 18294  1662  3007               	movlw	7
 18295  1663  00E4               	movwf	100	;volatile
 18296  1664                     l5065:
 18297                           
 18298                           ;pin_manager.c: 84: ANSELA = 0x4F;
 18299  1664  304F               	movlw	79
 18300  1665  00B8               	movwf	56	;volatile
 18301                           
 18302                           ;pin_manager.c: 89: WPUD = 0x00;
 18303  1666  01DA               	clrf	90	;volatile
 18304                           
 18305                           ;pin_manager.c: 90: WPUE = 0x00;
 18306  1667  01E5               	clrf	101	;volatile
 18307                           
 18308                           ;pin_manager.c: 91: WPUB = 0x00;
 18309  1668  01C4               	clrf	68	;volatile
 18310                           
 18311                           ;pin_manager.c: 92: WPUA = 0x00;
 18312  1669  01B9               	clrf	57	;volatile
 18313                           
 18314                           ;pin_manager.c: 93: WPUC = 0x00;
 18315  166A  01CF               	clrf	79	;volatile
 18316                           
 18317                           ;pin_manager.c: 98: ODCONE = 0x00;
 18318  166B  01E6               	clrf	102	;volatile
 18319                           
 18320                           ;pin_manager.c: 99: ODCONA = 0x00;
 18321  166C  01BA               	clrf	58	;volatile
 18322                           
 18323                           ;pin_manager.c: 100: ODCONB = 0x00;
 18324  166D  01C5               	clrf	69	;volatile
 18325                           
 18326                           ;pin_manager.c: 101: ODCONC = 0x00;
 18327  166E  01D0               	clrf	80	;volatile
 18328                           
 18329                           ;pin_manager.c: 102: ODCOND = 0x00;
 18330  166F  01DB               	clrf	91	;volatile
 18331  1670                     l5067:
 18332                           
 18333                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 18334  1670  30FF               	movlw	255
 18335  1671  00BB               	movwf	59	;volatile
 18336  1672                     l5069:
 18337                           
 18338                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 18339  1672  30FF               	movlw	255
 18340  1673  00C6               	movwf	70	;volatile
 18341  1674                     l5071:
 18342                           
 18343                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 18344  1674  30FF               	movlw	255
 18345  1675  00D1               	movwf	81	;volatile
 18346  1676                     l5073:
 18347                           
 18348                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 18349  1676  30FF               	movlw	255
 18350  1677  00DC               	movwf	92	;volatile
 18351  1678                     l5075:
 18352                           
 18353                           ;pin_manager.c: 111: SLRCONE = 0x07;
 18354  1678  3007               	movlw	7
 18355  1679  00E7               	movwf	103	;volatile
 18356  167A                     l5077:
 18357                           
 18358                           ;pin_manager.c: 120: INTPPS = 0x0C;
 18359  167A  300C               	movlw	12
 18360  167B  003D               	movlb	29	; select bank29
 18361  167C  0090               	movwf	16	;volatile
 18362  167D                     l5079:
 18363                           
 18364                           ;pin_manager.c: 121: RXPPS = 0x17;
 18365  167D  3017               	movlw	23
 18366  167E  00CB               	movwf	75	;volatile
 18367  167F                     l5081:
 18368                           
 18369                           ;pin_manager.c: 122: SSP1CLKPPS = 0x13;
 18370  167F  3013               	movlw	19
 18371  1680  00C5               	movwf	69	;volatile
 18372  1681                     l5083:
 18373                           
 18374                           ;pin_manager.c: 123: RC3PPS = 0x14;
 18375  1681  3014               	movlw	20
 18376  1682  003E               	movlb	30	; select bank30
 18377  1683  00A3               	movwf	35	;volatile
 18378  1684                     l5085:
 18379                           
 18380                           ;pin_manager.c: 124: RC4PPS = 0x15;
 18381  1684  3015               	movlw	21
 18382  1685  00A4               	movwf	36	;volatile
 18383  1686                     l5087:
 18384                           
 18385                           ;pin_manager.c: 125: RA6PPS = 0x0E;
 18386  1686  300E               	movlw	14
 18387  1687  0096               	movwf	22	;volatile
 18388  1688                     l5089:
 18389                           
 18390                           ;pin_manager.c: 126: RC6PPS = 0x10;
 18391  1688  3010               	movlw	16
 18392  1689  00A6               	movwf	38	;volatile
 18393  168A                     l5091:
 18394                           
 18395                           ;pin_manager.c: 127: SSP1DATPPS = 0x14;
 18396  168A  3014               	movlw	20
 18397  168B  003D               	movlb	29	; select bank29
 18398  168C  00C6               	movwf	70	;volatile
 18399  168D                     l128:
 18400  168D  0008               	return
 18401  168E                     __end_of_PIN_MANAGER_Initialize:
 18402                           
 18403                           	psect	text58
 18404  104E                     __ptext58:	
 18405 ;; *************** function _OSCILLATOR_Initialize *****************
 18406 ;; Defined at:
 18407 ;;		line 64 in file "mcc_generated_files/mcc.c"
 18408 ;; Parameters:    Size  Location     Type
 18409 ;;		None
 18410 ;; Auto vars:     Size  Location     Type
 18411 ;;		None
 18412 ;; Return value:  Size  Location     Type
 18413 ;;                  1    wreg      void 
 18414 ;; Registers used:
 18415 ;;		wreg, status,2
 18416 ;; Tracked objects:
 18417 ;;		On entry : 0/0
 18418 ;;		On exit  : 0/0
 18419 ;;		Unchanged: 0/0
 18420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18425 ;;Total ram usage:        0 bytes
 18426 ;; Hardware stack levels used:    1
 18427 ;; Hardware stack levels required when called:    5
 18428 ;; This function calls:
 18429 ;;		Nothing
 18430 ;; This function is called by:
 18431 ;;		_SYSTEM_Initialize
 18432 ;; This function uses a non-reentrant model
 18433 ;;
 18434                           
 18435                           
 18436                           ;psect for function _OSCILLATOR_Initialize
 18437  104E                     _OSCILLATOR_Initialize:
 18438  104E                     l5095:	
 18439                           ;incstack = 0
 18440                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 18441                           
 18442                           
 18443                           ;mcc.c: 67: OSCCON1 = 0x62;
 18444  104E  3062               	movlw	98
 18445  104F  0031               	movlb	17	; select bank17
 18446  1050  008D               	movwf	13	;volatile
 18447  1051                     l5097:
 18448                           
 18449                           ;mcc.c: 69: OSCCON3 = 0x00;
 18450  1051  018F               	clrf	15	;volatile
 18451  1052                     l5099:
 18452                           
 18453                           ;mcc.c: 71: OSCEN = 0x00;
 18454  1052  0191               	clrf	17	;volatile
 18455                           
 18456                           ;mcc.c: 73: OSCFRQ = 0x02;
 18457  1053  3002               	movlw	2
 18458  1054  0093               	movwf	19	;volatile
 18459  1055                     l5101:
 18460                           
 18461                           ;mcc.c: 75: OSCTUNE = 0x00;
 18462  1055  0192               	clrf	18	;volatile
 18463  1056                     l187:
 18464  1056  0008               	return
 18465  1057                     __end_of_OSCILLATOR_Initialize:
 18466                           
 18467                           	psect	text59
 18468  109E                     __ptext59:	
 18469 ;; *************** function _EXT_INT_Initialize *****************
 18470 ;; Defined at:
 18471 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 18472 ;; Parameters:    Size  Location     Type
 18473 ;;		None
 18474 ;; Auto vars:     Size  Location     Type
 18475 ;;		None
 18476 ;; Return value:  Size  Location     Type
 18477 ;;                  1    wreg      void 
 18478 ;; Registers used:
 18479 ;;		wreg, status,2, status,0, pclath, cstack
 18480 ;; Tracked objects:
 18481 ;;		On entry : 0/0
 18482 ;;		On exit  : 0/0
 18483 ;;		Unchanged: 0/0
 18484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18489 ;;Total ram usage:        0 bytes
 18490 ;; Hardware stack levels used:    1
 18491 ;; Hardware stack levels required when called:    6
 18492 ;; This function calls:
 18493 ;;		_INT_SetInterruptHandler
 18494 ;; This function is called by:
 18495 ;;		_SYSTEM_Initialize
 18496 ;; This function uses a non-reentrant model
 18497 ;;
 18498                           
 18499                           
 18500                           ;psect for function _EXT_INT_Initialize
 18501  109E                     _EXT_INT_Initialize:
 18502  109E                     l5161:	
 18503                           ;incstack = 0
 18504                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18505                           
 18506                           
 18507                           ;ext_int.c: 64: (PIR0bits.INTF = 0);
 18508  109E  002E               	movlb	14	; select bank14
 18509  109F  100C               	bcf	12,0	;volatile
 18510                           
 18511                           ;ext_int.c: 66: (INTCONbits.INTEDG = 1);
 18512  10A0  140B               	bsf	11,0	;volatile
 18513  10A1                     l5163:
 18514                           
 18515                           ;ext_int.c: 68: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
 18516  10A1  3000               	movlw	low _INT_DefaultInterruptHandler
 18517  10A2  0020               	movlb	0	; select bank0
 18518  10A3  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
 18519  10A4  3008               	movlw	high _INT_DefaultInterruptHandler
 18520  10A5  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 18521  10A6  3190  2045  3190   	fcall	_INT_SetInterruptHandler
 18522  10A9                     l5165:
 18523                           
 18524                           ;ext_int.c: 69: (PIE0bits.INTE = 1);
 18525  10A9  002E               	movlb	14	; select bank14
 18526  10AA  1416               	bsf	22,0	;volatile
 18527  10AB                     l833:
 18528  10AB  0008               	return
 18529  10AC                     __end_of_EXT_INT_Initialize:
 18530                           
 18531                           	psect	text60
 18532  1045                     __ptext60:	
 18533 ;; *************** function _INT_SetInterruptHandler *****************
 18534 ;; Defined at:
 18535 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 18536 ;; Parameters:    Size  Location     Type
 18537 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 18538 ;;		 -> S1_ISR(1), INT_DefaultInterruptHandler(1), 
 18539 ;; Auto vars:     Size  Location     Type
 18540 ;;		None
 18541 ;; Return value:  Size  Location     Type
 18542 ;;                  1    wreg      void 
 18543 ;; Registers used:
 18544 ;;		wreg
 18545 ;; Tracked objects:
 18546 ;;		On entry : 0/0
 18547 ;;		On exit  : 0/0
 18548 ;;		Unchanged: 0/0
 18549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18550 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18553 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18554 ;;Total ram usage:        2 bytes
 18555 ;; Hardware stack levels used:    1
 18556 ;; Hardware stack levels required when called:    5
 18557 ;; This function calls:
 18558 ;;		Nothing
 18559 ;; This function is called by:
 18560 ;;		_EXT_INT_Initialize
 18561 ;;		_main
 18562 ;; This function uses a non-reentrant model
 18563 ;;
 18564                           
 18565                           
 18566                           ;psect for function _INT_SetInterruptHandler
 18567  1045                     _INT_SetInterruptHandler:
 18568  1045                     l4809:	
 18569                           ;incstack = 0
 18570                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 18571                           
 18572                           
 18573                           ;ext_int.c: 51: INT_InterruptHandler = InterruptHandler;
 18574  1045  0020               	movlb	0	; select bank0
 18575  1046  0821               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 18576  1047  0021               	movlb	1	; select bank1
 18577  1048  00DC               	movwf	(_INT_InterruptHandler+1)^(0+128)
 18578  1049  0020               	movlb	0	; select bank0
 18579  104A  0820               	movf	INT_SetInterruptHandler@InterruptHandler,w
 18580  104B  0021               	movlb	1	; select bank1
 18581  104C  00DB               	movwf	_INT_InterruptHandler^(0+128)
 18582  104D                     l827:
 18583  104D  0008               	return
 18584  104E                     __end_of_INT_SetInterruptHandler:
 18585                           
 18586                           	psect	text61
 18587  141A                     __ptext61:	
 18588 ;; *************** function _EUSART_Initialize *****************
 18589 ;; Defined at:
 18590 ;;		line 75 in file "mcc_generated_files/eusart.c"
 18591 ;; Parameters:    Size  Location     Type
 18592 ;;		None
 18593 ;; Auto vars:     Size  Location     Type
 18594 ;;		None
 18595 ;; Return value:  Size  Location     Type
 18596 ;;                  1    wreg      void 
 18597 ;; Registers used:
 18598 ;;		wreg, status,2, status,0, pclath, cstack
 18599 ;; Tracked objects:
 18600 ;;		On entry : 0/0
 18601 ;;		On exit  : 0/0
 18602 ;;		Unchanged: 0/0
 18603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18606 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18607 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18608 ;;Total ram usage:        1 bytes
 18609 ;; Hardware stack levels used:    1
 18610 ;; Hardware stack levels required when called:    6
 18611 ;; This function calls:
 18612 ;;		_EUSART_SetRxInterruptHandler
 18613 ;;		_EUSART_SetTxInterruptHandler
 18614 ;; This function is called by:
 18615 ;;		_SYSTEM_Initialize
 18616 ;; This function uses a non-reentrant model
 18617 ;;
 18618                           
 18619                           
 18620                           ;psect for function _EUSART_Initialize
 18621  141A                     _EUSART_Initialize:
 18622  141A                     l5167:	
 18623                           ;incstack = 0
 18624                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18625                           
 18626                           
 18627                           ;eusart.c: 78: PIE3bits.RCIE = 0;
 18628  141A  002E               	movlb	14	; select bank14
 18629  141B  1299               	bcf	25,5	;volatile
 18630  141C                     l5169:
 18631                           
 18632                           ;eusart.c: 79: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 18633  141C  30F1               	movlw	low _EUSART_Receive_ISR
 18634  141D  0020               	movlb	0	; select bank0
 18635  141E  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 18636  141F  3012               	movlw	high _EUSART_Receive_ISR
 18637  1420  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 18638  1421  3190  2033  3194   	fcall	_EUSART_SetRxInterruptHandler
 18639  1424                     l5171:
 18640                           
 18641                           ;eusart.c: 80: PIE3bits.TXIE = 0;
 18642  1424  002E               	movlb	14	; select bank14
 18643  1425  1219               	bcf	25,4	;volatile
 18644                           
 18645                           ;eusart.c: 81: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
 18646  1426  305A               	movlw	low _EUSART_Transmit_ISR
 18647  1427  0020               	movlb	0	; select bank0
 18648  1428  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 18649  1429  3013               	movlw	high _EUSART_Transmit_ISR
 18650  142A  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 18651  142B  3190  203C  3194   	fcall	_EUSART_SetTxInterruptHandler
 18652  142E                     l5173:
 18653                           
 18654                           ;eusart.c: 85: BAUD1CON = 0x08;
 18655  142E  3008               	movlw	8
 18656  142F  0022               	movlb	2	; select bank2
 18657  1430  009F               	movwf	31	;volatile
 18658  1431                     l5175:
 18659                           
 18660                           ;eusart.c: 88: RC1STA = 0x90;
 18661  1431  3090               	movlw	144
 18662  1432  009D               	movwf	29	;volatile
 18663  1433                     l5177:
 18664                           
 18665                           ;eusart.c: 91: TX1STA = 0x24;
 18666  1433  3024               	movlw	36
 18667  1434  009E               	movwf	30	;volatile
 18668  1435                     l5179:
 18669                           
 18670                           ;eusart.c: 94: SP1BRGL = 0x19;
 18671  1435  3019               	movlw	25
 18672  1436  009B               	movwf	27	;volatile
 18673  1437                     l5181:
 18674                           
 18675                           ;eusart.c: 97: SP1BRGH = 0x00;
 18676  1437  019C               	clrf	28	;volatile
 18677  1438                     l5183:
 18678                           
 18679                           ;eusart.c: 101: eusartTxHead = 0;
 18680  1438  0020               	movlb	0	; select bank0
 18681  1439  01EE               	clrf	_eusartTxHead	;volatile
 18682  143A                     l5185:
 18683                           
 18684                           ;eusart.c: 102: eusartTxTail = 0;
 18685  143A  01ED               	clrf	_eusartTxTail	;volatile
 18686  143B                     l5187:
 18687                           
 18688                           ;eusart.c: 103: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 18689  143B  3040               	movlw	64
 18690  143C  00A2               	movwf	??_EUSART_Initialize
 18691  143D  0822               	movf	??_EUSART_Initialize,w
 18692  143E  0021               	movlb	1	; select bank1
 18693  143F  00E5               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 18694  1440                     l5189:
 18695                           
 18696                           ;eusart.c: 105: eusartRxHead = 0;
 18697  1440  0020               	movlb	0	; select bank0
 18698  1441  01EC               	clrf	_eusartRxHead	;volatile
 18699  1442                     l5191:
 18700                           
 18701                           ;eusart.c: 106: eusartRxTail = 0;
 18702  1442  0021               	movlb	1	; select bank1
 18703  1443  01DA               	clrf	_eusartRxTail^(0+128)	;volatile
 18704  1444                     l5193:
 18705                           
 18706                           ;eusart.c: 107: eusartRxCount = 0;
 18707  1444  01D9               	clrf	_eusartRxCount^(0+128)	;volatile
 18708  1445                     l5195:
 18709                           
 18710                           ;eusart.c: 110: PIE3bits.RCIE = 1;
 18711  1445  002E               	movlb	14	; select bank14
 18712  1446  1699               	bsf	25,5	;volatile
 18713  1447                     l884:
 18714  1447  0008               	return
 18715  1448                     __end_of_EUSART_Initialize:
 18716                           
 18717                           	psect	text62
 18718  103C                     __ptext62:	
 18719 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 18720 ;; Defined at:
 18721 ;;		line 220 in file "mcc_generated_files/eusart.c"
 18722 ;; Parameters:    Size  Location     Type
 18723 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 18724 ;;		 -> EUSART_Transmit_ISR(1), 
 18725 ;; Auto vars:     Size  Location     Type
 18726 ;;		None
 18727 ;; Return value:  Size  Location     Type
 18728 ;;                  1    wreg      void 
 18729 ;; Registers used:
 18730 ;;		wreg
 18731 ;; Tracked objects:
 18732 ;;		On entry : 0/0
 18733 ;;		On exit  : 0/0
 18734 ;;		Unchanged: 0/0
 18735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18736 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18739 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18740 ;;Total ram usage:        2 bytes
 18741 ;; Hardware stack levels used:    1
 18742 ;; Hardware stack levels required when called:    5
 18743 ;; This function calls:
 18744 ;;		Nothing
 18745 ;; This function is called by:
 18746 ;;		_EUSART_Initialize
 18747 ;; This function uses a non-reentrant model
 18748 ;;
 18749                           
 18750                           
 18751                           ;psect for function _EUSART_SetTxInterruptHandler
 18752  103C                     _EUSART_SetTxInterruptHandler:
 18753  103C                     l4813:	
 18754                           ;incstack = 0
 18755                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 18756                           
 18757                           
 18758                           ;eusart.c: 221: EUSART_TxDefaultInterruptHandler = interruptHandler;
 18759  103C  0020               	movlb	0	; select bank0
 18760  103D  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 18761  103E  0022               	movlb	2	; select bank2
 18762  103F  00B7               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
 18763  1040  0020               	movlb	0	; select bank0
 18764  1041  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 18765  1042  0022               	movlb	2	; select bank2
 18766  1043  00B6               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
 18767  1044                     l929:
 18768  1044  0008               	return
 18769  1045                     __end_of_EUSART_SetTxInterruptHandler:
 18770                           
 18771                           	psect	text63
 18772  1033                     __ptext63:	
 18773 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 18774 ;; Defined at:
 18775 ;;		line 224 in file "mcc_generated_files/eusart.c"
 18776 ;; Parameters:    Size  Location     Type
 18777 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 18778 ;;		 -> EUSART_Receive_ISR(1), 
 18779 ;; Auto vars:     Size  Location     Type
 18780 ;;		None
 18781 ;; Return value:  Size  Location     Type
 18782 ;;                  1    wreg      void 
 18783 ;; Registers used:
 18784 ;;		wreg
 18785 ;; Tracked objects:
 18786 ;;		On entry : 0/0
 18787 ;;		On exit  : 0/0
 18788 ;;		Unchanged: 0/0
 18789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18790 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18793 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18794 ;;Total ram usage:        2 bytes
 18795 ;; Hardware stack levels used:    1
 18796 ;; Hardware stack levels required when called:    5
 18797 ;; This function calls:
 18798 ;;		Nothing
 18799 ;; This function is called by:
 18800 ;;		_EUSART_Initialize
 18801 ;; This function uses a non-reentrant model
 18802 ;;
 18803                           
 18804                           
 18805                           ;psect for function _EUSART_SetRxInterruptHandler
 18806  1033                     _EUSART_SetRxInterruptHandler:
 18807  1033                     l4811:	
 18808                           ;incstack = 0
 18809                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 18810                           
 18811                           
 18812                           ;eusart.c: 225: EUSART_RxDefaultInterruptHandler = interruptHandler;
 18813  1033  0020               	movlb	0	; select bank0
 18814  1034  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 18815  1035  0022               	movlb	2	; select bank2
 18816  1036  00B5               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
 18817  1037  0020               	movlb	0	; select bank0
 18818  1038  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 18819  1039  0022               	movlb	2	; select bank2
 18820  103A  00B4               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
 18821  103B                     l932:
 18822  103B  0008               	return
 18823  103C                     __end_of_EUSART_SetRxInterruptHandler:
 18824                           
 18825                           	psect	text64
 18826  113E                     __ptext64:	
 18827 ;; *************** function _ADCC_Initialize *****************
 18828 ;; Defined at:
 18829 ;;		line 63 in file "mcc_generated_files/adcc.c"
 18830 ;; Parameters:    Size  Location     Type
 18831 ;;		None
 18832 ;; Auto vars:     Size  Location     Type
 18833 ;;		None
 18834 ;; Return value:  Size  Location     Type
 18835 ;;                  1    wreg      void 
 18836 ;; Registers used:
 18837 ;;		wreg, status,2
 18838 ;; Tracked objects:
 18839 ;;		On entry : 0/0
 18840 ;;		On exit  : 0/0
 18841 ;;		Unchanged: 0/0
 18842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18847 ;;Total ram usage:        0 bytes
 18848 ;; Hardware stack levels used:    1
 18849 ;; Hardware stack levels required when called:    5
 18850 ;; This function calls:
 18851 ;;		Nothing
 18852 ;; This function is called by:
 18853 ;;		_SYSTEM_Initialize
 18854 ;; This function uses a non-reentrant model
 18855 ;;
 18856                           
 18857                           
 18858                           ;psect for function _ADCC_Initialize
 18859  113E                     _ADCC_Initialize:
 18860  113E                     l5107:	
 18861                           ;incstack = 0
 18862                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 18863                           
 18864                           
 18865                           ;adcc.c: 67: ADLTHL = 0x00;
 18866  113E  0022               	movlb	2	; select bank2
 18867  113F  018E               	clrf	14	;volatile
 18868                           
 18869                           ;adcc.c: 69: ADLTHH = 0x00;
 18870  1140  018F               	clrf	15	;volatile
 18871                           
 18872                           ;adcc.c: 71: ADUTHL = 0x00;
 18873  1141  0190               	clrf	16	;volatile
 18874                           
 18875                           ;adcc.c: 73: ADUTHH = 0x00;
 18876  1142  0191               	clrf	17	;volatile
 18877                           
 18878                           ;adcc.c: 75: ADSTPTL = 0x00;
 18879  1143  0192               	clrf	18	;volatile
 18880                           
 18881                           ;adcc.c: 77: ADSTPTH = 0x00;
 18882  1144  0193               	clrf	19	;volatile
 18883                           
 18884                           ;adcc.c: 79: ADRPT = 0x00;
 18885  1145  018D               	clrf	13	;volatile
 18886                           
 18887                           ;adcc.c: 81: ADPCH = 0x00;
 18888  1146  0021               	movlb	1	; select bank1
 18889  1147  019E               	clrf	30	;volatile
 18890                           
 18891                           ;adcc.c: 83: ADCAP = 0x00;
 18892  1148  019B               	clrf	27	;volatile
 18893                           
 18894                           ;adcc.c: 85: ADCON1 = 0x00;
 18895  1149  0194               	clrf	20	;volatile
 18896                           
 18897                           ;adcc.c: 87: ADCON2 = 0x00;
 18898  114A  0195               	clrf	21	;volatile
 18899                           
 18900                           ;adcc.c: 89: ADCON3 = 0x00;
 18901  114B  0196               	clrf	22	;volatile
 18902                           
 18903                           ;adcc.c: 91: ADSTAT = 0x00;
 18904  114C  0197               	clrf	23	;volatile
 18905                           
 18906                           ;adcc.c: 93: ADREF = 0x00;
 18907  114D  019A               	clrf	26	;volatile
 18908                           
 18909                           ;adcc.c: 95: ADACT = 0x00;
 18910  114E  0199               	clrf	25	;volatile
 18911                           
 18912                           ;adcc.c: 97: ADCLK = 0x00;
 18913  114F  0198               	clrf	24	;volatile
 18914  1150                     l5109:
 18915                           
 18916                           ;adcc.c: 99: ADCON0 = 0x80;
 18917  1150  3080               	movlw	128
 18918  1151  0093               	movwf	19	;volatile
 18919  1152                     l5111:
 18920                           
 18921                           ;adcc.c: 101: ADACQ = 0xFF;
 18922  1152  30FF               	movlw	255
 18923  1153  009D               	movwf	29	;volatile
 18924  1154                     l531:
 18925  1154  0008               	return
 18926  1155                     __end_of_ADCC_Initialize:
 18927                           
 18928                           	psect	text65
 18929  1FE2                     __ptext65:	
 18930 ;; *************** function _PWM_Output_D4_Enable *****************
 18931 ;; Defined at:
 18932 ;;		line 343 in file "main.c"
 18933 ;; Parameters:    Size  Location     Type
 18934 ;;		None
 18935 ;; Auto vars:     Size  Location     Type
 18936 ;;		None
 18937 ;; Return value:  Size  Location     Type
 18938 ;;                  1    wreg      void 
 18939 ;; Registers used:
 18940 ;;		None
 18941 ;; Tracked objects:
 18942 ;;		On entry : 0/0
 18943 ;;		On exit  : 0/0
 18944 ;;		Unchanged: 0/0
 18945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18950 ;;Total ram usage:        0 bytes
 18951 ;; Hardware stack levels used:    1
 18952 ;; Hardware stack levels required when called:    5
 18953 ;; This function calls:
 18954 ;;		Nothing
 18955 ;; This function is called by:
 18956 ;;		_main
 18957 ;; This function uses a non-reentrant model
 18958 ;;
 18959                           
 18960                           
 18961                           ;psect for function _PWM_Output_D4_Enable
 18962  1FE2                     _PWM_Output_D4_Enable:
 18963  1FE2                     l5811:	
 18964                           ;incstack = 0
 18965                           ; Regs used in _PWM_Output_D4_Enable: []
 18966                           
 18967                           
 18968                           ;main.c: 344: PWM6EN = 1;
 18969  1FE2  0027               	movlb	7	; select bank7
 18970  1FE3  178E               	bsf	14,7	;volatile
 18971  1FE4                     l1332:
 18972  1FE4  0008               	return
 18973  1FE5                     __end_of_PWM_Output_D4_Enable:
 18974                           
 18975                           	psect	text66
 18976  08FD                     __ptext66:	
 18977 ;; *************** function _LCDinit *****************
 18978 ;; Defined at:
 18979 ;;		line 280 in file "main.c"
 18980 ;; Parameters:    Size  Location     Type
 18981 ;;		None
 18982 ;; Auto vars:     Size  Location     Type
 18983 ;;		None
 18984 ;; Return value:  Size  Location     Type
 18985 ;;                  1    wreg      void 
 18986 ;; Registers used:
 18987 ;;		wreg, status,2, status,0, pclath, cstack
 18988 ;; Tracked objects:
 18989 ;;		On entry : 0/0
 18990 ;;		On exit  : 0/0
 18991 ;;		Unchanged: 0/0
 18992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18995 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18996 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18997 ;;Total ram usage:        1 bytes
 18998 ;; Hardware stack levels used:    1
 18999 ;; Hardware stack levels required when called:    7
 19000 ;; This function calls:
 19001 ;;		_LCDsend
 19002 ;;		_LCDsend2x4
 19003 ;; This function is called by:
 19004 ;;		_main
 19005 ;; This function uses a non-reentrant model
 19006 ;;
 19007                           
 19008                           
 19009                           ;psect for function _LCDinit
 19010  08FD                     _LCDinit:
 19011  08FD                     l5777:	
 19012                           ;incstack = 0
 19013                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 19014                           
 19015                           
 19016                           ;main.c: 282: _delay((unsigned long)((50)*(1000000/4000.0)));
 19017  08FD  3011               	movlw	17
 19018  08FE  0020               	movlb	0	; select bank0
 19019  08FF  00A8               	movwf	??_LCDinit
 19020  0900  303A               	movlw	58
 19021  0901                     u6617:
 19022  0901  0B89               	decfsz	9,f
 19023  0902  2901               	goto	u6617
 19024  0903  0BA8               	decfsz	??_LCDinit,f
 19025  0904  2901               	goto	u6617
 19026  0905  0000               	nop
 19027  0906                     l5779:
 19028                           
 19029                           ;main.c: 283: LCDsend(0x30);
 19030  0906  3030               	movlw	48
 19031  0907  3197  27AD  3188   	fcall	_LCDsend
 19032  090A                     l5781:
 19033                           
 19034                           ;main.c: 284: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 19035  090A  3034               	movlw	52
 19036  090B  3197  27AD  3188   	fcall	_LCDsend
 19037  090E  3029               	movlw	41
 19038  090F                     u6627:
 19039  090F  0B89               	decfsz	9,f
 19040  0910  290F               	goto	u6627
 19041  0911  3200               	nop2
 19042  0912                     l5783:
 19043  0912  3030               	movlw	48
 19044  0913  3197  27AD  3188   	fcall	_LCDsend
 19045  0916                     l5785:
 19046                           
 19047                           ;main.c: 285: _delay((unsigned long)((5)*(1000000/4000.0)));
 19048  0916  30FA               	movlw	250
 19049  0917                     u6637:
 19050  0917  3200               	nop2
 19051  0918  0B89               	decfsz	9,f
 19052  0919  2917               	goto	u6637
 19053                           
 19054                           ;main.c: 286: LCDsend(0x30);
 19055  091A  3030               	movlw	48
 19056  091B  3197  27AD  3188   	fcall	_LCDsend
 19057                           
 19058                           ;main.c: 287: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 19059  091E  3034               	movlw	52
 19060  091F  3197  27AD  3188   	fcall	_LCDsend
 19061  0922                     l5787:
 19062  0922  3029               	movlw	41
 19063  0923                     u6647:
 19064  0923  0B89               	decfsz	9,f
 19065  0924  2923               	goto	u6647
 19066  0925  3200               	nop2
 19067  0926                     l5789:
 19068  0926  3030               	movlw	48
 19069  0927  3197  27AD  3188   	fcall	_LCDsend
 19070                           
 19071                           ;main.c: 288: _delay((unsigned long)((100)*(1000000/4000000.0)));
 19072  092A  3008               	movlw	8
 19073  092B                     u6657:
 19074  092B  0B89               	decfsz	9,f
 19075  092C  292B               	goto	u6657
 19076  092D  0000               	nop
 19077  092E                     l5791:
 19078                           
 19079                           ;main.c: 289: LCDsend(0x30);
 19080  092E  3030               	movlw	48
 19081  092F  3197  27AD  3188   	fcall	_LCDsend
 19082  0932                     l5793:
 19083                           
 19084                           ;main.c: 290: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 19085  0932  3034               	movlw	52
 19086  0933  3197  27AD  3188   	fcall	_LCDsend
 19087  0936  3029               	movlw	41
 19088  0937                     u6667:
 19089  0937  0B89               	decfsz	9,f
 19090  0938  2937               	goto	u6667
 19091  0939  3200               	nop2
 19092  093A                     l5795:
 19093  093A  3030               	movlw	48
 19094  093B  3197  27AD  3188   	fcall	_LCDsend
 19095  093E                     l5797:
 19096                           
 19097                           ;main.c: 291: _delay((unsigned long)((100)*(1000000/4000000.0)));
 19098  093E  3008               	movlw	8
 19099  093F                     u6677:
 19100  093F  0B89               	decfsz	9,f
 19101  0940  293F               	goto	u6677
 19102  0941  0000               	nop
 19103                           
 19104                           ;main.c: 292: LCDsend(0x20);
 19105  0942  3020               	movlw	32
 19106  0943  3197  27AD  3188   	fcall	_LCDsend
 19107                           
 19108                           ;main.c: 293: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 19109  0946  3024               	movlw	36
 19110  0947  3197  27AD  3188   	fcall	_LCDsend
 19111  094A                     l5799:
 19112  094A  3029               	movlw	41
 19113  094B                     u6687:
 19114  094B  0B89               	decfsz	9,f
 19115  094C  294B               	goto	u6687
 19116  094D  3200               	nop2
 19117  094E                     l5801:
 19118  094E  3020               	movlw	32
 19119  094F  3197  27AD  3188   	fcall	_LCDsend
 19120                           
 19121                           ;main.c: 294: _delay((unsigned long)((5)*(1000000/4000.0)));
 19122  0952  30FA               	movlw	250
 19123  0953                     u6697:
 19124  0953  3200               	nop2
 19125  0954  0B89               	decfsz	9,f
 19126  0955  2953               	goto	u6697
 19127  0956                     l5803:
 19128                           
 19129                           ;main.c: 296: LCDsend2x4(0x28, 0);
 19130  0956  0020               	movlb	0	; select bank0
 19131  0957  01A2               	clrf	LCDsend2x4@mode
 19132  0958  3028               	movlw	40
 19133  0959  318A  22B7  3188   	fcall	_LCDsend2x4
 19134  095C                     l5805:
 19135                           
 19136                           ;main.c: 297: LCDsend2x4(0x06, 0);
 19137  095C  0020               	movlb	0	; select bank0
 19138  095D  01A2               	clrf	LCDsend2x4@mode
 19139  095E  3006               	movlw	6
 19140  095F  318A  22B7  3188   	fcall	_LCDsend2x4
 19141  0962                     l5807:
 19142                           
 19143                           ;main.c: 298: LCDsend2x4(0x0f, 0);
 19144  0962  0020               	movlb	0	; select bank0
 19145  0963  01A2               	clrf	LCDsend2x4@mode
 19146  0964  300F               	movlw	15
 19147  0965  318A  22B7  3188   	fcall	_LCDsend2x4
 19148  0968                     l5809:
 19149                           
 19150                           ;main.c: 299: LCDsend2x4(0x01, 0);
 19151  0968  0020               	movlb	0	; select bank0
 19152  0969  01A2               	clrf	LCDsend2x4@mode
 19153  096A  3001               	movlw	1
 19154  096B  318A  22B7  3188   	fcall	_LCDsend2x4
 19155                           
 19156                           ;main.c: 300: _delay((unsigned long)((2)*(1000000/4000.0)));
 19157  096E  30A6               	movlw	166
 19158  096F                     u6707:
 19159  096F  0B89               	decfsz	9,f
 19160  0970  296F               	goto	u6707
 19161  0971  3200               	nop2
 19162  0972                     l1304:
 19163  0972  0008               	return
 19164  0973                     __end_of_LCDinit:
 19165                           
 19166                           	psect	text67
 19167  0AB7                     __ptext67:	
 19168 ;; *************** function _LCDsend2x4 *****************
 19169 ;; Defined at:
 19170 ;;		line 257 in file "main.c"
 19171 ;; Parameters:    Size  Location     Type
 19172 ;;  c               1    wreg     unsigned char 
 19173 ;;  mode            1    2[BANK0 ] unsigned char 
 19174 ;; Auto vars:     Size  Location     Type
 19175 ;;  c               1    5[BANK0 ] unsigned char 
 19176 ;;  lc              1    7[BANK0 ] unsigned char 
 19177 ;;  hc              1    6[BANK0 ] unsigned char 
 19178 ;; Return value:  Size  Location     Type
 19179 ;;                  1    wreg      void 
 19180 ;; Registers used:
 19181 ;;		wreg, status,2, status,0, pclath, cstack
 19182 ;; Tracked objects:
 19183 ;;		On entry : 0/0
 19184 ;;		On exit  : 0/0
 19185 ;;		Unchanged: 0/0
 19186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19187 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19188 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19189 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19190 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19191 ;;Total ram usage:        6 bytes
 19192 ;; Hardware stack levels used:    1
 19193 ;; Hardware stack levels required when called:    6
 19194 ;; This function calls:
 19195 ;;		_WriteI2C
 19196 ;; This function is called by:
 19197 ;;		_LCDinit
 19198 ;;		_LCDcmd
 19199 ;;		_LCDchar
 19200 ;; This function uses a non-reentrant model
 19201 ;;
 19202                           
 19203                           
 19204                           ;psect for function _LCDsend2x4
 19205  0AB7                     _LCDsend2x4:
 19206                           
 19207                           ;incstack = 0
 19208                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 19209                           ;LCDsend2x4@c stored from wreg
 19210  0AB7  0020               	movlb	0	; select bank0
 19211  0AB8  00A5               	movwf	LCDsend2x4@c
 19212  0AB9                     l4631:
 19213                           
 19214                           ;main.c: 259: unsigned char hc;;main.c: 260: unsigned char lc;;main.c: 262: hc = c & 0xf
      +                          0;
 19215  0AB9  0825               	movf	LCDsend2x4@c,w
 19216  0ABA  39F0               	andlw	240
 19217  0ABB  00A3               	movwf	??_LCDsend2x4
 19218  0ABC  0823               	movf	??_LCDsend2x4,w
 19219  0ABD  00A6               	movwf	LCDsend2x4@hc
 19220  0ABE                     l4633:
 19221                           
 19222                           ;main.c: 263: lc = (c << 4) & 0xf0;
 19223  0ABE  0825               	movf	LCDsend2x4@c,w
 19224  0ABF  00A3               	movwf	??_LCDsend2x4
 19225  0AC0  3003               	movlw	3
 19226  0AC1                     u3445:
 19227  0AC1  35A3               	lslf	??_LCDsend2x4,f
 19228  0AC2  3EFF               	addlw	-1
 19229  0AC3  1D03               	skipz
 19230  0AC4  2AC1               	goto	u3445
 19231  0AC5  3523               	lslf	??_LCDsend2x4,w
 19232  0AC6  39F0               	andlw	240
 19233  0AC7  00A4               	movwf	??_LCDsend2x4+1
 19234  0AC8  0824               	movf	??_LCDsend2x4+1,w
 19235  0AC9  00A7               	movwf	LCDsend2x4@lc
 19236  0ACA                     l4635:	
 19237                           ;main.c: 265: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19238                           
 19239  0ACA  0023               	movlb	3	; select bank3
 19240  0ACB  0C0F               	rrf	15,w	;volatile
 19241  0ACC  0C89               	rrf	9,f
 19242  0ACD  3901               	andlw	1
 19243  0ACE  0020               	movlb	0	; select bank0
 19244  0ACF  00A3               	movwf	??_LCDsend2x4
 19245  0AD0  0023               	movlb	3	; select bank3
 19246  0AD1  0811               	movf	17,w	;volatile
 19247  0AD2  391F               	andlw	31
 19248  0AD3  0020               	movlb	0	; select bank0
 19249  0AD4  0423               	iorwf	??_LCDsend2x4,w
 19250  0AD5  1D03               	btfss	3,2
 19251  0AD6  2AD8               	goto	u3451
 19252  0AD7  2AD9               	goto	u3450
 19253  0AD8                     u3451:
 19254  0AD8  2ACA               	goto	l4635
 19255  0AD9                     u3450:
 19256  0AD9                     l1270:
 19257                           
 19258                           ;main.c: 266: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 19259  0AD9  0023               	movlb	3	; select bank3
 19260  0ADA  1411               	bsf	17,0	;volatile
 19261  0ADB                     l1271:
 19262  0ADB  1811               	btfsc	17,0	;volatile
 19263  0ADC  2ADE               	goto	u3461
 19264  0ADD  2ADF               	goto	u3460
 19265  0ADE                     u3461:
 19266  0ADE  2ADB               	goto	l1271
 19267  0ADF                     u3460:
 19268  0ADF                     l4637:
 19269  0ADF  0023               	movlb	3	; select bank3
 19270  0AE0  0C0F               	rrf	15,w	;volatile
 19271  0AE1  0C89               	rrf	9,f
 19272  0AE2  3901               	andlw	1
 19273  0AE3  0020               	movlb	0	; select bank0
 19274  0AE4  00A3               	movwf	??_LCDsend2x4
 19275  0AE5  0023               	movlb	3	; select bank3
 19276  0AE6  0811               	movf	17,w	;volatile
 19277  0AE7  391F               	andlw	31
 19278  0AE8  0020               	movlb	0	; select bank0
 19279  0AE9  0423               	iorwf	??_LCDsend2x4,w
 19280  0AEA  1D03               	btfss	3,2
 19281  0AEB  2AED               	goto	u3471
 19282  0AEC  2AEE               	goto	u3470
 19283  0AED                     u3471:
 19284  0AED  2ADF               	goto	l4637
 19285  0AEE                     u3470:
 19286  0AEE                     l4639:
 19287                           
 19288                           ;main.c: 267: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19289  0AEE  304E               	movlw	78
 19290  0AEF  3188  2037  318A   	fcall	_WriteI2C
 19291  0AF2                     l4641:
 19292  0AF2  0023               	movlb	3	; select bank3
 19293  0AF3  0C0F               	rrf	15,w	;volatile
 19294  0AF4  0C89               	rrf	9,f
 19295  0AF5  3901               	andlw	1
 19296  0AF6  0020               	movlb	0	; select bank0
 19297  0AF7  00A3               	movwf	??_LCDsend2x4
 19298  0AF8  0023               	movlb	3	; select bank3
 19299  0AF9  0811               	movf	17,w	;volatile
 19300  0AFA  391F               	andlw	31
 19301  0AFB  0020               	movlb	0	; select bank0
 19302  0AFC  0423               	iorwf	??_LCDsend2x4,w
 19303  0AFD  1D03               	btfss	3,2
 19304  0AFE  2B00               	goto	u3481
 19305  0AFF  2B01               	goto	u3480
 19306  0B00                     u3481:
 19307  0B00  2AF2               	goto	l4641
 19308  0B01                     u3480:
 19309  0B01                     l4643:
 19310                           
 19311                           ;main.c: 268: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 19312  0B01  0826               	movf	LCDsend2x4@hc,w
 19313  0B02  0422               	iorwf	LCDsend2x4@mode,w
 19314  0B03  3808               	iorlw	8
 19315  0B04  3188  2037  318A   	fcall	_WriteI2C
 19316  0B07                     l4645:
 19317  0B07  0023               	movlb	3	; select bank3
 19318  0B08  0C0F               	rrf	15,w	;volatile
 19319  0B09  0C89               	rrf	9,f
 19320  0B0A  3901               	andlw	1
 19321  0B0B  0020               	movlb	0	; select bank0
 19322  0B0C  00A3               	movwf	??_LCDsend2x4
 19323  0B0D  0023               	movlb	3	; select bank3
 19324  0B0E  0811               	movf	17,w	;volatile
 19325  0B0F  391F               	andlw	31
 19326  0B10  0020               	movlb	0	; select bank0
 19327  0B11  0423               	iorwf	??_LCDsend2x4,w
 19328  0B12  1D03               	btfss	3,2
 19329  0B13  2B15               	goto	u3491
 19330  0B14  2B16               	goto	u3490
 19331  0B15                     u3491:
 19332  0B15  2B07               	goto	l4645
 19333  0B16                     u3490:
 19334  0B16                     l4647:
 19335                           
 19336                           ;main.c: 269: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 19337  0B16  0826               	movf	LCDsend2x4@hc,w
 19338  0B17  0422               	iorwf	LCDsend2x4@mode,w
 19339  0B18  380C               	iorlw	12
 19340  0B19  3188  2037  318A   	fcall	_WriteI2C
 19341  0B1C                     l4649:
 19342  0B1C  0023               	movlb	3	; select bank3
 19343  0B1D  0C0F               	rrf	15,w	;volatile
 19344  0B1E  0C89               	rrf	9,f
 19345  0B1F  3901               	andlw	1
 19346  0B20  0020               	movlb	0	; select bank0
 19347  0B21  00A3               	movwf	??_LCDsend2x4
 19348  0B22  0023               	movlb	3	; select bank3
 19349  0B23  0811               	movf	17,w	;volatile
 19350  0B24  391F               	andlw	31
 19351  0B25  0020               	movlb	0	; select bank0
 19352  0B26  0423               	iorwf	??_LCDsend2x4,w
 19353  0B27  1D03               	btfss	3,2
 19354  0B28  2B2A               	goto	u3501
 19355  0B29  2B2B               	goto	u3500
 19356  0B2A                     u3501:
 19357  0B2A  2B1C               	goto	l4649
 19358  0B2B                     u3500:
 19359  0B2B                     l1285:
 19360  0B2B                     l4651:	
 19361                           ;main.c: 270: _delay((unsigned long)((1)*(1000000/4000000.0)));
 19362                           
 19363                           
 19364                           ;main.c: 271: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 19365  0B2B  0020               	movlb	0	; select bank0
 19366  0B2C  0826               	movf	LCDsend2x4@hc,w
 19367  0B2D  0422               	iorwf	LCDsend2x4@mode,w
 19368  0B2E  3808               	iorlw	8
 19369  0B2F  3188  2037  318A   	fcall	_WriteI2C
 19370  0B32                     l4653:
 19371  0B32  0023               	movlb	3	; select bank3
 19372  0B33  0C0F               	rrf	15,w	;volatile
 19373  0B34  0C89               	rrf	9,f
 19374  0B35  3901               	andlw	1
 19375  0B36  0020               	movlb	0	; select bank0
 19376  0B37  00A3               	movwf	??_LCDsend2x4
 19377  0B38  0023               	movlb	3	; select bank3
 19378  0B39  0811               	movf	17,w	;volatile
 19379  0B3A  391F               	andlw	31
 19380  0B3B  0020               	movlb	0	; select bank0
 19381  0B3C  0423               	iorwf	??_LCDsend2x4,w
 19382  0B3D  1D03               	btfss	3,2
 19383  0B3E  2B40               	goto	u3511
 19384  0B3F  2B41               	goto	u3510
 19385  0B40                     u3511:
 19386  0B40  2B32               	goto	l4653
 19387  0B41                     u3510:
 19388  0B41                     l4655:
 19389                           
 19390                           ;main.c: 272: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 19391  0B41  0827               	movf	LCDsend2x4@lc,w
 19392  0B42  0422               	iorwf	LCDsend2x4@mode,w
 19393  0B43  3808               	iorlw	8
 19394  0B44  3188  2037  318A   	fcall	_WriteI2C
 19395  0B47                     l4657:
 19396  0B47  0023               	movlb	3	; select bank3
 19397  0B48  0C0F               	rrf	15,w	;volatile
 19398  0B49  0C89               	rrf	9,f
 19399  0B4A  3901               	andlw	1
 19400  0B4B  0020               	movlb	0	; select bank0
 19401  0B4C  00A3               	movwf	??_LCDsend2x4
 19402  0B4D  0023               	movlb	3	; select bank3
 19403  0B4E  0811               	movf	17,w	;volatile
 19404  0B4F  391F               	andlw	31
 19405  0B50  0020               	movlb	0	; select bank0
 19406  0B51  0423               	iorwf	??_LCDsend2x4,w
 19407  0B52  1D03               	btfss	3,2
 19408  0B53  2B55               	goto	u3521
 19409  0B54  2B56               	goto	u3520
 19410  0B55                     u3521:
 19411  0B55  2B47               	goto	l4657
 19412  0B56                     u3520:
 19413  0B56                     l4659:
 19414                           
 19415                           ;main.c: 273: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 19416  0B56  0827               	movf	LCDsend2x4@lc,w
 19417  0B57  0422               	iorwf	LCDsend2x4@mode,w
 19418  0B58  380C               	iorlw	12
 19419  0B59  3188  2037  318A   	fcall	_WriteI2C
 19420  0B5C                     l4661:
 19421  0B5C  0023               	movlb	3	; select bank3
 19422  0B5D  0C0F               	rrf	15,w	;volatile
 19423  0B5E  0C89               	rrf	9,f
 19424  0B5F  3901               	andlw	1
 19425  0B60  0020               	movlb	0	; select bank0
 19426  0B61  00A3               	movwf	??_LCDsend2x4
 19427  0B62  0023               	movlb	3	; select bank3
 19428  0B63  0811               	movf	17,w	;volatile
 19429  0B64  391F               	andlw	31
 19430  0B65  0020               	movlb	0	; select bank0
 19431  0B66  0423               	iorwf	??_LCDsend2x4,w
 19432  0B67  1D03               	btfss	3,2
 19433  0B68  2B6A               	goto	u3531
 19434  0B69  2B6B               	goto	u3530
 19435  0B6A                     u3531:
 19436  0B6A  2B5C               	goto	l4661
 19437  0B6B                     u3530:
 19438  0B6B                     l1294:
 19439  0B6B                     l4663:	
 19440                           ;main.c: 274: _delay((unsigned long)((1)*(1000000/4000000.0)));
 19441                           
 19442                           
 19443                           ;main.c: 275: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 19444  0B6B  0020               	movlb	0	; select bank0
 19445  0B6C  0827               	movf	LCDsend2x4@lc,w
 19446  0B6D  0422               	iorwf	LCDsend2x4@mode,w
 19447  0B6E  3808               	iorlw	8
 19448  0B6F  3188  2037  318A   	fcall	_WriteI2C
 19449  0B72                     l4665:
 19450  0B72  0023               	movlb	3	; select bank3
 19451  0B73  0C0F               	rrf	15,w	;volatile
 19452  0B74  0C89               	rrf	9,f
 19453  0B75  3901               	andlw	1
 19454  0B76  0020               	movlb	0	; select bank0
 19455  0B77  00A3               	movwf	??_LCDsend2x4
 19456  0B78  0023               	movlb	3	; select bank3
 19457  0B79  0811               	movf	17,w	;volatile
 19458  0B7A  391F               	andlw	31
 19459  0B7B  0020               	movlb	0	; select bank0
 19460  0B7C  0423               	iorwf	??_LCDsend2x4,w
 19461  0B7D  1D03               	btfss	3,2
 19462  0B7E  2B80               	goto	u3541
 19463  0B7F  2B81               	goto	u3540
 19464  0B80                     u3541:
 19465  0B80  2B72               	goto	l4665
 19466  0B81                     u3540:
 19467  0B81                     l1297:
 19468                           
 19469                           ;main.c: 276: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 19470  0B81  0023               	movlb	3	; select bank3
 19471  0B82  1511               	bsf	17,2	;volatile
 19472  0B83                     l1298:
 19473  0B83  1911               	btfsc	17,2	;volatile
 19474  0B84  2B86               	goto	u3551
 19475  0B85  2B87               	goto	u3550
 19476  0B86                     u3551:
 19477  0B86  2B83               	goto	l1298
 19478  0B87                     u3550:
 19479  0B87                     l4667:
 19480                           
 19481                           ;main.c: 277: _delay((unsigned long)((50)*(1000000/4000000.0)));
 19482  0B87  3004               	movlw	4
 19483  0B88                     u6717:
 19484  0B88  0B89               	decfsz	9,f
 19485  0B89  2B88               	goto	u6717
 19486  0B8A                     l1301:
 19487  0B8A  0008               	return
 19488  0B8B                     __end_of_LCDsend2x4:
 19489                           
 19490                           	psect	text68
 19491  17AD                     __ptext68:	
 19492 ;; *************** function _LCDsend *****************
 19493 ;; Defined at:
 19494 ;;		line 218 in file "main.c"
 19495 ;; Parameters:    Size  Location     Type
 19496 ;;  c               1    wreg     unsigned char 
 19497 ;; Auto vars:     Size  Location     Type
 19498 ;;  c               1    3[BANK0 ] unsigned char 
 19499 ;; Return value:  Size  Location     Type
 19500 ;;                  1    wreg      void 
 19501 ;; Registers used:
 19502 ;;		wreg, status,2, status,0, pclath, cstack
 19503 ;; Tracked objects:
 19504 ;;		On entry : 0/0
 19505 ;;		On exit  : 0/0
 19506 ;;		Unchanged: 0/0
 19507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19509 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19510 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19511 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19512 ;;Total ram usage:        2 bytes
 19513 ;; Hardware stack levels used:    1
 19514 ;; Hardware stack levels required when called:    6
 19515 ;; This function calls:
 19516 ;;		_WriteI2C
 19517 ;; This function is called by:
 19518 ;;		_LCDinit
 19519 ;; This function uses a non-reentrant model
 19520 ;;
 19521                           
 19522                           
 19523                           ;psect for function _LCDsend
 19524  17AD                     _LCDsend:
 19525                           
 19526                           ;incstack = 0
 19527                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 19528                           ;LCDsend@c stored from wreg
 19529  17AD  0020               	movlb	0	; select bank0
 19530  17AE  00A3               	movwf	LCDsend@c
 19531  17AF                     l5275:
 19532  17AF                     l5277:	
 19533                           ;main.c: 220: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19534                           
 19535  17AF  0023               	movlb	3	; select bank3
 19536  17B0  0C0F               	rrf	15,w	;volatile
 19537  17B1  0C89               	rrf	9,f
 19538  17B2  3901               	andlw	1
 19539  17B3  0020               	movlb	0	; select bank0
 19540  17B4  00A2               	movwf	??_LCDsend
 19541  17B5  0023               	movlb	3	; select bank3
 19542  17B6  0811               	movf	17,w	;volatile
 19543  17B7  391F               	andlw	31
 19544  17B8  0020               	movlb	0	; select bank0
 19545  17B9  0422               	iorwf	??_LCDsend,w
 19546  17BA  1D03               	btfss	3,2
 19547  17BB  2FBD               	goto	u4461
 19548  17BC  2FBE               	goto	u4460
 19549  17BD                     u4461:
 19550  17BD  2FAF               	goto	l5277
 19551  17BE                     u4460:
 19552  17BE                     l1168:
 19553                           
 19554                           ;main.c: 221: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 19555  17BE  0023               	movlb	3	; select bank3
 19556  17BF  1411               	bsf	17,0	;volatile
 19557  17C0                     l1169:
 19558  17C0  1811               	btfsc	17,0	;volatile
 19559  17C1  2FC3               	goto	u4471
 19560  17C2  2FC4               	goto	u4470
 19561  17C3                     u4471:
 19562  17C3  2FC0               	goto	l1169
 19563  17C4                     u4470:
 19564  17C4                     l5279:
 19565  17C4  0023               	movlb	3	; select bank3
 19566  17C5  0C0F               	rrf	15,w	;volatile
 19567  17C6  0C89               	rrf	9,f
 19568  17C7  3901               	andlw	1
 19569  17C8  0020               	movlb	0	; select bank0
 19570  17C9  00A2               	movwf	??_LCDsend
 19571  17CA  0023               	movlb	3	; select bank3
 19572  17CB  0811               	movf	17,w	;volatile
 19573  17CC  391F               	andlw	31
 19574  17CD  0020               	movlb	0	; select bank0
 19575  17CE  0422               	iorwf	??_LCDsend,w
 19576  17CF  1D03               	btfss	3,2
 19577  17D0  2FD2               	goto	u4481
 19578  17D1  2FD3               	goto	u4480
 19579  17D2                     u4481:
 19580  17D2  2FC4               	goto	l5279
 19581  17D3                     u4480:
 19582  17D3                     l5281:
 19583                           
 19584                           ;main.c: 222: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19585  17D3  304E               	movlw	78
 19586  17D4  3188  2037  3197   	fcall	_WriteI2C
 19587  17D7                     l5283:
 19588  17D7  0023               	movlb	3	; select bank3
 19589  17D8  0C0F               	rrf	15,w	;volatile
 19590  17D9  0C89               	rrf	9,f
 19591  17DA  3901               	andlw	1
 19592  17DB  0020               	movlb	0	; select bank0
 19593  17DC  00A2               	movwf	??_LCDsend
 19594  17DD  0023               	movlb	3	; select bank3
 19595  17DE  0811               	movf	17,w	;volatile
 19596  17DF  391F               	andlw	31
 19597  17E0  0020               	movlb	0	; select bank0
 19598  17E1  0422               	iorwf	??_LCDsend,w
 19599  17E2  1D03               	btfss	3,2
 19600  17E3  2FE5               	goto	u4491
 19601  17E4  2FE6               	goto	u4490
 19602  17E5                     u4491:
 19603  17E5  2FD7               	goto	l5283
 19604  17E6                     u4490:
 19605  17E6                     l5285:
 19606                           
 19607                           ;main.c: 223: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19608  17E6  0823               	movf	LCDsend@c,w
 19609  17E7  3188  2037  3197   	fcall	_WriteI2C
 19610  17EA                     l5287:
 19611  17EA  0023               	movlb	3	; select bank3
 19612  17EB  0C0F               	rrf	15,w	;volatile
 19613  17EC  0C89               	rrf	9,f
 19614  17ED  3901               	andlw	1
 19615  17EE  0020               	movlb	0	; select bank0
 19616  17EF  00A2               	movwf	??_LCDsend
 19617  17F0  0023               	movlb	3	; select bank3
 19618  17F1  0811               	movf	17,w	;volatile
 19619  17F2  391F               	andlw	31
 19620  17F3  0020               	movlb	0	; select bank0
 19621  17F4  0422               	iorwf	??_LCDsend,w
 19622  17F5  1D03               	btfss	3,2
 19623  17F6  2FF8               	goto	u4501
 19624  17F7  2FF9               	goto	u4500
 19625  17F8                     u4501:
 19626  17F8  2FEA               	goto	l5287
 19627  17F9                     u4500:
 19628  17F9                     l1180:
 19629                           
 19630                           ;main.c: 224: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 19631  17F9  0023               	movlb	3	; select bank3
 19632  17FA  1511               	bsf	17,2	;volatile
 19633  17FB                     l1181:
 19634  17FB  1911               	btfsc	17,2	;volatile
 19635  17FC  2FFE               	goto	u4511
 19636  17FD  2FFF               	goto	u4510
 19637  17FE                     u4511:
 19638  17FE  2FFB               	goto	l1181
 19639  17FF                     u4510:
 19640  17FF                     l1184:
 19641  17FF  0008               	return
 19642  1800                     __end_of_LCDsend:
 19643                           
 19644                           	psect	text69
 19645  0837                     __ptext69:	
 19646 ;; *************** function _WriteI2C *****************
 19647 ;; Defined at:
 19648 ;;		line 47 in file "I2C/i2c.c"
 19649 ;; Parameters:    Size  Location     Type
 19650 ;;  data_out        1    wreg     unsigned char 
 19651 ;; Auto vars:     Size  Location     Type
 19652 ;;  data_out        1    1[BANK0 ] unsigned char 
 19653 ;; Return value:  Size  Location     Type
 19654 ;;                  1    wreg      char 
 19655 ;; Registers used:
 19656 ;;		wreg, status,2, status,0
 19657 ;; Tracked objects:
 19658 ;;		On entry : 0/0
 19659 ;;		On exit  : 0/0
 19660 ;;		Unchanged: 0/0
 19661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19665 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19666 ;;Total ram usage:        2 bytes
 19667 ;; Hardware stack levels used:    1
 19668 ;; Hardware stack levels required when called:    5
 19669 ;; This function calls:
 19670 ;;		Nothing
 19671 ;; This function is called by:
 19672 ;;		_LCDsend
 19673 ;;		_LCDsend2x4
 19674 ;;		_LCDrecv
 19675 ;; This function uses a non-reentrant model
 19676 ;;
 19677                           
 19678                           
 19679                           ;psect for function _WriteI2C
 19680  0837                     _WriteI2C:
 19681                           
 19682                           ;incstack = 0
 19683                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 19684                           ;WriteI2C@data_out stored from wreg
 19685  0837  0020               	movlb	0	; select bank0
 19686  0838  00A1               	movwf	WriteI2C@data_out
 19687  0839                     l4583:
 19688                           
 19689                           ;i2c.c: 49: SSP1BUF = data_out;
 19690  0839  0821               	movf	WriteI2C@data_out,w
 19691  083A  0023               	movlb	3	; select bank3
 19692  083B  008C               	movwf	12	;volatile
 19693  083C                     l4585:
 19694                           
 19695                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 19696  083C  1F90               	btfss	16,7	;volatile
 19697  083D  283F               	goto	u3321
 19698  083E  2840               	goto	u3320
 19699  083F                     u3321:
 19700  083F  2841               	goto	l4591
 19701  0840                     u3320:
 19702  0840  2890               	goto	l30
 19703  0841                     l4591:
 19704                           
 19705                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 19706  0841  300F               	movlw	15
 19707  0842  0510               	andwf	16,w	;volatile
 19708  0843  0020               	movlb	0	; select bank0
 19709  0844  00A0               	movwf	??_WriteI2C
 19710  0845  3008               	movlw	8
 19711  0846  0620               	xorwf	??_WriteI2C,w
 19712  0847  1903               	btfsc	3,2
 19713  0848  284A               	goto	u3331
 19714  0849  284B               	goto	u3330
 19715  084A                     u3331:
 19716  084A  2864               	goto	l4603
 19717  084B                     u3330:
 19718  084B                     l4593:
 19719  084B  300F               	movlw	15
 19720  084C  0023               	movlb	3	; select bank3
 19721  084D  0510               	andwf	16,w	;volatile
 19722  084E  0020               	movlb	0	; select bank0
 19723  084F  00A0               	movwf	??_WriteI2C
 19724  0850  300B               	movlw	11
 19725  0851  0620               	xorwf	??_WriteI2C,w
 19726  0852  1903               	btfsc	3,2
 19727  0853  2855               	goto	u3341
 19728  0854  2856               	goto	u3340
 19729  0855                     u3341:
 19730  0855  2864               	goto	l4603
 19731  0856                     u3340:
 19732  0856                     l4595:
 19733                           
 19734                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 19735  0856  0023               	movlb	3	; select bank3
 19736  0857  1610               	bsf	16,4	;volatile
 19737  0858                     l33:	
 19738                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 19739                           
 19740  0858  002E               	movlb	14	; select bank14
 19741  0859  1C0F               	btfss	15,0	;volatile
 19742  085A  285C               	goto	u3351
 19743  085B  285D               	goto	u3350
 19744  085C                     u3351:
 19745  085C  2858               	goto	l33
 19746  085D                     u3350:
 19747  085D                     l35:
 19748                           
 19749                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 19750  085D  0023               	movlb	3	; select bank3
 19751  085E  190F               	btfsc	15,2	;volatile
 19752  085F  2861               	goto	u3361
 19753  0860  2862               	goto	u3360
 19754  0861                     u3361:
 19755  0861  2890               	goto	l30
 19756  0862                     u3360:
 19757  0862                     l4597:
 19758  0862  080F               	movf	15,w	;volatile
 19759  0863  2890               	goto	l30
 19760  0864                     l4603:
 19761                           
 19762                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 19763  0864  300F               	movlw	15
 19764  0865  0023               	movlb	3	; select bank3
 19765  0866  0510               	andwf	16,w	;volatile
 19766  0867  0020               	movlb	0	; select bank0
 19767  0868  00A0               	movwf	??_WriteI2C
 19768  0869  3008               	movlw	8
 19769  086A  0620               	xorwf	??_WriteI2C,w
 19770  086B  1903               	btfsc	3,2
 19771  086C  286E               	goto	u3371
 19772  086D  286F               	goto	u3370
 19773  086E                     u3371:
 19774  086E  287A               	goto	l42
 19775  086F                     u3370:
 19776  086F                     l4605:
 19777  086F  300F               	movlw	15
 19778  0870  0023               	movlb	3	; select bank3
 19779  0871  0510               	andwf	16,w	;volatile
 19780  0872  0020               	movlb	0	; select bank0
 19781  0873  00A0               	movwf	??_WriteI2C
 19782  0874  300B               	movlw	11
 19783  0875  0620               	xorwf	??_WriteI2C,w
 19784  0876  1D03               	btfss	3,2
 19785  0877  2879               	goto	u3381
 19786  0878  287A               	goto	u3380
 19787  0879                     u3381:
 19788  0879  2890               	goto	l30
 19789  087A                     u3380:
 19790  087A                     l42:
 19791  087A  0023               	movlb	3	; select bank3
 19792  087B  180F               	btfsc	15,0	;volatile
 19793  087C  287E               	goto	u3391
 19794  087D  287F               	goto	u3390
 19795  087E                     u3391:
 19796  087E  287A               	goto	l42
 19797  087F                     u3390:
 19798  087F                     l4607:
 19799  087F  0023               	movlb	3	; select bank3
 19800  0880  0C0F               	rrf	15,w	;volatile
 19801  0881  0C89               	rrf	9,f
 19802  0882  3901               	andlw	1
 19803  0883  0020               	movlb	0	; select bank0
 19804  0884  00A0               	movwf	??_WriteI2C
 19805  0885  0023               	movlb	3	; select bank3
 19806  0886  0811               	movf	17,w	;volatile
 19807  0887  391F               	andlw	31
 19808  0888  0020               	movlb	0	; select bank0
 19809  0889  0420               	iorwf	??_WriteI2C,w
 19810  088A  1D03               	btfss	3,2
 19811  088B  288D               	goto	u3401
 19812  088C  288E               	goto	u3400
 19813  088D                     u3401:
 19814  088D  287F               	goto	l4607
 19815  088E                     u3400:
 19816  088E                     l47:
 19817                           
 19818                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 19819  088E  0023               	movlb	3	; select bank3
 19820  088F  0811               	movf	17,w	;volatile
 19821  0890                     l30:
 19822  0890  0008               	return
 19823  0891                     __end_of_WriteI2C:
 19824                           
 19825                           	psect	text70
 19826  1FDF                     __ptext70:	
 19827 ;; *************** function _EUSART_is_rx_ready *****************
 19828 ;; Defined at:
 19829 ;;		line 118 in file "mcc_generated_files/eusart.c"
 19830 ;; Parameters:    Size  Location     Type
 19831 ;;		None
 19832 ;; Auto vars:     Size  Location     Type
 19833 ;;		None
 19834 ;; Return value:  Size  Location     Type
 19835 ;;                  1    wreg      unsigned char 
 19836 ;; Registers used:
 19837 ;;		wreg
 19838 ;; Tracked objects:
 19839 ;;		On entry : 0/0
 19840 ;;		On exit  : 0/0
 19841 ;;		Unchanged: 0/0
 19842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19847 ;;Total ram usage:        0 bytes
 19848 ;; Hardware stack levels used:    1
 19849 ;; Hardware stack levels required when called:    5
 19850 ;; This function calls:
 19851 ;;		Nothing
 19852 ;; This function is called by:
 19853 ;;		_main
 19854 ;; This function uses a non-reentrant model
 19855 ;;
 19856                           
 19857                           
 19858                           ;psect for function _EUSART_is_rx_ready
 19859  1FDF                     _EUSART_is_rx_ready:
 19860  1FDF                     l5677:	
 19861                           ;incstack = 0
 19862                           ; Regs used in _EUSART_is_rx_ready: [wreg]
 19863                           
 19864                           
 19865                           ;eusart.c: 120: return eusartRxCount;
 19866  1FDF  0021               	movlb	1	; select bank1
 19867  1FE0  0859               	movf	_eusartRxCount^(0+128),w	;volatile
 19868  1FE1                     l890:
 19869  1FE1  0008               	return
 19870  1FE2                     __end_of_EUSART_is_rx_ready:
 19871                           
 19872                           	psect	text71
 19873  1336                     __ptext71:	
 19874 ;; *************** function _DATAEE_WriteByte *****************
 19875 ;; Defined at:
 19876 ;;		line 180 in file "mcc_generated_files/memory.c"
 19877 ;; Parameters:    Size  Location     Type
 19878 ;;  bAdd            2    0[BANK0 ] unsigned int 
 19879 ;;  bData           1    2[BANK0 ] unsigned char 
 19880 ;; Auto vars:     Size  Location     Type
 19881 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
 19882 ;; Return value:  Size  Location     Type
 19883 ;;                  1    wreg      void 
 19884 ;; Registers used:
 19885 ;;		wreg, status,2, status,0
 19886 ;; Tracked objects:
 19887 ;;		On entry : 0/0
 19888 ;;		On exit  : 0/0
 19889 ;;		Unchanged: 0/0
 19890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19891 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19894 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19895 ;;Total ram usage:        4 bytes
 19896 ;; Hardware stack levels used:    1
 19897 ;; Hardware stack levels required when called:    5
 19898 ;; This function calls:
 19899 ;;		Nothing
 19900 ;; This function is called by:
 19901 ;;		_main
 19902 ;; This function uses a non-reentrant model
 19903 ;;
 19904                           
 19905                           
 19906                           ;psect for function _DATAEE_WriteByte
 19907  1336                     _DATAEE_WriteByte:
 19908  1336                     l5657:	
 19909                           ;incstack = 0
 19910                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 19911                           
 19912                           
 19913                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 19914  1336  3000               	movlw	0
 19915  1337  1B8B               	btfsc	11,7	;volatile
 19916  1338  3001               	movlw	1
 19917  1339  0020               	movlb	0	; select bank0
 19918  133A  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
 19919                           
 19920                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 19921  133B  0821               	movf	DATAEE_WriteByte@bAdd+1,w
 19922  133C  0030               	movlb	16	; select bank16
 19923  133D  009B               	movwf	27	;volatile
 19924  133E                     l5659:
 19925                           
 19926                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 19927  133E  0020               	movlb	0	; select bank0
 19928  133F  0820               	movf	DATAEE_WriteByte@bAdd,w
 19929  1340  0030               	movlb	16	; select bank16
 19930  1341  009A               	movwf	26	;volatile
 19931  1342                     l5661:
 19932                           
 19933                           ;memory.c: 186: NVMDATL = bData;
 19934  1342  0020               	movlb	0	; select bank0
 19935  1343  0822               	movf	DATAEE_WriteByte@bData,w
 19936  1344  0030               	movlb	16	; select bank16
 19937  1345  009C               	movwf	28	;volatile
 19938  1346                     l5663:
 19939                           
 19940                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 19941  1346  171E               	bsf	30,6	;volsfr
 19942  1347                     l5665:
 19943                           
 19944                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 19945  1347  151E               	bsf	30,2	;volsfr
 19946  1348                     l5667:
 19947                           
 19948                           ;memory.c: 189: INTCONbits.GIE = 0;
 19949  1348  138B               	bcf	11,7	;volatile
 19950  1349                     l5669:
 19951                           
 19952                           ;memory.c: 190: NVMCON2 = 0x55;
 19953  1349  3055               	movlw	85
 19954  134A  009F               	movwf	31	;volsfr
 19955  134B                     l5671:
 19956                           
 19957                           ;memory.c: 191: NVMCON2 = 0xAA;
 19958  134B  30AA               	movlw	170
 19959  134C  009F               	movwf	31	;volsfr
 19960  134D                     l5673:
 19961                           
 19962                           ;memory.c: 192: NVMCON1bits.WR = 1;
 19963  134D  149E               	bsf	30,1	;volsfr
 19964  134E                     l801:	
 19965                           ;memory.c: 195: {
 19966                           
 19967  134E  189E               	btfsc	30,1	;volsfr
 19968  134F  2B51               	goto	u5201
 19969  1350  2B52               	goto	u5200
 19970  1351                     u5201:
 19971  1351  2B4E               	goto	l801
 19972  1352                     u5200:
 19973  1352                     l803:
 19974                           
 19975                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 19976  1352  111E               	bcf	30,2	;volsfr
 19977  1353                     l5675:
 19978                           
 19979                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 19980  1353  0020               	movlb	0	; select bank0
 19981  1354  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
 19982  1355  1C03               	skipc
 19983  1356  138B               	bcf	11,7	;volatile
 19984  1357  1803               	skipnc
 19985  1358  178B               	bsf	11,7	;volatile
 19986  1359                     l804:
 19987  1359  0008               	return
 19988  135A                     __end_of_DATAEE_WriteByte:
 19989                           
 19990                           	psect	intentry
 19991  0004                     __pintentry:	
 19992 ;; *************** function _INTERRUPT_InterruptManager *****************
 19993 ;; Defined at:
 19994 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 19995 ;; Parameters:    Size  Location     Type
 19996 ;;		None
 19997 ;; Auto vars:     Size  Location     Type
 19998 ;;		None
 19999 ;; Return value:  Size  Location     Type
 20000 ;;                  1    wreg      void 
 20001 ;; Registers used:
 20002 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20003 ;; Tracked objects:
 20004 ;;		On entry : 0/0
 20005 ;;		On exit  : 0/0
 20006 ;;		Unchanged: 0/0
 20007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20012 ;;Total ram usage:        0 bytes
 20013 ;; Hardware stack levels used:    1
 20014 ;; Hardware stack levels required when called:    4
 20015 ;; This function calls:
 20016 ;;		Absolute function
 20017 ;;		_EUSART_Receive_ISR
 20018 ;;		_EUSART_Transmit_ISR
 20019 ;;		_INT_ISR
 20020 ;;		_TMR1_ISR
 20021 ;;		_TMR5_ISR
 20022 ;; This function is called by:
 20023 ;;		Interrupt level 1
 20024 ;; This function uses a non-reentrant model
 20025 ;;
 20026                           
 20027  0004                     _INTERRUPT_InterruptManager:
 20028                           
 20029                           ;incstack = 0
 20030  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 20031                           
 20032                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 20033  0005  3180               	pagesel	$
 20034  0006                     i1l6189:
 20035                           
 20036                           ;interrupt_manager.c: 55: if(PIE0bits.INTE == 1 && PIR0bits.INTF == 1)
 20037  0006  002E               	movlb	14	; select bank14
 20038  0007  1C16               	btfss	22,0	;volatile
 20039  0008  280A               	goto	u615_21
 20040  0009  280B               	goto	u615_20
 20041  000A                     u615_21:
 20042  000A  2813               	goto	i1l368
 20043  000B                     u615_20:
 20044  000B                     i1l6191:
 20045  000B  1C0C               	btfss	12,0	;volatile
 20046  000C  280E               	goto	u616_21
 20047  000D  280F               	goto	u616_20
 20048  000E                     u616_21:
 20049  000E  2813               	goto	i1l368
 20050  000F                     u616_20:
 20051  000F                     i1l6193:
 20052                           
 20053                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: INT_ISR();
 20054  000F  3190  2001  3180   	fcall	_INT_ISR
 20055                           
 20056                           ;interrupt_manager.c: 58: }
 20057  0012  285C               	goto	i1l384
 20058  0013                     i1l368:
 20059                           
 20060                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
 20061  0013  1F0B               	btfss	11,6	;volatile
 20062  0014  2816               	goto	u617_21
 20063  0015  2817               	goto	u617_20
 20064  0016                     u617_21:
 20065  0016  285C               	goto	i1l384
 20066  0017                     u617_20:
 20067  0017                     i1l6195:
 20068                           
 20069                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE3bits.TXIE == 1 && PIR3bits.T
      +                          XIF == 1)
 20070  0017  1E19               	btfss	25,4	;volatile
 20071  0018  281A               	goto	u618_21
 20072  0019  281B               	goto	u618_20
 20073  001A                     u618_21:
 20074  001A  2826               	goto	i1l371
 20075  001B                     u618_20:
 20076  001B                     i1l6197:
 20077  001B  1E0F               	btfss	15,4	;volatile
 20078  001C  281E               	goto	u619_21
 20079  001D  281F               	goto	u619_20
 20080  001E                     u619_21:
 20081  001E  2826               	goto	i1l371
 20082  001F                     u619_20:
 20083  001F                     i1l6199:
 20084                           
 20085                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART_TxDefaultInterruptHandler();
 20086  001F  0022               	movlb	2	; select bank2
 20087  0020  0837               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
 20088  0021  008A               	movwf	10
 20089  0022  0836               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
 20090  0023  000A               	callw
 20091  0024  3180               	pagesel	$
 20092                           
 20093                           ;interrupt_manager.c: 64: }
 20094  0025  285C               	goto	i1l384
 20095  0026                     i1l371:
 20096                           
 20097                           ;interrupt_manager.c: 65: else if(PIE3bits.RCIE == 1 && PIR3bits.RCIF == 1)
 20098  0026  1E99               	btfss	25,5	;volatile
 20099  0027  2829               	goto	u620_21
 20100  0028  282A               	goto	u620_20
 20101  0029                     u620_21:
 20102  0029  2835               	goto	i1l373
 20103  002A                     u620_20:
 20104  002A                     i1l6201:
 20105  002A  1E8F               	btfss	15,5	;volatile
 20106  002B  282D               	goto	u621_21
 20107  002C  282E               	goto	u621_20
 20108  002D                     u621_21:
 20109  002D  2835               	goto	i1l373
 20110  002E                     u621_20:
 20111  002E                     i1l6203:
 20112                           
 20113                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: EUSART_RxDefaultInterruptHandler();
 20114  002E  0022               	movlb	2	; select bank2
 20115  002F  0835               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
 20116  0030  008A               	movwf	10
 20117  0031  0834               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
 20118  0032  000A               	callw
 20119  0033  3180               	pagesel	$
 20120                           
 20121                           ;interrupt_manager.c: 68: }
 20122  0034  285C               	goto	i1l384
 20123  0035                     i1l373:
 20124                           
 20125                           ;interrupt_manager.c: 69: else if(PIE4bits.TMR5IE == 1 && PIR4bits.TMR5IF == 1)
 20126  0035  1E1A               	btfss	26,4	;volatile
 20127  0036  2838               	goto	u622_21
 20128  0037  2839               	goto	u622_20
 20129  0038                     u622_21:
 20130  0038  2841               	goto	i1l375
 20131  0039                     u622_20:
 20132  0039                     i1l6205:
 20133  0039  1E10               	btfss	16,4	;volatile
 20134  003A  283C               	goto	u623_21
 20135  003B  283D               	goto	u623_20
 20136  003C                     u623_21:
 20137  003C  2841               	goto	i1l375
 20138  003D                     u623_20:
 20139  003D                     i1l6207:
 20140                           
 20141                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR5_ISR();
 20142  003D  3191  2127  3180   	fcall	_TMR5_ISR
 20143                           
 20144                           ;interrupt_manager.c: 72: }
 20145  0040  285C               	goto	i1l384
 20146  0041                     i1l375:
 20147                           
 20148                           ;interrupt_manager.c: 73: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 20149  0041  1C1A               	btfss	26,0	;volatile
 20150  0042  2844               	goto	u624_21
 20151  0043  2845               	goto	u624_20
 20152  0044                     u624_21:
 20153  0044  284D               	goto	i1l377
 20154  0045                     u624_20:
 20155  0045                     i1l6209:
 20156  0045  1C10               	btfss	16,0	;volatile
 20157  0046  2848               	goto	u625_21
 20158  0047  2849               	goto	u625_20
 20159  0048                     u625_21:
 20160  0048  284D               	goto	i1l377
 20161  0049                     u625_20:
 20162  0049                     i1l6211:
 20163                           
 20164                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: TMR1_ISR();
 20165  0049  3191  2110  3180   	fcall	_TMR1_ISR
 20166                           
 20167                           ;interrupt_manager.c: 76: }
 20168  004C  285C               	goto	i1l384
 20169  004D                     i1l377:
 20170                           
 20171                           ;interrupt_manager.c: 77: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 20172  004D  1C99               	btfss	25,1	;volatile
 20173  004E  2850               	goto	u626_21
 20174  004F  2851               	goto	u626_20
 20175  0050                     u626_21:
 20176  0050  2856               	goto	i1l379
 20177  0051                     u626_20:
 20178  0051                     i1l6213:
 20179                           
 20180                           ;interrupt_manager.c: 78: {;interrupt_manager.c: 79: i2c1_driver_busCollisionISR();
 20181  0051  1C8F               	btfss	15,1	;volatile
 20182  0052  2854               	goto	u627_21
 20183  0053  2855               	goto	u627_20
 20184  0054                     u627_21:
 20185  0054  2856               	goto	i1l379
 20186  0055                     u627_20:
 20187  0055  285C               	goto	i1l384
 20188  0056                     i1l379:
 20189                           
 20190                           ;interrupt_manager.c: 81: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 20191  0056  1C19               	btfss	25,0	;volatile
 20192  0057  2859               	goto	u628_21
 20193  0058  285A               	goto	u628_20
 20194  0059                     u628_21:
 20195  0059  285C               	goto	i1l378
 20196  005A                     u628_20:
 20197  005A                     i1l6217:
 20198                           
 20199                           ;interrupt_manager.c: 82: {;interrupt_manager.c: 83: i2c1_driver_i2cISR();
 20200  005A  080F               	movf	15,w	;volatile
 20201  005B  285C               	goto	i1l384
 20202  005C                     i1l378:
 20203  005C                     i1l384:
 20204  005C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 20205  005D  0009               	retfie
 20206  005E                     __end_of_INTERRUPT_InterruptManager:
 20207                           
 20208                           	psect	text73
 20209  1127                     __ptext73:	
 20210 ;; *************** function _TMR5_ISR *****************
 20211 ;; Defined at:
 20212 ;;		line 168 in file "mcc_generated_files/tmr5.c"
 20213 ;; Parameters:    Size  Location     Type
 20214 ;;		None
 20215 ;; Auto vars:     Size  Location     Type
 20216 ;;		None
 20217 ;; Return value:  Size  Location     Type
 20218 ;;                  1    wreg      void 
 20219 ;; Registers used:
 20220 ;;		wreg, status,2, status,0, pclath, cstack
 20221 ;; Tracked objects:
 20222 ;;		On entry : 0/0
 20223 ;;		On exit  : 0/0
 20224 ;;		Unchanged: 0/0
 20225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20230 ;;Total ram usage:        0 bytes
 20231 ;; Hardware stack levels used:    1
 20232 ;; Hardware stack levels required when called:    3
 20233 ;; This function calls:
 20234 ;;		Absolute function
 20235 ;;		_TMR5_DefaultInterruptHandler
 20236 ;;		_TMR5_WriteTimer
 20237 ;;		_monitoring_ISR
 20238 ;; This function is called by:
 20239 ;;		_INTERRUPT_InterruptManager
 20240 ;; This function uses a non-reentrant model
 20241 ;;
 20242                           
 20243                           
 20244                           ;psect for function _TMR5_ISR
 20245  1127                     _TMR5_ISR:
 20246  1127                     i1l5639:	
 20247                           ;incstack = 0
 20248                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 20249                           
 20250                           
 20251                           ;tmr5.c: 172: PIR4bits.TMR5IF = 0;
 20252  1127  002E               	movlb	14	; select bank14
 20253  1128  1210               	bcf	16,4	;volatile
 20254  1129                     i1l5641:
 20255                           
 20256                           ;tmr5.c: 173: TMR5_WriteTimer(timer5ReloadVal);
 20257  1129  0021               	movlb	1	; select bank1
 20258  112A  0860               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 20259  112B  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 20260  112C  085F               	movf	_timer5ReloadVal^(0+128),w	;volatile
 20261  112D  00F0               	movwf	TMR5_WriteTimer@timerVal
 20262  112E  3190  20DA  3191   	fcall	_TMR5_WriteTimer
 20263  1131                     i1l5643:
 20264                           
 20265                           ;tmr5.c: 175: if(TMR5_InterruptHandler)
 20266  1131  0021               	movlb	1	; select bank1
 20267  1132  085D               	movf	_TMR5_InterruptHandler^(0+128),w
 20268  1133  045E               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 20269  1134  1903               	btfsc	3,2
 20270  1135  2937               	goto	u518_21
 20271  1136  2938               	goto	u518_20
 20272  1137                     u518_21:
 20273  1137  293D               	goto	i1l673
 20274  1138                     u518_20:
 20275  1138                     i1l5645:
 20276                           
 20277                           ;tmr5.c: 176: {;tmr5.c: 177: TMR5_InterruptHandler();
 20278  1138  085E               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 20279  1139  008A               	movwf	10
 20280  113A  085D               	movf	_TMR5_InterruptHandler^(0+128),w
 20281  113B  000A               	callw
 20282  113C  3191               	pagesel	$
 20283  113D                     i1l673:
 20284  113D  0008               	return
 20285  113E                     __end_of_TMR5_ISR:
 20286                           
 20287                           	psect	text74
 20288  0002                     __ptext74:	
 20289 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 20290 ;; Defined at:
 20291 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 20292 ;; Parameters:    Size  Location     Type
 20293 ;;		None
 20294 ;; Auto vars:     Size  Location     Type
 20295 ;;		None
 20296 ;; Return value:  Size  Location     Type
 20297 ;;                  1    wreg      void 
 20298 ;; Registers used:
 20299 ;;		None
 20300 ;; Tracked objects:
 20301 ;;		On entry : 0/0
 20302 ;;		On exit  : 0/0
 20303 ;;		Unchanged: 0/0
 20304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20309 ;;Total ram usage:        0 bytes
 20310 ;; Hardware stack levels used:    1
 20311 ;; This function calls:
 20312 ;;		Nothing
 20313 ;; This function is called by:
 20314 ;;		_TMR5_Initialize
 20315 ;;		_TMR5_ISR
 20316 ;; This function uses a non-reentrant model
 20317 ;;
 20318                           
 20319                           
 20320                           ;psect for function _TMR5_DefaultInterruptHandler
 20321  0002                     _TMR5_DefaultInterruptHandler:
 20322  0002                     i1l679:	
 20323                           ;incstack = 0
 20324                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 20325                           
 20326  0002  0008               	return
 20327  0003                     __end_of_TMR5_DefaultInterruptHandler:
 20328                           
 20329                           	psect	text75
 20330  0E8D                     __ptext75:	
 20331 ;; *************** function _monitoring_ISR *****************
 20332 ;; Defined at:
 20333 ;;		line 535 in file "main.c"
 20334 ;; Parameters:    Size  Location     Type
 20335 ;;		None
 20336 ;; Auto vars:     Size  Location     Type
 20337 ;;		None
 20338 ;; Return value:  Size  Location     Type
 20339 ;;                  1    wreg      void 
 20340 ;; Registers used:
 20341 ;;		wreg, status,2, status,0, pclath, cstack
 20342 ;; Tracked objects:
 20343 ;;		On entry : 0/0
 20344 ;;		On exit  : 0/0
 20345 ;;		Unchanged: 0/0
 20346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20349 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20351 ;;Total ram usage:        3 bytes
 20352 ;; Hardware stack levels used:    1
 20353 ;; Hardware stack levels required when called:    2
 20354 ;; This function calls:
 20355 ;;		_ADCC_GetSingleConversion
 20356 ;;		_tsttc
 20357 ;;		i1_DATAEE_WriteByte
 20358 ;;		i1___wmul
 20359 ;; This function is called by:
 20360 ;;		_main
 20361 ;;		_TMR5_ISR
 20362 ;; This function uses a non-reentrant model
 20363 ;;
 20364                           
 20365                           
 20366                           ;psect for function _monitoring_ISR
 20367  0E8D                     _monitoring_ISR:
 20368  0E8D                     i1l5481:	
 20369                           ;incstack = 0
 20370                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 20371                           
 20372                           
 20373                           ;main.c: 536: temp = (uint8_t)tsttc();
 20374  0E8D  318D  2580  318E   	fcall	_tsttc
 20375  0E90  00FA               	movwf	??_monitoring_ISR
 20376  0E91  087A               	movf	??_monitoring_ISR,w
 20377  0E92  0020               	movlb	0	; select bank0
 20378  0E93  00E9               	movwf	_temp
 20379                           
 20380                           ;main.c: 538: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 20381  0E94  3000               	movlw	0
 20382  0E95  3190  20EB  318E   	fcall	_ADCC_GetSingleConversion
 20383  0E98  0870               	movf	?_ADCC_GetSingleConversion,w
 20384  0E99  00FA               	movwf	??_monitoring_ISR
 20385  0E9A  0871               	movf	?_ADCC_GetSingleConversion+1,w
 20386  0E9B  00FB               	movwf	??_monitoring_ISR+1
 20387  0E9C  300D               	movlw	13
 20388  0E9D                     u490_25:
 20389  0E9D  36FB               	lsrf	??_monitoring_ISR+1,f
 20390  0E9E  0CFA               	rrf	??_monitoring_ISR,f
 20391  0E9F  0B89               	decfsz	9,f
 20392  0EA0  2E9D               	goto	u490_25
 20393  0EA1  087A               	movf	??_monitoring_ISR,w
 20394  0EA2  00FC               	movwf	??_monitoring_ISR+2
 20395  0EA3  087C               	movf	??_monitoring_ISR+2,w
 20396  0EA4  0020               	movlb	0	; select bank0
 20397  0EA5  00E8               	movwf	_lumLevel
 20398  0EA6                     i1l5483:
 20399                           
 20400                           ;main.c: 540: if(prevTemp != temp || prevLumLevel != lumLevel){
 20401  0EA6  0869               	movf	_temp,w
 20402  0EA7  00FA               	movwf	??_monitoring_ISR
 20403  0EA8  01FB               	clrf	??_monitoring_ISR+1
 20404  0EA9  0021               	movlb	1	; select bank1
 20405  0EAA  086C               	movf	(_prevTemp+1)^(0+128),w
 20406  0EAB  067B               	xorwf	??_monitoring_ISR+1,w
 20407  0EAC  1D03               	skipz
 20408  0EAD  2EB0               	goto	u491_25
 20409  0EAE  086B               	movf	_prevTemp^(0+128),w
 20410  0EAF  067A               	xorwf	??_monitoring_ISR,w
 20411  0EB0                     u491_25:
 20412  0EB0  1D03               	skipz
 20413  0EB1  2EB3               	goto	u491_21
 20414  0EB2  2EB4               	goto	u491_20
 20415  0EB3                     u491_21:
 20416  0EB3  2EC3               	goto	i1l5487
 20417  0EB4                     u491_20:
 20418  0EB4                     i1l5485:
 20419  0EB4  0020               	movlb	0	; select bank0
 20420  0EB5  0868               	movf	_lumLevel,w
 20421  0EB6  00FA               	movwf	??_monitoring_ISR
 20422  0EB7  01FB               	clrf	??_monitoring_ISR+1
 20423  0EB8  0021               	movlb	1	; select bank1
 20424  0EB9  086A               	movf	(_prevLumLevel+1)^(0+128),w
 20425  0EBA  067B               	xorwf	??_monitoring_ISR+1,w
 20426  0EBB  1D03               	skipz
 20427  0EBC  2EBF               	goto	u492_25
 20428  0EBD  0869               	movf	_prevLumLevel^(0+128),w
 20429  0EBE  067A               	xorwf	??_monitoring_ISR,w
 20430  0EBF                     u492_25:
 20431  0EBF  1903               	skipnz
 20432  0EC0  2EC2               	goto	u492_21
 20433  0EC1  2EC3               	goto	u492_20
 20434  0EC2                     u492_21:
 20435  0EC2  2FB7               	goto	i1l5515
 20436  0EC3                     u492_20:
 20437  0EC3                     i1l5487:
 20438                           
 20439                           ;main.c: 547: DATAEE_WriteByte( (iwrite * 0x5) + 0x7014 + 0x0 , t.h);
 20440  0EC3  087D               	movf	_iwrite,w
 20441  0EC4  00FA               	movwf	??_monitoring_ISR
 20442  0EC5  01FB               	clrf	??_monitoring_ISR+1
 20443  0EC6  087A               	movf	??_monitoring_ISR,w
 20444  0EC7  00F0               	movwf	i1___wmul@multiplier
 20445  0EC8  087B               	movf	??_monitoring_ISR+1,w
 20446  0EC9  00F1               	movwf	i1___wmul@multiplier+1
 20447  0ECA  3005               	movlw	5
 20448  0ECB  00F2               	movwf	i1___wmul@multiplicand
 20449  0ECC  3000               	movlw	0
 20450  0ECD  00F3               	movwf	i1___wmul@multiplicand+1
 20451  0ECE  3192  2215  318E   	fcall	i1___wmul
 20452  0ED1  0870               	movf	?i1___wmul,w
 20453  0ED2  3E14               	addlw	20
 20454  0ED3  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20455  0ED4  3070               	movlw	112
 20456  0ED5  3D71               	addwfc	?i1___wmul+1,w
 20457  0ED6  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20458  0ED7  0020               	movlb	0	; select bank0
 20459  0ED8  085F               	movf	_t,w
 20460  0ED9  00FC               	movwf	??_monitoring_ISR+2
 20461  0EDA  087C               	movf	??_monitoring_ISR+2,w
 20462  0EDB  00F8               	movwf	i1DATAEE_WriteByte@bData
 20463  0EDC  3191  21D9  318E   	fcall	i1_DATAEE_WriteByte
 20464                           
 20465                           ;main.c: 548: DATAEE_WriteByte( (iwrite * 0x5) + 0x7014 + 0x1 , t.m);
 20466  0EDF  087D               	movf	_iwrite,w
 20467  0EE0  00FA               	movwf	??_monitoring_ISR
 20468  0EE1  01FB               	clrf	??_monitoring_ISR+1
 20469  0EE2  087A               	movf	??_monitoring_ISR,w
 20470  0EE3  00F0               	movwf	i1___wmul@multiplier
 20471  0EE4  087B               	movf	??_monitoring_ISR+1,w
 20472  0EE5  00F1               	movwf	i1___wmul@multiplier+1
 20473  0EE6  3005               	movlw	5
 20474  0EE7  00F2               	movwf	i1___wmul@multiplicand
 20475  0EE8  3000               	movlw	0
 20476  0EE9  00F3               	movwf	i1___wmul@multiplicand+1
 20477  0EEA  3192  2215  318E   	fcall	i1___wmul
 20478  0EED  0870               	movf	?i1___wmul,w
 20479  0EEE  3E15               	addlw	21
 20480  0EEF  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20481  0EF0  3070               	movlw	112
 20482  0EF1  3D71               	addwfc	?i1___wmul+1,w
 20483  0EF2  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20484  0EF3  0020               	movlb	0	; select bank0
 20485  0EF4  0860               	movf	_t+1,w
 20486  0EF5  00FC               	movwf	??_monitoring_ISR+2
 20487  0EF6  087C               	movf	??_monitoring_ISR+2,w
 20488  0EF7  00F8               	movwf	i1DATAEE_WriteByte@bData
 20489  0EF8  3191  21D9  318E   	fcall	i1_DATAEE_WriteByte
 20490                           
 20491                           ;main.c: 549: DATAEE_WriteByte( (iwrite * 0x5) + 0x7014 + 0x2 , t.s);
 20492  0EFB  087D               	movf	_iwrite,w
 20493  0EFC  00FA               	movwf	??_monitoring_ISR
 20494  0EFD  01FB               	clrf	??_monitoring_ISR+1
 20495  0EFE  087A               	movf	??_monitoring_ISR,w
 20496  0EFF  00F0               	movwf	i1___wmul@multiplier
 20497  0F00  087B               	movf	??_monitoring_ISR+1,w
 20498  0F01  00F1               	movwf	i1___wmul@multiplier+1
 20499  0F02  3005               	movlw	5
 20500  0F03  00F2               	movwf	i1___wmul@multiplicand
 20501  0F04  3000               	movlw	0
 20502  0F05  00F3               	movwf	i1___wmul@multiplicand+1
 20503  0F06  3192  2215  318E   	fcall	i1___wmul
 20504  0F09  0870               	movf	?i1___wmul,w
 20505  0F0A  3E16               	addlw	22
 20506  0F0B  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20507  0F0C  3070               	movlw	112
 20508  0F0D  3D71               	addwfc	?i1___wmul+1,w
 20509  0F0E  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20510  0F0F  0020               	movlb	0	; select bank0
 20511  0F10  0861               	movf	_t+2,w
 20512  0F11  00FC               	movwf	??_monitoring_ISR+2
 20513  0F12  087C               	movf	??_monitoring_ISR+2,w
 20514  0F13  00F8               	movwf	i1DATAEE_WriteByte@bData
 20515  0F14  3191  21D9  318E   	fcall	i1_DATAEE_WriteByte
 20516                           
 20517                           ;main.c: 550: DATAEE_WriteByte( (iwrite * 0x5) + 0x7014 + 0x3 , temp);
 20518  0F17  087D               	movf	_iwrite,w
 20519  0F18  00FA               	movwf	??_monitoring_ISR
 20520  0F19  01FB               	clrf	??_monitoring_ISR+1
 20521  0F1A  087A               	movf	??_monitoring_ISR,w
 20522  0F1B  00F0               	movwf	i1___wmul@multiplier
 20523  0F1C  087B               	movf	??_monitoring_ISR+1,w
 20524  0F1D  00F1               	movwf	i1___wmul@multiplier+1
 20525  0F1E  3005               	movlw	5
 20526  0F1F  00F2               	movwf	i1___wmul@multiplicand
 20527  0F20  3000               	movlw	0
 20528  0F21  00F3               	movwf	i1___wmul@multiplicand+1
 20529  0F22  3192  2215  318E   	fcall	i1___wmul
 20530  0F25  0870               	movf	?i1___wmul,w
 20531  0F26  3E17               	addlw	23
 20532  0F27  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20533  0F28  3070               	movlw	112
 20534  0F29  3D71               	addwfc	?i1___wmul+1,w
 20535  0F2A  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20536  0F2B  0020               	movlb	0	; select bank0
 20537  0F2C  0869               	movf	_temp,w
 20538  0F2D  00FC               	movwf	??_monitoring_ISR+2
 20539  0F2E  087C               	movf	??_monitoring_ISR+2,w
 20540  0F2F  00F8               	movwf	i1DATAEE_WriteByte@bData
 20541  0F30  3191  21D9  318E   	fcall	i1_DATAEE_WriteByte
 20542                           
 20543                           ;main.c: 551: DATAEE_WriteByte( (iwrite * 0x5) + 0x7014 + 0x4 , lumLevel);
 20544  0F33  087D               	movf	_iwrite,w
 20545  0F34  00FA               	movwf	??_monitoring_ISR
 20546  0F35  01FB               	clrf	??_monitoring_ISR+1
 20547  0F36  087A               	movf	??_monitoring_ISR,w
 20548  0F37  00F0               	movwf	i1___wmul@multiplier
 20549  0F38  087B               	movf	??_monitoring_ISR+1,w
 20550  0F39  00F1               	movwf	i1___wmul@multiplier+1
 20551  0F3A  3005               	movlw	5
 20552  0F3B  00F2               	movwf	i1___wmul@multiplicand
 20553  0F3C  3000               	movlw	0
 20554  0F3D  00F3               	movwf	i1___wmul@multiplicand+1
 20555  0F3E  3192  2215  318E   	fcall	i1___wmul
 20556  0F41  0870               	movf	?i1___wmul,w
 20557  0F42  3E18               	addlw	24
 20558  0F43  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20559  0F44  3070               	movlw	112
 20560  0F45  3D71               	addwfc	?i1___wmul+1,w
 20561  0F46  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20562  0F47  0020               	movlb	0	; select bank0
 20563  0F48  0868               	movf	_lumLevel,w
 20564  0F49  00FC               	movwf	??_monitoring_ISR+2
 20565  0F4A  087C               	movf	??_monitoring_ISR+2,w
 20566  0F4B  00F8               	movwf	i1DATAEE_WriteByte@bData
 20567  0F4C  3191  21D9  318E   	fcall	i1_DATAEE_WriteByte
 20568  0F4F                     i1l5489:
 20569                           
 20570                           ;main.c: 553: if((nr == NREG) && (iread == iwrite)){
 20571  0F4F  0021               	movlb	1	; select bank1
 20572  0F50  0854               	movf	_nr^(0+128),w
 20573  0F51  0020               	movlb	0	; select bank0
 20574  0F52  066B               	xorwf	_NREG,w
 20575  0F53  1D03               	skipz
 20576  0F54  2F56               	goto	u493_21
 20577  0F55  2F57               	goto	u493_20
 20578  0F56                     u493_21:
 20579  0F56  2F61               	goto	i1l1404
 20580  0F57                     u493_20:
 20581  0F57                     i1l5491:
 20582  0F57  0866               	movf	_iread,w
 20583  0F58  067D               	xorwf	_iwrite,w
 20584  0F59  1D03               	skipz
 20585  0F5A  2F5C               	goto	u494_21
 20586  0F5B  2F5D               	goto	u494_20
 20587  0F5C                     u494_21:
 20588  0F5C  2F61               	goto	i1l1404
 20589  0F5D                     u494_20:
 20590  0F5D                     i1l5493:
 20591                           
 20592                           ;main.c: 554: iread++;
 20593  0F5D  3001               	movlw	1
 20594  0F5E  00FA               	movwf	??_monitoring_ISR
 20595  0F5F  087A               	movf	??_monitoring_ISR,w
 20596  0F60  07E6               	addwf	_iread,f
 20597  0F61                     i1l1404:
 20598                           
 20599                           ;main.c: 555: };main.c: 557: iwrite++;
 20600  0F61  3001               	movlw	1
 20601  0F62  00FA               	movwf	??_monitoring_ISR
 20602  0F63  087A               	movf	??_monitoring_ISR,w
 20603  0F64  07FD               	addwf	_iwrite,f
 20604  0F65                     i1l5495:
 20605                           
 20606                           ;main.c: 558: if(iwrite > NREG - 1){
 20607  0F65  086B               	movf	_NREG,w
 20608  0F66  3EFF               	addlw	255
 20609  0F67  00FA               	movwf	??_monitoring_ISR
 20610  0F68  30FF               	movlw	255
 20611  0F69  1803               	skipnc
 20612  0F6A  3000               	movlw	0
 20613  0F6B  00FB               	movwf	??_monitoring_ISR+1
 20614  0F6C  087B               	movf	??_monitoring_ISR+1,w
 20615  0F6D  3A80               	xorlw	128
 20616  0F6E  00FC               	movwf	??_monitoring_ISR+2
 20617  0F6F  3080               	movlw	128
 20618  0F70  027C               	subwf	??_monitoring_ISR+2,w
 20619  0F71  1D03               	skipz
 20620  0F72  2F75               	goto	u495_25
 20621  0F73  087D               	movf	_iwrite,w
 20622  0F74  027A               	subwf	??_monitoring_ISR,w
 20623  0F75                     u495_25:
 20624  0F75  1803               	skipnc
 20625  0F76  2F78               	goto	u495_21
 20626  0F77  2F79               	goto	u495_20
 20627  0F78                     u495_21:
 20628  0F78  2F7D               	goto	i1l5501
 20629  0F79                     u495_20:
 20630  0F79                     i1l5497:
 20631                           
 20632                           ;main.c: 559: flagNr = 1;
 20633  0F79  0021               	movlb	1	; select bank1
 20634  0F7A  01D3               	clrf	_flagNr^(0+128)
 20635  0F7B  0AD3               	incf	_flagNr^(0+128),f
 20636  0F7C                     i1l5499:
 20637                           
 20638                           ;main.c: 560: iwrite = 0;
 20639  0F7C  01FD               	clrf	_iwrite
 20640  0F7D                     i1l5501:
 20641                           
 20642                           ;main.c: 561: };main.c: 562: if(flagNr){
 20643  0F7D  0021               	movlb	1	; select bank1
 20644  0F7E  0853               	movf	_flagNr^(0+128),w
 20645  0F7F  1903               	btfsc	3,2
 20646  0F80  2F82               	goto	u496_21
 20647  0F81  2F83               	goto	u496_20
 20648  0F82                     u496_21:
 20649  0F82  2F8A               	goto	i1l5505
 20650  0F83                     u496_20:
 20651  0F83                     i1l5503:
 20652                           
 20653                           ;main.c: 563: nr = NREG;
 20654  0F83  0020               	movlb	0	; select bank0
 20655  0F84  086B               	movf	_NREG,w
 20656  0F85  00FA               	movwf	??_monitoring_ISR
 20657  0F86  087A               	movf	??_monitoring_ISR,w
 20658  0F87  0021               	movlb	1	; select bank1
 20659  0F88  00D4               	movwf	_nr^(0+128)
 20660                           
 20661                           ;main.c: 564: } else{
 20662  0F89  2F8E               	goto	i1l5507
 20663  0F8A                     i1l5505:
 20664                           
 20665                           ;main.c: 565: nr++;
 20666  0F8A  3001               	movlw	1
 20667  0F8B  00FA               	movwf	??_monitoring_ISR
 20668  0F8C  087A               	movf	??_monitoring_ISR,w
 20669  0F8D  07D4               	addwf	_nr^(0+128),f
 20670  0F8E                     i1l5507:
 20671                           
 20672                           ;main.c: 566: };main.c: 568: if(iread > NREG-1){
 20673  0F8E  0020               	movlb	0	; select bank0
 20674  0F8F  086B               	movf	_NREG,w
 20675  0F90  3EFF               	addlw	255
 20676  0F91  00FA               	movwf	??_monitoring_ISR
 20677  0F92  30FF               	movlw	255
 20678  0F93  1803               	skipnc
 20679  0F94  3000               	movlw	0
 20680  0F95  00FB               	movwf	??_monitoring_ISR+1
 20681  0F96  087B               	movf	??_monitoring_ISR+1,w
 20682  0F97  3A80               	xorlw	128
 20683  0F98  00FC               	movwf	??_monitoring_ISR+2
 20684  0F99  3080               	movlw	128
 20685  0F9A  027C               	subwf	??_monitoring_ISR+2,w
 20686  0F9B  1D03               	skipz
 20687  0F9C  2F9F               	goto	u497_25
 20688  0F9D  0866               	movf	_iread,w
 20689  0F9E  027A               	subwf	??_monitoring_ISR,w
 20690  0F9F                     u497_25:
 20691  0F9F  1803               	skipnc
 20692  0FA0  2FA2               	goto	u497_21
 20693  0FA1  2FA3               	goto	u497_20
 20694  0FA2                     u497_21:
 20695  0FA2  2FA5               	goto	i1l5511
 20696  0FA3                     u497_20:
 20697  0FA3                     i1l5509:
 20698                           
 20699                           ;main.c: 569: iread = 0;
 20700  0FA3  0020               	movlb	0	; select bank0
 20701  0FA4  01E6               	clrf	_iread
 20702  0FA5                     i1l5511:
 20703                           
 20704                           ;main.c: 570: };main.c: 572: prevTemp = temp;
 20705  0FA5  0020               	movlb	0	; select bank0
 20706  0FA6  0869               	movf	_temp,w
 20707  0FA7  00FA               	movwf	??_monitoring_ISR
 20708  0FA8  01FB               	clrf	??_monitoring_ISR+1
 20709  0FA9  087A               	movf	??_monitoring_ISR,w
 20710  0FAA  0021               	movlb	1	; select bank1
 20711  0FAB  00EB               	movwf	_prevTemp^(0+128)
 20712  0FAC  087B               	movf	??_monitoring_ISR+1,w
 20713  0FAD  00EC               	movwf	(_prevTemp+1)^(0+128)
 20714  0FAE                     i1l5513:
 20715                           
 20716                           ;main.c: 573: prevLumLevel = lumLevel;
 20717  0FAE  0020               	movlb	0	; select bank0
 20718  0FAF  0868               	movf	_lumLevel,w
 20719  0FB0  00FA               	movwf	??_monitoring_ISR
 20720  0FB1  01FB               	clrf	??_monitoring_ISR+1
 20721  0FB2  087A               	movf	??_monitoring_ISR,w
 20722  0FB3  0021               	movlb	1	; select bank1
 20723  0FB4  00E9               	movwf	_prevLumLevel^(0+128)
 20724  0FB5  087B               	movf	??_monitoring_ISR+1,w
 20725  0FB6  00EA               	movwf	(_prevLumLevel+1)^(0+128)
 20726  0FB7                     i1l5515:
 20727                           
 20728                           ;main.c: 574: };main.c: 577: if(ALAF == 'A'){
 20729  0FB7  3041               	movlw	65
 20730  0FB8  0020               	movlb	0	; select bank0
 20731  0FB9  066A               	xorwf	_ALAF,w
 20732  0FBA  1D03               	btfss	3,2
 20733  0FBB  2FBD               	goto	u498_21
 20734  0FBC  2FBE               	goto	u498_20
 20735  0FBD                     u498_21:
 20736  0FBD  2FFF               	goto	i1l1424
 20737  0FBE                     u498_20:
 20738  0FBE                     i1l5517:
 20739                           
 20740                           ;main.c: 579: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 20741  0FBE  0021               	movlb	1	; select bank1
 20742  0FBF  0847               	movf	_lumAlarm^(0+128),w
 20743  0FC0  0020               	movlb	0	; select bank0
 20744  0FC1  0268               	subwf	_lumLevel,w
 20745  0FC2  1803               	skipnc
 20746  0FC3  2FC5               	goto	u499_21
 20747  0FC4  2FC6               	goto	u499_20
 20748  0FC5                     u499_21:
 20749  0FC5  2FDC               	goto	i1l5531
 20750  0FC6                     u499_20:
 20751  0FC6                     i1l5519:
 20752  0FC6  0021               	movlb	1	; select bank1
 20753  0FC7  0856               	movf	_editingLumAlarm^(0+128),w
 20754  0FC8  1D03               	btfss	3,2
 20755  0FC9  2FCB               	goto	u500_21
 20756  0FCA  2FCC               	goto	u500_20
 20757  0FCB                     u500_21:
 20758  0FCB  2FDC               	goto	i1l5531
 20759  0FCC                     u500_20:
 20760  0FCC                     i1l5521:
 20761                           
 20762                           ;main.c: 580: if(!lumAlarm.triggered){
 20763  0FCC  0849               	movf	(_lumAlarm^(0+128)+2),w
 20764  0FCD  1D03               	btfss	3,2
 20765  0FCE  2FD0               	goto	u501_21
 20766  0FCF  2FD1               	goto	u501_20
 20767  0FD0                     u501_21:
 20768  0FD0  2FD5               	goto	i1l5525
 20769  0FD1                     u501_20:
 20770  0FD1                     i1l5523:
 20771                           
 20772                           ;main.c: 581: alarmPWMStart.h = 0xff;
 20773  0FD1  30FF               	movlw	255
 20774  0FD2  00FA               	movwf	??_monitoring_ISR
 20775  0FD3  087A               	movf	??_monitoring_ISR,w
 20776  0FD4  00E6               	movwf	_alarmPWMStart^(0+128)
 20777  0FD5                     i1l5525:
 20778                           
 20779                           ;main.c: 582: };main.c: 583: lumAlarm.triggered = 1;
 20780  0FD5  01C9               	clrf	(_lumAlarm^(0+128)+2)
 20781  0FD6  0AC9               	incf	(_lumAlarm^(0+128)+2),f
 20782  0FD7                     i1l5527:
 20783                           
 20784                           ;main.c: 585: lumAlarm.trigger = 1;
 20785  0FD7  01C8               	clrf	(_lumAlarm^(0+128)+1)
 20786  0FD8  0AC8               	incf	(_lumAlarm^(0+128)+1),f
 20787  0FD9                     i1l5529:
 20788  0FD9  0020               	movlb	0	; select bank0
 20789  0FDA  1616               	bsf	22,4	;volatile
 20790  0FDB  2FE0               	goto	i1l5535
 20791  0FDC                     i1l5531:
 20792                           
 20793                           ;main.c: 588: lumAlarm.triggered = 0;
 20794  0FDC  0021               	movlb	1	; select bank1
 20795  0FDD  01C9               	clrf	(_lumAlarm^(0+128)+2)
 20796  0FDE                     i1l5533:
 20797  0FDE  0020               	movlb	0	; select bank0
 20798  0FDF  1216               	bcf	22,4	;volatile
 20799  0FE0                     i1l5535:
 20800                           
 20801                           ;main.c: 590: };main.c: 593: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 20802  0FE0  0869               	movf	_temp,w
 20803  0FE1  0021               	movlb	1	; select bank1
 20804  0FE2  024A               	subwf	_tempAlarm^(0+128),w
 20805  0FE3  1803               	skipnc
 20806  0FE4  2FE6               	goto	u502_21
 20807  0FE5  2FE7               	goto	u502_20
 20808  0FE6                     u502_21:
 20809  0FE6  2FFC               	goto	i1l5549
 20810  0FE7                     u502_20:
 20811  0FE7                     i1l5537:
 20812  0FE7  0857               	movf	_editingTempAlarm^(0+128),w
 20813  0FE8  1D03               	btfss	3,2
 20814  0FE9  2FEB               	goto	u503_21
 20815  0FEA  2FEC               	goto	u503_20
 20816  0FEB                     u503_21:
 20817  0FEB  2FFC               	goto	i1l5549
 20818  0FEC                     u503_20:
 20819  0FEC                     i1l5539:
 20820                           
 20821                           ;main.c: 594: if(!tempAlarm.triggered){
 20822  0FEC  084C               	movf	(_tempAlarm^(0+128)+2),w
 20823  0FED  1D03               	btfss	3,2
 20824  0FEE  2FF0               	goto	u504_21
 20825  0FEF  2FF1               	goto	u504_20
 20826  0FF0                     u504_21:
 20827  0FF0  2FF5               	goto	i1l5543
 20828  0FF1                     u504_20:
 20829  0FF1                     i1l5541:
 20830                           
 20831                           ;main.c: 595: alarmPWMStart.h = 0xff;
 20832  0FF1  30FF               	movlw	255
 20833  0FF2  00FA               	movwf	??_monitoring_ISR
 20834  0FF3  087A               	movf	??_monitoring_ISR,w
 20835  0FF4  00E6               	movwf	_alarmPWMStart^(0+128)
 20836  0FF5                     i1l5543:
 20837                           
 20838                           ;main.c: 596: };main.c: 598: tempAlarm.triggered = 1;
 20839  0FF5  01CC               	clrf	(_tempAlarm^(0+128)+2)
 20840  0FF6  0ACC               	incf	(_tempAlarm^(0+128)+2),f
 20841  0FF7                     i1l5545:
 20842                           
 20843                           ;main.c: 600: tempAlarm.trigger = 1;
 20844  0FF7  01CB               	clrf	(_tempAlarm^(0+128)+1)
 20845  0FF8  0ACB               	incf	(_tempAlarm^(0+128)+1),f
 20846  0FF9                     i1l5547:
 20847  0FF9  0020               	movlb	0	; select bank0
 20848  0FFA  1696               	bsf	22,5	;volatile
 20849  0FFB  2FFF               	goto	i1l1424
 20850  0FFC                     i1l5549:
 20851                           
 20852                           ;main.c: 604: tempAlarm.triggered = 0;
 20853  0FFC  01CC               	clrf	(_tempAlarm^(0+128)+2)
 20854  0FFD                     i1l5551:
 20855  0FFD  0020               	movlb	0	; select bank0
 20856  0FFE  1296               	bcf	22,5	;volatile
 20857  0FFF                     i1l1424:
 20858  0FFF  0008               	return
 20859  1000                     __end_of_monitoring_ISR:
 20860                           
 20861                           	psect	text76
 20862  1215                     __ptext76:	
 20863 ;; *************** function i1___wmul *****************
 20864 ;; Defined at:
 20865 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 20866 ;; Parameters:    Size  Location     Type
 20867 ;;  multiplier      2    0[COMMON] unsigned int 
 20868 ;;  multiplicand    2    2[COMMON] unsigned int 
 20869 ;; Auto vars:     Size  Location     Type
 20870 ;;  product         2    4[COMMON] unsigned int 
 20871 ;; Return value:  Size  Location     Type
 20872 ;;                  2    0[COMMON] unsigned int 
 20873 ;; Registers used:
 20874 ;;		wreg, status,2, status,0
 20875 ;; Tracked objects:
 20876 ;;		On entry : 0/0
 20877 ;;		On exit  : 0/0
 20878 ;;		Unchanged: 0/0
 20879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20883 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20884 ;;Total ram usage:        6 bytes
 20885 ;; Hardware stack levels used:    1
 20886 ;; This function calls:
 20887 ;;		Nothing
 20888 ;; This function is called by:
 20889 ;;		_monitoring_ISR
 20890 ;; This function uses a non-reentrant model
 20891 ;;
 20892                           
 20893                           
 20894                           ;psect for function i1___wmul
 20895  1215                     i1___wmul:
 20896  1215                     i1l5031:	
 20897                           ;incstack = 0
 20898                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 20899                           
 20900  1215  01F4               	clrf	i1___wmul@product
 20901  1216  01F5               	clrf	i1___wmul@product+1
 20902  1217                     i1l5033:
 20903  1217  1C70               	btfss	i1___wmul@multiplier,0
 20904  1218  2A1A               	goto	u437_21
 20905  1219  2A1B               	goto	u437_20
 20906  121A                     u437_21:
 20907  121A  2A1F               	goto	i1l1838
 20908  121B                     u437_20:
 20909  121B                     i1l5035:
 20910  121B  0872               	movf	i1___wmul@multiplicand,w
 20911  121C  07F4               	addwf	i1___wmul@product,f
 20912  121D  0873               	movf	i1___wmul@multiplicand+1,w
 20913  121E  3DF5               	addwfc	i1___wmul@product+1,f
 20914  121F                     i1l1838:
 20915  121F  3001               	movlw	1
 20916  1220                     u438_25:
 20917  1220  35F2               	lslf	i1___wmul@multiplicand,f
 20918  1221  0DF3               	rlf	i1___wmul@multiplicand+1,f
 20919  1222  0B89               	decfsz	9,f
 20920  1223  2A20               	goto	u438_25
 20921  1224                     i1l5037:
 20922  1224  3001               	movlw	1
 20923  1225                     u439_25:
 20924  1225  36F1               	lsrf	i1___wmul@multiplier+1,f
 20925  1226  0CF0               	rrf	i1___wmul@multiplier,f
 20926  1227  0B89               	decfsz	9,f
 20927  1228  2A25               	goto	u439_25
 20928  1229                     i1l5039:
 20929  1229  0870               	movf	i1___wmul@multiplier,w
 20930  122A  0471               	iorwf	i1___wmul@multiplier+1,w
 20931  122B  1D03               	btfss	3,2
 20932  122C  2A2E               	goto	u440_21
 20933  122D  2A2F               	goto	u440_20
 20934  122E                     u440_21:
 20935  122E  2A17               	goto	i1l5033
 20936  122F                     u440_20:
 20937  122F                     i1l5041:
 20938  122F  0875               	movf	i1___wmul@product+1,w
 20939  1230  00F1               	movwf	?i1___wmul+1
 20940  1231  0874               	movf	i1___wmul@product,w
 20941  1232  00F0               	movwf	?i1___wmul
 20942  1233                     i1l1840:
 20943  1233  0008               	return
 20944  1234                     __end_ofi1___wmul:
 20945                           
 20946                           	psect	text77
 20947  0D80                     __ptext77:	
 20948 ;; *************** function _tsttc *****************
 20949 ;; Defined at:
 20950 ;;		line 189 in file "main.c"
 20951 ;; Parameters:    Size  Location     Type
 20952 ;;		None
 20953 ;; Auto vars:     Size  Location     Type
 20954 ;;  value           1    3[COMMON] unsigned char 
 20955 ;; Return value:  Size  Location     Type
 20956 ;;                  1    wreg      unsigned char 
 20957 ;; Registers used:
 20958 ;;		wreg, status,2, status,0, pclath, cstack
 20959 ;; Tracked objects:
 20960 ;;		On entry : 0/0
 20961 ;;		On exit  : 0/0
 20962 ;;		Unchanged: 0/0
 20963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20968 ;;Total ram usage:        2 bytes
 20969 ;; Hardware stack levels used:    1
 20970 ;; Hardware stack levels required when called:    1
 20971 ;; This function calls:
 20972 ;;		_ReadI2C
 20973 ;;		i1_WriteI2C
 20974 ;; This function is called by:
 20975 ;;		_monitoring_ISR
 20976 ;; This function uses a non-reentrant model
 20977 ;;
 20978                           
 20979                           
 20980                           ;psect for function _tsttc
 20981  0D80                     _tsttc:
 20982  0D80                     i1l1089:	
 20983                           ;incstack = 0
 20984                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 20985                           ;main.c: 191: unsigned char value;;main.c: 192: do{
 20986                           
 20987  0D80                     i1l4815:	
 20988                           ;main.c: 193: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20989                           
 20990  0D80  0023               	movlb	3	; select bank3
 20991  0D81  0C0F               	rrf	15,w	;volatile
 20992  0D82  0C89               	rrf	9,f
 20993  0D83  3901               	andlw	1
 20994  0D84  00F2               	movwf	??_tsttc
 20995  0D85  0811               	movf	17,w	;volatile
 20996  0D86  391F               	andlw	31
 20997  0D87  0472               	iorwf	??_tsttc,w
 20998  0D88  1D03               	btfss	3,2
 20999  0D89  2D8B               	goto	u389_21
 21000  0D8A  2D8C               	goto	u389_20
 21001  0D8B                     u389_21:
 21002  0D8B  2D80               	goto	i1l4815
 21003  0D8C                     u389_20:
 21004  0D8C                     i1l1092:
 21005                           
 21006                           ;main.c: 194: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 21007  0D8C  1411               	bsf	17,0	;volatile
 21008  0D8D                     i1l1093:
 21009  0D8D  1811               	btfsc	17,0	;volatile
 21010  0D8E  2D90               	goto	u390_21
 21011  0D8F  2D91               	goto	u390_20
 21012  0D90                     u390_21:
 21013  0D90  2D8D               	goto	i1l1093
 21014  0D91                     u390_20:
 21015  0D91                     i1l4817:
 21016  0D91  0C0F               	rrf	15,w	;volatile
 21017  0D92  0C89               	rrf	9,f
 21018  0D93  3901               	andlw	1
 21019  0D94  00F2               	movwf	??_tsttc
 21020  0D95  0811               	movf	17,w	;volatile
 21021  0D96  391F               	andlw	31
 21022  0D97  0472               	iorwf	??_tsttc,w
 21023  0D98  1D03               	btfss	3,2
 21024  0D99  2D9B               	goto	u391_21
 21025  0D9A  2D9C               	goto	u391_20
 21026  0D9B                     u391_21:
 21027  0D9B  2D91               	goto	i1l4817
 21028  0D9C                     u391_20:
 21029  0D9C                     i1l4819:
 21030                           
 21031                           ;main.c: 196: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21032  0D9C  309A               	movlw	154
 21033  0D9D  3197  2762  318D   	fcall	i1_WriteI2C
 21034  0DA0                     i1l4821:
 21035  0DA0  0023               	movlb	3	; select bank3
 21036  0DA1  0C0F               	rrf	15,w	;volatile
 21037  0DA2  0C89               	rrf	9,f
 21038  0DA3  3901               	andlw	1
 21039  0DA4  00F2               	movwf	??_tsttc
 21040  0DA5  0811               	movf	17,w	;volatile
 21041  0DA6  391F               	andlw	31
 21042  0DA7  0472               	iorwf	??_tsttc,w
 21043  0DA8  1D03               	btfss	3,2
 21044  0DA9  2DAB               	goto	u392_21
 21045  0DAA  2DAC               	goto	u392_20
 21046  0DAB                     u392_21:
 21047  0DAB  2DA0               	goto	i1l4821
 21048  0DAC                     u392_20:
 21049  0DAC                     i1l4823:
 21050                           
 21051                           ;main.c: 197: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21052  0DAC  3001               	movlw	1
 21053  0DAD  3197  2762  318D   	fcall	i1_WriteI2C
 21054  0DB0                     i1l4825:
 21055  0DB0  0023               	movlb	3	; select bank3
 21056  0DB1  0C0F               	rrf	15,w	;volatile
 21057  0DB2  0C89               	rrf	9,f
 21058  0DB3  3901               	andlw	1
 21059  0DB4  00F2               	movwf	??_tsttc
 21060  0DB5  0811               	movf	17,w	;volatile
 21061  0DB6  391F               	andlw	31
 21062  0DB7  0472               	iorwf	??_tsttc,w
 21063  0DB8  1D03               	btfss	3,2
 21064  0DB9  2DBB               	goto	u393_21
 21065  0DBA  2DBC               	goto	u393_20
 21066  0DBB                     u393_21:
 21067  0DBB  2DB0               	goto	i1l4825
 21068  0DBC                     u393_20:
 21069  0DBC                     i1l1104:
 21070                           
 21071                           ;main.c: 198: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
 21072  0DBC  1491               	bsf	17,1	;volatile
 21073  0DBD                     i1l1105:
 21074  0DBD  1891               	btfsc	17,1	;volatile
 21075  0DBE  2DC0               	goto	u394_21
 21076  0DBF  2DC1               	goto	u394_20
 21077  0DC0                     u394_21:
 21078  0DC0  2DBD               	goto	i1l1105
 21079  0DC1                     u394_20:
 21080  0DC1                     i1l4827:
 21081  0DC1  0C0F               	rrf	15,w	;volatile
 21082  0DC2  0C89               	rrf	9,f
 21083  0DC3  3901               	andlw	1
 21084  0DC4  00F2               	movwf	??_tsttc
 21085  0DC5  0811               	movf	17,w	;volatile
 21086  0DC6  391F               	andlw	31
 21087  0DC7  0472               	iorwf	??_tsttc,w
 21088  0DC8  1D03               	btfss	3,2
 21089  0DC9  2DCB               	goto	u395_21
 21090  0DCA  2DCC               	goto	u395_20
 21091  0DCB                     u395_21:
 21092  0DCB  2DC1               	goto	i1l4827
 21093  0DCC                     u395_20:
 21094  0DCC                     i1l4829:
 21095                           
 21096                           ;main.c: 199: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21097  0DCC  309B               	movlw	155
 21098  0DCD  3197  2762  318D   	fcall	i1_WriteI2C
 21099  0DD0                     i1l4831:
 21100  0DD0  0023               	movlb	3	; select bank3
 21101  0DD1  0C0F               	rrf	15,w	;volatile
 21102  0DD2  0C89               	rrf	9,f
 21103  0DD3  3901               	andlw	1
 21104  0DD4  00F2               	movwf	??_tsttc
 21105  0DD5  0811               	movf	17,w	;volatile
 21106  0DD6  391F               	andlw	31
 21107  0DD7  0472               	iorwf	??_tsttc,w
 21108  0DD8  1D03               	btfss	3,2
 21109  0DD9  2DDB               	goto	u396_21
 21110  0DDA  2DDC               	goto	u396_20
 21111  0DDB                     u396_21:
 21112  0DDB  2DD0               	goto	i1l4831
 21113  0DDC                     u396_20:
 21114  0DDC                     i1l4833:
 21115                           
 21116                           ;main.c: 200: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21117  0DDC  3191  216E  318D   	fcall	_ReadI2C
 21118  0DDF  00F2               	movwf	??_tsttc
 21119  0DE0  0872               	movf	??_tsttc,w
 21120  0DE1  00F3               	movwf	tsttc@value
 21121  0DE2                     i1l4835:
 21122  0DE2  0023               	movlb	3	; select bank3
 21123  0DE3  0C0F               	rrf	15,w	;volatile
 21124  0DE4  0C89               	rrf	9,f
 21125  0DE5  3901               	andlw	1
 21126  0DE6  00F2               	movwf	??_tsttc
 21127  0DE7  0811               	movf	17,w	;volatile
 21128  0DE8  391F               	andlw	31
 21129  0DE9  0472               	iorwf	??_tsttc,w
 21130  0DEA  1D03               	btfss	3,2
 21131  0DEB  2DED               	goto	u397_21
 21132  0DEC  2DEE               	goto	u397_20
 21133  0DED                     u397_21:
 21134  0DED  2DE2               	goto	i1l4835
 21135  0DEE                     u397_20:
 21136  0DEE                     i1l1116:
 21137                           
 21138                           ;main.c: 201: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21139  0DEE  1691               	bsf	17,5	;volatile
 21140  0DEF  1611               	bsf	17,4	;volatile
 21141  0DF0                     i1l1117:
 21142  0DF0  1A11               	btfsc	17,4	;volatile
 21143  0DF1  2DF3               	goto	u398_21
 21144  0DF2  2DF4               	goto	u398_20
 21145  0DF3                     u398_21:
 21146  0DF3  2DF0               	goto	i1l1117
 21147  0DF4                     u398_20:
 21148  0DF4                     i1l4837:
 21149  0DF4  0C0F               	rrf	15,w	;volatile
 21150  0DF5  0C89               	rrf	9,f
 21151  0DF6  3901               	andlw	1
 21152  0DF7  00F2               	movwf	??_tsttc
 21153  0DF8  0811               	movf	17,w	;volatile
 21154  0DF9  391F               	andlw	31
 21155  0DFA  0472               	iorwf	??_tsttc,w
 21156  0DFB  1D03               	btfss	3,2
 21157  0DFC  2DFE               	goto	u399_21
 21158  0DFD  2DFF               	goto	u399_20
 21159  0DFE                     u399_21:
 21160  0DFE  2DF4               	goto	i1l4837
 21161  0DFF                     u399_20:
 21162  0DFF                     i1l1122:
 21163                           
 21164                           ;main.c: 202: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 21165  0DFF  1511               	bsf	17,2	;volatile
 21166  0E00                     i1l1123:
 21167  0E00  1911               	btfsc	17,2	;volatile
 21168  0E01  2E03               	goto	u400_21
 21169  0E02  2E04               	goto	u400_20
 21170  0E03                     u400_21:
 21171  0E03  2E00               	goto	i1l1123
 21172  0E04                     u400_20:
 21173  0E04                     i1l1125:
 21174                           
 21175                           ;main.c: 203: } while (!(value & 0x40));
 21176  0E04  1F73               	btfss	tsttc@value,6
 21177  0E05  2E07               	goto	u401_21
 21178  0E06  2E08               	goto	u401_20
 21179  0E07                     u401_21:
 21180  0E07  2D80               	goto	i1l1089
 21181  0E08                     u401_20:
 21182  0E08                     i1l4839:
 21183  0E08  0C0F               	rrf	15,w	;volatile
 21184  0E09  0C89               	rrf	9,f
 21185  0E0A  3901               	andlw	1
 21186  0E0B  00F2               	movwf	??_tsttc
 21187  0E0C  0811               	movf	17,w	;volatile
 21188  0E0D  391F               	andlw	31
 21189  0E0E  0472               	iorwf	??_tsttc,w
 21190  0E0F  1D03               	btfss	3,2
 21191  0E10  2E12               	goto	u402_21
 21192  0E11  2E13               	goto	u402_20
 21193  0E12                     u402_21:
 21194  0E12  2E08               	goto	i1l4839
 21195  0E13                     u402_20:
 21196  0E13                     i1l1129:
 21197                           
 21198                           ;main.c: 206: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 21199  0E13  1411               	bsf	17,0	;volatile
 21200  0E14                     i1l1130:
 21201  0E14  1811               	btfsc	17,0	;volatile
 21202  0E15  2E17               	goto	u403_21
 21203  0E16  2E18               	goto	u403_20
 21204  0E17                     u403_21:
 21205  0E17  2E14               	goto	i1l1130
 21206  0E18                     u403_20:
 21207  0E18                     i1l4841:
 21208  0E18  0C0F               	rrf	15,w	;volatile
 21209  0E19  0C89               	rrf	9,f
 21210  0E1A  3901               	andlw	1
 21211  0E1B  00F2               	movwf	??_tsttc
 21212  0E1C  0811               	movf	17,w	;volatile
 21213  0E1D  391F               	andlw	31
 21214  0E1E  0472               	iorwf	??_tsttc,w
 21215  0E1F  1D03               	btfss	3,2
 21216  0E20  2E22               	goto	u404_21
 21217  0E21  2E23               	goto	u404_20
 21218  0E22                     u404_21:
 21219  0E22  2E18               	goto	i1l4841
 21220  0E23                     u404_20:
 21221  0E23                     i1l4843:
 21222                           
 21223                           ;main.c: 207: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21224  0E23  309A               	movlw	154
 21225  0E24  3197  2762  318D   	fcall	i1_WriteI2C
 21226  0E27                     i1l4845:
 21227  0E27  0023               	movlb	3	; select bank3
 21228  0E28  0C0F               	rrf	15,w	;volatile
 21229  0E29  0C89               	rrf	9,f
 21230  0E2A  3901               	andlw	1
 21231  0E2B  00F2               	movwf	??_tsttc
 21232  0E2C  0811               	movf	17,w	;volatile
 21233  0E2D  391F               	andlw	31
 21234  0E2E  0472               	iorwf	??_tsttc,w
 21235  0E2F  1D03               	btfss	3,2
 21236  0E30  2E32               	goto	u405_21
 21237  0E31  2E33               	goto	u405_20
 21238  0E32                     u405_21:
 21239  0E32  2E27               	goto	i1l4845
 21240  0E33                     u405_20:
 21241  0E33                     i1l4847:
 21242                           
 21243                           ;main.c: 208: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21244  0E33  3000               	movlw	0
 21245  0E34  3197  2762  318D   	fcall	i1_WriteI2C
 21246  0E37                     i1l4849:
 21247  0E37  0023               	movlb	3	; select bank3
 21248  0E38  0C0F               	rrf	15,w	;volatile
 21249  0E39  0C89               	rrf	9,f
 21250  0E3A  3901               	andlw	1
 21251  0E3B  00F2               	movwf	??_tsttc
 21252  0E3C  0811               	movf	17,w	;volatile
 21253  0E3D  391F               	andlw	31
 21254  0E3E  0472               	iorwf	??_tsttc,w
 21255  0E3F  1D03               	btfss	3,2
 21256  0E40  2E42               	goto	u406_21
 21257  0E41  2E43               	goto	u406_20
 21258  0E42                     u406_21:
 21259  0E42  2E37               	goto	i1l4849
 21260  0E43                     u406_20:
 21261  0E43                     i1l1141:
 21262                           
 21263                           ;main.c: 209: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
 21264  0E43  1491               	bsf	17,1	;volatile
 21265  0E44                     i1l1142:
 21266  0E44  1891               	btfsc	17,1	;volatile
 21267  0E45  2E47               	goto	u407_21
 21268  0E46  2E48               	goto	u407_20
 21269  0E47                     u407_21:
 21270  0E47  2E44               	goto	i1l1142
 21271  0E48                     u407_20:
 21272  0E48                     i1l4851:
 21273  0E48  0C0F               	rrf	15,w	;volatile
 21274  0E49  0C89               	rrf	9,f
 21275  0E4A  3901               	andlw	1
 21276  0E4B  00F2               	movwf	??_tsttc
 21277  0E4C  0811               	movf	17,w	;volatile
 21278  0E4D  391F               	andlw	31
 21279  0E4E  0472               	iorwf	??_tsttc,w
 21280  0E4F  1D03               	btfss	3,2
 21281  0E50  2E52               	goto	u408_21
 21282  0E51  2E53               	goto	u408_20
 21283  0E52                     u408_21:
 21284  0E52  2E48               	goto	i1l4851
 21285  0E53                     u408_20:
 21286  0E53                     i1l4853:
 21287                           
 21288                           ;main.c: 210: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21289  0E53  309B               	movlw	155
 21290  0E54  3197  2762  318D   	fcall	i1_WriteI2C
 21291  0E57                     i1l4855:
 21292  0E57  0023               	movlb	3	; select bank3
 21293  0E58  0C0F               	rrf	15,w	;volatile
 21294  0E59  0C89               	rrf	9,f
 21295  0E5A  3901               	andlw	1
 21296  0E5B  00F2               	movwf	??_tsttc
 21297  0E5C  0811               	movf	17,w	;volatile
 21298  0E5D  391F               	andlw	31
 21299  0E5E  0472               	iorwf	??_tsttc,w
 21300  0E5F  1D03               	btfss	3,2
 21301  0E60  2E62               	goto	u409_21
 21302  0E61  2E63               	goto	u409_20
 21303  0E62                     u409_21:
 21304  0E62  2E57               	goto	i1l4855
 21305  0E63                     u409_20:
 21306  0E63                     i1l4857:
 21307                           
 21308                           ;main.c: 211: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21309  0E63  3191  216E  318D   	fcall	_ReadI2C
 21310  0E66  00F2               	movwf	??_tsttc
 21311  0E67  0872               	movf	??_tsttc,w
 21312  0E68  00F3               	movwf	tsttc@value
 21313  0E69                     i1l4859:
 21314  0E69  0023               	movlb	3	; select bank3
 21315  0E6A  0C0F               	rrf	15,w	;volatile
 21316  0E6B  0C89               	rrf	9,f
 21317  0E6C  3901               	andlw	1
 21318  0E6D  00F2               	movwf	??_tsttc
 21319  0E6E  0811               	movf	17,w	;volatile
 21320  0E6F  391F               	andlw	31
 21321  0E70  0472               	iorwf	??_tsttc,w
 21322  0E71  1D03               	btfss	3,2
 21323  0E72  2E74               	goto	u410_21
 21324  0E73  2E75               	goto	u410_20
 21325  0E74                     u410_21:
 21326  0E74  2E69               	goto	i1l4859
 21327  0E75                     u410_20:
 21328  0E75                     i1l1153:
 21329                           
 21330                           ;main.c: 212: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 21331  0E75  1691               	bsf	17,5	;volatile
 21332  0E76  1611               	bsf	17,4	;volatile
 21333  0E77                     i1l1154:
 21334  0E77  1A11               	btfsc	17,4	;volatile
 21335  0E78  2E7A               	goto	u411_21
 21336  0E79  2E7B               	goto	u411_20
 21337  0E7A                     u411_21:
 21338  0E7A  2E77               	goto	i1l1154
 21339  0E7B                     u411_20:
 21340  0E7B                     i1l4861:
 21341  0E7B  0C0F               	rrf	15,w	;volatile
 21342  0E7C  0C89               	rrf	9,f
 21343  0E7D  3901               	andlw	1
 21344  0E7E  00F2               	movwf	??_tsttc
 21345  0E7F  0811               	movf	17,w	;volatile
 21346  0E80  391F               	andlw	31
 21347  0E81  0472               	iorwf	??_tsttc,w
 21348  0E82  1D03               	btfss	3,2
 21349  0E83  2E85               	goto	u412_21
 21350  0E84  2E86               	goto	u412_20
 21351  0E85                     u412_21:
 21352  0E85  2E7B               	goto	i1l4861
 21353  0E86                     u412_20:
 21354  0E86                     i1l1159:
 21355                           
 21356                           ;main.c: 213: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 21357  0E86  1511               	bsf	17,2	;volatile
 21358  0E87                     i1l1160:
 21359  0E87  1911               	btfsc	17,2	;volatile
 21360  0E88  2E8A               	goto	u413_21
 21361  0E89  2E8B               	goto	u413_20
 21362  0E8A                     u413_21:
 21363  0E8A  2E87               	goto	i1l1160
 21364  0E8B                     u413_20:
 21365  0E8B                     i1l4863:
 21366                           
 21367                           ;main.c: 215: return value;
 21368  0E8B  0873               	movf	tsttc@value,w
 21369  0E8C                     i1l1163:
 21370  0E8C  0008               	return
 21371  0E8D                     __end_of_tsttc:
 21372                           
 21373                           	psect	text78
 21374  1762                     __ptext78:	
 21375 ;; *************** function i1_WriteI2C *****************
 21376 ;; Defined at:
 21377 ;;		line 47 in file "I2C/i2c.c"
 21378 ;; Parameters:    Size  Location     Type
 21379 ;;  data_out        1    wreg     unsigned char 
 21380 ;; Auto vars:     Size  Location     Type
 21381 ;;  data_out        1    1[COMMON] unsigned char 
 21382 ;; Return value:  Size  Location     Type
 21383 ;;                  1    wreg      char 
 21384 ;; Registers used:
 21385 ;;		wreg, status,2, status,0
 21386 ;; Tracked objects:
 21387 ;;		On entry : 0/0
 21388 ;;		On exit  : 0/0
 21389 ;;		Unchanged: 0/0
 21390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21395 ;;Total ram usage:        2 bytes
 21396 ;; Hardware stack levels used:    1
 21397 ;; This function calls:
 21398 ;;		Nothing
 21399 ;; This function is called by:
 21400 ;;		_tsttc
 21401 ;; This function uses a non-reentrant model
 21402 ;;
 21403                           
 21404                           
 21405                           ;psect for function i1_WriteI2C
 21406  1762                     i1_WriteI2C:
 21407                           
 21408                           ;incstack = 0
 21409                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 21410                           ;i1WriteI2C@data_out stored from wreg
 21411  1762  00F1               	movwf	i1WriteI2C@data_out
 21412  1763                     i1l4757:
 21413                           
 21414                           ;i2c.c: 49: SSP1BUF = data_out;
 21415  1763  0871               	movf	i1WriteI2C@data_out,w
 21416  1764  0023               	movlb	3	; select bank3
 21417  1765  008C               	movwf	12	;volatile
 21418  1766                     i1l4759:
 21419                           
 21420                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 21421  1766  1F90               	btfss	16,7	;volatile
 21422  1767  2F69               	goto	u378_21
 21423  1768  2F6A               	goto	u378_20
 21424  1769                     u378_21:
 21425  1769  2F6B               	goto	i1l4765
 21426  176A                     u378_20:
 21427  176A  2FAC               	goto	i1l30
 21428  176B                     i1l4765:
 21429                           
 21430                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 21431  176B  300F               	movlw	15
 21432  176C  0510               	andwf	16,w	;volatile
 21433  176D  00F0               	movwf	??i1_WriteI2C
 21434  176E  3008               	movlw	8
 21435  176F  0670               	xorwf	??i1_WriteI2C,w
 21436  1770  1903               	btfsc	3,2
 21437  1771  2F73               	goto	u379_21
 21438  1772  2F74               	goto	u379_20
 21439  1773                     u379_21:
 21440  1773  2F8A               	goto	i1l4777
 21441  1774                     u379_20:
 21442  1774                     i1l4767:
 21443  1774  300F               	movlw	15
 21444  1775  0510               	andwf	16,w	;volatile
 21445  1776  00F0               	movwf	??i1_WriteI2C
 21446  1777  300B               	movlw	11
 21447  1778  0670               	xorwf	??i1_WriteI2C,w
 21448  1779  1903               	btfsc	3,2
 21449  177A  2F7C               	goto	u380_21
 21450  177B  2F7D               	goto	u380_20
 21451  177C                     u380_21:
 21452  177C  2F8A               	goto	i1l4777
 21453  177D                     u380_20:
 21454  177D                     i1l4769:
 21455                           
 21456                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 21457  177D  1610               	bsf	16,4	;volatile
 21458  177E                     i1l33:	
 21459                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 21460                           
 21461  177E  002E               	movlb	14	; select bank14
 21462  177F  1C0F               	btfss	15,0	;volatile
 21463  1780  2F82               	goto	u381_21
 21464  1781  2F83               	goto	u381_20
 21465  1782                     u381_21:
 21466  1782  2F7E               	goto	i1l33
 21467  1783                     u381_20:
 21468  1783                     i1l35:
 21469                           
 21470                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 21471  1783  0023               	movlb	3	; select bank3
 21472  1784  190F               	btfsc	15,2	;volatile
 21473  1785  2F87               	goto	u382_21
 21474  1786  2F88               	goto	u382_20
 21475  1787                     u382_21:
 21476  1787  2FAC               	goto	i1l30
 21477  1788                     u382_20:
 21478  1788                     i1l4771:
 21479  1788  080F               	movf	15,w	;volatile
 21480  1789  2FAC               	goto	i1l30
 21481  178A                     i1l4777:
 21482                           
 21483                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 21484  178A  300F               	movlw	15
 21485  178B  0510               	andwf	16,w	;volatile
 21486  178C  00F0               	movwf	??i1_WriteI2C
 21487  178D  3008               	movlw	8
 21488  178E  0670               	xorwf	??i1_WriteI2C,w
 21489  178F  1903               	btfsc	3,2
 21490  1790  2F92               	goto	u383_21
 21491  1791  2F93               	goto	u383_20
 21492  1792                     u383_21:
 21493  1792  2F9C               	goto	i1l42
 21494  1793                     u383_20:
 21495  1793                     i1l4779:
 21496  1793  300F               	movlw	15
 21497  1794  0510               	andwf	16,w	;volatile
 21498  1795  00F0               	movwf	??i1_WriteI2C
 21499  1796  300B               	movlw	11
 21500  1797  0670               	xorwf	??i1_WriteI2C,w
 21501  1798  1D03               	btfss	3,2
 21502  1799  2F9B               	goto	u384_21
 21503  179A  2F9C               	goto	u384_20
 21504  179B                     u384_21:
 21505  179B  2FAC               	goto	i1l30
 21506  179C                     u384_20:
 21507  179C                     i1l42:
 21508  179C  180F               	btfsc	15,0	;volatile
 21509  179D  2F9F               	goto	u385_21
 21510  179E  2FA0               	goto	u385_20
 21511  179F                     u385_21:
 21512  179F  2F9C               	goto	i1l42
 21513  17A0                     u385_20:
 21514  17A0                     i1l4781:
 21515  17A0  0C0F               	rrf	15,w	;volatile
 21516  17A1  0C89               	rrf	9,f
 21517  17A2  3901               	andlw	1
 21518  17A3  00F0               	movwf	??i1_WriteI2C
 21519  17A4  0811               	movf	17,w	;volatile
 21520  17A5  391F               	andlw	31
 21521  17A6  0470               	iorwf	??i1_WriteI2C,w
 21522  17A7  1D03               	btfss	3,2
 21523  17A8  2FAA               	goto	u386_21
 21524  17A9  2FAB               	goto	u386_20
 21525  17AA                     u386_21:
 21526  17AA  2FA0               	goto	i1l4781
 21527  17AB                     u386_20:
 21528  17AB                     i1l47:
 21529                           
 21530                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 21531  17AB  0811               	movf	17,w	;volatile
 21532  17AC                     i1l30:
 21533  17AC  0008               	return
 21534  17AD                     __end_ofi1_WriteI2C:
 21535                           
 21536                           	psect	text79
 21537  116E                     __ptext79:	
 21538 ;; *************** function _ReadI2C *****************
 21539 ;; Defined at:
 21540 ;;		line 32 in file "I2C/i2c.c"
 21541 ;; Parameters:    Size  Location     Type
 21542 ;;		None
 21543 ;; Auto vars:     Size  Location     Type
 21544 ;;		None
 21545 ;; Return value:  Size  Location     Type
 21546 ;;                  1    wreg      unsigned char 
 21547 ;; Registers used:
 21548 ;;		wreg, status,2, status,0
 21549 ;; Tracked objects:
 21550 ;;		On entry : 0/0
 21551 ;;		On exit  : 0/0
 21552 ;;		Unchanged: 0/0
 21553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21558 ;;Total ram usage:        1 bytes
 21559 ;; Hardware stack levels used:    1
 21560 ;; This function calls:
 21561 ;;		Nothing
 21562 ;; This function is called by:
 21563 ;;		_tsttc
 21564 ;;		_LCDrecv
 21565 ;; This function uses a non-reentrant model
 21566 ;;
 21567                           
 21568                           
 21569                           ;psect for function _ReadI2C
 21570  116E                     _ReadI2C:
 21571  116E                     i1l4669:	
 21572                           ;incstack = 0
 21573                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 21574                           
 21575                           
 21576                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 21577  116E  300F               	movlw	15
 21578  116F  0023               	movlb	3	; select bank3
 21579  1170  0510               	andwf	16,w	;volatile
 21580  1171  00F0               	movwf	??_ReadI2C
 21581  1172  3008               	movlw	8
 21582  1173  0670               	xorwf	??_ReadI2C,w
 21583  1174  1903               	btfsc	3,2
 21584  1175  2977               	goto	u356_21
 21585  1176  2978               	goto	u356_20
 21586  1177                     u356_21:
 21587  1177  2981               	goto	i1l22
 21588  1178                     u356_20:
 21589  1178                     i1l4671:
 21590  1178  300F               	movlw	15
 21591  1179  0510               	andwf	16,w	;volatile
 21592  117A  00F0               	movwf	??_ReadI2C
 21593  117B  300B               	movlw	11
 21594  117C  0670               	xorwf	??_ReadI2C,w
 21595  117D  1D03               	btfss	3,2
 21596  117E  2980               	goto	u357_21
 21597  117F  2981               	goto	u357_20
 21598  1180                     u357_21:
 21599  1180  2982               	goto	i1l23
 21600  1181                     u357_20:
 21601  1181                     i1l22:
 21602                           
 21603                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 21604  1181  1591               	bsf	17,3	;volatile
 21605  1182                     i1l23:
 21606  1182  1C0F               	btfss	15,0	;volatile
 21607  1183  2985               	goto	u358_21
 21608  1184  2986               	goto	u358_20
 21609  1185                     u358_21:
 21610  1185  2982               	goto	i1l23
 21611  1186                     u358_20:
 21612  1186                     i1l4673:
 21613                           
 21614                           ;i2c.c: 37: return ( SSP1BUF );
 21615  1186  080C               	movf	12,w	;volatile
 21616  1187                     i1l26:
 21617  1187  0008               	return
 21618  1188                     __end_of_ReadI2C:
 21619                           
 21620                           	psect	text80
 21621  10EB                     __ptext80:	
 21622 ;; *************** function _ADCC_GetSingleConversion *****************
 21623 ;; Defined at:
 21624 ;;		line 130 in file "mcc_generated_files/adcc.c"
 21625 ;; Parameters:    Size  Location     Type
 21626 ;;  channel         1    wreg     enum E12086
 21627 ;; Auto vars:     Size  Location     Type
 21628 ;;  channel         1    3[COMMON] enum E12086
 21629 ;; Return value:  Size  Location     Type
 21630 ;;                  2    0[COMMON] unsigned int 
 21631 ;; Registers used:
 21632 ;;		wreg
 21633 ;; Tracked objects:
 21634 ;;		On entry : 0/0
 21635 ;;		On exit  : 0/0
 21636 ;;		Unchanged: 0/0
 21637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21638 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21641 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21642 ;;Total ram usage:        4 bytes
 21643 ;; Hardware stack levels used:    1
 21644 ;; This function calls:
 21645 ;;		Nothing
 21646 ;; This function is called by:
 21647 ;;		_monitoring_ISR
 21648 ;; This function uses a non-reentrant model
 21649 ;;
 21650                           
 21651                           
 21652                           ;psect for function _ADCC_GetSingleConversion
 21653  10EB                     _ADCC_GetSingleConversion:
 21654                           
 21655                           ;incstack = 0
 21656                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 21657                           ;ADCC_GetSingleConversion@channel stored from wreg
 21658  10EB  00F3               	movwf	ADCC_GetSingleConversion@channel
 21659  10EC                     i1l4789:
 21660                           
 21661                           ;adcc.c: 133: ADPCH = channel;
 21662  10EC  0873               	movf	ADCC_GetSingleConversion@channel,w
 21663  10ED  0021               	movlb	1	; select bank1
 21664  10EE  009E               	movwf	30	;volatile
 21665  10EF                     i1l4791:
 21666                           
 21667                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 21668  10EF  1793               	bsf	19,7	;volatile
 21669  10F0                     i1l4793:
 21670                           
 21671                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 21672  10F0  1313               	bcf	19,6	;volatile
 21673  10F1                     i1l4795:
 21674                           
 21675                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 21676  10F1  1413               	bsf	19,0	;volatile
 21677  10F2                     i1l4797:
 21678                           
 21679                           ;adcc.c: 145: __nop();
 21680  10F2  0000               	nop
 21681  10F3                     i1l543:	
 21682                           ;adcc.c: 149: {
 21683                           
 21684  10F3  0021               	movlb	1	; select bank1
 21685  10F4  1813               	btfsc	19,0	;volatile
 21686  10F5  28F7               	goto	u387_21
 21687  10F6  28F8               	goto	u387_20
 21688  10F7                     u387_21:
 21689  10F7  28F3               	goto	i1l543
 21690  10F8                     u387_20:
 21691  10F8                     i1l4799:
 21692                           
 21693                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 21694  10F8  080D               	movf	13,w	;volatile
 21695  10F9  00F1               	movwf	?_ADCC_GetSingleConversion+1
 21696  10FA  080C               	movf	12,w	;volatile
 21697  10FB  00F0               	movwf	?_ADCC_GetSingleConversion
 21698  10FC                     i1l546:
 21699  10FC  0008               	return
 21700  10FD                     __end_of_ADCC_GetSingleConversion:
 21701                           
 21702                           	psect	text81
 21703  10DA                     __ptext81:	
 21704 ;; *************** function _TMR5_WriteTimer *****************
 21705 ;; Defined at:
 21706 ;;		line 131 in file "mcc_generated_files/tmr5.c"
 21707 ;; Parameters:    Size  Location     Type
 21708 ;;  timerVal        2    0[COMMON] unsigned int 
 21709 ;; Auto vars:     Size  Location     Type
 21710 ;;		None
 21711 ;; Return value:  Size  Location     Type
 21712 ;;                  1    wreg      void 
 21713 ;; Registers used:
 21714 ;;		wreg, status,2
 21715 ;; Tracked objects:
 21716 ;;		On entry : 0/0
 21717 ;;		On exit  : 0/0
 21718 ;;		Unchanged: 0/0
 21719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21724 ;;Total ram usage:        2 bytes
 21725 ;; Hardware stack levels used:    1
 21726 ;; This function calls:
 21727 ;;		Nothing
 21728 ;; This function is called by:
 21729 ;;		_TMR5_ISR
 21730 ;;		_TMR5_Reload
 21731 ;; This function uses a non-reentrant model
 21732 ;;
 21733                           
 21734                           
 21735                           ;psect for function _TMR5_WriteTimer
 21736  10DA                     _TMR5_WriteTimer:
 21737  10DA                     i1l5217:	
 21738                           ;incstack = 0
 21739                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 21740                           
 21741                           
 21742                           ;tmr5.c: 133: if (T5CONbits.nT5SYNC == 1)
 21743  10DA  0024               	movlb	4	; select bank4
 21744  10DB  1D1A               	btfss	26,2	;volatile
 21745  10DC  28DE               	goto	u442_21
 21746  10DD  28DF               	goto	u442_20
 21747  10DE                     u442_21:
 21748  10DE  28E6               	goto	i1l5227
 21749  10DF                     u442_20:
 21750  10DF                     i1l5219:
 21751                           
 21752                           ;tmr5.c: 134: {;tmr5.c: 136: T5CONbits.TMR5ON = 0;
 21753  10DF  101A               	bcf	26,0	;volatile
 21754  10E0                     i1l5221:
 21755                           
 21756                           ;tmr5.c: 139: TMR5H = (timerVal >> 8);
 21757  10E0  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 21758  10E1  0099               	movwf	25	;volatile
 21759  10E2                     i1l5223:
 21760                           
 21761                           ;tmr5.c: 140: TMR5L = timerVal;
 21762  10E2  0870               	movf	TMR5_WriteTimer@timerVal,w
 21763  10E3  0098               	movwf	24	;volatile
 21764  10E4                     i1l5225:
 21765                           
 21766                           ;tmr5.c: 143: T5CONbits.TMR5ON =1;
 21767  10E4  141A               	bsf	26,0	;volatile
 21768                           
 21769                           ;tmr5.c: 144: }
 21770  10E5  28EA               	goto	i1l660
 21771  10E6                     i1l5227:
 21772                           
 21773                           ;tmr5.c: 145: else;tmr5.c: 146: {;tmr5.c: 148: TMR5H = (timerVal >> 8);
 21774  10E6  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 21775  10E7  0099               	movwf	25	;volatile
 21776  10E8                     i1l5229:
 21777                           
 21778                           ;tmr5.c: 149: TMR5L = timerVal;
 21779  10E8  0870               	movf	TMR5_WriteTimer@timerVal,w
 21780  10E9  0098               	movwf	24	;volatile
 21781  10EA                     i1l660:
 21782  10EA  0008               	return
 21783  10EB                     __end_of_TMR5_WriteTimer:
 21784                           
 21785                           	psect	text82
 21786  1110                     __ptext82:	
 21787 ;; *************** function _TMR1_ISR *****************
 21788 ;; Defined at:
 21789 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 21790 ;; Parameters:    Size  Location     Type
 21791 ;;		None
 21792 ;; Auto vars:     Size  Location     Type
 21793 ;;		None
 21794 ;; Return value:  Size  Location     Type
 21795 ;;                  1    wreg      void 
 21796 ;; Registers used:
 21797 ;;		wreg, status,2, status,0, pclath, cstack
 21798 ;; Tracked objects:
 21799 ;;		On entry : 0/0
 21800 ;;		On exit  : 0/0
 21801 ;;		Unchanged: 0/0
 21802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21807 ;;Total ram usage:        0 bytes
 21808 ;; Hardware stack levels used:    1
 21809 ;; Hardware stack levels required when called:    2
 21810 ;; This function calls:
 21811 ;;		Absolute function
 21812 ;;		_Clock_ISR
 21813 ;;		_TMR1_DefaultInterruptHandler
 21814 ;;		_TMR1_WriteTimer
 21815 ;; This function is called by:
 21816 ;;		_INTERRUPT_InterruptManager
 21817 ;; This function uses a non-reentrant model
 21818 ;;
 21819                           
 21820                           
 21821                           ;psect for function _TMR1_ISR
 21822  1110                     _TMR1_ISR:
 21823  1110                     i1l5647:	
 21824                           ;incstack = 0
 21825                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 21826                           
 21827                           
 21828                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 21829  1110  002E               	movlb	14	; select bank14
 21830  1111  1010               	bcf	16,0	;volatile
 21831  1112                     i1l5649:
 21832                           
 21833                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 21834  1112  0021               	movlb	1	; select bank1
 21835  1113  0864               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 21836  1114  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 21837  1115  0863               	movf	_timer1ReloadVal^(0+128),w	;volatile
 21838  1116  00F0               	movwf	TMR1_WriteTimer@timerVal
 21839  1117  3190  20C9  3191   	fcall	_TMR1_WriteTimer
 21840  111A                     i1l5651:
 21841                           
 21842                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 21843  111A  0021               	movlb	1	; select bank1
 21844  111B  0861               	movf	_TMR1_InterruptHandler^(0+128),w
 21845  111C  0462               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 21846  111D  1903               	btfsc	3,2
 21847  111E  2920               	goto	u519_21
 21848  111F  2921               	goto	u519_20
 21849  1120                     u519_21:
 21850  1120  2926               	goto	i1l442
 21851  1121                     u519_20:
 21852  1121                     i1l5653:
 21853                           
 21854                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 21855  1121  0862               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 21856  1122  008A               	movwf	10
 21857  1123  0861               	movf	_TMR1_InterruptHandler^(0+128),w
 21858  1124  000A               	callw
 21859  1125  3191               	pagesel	$
 21860  1126                     i1l442:
 21861  1126  0008               	return
 21862  1127                     __end_of_TMR1_ISR:
 21863                           
 21864                           	psect	text83
 21865  10C9                     __ptext83:	
 21866 ;; *************** function _TMR1_WriteTimer *****************
 21867 ;; Defined at:
 21868 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 21869 ;; Parameters:    Size  Location     Type
 21870 ;;  timerVal        2    0[COMMON] unsigned int 
 21871 ;; Auto vars:     Size  Location     Type
 21872 ;;		None
 21873 ;; Return value:  Size  Location     Type
 21874 ;;                  1    wreg      void 
 21875 ;; Registers used:
 21876 ;;		wreg, status,2
 21877 ;; Tracked objects:
 21878 ;;		On entry : 0/0
 21879 ;;		On exit  : 0/0
 21880 ;;		Unchanged: 0/0
 21881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21886 ;;Total ram usage:        2 bytes
 21887 ;; Hardware stack levels used:    1
 21888 ;; This function calls:
 21889 ;;		Nothing
 21890 ;; This function is called by:
 21891 ;;		_TMR1_ISR
 21892 ;;		_TMR1_Reload
 21893 ;; This function uses a non-reentrant model
 21894 ;;
 21895                           
 21896                           
 21897                           ;psect for function _TMR1_WriteTimer
 21898  10C9                     _TMR1_WriteTimer:
 21899  10C9                     i1l5197:	
 21900                           ;incstack = 0
 21901                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 21902                           
 21903                           
 21904                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 21905  10C9  0024               	movlb	4	; select bank4
 21906  10CA  1D0E               	btfss	14,2	;volatile
 21907  10CB  28CD               	goto	u441_21
 21908  10CC  28CE               	goto	u441_20
 21909  10CD                     u441_21:
 21910  10CD  28D5               	goto	i1l5207
 21911  10CE                     u441_20:
 21912  10CE                     i1l5199:
 21913                           
 21914                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 21915  10CE  100E               	bcf	14,0	;volatile
 21916  10CF                     i1l5201:
 21917                           
 21918                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 21919  10CF  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 21920  10D0  008D               	movwf	13	;volatile
 21921  10D1                     i1l5203:
 21922                           
 21923                           ;tmr1.c: 136: TMR1L = timerVal;
 21924  10D1  0870               	movf	TMR1_WriteTimer@timerVal,w
 21925  10D2  008C               	movwf	12	;volatile
 21926  10D3                     i1l5205:
 21927                           
 21928                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 21929  10D3  140E               	bsf	14,0	;volatile
 21930                           
 21931                           ;tmr1.c: 140: }
 21932  10D4  28D9               	goto	i1l429
 21933  10D5                     i1l5207:
 21934                           
 21935                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 21936  10D5  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 21937  10D6  008D               	movwf	13	;volatile
 21938  10D7                     i1l5209:
 21939                           
 21940                           ;tmr1.c: 145: TMR1L = timerVal;
 21941  10D7  0870               	movf	TMR1_WriteTimer@timerVal,w
 21942  10D8  008C               	movwf	12	;volatile
 21943  10D9                     i1l429:
 21944  10D9  0008               	return
 21945  10DA                     __end_of_TMR1_WriteTimer:
 21946                           
 21947                           	psect	text84
 21948  0C75                     __ptext84:	
 21949 ;; *************** function _Clock_ISR *****************
 21950 ;; Defined at:
 21951 ;;		line 356 in file "main.c"
 21952 ;; Parameters:    Size  Location     Type
 21953 ;;		None
 21954 ;; Auto vars:     Size  Location     Type
 21955 ;;		None
 21956 ;; Return value:  Size  Location     Type
 21957 ;;                  1    wreg      void 
 21958 ;; Registers used:
 21959 ;;		wreg, status,2, status,0, pclath, cstack
 21960 ;; Tracked objects:
 21961 ;;		On entry : 0/0
 21962 ;;		On exit  : 0/0
 21963 ;;		Unchanged: 0/0
 21964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21969 ;;Total ram usage:        1 bytes
 21970 ;; Hardware stack levels used:    1
 21971 ;; Hardware stack levels required when called:    1
 21972 ;; This function calls:
 21973 ;;		i1_DATAEE_WriteByte
 21974 ;; This function is called by:
 21975 ;;		_main
 21976 ;;		_TMR1_ISR
 21977 ;; This function uses a non-reentrant model
 21978 ;;
 21979                           
 21980                           
 21981                           ;psect for function _Clock_ISR
 21982  0C75                     _Clock_ISR:
 21983  0C75                     i1l5289:	
 21984                           ;incstack = 0
 21985                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0+pclath+cstack]
 21986                           
 21987                           
 21988                           ;main.c: 358: t.s++;
 21989  0C75  3001               	movlw	1
 21990  0C76  00FA               	movwf	??_Clock_ISR
 21991  0C77  087A               	movf	??_Clock_ISR,w
 21992  0C78  0020               	movlb	0	; select bank0
 21993  0C79  07E1               	addwf	_t+2,f
 21994                           
 21995                           ;main.c: 360: if(t.s==60){
 21996  0C7A  303C               	movlw	60
 21997  0C7B  0661               	xorwf	_t+2,w
 21998  0C7C  1D03               	btfss	3,2
 21999  0C7D  2C7F               	goto	u452_21
 22000  0C7E  2C80               	goto	u452_20
 22001  0C7F                     u452_21:
 22002  0C7F  2D2F               	goto	i1l5321
 22003  0C80                     u452_20:
 22004  0C80                     i1l5291:
 22005                           
 22006                           ;main.c: 361: t.m++;
 22007  0C80  3001               	movlw	1
 22008  0C81  00FA               	movwf	??_Clock_ISR
 22009  0C82  087A               	movf	??_Clock_ISR,w
 22010  0C83  07E0               	addwf	_t+1,f
 22011  0C84                     i1l5293:
 22012                           
 22013                           ;main.c: 362: t.s=0;
 22014  0C84  01E1               	clrf	_t+2
 22015  0C85                     i1l5295:
 22016                           
 22017                           ;main.c: 365: DATAEE_WriteByte( 0x7000 + (1 * 8), NREG);
 22018  0C85  3008               	movlw	8
 22019  0C86  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22020  0C87  3070               	movlw	112
 22021  0C88  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22022  0C89  086B               	movf	_NREG,w
 22023  0C8A  00FA               	movwf	??_Clock_ISR
 22024  0C8B  087A               	movf	??_Clock_ISR,w
 22025  0C8C  00F8               	movwf	i1DATAEE_WriteByte@bData
 22026  0C8D  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22027  0C90                     i1l5297:
 22028                           
 22029                           ;main.c: 366: DATAEE_WriteByte( 0x7000 + (2 * 8), PMON);
 22030  0C90  3010               	movlw	16
 22031  0C91  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22032  0C92  3070               	movlw	112
 22033  0C93  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22034  0C94  0021               	movlb	1	; select bank1
 22035  0C95  086E               	movf	_PMON^(0+128),w
 22036  0C96  00FA               	movwf	??_Clock_ISR
 22037  0C97  087A               	movf	??_Clock_ISR,w
 22038  0C98  00F8               	movwf	i1DATAEE_WriteByte@bData
 22039  0C99  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22040  0C9C                     i1l5299:
 22041                           
 22042                           ;main.c: 367: DATAEE_WriteByte( 0x7000 + (3 * 8), TALA);
 22043  0C9C  3018               	movlw	24
 22044  0C9D  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22045  0C9E  3070               	movlw	112
 22046  0C9F  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22047  0CA0  0021               	movlb	1	; select bank1
 22048  0CA1  086D               	movf	_TALA^(0+128),w
 22049  0CA2  00FA               	movwf	??_Clock_ISR
 22050  0CA3  087A               	movf	??_Clock_ISR,w
 22051  0CA4  00F8               	movwf	i1DATAEE_WriteByte@bData
 22052  0CA5  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22053  0CA8                     i1l5301:
 22054                           
 22055                           ;main.c: 368: DATAEE_WriteByte( 0x7000 + (4 * 8), clkAlarm.alarmVal.h);
 22056  0CA8  3020               	movlw	32
 22057  0CA9  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22058  0CAA  3070               	movlw	112
 22059  0CAB  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22060  0CAC  0021               	movlb	1	; select bank1
 22061  0CAD  0840               	movf	_clkAlarm^(0+128),w
 22062  0CAE  00FA               	movwf	??_Clock_ISR
 22063  0CAF  087A               	movf	??_Clock_ISR,w
 22064  0CB0  00F8               	movwf	i1DATAEE_WriteByte@bData
 22065  0CB1  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22066  0CB4                     i1l5303:
 22067                           
 22068                           ;main.c: 369: DATAEE_WriteByte( 0x7000 + (5 * 8), clkAlarm.alarmVal.m);
 22069  0CB4  3028               	movlw	40
 22070  0CB5  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22071  0CB6  3070               	movlw	112
 22072  0CB7  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22073  0CB8  0021               	movlb	1	; select bank1
 22074  0CB9  0841               	movf	(_clkAlarm^(0+128)+1),w
 22075  0CBA  00FA               	movwf	??_Clock_ISR
 22076  0CBB  087A               	movf	??_Clock_ISR,w
 22077  0CBC  00F8               	movwf	i1DATAEE_WriteByte@bData
 22078  0CBD  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22079  0CC0                     i1l5305:
 22080                           
 22081                           ;main.c: 370: DATAEE_WriteByte( 0x7000 + (6 * 8), clkAlarm.alarmVal.s);
 22082  0CC0  3030               	movlw	48
 22083  0CC1  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22084  0CC2  3070               	movlw	112
 22085  0CC3  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22086  0CC4  0021               	movlb	1	; select bank1
 22087  0CC5  0842               	movf	(_clkAlarm^(0+128)+2),w
 22088  0CC6  00FA               	movwf	??_Clock_ISR
 22089  0CC7  087A               	movf	??_Clock_ISR,w
 22090  0CC8  00F8               	movwf	i1DATAEE_WriteByte@bData
 22091  0CC9  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22092  0CCC                     i1l5307:
 22093                           
 22094                           ;main.c: 371: DATAEE_WriteByte( 0x7000 + (7 * 8), tempAlarm.alarmTemp);
 22095  0CCC  3038               	movlw	56
 22096  0CCD  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22097  0CCE  3070               	movlw	112
 22098  0CCF  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22099  0CD0  0021               	movlb	1	; select bank1
 22100  0CD1  084A               	movf	_tempAlarm^(0+128),w
 22101  0CD2  00FA               	movwf	??_Clock_ISR
 22102  0CD3  087A               	movf	??_Clock_ISR,w
 22103  0CD4  00F8               	movwf	i1DATAEE_WriteByte@bData
 22104  0CD5  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22105  0CD8                     i1l5309:
 22106                           
 22107                           ;main.c: 372: DATAEE_WriteByte( 0x7000 + (8 * 8), lumAlarm.alarmLum);
 22108  0CD8  3040               	movlw	64
 22109  0CD9  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22110  0CDA  3070               	movlw	112
 22111  0CDB  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22112  0CDC  0021               	movlb	1	; select bank1
 22113  0CDD  0847               	movf	_lumAlarm^(0+128),w
 22114  0CDE  00FA               	movwf	??_Clock_ISR
 22115  0CDF  087A               	movf	??_Clock_ISR,w
 22116  0CE0  00F8               	movwf	i1DATAEE_WriteByte@bData
 22117  0CE1  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22118  0CE4                     i1l5311:
 22119                           
 22120                           ;main.c: 373: DATAEE_WriteByte( 0x7000 + (9 * 8), ALAF);
 22121  0CE4  3048               	movlw	72
 22122  0CE5  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22123  0CE6  3070               	movlw	112
 22124  0CE7  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22125  0CE8  0020               	movlb	0	; select bank0
 22126  0CE9  086A               	movf	_ALAF,w
 22127  0CEA  00FA               	movwf	??_Clock_ISR
 22128  0CEB  087A               	movf	??_Clock_ISR,w
 22129  0CEC  00F8               	movwf	i1DATAEE_WriteByte@bData
 22130  0CED  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22131  0CF0                     i1l5313:
 22132                           
 22133                           ;main.c: 374: DATAEE_WriteByte( 0x7000 + (10 * 8), t.h);
 22134  0CF0  3050               	movlw	80
 22135  0CF1  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22136  0CF2  3070               	movlw	112
 22137  0CF3  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22138  0CF4  0020               	movlb	0	; select bank0
 22139  0CF5  085F               	movf	_t,w
 22140  0CF6  00FA               	movwf	??_Clock_ISR
 22141  0CF7  087A               	movf	??_Clock_ISR,w
 22142  0CF8  00F8               	movwf	i1DATAEE_WriteByte@bData
 22143  0CF9  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22144  0CFC                     i1l5315:
 22145                           
 22146                           ;main.c: 375: DATAEE_WriteByte( 0x7000 + (11 * 8), t.m);
 22147  0CFC  3058               	movlw	88
 22148  0CFD  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22149  0CFE  3070               	movlw	112
 22150  0CFF  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22151  0D00  0020               	movlb	0	; select bank0
 22152  0D01  0860               	movf	_t+1,w
 22153  0D02  00FA               	movwf	??_Clock_ISR
 22154  0D03  087A               	movf	??_Clock_ISR,w
 22155  0D04  00F8               	movwf	i1DATAEE_WriteByte@bData
 22156  0D05  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22157  0D08                     i1l5317:
 22158                           
 22159                           ;main.c: 376: DATAEE_WriteByte( 0x7000 + (12 * 8), iwrite);
 22160  0D08  3060               	movlw	96
 22161  0D09  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22162  0D0A  3070               	movlw	112
 22163  0D0B  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22164  0D0C  087D               	movf	_iwrite,w
 22165  0D0D  00FA               	movwf	??_Clock_ISR
 22166  0D0E  087A               	movf	??_Clock_ISR,w
 22167  0D0F  00F8               	movwf	i1DATAEE_WriteByte@bData
 22168  0D10  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22169  0D13                     i1l5319:
 22170                           
 22171                           ;main.c: 377: DATAEE_WriteByte( 0x7000 + (13 * 8), NREG + PMON + TALA + clkAlarm.alarmVa
      +                          l.h + clkAlarm.alarmVal.m + clkAlarm.alarmVal.s + tempAlarm.alarmTemp + lumAlarm.alarmLu
      +                          m + ALAF + t.h + t.m + iwrite);
 22172  0D13  3068               	movlw	104
 22173  0D14  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 22174  0D15  3070               	movlw	112
 22175  0D16  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 22176  0D17  0021               	movlb	1	; select bank1
 22177  0D18  0841               	movf	(_clkAlarm^(0+128)+1),w
 22178  0D19  0742               	addwf	(_clkAlarm^(0+128)+2),w
 22179  0D1A  0020               	movlb	0	; select bank0
 22180  0D1B  0760               	addwf	_t+1,w
 22181  0D1C  0021               	movlb	1	; select bank1
 22182  0D1D  0740               	addwf	_clkAlarm^(0+128),w
 22183  0D1E  074A               	addwf	_tempAlarm^(0+128),w
 22184  0D1F  0747               	addwf	_lumAlarm^(0+128),w
 22185  0D20  0020               	movlb	0	; select bank0
 22186  0D21  075F               	addwf	_t,w
 22187  0D22  076B               	addwf	_NREG,w
 22188  0D23  0021               	movlb	1	; select bank1
 22189  0D24  076E               	addwf	_PMON^(0+128),w
 22190  0D25  076D               	addwf	_TALA^(0+128),w
 22191  0D26  0020               	movlb	0	; select bank0
 22192  0D27  076A               	addwf	_ALAF,w
 22193  0D28  077D               	addwf	_iwrite,w
 22194  0D29  00FA               	movwf	??_Clock_ISR
 22195  0D2A  087A               	movf	??_Clock_ISR,w
 22196  0D2B  00F8               	movwf	i1DATAEE_WriteByte@bData
 22197  0D2C  3191  21D9  318C   	fcall	i1_DATAEE_WriteByte
 22198  0D2F                     i1l5321:
 22199                           
 22200                           ;main.c: 378: };main.c: 379: if(t.m==60){
 22201  0D2F  303C               	movlw	60
 22202  0D30  0020               	movlb	0	; select bank0
 22203  0D31  0660               	xorwf	_t+1,w
 22204  0D32  1D03               	btfss	3,2
 22205  0D33  2D35               	goto	u453_21
 22206  0D34  2D36               	goto	u453_20
 22207  0D35                     u453_21:
 22208  0D35  2D3B               	goto	i1l5327
 22209  0D36                     u453_20:
 22210  0D36                     i1l5323:
 22211                           
 22212                           ;main.c: 380: t.h++;
 22213  0D36  3001               	movlw	1
 22214  0D37  00FA               	movwf	??_Clock_ISR
 22215  0D38  087A               	movf	??_Clock_ISR,w
 22216  0D39  07DF               	addwf	_t,f
 22217  0D3A                     i1l5325:
 22218                           
 22219                           ;main.c: 381: t.m=0;
 22220  0D3A  01E0               	clrf	_t+1
 22221  0D3B                     i1l5327:
 22222                           
 22223                           ;main.c: 382: };main.c: 383: if(t.h==24){
 22224  0D3B  3018               	movlw	24
 22225  0D3C  065F               	xorwf	_t,w
 22226  0D3D  1D03               	btfss	3,2
 22227  0D3E  2D40               	goto	u454_21
 22228  0D3F  2D41               	goto	u454_20
 22229  0D40                     u454_21:
 22230  0D40  2D42               	goto	i1l5331
 22231  0D41                     u454_20:
 22232  0D41                     i1l5329:
 22233                           
 22234                           ;main.c: 384: t.h=0;
 22235  0D41  01DF               	clrf	_t
 22236  0D42                     i1l5331:
 22237                           
 22238                           ;main.c: 385: };main.c: 388: if((ALAF == 'A') && t.s >= clkAlarm.alarmVal.s && t.m >= cl
      +                          kAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 22239  0D42  3041               	movlw	65
 22240  0D43  066A               	xorwf	_ALAF,w
 22241  0D44  1D03               	btfss	3,2
 22242  0D45  2D47               	goto	u455_21
 22243  0D46  2D48               	goto	u455_20
 22244  0D47                     u455_21:
 22245  0D47  2D71               	goto	i1l5345
 22246  0D48                     u455_20:
 22247  0D48                     i1l5333:
 22248  0D48  0021               	movlb	1	; select bank1
 22249  0D49  0842               	movf	(_clkAlarm^(0+128)+2),w
 22250  0D4A  0020               	movlb	0	; select bank0
 22251  0D4B  0261               	subwf	_t+2,w
 22252  0D4C  1C03               	skipc
 22253  0D4D  2D4F               	goto	u456_21
 22254  0D4E  2D50               	goto	u456_20
 22255  0D4F                     u456_21:
 22256  0D4F  2D71               	goto	i1l5345
 22257  0D50                     u456_20:
 22258  0D50                     i1l5335:
 22259  0D50  0021               	movlb	1	; select bank1
 22260  0D51  0841               	movf	(_clkAlarm^(0+128)+1),w
 22261  0D52  0020               	movlb	0	; select bank0
 22262  0D53  0260               	subwf	_t+1,w
 22263  0D54  1C03               	skipc
 22264  0D55  2D57               	goto	u457_21
 22265  0D56  2D58               	goto	u457_20
 22266  0D57                     u457_21:
 22267  0D57  2D71               	goto	i1l5345
 22268  0D58                     u457_20:
 22269  0D58                     i1l5337:
 22270  0D58  0021               	movlb	1	; select bank1
 22271  0D59  0840               	movf	_clkAlarm^(0+128),w
 22272  0D5A  0020               	movlb	0	; select bank0
 22273  0D5B  025F               	subwf	_t,w
 22274  0D5C  1C03               	skipc
 22275  0D5D  2D5F               	goto	u458_21
 22276  0D5E  2D60               	goto	u458_20
 22277  0D5F                     u458_21:
 22278  0D5F  2D71               	goto	i1l5345
 22279  0D60                     u458_20:
 22280  0D60                     i1l5339:
 22281  0D60  0864               	movf	_editingClockAlarm,w
 22282  0D61  0465               	iorwf	_editingClockAlarm+1,w
 22283  0D62  1D03               	btfss	3,2
 22284  0D63  2D65               	goto	u459_21
 22285  0D64  2D66               	goto	u459_20
 22286  0D65                     u459_21:
 22287  0D65  2D71               	goto	i1l5345
 22288  0D66                     u459_20:
 22289  0D66                     i1l5341:
 22290                           
 22291                           ;main.c: 389: alarmPWMStart.h = 0xff;
 22292  0D66  30FF               	movlw	255
 22293  0D67  00FA               	movwf	??_Clock_ISR
 22294  0D68  087A               	movf	??_Clock_ISR,w
 22295  0D69  0021               	movlb	1	; select bank1
 22296  0D6A  00E6               	movwf	_alarmPWMStart^(0+128)
 22297  0D6B                     i1l5343:
 22298                           
 22299                           ;main.c: 390: clkAlarm.trigger = 1;
 22300  0D6B  01C3               	clrf	(_clkAlarm^(0+128)+3)
 22301  0D6C  0AC3               	incf	(_clkAlarm^(0+128)+3),f
 22302                           
 22303                           ;main.c: 391: clkAlarm.alarmVal.h = 25;
 22304  0D6D  3019               	movlw	25
 22305  0D6E  00FA               	movwf	??_Clock_ISR
 22306  0D6F  087A               	movf	??_Clock_ISR,w
 22307  0D70  00C0               	movwf	_clkAlarm^(0+128)
 22308  0D71                     i1l5345:
 22309  0D71  1003               	clrc
 22310  0D72  0020               	movlb	0	; select bank0
 22311  0D73  1F96               	btfss	22,7	;volatile
 22312  0D74  1403               	setc
 22313  0D75  1803               	btfsc	3,0
 22314  0D76  2D78               	goto	u460_21
 22315  0D77  2D7B               	goto	u460_20
 22316  0D78                     u460_21:
 22317  0D78  0020               	movlb	0	; select bank0
 22318  0D79  1796               	bsf	22,7	;volatile
 22319  0D7A  2D7D               	goto	u461_24
 22320  0D7B                     u460_20:
 22321  0D7B  0020               	movlb	0	; select bank0
 22322  0D7C  1396               	bcf	22,7	;volatile
 22323  0D7D                     u461_24:
 22324  0D7D                     i1l5347:
 22325                           
 22326                           ;main.c: 395: updateLCD = 1;
 22327  0D7D  01EF               	clrf	_updateLCD
 22328  0D7E  0AEF               	incf	_updateLCD,f
 22329  0D7F                     i1l1347:
 22330  0D7F  0008               	return
 22331  0D80                     __end_of_Clock_ISR:
 22332                           
 22333                           	psect	text85
 22334  0801                     __ptext85:	
 22335 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 22336 ;; Defined at:
 22337 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 22338 ;; Parameters:    Size  Location     Type
 22339 ;;		None
 22340 ;; Auto vars:     Size  Location     Type
 22341 ;;		None
 22342 ;; Return value:  Size  Location     Type
 22343 ;;                  1    wreg      void 
 22344 ;; Registers used:
 22345 ;;		None
 22346 ;; Tracked objects:
 22347 ;;		On entry : 0/0
 22348 ;;		On exit  : 0/0
 22349 ;;		Unchanged: 0/0
 22350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22355 ;;Total ram usage:        0 bytes
 22356 ;; Hardware stack levels used:    1
 22357 ;; This function calls:
 22358 ;;		Nothing
 22359 ;; This function is called by:
 22360 ;;		_TMR1_Initialize
 22361 ;;		_TMR1_ISR
 22362 ;; This function uses a non-reentrant model
 22363 ;;
 22364                           
 22365                           
 22366                           ;psect for function _TMR1_DefaultInterruptHandler
 22367  0801                     _TMR1_DefaultInterruptHandler:
 22368  0801                     i1l448:	
 22369                           ;incstack = 0
 22370                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 22371                           
 22372  0801  0008               	return
 22373  0802                     __end_of_TMR1_DefaultInterruptHandler:
 22374                           
 22375                           	psect	text86
 22376  11D9                     __ptext86:	
 22377 ;; *************** function i1_DATAEE_WriteByte *****************
 22378 ;; Defined at:
 22379 ;;		line 180 in file "mcc_generated_files/memory.c"
 22380 ;; Parameters:    Size  Location     Type
 22381 ;;  bAdd            2    6[COMMON] unsigned int 
 22382 ;;  bData           1    8[COMMON] unsigned char 
 22383 ;; Auto vars:     Size  Location     Type
 22384 ;;  GIEBitValue     1    9[COMMON] unsigned char 
 22385 ;; Return value:  Size  Location     Type
 22386 ;;                  1    wreg      void 
 22387 ;; Registers used:
 22388 ;;		wreg, status,2, status,0
 22389 ;; Tracked objects:
 22390 ;;		On entry : 0/0
 22391 ;;		On exit  : 0/0
 22392 ;;		Unchanged: 0/0
 22393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22394 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22395 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22398 ;;Total ram usage:        4 bytes
 22399 ;; Hardware stack levels used:    1
 22400 ;; This function calls:
 22401 ;;		Nothing
 22402 ;; This function is called by:
 22403 ;;		_Clock_ISR
 22404 ;;		_monitoring_ISR
 22405 ;; This function uses a non-reentrant model
 22406 ;;
 22407                           
 22408                           
 22409                           ;psect for function i1_DATAEE_WriteByte
 22410  11D9                     i1_DATAEE_WriteByte:
 22411  11D9                     i1l5011:	
 22412                           ;incstack = 0
 22413                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 22414                           
 22415                           
 22416                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 22417  11D9  3000               	movlw	0
 22418  11DA  1B8B               	btfsc	11,7	;volatile
 22419  11DB  3001               	movlw	1
 22420  11DC  00F9               	movwf	i1DATAEE_WriteByte@GIEBitValue
 22421                           
 22422                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 22423  11DD  0877               	movf	i1DATAEE_WriteByte@bAdd+1,w
 22424  11DE  0030               	movlb	16	; select bank16
 22425  11DF  009B               	movwf	27	;volatile
 22426  11E0                     i1l5013:
 22427                           
 22428                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 22429  11E0  0876               	movf	i1DATAEE_WriteByte@bAdd,w
 22430  11E1  009A               	movwf	26	;volatile
 22431  11E2                     i1l5015:
 22432                           
 22433                           ;memory.c: 186: NVMDATL = bData;
 22434  11E2  0878               	movf	i1DATAEE_WriteByte@bData,w
 22435  11E3  009C               	movwf	28	;volatile
 22436  11E4                     i1l5017:
 22437                           
 22438                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 22439  11E4  171E               	bsf	30,6	;volsfr
 22440  11E5                     i1l5019:
 22441                           
 22442                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 22443  11E5  151E               	bsf	30,2	;volsfr
 22444  11E6                     i1l5021:
 22445                           
 22446                           ;memory.c: 189: INTCONbits.GIE = 0;
 22447  11E6  138B               	bcf	11,7	;volatile
 22448  11E7                     i1l5023:
 22449                           
 22450                           ;memory.c: 190: NVMCON2 = 0x55;
 22451  11E7  3055               	movlw	85
 22452  11E8  009F               	movwf	31	;volsfr
 22453  11E9                     i1l5025:
 22454                           
 22455                           ;memory.c: 191: NVMCON2 = 0xAA;
 22456  11E9  30AA               	movlw	170
 22457  11EA  009F               	movwf	31	;volsfr
 22458  11EB                     i1l5027:
 22459                           
 22460                           ;memory.c: 192: NVMCON1bits.WR = 1;
 22461  11EB  149E               	bsf	30,1	;volsfr
 22462  11EC                     i1l801:	
 22463                           ;memory.c: 195: {
 22464                           
 22465  11EC  189E               	btfsc	30,1	;volsfr
 22466  11ED  29EF               	goto	u436_21
 22467  11EE  29F0               	goto	u436_20
 22468  11EF                     u436_21:
 22469  11EF  29EC               	goto	i1l801
 22470  11F0                     u436_20:
 22471  11F0                     i1l803:
 22472                           
 22473                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 22474  11F0  111E               	bcf	30,2	;volsfr
 22475  11F1                     i1l5029:
 22476                           
 22477                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 22478  11F1  0C79               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 22479  11F2  1C03               	skipc
 22480  11F3  138B               	bcf	11,7	;volatile
 22481  11F4  1803               	skipnc
 22482  11F5  178B               	bsf	11,7	;volatile
 22483  11F6                     i1l804:
 22484  11F6  0008               	return
 22485  11F7                     __end_ofi1_DATAEE_WriteByte:
 22486                           
 22487                           	psect	text87
 22488  1001                     __ptext87:	
 22489 ;; *************** function _INT_ISR *****************
 22490 ;; Defined at:
 22491 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 22492 ;; Parameters:    Size  Location     Type
 22493 ;;		None
 22494 ;; Auto vars:     Size  Location     Type
 22495 ;;		None
 22496 ;; Return value:  Size  Location     Type
 22497 ;;                  1    wreg      void 
 22498 ;; Registers used:
 22499 ;;		wreg, status,2, status,0, pclath, cstack
 22500 ;; Tracked objects:
 22501 ;;		On entry : 0/0
 22502 ;;		On exit  : 0/0
 22503 ;;		Unchanged: 0/0
 22504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22509 ;;Total ram usage:        0 bytes
 22510 ;; Hardware stack levels used:    1
 22511 ;; Hardware stack levels required when called:    2
 22512 ;; This function calls:
 22513 ;;		_INT_CallBack
 22514 ;; This function is called by:
 22515 ;;		_INTERRUPT_InterruptManager
 22516 ;; This function uses a non-reentrant model
 22517 ;;
 22518                           
 22519                           
 22520                           ;psect for function _INT_ISR
 22521  1001                     _INT_ISR:
 22522  1001                     i1l5635:	
 22523                           ;incstack = 0
 22524                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 22525                           
 22526                           
 22527                           ;ext_int.c: 34: (PIR0bits.INTF = 0);
 22528  1001  002E               	movlb	14	; select bank14
 22529  1002  100C               	bcf	12,0	;volatile
 22530  1003                     i1l5637:
 22531                           
 22532                           ;ext_int.c: 37: INT_CallBack();
 22533  1003  3190  2084  3190   	fcall	_INT_CallBack
 22534  1006                     i1l820:
 22535  1006  0008               	return
 22536  1007                     __end_of_INT_ISR:
 22537                           
 22538                           	psect	text88
 22539  1084                     __ptext88:	
 22540 ;; *************** function _INT_CallBack *****************
 22541 ;; Defined at:
 22542 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 22543 ;; Parameters:    Size  Location     Type
 22544 ;;		None
 22545 ;; Auto vars:     Size  Location     Type
 22546 ;;		None
 22547 ;; Return value:  Size  Location     Type
 22548 ;;                  1    wreg      void 
 22549 ;; Registers used:
 22550 ;;		wreg, status,2, status,0, pclath, cstack
 22551 ;; Tracked objects:
 22552 ;;		On entry : 0/0
 22553 ;;		On exit  : 0/0
 22554 ;;		Unchanged: 0/0
 22555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22560 ;;Total ram usage:        0 bytes
 22561 ;; Hardware stack levels used:    1
 22562 ;; Hardware stack levels required when called:    1
 22563 ;; This function calls:
 22564 ;;		Absolute function
 22565 ;;		_INT_DefaultInterruptHandler
 22566 ;;		_S1_ISR
 22567 ;; This function is called by:
 22568 ;;		_INT_ISR
 22569 ;; This function uses a non-reentrant model
 22570 ;;
 22571                           
 22572                           
 22573                           ;psect for function _INT_CallBack
 22574  1084                     _INT_CallBack:
 22575  1084                     i1l5249:	
 22576                           ;incstack = 0
 22577                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 22578                           
 22579                           
 22580                           ;ext_int.c: 44: if(INT_InterruptHandler)
 22581  1084  0021               	movlb	1	; select bank1
 22582  1085  085B               	movf	_INT_InterruptHandler^(0+128),w
 22583  1086  045C               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 22584  1087  1903               	btfsc	3,2
 22585  1088  288A               	goto	u443_21
 22586  1089  288B               	goto	u443_20
 22587  108A                     u443_21:
 22588  108A  2890               	goto	i1l824
 22589  108B                     u443_20:
 22590  108B                     i1l5251:
 22591                           
 22592                           ;ext_int.c: 45: {;ext_int.c: 46: INT_InterruptHandler();
 22593  108B  085C               	movf	(_INT_InterruptHandler+1)^(0+128),w
 22594  108C  008A               	movwf	10
 22595  108D  085B               	movf	_INT_InterruptHandler^(0+128),w
 22596  108E  000A               	callw
 22597  108F  3190               	pagesel	$
 22598  1090                     i1l824:
 22599  1090  0008               	return
 22600  1091                     __end_of_INT_CallBack:
 22601                           
 22602                           	psect	text89
 22603  0800                     __ptext89:	
 22604 ;; *************** function _INT_DefaultInterruptHandler *****************
 22605 ;; Defined at:
 22606 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 22607 ;; Parameters:    Size  Location     Type
 22608 ;;		None
 22609 ;; Auto vars:     Size  Location     Type
 22610 ;;		None
 22611 ;; Return value:  Size  Location     Type
 22612 ;;                  1    wreg      void 
 22613 ;; Registers used:
 22614 ;;		None
 22615 ;; Tracked objects:
 22616 ;;		On entry : 0/0
 22617 ;;		On exit  : 0/0
 22618 ;;		Unchanged: 0/0
 22619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22624 ;;Total ram usage:        0 bytes
 22625 ;; Hardware stack levels used:    1
 22626 ;; This function calls:
 22627 ;;		Nothing
 22628 ;; This function is called by:
 22629 ;;		_EXT_INT_Initialize
 22630 ;;		_INT_CallBack
 22631 ;; This function uses a non-reentrant model
 22632 ;;
 22633                           
 22634                           
 22635                           ;psect for function _INT_DefaultInterruptHandler
 22636  0800                     _INT_DefaultInterruptHandler:
 22637  0800                     i1l830:	
 22638                           ;incstack = 0
 22639                           ; Regs used in _INT_DefaultInterruptHandler: []
 22640                           
 22641  0800  0008               	return
 22642  0801                     __end_of_INT_DefaultInterruptHandler:
 22643                           
 22644                           	psect	text90
 22645  102A                     __ptext90:	
 22646 ;; *************** function _S1_ISR *****************
 22647 ;; Defined at:
 22648 ;;		line 774 in file "main.c"
 22649 ;; Parameters:    Size  Location     Type
 22650 ;;		None
 22651 ;; Auto vars:     Size  Location     Type
 22652 ;;		None
 22653 ;; Return value:  Size  Location     Type
 22654 ;;                  1    wreg      void 
 22655 ;; Registers used:
 22656 ;;		None
 22657 ;; Tracked objects:
 22658 ;;		On entry : 0/0
 22659 ;;		On exit  : 0/0
 22660 ;;		Unchanged: 0/0
 22661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22666 ;;Total ram usage:        0 bytes
 22667 ;; Hardware stack levels used:    1
 22668 ;; This function calls:
 22669 ;;		Nothing
 22670 ;; This function is called by:
 22671 ;;		_main
 22672 ;;		_INT_CallBack
 22673 ;; This function uses a non-reentrant model
 22674 ;;
 22675                           
 22676                           
 22677                           ;psect for function _S1_ISR
 22678  102A                     _S1_ISR:
 22679  102A                     i1l5001:	
 22680                           ;incstack = 0
 22681                           ; Regs used in _S1_ISR: []
 22682                           
 22683                           
 22684                           ;main.c: 775: PIE0bits.INTE = 0;
 22685  102A  002E               	movlb	14	; select bank14
 22686  102B  1016               	bcf	22,0	;volatile
 22687                           
 22688                           ;main.c: 776: flagS1pushed = 1;
 22689  102C  0020               	movlb	0	; select bank0
 22690  102D  01E7               	clrf	_flagS1pushed
 22691  102E  0AE7               	incf	_flagS1pushed,f
 22692                           
 22693                           ;main.c: 795: (PIR0bits.INTF = 0);
 22694  102F  002E               	movlb	14	; select bank14
 22695  1030  100C               	bcf	12,0	;volatile
 22696                           
 22697                           ;main.c: 796: PIE0bits.INTE = 1;
 22698  1031  1416               	bsf	22,0	;volatile
 22699  1032                     i1l1499:
 22700  1032  0008               	return
 22701  1033                     __end_of_S1_ISR:
 22702                           
 22703                           	psect	text91
 22704  135A                     __ptext91:	
 22705 ;; *************** function _EUSART_Transmit_ISR *****************
 22706 ;; Defined at:
 22707 ;;		line 181 in file "mcc_generated_files/eusart.c"
 22708 ;; Parameters:    Size  Location     Type
 22709 ;;		None
 22710 ;; Auto vars:     Size  Location     Type
 22711 ;;		None
 22712 ;; Return value:  Size  Location     Type
 22713 ;;                  1    wreg      void 
 22714 ;; Registers used:
 22715 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22716 ;; Tracked objects:
 22717 ;;		On entry : 0/0
 22718 ;;		On exit  : 0/0
 22719 ;;		Unchanged: 0/0
 22720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22725 ;;Total ram usage:        1 bytes
 22726 ;; Hardware stack levels used:    1
 22727 ;; This function calls:
 22728 ;;		Nothing
 22729 ;; This function is called by:
 22730 ;;		_EUSART_Initialize
 22731 ;;		_INTERRUPT_InterruptManager
 22732 ;; This function uses a non-reentrant model
 22733 ;;
 22734                           
 22735                           
 22736                           ;psect for function _EUSART_Transmit_ISR
 22737  135A                     _EUSART_Transmit_ISR:
 22738  135A                     i1l5685:	
 22739                           ;incstack = 0
 22740                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 22741                           
 22742                           
 22743                           ;eusart.c: 185: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 22744  135A  3040               	movlw	64
 22745  135B  0021               	movlb	1	; select bank1
 22746  135C  0265               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 22747  135D  1803               	skipnc
 22748  135E  2B60               	goto	u521_21
 22749  135F  2B61               	goto	u521_20
 22750  1360                     u521_21:
 22751  1360  2B7C               	goto	i1l918
 22752  1361                     u521_20:
 22753  1361                     i1l5687:
 22754                           
 22755                           ;eusart.c: 186: {;eusart.c: 187: TX1REG = eusartTxBuffer[eusartTxTail++];
 22756  1361  0020               	movlb	0	; select bank0
 22757  1362  086D               	movf	_eusartTxTail,w
 22758  1363  3EA0               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 22759  1364  0086               	movwf	6
 22760  1365  3001               	movlw	1	; select bank3/4
 22761  1366  0087               	movwf	7
 22762  1367  0801               	movf	1,w
 22763  1368  0022               	movlb	2	; select bank2
 22764  1369  009A               	movwf	26	;volatile
 22765  136A                     i1l5689:
 22766  136A  3001               	movlw	1
 22767  136B  00F0               	movwf	??_EUSART_Transmit_ISR
 22768  136C  0870               	movf	??_EUSART_Transmit_ISR,w
 22769  136D  0020               	movlb	0	; select bank0
 22770  136E  07ED               	addwf	_eusartTxTail,f	;volatile
 22771  136F                     i1l5691:
 22772                           
 22773                           ;eusart.c: 188: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 22774  136F  3040               	movlw	64
 22775  1370  026D               	subwf	_eusartTxTail,w	;volatile
 22776  1371  1C03               	skipc
 22777  1372  2B74               	goto	u522_21
 22778  1373  2B75               	goto	u522_20
 22779  1374                     u522_21:
 22780  1374  2B76               	goto	i1l5695
 22781  1375                     u522_20:
 22782  1375                     i1l5693:
 22783                           
 22784                           ;eusart.c: 189: {;eusart.c: 190: eusartTxTail = 0;
 22785  1375  01ED               	clrf	_eusartTxTail	;volatile
 22786  1376                     i1l5695:
 22787                           
 22788                           ;eusart.c: 191: };eusart.c: 192: eusartTxBufferRemaining++;
 22789  1376  3001               	movlw	1
 22790  1377  00F0               	movwf	??_EUSART_Transmit_ISR
 22791  1378  0870               	movf	??_EUSART_Transmit_ISR,w
 22792  1379  0021               	movlb	1	; select bank1
 22793  137A  07E5               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 22794                           
 22795                           ;eusart.c: 193: }
 22796  137B  2B7E               	goto	i1l921
 22797  137C                     i1l918:
 22798                           
 22799                           ;eusart.c: 194: else;eusart.c: 195: {;eusart.c: 196: PIE3bits.TXIE = 0;
 22800  137C  002E               	movlb	14	; select bank14
 22801  137D  1219               	bcf	25,4	;volatile
 22802  137E                     i1l921:
 22803  137E  0008               	return
 22804  137F                     __end_of_EUSART_Transmit_ISR:
 22805                           
 22806                           	psect	text92
 22807  12F1                     __ptext92:	
 22808 ;; *************** function _EUSART_Receive_ISR *****************
 22809 ;; Defined at:
 22810 ;;		line 200 in file "mcc_generated_files/eusart.c"
 22811 ;; Parameters:    Size  Location     Type
 22812 ;;		None
 22813 ;; Auto vars:     Size  Location     Type
 22814 ;;		None
 22815 ;; Return value:  Size  Location     Type
 22816 ;;                  1    wreg      void 
 22817 ;; Registers used:
 22818 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22819 ;; Tracked objects:
 22820 ;;		On entry : 0/0
 22821 ;;		On exit  : 0/0
 22822 ;;		Unchanged: 0/0
 22823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22827 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22828 ;;Total ram usage:        1 bytes
 22829 ;; Hardware stack levels used:    1
 22830 ;; This function calls:
 22831 ;;		Nothing
 22832 ;; This function is called by:
 22833 ;;		_EUSART_Initialize
 22834 ;;		_INTERRUPT_InterruptManager
 22835 ;; This function uses a non-reentrant model
 22836 ;;
 22837                           
 22838                           
 22839                           ;psect for function _EUSART_Receive_ISR
 22840  12F1                     _EUSART_Receive_ISR:
 22841  12F1                     i1l5697:	
 22842                           ;incstack = 0
 22843                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 22844                           
 22845                           
 22846                           ;eusart.c: 203: if(1 == RC1STAbits.OERR)
 22847  12F1  0022               	movlb	2	; select bank2
 22848  12F2  1C9D               	btfss	29,1	;volatile
 22849  12F3  2AF5               	goto	u523_21
 22850  12F4  2AF6               	goto	u523_20
 22851  12F5                     u523_21:
 22852  12F5  2AF8               	goto	i1l5701
 22853  12F6                     u523_20:
 22854  12F6                     i1l5699:
 22855                           
 22856                           ;eusart.c: 204: {;eusart.c: 207: RC1STAbits.CREN = 0;
 22857  12F6  121D               	bcf	29,4	;volatile
 22858                           
 22859                           ;eusart.c: 208: RC1STAbits.CREN = 1;
 22860  12F7  161D               	bsf	29,4	;volatile
 22861  12F8                     i1l5701:
 22862                           
 22863                           ;eusart.c: 209: };eusart.c: 212: eusartRxBuffer[eusartRxHead++] = RC1REG;
 22864  12F8  0819               	movf	25,w	;volatile
 22865  12F9  00F0               	movwf	??_EUSART_Receive_ISR
 22866  12FA  0020               	movlb	0	; select bank0
 22867  12FB  086C               	movf	_eusartRxHead,w
 22868  12FC  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 22869  12FD  0086               	movwf	6
 22870  12FE  3002               	movlw	2	; select bank4/5
 22871  12FF  0087               	movwf	7
 22872  1300  0870               	movf	??_EUSART_Receive_ISR,w
 22873  1301  0081               	movwf	1
 22874  1302                     i1l5703:
 22875  1302  3001               	movlw	1
 22876  1303  00F0               	movwf	??_EUSART_Receive_ISR
 22877  1304  0870               	movf	??_EUSART_Receive_ISR,w
 22878  1305  07EC               	addwf	_eusartRxHead,f	;volatile
 22879  1306                     i1l5705:
 22880                           
 22881                           ;eusart.c: 213: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 22882  1306  3040               	movlw	64
 22883  1307  026C               	subwf	_eusartRxHead,w	;volatile
 22884  1308  1C03               	skipc
 22885  1309  2B0B               	goto	u524_21
 22886  130A  2B0C               	goto	u524_20
 22887  130B                     u524_21:
 22888  130B  2B0D               	goto	i1l5709
 22889  130C                     u524_20:
 22890  130C                     i1l5707:
 22891                           
 22892                           ;eusart.c: 214: {;eusart.c: 215: eusartRxHead = 0;
 22893  130C  01EC               	clrf	_eusartRxHead	;volatile
 22894  130D                     i1l5709:
 22895                           
 22896                           ;eusart.c: 216: };eusart.c: 217: eusartRxCount++;
 22897  130D  3001               	movlw	1
 22898  130E  00F0               	movwf	??_EUSART_Receive_ISR
 22899  130F  0870               	movf	??_EUSART_Receive_ISR,w
 22900  1310  0021               	movlb	1	; select bank1
 22901  1311  07D9               	addwf	_eusartRxCount^(0+128),f	;volatile
 22902  1312                     i1l926:
 22903  1312  0008               	return
 22904  1313                     __end_of_EUSART_Receive_ISR:
 22905  007E                     btemp	set	126	;btemp
 22906  007E                     int$flags	set	126
 22907  007E                     wtemp0	set	126
 22908                           
 22909                           	psect	config
 22910                           
 22911                           ;Config register CONFIG1 @ 0x8007
 22912                           ;	External Oscillator mode selection bits
 22913                           ;	FEXTOSC = OFF, Oscillator not enabled
 22914                           ;	Power-up default value for COSC bits
 22915                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 22916                           ;	Clock Out Enable bit
 22917                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 22918                           ;	Clock Switch Enable bit
 22919                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 22920                           ;	Fail-Safe Clock Monitor Enable bit
 22921                           ;	FCMEN = ON, FSCM timer enabled
 22922  8007                     	org	32775
 22923  8007  3FEC               	dw	16364
 22924                           
 22925                           ;Config register CONFIG2 @ 0x8008
 22926                           ;	Master Clear Enable bit
 22927                           ;	MCLRE = ON, MCLR pin is Master Clear function
 22928                           ;	Power-up Timer Enable bit
 22929                           ;	PWRTE = OFF, PWRT disabled
 22930                           ;	Low-Power BOR enable bit
 22931                           ;	LPBOREN = OFF, ULPBOR disabled
 22932                           ;	Brown-out reset enable bits
 22933                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 22934                           ;	Brown-out Reset Voltage Selection
 22935                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 22936                           ;	Zero-cross detect disable
 22937                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 22938                           ;	Peripheral Pin Select one-way control
 22939                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 22940                           ;	Stack Overflow/Underflow Reset Enable bit
 22941                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 22942                           ;	Background Debugger
 22943                           ;	DEBUG = OFF, Background Debugger disabled
 22944  8008                     	org	32776
 22945  8008  3FFF               	dw	16383
 22946                           
 22947                           ;Config register CONFIG3 @ 0x8009
 22948                           ;	WDT Period Select bits
 22949                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 22950                           ;	WDT operating mode
 22951                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 22952                           ;	WDT Window Select bits
 22953                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 22954                           ;	WDT input clock selector
 22955                           ;	WDTCCS = SC, Software Control
 22956  8009                     	org	32777
 22957  8009  3F9F               	dw	16287
 22958                           
 22959                           ;Config register CONFIG4 @ 0x800A
 22960                           ;	UserNVM self-write protection bits
 22961                           ;	WRT = OFF, Write protection off
 22962                           ;	Scanner Enable bit
 22963                           ;	SCANE = available, Scanner module is available for use
 22964                           ;	Low Voltage Programming Enable bit
 22965                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 22966  800A                     	org	32778
 22967  800A  3FFF               	dw	16383
 22968                           
 22969                           ;Config register CONFIG5 @ 0x800B
 22970                           ;	UserNVM Program memory code protection bit
 22971                           ;	CP = OFF, Program Memory code protection disabled
 22972                           ;	DataNVM code protection bit
 22973                           ;	CPD = OFF, Data EEPROM code protection disabled
 22974  800B                     	org	32779
 22975  800B  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    49
    Data        10
    BSS         192
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     63      80
    BANK1            80     32      79
    BANK2            80      0      24
    BANK3            80      0      64
    BANK4            80      0      64
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    main$3686$1	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    main$3686	const PTR FTN(int ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> cmd_tri(), cmd_trc(), cmd_ir(), cmd_aa(), 
		 -> cmd_dtl(), cmd_dac(), cmd_ra(), cmd_mta(), 
		 -> cmd_mmp(), cmd_rp(), cmd_rtl(), cmd_sc(), 
		 -> cmd_rc(), 

    cmd_rc@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_rtl@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_rp@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_ra@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_ir@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    S2057$0$1	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    memset@p1	PTR void  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    memset@p	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> update_menuLCD@l(BANK0[3]), update_menuLCD@tt(BANK0[4]), update_menuLCD@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__memset	PTR void  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_tri@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_trc@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_aa@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_dtl@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_dac@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_mta@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_mmp@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_sc@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    sendMessage@buffer	PTR unsigned char  size(1) Largest target is 9
		 -> cmd_tri@buffEOM(BANK0[1]), cmd_tri@buffData(BANK0[5]), cmd_tri@buffInit(BANK0[2]), cmd_trc@buffEOM(BANK0[1]), 
		 -> cmd_trc@buffData(BANK0[5]), cmd_trc@buffInit(BANK0[2]), cmd_ir@buff(BANK0[7]), cmd_ra@buff(BANK0[9]), 
		 -> cmd_rp@buff(BANK0[5]), cmd_rtl@buff(BANK0[5]), cmd_rc@buff(BANK0[6]), sendERRORMessage@bufw(BANK0[4]), 
		 -> sendOKMessage@bufw(BANK0[4]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 3
		 -> update_menuLCD@diff(BANK0[3]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[4]), update_menuLCD@l(BANK0[3]), update_menuLCD@tt(BANK0[4]), update_menuLCD@str(BANK0[8]), 

    S2057command_d$cmd_fnct	PTR FTN(int ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> cmd_tri(), cmd_trc(), cmd_ir(), cmd_aa(), 
		 -> cmd_dtl(), cmd_dac(), cmd_ra(), cmd_mta(), 
		 -> cmd_mmp(), cmd_rp(), cmd_rtl(), cmd_sc(), 
		 -> cmd_rc(), 

    commands.cmd_fnct	PTR FTN(int ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> cmd_tri(), cmd_trc(), cmd_ir(), cmd_aa(), 
		 -> cmd_dtl(), cmd_dac(), cmd_ra(), cmd_mta(), 
		 -> cmd_mmp(), cmd_rp(), cmd_rtl(), cmd_sc(), 
		 -> cmd_rc(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_ISR(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_ISR(), INT_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->i1_DATAEE_WriteByte
    _tsttc->i1_WriteI2C
    _TMR1_ISR->_Clock_ISR
    _Clock_ISR->i1_DATAEE_WriteByte
    i1_DATAEE_WriteByte->i1___wmul

Critical Paths under _main in BANK0

    _main->_editClock
    _main->_editLum
    _main->_editTemp
    _main->_toggleAlarms
    _toggleAlarms->_update_menuLCD
    _getch->_EUSART_Read
    _editTemp->_update_menuLCD
    _editLum->_update_menuLCD
    _editClock->_update_menuLCD
    _update_menuLCD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDcmd->_LCDsend2x4
    _cmd_tri->_sendERRORMessage
    _cmd_trc->_sendERRORMessage
    _DATAEE_ReadByte->___wmul
    _cmd_sc->_sendERRORMessage
    _cmd_sc->_sendOKMessage
    _cmd_mta->_sendERRORMessage
    _cmd_mta->_sendOKMessage
    _cmd_mmp->_sendERRORMessage
    _cmd_mmp->_sendOKMessage
    _cmd_dtl->_sendERRORMessage
    _cmd_dtl->_sendOKMessage
    _cmd_dac->_sendERRORMessage
    _cmd_dac->_sendOKMessage
    _cmd_aa->_sendERRORMessage
    _cmd_aa->_sendOKMessage
    _sendOKMessage->_sendMessage
    _sendERRORMessage->_sendMessage
    _sendMessage->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0  104489
                                             60 BANK0      3     3      0
                                              0 BANK1     32    32      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                 _EUSART_is_rx_ready
            _INT_SetInterruptHandler
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
               _PWM_Output_D4_Enable
                           _S1button
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR2_StartTimer
                     _TMR2_StopTimer
           _TMR5_SetInterruptHandler
                             ___wmul
                             _cmd_aa *
                            _cmd_dac *
                            _cmd_dtl *
                             _cmd_ir *
                            _cmd_mmp *
                            _cmd_mta *
                             _cmd_ra *
                             _cmd_rc *
                             _cmd_rp *
                            _cmd_rtl *
                             _cmd_sc *
                            _cmd_trc *
                            _cmd_tri *
                          _editClock
                            _editLum
                           _editTemp
                              _getch
                   _i2c1_driver_open
                             _memset
                       _toggleAlarms
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0    7776
                                             59 BANK0      1     1      0
                           _S1button
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     651
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0      24
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0    7776
                                             59 BANK0      1     1      0
                           _S1button
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0    7776
                                             59 BANK0      1     1      0
                           _S1button
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0    7776
                                             59 BANK0      1     1      0
                           _S1button
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _update_menuLCD                                      24    24      0    7776
                                             35 BANK0     24    24      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                     _TMR2_StopTimer
        _differenceBetweenTimePeriod
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    21      8    3759
                                             14 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _differenceBetweenTimePeriod                          8     1      7     595
                                              0 BANK0      8     1      7
 ---------------------------------------------------------------------------------
 (2) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (3) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     348
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCDstr                                               6     4      2    1159
                                              9 BANK0      6     4      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (3) _LCDchar                                              1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _S1button                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cmd_tri                                             26    23      3    7833
                                             15 BANK0     26    23      3
                    _DATAEE_ReadByte
                             ___wmul
                   _sendERRORMessage
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_trc                                             24    21      3    7568
                                             15 BANK0     24    21      3
                    _DATAEE_ReadByte
                             ___wmul
                   _sendERRORMessage
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1504
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2    1336
                                              6 BANK0      2     0      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _cmd_sc                                               7     4      3    4723
                                             15 BANK0      7     4      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_rtl                                              9     6      3    2252
                                             15 BANK0      9     6      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_rp                                               9     6      3    2252
                                             15 BANK0      9     6      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_rc                                              10     7      3    2276
                                             15 BANK0     10     7      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_ra                                              13    10      3    2348
                                             15 BANK0     13    10      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_mta                                              3     0      3    4544
                                             15 BANK0      3     0      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_mmp                                             15    12      3    4953
                                             15 BANK0     15    12      3
                    _TMR5_StartTimer
                     _TMR5_StopTimer
                             ___lmul
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
                 _setTimer5ReloadVal
 ---------------------------------------------------------------------------------
 (2) _setTimer5ReloadVal                                   2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cmd_ir                                              11     8      3    2300
                                             15 BANK0     11     8      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_dtl                                              5     2      3    4656
                                             15 BANK0      5     2      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_dac                                              7     4      3    4723
                                             15 BANK0      7     4      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_aa                                               4     1      3    4588
                                             15 BANK0      4     1      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (2) _sendOKMessage                                        6     6      0    2250
                                              9 BANK0      6     6      0
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _sendERRORMessage                                     6     6      0    2250
                                              9 BANK0      6     6      0
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _sendMessage                                          6     3      3    2132
                                              3 BANK0      6     3      3
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     718
                    _ADCC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     196
                                              2 BANK0      1     1      0
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 BANK0      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (4) _LCDsend2x4                                           6     5      1     788
                                              2 BANK0      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK0      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (5) _WriteI2C                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    4017
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0    2972
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                            _INT_ISR
                           _TMR1_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR5_ISR                                             0     0      0    1707
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (9) _monitoring_ISR                                       3     3      0    1467
                                             10 COMMON     3     3      0
           _ADCC_GetSingleConversion
                              _tsttc
                 i1_DATAEE_WriteByte
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) _tsttc                                               2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (11) i1_WriteI2C                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _ReadI2C                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_GetSingleConversion                            4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (9) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0    1265
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Clock_ISR                                            1     1      0    1025
                                             10 COMMON     1     1      0
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (10) i1_DATAEE_WriteByte                                  4     1      3    1025
                                              6 COMMON     4     1      3
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
                             _S1_ISR *
 ---------------------------------------------------------------------------------
 (10) _S1_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
     ___wmul (ARG)
   _DATAEE_WriteByte
   _EUSART_is_rx_ready
   _INT_SetInterruptHandler
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _PWM_Output_D4_Enable
   _S1button
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StartTimer
     _TMR2_Start
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR5_SetInterruptHandler
   ___wmul
   _cmd_aa *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_dac *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_dtl *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_ir *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_mmp *
     _TMR5_StartTimer
     _TMR5_StopTimer
     ___lmul
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _setTimer5ReloadVal (ARG)
   _cmd_mta *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_ra *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_rc *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_rp *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_rtl *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_sc *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_trc *
     _DATAEE_ReadByte
       ___wmul (ARG)
     ___wmul
     _sendERRORMessage
       _sendMessage
         _putch
           _EUSART_Write
     _sendMessage
       _putch
         _EUSART_Write
   _cmd_tri *
     _DATAEE_ReadByte
       ___wmul (ARG)
     ___wmul
     _sendERRORMessage
       _sendMessage
         _putch
           _EUSART_Write
     _sendMessage
       _putch
         _EUSART_Write
   _editClock *
     _S1button
     _update_menuLCD
       _LCDchar
         _LCDsend2x4
           _WriteI2C
       _LCDcmd
         _LCDsend2x4
           _WriteI2C
       _LCDstr
         _LCDchar
           _LCDsend2x4
             _WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Disable
       _TMR2_StopTimer
         _TMR2_Stop
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _editLum *
     _S1button
     _update_menuLCD
       _LCDchar
         _LCDsend2x4
           _WriteI2C
       _LCDcmd
         _LCDsend2x4
           _WriteI2C
       _LCDstr
         _LCDchar
           _LCDsend2x4
             _WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Disable
       _TMR2_StopTimer
         _TMR2_Stop
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _editTemp *
     _S1button
     _update_menuLCD
       _LCDchar
         _LCDsend2x4
           _WriteI2C
       _LCDcmd
         _LCDsend2x4
           _WriteI2C
       _LCDstr
         _LCDchar
           _LCDsend2x4
             _WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Disable
       _TMR2_StopTimer
         _TMR2_Stop
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _getch *
     _EUSART_Read
   _i2c1_driver_open *
   _memset *
   _toggleAlarms *
     _S1button
     _update_menuLCD
       _LCDchar
         _LCDsend2x4
           _WriteI2C
       _LCDcmd
         _LCDsend2x4
           _WriteI2C
       _LCDstr
         _LCDchar
           _LCDsend2x4
             _WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Disable
       _TMR2_StopTimer
         _TMR2_Stop
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _update_menuLCD *
     _LCDchar
       _LCDsend2x4
         _WriteI2C
     _LCDcmd
       _LCDsend2x4
         _WriteI2C
     _LCDstr
       _LCDchar
         _LCDsend2x4
           _WriteI2C
     _PWM6_LoadDutyValue
     _PWM_Output_D4_Disable
     _TMR2_StopTimer
       _TMR2_Stop
     _differenceBetweenTimePeriod
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _S1_ISR *
   _TMR1_ISR *
     Absolute function(Fake) *
     _Clock_ISR *
       i1_DATAEE_WriteByte
         i1___wmul (ARG)
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       _tsttc
         _ReadI2C
         i1_WriteI2C
       i1_DATAEE_WriteByte
         i1___wmul (ARG)
       i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     20      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     145      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     145      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Dec 06 14:41:15 2020

               ?_EUSART_SetRxInterruptHandler 0020                                             _t 005F  
            __end_of_TMR5_SetInterruptHandler 1069                                    i1_WriteI2C 1762  
                                          l30 0890                                            l33 0858  
                                          l42 087A                                            l35 085D  
                                          l47 088E                                            _nr 00D4  
                         ___wmul@multiplicand 0022                              i1___wmul@product 0074  
                           ??_TMR5_WriteTimer 0072                   __size_of_PWM6_LoadDutyValue 0019  
                           sendMessage@buffer 0025                                _update_menuLCD 03DD  
                                         l128 168D                                           l190 1021  
                                         l415 1252                                           l255 07FF  
                                         l184 1290                                           l531 1154  
                                         l187 1056                                           l445 105F  
                                         l720 10B9                                           l801 134E  
                                         l803 1352                                           l643 1271  
                                         l804 1359                                           l732 1FF7  
                                         l652 1FED                                           l900 13EE  
                                         l646 1071                                           l807 10C8  
                                         l735 1FF3                                           l912 1FFF  
                                         l833 10AB                                           l729 1FE7  
                                         l905 1450                                           l649 1FEA  
                                         l690 109D                                           l906 145A  
                                         l738 1FFB                                           l827 104D  
                                         l915 1019                                           l932 103B  
                                         l676 1068                                           l909 1475  
                                         l693 116D                                           l929 1044  
                                         l890 1FE1                                           l884 1447  
                                         _PR2 028D                               _timer1ReloadVal 00E3  
                     __size_of_PMD_Initialize 0008                               _TMR2_Initialize 10AC  
                                         wreg 0009                                  ?_EUSART_Read 0070  
                                 ?_LCDsend2x4 0022                            _setTimer5ReloadVal 1069  
                             __end_of_LCDchar 107B                                          l1301 0B8A  
                                        l1310 107A                                          l2110 1588  
                                        l1304 0972                                          l2120 0836  
                                        l1307 1029                                          l1180 17F9  
                                        l1332 1FE4                                          l1316 11D8  
                                        l1181 17FB                                          l1270 0AD9  
                                        l1430 07EA                                          l1271 0ADB  
                                        l1511 1214                                          l1335 1FF0  
                                        l1184 17FF                                          l1168 17BE  
                                        l1432 07CE                                          l1169 17C0  
                                        l1505 1335                                          l1329 1513  
                                        l1514 13A3                                          l1522 12F0  
                                        l1362 0506                                          l1435 07F3  
                                        l1371 050C                                          l1603 02CC  
                                        l1508 11A2                                          l1532 08FC  
                                        l1540 164A                                          l1380 05BE  
                                        l1285 0B2B                                          l1525 13C8  
                                        l1365 04C2                                          l1461 171A  
                                        l1294 0B6B                                          l1550 14DE  
                                        l1446 09D1                                          l1438 0973  
                                        l1519 15C7                                          l1359 048B  
                                        l1471 1761                                          l1560 1419  
                                        l1368 04F1                                          l1297 0B81  
                                        l1529 08F8                                          l1537 11BD  
                                        l1545 16D1                                          l1298 0B83  
                                        l1458 09F2                                          l1474 16D2  
                                        l5003 1313                                          l2291 110F  
                                        l1491 15E6                                          l1396 05F8  
                                        l1484 1719                                          l5101 1055  
                                        l5005 1317                                          l1557 154B  
                                        l1565 0AB6                                          l5111 1152  
                                        l5103 1091                                          l5007 1322  
                                        l1487 15C8                                          l1840 12CF  
                                        l1496 1608                                          l5105 1098  
                                        l5121 125C                                          l5113 1253  
                                        l5009 1327                                          l6001 11AE  
                                        l1817 06C9                                          l2297 12AF  
                                        l1834 0796                                          l5107 113E  
                                        l5051 1655                                          l5131 10AC  
                                        l5123 1263                                          l5115 1256  
                                        l5211 1069                                          l1579 0C74  
                                        l6003 11B4                                          l6011 163B  
                                        l1852 14A9                                          l5109 1150  
                                        l5061 1660                                          l5053 1657  
                                        l5045 164B                                          l5141 10B6  
                                        l5133 10AF                                          l5125 1265  
                                        l5117 1258                                          l5213 1FE8  
                                        l6005 11B9                                          l6013 163F  
                                        l6021 16AA                                          l6101 0A73  
                                        l1838 12BB                                          l5071 1674  
                                        l5063 1662                                          l5055 1659  
                                        l5047 1651                                          l5151 123D  
                                        l5143 1234                                          l5135 10B0  
                                        l5127 1266                                          l5119 125A  
                                        l5231 1FE5                                          l5215 1FEB  
                                        l6007 1609                                          l6023 16B0  
                                        l6015 168E                                          l6031 14AA  
                                        l6111 0AA1                                          l6103 0A78  
                                        l5161 109E                                          l5081 167F  
                                        l5073 1676                                          l5065 1664  
                                        l5057 165B                                          l5049 1653  
                                        l5153 1244                                          l5145 1237  
                                        l5137 10B3                                          l5129 126E  
                                        l5241 10C4                                          l5233 10BA  
                                        l6121 0B9D                                          l6009 1630  
                                        l6025 16B7                                          l6017 169E  
                                        l6041 14D5                                          l6033 14B5  
                                        l6113 0AA6                                          l6105 0A8C  
                                        l5401 04F6                                          l4603 0864  
                                        l5171 1424                                          l5163 10A1  
                                        l5091 168A                                          l5083 1681  
                                        l5075 1678                                          l5067 1670  
                                        l5059 165E                                          l5155 1246  
                                        l5147 1239                                          l5139 10B4  
                                        l5243 10C5                                          l5235 10BE  
                                        l6131 0BD3                                          l6123 0BA4  
                                        l6027 16C8                                          l6019 16A4  
                                        l6035 14BB                                          l6043 14DA  
                                        l6051 1529                                          l6107 0A8E  
                                        l6115 0AB2                                          l5403 04F8  
                                        l4605 086F                                          l5181 1437  
                                        l5173 142E                                          l5165 10A9  
                                        l5085 1684                                          l5077 167A  
                                        l5069 1672                                          l5093 101A  
                                        l5157 1247                                          l5149 123B  
                                        l4621 1465                                          l4613 144A  
                                        l5245 10C6                                          l5237 10C2  
                                        l4701 12C0                                          l6141 0BF4  
                                        l6133 0BDB                                          l6125 0BB9  
                                        l6117 0B8B                                          l6029 16CD  
                                        l6037 14C1                                          l6061 1547  
                                        l6053 152E                                          l6045 1514  
                                        l6109 0A93                                          l5421 0516  
                                        l5405 04FF                                          l5261 13DE  
                                        l5253 13C9                                          l6301 0257  
                                        l4607 087F                                          l4631 0AB9  
                                        l5191 1442                                          l5183 1438  
                                        l5175 1431                                          l5167 141A  
                                        l5095 104E                                          l5087 1686  
                                        l5079 167D                                          l5159 124F  
                                        l4623 1469                                          l4615 144A  
                                        l5239 10C3                                          l4703 12C5  
                                        l6143 0BF4                                          l6135 0BE1  
                                        l6119 0B93                                          l6039 14C8  
                                        l6055 1537                                          l6047 151E  
                                        l6063 13EF                                          l6071 0A06  
                                        l4711 154F                                          l1799 0616  
                                        l5431 054B                                          l5423 0529  
                                        l5407 0502                                          l5351 03E4  
                                        l5271 13EC                                          l5263 13E4  
                                        l5255 13C9                                          l6311 025F  
                                        l6303 0258                                          l5281 17D3  
                                        l4641 0AF2                                          l4633 0ABE  
                             __end_of_LCDinit 0973                                          l5193 1444  
                                        l5185 143A                                          l5177 1433  
                                        l5169 141C                                          l5097 1051  
                                        l5089 1688                                          l4625 146F  
                                        l4617 1455                                          l4705 12CB  
                                        l6161 0C40                                          l6153 0C05  
                                        l6145 0BFC                                          l6137 0BE5  
                                        l6129 0BBE                                          l6057 153E  
                                        l6049 1525                                          l6065 140E  
                                        l6081 0A2B                                          l6073 0A12  
                                        l4721 1565                                          l4713 1555  
                                        l5441 0581                                          l5433 055E  
                                        l5425 0539                                          l5417 050C  
                                        l5361 0437                                          l5353 0408  
                                        l5265 13E5                                          l5257 13CF  
                                        l6401 0394                                          l6321 0267  
                                        l6313 0261                                          l6305 0259  
                                        l6241 00C7                                          l6233 009D  
                                        l5283 17D7                                          l5275 17AF  
                                        l4651 0B2B                                          l4643 0B01  
                                        l4635 0ACA                                          l4811 1033  
                                        l5195 1445                                          l5187 143B  
                                        l5179 1435                                          l5099 1052  
                                        l4803 1060                                          l5611 127E  
                                        l5603 1272                                          l4627 1470  
                                        l4619 145B                                          l6171 0C60  
                                        l6163 0C45                                          l6155 0C2B  
                                        l6147 0C04                                          l6139 0BE9  
                                        l6059 1542                                          l6091 0A31  
                                        l6083 0A2B                                          l6067 09F3  
                                        l4723 1574                                          l4715 1558  
                                        l4731 1584                                          l5451 05A1  
                                        l5443 0589                                          l5435 056E  
                                        l5427 0541                                          l5419 0510  
                                        l5371 045E                                          l5363 0440  
                                        l5355 0425                                          l5267 13E7  
                                        l5259 13D9                                          l6411 03A9  
                                        l6403 0399                                          l6331 0284  
                                        l6323 0272                                          l6315 0262  
                                        l6307 025C                                          l6243 00C9  
                                        l6235 00A7                                          l5285 17E6  
                                        l5277 17AF                                          l4661 0B5C  
                                        l4653 0B32                                          l4645 0B07  
                                        l4637 0ADF                                          l4813 103C  
                                        l5189 1440                                          l5621 128D  
                                        l5613 1281                                          l5605 1275  
                                        l4629 1473                                          l6173 0C64  
                                        l6165 0C49                                          l6157 0C2F  
                                        l6093 0A4F                                          l6085 0A2F  
                                        l6077 0A17                                          l6069 09FB  
                                        l4805 1155                                          l4725 1578  
                                        l4717 155D                                          l4709 154C  
                                        l4741 0811                                          l4901 0617  
                                        l5453 05A6                                          l5445 0590  
                                        l5461 05BF                                          l5437 0576  
                                        l5429 0545                                          l5381 0483  
                                        l5373 0465                                          l5365 0447  
                                        l5357 0429                                          l5349 03DD  
                                        l5269 13EA                                          l6181 129F  
                                        l6421 03C6                                          l6413 03B0  
                                        l6405 039C                                          l6341 02AA  
                                        l6333 028A                                          l6325 0275  
                                        l6317 0265                                          l6309 025E  
                                        l6261 010C                                          l6245 00CA  
                                        l6237 00AA                                          l4591 0841  
                                        l4583 0839                                          l5287 17EA  
                                        l5279 17C4                                          l4663 0B6B  
                                        l4655 0B41                                          l4647 0B16  
                                        l4639 0AEE                                          l5615 1284  
                                        l5607 1278                                          l6167 0C56  
                                        l6159 0C35                                          l6175 0C70  
                                        l6095 0A5E                                          l6079 0A20  
                                        l4807 1FF8                                          l4727 1579  
                                        l4719 1561                                          l4751 082C  
                                        l4743 0815                                          l4735 0802  
                                        l4911 0633                                          l5471 05DD  
                                        l5463 05C6                                          l5455 05AD  
                                        l5447 0596                                          l5439 057D  
                                        l5391 04AB                                          l5383 0494  
                                        l5375 046D                                          l5367 044F  
                                        l5359 0431                                          l5623 07F4  
                                        l6183 12A3                                          l6423 03CA  
                                        l6415 03B4                                          l6407 039F  
                                        l6343 02AF                                          l6335 0290  
                                        l6327 0276                                          l6319 0266  
                                        l6271 01C0                                          l6263 011A  
                                        l6255 00DD                                          l6247 00D7  
                                        l6239 00C5                                          l4593 084B  
                                        l4585 083C                                          l4665 0B72  
                                        l4657 0B47                                          l4649 0B1C  
                                        l5801 094E                                          l4809 1045  
                                        l5617 1287                                          l5609 127B  
                                        l6169 0C59                                          l6097 0A62  
                                        l5561 07AE                                          l5553 0797  
                                        l4681 1074                                          l4729 157E  
                                        l4745 0819                                          l4737 0809  
                                        l4753 0832                                          l4913 0644  
                                        l4921 0663                                          l4905 061B  
                                        l5473 05E3                                          l5465 05CC  
                                        l5457 05B2                                          l5449 059B  
                                        l5393 04B0                                          l5385 049B  
                                        l5377 0473                                          l5369 0455  
                                        l5625 07F9                                          l6177 1293  
                                        l6425 03D7                                          l6417 03BB  
                                        l6409 03A5                                          l6345 02B6  
                                        l6337 029C                                          l6329 027E  
                                        l6353 02CC                                          l6281 01FF  
                                        l6273 01CC                                          l6257 00F9  
                                        l6249 00D9                                          l6265 011C  
                                        l4595 0856                                          l4667 0B87  
                                        l4659 0B56                                          l5803 0956  
                                        l5811 1FE2                                          l5619 128A  
                                        l6099 0A68                                          l5571 07DC  
                                        l5563 07B1                                          l5555 079E  
                                        l4747 0823                                          l4739 080C  
                                        l4691 110E                                          l4683 10FF  
                                        l4931 068E                                          l4923 067B  
                                        l4915 0653                                          l4907 0624  
                                        l5475 05E8                                          l5467 05D1  
                                        l5459 05B9                                          l5395 04CD  
                                        l5387 04A1                                          l5379 047C  
                                        l5627 07FA                                          l6179 1298  
                                        l6419 03BF                                          l6371 033B  
                                        l6363 02E2                                          l6355 02D4  
                                        l6347 02C2                                          l6339 029F  
                                        l6291 023D                                          l6283 020C  
                                        l6275 01D8                                          l6267 0122  
                                        l6259 00FD                                          l5661 1342  
                                        l4597 0862                                          l5805 095C  
                                        l5581 1193                                          l5573 07DF  
                                        l5557 07A4                                          l5565 07B5  
                                        l4677 1FF1                                          l4749 0827  
                                        l4685 1100                                          l4933 0693  
                                        l4925 0682                                          l4917 0657  
                                        l4909 0630                                          l5477 05ED  
                                        l5469 05D6                                          l5397 04E6  
                                        l5389 04A6                                          l5821 0982  
                                        l5813 0973                                          l5901 16DD  
                                        l5629 07FC                                          l6381 0353  
                                        l6373 0347                                          l6365 0300  
                                        l6357 02E0                                          l6349 02C5  
                                        l6293 0248                                          l6285 0219  
                                        l6277 01E5                                          l6269 0127  
                                        l5671 134B                                          l5663 1346  
                                        l5807 0962                                          l5655 1FF4  
                                        l4679 1015                                          l5583 1197  
                                        l5591 147F                                          l4695 12B0  
                                        l5575 07E6                                          l5567 07BC  
                                        l5559 07A9                                          l4871 11BF  
                                        l4687 1106                                          l4951 06D4  
                                        l4943 06AF                                          l4927 0686  
                                        l5479 05F4                                          l5399 04EE  
                                        l5831 099C                                          l5823 0988  
                                        l5815 0979                                          l5911 16F6  
                                        l5903 16E1                                          l6391 0376  
                                        l6383 0355                                          l6375 0347  
                                        l6367 031C                                          l6295 0253  
                                        l6287 0226                                          l6279 01F2  
                                        l5673 134D                                          l5665 1347  
                                        l5657 1336                                          l5809 0968  
                                        l5585 11F9                                          l5577 118A  
                                        l5593 1483                                          l4697 12B3  
                                        l5569 07C9                                          l4873 11C3  
                                        l4881 14ED                                          l4689 110C  
                                        l4961 06F1                                          l4953 06DD  
                                        l4945 06B9                                          l4929 068A  
                                        l5841 09BA                                          l5833 09A3  
                                        l5825 098D                                          l5817 097C  
                                        l5921 170E                                          l5913 16F7  
                                        l5905 16E7                                          l5681 1FFC  
                                        l6393 037C                                          l6385 035B  
                                        l6369 032E                                          l6377 034A  
                                        l6297 0255                                          l6289 0232  
                                        l5675 1353                                          l5667 1348  
                                        l5659 133E                                          l4787 1057  
                                        l5587 1209                                          l5579 1192  
                                        l5595 148B                                          l4699 12B7  
                                        l4867 1024                                          l4883 14F7  
                                        l4875 14DF                                          l4963 06F5  
                                        l4971 0711                                          l4955 06E0  
                                        l4947 06BF                                          l4939 0695  
                                        l4891 05FB                                          l5851 09DA  
                                        l5843 09C1                                          l5835 09AA  
                                        l5827 0993                                          l5819 097E  
                                        l5923 1713                                          l5915 1700  
                                        l5907 16EA                                          l5931 15D1  
                                        l6395 037F                                          l6387 0360  
                                        l6379 0350                                          l6299 0256  
                                        l5669 1349                                          l5677 1FDF  
                                        l5781 090A                                          l5597 1492  
                                        l5589 1476                                          l4869 11BE  
                                        l4885 14FD                                          l4877 14E0  
                                        l4981 0732                                          l4973 0717  
                                        l4965 06FB                                          l4957 06E4  
                                        l4949 06C5                                          l4893 0600  
                                        l5861 09EF                                          l5845 09C8  
                                        l5837 09B1                                          l5829 099A  
                                        l5853 09DD                                          l5925 1716  
                                        l5909 16F0                                          l5917 1703  
                                        l5941 15EF                                          l5933 15D3  
                                        l6397 0389                                          l6389 0366  
                                        l5791 092E                                          l5783 0912  
                                        l5599 14A1                                          l4887 1503  
                                        l4879 14E6                                          l4991 0771  
                                        l4983 0739                                          l4975 071E  
                                        l4967 0702                                          l4959 06EA  
                                        l4895 0606                                          l5855 09E4  
                                        l5847 09CA                                          l5839 09B3  
                                        l5919 170B                                          l5871 1729  
                                        l5863 171A                                          l5951 1605  
                                        l5935 15D7                                          l5943 15F2  
                                        l5927 15C8                                          l6399 038D  
                                        l5793 0932                                          l5785 0916  
                                        l5777 08FD                                          l5953 137F  
                                        l5961 159F                                          l4889 1FEE  
                                        l4993 0775                                          l4977 0722  
                                        l4969 0706                                          l4985 073D  
                                        l4897 060D                                          l5857 09E7  
                                        l5849 09D1                                          l5881 173F  
                                        l5873 172F                                          l5865 1720  
                                        l5945 15FA                                          l5937 15DD  
                                        l5929 15CE                                          l5795 093A  
                                        l5787 0922                                          l5779 0906  
                                        l5955 1398                                          l5963 15A5  
                                        l5971 15C3                                          l4987 0742  
                                        l4979 072C                                          l4899 0612  
                                        l4995 077E                                          l5859 09EC  
                                        l5891 175B                                          l5883 1748  
                                        l5875 1732                                          l5867 1723  
                                        l5947 15FD                                          l5939 15E2  
                                        l5797 093E                                          l5789 0926  
                                        l5965 15AB                                          l5957 1589  
                                        l5973 12D0                                          l5981 0891  
                                        l4989 076A                                          l4997 0792  
                                        l5893 175E                                          l5877 1738  
                                        l5885 174B                                          l5869 1725  
                                        l5949 1602                                          l5799 094A  
                                        l5967 15B2                                          l5959 1599  
                                        l5975 12E5                                          l5991 08B8  
                                        l5983 089B                                          l5895 16D2  
                                        l5887 1753                                          l5879 173E  
                                        _ALAF 006A                                          l5969 15BE  
                                        l5977 13A4                                          l5993 08E9  
                                        l5985 089F                                          l5897 16D8  
                                        l5889 1756                                          l5979 13BD  
                                        l5995 08F0                                          l5987 08A8  
                                        l5899 16DB                                          l5989 08B2  
                                        l5997 08F4                               __end_of_LCDsend 1800  
                                        l5999 11A3                                          STR_1 1827  
                                        STR_2 1827                                          STR_3 1840  
                                        STR_4 1840                                          STR_5 1847  
                                        STR_6 1847                                          STR_7 184C  
                                        _LATA 0016                                          _LATB 0017  
                             __end_of_INT_ISR 1007                                          _LATC 0018  
                                        _LATD 0019                                          _LATE 001A  
                                        u3400 088E                                          u3320 0840  
                                        u4200 068A                                          u3401 088D  
                                        u3321 083F                                          u4201 0689  
                                        u3330 084B                                          u3410 1450  
                                        u4210 06AE                                          _T2PR 028D  
                                        u3331 084A                                          u3411 144F  
                                        u4211 06AD                                          u3340 0856  
                                        u3500 0B2B                                          u3420 1455  
                                        u5100 07C9                                          u4140 11D8  
                                        u4300 0717                                          u4220 06B9  
                                        u3341 0855                                          u3501 0B2A  
                                        u3421 1454                                          u5101 07C8  
                                        u4141 11D7                                          u4301 0716  
                                        u4221 06B8                                          u3350 085D  
                                        u3510 0B41                                          u3430 146F  
                                        u5110 07DC                                          u4150 14ED  
                                        u4310 072C                                          u4230 06BF  
                                        u3351 085C                                          u3511 0B40  
                                        u3431 146E                                          u5111 07DB  
                                        u4151 14EC                                          u4311 072B  
                                        u4231 06BE                                          u4215 06AA  
                                        u5200 1352                                          u3360 0862  
                                        u3520 0B56                                          u6000 1537  
                                        u5120 07E6                                          u4160 1503  
                                        u3600 110C                                          u4320 0732  
                                        u4240 06C5                                          u5201 1351  
                                        u3361 0861                                          u3521 0B55  
                                        u6001 1536                                          u5121 07E5  
                                        u5105 07C5                                          u4161 1502  
                                        u3601 110B                                          u4321 0731  
                                        u4241 06C4                                          u3370 086F  
                                        u3530 0B6B                                          u3450 0AD9  
                                        u5130 1483                                          u3610 12B7  
                                        u6010 153E                                          u5050 079E  
                                        u4330 077E                                          u4250 06D4  
                                        u4170 0606                                          u3371 086E  
                                        u3531 0B6A                                          u3451 0AD8  
                                        u5131 1482                                          u3611 12B6  
                                        u6011 153D                                          u5115 07D8  
                                        u5051 079D                                          u4331 077D  
                                        u4251 06D3                                          u4171 0605  
                                        u3380 087A                                          u4500 17F9  
                                        u3540 0B81                                          u3460 0ADF  
                                        u6100 0BD3                                          u6020 09FB  
                                        u5060 07A4                                          u4340 0792  
                                        u4260 06E4                                          u4180 0630  
                                        u3381 0879                                          u4501 17F8  
                                        u3541 0B80                                          u3461 0ADE  
                                        u3445 0AC1                                          u6101 0BD2  
                                        u6021 09FA                                          u5061 07A3  
                                        u4341 0791                                          u4261 06E3  
                                        u4181 062F                                          u3390 087F  
                                        u4510 17FF                                          u3550 0B87  
                                        u3470 0AEE                                          u4350 1335  
                                        u6110 0C35                                          u6030 0A12  
                                        u5070 07A9                                          u3710 1584  
                                        u4270 06EA                                          u4190 0663  
                                        u3391 087E                                          u4511 17FE  
                                        u3551 0B86                                          u3471 0AED  
                                        u4351 1334                                          u6111 0C34  
                                        u6031 0A11                                          u5071 07A8  
                                        u3711 1583                                          u4271 06E9  
                                        u4255 06D0                                          u4191 0662  
                                        u3480 0B01                                          u5160 14A1  
                                        u3640 12CB                                          u6120 0C56  
                                        u6040 0A68                                          u5080 07AE  
                                        u3720 0809                                          u4280 06FB  
                                        u4440 13CF                                          u3481 0B00  
                                        u5161 14A0                                          u5145 148C  
                                        u3641 12CA                                          u3625 12BC  
                                        u6121 0C55                                          u6041 0A67  
                                        u5081 07AD                                          u3705 157A  
                                        u3721 0808                                          u4281 06FA  
                                        u4441 13CE                                          u3490 0B16  
                                        u6130 0C60                                          u6050 0A8C  
                                        u5090 07BC                                          u3650 1555  
                                        u4290 0710                                          u4450 13E4  
                                        u5170 07F9                                          u3491 0B15  
                                        u4355 1331                                          u5155 1493  
                                        u3635 12C1                                          u6131 0C5F  
                                        u6051 0A8B                                          u6035 0A0E  
                                        u5091 07BB                                          u3651 1554  
                                        u4291 070F                                          u4451 13E3  
                                        u5171 07F8                                          u4460 17BE  
                                        u6060 0AA1                                          u3740 0819  
                                        u4700 04A1                                          u4620 03E4  
                                        u6140 12AF                                          u6300 010C  
                                        _PMD0 0796                                          u4461 17BD  
                                        u6125 0C52                                          u6061 0AA0  
                                        u3741 0818                                          u4701 04A0  
                                        u4621 03E3                                          u6141 12AE  
                                        u6301 010B                                          _PMD1 0797  
                                        i1l22 1181                                          i1l30 17AC  
                                        u4470 17C4                                          u6070 0B93  
                                        u3670 1565                                          u3750 0823  
                                        u3590 1106                                          u4710 04A6  
                                        u4630 0437                                          u6310 011A  
                                        _PMD2 0798                                          i1l23 1182  
                                        u4471 17C3                                          u6071 0B92  
                                        u6055 0A88                                          u3671 1564  
                                        u3751 0822                                          u3735 080D  
                                        u3591 1105                                          u4711 04A5  
                                        u4631 0436                                          u6311 0119  
                                        _PMD3 0799                                          u4480 17D3  
                                        u6080 0BA4                                          u4800 0590  
                                        u4720 04AB                                          u4640 0447  
                                        u5600 09C8                                          u5520 0979  
                                        u6400 02D4                                          u6320 0122  
                                        _PMD4 079A                                          i1l33 177E  
                                        u4481 17D2                                          u6081 0BA3  
                                        u6065 0A9D                                          u3665 1559  
                                        u4801 058F                                          u4721 04AA  
                                        u4641 0446                                          u5601 09C7  
                                        u5521 0978                                          u6401 02D3  
                                        u6321 0121                                          u6305 0108  
                                        _PMD5 079B                                          i1l26 1187  
                                        i1l42 179C                                          u4490 17E6  
                                        u6090 0BB9                                          u3690 1574  
                                        u3770 0832                                          u4810 0596  
                                        u4730 04B0                                          u4650 0455  
                                        u5610 09E4                                          u5530 0982  
                                        u6410 02E0                                          u6330 0127  
                                        i1l35 1783                                          u4491 17E5  
                                        u6091 0BB8                                          u3691 1573  
                                        u3771 0831                                          u3755 081F  
                                        u4811 0595                                          u4731 04AF  
                                        u4651 0454                                          u5611 09E3  
                                        u5531 0981                                          u6411 02DF  
                                        u6331 0126                                          u4820 05A1  
                                        u4740 04EE                                          u4660 0465  
                                        u5620 09EC                                          u5540 0988  
                                        u5700 16E1                                          u6500 03A5  
                                        u6420 0300                                          u6340 026F  
                                        u3685 1566                                          u3765 0828  
                                        u4821 05A0                                          u4741 04ED  
                                        u4661 0464                                          u5621 09EB  
                                        u5541 0987                                          u5701 16E0  
                                        u6501 03A4                                          u6421 02FF  
                                        u4830 05AD                                          u4750 04F6  
                                        u4670 0473                                          u5550 0993  
                                        u5710 16E7                                          u5630 1720  
                                        u6510 03B0                                          u6430 033B  
                                        u6350 0284                                          i1l47 17AB  
                                        u6095 0BB5                                          u3695 1570  
                                        u4831 05AC                                          u4751 04F5  
                                        u4671 0472                                          u5551 0992  
                                        u5711 16E6                                          u5631 171F  
                                        u6511 03AF                                          u6431 033A  
                                        u6351 0283                                          u5800 159F  
                                        u4840 05B9                                          u4760 050B  
                                        u4680 0483                                          u5560 099A  
                                        u5720 16F6                                          u5640 1729  
                                        u6520 03BB                                          u6440 0350  
                                        u6360 028A                                          u5801 159E  
                                        u4841 05B8                                          u4761 050A  
                                        u4681 0482                                          u5561 0999  
                                        u5721 16F5                                          u5641 1728  
                                        u6521 03BA                                          u6441 034F  
                                        u6361 0289                                          u5810 15A5  
                                        u4850 05C6                                          u4770 0516  
                                        u4690 049B                                          u5570 09AA  
                                        u5730 170B                                          u5650 172F  
                                        u6530 03C6                                          u6450 035B  
                                        u6370 0290                                          u6290 00D7  
                                        u5811 15A4                                          u4851 05C5  
                                        u4771 0515                                          u4691 049A  
                                        u5571 09A9                                          u5731 170A  
                                        u5651 172E                                          u6531 03C5  
                                        u6451 035A                                          u6371 028F  
                                        u6291 00D6                                          u5820 15AB  
                                        u5900 1638                                          u4860 05CC  
                                        u4780 054B                                          u5580 09B1  
                                        u5740 1713                                          u5660 173E  
                                        u6540 03D7                                          u6460 0360  
                                        u6380 02B6                                          u5821 15AA  
                                        u3885 1166                                          u4861 05CB  
                                        u4781 054A                                          u5581 09B0  
                                        u5741 1712                                          u5661 173D  
                                        u6541 03D6                                          u6461 035F  
                                        u6381 02B5                                          _TALA 00ED  
                                        u5830 15B2                                          u5910 16A4  
                                        u4870 05DD                                          u4790 057D  
                                        u5590 09C1                                          u5670 1753  
                                        u5750 15CE                                          u6470 0376  
                                        u6390 02CB                                          u5831 15B1  
                                        u5911 16A3                                          u6607 07EE  
                                        u4871 05DC                                          u4791 057C  
                                        u5591 09C0                                          u5671 1752  
                                        u5751 15CD                                          u6471 0375  
                                        u6391 02CA                                          u5840 089B  
                                        u5920 16AA                                          u4880 05E3  
                                        u5680 175B                                          u5760 15D7  
                                        u6480 0394                                          u6617 0901  
                                        u5841 089A                                          u5921 16A9  
                                        u4881 05E2                                          u5681 175A  
                                        u5761 15D6                                          u6545 03D3  
                                        u6481 0393                                          u5850 08A8  
                                        u5930 16B0                                          u4890 05F4  
                                        u5690 16D8                                          u5770 15DD  
                                        u6490 0399                                          u6707 096F  
                                        u6627 090F                                          u5851 08A7  
                                        u5931 16AF                                          u4891 05F3  
                                        u5691 16D7                                          u5771 15DC  
                                        u6491 0398                                          u6475 0372  
                                        u5860 08B2                                          u5940 16B7  
                                        u5780 15FA                                          u6717 0B88  
                                        u6637 0917                                          u5861 08B1  
                                        u5941 16B6                                          u5781 15F9  
                                        u6557 038A                                          u5870 08DF  
                                        u5950 14BB                                          u5790 1602  
                                        u6647 0923                                          u5951 14BA  
                                        u5791 1601                                          u6567 15EA  
                                        u5880 11AE                                          u5960 14C1  
                                        u6657 092B                                          u5881 11AD  
                                        u5961 14C0                                          u6577 1743  
                                        _NREG 006B                                          u5890 1637  
                                        u5970 14C8                                          u6667 0937  
                                        u5875 08DB                                          u5891 1635  
                                        u5971 14C7                                          u6587 16FB  
                                        u5980 151E                                          u6677 093F  
                                        u5981 151D                                          u6597 09D5  
                                        u5990 1525                                          u6687 094B  
                                        u5991 1524                                          u6697 0953  
                                        _PMON 00EE                                          _TMR2 028C  
                                        _WPUA 0F39                                          _WPUB 0F44  
                                        _WPUC 0F4F                                          _WPUD 0F5A  
                                        _WPUE 0F65                                   main@notInit 00B7  
                                        _main 009D                                          _temp 0069  
                                        fsr0h 0005                                          fsr1h 0007  
                                        indf0 0000                                          fsr0l 0004  
                                        indf1 0001                                          fsr1l 0006  
                                        btemp 007E                           ?_setTimer5ReloadVal 0020  
         __end_of_INT_DefaultInterruptHandler 0801                   _INT_DefaultInterruptHandler 0800  
                                        start 005E                               _timer5ReloadVal 00DF  
                              cmd_dtl@tempAux 0032               __end_of_INT_SetInterruptHandler 104E  
                  ??_TMR1_SetInterruptHandler 0022                               __end_of_ReadI2C 1188  
                   __size_of_DATAEE_WriteByte 0024                        __end_of_update_menuLCD 05F9  
                               ?_EUSART_Write 0070                __size_of_OSCILLATOR_Initialize 0009  
               __end_of_OSCILLATOR_Initialize 1057                                         _ADACQ 009D  
                                       _ADCAP 009B                                         _ADACT 0099  
                    __end_of_i2c1_driver_open 0800                                         ?_main 0070  
                                       _ADCLK 0098                                         _ADCNT 010C  
                                       _ADPCH 009E                                         _ADREF 009A  
                                       _ADPRE 009C                                         _ADRPT 010D  
                        ??_setTimer5ReloadVal 0022                                         _T1CLK 0211  
                                       _T1CON 020E                                         _T2CON 028E  
                                       _T5CLK 021D                                         _T2HLT 028F  
                                       _T5CON 021A                               __end_of___lwdiv 1589  
                                       _T2TMR 028C                                         _T2RST 0291  
                             __end_of___lwmod 0837                                         i1l442 1126  
                                       i1l371 0026                                         i1l429 10D9  
                                       i1l373 0035                                         i1l543 10F3  
                                       i1l375 0041                                         i1l448 0801  
                                       i1l384 005C                                         i1l368 0013  
                                       i1l801 11EC                                         i1l377 004D  
                                       i1l546 10FC                                         i1l378 005C  
                                       i1l803 11F0                                         i1l379 0056  
                                       i1l820 1006                                         i1l804 11F6  
                                       i1l660 10EA                                         i1l830 0800  
                                       i1l824 1090                                         i1l921 137E  
                                       i1l673 113D                                         i1l926 1312  
                                       i1l918 137C                                         i1l679 0002  
                                       _OSCEN 0891                                         _TMR1H 020D  
                                       _TMR1L 020C                                         _TMR5H 0219  
                                       _TMR5L 0218                                         _TRISA 0011  
                                       _TRISB 0012                                         _TRISC 0013  
                                       _TRISD 0014                                         _TRISE 0015  
                                       _WPUC3 7A7B                                         _WPUC4 7A7C  
                                       _RXPPS 0ECB                               __end_of_cmd_dac 16D2  
                             __end_of_editLum 171A                               __end_of_cmd_dtl 14DF  
                             _PWM6_Initialize 1091                               __end_of_cmd_mta 11BE  
                             __end_of_cmd_mmp 08FD                               __end_of_cmd_trc 0AB7  
                         ___lmul@multiplicand 0024                               __end_of_cmd_rtl 12F1  
                             __end_of_cmd_tri 0C75                              __end_of_TMR1_ISR 1127  
                            __end_of_TMR5_ISR 113E                              __end_of_S1button 07F4  
                             _DATAEE_ReadByte 10BA                                         _getch 1FFC  
                             __end_of_dpowers 1840                            __size_of_TMR2_Stop 0003  
                                 ?_TMR2_Start 0070                                         _iread 0066  
                             __end_of_isdigit 1110                                         _putch 1013  
                                       main@c 00BD                                         main@i 00B9  
                                       main@n 00BE                                         _tsttc 0D80  
                     __end_of_TMR1_Initialize 1253                                         pclath 000A  
                            __end_ofi1___wmul 1234                                         status 0003  
                         i1___wmul@multiplier 0070                                         wtemp0 007E  
                             __end_of_sprintf 0797                        ??_PWM_Output_D4_Enable 0020  
                             _TMR2_StartTimer 1FF4                               _TMR1_WriteTimer 10C9  
                             _TMR5_Initialize 1253                               __initialization 0060  
                                __end_of_main 03DD                                   ?i1_WriteI2C 0070  
                         __size_of_LCDsend2x4 00D4                                ??_EUSART_Write 0020  
                             ?_update_menuLCD 0070                       __end_of_TMR2_Initialize 10BA  
                 ?_INTERRUPT_InterruptManager 0070                ??_EUSART_SetRxInterruptHandler 0022  
                                      ??_main 005C                               update_menuLCD@l 0055  
                                ?_sendMessage 0023                      _TMR5_SetInterruptHandler 1060  
                   __size_of_sendERRORMessage 001E                            __size_of_Clock_ISR 010B  
            differenceBetweenTimePeriod@start 0020                                     ??_LCDchar 0028  
                                   ??_LCDinit 0028                                     ??_LCDsend 0022  
                                   ??_INT_ISR 0070                    __end_ofi1_DATAEE_WriteByte 11F7  
                                      _ADACCH 0091                                        _ADACCL 0090  
                                      ?_getch 0070                                        _ADCON0 0093  
                                      _ADCON1 0094                                        _ADCON2 0095  
                                      _ADCON3 0096                                        _ADERRH 0117  
                                      _ADERRL 0116                                        _ADLTHH 010F  
                                      _ADLTHL 010E                                        _ADRESH 008D  
                                      _ADRESL 008C                                        _ADSTAT 0097  
                                      _ADUTHH 0111                                        _ADUTHL 0110  
                            __end_of_WriteI2C 0891                                        _ANSELA 0F38  
                                      ?_putch 0070                                        _ANSELB 0F43  
                                      _ANSELC 0F4E                                        _ANSELD 0F59  
                                      _ANSELE 0F64                    __end_of_EUSART_is_rx_ready 1FE2  
                                      _T1GATE 0210                                        _T1GCON 020F  
                                      ?_tsttc 0070                                        _T5GATE 021C  
                                      _T5GCON 021B                                        _RC1REG 0119  
                                      _RC1STA 011D                                        _RA6PPS 0F16  
                                      _RC3PPS 0F23                                        i1l1104 0DBC  
                                      i1l1105 0DBD                                        i1l1130 0E14  
                                      i1l1122 0DFF                       TMR1_WriteTimer@timerVal 0070  
                                      i1l1123 0E00                                        _RC4PPS 0F24  
                                      i1l1116 0DEE                                        i1l1141 0E43  
                                      i1l1125 0E04                                        i1l1117 0DF0  
                                      i1l1142 0E44                                        i1l1160 0E87  
                                      i1l1153 0E75                                        i1l1129 0E13  
                                      i1l1154 0E77                                        i1l1163 0E8C  
                                      i1l1092 0D8C                                        i1l1404 0F61  
                                      i1l1093 0D8D                                        i1l1159 0E86  
                                      i1l1424 0FFF                                        i1l1089 0D80  
                                      _ODCONA 0F3A                                        _ODCONB 0F45  
                                      i1l1347 0D7F                                        _ODCONC 0F50  
                                      _RC6PPS 0F26                                        _ODCOND 0F5B  
                                      _ODCONE 0F66                                        i1l5001 102A  
                                      i1l5011 11D9                                        i1l5021 11E6  
                                      i1l5013 11E0                                        i1l5023 11E7  
                                      i1l5015 11E2                                        i1l5031 1215  
                                      i1l1840 1233                                        i1l5025 11E9  
                                      i1l5017 11E4                                        i1l5201 10CF  
                                      i1l5041 122F                                        i1l5033 1217  
                                      i1l1499 1032                                        i1l5027 11EB  
                                      i1l5019 11E5                                        i1l5203 10D1  
                                      i1l5035 121B                                        i1l5029 11F1  
                                      i1l5301 0CA8                                        i1l5205 10D3  
                                      i1l5221 10E0                                        i1l5037 1224  
                                      i1l1838 121F                                        i1l5311 0CE4  
                                      i1l5303 0CB4                                        i1l5207 10D5  
                                      i1l5223 10E2                                        i1l5039 1229  
                                      i1l5313 0CF0                                        i1l5305 0CC0  
                                      i1l5321 0D2F                                        i1l5209 10D7  
                                      i1l5225 10E4                                        i1l5217 10DA  
                                      i1l6201 002A                                        i1l5251 108B  
                                      i1l5331 0D42                                        i1l5323 0D36  
                                      i1l5315 0CFC                                        i1l5307 0CCC  
                                      i1l5219 10DF                                        i1l5227 10E6  
                                      i1l6211 0049                                        i1l6203 002E  
                                      i1l5341 0D66                                        i1l5333 0D48  
                                      i1l5325 0D3A                                        i1l5317 0D08  
                                      i1l5309 0CD8                                        i1l5229 10E8  
                                      i1l5501 0F7D                                        i1l6213 0051  
                                      i1l6205 0039                                        i1l5343 0D6B  
                                      i1l5335 0D50                                        i1l5327 0D3B  
                                      i1l5319 0D13                                        i1l5511 0FA5  
                                      i1l5503 0F83                                        i1l6207 003D  
                                      i1l5249 1084                                        i1l5337 0D58  
                                      i1l5345 0D71                                        i1l5329 0D41  
                                      i1l5521 0FCC                                        i1l5513 0FAE  
                                      i1l5505 0F8A                                        i1l6217 005A  
                                      i1l6209 0045                                        i1l5347 0D7D  
                                      i1l5339 0D60                                        i1l5291 0C80  
                                      i1l5523 0FD1                                        i1l5531 0FDC  
                                      i1l5507 0F8E                                        i1l5515 0FB7  
                                      i1l5701 12F8                                        i1l5293 0C84  
                                      i1l5197 10C9                                        i1l4821 0DA0  
                                      i1l5541 0FF1                                        i1l5533 0FDE  
                                      i1l5525 0FD5                                        i1l5517 0FBE  
                                      i1l5509 0FA3                                        i1l5703 1302  
                                      i1l5295 0C85                                        i1l5199 10CE  
                                      i1l4671 1178                                        i1l4831 0DD0  
                                      i1l4823 0DAC                                        i1l4815 0D80  
                                      i1l5551 0FFD                                        i1l5543 0FF5  
                                      i1l5535 0FE0                                        i1l5527 0FD7  
                                      i1l5519 0FC6                                        i1l6191 000B  
                                      i1l5705 1306                                        i1l5297 0C90  
                                      i1l5289 0C75                                        i1l4673 1186  
                                      i1l4841 0E18                                        i1l4833 0DDC  
                                      i1l4825 0DB0                                        i1l4817 0D91  
                                      i1l5545 0FF7                                        i1l5537 0FE7  
                                      i1l5529 0FD9                                        i1l5481 0E8D  
                                      i1l5641 1129                                        i1l6193 000F  
                                      i1l5707 130C                                        i1l5635 1001  
                                      i1l5299 0C9C                                        i1l5651 111A  
                                      i1l4771 1788                                        i1l4851 0E48  
                                      i1l4843 0E23                                        i1l4835 0DE2  
                                      i1l4827 0DC1                                        i1l4819 0D9C  
                                      i1l5547 0FF9                                        i1l5539 0FEC  
                                      i1l5491 0F57                                        i1l5483 0EA6  
                                      i1l5643 1131                                        i1l6195 0017  
                                      i1l5709 130D                                        i1l5637 1003  
                                      i1l5653 1121                                        i1l4669 116E  
                                      i1l4781 17A0                                        i1l4765 176B  
                                      i1l4757 1763                                        i1l4861 0E7B  
                                      i1l4853 0E53                                        i1l4845 0E27  
                                      i1l4837 0DF4                                        i1l4829 0DCC  
                                      i1l5549 0FFC                                        i1l5493 0F5D  
                                      i1l5485 0EB4                                        i1l5645 1138  
                                      i1l6197 001B                                        i1l6189 0006  
                                      i1l5647 1110                                        i1l4791 10EF  
                                      i1l4767 1774                                        i1l4759 1766  
                                      i1l4863 0E8B                                        i1l4855 0E57  
                                      i1l4847 0E33                                        i1l4839 0E08  
                                      i1l5495 0F65                                        i1l5487 0EC3  
                                      i1l5639 1127                                        i1l6199 001F  
                                      i1l5649 1112                                        i1l4793 10F0  
                                      i1l4769 177D                                        i1l4777 178A  
                                      i1l4857 0E63                                        i1l4849 0E37  
                                      i1l5497 0F79                                        i1l5489 0F4F  
                                      i1l5691 136F                                        i1l4795 10F1  
                                      i1l4779 1793                                        i1l4859 0E69  
                                      i1l5499 0F7C                                        _S1_ISR 102A  
                                      i1l5693 1375                                        i1l5685 135A  
                                      i1l4797 10F2                                        i1l4789 10EC  
                                      i1l5695 1376                                        i1l5687 1361  
                                      i1l4799 10F8                                        i1l5697 12F1  
                                      i1l5689 136A                                        i1l5699 12F6  
                                      u400_20 0E04                                        u400_21 0E03  
                                      u401_20 0E08                                        u401_21 0E07  
                                      _LCDcmd 1022                                        u410_20 0E75  
                                      u402_20 0E13                                        u410_21 0E74  
                                      u402_21 0E12                                        u411_20 0E7B  
                                      u403_20 0E18                                        u411_21 0E7A  
                                      u403_21 0E17                                        u412_20 0E86  
                                      u404_20 0E23                                        u500_20 0FCC  
                                      u412_21 0E85                                        u404_21 0E22  
                                      u500_21 0FCB                                        u413_20 0E8B  
                                      u405_20 0E33                                        u501_20 0FD1  
                                      u413_21 0E8A                                        u405_21 0E32  
                                      u501_21 0FD0                                        u406_20 0E43  
                                      u502_20 0FE7                                        u406_21 0E42  
                                      u502_21 0FE6                                        u407_20 0E48  
                                      u503_20 0FEC                                        u407_21 0E47  
                                      u503_21 0FEB                                        u408_20 0E53  
                                      u440_20 122F                                        u504_20 0FF1  
                                      u408_21 0E52                                        u440_21 122E  
                                      u504_21 0FF0                                        _INTPPS 0E90  
                                      u521_20 1361                                        u441_20 10CE  
                                      u409_20 0E63                                        u521_21 1360  
                                      u441_21 10CD                                        u409_21 0E62  
                                      u522_20 1375                                        u442_20 10DF  
                                      u522_21 1374                                        u442_21 10DE  
                               main@corrupted 00B8                                        u523_20 12F6  
                                      u443_20 108B                                        u523_21 12F5  
                                      u443_21 108A                                        u524_20 130C  
                                      u436_20 11F0                                        u460_20 0D7B  
                                      u452_20 0C80                                        u356_20 1178  
                                      u380_20 177D                                        u620_20 002A  
                                      u524_21 130B                                        u436_21 11EF  
                                      u460_21 0D78                                        u452_21 0C7F  
                                      u356_21 1177                                        u380_21 177C  
                                      u620_21 0029                                        _LCDstr 11BE  
                                      u453_20 0D36                                        u357_20 1181  
                                      u381_20 1783                                        u437_20 121B  
                                      u621_20 002E                                        u453_21 0D35  
                                      u357_21 1180                                        u381_21 1782  
                                      u437_21 121A                                        u621_21 002D  
                                      u461_24 0D7D                                        u454_20 0D41  
                                      u358_20 1186                                        u382_20 1788  
                                      u390_20 0D91                                        u518_20 1138  
                                      u622_20 0039                                        u454_21 0D40  
                                      u358_21 1185                                        u382_21 1787  
                                      u390_21 0D90                                        u518_21 1137  
                                      u622_21 0038                                        u438_25 1220  
                                      u455_20 0D48                                        u519_20 1121  
                                      u383_20 1793                                        u391_20 0D9C  
                                      u623_20 003D                                        u615_20 000B  
                                      u455_21 0D47                                        u519_21 1120  
                                      u383_21 1792                                        u391_21 0D9B  
                                      u623_21 003C                                        u615_21 000A  
                                      u439_25 1225                                        u456_20 0D50  
                                      u384_20 179C                                        u392_20 0DAC  
                                      u624_20 0045                                        u616_20 000F  
                                      u456_21 0D4F                                        u384_21 179B  
                                      u392_21 0DAB                                        u624_21 0044  
                                      u616_21 000E                                        u457_20 0D58  
                                      u385_20 17A0                                        u393_20 0DBC  
                                      u625_20 0049                                        u617_20 0017  
                                      u457_21 0D57                                        u385_21 179F  
                                      u393_21 0DBB                                        u625_21 0048  
                                      u617_21 0016                                        u458_20 0D60  
                                      u386_20 17AB                                        u378_20 176A  
                                      u394_20 0DC1                                        u626_20 0051  
                                      u618_20 001B                                        u458_21 0D5F  
                                      u386_21 17AA                                        u378_21 1769  
                                      u394_21 0DC0                                        u626_21 0050  
                                      u618_21 001A                                        u490_25 0E9D  
                                      u459_20 0D66                                        u387_20 10F8  
                                      u379_20 1774                                        u395_20 0DCC  
                                      u491_20 0EB4                                        u627_20 0055  
                                      u619_20 001F                                        u459_21 0D65  
                                      u387_21 10F7                                        u379_21 1773  
                                      u395_21 0DCB                                        u491_21 0EB3  
                                      u627_21 0054                                        u619_21 001E  
                                      u491_25 0EB0                                        u396_20 0DDC  
                                      u492_20 0EC3                                        u628_20 005A  
                                      u396_21 0DDB                                        u492_21 0EC2  
                                      u628_21 0059                                        u492_25 0EBF  
                                      _OSCFRQ 0893                                        u397_20 0DEE  
                                      u389_20 0D8C                                        u493_20 0F57  
                                      u397_21 0DED                                        u389_21 0D8B  
                                      u493_21 0F56                                        u398_20 0DF4  
                                      u494_20 0F5D                                        u398_21 0DF3  
                                      u494_21 0F5C                                        u399_20 0DFF  
                                      u495_20 0F79                                        u399_21 0DFE  
                                      u495_21 0F78                                        u495_25 0F75  
                                      u496_20 0F83                                        u496_21 0F82  
                                      u497_20 0FA3                                        u497_21 0FA2  
                                      u497_25 0F9F                                        u498_20 0FBE  
                                      u498_21 0FBD                                        u499_20 0FC6  
                                      u499_21 0FC5                                        _PWM6EN 1C77  
                                      _TX1REG 011A                                        _TX1STA 011E  
                                   ??_ReadI2C 0070                                        _PWM_on 00D5  
                                 LCDsend2x4@c 0025                              __end_of_editTemp 1762  
        __end_of_TMR1_DefaultInterruptHandler 0802         __size_of_TMR1_DefaultInterruptHandler 0001  
                _TMR1_DefaultInterruptHandler 0801                                  _CCPTMRS1bits 021F  
                            __end_of_commands 1827                                        ___lmul 1476  
                                      ___wmul 12B0                             __end_of_TMR2_Stop 1FF4  
                                      _cmd_aa 1514                                        _cmd_ir 13EF  
                                      _cmd_ra 1609                                        _cmd_rc 137F  
                                      _cmd_sc 1589                                        _cmd_rp 13A4  
                                      _flagNr 00D3                                     ??___lwdiv 0024  
                                   ??___lwmod 002C                           __size_of_TMR2_Start 0003  
                         _EUSART_Transmit_ISR 135A                                        _memset 1291  
                     __end_of_PWM6_Initialize 109E                                     ??_cmd_dac 0032  
                                   ??_editLum 005B                                     ??_cmd_dtl 0032  
                                   ??_cmd_mta 0032                                     ??_cmd_mmp 0032  
                                      _iwrite 007D                                     ??_cmd_trc 0032  
                                   ??_cmd_rtl 0032                                     ??_cmd_tri 0032  
                               ?_INT_CallBack 0070                       __end_of_DATAEE_ReadByte 10C9  
                     __size_of_monitoring_ISR 0173                               _TMR5_StartTimer 1FE8  
                             _ADCC_Initialize 113E                                _PMD_Initialize 101A  
                                   ??_isdigit 0020                             sendOKMessage@bufw 002B  
                          update_menuLCD@diff 0058                 i1DATAEE_WriteByte@GIEBitValue 0079  
           __size_of_ADCC_GetSingleConversion 0012              __size_of_INT_SetInterruptHandler 0009  
                   ?_ADCC_GetSingleConversion 0070                       __end_of_TMR2_StartTimer 1FF8  
     INT_SetInterruptHandler@InterruptHandler 0020      TMR5_SetInterruptHandler@InterruptHandler 0020  
    TMR1_SetInterruptHandler@InterruptHandler 0020                                     ??_sprintf 0036  
                     __end_of_TMR1_WriteTimer 10DA                       ??_PWM_Output_D4_Disable 0020  
                        ?_EUSART_Transmit_ISR 0070                           __size_ofi1_WriteI2C 004B  
                            ?_TMR1_Initialize 0070                       __end_of_TMR5_Initialize 1272  
                        __size_of_EUSART_Read 0026                             _SYSTEM_Initialize 1272  
                     __end_of__initialization 0099                                cmd_trc@address 0041  
                          ?_SYSTEM_Initialize 0070                             __end_of_Clock_ISR 0D80  
                             _TMR5_WriteTimer 10DA                                cmd_trc@buffEOM 0043  
        __end_of_EUSART_SetTxInterruptHandler 1045         __size_of_EUSART_SetTxInterruptHandler 0009  
                _EUSART_SetTxInterruptHandler 103C                                __pcstackCOMMON 0070  
                                __pidataBANK0 0003                                  __pidataBANK1 107B  
                         ??_SYSTEM_Initialize 0023                                     ?_TMR1_ISR 0070  
               ?_TMR1_DefaultInterruptHandler 0070                                     ?_TMR5_ISR 0070  
                               __end_of_getch 2000                                     ?_S1button 0070  
                            _DATAEE_WriteByte 1336                                 __end_of_putch 101A  
                          __size_of_editClock 0080               differenceBetweenTimePeriod@diff 0026  
                               __end_of_tsttc 0E8D                              ?_TMR2_Initialize 0070  
                              ??_INT_CallBack 0070               differenceBetweenTimePeriod@stop 0023  
                      __end_of_PMD_Initialize 1022                                cmd_tri@buffEOM 0044  
                                   ?i1___wmul 0070                   __size_of_EXT_INT_Initialize 000E  
                                ??_LCDsend2x4 0023                                       ??_getch 0022  
                   __end_of_SYSTEM_Initialize 1291                         ??_EUSART_Transmit_ISR 0070  
                                sprintf@width 003F                              update_menuLCD@tt 0051  
                                     ??_putch 0022                                       ??_tsttc 0072  
                                  __pbssBANK0 005F                                    __pbssBANK1 00C0  
                                  __pbssBANK2 0120                                    __pbssBANK3 01A0  
                                  __pbssBANK4 0220                        i1DATAEE_WriteByte@bAdd 0076  
                                     ?_S1_ISR 0070                                       ?_LCDcmd 0070  
                        __end_of_EUSART_Write 1476                                       ?_LCDstr 0029  
                                _flagS1pushed 0067                                       LCDcmd@c 0028  
                 __size_of_EUSART_Receive_ISR 0022                                       LCDstr@c 002E  
                                     LCDstr@p 0029                                    __pmaintext 009D  
               ?_EUSART_SetTxInterruptHandler 0020              _EUSART_TxDefaultInterruptHandler 0136  
                                     ?___lmul 0020                                       ?___wmul 0020  
                                  ??_TMR1_ISR 007B                       __end_of_TMR5_StartTimer 1FEB  
                                     ?_cmd_aa 002F                       __end_of_ADCC_Initialize 1155  
                  __end_of_PWM6_LoadDutyValue 116E                                    ??_TMR5_ISR 007D  
                                     ?_cmd_ir 002F                                       ?_cmd_ra 002F  
                                     ?_cmd_rc 002F                                       ?_cmd_sc 002F  
                                     ?_cmd_rp 002F                                    ??_S1button 0020  
                                  __pintentry 0004                                       _ADFLTRH 0115  
                                     _ADFLTRL 0114                                       ?_memset 0020  
                          __end_of_LCDsend2x4 0B8B                                ___lmul@product 0028  
                                     _ADPREVH 008F                                       _ADPREVL 008E  
                                   ?_WriteI2C 0070                              ?_PWM6_Initialize 0070  
                                     _ADSTPTH 0113                                       _ADSTPTL 0112  
                             ?_PMD_Initialize 0070                                    ??i1___wmul 0074  
                            _sendERRORMessage 11F7                              ?_DATAEE_ReadByte 0026  
                           ?_i2c1_driver_open 0070                                 _eusartRxCount 00D9  
                                     _LCDchar 1072                                       _LCDinit 08FD  
                                     _SP1BRGH 011C                                       _SP1BRGL 011B  
                                     _LCDsend 17AD                          __size_of_sendMessage 0023  
                          ??_i2c1_driver_open 0020                                       _INT_ISR 1001  
                                     _OSCCON1 088D                                       _OSCCON3 088F  
                                   ?_editTemp 0070                        __size_of_sendOKMessage 001B  
                                     _NVMADRH 081B                                       _NVMADRL 081A  
                                     _NVMDATH 081D                                       _OSCTUNE 0892  
                                     _NVMDATL 081C                                       _NVMCON2 081F  
                                     _PWM6DCH 038D                                       _PWM6DCL 038C  
                                     _PWM6CON 038E                                       _SSP1ADD 018D  
                                     _SLRCONA 0F3B                                       _SLRCONB 0F46  
                                     _SLRCONC 0F51                                       _SLRCOND 0F5C  
                                     _SLRCONE 0F67                                       _SSP1BUF 018C  
                                     _SSP1MSK 018E                                  ??_TMR2_Start 0020  
                     __size_of_TMR2_StopTimer 0004                              ?_TMR2_StartTimer 0070  
                            ?_TMR1_WriteTimer 0070                       __end_of_TMR5_WriteTimer 10EB  
                                LCDsend2x4@hc 0026                                  LCDsend2x4@lc 0027  
                           cmd_mmp@timerValue 003C                             __end_of_editClock 09F3  
                            ?_TMR5_Initialize 0070                               __size_of_S1_ISR 0009  
                             __size_of_LCDcmd 0008                          DATAEE_WriteByte@bAdd 0020  
                          _i2c1_driver_i2cISR 00CF                               __size_of_LCDstr 001B  
                                     _ReadI2C 116E                              ??_update_menuLCD 0043  
                  ??_TMR5_SetInterruptHandler 0022                                  ??i1_WriteI2C 0070  
                             __size_of___lmul 0034                               __size_of___wmul 0020  
                                     ___lwdiv 154C                               __size_of_cmd_aa 0038  
                                     ___lwmod 0802                               __size_of_cmd_ir 002B  
                             __size_of_cmd_ra 0042                               __size_of_cmd_rc 0025  
                             __size_of_cmd_sc 003F                               __size_of_cmd_rp 0025  
                          __end_of_TMR2_Start 1FE8                                    ??_WriteI2C 0020  
                                     _cmd_dac 168E                               __size_of_memset 001F  
                                     _editLum 16D2                                       _cmd_dtl 14AA  
                                     _cmd_mta 11A3                                       _cmd_mmp 0891  
                                     _cmd_trc 09F3                                       _cmd_rtl 12D0  
                                     _cmd_tri 0B8B                                       __ptext1 15C8  
                                     __ptext2 1291                                       __ptext3 07F4  
                                     __ptext4 1FFC                                       __ptext5 13C9  
                                     __ptext6 171A                                       __ptext7 16D2  
                                     __ptext8 0973                                       __ptext9 03DD  
                              _monitoring_ISR 0E8D                ??_TMR1_DefaultInterruptHandler 0070  
                     __size_of_TMR5_StopTimer 0003                   __size_of_setTimer5ReloadVal 0009  
                                   _T1CONbits 020E                                 cmd_dac@buffer 0031  
                                     _dpowers 1836                         _OSCILLATOR_Initialize 104E  
                                   _T2CONbits 028E                                       _isdigit 10FD  
                                  cmd_dac@num 002F             __size_of_TMR1_SetInterruptHandler 0009  
                                     cmd_sc@h 0033                                       cmd_sc@m 0034  
                                     cmd_sc@s 0035                      ??_PIN_MANAGER_Initialize 0020  
                   ?_TMR1_SetInterruptHandler 0020                                     _T2HLTbits 028F  
                     _INT_SetInterruptHandler 1045                                     _T5CONbits 021A  
                                  ??_editTemp 005B                                    cmd_ir@buff 0033  
                                  cmd_ra@buff 0033                                    cmd_rc@buff 0033  
                  __size_of_SYSTEM_Initialize 001F                                       _sprintf 05F9  
                                     clrloop0 1008                                    cmd_dtl@num 002F  
                        end_of_initialization 0099                                     _T2RSTbits 0291  
                                  cmd_rp@buff 0033                                    cmd_mta@num 002F  
                                  cmd_mmp@num 002F                            __end_ofi1_WriteI2C 17AD  
                                     init_ram 100D                                       memset@c 0020  
                                     memset@n 0022                                       memset@p 0025  
                                     initloop 100E                          __end_of_INT_CallBack 1091  
                                  cmd_trc@num 002F                                    cmd_rtl@num 002F  
                                  cmd_tri@num 002F                            i1_DATAEE_WriteByte 11D9  
                           _EUSART_Initialize 141A                 __size_of_PWM_Output_D4_Enable 0003  
                               _sendOKMessage 1188                            ?_EUSART_Initialize 0070  
                          _EUSART_is_rx_ready 1FDF                  ?_differenceBetweenTimePeriod 0020  
                         ?i1_DATAEE_WriteByte 0076                                    main@F13073 0120  
                            ?_TMR5_StartTimer 0070                              ?_ADCC_Initialize 0070  
            __end_of_ADCC_GetSingleConversion 10FD                         i1___wmul@multiplicand 0072  
                      __end_of_monitoring_ISR 1000                           ??_EUSART_Initialize 0022  
              ??_EUSART_SetTxInterruptHandler 0022                           ?_EUSART_is_rx_ready 0070  
                                   _PORTCbits 000E                                     _TMR2_Stop 1FF1  
                       _TMR5_InterruptHandler 00DD                                     _TRISCbits 0013  
                       __size_of_EUSART_Write 002E                                 ?_toggleAlarms 0070  
                                  main@i_2703 00BB                          ??i1_DATAEE_WriteByte 0079  
                    __end_of_DATAEE_WriteByte 135A                                 _alarmPWMStart 00E6  
                            ?_TMR5_WriteTimer 0070                       TMR5_WriteTimer@timerVal 0070  
              __size_of_PWM_Output_D4_Disable 0003                     __end_of_EUSART_Initialize 1448  
                        ??_EUSART_is_rx_ready 0020                 __end_of_PWM_Output_D4_Disable 1FF1  
                              __end_of_S1_ISR 1033                                __end_of_LCDcmd 102A  
                              __end_of_LCDstr 11D9                               cmd_trc@buffData 0038  
                               cmd_dtl@buffer 0031                                LCDsend2x4@mode 0022  
                             cmd_trc@buffInit 003D                                 cmd_dtl@lumAux 0033  
                              ?_sendOKMessage 0070                                     _Clock_ISR 0C75  
                              __end_of___lmul 14AA                                __end_of___wmul 12D0  
                             ?_monitoring_ISR 0070                                __end_of_cmd_aa 154C  
                              __end_of_cmd_ir 141A                                __end_of_cmd_ra 164B  
                              __end_of_cmd_rc 13A4                                __end_of_cmd_sc 15C8  
                              __end_of_cmd_rp 13C9                                  _EUSART_Write 1448  
                           __size_of_TMR1_ISR 0017                             __size_of_TMR5_ISR 0017  
                           __size_of_S1button 005D                                    ?_TMR2_Stop 0070  
                      ?_OSCILLATOR_Initialize 0070                                __end_of_memset 12B0  
                   ??_INT_SetInterruptHandler 0022                               main@checkSumAux 00B6  
                         start_initialization 0060                             __size_ofi1___wmul 001F  
        __end_of_TMR5_DefaultInterruptHandler 0003         __size_of_TMR5_DefaultInterruptHandler 0001  
                _TMR5_DefaultInterruptHandler 0002                                ??_toggleAlarms 005B  
             __size_of_PIN_MANAGER_Initialize 0043                                _TMR2_StopTimer 1FF8  
                               ??_EUSART_Read 0020  EUSART_SetRxInterruptHandler@interruptHandler 0020  
EUSART_SetTxInterruptHandler@interruptHandler 0020                               cmd_tri@buffData 0039  
                            WriteI2C@data_out 0021                               cmd_tri@buffInit 003E  
                                 putch@txData 0022                                 cmd_mta@buffer 0031  
                               cmd_mmp@buffer 0031                                      ??_S1_ISR 0070  
                                    ??_LCDcmd 0028                                      ??_LCDstr 002B  
                             cmd_tri@indexAux 0040                      __end_of_sendERRORMessage 1215  
                         DATAEE_ReadByte@bAdd 0026                  ?_INT_DefaultInterruptHandler 0070  
                    __size_of_TMR1_Initialize 001F                              ??_PMD_Initialize 0020  
                                  ?_Clock_ISR 0070                                      ??___lmul 0028  
                                    ??___wmul 0024                                      ??_cmd_aa 0032  
                                    ??_cmd_ir 0032                                      ??_cmd_ra 0032  
                                    ??_cmd_rc 0032                                      ??_cmd_sc 0032  
                                    ??_cmd_rp 0032                                   __pdataBANK0 006F  
                                 __pdataBANK1 00E6                                      ??_memset 0024  
                            sendOKMessage@cmd 002A                    __end_of_EXT_INT_Initialize 10AC  
                           _editingClockAlarm 0064                             update_menuLCD@str 0049  
                              _TMR5_StopTimer 1FEB                             __size_of_WriteI2C 005A  
                    _ADCC_GetSingleConversion 10EB                       i1DATAEE_WriteByte@bData 0078  
                 __end_of_EUSART_Transmit_ISR 137F                        __end_of_TMR2_StopTimer 1FFC  
                                    ?_LCDchar 0070                                   __pbssCOMMON 007D  
                                    ?_LCDinit 0070                                      ?_LCDsend 0070  
                                   ___latbits 0002                                      ?_INT_ISR 0070  
                               __pcstackBANK0 0020                                 cmd_trc@buffer 0031  
                               __pcstackBANK1 00A0                            _PWM6_LoadDutyValue 1155  
                    __size_of_TMR2_Initialize 000E                                  _isdigit$3163 0020  
                       __size_of_INT_CallBack 000D                 ?_TMR5_DefaultInterruptHandler 0070  
        __size_of_differenceBetweenTimePeriod 0035                                      LCDchar@c 0028  
                           __size_of_editTemp 0048                                 cmd_rtl@buffer 0031  
                               cmd_tri@buffer 0031                    __end_of_EUSART_Receive_ISR 1313  
                                    LCDsend@c 0023                           ?_PWM6_LoadDutyValue 0020  
                  __size_of_EUSART_Initialize 002E                                   sprintf@flag 003E  
                   __size_of_i2c1_driver_open 000C                                   sprintf@prec 003B  
            _EUSART_RxDefaultInterruptHandler 0134                               ??_sendOKMessage 0029  
                         __end_of_EUSART_Read 13EF                                      ?_ReadI2C 0070  
                                   __pnvBANK1 00DB                                     __pnvBANK2 0134  
                                   _editClock 0973                                     _main$3686 00B4  
                            ___lwdiv@dividend 0022                        _PIN_MANAGER_Initialize 164B  
               ??_INT_DefaultInterruptHandler 0070                          EUSART_Read@readValue 0021  
            __end_of_TMR1_SetInterruptHandler 1060               ADCC_GetSingleConversion@channel 0073  
                                   _dimingLed 00CD                                      ?___lwdiv 0020  
                                    ?___lwmod 0028                   _i2c1_driver_busCollisionISR 00D1  
                                _eusartRxHead 006C                        __end_of_TMR5_StopTimer 1FEE  
                                _eusartTxHead 006E                                  _eusartRxTail 00DA  
                                _eusartTxTail 006D                          ??_PWM6_LoadDutyValue 0022  
                                    ?_cmd_dac 002F                                      ?_editLum 0070  
                                    ?_cmd_dtl 002F                                      ?_cmd_mta 002F  
                                    ?_cmd_mmp 002F                                  cmd_aa@buffer 0031  
                ??_INTERRUPT_InterruptManager 007D                                      ?_cmd_trc 002F  
                                    ?_cmd_rtl 002F                                      ?_cmd_tri 002F  
                               ??_sendMessage 0026                                   ??_TMR2_Stop 0020  
                                sendMessage@n 0027                       _eusartTxBufferRemaining 00E5  
                                _INT_CallBack 1084                                      _BAUD1CON 011F  
                                    ?_isdigit 0070                               ?_TMR2_StopTimer 0070  
                    __size_of_PWM6_Initialize 000D                              ___lwdiv@quotient 0025  
                              __size_of_getch 0004                                      ?_sprintf 002E  
                                    _T2CLKCON 0290                      __size_of_DATAEE_ReadByte 000F  
                        cmd_tri@startingIndex 0043                                __size_of_putch 0007  
                                   cmd_aa@num 002F                                __size_of_tsttc 010D  
                              _eusartRxBuffer 0220                                _eusartTxBuffer 01A0  
                              ___wmul@product 0024                                     cmd_ir@num 002F  
                                   cmd_ra@num 002F                                      _LATAbits 0016  
                                   cmd_rc@num 002F                                     cmd_sc@num 002F  
                                   clear_ram0 1007                                     cmd_rp@num 002F  
                                    _PIE0bits 0716                                      _PIE3bits 0719  
                                    _PIE4bits 071A                      __size_of_TMR2_StartTimer 0004  
                                  ?_editClock 0070                                     _tempAlarm 00CA  
                                    _S1_Value 00D8                      __size_of_TMR1_WriteTimer 0011  
         __size_of_INTERRUPT_InterruptManager 005A                                      _PIR0bits 070C  
                                    _PIR3bits 070F                                      _PIR4bits 0710  
                    __size_of_TMR5_Initialize 001F                                   ??_Clock_ISR 007A  
                        __end_of_toggleAlarms 1609                                      _SSP1CON1 0190  
                                    _SSP1CON2 0191                                      _TMR1_ISR 1110  
                                    _TMR5_ISR 1127                                      _S1button 0797  
                                    _SSP1STAT 018F                               ?_TMR5_StopTimer 0070  
                                   _updateLCD 006F                    __end_of_setTimer5ReloadVal 1072  
                           ??_TMR1_Initialize 0022                                    _ADCON0bits 0093  
                                  _ADCON1bits 0094                                sendMessage@num 0023  
                                  _ADCON2bits 0095                                    _ADCON3bits 0096  
                                cmd_ir@buffer 0031                             ___wmul@multiplier 0020  
                                    i1___wmul 1215                                  cmd_ra@buffer 0031  
                          i1WriteI2C@data_out 0071                  __end_of_PWM_Output_D4_Enable 1FE5  
                                cmd_rc@buffer 0031          __size_of_INT_DefaultInterruptHandler 0001  
                                cmd_sc@buffer 0031             __size_of_TMR5_SetInterruptHandler 0009  
                            __size_of_LCDchar 0009                     ?_TMR5_SetInterruptHandler 0020  
                       DATAEE_WriteByte@bData 0022                              __size_of_LCDinit 0076  
                            __size_of_LCDsend 0053                              __size_of_INT_ISR 0006  
                         __end_of_sendMessage 1336                                   _EUSART_Read 13C9  
                           ___lmul@multiplier 0020                             ?_DATAEE_WriteByte 0020  
                           ??_TMR2_Initialize 0020                         setTimer5ReloadVal@val 0020  
                                cmd_rp@buffer 0031                ??_TMR5_DefaultInterruptHandler 0070  
                          ??_DATAEE_WriteByte 0023                              __size_of_ReadI2C 001A  
                                  _ADSTATbits 0097                              ??_monitoring_ISR 007A  
                     ??_OSCILLATOR_Initialize 0020                              __size_of___lwdiv 003D  
                            __size_of___lwmod 0035                                      _WriteI2C 0837  
                    _TMR1_SetInterruptHandler 1057                              __size_of_cmd_dac 0044  
                            __size_of_editLum 0048                              __size_of_cmd_dtl 0035  
                     __size_of_update_menuLCD 021C                              __size_of_cmd_mta 001B  
                            __size_of_cmd_mmp 006C                              __size_of_cmd_trc 00C4  
                            __size_of_cmd_rtl 0021                              __size_of_cmd_tri 00EA  
                                cmd_tri@index 0048                         _TMR1_InterruptHandler 00E1  
                                  sprintf@val 003C                                      _clkAlarm 00C0  
                    __size_of_TMR5_StartTimer 0003                      __size_of_ADCC_Initialize 0017  
                            __size_of_isdigit 0013                                      _editTemp 171A  
                             ___lwdiv@divisor 0020                               ___lwdiv@counter 0027  
                                    __ptext10 05F9                                      __ptext11 10FD  
                                    __ptext20 1072                                      __ptext12 0802  
                                    __ptext21 1022                                      __ptext13 154C  
                                  _T1GCONbits 020F                                      __ptext30 0891  
                                    __ptext22 0797                                      __ptext14 14DF  
                                    __ptext31 13A4                                      __ptext23 09F3  
                                    __ptext15 1FF8                                      __ptext40 1FEB  
                                    __ptext32 12D0                                      __ptext24 13EF  
                                    __ptext16 1FF1                                      __ptext41 1FE8  
                                    __ptext33 1589                                      __ptext25 1514  
                                    __ptext17 1FEE                                      __ptext50 1253  
                                    __ptext42 1188                                      __ptext34 137F  
                                    __ptext26 14AA                                      __ptext18 1155  
                                    __ptext51 1060                                      __ptext43 11F7  
                                    __ptext35 0B8B                                      __ptext27 168E  
                                    __ptext19 11BE                                      __ptext60 1045  
                                    __ptext52 10AC                                      __ptext44 1313  
                                    __ptext36 12B0                                      __ptext28 1609  
                                    __ptext61 141A                                      __ptext53 1234  
                                    __ptext45 1013                                      __ptext37 10BA  
                                    __ptext29 11A3                                      __ptext70 1FDF  
                                    __ptext62 103C                                      __ptext54 1057  
                                    __ptext46 1448                                      __ptext38 1069  
                                    __ptext71 1336                                      __ptext63 1033  
                                    __ptext55 1091                                      __ptext47 1FF4  
                                    __ptext39 1476                                      __ptext80 10EB  
                                    __ptext64 113E                                      __ptext56 101A  
                                    __ptext48 1FE5                                      __ptext81 10DA  
                                    __ptext73 1127                                      __ptext65 1FE2  
                                    __ptext57 164B                                      __ptext49 1272  
                                    __ptext90 102A                                      __ptext82 1110  
                                    __ptext74 0002                                      __ptext66 08FD  
                                    __ptext58 104E                                      __ptext91 135A  
                                    __ptext83 10C9                                      __ptext75 0E8D  
                                    __ptext67 0AB7                                      __ptext59 109E  
                                    __ptext92 12F1                                      __ptext84 0C75  
                                    __ptext76 1215                                      __ptext68 17AD  
                                    __ptext85 0801                                      __ptext77 0D80  
                                    __ptext69 0837                                      __ptext86 11D9  
                                    __ptext78 1762                                      __ptext87 1001  
                                    __ptext79 116E                                      __ptext88 1084  
                                    __ptext89 0800                                  _SSP1CON1bits 0190  
                                _SSP1CON2bits 0191                   __size_ofi1_DATAEE_WriteByte 001E  
                                    _commands 1800                              __size_of_sprintf 019E  
                 DATAEE_WriteByte@GIEBitValue 0023                              _i2c1_driver_open 07F4  
                                    _modeFlag 0062                             ??_PWM6_Initialize 0020  
                 __size_of_EUSART_is_rx_ready 0003                                 __size_of_main 0340  
                                  _T5GCONbits 021B                                      cmd_dac@h 0033  
                                    cmd_dac@m 0034                                      _lumAlarm 00C7  
                                    cmd_dac@s 0035                             ?_sendERRORMessage 0070  
                           ??_DATAEE_ReadByte 0028                                      _lumLevel 0068  
                       _PWM_Output_D4_Disable 1FEE                                   ??_editClock 005B  
                                    cmd_trc@i 003F                                      cmd_trc@j 0046  
                                    cmd_trc@n 0044                                      cmd_tri@i 0045  
                                    cmd_tri@j 0047                                      cmd_tri@n 0042  
                            _editingTempAlarm 00D7                      __size_of_TMR5_WriteTimer 0011  
                                  _RC1STAbits 011D                            ??_sendERRORMessage 0029  
                                    _prevTemp 00EB                                    tsttc@value 0073  
                  ??_ADCC_GetSingleConversion 0073                                      int$flags 007E  
                           ??_TMR2_StartTimer 0020            __end_of_INTERRUPT_InterruptManager 005E  
                  _INTERRUPT_InterruptManager 0004                                      main@buff 00A0  
                                _SSP1STATbits 018F                             ??_TMR1_WriteTimer 0072  
                           ??_TMR5_Initialize 0022                                   _sendMessage 1313  
                        update_menuLCD@F12927 00C4                                    _INTCONbits 000B  
                                 _NVMCON1bits 081E                                  _prevLumLevel 00E9  
                        _INT_InterruptHandler 00DB                                      isdigit@c 0021  
                                    memset@p1 0026                                    _LCDsend2x4 0AB7  
                          _EXT_INT_Initialize 109E                                   cmd_rtl@buff 0033  
                                    intlevel1 0000                                     sprintf@ap 003A  
                                   sprintf@sp 0042                              ___lwmod@dividend 002A  
                     ?_PIN_MANAGER_Initialize 0070                          sendERRORMessage@bufw 002B  
                       __size_of_toggleAlarms 0041                           ?_EXT_INT_Initialize 0070  
                             _editingLumAlarm 00D6          __end_of_EUSART_SetRxInterruptHandler 103C  
       __size_of_EUSART_SetRxInterruptHandler 0009                  _EUSART_SetRxInterruptHandler 1033  
                        _PWM_Output_D4_Enable 1FE2           __end_of_differenceBetweenTimePeriod 1514  
                 _differenceBetweenTimePeriod 14DF                            _EUSART_Receive_ISR 12F1  
                    ?_INT_SetInterruptHandler 0020                              ??_TMR2_StopTimer 0020  
                               __pstringtext1 1800                                 __pstringtext2 1836  
                               __pstringtext3 1827                                 __pstringtext4 1840  
                               __pstringtext5 1847                                 __pstringtext6 184C  
                               __pstringtext7 0000                          ??_EXT_INT_Initialize 0022  
               ??_differenceBetweenTimePeriod 0027                                      sprintf@c 0041  
                                    sprintf@f 002E                           ?_EUSART_Receive_ISR 0070  
                                  _SSP1DATPPS 0EC6                                    _SSP1CLKPPS 0EC5  
                             ___lwmod@divisor 0028                           sendERRORMessage@cmd 002A  
                             ___lwmod@counter 002D                   PWM6_LoadDutyValue@dutyValue 0020  
                                  _TX1STAbits 011E                                  _toggleAlarms 15C8  
                                  _TMR2_Start 1FE5                            EUSART_Write@txData 0021  
                __size_of_EUSART_Transmit_ISR 0025                             ??_TMR5_StartTimer 0020  
              __end_of_PIN_MANAGER_Initialize 168E                             ??_ADCC_Initialize 0020  
                      ?_PWM_Output_D4_Disable 0070                          ??_EUSART_Receive_ISR 0070  
                       ?_PWM_Output_D4_Enable 0070                               _TMR1_Initialize 1234  
                       __end_of_sendOKMessage 11A3                              ??_TMR5_StopTimer 0020  
