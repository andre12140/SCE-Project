

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Nov 30 21:16:58 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    23                           	psect	inittext,global,class=CODE,delta=2
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    27                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    29                           	psect	text1,local,class=CODE,merge=1,delta=2
    30                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text3,local,class=CODE,merge=1,delta=2
    32                           	psect	text4,local,class=CODE,merge=1,delta=2
    33                           	psect	text5,local,class=CODE,merge=1,delta=2
    34                           	psect	text6,local,class=CODE,merge=1,delta=2
    35                           	psect	text7,local,class=CODE,merge=1,delta=2
    36                           	psect	text8,local,class=CODE,merge=1,delta=2
    37                           	psect	text9,local,class=CODE,merge=1,delta=2
    38                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text15,local,class=CODE,merge=1,delta=2
    44                           	psect	text16,local,class=CODE,merge=1,delta=2
    45                           	psect	text17,local,class=CODE,merge=1,delta=2
    46                           	psect	text18,local,class=CODE,merge=1,delta=2
    47                           	psect	text19,local,class=CODE,merge=1,delta=2
    48                           	psect	text20,local,class=CODE,merge=1,delta=2
    49                           	psect	text21,local,class=CODE,merge=1,delta=2
    50                           	psect	text22,local,class=CODE,merge=1,delta=2
    51                           	psect	text23,local,class=CODE,merge=1,delta=2
    52                           	psect	text24,local,class=CODE,merge=1,delta=2
    53                           	psect	text25,local,class=CODE,merge=1,delta=2
    54                           	psect	text26,local,class=CODE,merge=1,delta=2
    55                           	psect	text27,local,class=CODE,merge=1,delta=2
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text29,local,class=CODE,merge=1,delta=2
    58                           	psect	text30,local,class=CODE,merge=1,delta=2
    59                           	psect	text31,local,class=CODE,merge=1,delta=2
    60                           	psect	text32,local,class=CODE,merge=1,delta=2
    61                           	psect	text33,local,class=CODE,merge=1,delta=2
    62                           	psect	text34,local,class=CODE,merge=1,delta=2
    63                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text36,local,class=CODE,merge=1,delta=2
    65                           	psect	text37,local,class=CODE,merge=1,delta=2
    66                           	psect	text38,local,class=CODE,merge=1,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2
    70                           	psect	text42,local,class=CODE,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,delta=2
    72                           	psect	text44,local,class=CODE,merge=1,delta=2
    73                           	psect	text45,local,class=CODE,merge=1,delta=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2
    75                           	psect	text47,local,class=CODE,merge=1,delta=2
    76                           	psect	text48,local,class=CODE,merge=1,delta=2
    77                           	psect	text49,local,class=CODE,merge=1,delta=2
    78                           	psect	text50,local,class=CODE,merge=1,delta=2
    79                           	psect	text51,local,class=CODE,merge=1,delta=2
    80                           	psect	text52,local,class=CODE,merge=1,delta=2
    81                           	psect	text53,local,class=CODE,merge=1,delta=2
    82                           	psect	text54,local,class=CODE,merge=1,delta=2
    83                           	psect	text55,local,class=CODE,merge=1,delta=2
    84                           	psect	text56,local,class=CODE,merge=1,delta=2
    85                           	psect	text57,local,class=CODE,merge=1,delta=2
    86                           	psect	text58,local,class=CODE,merge=1,delta=2
    87                           	psect	text59,local,class=CODE,merge=1,delta=2
    88                           	psect	text60,local,class=CODE,merge=1,delta=2
    89                           	psect	text61,local,class=CODE,merge=1,delta=2
    90                           	psect	text62,local,class=CODE,merge=1,delta=2
    91                           	psect	text63,local,class=CODE,merge=1,delta=2
    92                           	psect	text64,local,class=CODE,merge=1,delta=2
    93                           	psect	text65,local,class=CODE,merge=1,delta=2
    94                           	psect	text66,local,class=CODE,merge=1,delta=2
    95                           	psect	text67,local,class=CODE,merge=1,delta=2
    96                           	psect	text68,local,class=CODE,merge=1,delta=2
    97                           	psect	intentry,global,class=CODE,delta=2
    98                           	psect	text70,local,class=CODE,merge=1,delta=2
    99                           	psect	text71,local,class=CODE,merge=1,delta=2
   100                           	psect	text72,local,class=CODE,merge=1,delta=2
   101                           	psect	text73,local,class=CODE,merge=1,delta=2
   102                           	psect	text74,local,class=CODE,merge=1,delta=2
   103                           	psect	text75,local,class=CODE,merge=1,delta=2
   104                           	psect	text76,local,class=CODE,merge=1,delta=2
   105                           	psect	text77,local,class=CODE,merge=1,delta=2
   106                           	psect	text78,local,class=CODE,merge=1,delta=2
   107                           	psect	text79,local,class=CODE,merge=1,delta=2
   108                           	psect	text80,local,class=CODE,merge=1,delta=2
   109                           	psect	text81,local,class=CODE,merge=1,delta=2
   110                           	psect	text82,local,class=CODE,merge=1,delta=2
   111                           	psect	text83,local,class=CODE,merge=1,delta=2
   112                           	psect	text84,local,class=CODE,merge=1,delta=2
   113                           	psect	text85,local,class=CODE,merge=1,delta=2
   114                           	psect	text86,local,class=CODE,merge=1,delta=2
   115                           	psect	text87,local,class=CODE,merge=1,delta=2
   116                           	psect	text88,local,class=CODE,merge=1,delta=2
   117                           	psect	text89,local,class=CODE,merge=1,delta=2
   118                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   119                           	dabs	1,0x7E,2
   120  0000                     
   121                           ; Version 2.30
   122                           ; Generated 15/09/2020 GMT
   123                           ; 
   124                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   125                           ; All rights reserved.
   126                           ; 
   127                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   128                           ; 
   129                           ; Redistribution and use in source and binary forms, with or without modification, are
   130                           ; permitted provided that the following conditions are met:
   131                           ; 
   132                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   133                           ;        conditions and the following disclaimer.
   134                           ; 
   135                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   136                           ;        of conditions and the following disclaimer in the documentation and/or other
   137                           ;        materials provided with the distribution. Publication is not required when
   138                           ;        this file is used in an embedded application.
   139                           ; 
   140                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   141                           ;        software without specific prior written permission.
   142                           ; 
   143                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   144                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   145                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   146                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   147                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   148                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   149                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   150                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   151                           ; 
   152                           ; 
   153                           ; Code-generator required, PIC16F18875 Definitions
   154                           ; 
   155                           ; SFR Addresses
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001C                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001D                     	;# 
   187  001E                     	;# 
   188  001F                     	;# 
   189  008C                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0110                     	;# 
   216  0110                     	;# 
   217  0111                     	;# 
   218  0112                     	;# 
   219  0112                     	;# 
   220  0113                     	;# 
   221  0114                     	;# 
   222  0114                     	;# 
   223  0115                     	;# 
   224  0116                     	;# 
   225  0116                     	;# 
   226  0117                     	;# 
   227  0119                     	;# 
   228  0119                     	;# 
   229  0119                     	;# 
   230  011A                     	;# 
   231  011A                     	;# 
   232  011A                     	;# 
   233  011B                     	;# 
   234  011B                     	;# 
   235  011B                     	;# 
   236  011B                     	;# 
   237  011B                     	;# 
   238  011C                     	;# 
   239  011C                     	;# 
   240  011C                     	;# 
   241  011D                     	;# 
   242  011D                     	;# 
   243  011D                     	;# 
   244  011E                     	;# 
   245  011E                     	;# 
   246  011E                     	;# 
   247  011F                     	;# 
   248  011F                     	;# 
   249  011F                     	;# 
   250  011F                     	;# 
   251  011F                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  018E                     	;# 
   255  018F                     	;# 
   256  0190                     	;# 
   257  0191                     	;# 
   258  0192                     	;# 
   259  0196                     	;# 
   260  0197                     	;# 
   261  0198                     	;# 
   262  0199                     	;# 
   263  019A                     	;# 
   264  019B                     	;# 
   265  019C                     	;# 
   266  020C                     	;# 
   267  020C                     	;# 
   268  020D                     	;# 
   269  020E                     	;# 
   270  020F                     	;# 
   271  020F                     	;# 
   272  0210                     	;# 
   273  0210                     	;# 
   274  0211                     	;# 
   275  0211                     	;# 
   276  0212                     	;# 
   277  0212                     	;# 
   278  0213                     	;# 
   279  0214                     	;# 
   280  0215                     	;# 
   281  0215                     	;# 
   282  0216                     	;# 
   283  0216                     	;# 
   284  0217                     	;# 
   285  0217                     	;# 
   286  0218                     	;# 
   287  0218                     	;# 
   288  0219                     	;# 
   289  021A                     	;# 
   290  021B                     	;# 
   291  021B                     	;# 
   292  021C                     	;# 
   293  021C                     	;# 
   294  021D                     	;# 
   295  021D                     	;# 
   296  021E                     	;# 
   297  021F                     	;# 
   298  028C                     	;# 
   299  028C                     	;# 
   300  028D                     	;# 
   301  028D                     	;# 
   302  028E                     	;# 
   303  028F                     	;# 
   304  0290                     	;# 
   305  0290                     	;# 
   306  0291                     	;# 
   307  0292                     	;# 
   308  0292                     	;# 
   309  0293                     	;# 
   310  0293                     	;# 
   311  0294                     	;# 
   312  0295                     	;# 
   313  0296                     	;# 
   314  0296                     	;# 
   315  0297                     	;# 
   316  0298                     	;# 
   317  0298                     	;# 
   318  0299                     	;# 
   319  0299                     	;# 
   320  029A                     	;# 
   321  029B                     	;# 
   322  029C                     	;# 
   323  029C                     	;# 
   324  029D                     	;# 
   325  030C                     	;# 
   326  030C                     	;# 
   327  030D                     	;# 
   328  030E                     	;# 
   329  030F                     	;# 
   330  0310                     	;# 
   331  0310                     	;# 
   332  0311                     	;# 
   333  0312                     	;# 
   334  0313                     	;# 
   335  0314                     	;# 
   336  0314                     	;# 
   337  0315                     	;# 
   338  0316                     	;# 
   339  0317                     	;# 
   340  0318                     	;# 
   341  0318                     	;# 
   342  0319                     	;# 
   343  031A                     	;# 
   344  031B                     	;# 
   345  031C                     	;# 
   346  031C                     	;# 
   347  031D                     	;# 
   348  031E                     	;# 
   349  031F                     	;# 
   350  038C                     	;# 
   351  038C                     	;# 
   352  038D                     	;# 
   353  038E                     	;# 
   354  0390                     	;# 
   355  0390                     	;# 
   356  0391                     	;# 
   357  0392                     	;# 
   358  040C                     	;# 
   359  040D                     	;# 
   360  040E                     	;# 
   361  040F                     	;# 
   362  0410                     	;# 
   363  0411                     	;# 
   364  0416                     	;# 
   365  0416                     	;# 
   366  0417                     	;# 
   367  0418                     	;# 
   368  0418                     	;# 
   369  0419                     	;# 
   370  041A                     	;# 
   371  041A                     	;# 
   372  041B                     	;# 
   373  041C                     	;# 
   374  041C                     	;# 
   375  041D                     	;# 
   376  041E                     	;# 
   377  041F                     	;# 
   378  048C                     	;# 
   379  048C                     	;# 
   380  048D                     	;# 
   381  048E                     	;# 
   382  048F                     	;# 
   383  048F                     	;# 
   384  0490                     	;# 
   385  0491                     	;# 
   386  0492                     	;# 
   387  0492                     	;# 
   388  0493                     	;# 
   389  0494                     	;# 
   390  0495                     	;# 
   391  0495                     	;# 
   392  0496                     	;# 
   393  0497                     	;# 
   394  0498                     	;# 
   395  0499                     	;# 
   396  049A                     	;# 
   397  049B                     	;# 
   398  049C                     	;# 
   399  049D                     	;# 
   400  050C                     	;# 
   401  050C                     	;# 
   402  050D                     	;# 
   403  050E                     	;# 
   404  050F                     	;# 
   405  050F                     	;# 
   406  0510                     	;# 
   407  0511                     	;# 
   408  0512                     	;# 
   409  0512                     	;# 
   410  0513                     	;# 
   411  0514                     	;# 
   412  0515                     	;# 
   413  0515                     	;# 
   414  0516                     	;# 
   415  0517                     	;# 
   416  0518                     	;# 
   417  0519                     	;# 
   418  051A                     	;# 
   419  051B                     	;# 
   420  051C                     	;# 
   421  051D                     	;# 
   422  058C                     	;# 
   423  058C                     	;# 
   424  058D                     	;# 
   425  058E                     	;# 
   426  058F                     	;# 
   427  058F                     	;# 
   428  0590                     	;# 
   429  0591                     	;# 
   430  0592                     	;# 
   431  0593                     	;# 
   432  060C                     	;# 
   433  060D                     	;# 
   434  060E                     	;# 
   435  060F                     	;# 
   436  0610                     	;# 
   437  0611                     	;# 
   438  0612                     	;# 
   439  0613                     	;# 
   440  0614                     	;# 
   441  0616                     	;# 
   442  0617                     	;# 
   443  0618                     	;# 
   444  0619                     	;# 
   445  061A                     	;# 
   446  061B                     	;# 
   447  061C                     	;# 
   448  061D                     	;# 
   449  061E                     	;# 
   450  068C                     	;# 
   451  068D                     	;# 
   452  068E                     	;# 
   453  068F                     	;# 
   454  0690                     	;# 
   455  0691                     	;# 
   456  0692                     	;# 
   457  0693                     	;# 
   458  0694                     	;# 
   459  070C                     	;# 
   460  070D                     	;# 
   461  070E                     	;# 
   462  070F                     	;# 
   463  0710                     	;# 
   464  0711                     	;# 
   465  0712                     	;# 
   466  0713                     	;# 
   467  0714                     	;# 
   468  0716                     	;# 
   469  0717                     	;# 
   470  0718                     	;# 
   471  0719                     	;# 
   472  071A                     	;# 
   473  071B                     	;# 
   474  071C                     	;# 
   475  071D                     	;# 
   476  071E                     	;# 
   477  0796                     	;# 
   478  0797                     	;# 
   479  0798                     	;# 
   480  0799                     	;# 
   481  079A                     	;# 
   482  079B                     	;# 
   483  080C                     	;# 
   484  080D                     	;# 
   485  080E                     	;# 
   486  080F                     	;# 
   487  0810                     	;# 
   488  0811                     	;# 
   489  0812                     	;# 
   490  0813                     	;# 
   491  0814                     	;# 
   492  081A                     	;# 
   493  081B                     	;# 
   494  081C                     	;# 
   495  081D                     	;# 
   496  081E                     	;# 
   497  081F                     	;# 
   498  088C                     	;# 
   499  088D                     	;# 
   500  088E                     	;# 
   501  088F                     	;# 
   502  0890                     	;# 
   503  0891                     	;# 
   504  0892                     	;# 
   505  0893                     	;# 
   506  0895                     	;# 
   507  0896                     	;# 
   508  0897                     	;# 
   509  0898                     	;# 
   510  0899                     	;# 
   511  089A                     	;# 
   512  089B                     	;# 
   513  090C                     	;# 
   514  090E                     	;# 
   515  090F                     	;# 
   516  091F                     	;# 
   517  091F                     	;# 
   518  098F                     	;# 
   519  098F                     	;# 
   520  0990                     	;# 
   521  0991                     	;# 
   522  0992                     	;# 
   523  0993                     	;# 
   524  0994                     	;# 
   525  0995                     	;# 
   526  0996                     	;# 
   527  0997                     	;# 
   528  0E0F                     	;# 
   529  0E10                     	;# 
   530  0E11                     	;# 
   531  0E12                     	;# 
   532  0E13                     	;# 
   533  0E14                     	;# 
   534  0E15                     	;# 
   535  0E16                     	;# 
   536  0E17                     	;# 
   537  0E18                     	;# 
   538  0E19                     	;# 
   539  0E1A                     	;# 
   540  0E1B                     	;# 
   541  0E1C                     	;# 
   542  0E1D                     	;# 
   543  0E1E                     	;# 
   544  0E1F                     	;# 
   545  0E20                     	;# 
   546  0E21                     	;# 
   547  0E22                     	;# 
   548  0E23                     	;# 
   549  0E24                     	;# 
   550  0E25                     	;# 
   551  0E26                     	;# 
   552  0E27                     	;# 
   553  0E28                     	;# 
   554  0E29                     	;# 
   555  0E2A                     	;# 
   556  0E2B                     	;# 
   557  0E2C                     	;# 
   558  0E2D                     	;# 
   559  0E2E                     	;# 
   560  0E2F                     	;# 
   561  0E30                     	;# 
   562  0E31                     	;# 
   563  0E32                     	;# 
   564  0E33                     	;# 
   565  0E34                     	;# 
   566  0E35                     	;# 
   567  0E36                     	;# 
   568  0E37                     	;# 
   569  0E8F                     	;# 
   570  0E90                     	;# 
   571  0E91                     	;# 
   572  0E92                     	;# 
   573  0E93                     	;# 
   574  0E94                     	;# 
   575  0E95                     	;# 
   576  0E96                     	;# 
   577  0E97                     	;# 
   578  0E9C                     	;# 
   579  0E9D                     	;# 
   580  0E9E                     	;# 
   581  0EA1                     	;# 
   582  0EA2                     	;# 
   583  0EA3                     	;# 
   584  0EA4                     	;# 
   585  0EA5                     	;# 
   586  0EA9                     	;# 
   587  0EAA                     	;# 
   588  0EAB                     	;# 
   589  0EAC                     	;# 
   590  0EB1                     	;# 
   591  0EB2                     	;# 
   592  0EB3                     	;# 
   593  0EB8                     	;# 
   594  0EB9                     	;# 
   595  0EBA                     	;# 
   596  0EBB                     	;# 
   597  0EBC                     	;# 
   598  0EBD                     	;# 
   599  0EBE                     	;# 
   600  0EC3                     	;# 
   601  0EC5                     	;# 
   602  0EC6                     	;# 
   603  0EC7                     	;# 
   604  0EC8                     	;# 
   605  0EC9                     	;# 
   606  0ECA                     	;# 
   607  0ECB                     	;# 
   608  0ECC                     	;# 
   609  0F10                     	;# 
   610  0F11                     	;# 
   611  0F12                     	;# 
   612  0F13                     	;# 
   613  0F14                     	;# 
   614  0F15                     	;# 
   615  0F16                     	;# 
   616  0F17                     	;# 
   617  0F18                     	;# 
   618  0F19                     	;# 
   619  0F1A                     	;# 
   620  0F1B                     	;# 
   621  0F1C                     	;# 
   622  0F1D                     	;# 
   623  0F1E                     	;# 
   624  0F1F                     	;# 
   625  0F20                     	;# 
   626  0F21                     	;# 
   627  0F22                     	;# 
   628  0F23                     	;# 
   629  0F24                     	;# 
   630  0F25                     	;# 
   631  0F26                     	;# 
   632  0F27                     	;# 
   633  0F28                     	;# 
   634  0F29                     	;# 
   635  0F2A                     	;# 
   636  0F2B                     	;# 
   637  0F2C                     	;# 
   638  0F2D                     	;# 
   639  0F2E                     	;# 
   640  0F2F                     	;# 
   641  0F30                     	;# 
   642  0F31                     	;# 
   643  0F32                     	;# 
   644  0F38                     	;# 
   645  0F39                     	;# 
   646  0F3A                     	;# 
   647  0F3B                     	;# 
   648  0F3C                     	;# 
   649  0F3D                     	;# 
   650  0F3E                     	;# 
   651  0F3F                     	;# 
   652  0F40                     	;# 
   653  0F41                     	;# 
   654  0F43                     	;# 
   655  0F44                     	;# 
   656  0F45                     	;# 
   657  0F46                     	;# 
   658  0F47                     	;# 
   659  0F48                     	;# 
   660  0F49                     	;# 
   661  0F4A                     	;# 
   662  0F4B                     	;# 
   663  0F4C                     	;# 
   664  0F4E                     	;# 
   665  0F4F                     	;# 
   666  0F50                     	;# 
   667  0F51                     	;# 
   668  0F52                     	;# 
   669  0F53                     	;# 
   670  0F54                     	;# 
   671  0F55                     	;# 
   672  0F56                     	;# 
   673  0F57                     	;# 
   674  0F59                     	;# 
   675  0F5A                     	;# 
   676  0F5B                     	;# 
   677  0F5C                     	;# 
   678  0F5D                     	;# 
   679  0F61                     	;# 
   680  0F62                     	;# 
   681  0F64                     	;# 
   682  0F65                     	;# 
   683  0F66                     	;# 
   684  0F67                     	;# 
   685  0F68                     	;# 
   686  0F69                     	;# 
   687  0F6A                     	;# 
   688  0F6B                     	;# 
   689  0F6C                     	;# 
   690  0F6D                     	;# 
   691  0FE4                     	;# 
   692  0FE5                     	;# 
   693  0FE6                     	;# 
   694  0FE7                     	;# 
   695  0FE8                     	;# 
   696  0FE9                     	;# 
   697  0FEA                     	;# 
   698  0FEB                     	;# 
   699  0FED                     	;# 
   700  0FEE                     	;# 
   701  0FEF                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0008                     	;# 
   711  0009                     	;# 
   712  000A                     	;# 
   713  000B                     	;# 
   714  000C                     	;# 
   715  000D                     	;# 
   716  000E                     	;# 
   717  000F                     	;# 
   718  0010                     	;# 
   719  0011                     	;# 
   720  0012                     	;# 
   721  0013                     	;# 
   722  0014                     	;# 
   723  0015                     	;# 
   724  0016                     	;# 
   725  0017                     	;# 
   726  0018                     	;# 
   727  0019                     	;# 
   728  001A                     	;# 
   729  001C                     	;# 
   730  001C                     	;# 
   731  001D                     	;# 
   732  001D                     	;# 
   733  001E                     	;# 
   734  001F                     	;# 
   735  008C                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  008E                     	;# 
   739  008E                     	;# 
   740  008F                     	;# 
   741  0090                     	;# 
   742  0090                     	;# 
   743  0091                     	;# 
   744  0093                     	;# 
   745  0094                     	;# 
   746  0095                     	;# 
   747  0096                     	;# 
   748  0097                     	;# 
   749  0098                     	;# 
   750  0099                     	;# 
   751  009A                     	;# 
   752  009B                     	;# 
   753  009C                     	;# 
   754  009D                     	;# 
   755  009E                     	;# 
   756  010C                     	;# 
   757  010D                     	;# 
   758  010E                     	;# 
   759  010E                     	;# 
   760  010F                     	;# 
   761  0110                     	;# 
   762  0110                     	;# 
   763  0111                     	;# 
   764  0112                     	;# 
   765  0112                     	;# 
   766  0113                     	;# 
   767  0114                     	;# 
   768  0114                     	;# 
   769  0115                     	;# 
   770  0116                     	;# 
   771  0116                     	;# 
   772  0117                     	;# 
   773  0119                     	;# 
   774  0119                     	;# 
   775  0119                     	;# 
   776  011A                     	;# 
   777  011A                     	;# 
   778  011A                     	;# 
   779  011B                     	;# 
   780  011B                     	;# 
   781  011B                     	;# 
   782  011B                     	;# 
   783  011B                     	;# 
   784  011C                     	;# 
   785  011C                     	;# 
   786  011C                     	;# 
   787  011D                     	;# 
   788  011D                     	;# 
   789  011D                     	;# 
   790  011E                     	;# 
   791  011E                     	;# 
   792  011E                     	;# 
   793  011F                     	;# 
   794  011F                     	;# 
   795  011F                     	;# 
   796  011F                     	;# 
   797  011F                     	;# 
   798  018C                     	;# 
   799  018D                     	;# 
   800  018E                     	;# 
   801  018F                     	;# 
   802  0190                     	;# 
   803  0191                     	;# 
   804  0192                     	;# 
   805  0196                     	;# 
   806  0197                     	;# 
   807  0198                     	;# 
   808  0199                     	;# 
   809  019A                     	;# 
   810  019B                     	;# 
   811  019C                     	;# 
   812  020C                     	;# 
   813  020C                     	;# 
   814  020D                     	;# 
   815  020E                     	;# 
   816  020F                     	;# 
   817  020F                     	;# 
   818  0210                     	;# 
   819  0210                     	;# 
   820  0211                     	;# 
   821  0211                     	;# 
   822  0212                     	;# 
   823  0212                     	;# 
   824  0213                     	;# 
   825  0214                     	;# 
   826  0215                     	;# 
   827  0215                     	;# 
   828  0216                     	;# 
   829  0216                     	;# 
   830  0217                     	;# 
   831  0217                     	;# 
   832  0218                     	;# 
   833  0218                     	;# 
   834  0219                     	;# 
   835  021A                     	;# 
   836  021B                     	;# 
   837  021B                     	;# 
   838  021C                     	;# 
   839  021C                     	;# 
   840  021D                     	;# 
   841  021D                     	;# 
   842  021E                     	;# 
   843  021F                     	;# 
   844  028C                     	;# 
   845  028C                     	;# 
   846  028D                     	;# 
   847  028D                     	;# 
   848  028E                     	;# 
   849  028F                     	;# 
   850  0290                     	;# 
   851  0290                     	;# 
   852  0291                     	;# 
   853  0292                     	;# 
   854  0292                     	;# 
   855  0293                     	;# 
   856  0293                     	;# 
   857  0294                     	;# 
   858  0295                     	;# 
   859  0296                     	;# 
   860  0296                     	;# 
   861  0297                     	;# 
   862  0298                     	;# 
   863  0298                     	;# 
   864  0299                     	;# 
   865  0299                     	;# 
   866  029A                     	;# 
   867  029B                     	;# 
   868  029C                     	;# 
   869  029C                     	;# 
   870  029D                     	;# 
   871  030C                     	;# 
   872  030C                     	;# 
   873  030D                     	;# 
   874  030E                     	;# 
   875  030F                     	;# 
   876  0310                     	;# 
   877  0310                     	;# 
   878  0311                     	;# 
   879  0312                     	;# 
   880  0313                     	;# 
   881  0314                     	;# 
   882  0314                     	;# 
   883  0315                     	;# 
   884  0316                     	;# 
   885  0317                     	;# 
   886  0318                     	;# 
   887  0318                     	;# 
   888  0319                     	;# 
   889  031A                     	;# 
   890  031B                     	;# 
   891  031C                     	;# 
   892  031C                     	;# 
   893  031D                     	;# 
   894  031E                     	;# 
   895  031F                     	;# 
   896  038C                     	;# 
   897  038C                     	;# 
   898  038D                     	;# 
   899  038E                     	;# 
   900  0390                     	;# 
   901  0390                     	;# 
   902  0391                     	;# 
   903  0392                     	;# 
   904  040C                     	;# 
   905  040D                     	;# 
   906  040E                     	;# 
   907  040F                     	;# 
   908  0410                     	;# 
   909  0411                     	;# 
   910  0416                     	;# 
   911  0416                     	;# 
   912  0417                     	;# 
   913  0418                     	;# 
   914  0418                     	;# 
   915  0419                     	;# 
   916  041A                     	;# 
   917  041A                     	;# 
   918  041B                     	;# 
   919  041C                     	;# 
   920  041C                     	;# 
   921  041D                     	;# 
   922  041E                     	;# 
   923  041F                     	;# 
   924  048C                     	;# 
   925  048C                     	;# 
   926  048D                     	;# 
   927  048E                     	;# 
   928  048F                     	;# 
   929  048F                     	;# 
   930  0490                     	;# 
   931  0491                     	;# 
   932  0492                     	;# 
   933  0492                     	;# 
   934  0493                     	;# 
   935  0494                     	;# 
   936  0495                     	;# 
   937  0495                     	;# 
   938  0496                     	;# 
   939  0497                     	;# 
   940  0498                     	;# 
   941  0499                     	;# 
   942  049A                     	;# 
   943  049B                     	;# 
   944  049C                     	;# 
   945  049D                     	;# 
   946  050C                     	;# 
   947  050C                     	;# 
   948  050D                     	;# 
   949  050E                     	;# 
   950  050F                     	;# 
   951  050F                     	;# 
   952  0510                     	;# 
   953  0511                     	;# 
   954  0512                     	;# 
   955  0512                     	;# 
   956  0513                     	;# 
   957  0514                     	;# 
   958  0515                     	;# 
   959  0515                     	;# 
   960  0516                     	;# 
   961  0517                     	;# 
   962  0518                     	;# 
   963  0519                     	;# 
   964  051A                     	;# 
   965  051B                     	;# 
   966  051C                     	;# 
   967  051D                     	;# 
   968  058C                     	;# 
   969  058C                     	;# 
   970  058D                     	;# 
   971  058E                     	;# 
   972  058F                     	;# 
   973  058F                     	;# 
   974  0590                     	;# 
   975  0591                     	;# 
   976  0592                     	;# 
   977  0593                     	;# 
   978  060C                     	;# 
   979  060D                     	;# 
   980  060E                     	;# 
   981  060F                     	;# 
   982  0610                     	;# 
   983  0611                     	;# 
   984  0612                     	;# 
   985  0613                     	;# 
   986  0614                     	;# 
   987  0616                     	;# 
   988  0617                     	;# 
   989  0618                     	;# 
   990  0619                     	;# 
   991  061A                     	;# 
   992  061B                     	;# 
   993  061C                     	;# 
   994  061D                     	;# 
   995  061E                     	;# 
   996  068C                     	;# 
   997  068D                     	;# 
   998  068E                     	;# 
   999  068F                     	;# 
  1000  0690                     	;# 
  1001  0691                     	;# 
  1002  0692                     	;# 
  1003  0693                     	;# 
  1004  0694                     	;# 
  1005  070C                     	;# 
  1006  070D                     	;# 
  1007  070E                     	;# 
  1008  070F                     	;# 
  1009  0710                     	;# 
  1010  0711                     	;# 
  1011  0712                     	;# 
  1012  0713                     	;# 
  1013  0714                     	;# 
  1014  0716                     	;# 
  1015  0717                     	;# 
  1016  0718                     	;# 
  1017  0719                     	;# 
  1018  071A                     	;# 
  1019  071B                     	;# 
  1020  071C                     	;# 
  1021  071D                     	;# 
  1022  071E                     	;# 
  1023  0796                     	;# 
  1024  0797                     	;# 
  1025  0798                     	;# 
  1026  0799                     	;# 
  1027  079A                     	;# 
  1028  079B                     	;# 
  1029  080C                     	;# 
  1030  080D                     	;# 
  1031  080E                     	;# 
  1032  080F                     	;# 
  1033  0810                     	;# 
  1034  0811                     	;# 
  1035  0812                     	;# 
  1036  0813                     	;# 
  1037  0814                     	;# 
  1038  081A                     	;# 
  1039  081B                     	;# 
  1040  081C                     	;# 
  1041  081D                     	;# 
  1042  081E                     	;# 
  1043  081F                     	;# 
  1044  088C                     	;# 
  1045  088D                     	;# 
  1046  088E                     	;# 
  1047  088F                     	;# 
  1048  0890                     	;# 
  1049  0891                     	;# 
  1050  0892                     	;# 
  1051  0893                     	;# 
  1052  0895                     	;# 
  1053  0896                     	;# 
  1054  0897                     	;# 
  1055  0898                     	;# 
  1056  0899                     	;# 
  1057  089A                     	;# 
  1058  089B                     	;# 
  1059  090C                     	;# 
  1060  090E                     	;# 
  1061  090F                     	;# 
  1062  091F                     	;# 
  1063  091F                     	;# 
  1064  098F                     	;# 
  1065  098F                     	;# 
  1066  0990                     	;# 
  1067  0991                     	;# 
  1068  0992                     	;# 
  1069  0993                     	;# 
  1070  0994                     	;# 
  1071  0995                     	;# 
  1072  0996                     	;# 
  1073  0997                     	;# 
  1074  0E0F                     	;# 
  1075  0E10                     	;# 
  1076  0E11                     	;# 
  1077  0E12                     	;# 
  1078  0E13                     	;# 
  1079  0E14                     	;# 
  1080  0E15                     	;# 
  1081  0E16                     	;# 
  1082  0E17                     	;# 
  1083  0E18                     	;# 
  1084  0E19                     	;# 
  1085  0E1A                     	;# 
  1086  0E1B                     	;# 
  1087  0E1C                     	;# 
  1088  0E1D                     	;# 
  1089  0E1E                     	;# 
  1090  0E1F                     	;# 
  1091  0E20                     	;# 
  1092  0E21                     	;# 
  1093  0E22                     	;# 
  1094  0E23                     	;# 
  1095  0E24                     	;# 
  1096  0E25                     	;# 
  1097  0E26                     	;# 
  1098  0E27                     	;# 
  1099  0E28                     	;# 
  1100  0E29                     	;# 
  1101  0E2A                     	;# 
  1102  0E2B                     	;# 
  1103  0E2C                     	;# 
  1104  0E2D                     	;# 
  1105  0E2E                     	;# 
  1106  0E2F                     	;# 
  1107  0E30                     	;# 
  1108  0E31                     	;# 
  1109  0E32                     	;# 
  1110  0E33                     	;# 
  1111  0E34                     	;# 
  1112  0E35                     	;# 
  1113  0E36                     	;# 
  1114  0E37                     	;# 
  1115  0E8F                     	;# 
  1116  0E90                     	;# 
  1117  0E91                     	;# 
  1118  0E92                     	;# 
  1119  0E93                     	;# 
  1120  0E94                     	;# 
  1121  0E95                     	;# 
  1122  0E96                     	;# 
  1123  0E97                     	;# 
  1124  0E9C                     	;# 
  1125  0E9D                     	;# 
  1126  0E9E                     	;# 
  1127  0EA1                     	;# 
  1128  0EA2                     	;# 
  1129  0EA3                     	;# 
  1130  0EA4                     	;# 
  1131  0EA5                     	;# 
  1132  0EA9                     	;# 
  1133  0EAA                     	;# 
  1134  0EAB                     	;# 
  1135  0EAC                     	;# 
  1136  0EB1                     	;# 
  1137  0EB2                     	;# 
  1138  0EB3                     	;# 
  1139  0EB8                     	;# 
  1140  0EB9                     	;# 
  1141  0EBA                     	;# 
  1142  0EBB                     	;# 
  1143  0EBC                     	;# 
  1144  0EBD                     	;# 
  1145  0EBE                     	;# 
  1146  0EC3                     	;# 
  1147  0EC5                     	;# 
  1148  0EC6                     	;# 
  1149  0EC7                     	;# 
  1150  0EC8                     	;# 
  1151  0EC9                     	;# 
  1152  0ECA                     	;# 
  1153  0ECB                     	;# 
  1154  0ECC                     	;# 
  1155  0F10                     	;# 
  1156  0F11                     	;# 
  1157  0F12                     	;# 
  1158  0F13                     	;# 
  1159  0F14                     	;# 
  1160  0F15                     	;# 
  1161  0F16                     	;# 
  1162  0F17                     	;# 
  1163  0F18                     	;# 
  1164  0F19                     	;# 
  1165  0F1A                     	;# 
  1166  0F1B                     	;# 
  1167  0F1C                     	;# 
  1168  0F1D                     	;# 
  1169  0F1E                     	;# 
  1170  0F1F                     	;# 
  1171  0F20                     	;# 
  1172  0F21                     	;# 
  1173  0F22                     	;# 
  1174  0F23                     	;# 
  1175  0F24                     	;# 
  1176  0F25                     	;# 
  1177  0F26                     	;# 
  1178  0F27                     	;# 
  1179  0F28                     	;# 
  1180  0F29                     	;# 
  1181  0F2A                     	;# 
  1182  0F2B                     	;# 
  1183  0F2C                     	;# 
  1184  0F2D                     	;# 
  1185  0F2E                     	;# 
  1186  0F2F                     	;# 
  1187  0F30                     	;# 
  1188  0F31                     	;# 
  1189  0F32                     	;# 
  1190  0F38                     	;# 
  1191  0F39                     	;# 
  1192  0F3A                     	;# 
  1193  0F3B                     	;# 
  1194  0F3C                     	;# 
  1195  0F3D                     	;# 
  1196  0F3E                     	;# 
  1197  0F3F                     	;# 
  1198  0F40                     	;# 
  1199  0F41                     	;# 
  1200  0F43                     	;# 
  1201  0F44                     	;# 
  1202  0F45                     	;# 
  1203  0F46                     	;# 
  1204  0F47                     	;# 
  1205  0F48                     	;# 
  1206  0F49                     	;# 
  1207  0F4A                     	;# 
  1208  0F4B                     	;# 
  1209  0F4C                     	;# 
  1210  0F4E                     	;# 
  1211  0F4F                     	;# 
  1212  0F50                     	;# 
  1213  0F51                     	;# 
  1214  0F52                     	;# 
  1215  0F53                     	;# 
  1216  0F54                     	;# 
  1217  0F55                     	;# 
  1218  0F56                     	;# 
  1219  0F57                     	;# 
  1220  0F59                     	;# 
  1221  0F5A                     	;# 
  1222  0F5B                     	;# 
  1223  0F5C                     	;# 
  1224  0F5D                     	;# 
  1225  0F61                     	;# 
  1226  0F62                     	;# 
  1227  0F64                     	;# 
  1228  0F65                     	;# 
  1229  0F66                     	;# 
  1230  0F67                     	;# 
  1231  0F68                     	;# 
  1232  0F69                     	;# 
  1233  0F6A                     	;# 
  1234  0F6B                     	;# 
  1235  0F6C                     	;# 
  1236  0F6D                     	;# 
  1237  0FE4                     	;# 
  1238  0FE5                     	;# 
  1239  0FE6                     	;# 
  1240  0FE7                     	;# 
  1241  0FE8                     	;# 
  1242  0FE9                     	;# 
  1243  0FEA                     	;# 
  1244  0FEB                     	;# 
  1245  0FED                     	;# 
  1246  0FEE                     	;# 
  1247  0FEF                     	;# 
  1248  0000                     	;# 
  1249  0001                     	;# 
  1250  0002                     	;# 
  1251  0003                     	;# 
  1252  0004                     	;# 
  1253  0005                     	;# 
  1254  0006                     	;# 
  1255  0007                     	;# 
  1256  0008                     	;# 
  1257  0009                     	;# 
  1258  000A                     	;# 
  1259  000B                     	;# 
  1260  000C                     	;# 
  1261  000D                     	;# 
  1262  000E                     	;# 
  1263  000F                     	;# 
  1264  0010                     	;# 
  1265  0011                     	;# 
  1266  0012                     	;# 
  1267  0013                     	;# 
  1268  0014                     	;# 
  1269  0015                     	;# 
  1270  0016                     	;# 
  1271  0017                     	;# 
  1272  0018                     	;# 
  1273  0019                     	;# 
  1274  001A                     	;# 
  1275  001C                     	;# 
  1276  001C                     	;# 
  1277  001D                     	;# 
  1278  001D                     	;# 
  1279  001E                     	;# 
  1280  001F                     	;# 
  1281  008C                     	;# 
  1282  008C                     	;# 
  1283  008D                     	;# 
  1284  008E                     	;# 
  1285  008E                     	;# 
  1286  008F                     	;# 
  1287  0090                     	;# 
  1288  0090                     	;# 
  1289  0091                     	;# 
  1290  0093                     	;# 
  1291  0094                     	;# 
  1292  0095                     	;# 
  1293  0096                     	;# 
  1294  0097                     	;# 
  1295  0098                     	;# 
  1296  0099                     	;# 
  1297  009A                     	;# 
  1298  009B                     	;# 
  1299  009C                     	;# 
  1300  009D                     	;# 
  1301  009E                     	;# 
  1302  010C                     	;# 
  1303  010D                     	;# 
  1304  010E                     	;# 
  1305  010E                     	;# 
  1306  010F                     	;# 
  1307  0110                     	;# 
  1308  0110                     	;# 
  1309  0111                     	;# 
  1310  0112                     	;# 
  1311  0112                     	;# 
  1312  0113                     	;# 
  1313  0114                     	;# 
  1314  0114                     	;# 
  1315  0115                     	;# 
  1316  0116                     	;# 
  1317  0116                     	;# 
  1318  0117                     	;# 
  1319  0119                     	;# 
  1320  0119                     	;# 
  1321  0119                     	;# 
  1322  011A                     	;# 
  1323  011A                     	;# 
  1324  011A                     	;# 
  1325  011B                     	;# 
  1326  011B                     	;# 
  1327  011B                     	;# 
  1328  011B                     	;# 
  1329  011B                     	;# 
  1330  011C                     	;# 
  1331  011C                     	;# 
  1332  011C                     	;# 
  1333  011D                     	;# 
  1334  011D                     	;# 
  1335  011D                     	;# 
  1336  011E                     	;# 
  1337  011E                     	;# 
  1338  011E                     	;# 
  1339  011F                     	;# 
  1340  011F                     	;# 
  1341  011F                     	;# 
  1342  011F                     	;# 
  1343  011F                     	;# 
  1344  018C                     	;# 
  1345  018D                     	;# 
  1346  018E                     	;# 
  1347  018F                     	;# 
  1348  0190                     	;# 
  1349  0191                     	;# 
  1350  0192                     	;# 
  1351  0196                     	;# 
  1352  0197                     	;# 
  1353  0198                     	;# 
  1354  0199                     	;# 
  1355  019A                     	;# 
  1356  019B                     	;# 
  1357  019C                     	;# 
  1358  020C                     	;# 
  1359  020C                     	;# 
  1360  020D                     	;# 
  1361  020E                     	;# 
  1362  020F                     	;# 
  1363  020F                     	;# 
  1364  0210                     	;# 
  1365  0210                     	;# 
  1366  0211                     	;# 
  1367  0211                     	;# 
  1368  0212                     	;# 
  1369  0212                     	;# 
  1370  0213                     	;# 
  1371  0214                     	;# 
  1372  0215                     	;# 
  1373  0215                     	;# 
  1374  0216                     	;# 
  1375  0216                     	;# 
  1376  0217                     	;# 
  1377  0217                     	;# 
  1378  0218                     	;# 
  1379  0218                     	;# 
  1380  0219                     	;# 
  1381  021A                     	;# 
  1382  021B                     	;# 
  1383  021B                     	;# 
  1384  021C                     	;# 
  1385  021C                     	;# 
  1386  021D                     	;# 
  1387  021D                     	;# 
  1388  021E                     	;# 
  1389  021F                     	;# 
  1390  028C                     	;# 
  1391  028C                     	;# 
  1392  028D                     	;# 
  1393  028D                     	;# 
  1394  028E                     	;# 
  1395  028F                     	;# 
  1396  0290                     	;# 
  1397  0290                     	;# 
  1398  0291                     	;# 
  1399  0292                     	;# 
  1400  0292                     	;# 
  1401  0293                     	;# 
  1402  0293                     	;# 
  1403  0294                     	;# 
  1404  0295                     	;# 
  1405  0296                     	;# 
  1406  0296                     	;# 
  1407  0297                     	;# 
  1408  0298                     	;# 
  1409  0298                     	;# 
  1410  0299                     	;# 
  1411  0299                     	;# 
  1412  029A                     	;# 
  1413  029B                     	;# 
  1414  029C                     	;# 
  1415  029C                     	;# 
  1416  029D                     	;# 
  1417  030C                     	;# 
  1418  030C                     	;# 
  1419  030D                     	;# 
  1420  030E                     	;# 
  1421  030F                     	;# 
  1422  0310                     	;# 
  1423  0310                     	;# 
  1424  0311                     	;# 
  1425  0312                     	;# 
  1426  0313                     	;# 
  1427  0314                     	;# 
  1428  0314                     	;# 
  1429  0315                     	;# 
  1430  0316                     	;# 
  1431  0317                     	;# 
  1432  0318                     	;# 
  1433  0318                     	;# 
  1434  0319                     	;# 
  1435  031A                     	;# 
  1436  031B                     	;# 
  1437  031C                     	;# 
  1438  031C                     	;# 
  1439  031D                     	;# 
  1440  031E                     	;# 
  1441  031F                     	;# 
  1442  038C                     	;# 
  1443  038C                     	;# 
  1444  038D                     	;# 
  1445  038E                     	;# 
  1446  0390                     	;# 
  1447  0390                     	;# 
  1448  0391                     	;# 
  1449  0392                     	;# 
  1450  040C                     	;# 
  1451  040D                     	;# 
  1452  040E                     	;# 
  1453  040F                     	;# 
  1454  0410                     	;# 
  1455  0411                     	;# 
  1456  0416                     	;# 
  1457  0416                     	;# 
  1458  0417                     	;# 
  1459  0418                     	;# 
  1460  0418                     	;# 
  1461  0419                     	;# 
  1462  041A                     	;# 
  1463  041A                     	;# 
  1464  041B                     	;# 
  1465  041C                     	;# 
  1466  041C                     	;# 
  1467  041D                     	;# 
  1468  041E                     	;# 
  1469  041F                     	;# 
  1470  048C                     	;# 
  1471  048C                     	;# 
  1472  048D                     	;# 
  1473  048E                     	;# 
  1474  048F                     	;# 
  1475  048F                     	;# 
  1476  0490                     	;# 
  1477  0491                     	;# 
  1478  0492                     	;# 
  1479  0492                     	;# 
  1480  0493                     	;# 
  1481  0494                     	;# 
  1482  0495                     	;# 
  1483  0495                     	;# 
  1484  0496                     	;# 
  1485  0497                     	;# 
  1486  0498                     	;# 
  1487  0499                     	;# 
  1488  049A                     	;# 
  1489  049B                     	;# 
  1490  049C                     	;# 
  1491  049D                     	;# 
  1492  050C                     	;# 
  1493  050C                     	;# 
  1494  050D                     	;# 
  1495  050E                     	;# 
  1496  050F                     	;# 
  1497  050F                     	;# 
  1498  0510                     	;# 
  1499  0511                     	;# 
  1500  0512                     	;# 
  1501  0512                     	;# 
  1502  0513                     	;# 
  1503  0514                     	;# 
  1504  0515                     	;# 
  1505  0515                     	;# 
  1506  0516                     	;# 
  1507  0517                     	;# 
  1508  0518                     	;# 
  1509  0519                     	;# 
  1510  051A                     	;# 
  1511  051B                     	;# 
  1512  051C                     	;# 
  1513  051D                     	;# 
  1514  058C                     	;# 
  1515  058C                     	;# 
  1516  058D                     	;# 
  1517  058E                     	;# 
  1518  058F                     	;# 
  1519  058F                     	;# 
  1520  0590                     	;# 
  1521  0591                     	;# 
  1522  0592                     	;# 
  1523  0593                     	;# 
  1524  060C                     	;# 
  1525  060D                     	;# 
  1526  060E                     	;# 
  1527  060F                     	;# 
  1528  0610                     	;# 
  1529  0611                     	;# 
  1530  0612                     	;# 
  1531  0613                     	;# 
  1532  0614                     	;# 
  1533  0616                     	;# 
  1534  0617                     	;# 
  1535  0618                     	;# 
  1536  0619                     	;# 
  1537  061A                     	;# 
  1538  061B                     	;# 
  1539  061C                     	;# 
  1540  061D                     	;# 
  1541  061E                     	;# 
  1542  068C                     	;# 
  1543  068D                     	;# 
  1544  068E                     	;# 
  1545  068F                     	;# 
  1546  0690                     	;# 
  1547  0691                     	;# 
  1548  0692                     	;# 
  1549  0693                     	;# 
  1550  0694                     	;# 
  1551  070C                     	;# 
  1552  070D                     	;# 
  1553  070E                     	;# 
  1554  070F                     	;# 
  1555  0710                     	;# 
  1556  0711                     	;# 
  1557  0712                     	;# 
  1558  0713                     	;# 
  1559  0714                     	;# 
  1560  0716                     	;# 
  1561  0717                     	;# 
  1562  0718                     	;# 
  1563  0719                     	;# 
  1564  071A                     	;# 
  1565  071B                     	;# 
  1566  071C                     	;# 
  1567  071D                     	;# 
  1568  071E                     	;# 
  1569  0796                     	;# 
  1570  0797                     	;# 
  1571  0798                     	;# 
  1572  0799                     	;# 
  1573  079A                     	;# 
  1574  079B                     	;# 
  1575  080C                     	;# 
  1576  080D                     	;# 
  1577  080E                     	;# 
  1578  080F                     	;# 
  1579  0810                     	;# 
  1580  0811                     	;# 
  1581  0812                     	;# 
  1582  0813                     	;# 
  1583  0814                     	;# 
  1584  081A                     	;# 
  1585  081B                     	;# 
  1586  081C                     	;# 
  1587  081D                     	;# 
  1588  081E                     	;# 
  1589  081F                     	;# 
  1590  088C                     	;# 
  1591  088D                     	;# 
  1592  088E                     	;# 
  1593  088F                     	;# 
  1594  0890                     	;# 
  1595  0891                     	;# 
  1596  0892                     	;# 
  1597  0893                     	;# 
  1598  0895                     	;# 
  1599  0896                     	;# 
  1600  0897                     	;# 
  1601  0898                     	;# 
  1602  0899                     	;# 
  1603  089A                     	;# 
  1604  089B                     	;# 
  1605  090C                     	;# 
  1606  090E                     	;# 
  1607  090F                     	;# 
  1608  091F                     	;# 
  1609  091F                     	;# 
  1610  098F                     	;# 
  1611  098F                     	;# 
  1612  0990                     	;# 
  1613  0991                     	;# 
  1614  0992                     	;# 
  1615  0993                     	;# 
  1616  0994                     	;# 
  1617  0995                     	;# 
  1618  0996                     	;# 
  1619  0997                     	;# 
  1620  0E0F                     	;# 
  1621  0E10                     	;# 
  1622  0E11                     	;# 
  1623  0E12                     	;# 
  1624  0E13                     	;# 
  1625  0E14                     	;# 
  1626  0E15                     	;# 
  1627  0E16                     	;# 
  1628  0E17                     	;# 
  1629  0E18                     	;# 
  1630  0E19                     	;# 
  1631  0E1A                     	;# 
  1632  0E1B                     	;# 
  1633  0E1C                     	;# 
  1634  0E1D                     	;# 
  1635  0E1E                     	;# 
  1636  0E1F                     	;# 
  1637  0E20                     	;# 
  1638  0E21                     	;# 
  1639  0E22                     	;# 
  1640  0E23                     	;# 
  1641  0E24                     	;# 
  1642  0E25                     	;# 
  1643  0E26                     	;# 
  1644  0E27                     	;# 
  1645  0E28                     	;# 
  1646  0E29                     	;# 
  1647  0E2A                     	;# 
  1648  0E2B                     	;# 
  1649  0E2C                     	;# 
  1650  0E2D                     	;# 
  1651  0E2E                     	;# 
  1652  0E2F                     	;# 
  1653  0E30                     	;# 
  1654  0E31                     	;# 
  1655  0E32                     	;# 
  1656  0E33                     	;# 
  1657  0E34                     	;# 
  1658  0E35                     	;# 
  1659  0E36                     	;# 
  1660  0E37                     	;# 
  1661  0E8F                     	;# 
  1662  0E90                     	;# 
  1663  0E91                     	;# 
  1664  0E92                     	;# 
  1665  0E93                     	;# 
  1666  0E94                     	;# 
  1667  0E95                     	;# 
  1668  0E96                     	;# 
  1669  0E97                     	;# 
  1670  0E9C                     	;# 
  1671  0E9D                     	;# 
  1672  0E9E                     	;# 
  1673  0EA1                     	;# 
  1674  0EA2                     	;# 
  1675  0EA3                     	;# 
  1676  0EA4                     	;# 
  1677  0EA5                     	;# 
  1678  0EA9                     	;# 
  1679  0EAA                     	;# 
  1680  0EAB                     	;# 
  1681  0EAC                     	;# 
  1682  0EB1                     	;# 
  1683  0EB2                     	;# 
  1684  0EB3                     	;# 
  1685  0EB8                     	;# 
  1686  0EB9                     	;# 
  1687  0EBA                     	;# 
  1688  0EBB                     	;# 
  1689  0EBC                     	;# 
  1690  0EBD                     	;# 
  1691  0EBE                     	;# 
  1692  0EC3                     	;# 
  1693  0EC5                     	;# 
  1694  0EC6                     	;# 
  1695  0EC7                     	;# 
  1696  0EC8                     	;# 
  1697  0EC9                     	;# 
  1698  0ECA                     	;# 
  1699  0ECB                     	;# 
  1700  0ECC                     	;# 
  1701  0F10                     	;# 
  1702  0F11                     	;# 
  1703  0F12                     	;# 
  1704  0F13                     	;# 
  1705  0F14                     	;# 
  1706  0F15                     	;# 
  1707  0F16                     	;# 
  1708  0F17                     	;# 
  1709  0F18                     	;# 
  1710  0F19                     	;# 
  1711  0F1A                     	;# 
  1712  0F1B                     	;# 
  1713  0F1C                     	;# 
  1714  0F1D                     	;# 
  1715  0F1E                     	;# 
  1716  0F1F                     	;# 
  1717  0F20                     	;# 
  1718  0F21                     	;# 
  1719  0F22                     	;# 
  1720  0F23                     	;# 
  1721  0F24                     	;# 
  1722  0F25                     	;# 
  1723  0F26                     	;# 
  1724  0F27                     	;# 
  1725  0F28                     	;# 
  1726  0F29                     	;# 
  1727  0F2A                     	;# 
  1728  0F2B                     	;# 
  1729  0F2C                     	;# 
  1730  0F2D                     	;# 
  1731  0F2E                     	;# 
  1732  0F2F                     	;# 
  1733  0F30                     	;# 
  1734  0F31                     	;# 
  1735  0F32                     	;# 
  1736  0F38                     	;# 
  1737  0F39                     	;# 
  1738  0F3A                     	;# 
  1739  0F3B                     	;# 
  1740  0F3C                     	;# 
  1741  0F3D                     	;# 
  1742  0F3E                     	;# 
  1743  0F3F                     	;# 
  1744  0F40                     	;# 
  1745  0F41                     	;# 
  1746  0F43                     	;# 
  1747  0F44                     	;# 
  1748  0F45                     	;# 
  1749  0F46                     	;# 
  1750  0F47                     	;# 
  1751  0F48                     	;# 
  1752  0F49                     	;# 
  1753  0F4A                     	;# 
  1754  0F4B                     	;# 
  1755  0F4C                     	;# 
  1756  0F4E                     	;# 
  1757  0F4F                     	;# 
  1758  0F50                     	;# 
  1759  0F51                     	;# 
  1760  0F52                     	;# 
  1761  0F53                     	;# 
  1762  0F54                     	;# 
  1763  0F55                     	;# 
  1764  0F56                     	;# 
  1765  0F57                     	;# 
  1766  0F59                     	;# 
  1767  0F5A                     	;# 
  1768  0F5B                     	;# 
  1769  0F5C                     	;# 
  1770  0F5D                     	;# 
  1771  0F61                     	;# 
  1772  0F62                     	;# 
  1773  0F64                     	;# 
  1774  0F65                     	;# 
  1775  0F66                     	;# 
  1776  0F67                     	;# 
  1777  0F68                     	;# 
  1778  0F69                     	;# 
  1779  0F6A                     	;# 
  1780  0F6B                     	;# 
  1781  0F6C                     	;# 
  1782  0F6D                     	;# 
  1783  0FE4                     	;# 
  1784  0FE5                     	;# 
  1785  0FE6                     	;# 
  1786  0FE7                     	;# 
  1787  0FE8                     	;# 
  1788  0FE9                     	;# 
  1789  0FEA                     	;# 
  1790  0FEB                     	;# 
  1791  0FED                     	;# 
  1792  0FEE                     	;# 
  1793  0FEF                     	;# 
  1794  0000                     	;# 
  1795  0001                     	;# 
  1796  0002                     	;# 
  1797  0003                     	;# 
  1798  0004                     	;# 
  1799  0005                     	;# 
  1800  0006                     	;# 
  1801  0007                     	;# 
  1802  0008                     	;# 
  1803  0009                     	;# 
  1804  000A                     	;# 
  1805  000B                     	;# 
  1806  000C                     	;# 
  1807  000D                     	;# 
  1808  000E                     	;# 
  1809  000F                     	;# 
  1810  0010                     	;# 
  1811  0011                     	;# 
  1812  0012                     	;# 
  1813  0013                     	;# 
  1814  0014                     	;# 
  1815  0015                     	;# 
  1816  0016                     	;# 
  1817  0017                     	;# 
  1818  0018                     	;# 
  1819  0019                     	;# 
  1820  001A                     	;# 
  1821  001C                     	;# 
  1822  001C                     	;# 
  1823  001D                     	;# 
  1824  001D                     	;# 
  1825  001E                     	;# 
  1826  001F                     	;# 
  1827  008C                     	;# 
  1828  008C                     	;# 
  1829  008D                     	;# 
  1830  008E                     	;# 
  1831  008E                     	;# 
  1832  008F                     	;# 
  1833  0090                     	;# 
  1834  0090                     	;# 
  1835  0091                     	;# 
  1836  0093                     	;# 
  1837  0094                     	;# 
  1838  0095                     	;# 
  1839  0096                     	;# 
  1840  0097                     	;# 
  1841  0098                     	;# 
  1842  0099                     	;# 
  1843  009A                     	;# 
  1844  009B                     	;# 
  1845  009C                     	;# 
  1846  009D                     	;# 
  1847  009E                     	;# 
  1848  010C                     	;# 
  1849  010D                     	;# 
  1850  010E                     	;# 
  1851  010E                     	;# 
  1852  010F                     	;# 
  1853  0110                     	;# 
  1854  0110                     	;# 
  1855  0111                     	;# 
  1856  0112                     	;# 
  1857  0112                     	;# 
  1858  0113                     	;# 
  1859  0114                     	;# 
  1860  0114                     	;# 
  1861  0115                     	;# 
  1862  0116                     	;# 
  1863  0116                     	;# 
  1864  0117                     	;# 
  1865  0119                     	;# 
  1866  0119                     	;# 
  1867  0119                     	;# 
  1868  011A                     	;# 
  1869  011A                     	;# 
  1870  011A                     	;# 
  1871  011B                     	;# 
  1872  011B                     	;# 
  1873  011B                     	;# 
  1874  011B                     	;# 
  1875  011B                     	;# 
  1876  011C                     	;# 
  1877  011C                     	;# 
  1878  011C                     	;# 
  1879  011D                     	;# 
  1880  011D                     	;# 
  1881  011D                     	;# 
  1882  011E                     	;# 
  1883  011E                     	;# 
  1884  011E                     	;# 
  1885  011F                     	;# 
  1886  011F                     	;# 
  1887  011F                     	;# 
  1888  011F                     	;# 
  1889  011F                     	;# 
  1890  018C                     	;# 
  1891  018D                     	;# 
  1892  018E                     	;# 
  1893  018F                     	;# 
  1894  0190                     	;# 
  1895  0191                     	;# 
  1896  0192                     	;# 
  1897  0196                     	;# 
  1898  0197                     	;# 
  1899  0198                     	;# 
  1900  0199                     	;# 
  1901  019A                     	;# 
  1902  019B                     	;# 
  1903  019C                     	;# 
  1904  020C                     	;# 
  1905  020C                     	;# 
  1906  020D                     	;# 
  1907  020E                     	;# 
  1908  020F                     	;# 
  1909  020F                     	;# 
  1910  0210                     	;# 
  1911  0210                     	;# 
  1912  0211                     	;# 
  1913  0211                     	;# 
  1914  0212                     	;# 
  1915  0212                     	;# 
  1916  0213                     	;# 
  1917  0214                     	;# 
  1918  0215                     	;# 
  1919  0215                     	;# 
  1920  0216                     	;# 
  1921  0216                     	;# 
  1922  0217                     	;# 
  1923  0217                     	;# 
  1924  0218                     	;# 
  1925  0218                     	;# 
  1926  0219                     	;# 
  1927  021A                     	;# 
  1928  021B                     	;# 
  1929  021B                     	;# 
  1930  021C                     	;# 
  1931  021C                     	;# 
  1932  021D                     	;# 
  1933  021D                     	;# 
  1934  021E                     	;# 
  1935  021F                     	;# 
  1936  028C                     	;# 
  1937  028C                     	;# 
  1938  028D                     	;# 
  1939  028D                     	;# 
  1940  028E                     	;# 
  1941  028F                     	;# 
  1942  0290                     	;# 
  1943  0290                     	;# 
  1944  0291                     	;# 
  1945  0292                     	;# 
  1946  0292                     	;# 
  1947  0293                     	;# 
  1948  0293                     	;# 
  1949  0294                     	;# 
  1950  0295                     	;# 
  1951  0296                     	;# 
  1952  0296                     	;# 
  1953  0297                     	;# 
  1954  0298                     	;# 
  1955  0298                     	;# 
  1956  0299                     	;# 
  1957  0299                     	;# 
  1958  029A                     	;# 
  1959  029B                     	;# 
  1960  029C                     	;# 
  1961  029C                     	;# 
  1962  029D                     	;# 
  1963  030C                     	;# 
  1964  030C                     	;# 
  1965  030D                     	;# 
  1966  030E                     	;# 
  1967  030F                     	;# 
  1968  0310                     	;# 
  1969  0310                     	;# 
  1970  0311                     	;# 
  1971  0312                     	;# 
  1972  0313                     	;# 
  1973  0314                     	;# 
  1974  0314                     	;# 
  1975  0315                     	;# 
  1976  0316                     	;# 
  1977  0317                     	;# 
  1978  0318                     	;# 
  1979  0318                     	;# 
  1980  0319                     	;# 
  1981  031A                     	;# 
  1982  031B                     	;# 
  1983  031C                     	;# 
  1984  031C                     	;# 
  1985  031D                     	;# 
  1986  031E                     	;# 
  1987  031F                     	;# 
  1988  038C                     	;# 
  1989  038C                     	;# 
  1990  038D                     	;# 
  1991  038E                     	;# 
  1992  0390                     	;# 
  1993  0390                     	;# 
  1994  0391                     	;# 
  1995  0392                     	;# 
  1996  040C                     	;# 
  1997  040D                     	;# 
  1998  040E                     	;# 
  1999  040F                     	;# 
  2000  0410                     	;# 
  2001  0411                     	;# 
  2002  0416                     	;# 
  2003  0416                     	;# 
  2004  0417                     	;# 
  2005  0418                     	;# 
  2006  0418                     	;# 
  2007  0419                     	;# 
  2008  041A                     	;# 
  2009  041A                     	;# 
  2010  041B                     	;# 
  2011  041C                     	;# 
  2012  041C                     	;# 
  2013  041D                     	;# 
  2014  041E                     	;# 
  2015  041F                     	;# 
  2016  048C                     	;# 
  2017  048C                     	;# 
  2018  048D                     	;# 
  2019  048E                     	;# 
  2020  048F                     	;# 
  2021  048F                     	;# 
  2022  0490                     	;# 
  2023  0491                     	;# 
  2024  0492                     	;# 
  2025  0492                     	;# 
  2026  0493                     	;# 
  2027  0494                     	;# 
  2028  0495                     	;# 
  2029  0495                     	;# 
  2030  0496                     	;# 
  2031  0497                     	;# 
  2032  0498                     	;# 
  2033  0499                     	;# 
  2034  049A                     	;# 
  2035  049B                     	;# 
  2036  049C                     	;# 
  2037  049D                     	;# 
  2038  050C                     	;# 
  2039  050C                     	;# 
  2040  050D                     	;# 
  2041  050E                     	;# 
  2042  050F                     	;# 
  2043  050F                     	;# 
  2044  0510                     	;# 
  2045  0511                     	;# 
  2046  0512                     	;# 
  2047  0512                     	;# 
  2048  0513                     	;# 
  2049  0514                     	;# 
  2050  0515                     	;# 
  2051  0515                     	;# 
  2052  0516                     	;# 
  2053  0517                     	;# 
  2054  0518                     	;# 
  2055  0519                     	;# 
  2056  051A                     	;# 
  2057  051B                     	;# 
  2058  051C                     	;# 
  2059  051D                     	;# 
  2060  058C                     	;# 
  2061  058C                     	;# 
  2062  058D                     	;# 
  2063  058E                     	;# 
  2064  058F                     	;# 
  2065  058F                     	;# 
  2066  0590                     	;# 
  2067  0591                     	;# 
  2068  0592                     	;# 
  2069  0593                     	;# 
  2070  060C                     	;# 
  2071  060D                     	;# 
  2072  060E                     	;# 
  2073  060F                     	;# 
  2074  0610                     	;# 
  2075  0611                     	;# 
  2076  0612                     	;# 
  2077  0613                     	;# 
  2078  0614                     	;# 
  2079  0616                     	;# 
  2080  0617                     	;# 
  2081  0618                     	;# 
  2082  0619                     	;# 
  2083  061A                     	;# 
  2084  061B                     	;# 
  2085  061C                     	;# 
  2086  061D                     	;# 
  2087  061E                     	;# 
  2088  068C                     	;# 
  2089  068D                     	;# 
  2090  068E                     	;# 
  2091  068F                     	;# 
  2092  0690                     	;# 
  2093  0691                     	;# 
  2094  0692                     	;# 
  2095  0693                     	;# 
  2096  0694                     	;# 
  2097  070C                     	;# 
  2098  070D                     	;# 
  2099  070E                     	;# 
  2100  070F                     	;# 
  2101  0710                     	;# 
  2102  0711                     	;# 
  2103  0712                     	;# 
  2104  0713                     	;# 
  2105  0714                     	;# 
  2106  0716                     	;# 
  2107  0717                     	;# 
  2108  0718                     	;# 
  2109  0719                     	;# 
  2110  071A                     	;# 
  2111  071B                     	;# 
  2112  071C                     	;# 
  2113  071D                     	;# 
  2114  071E                     	;# 
  2115  0796                     	;# 
  2116  0797                     	;# 
  2117  0798                     	;# 
  2118  0799                     	;# 
  2119  079A                     	;# 
  2120  079B                     	;# 
  2121  080C                     	;# 
  2122  080D                     	;# 
  2123  080E                     	;# 
  2124  080F                     	;# 
  2125  0810                     	;# 
  2126  0811                     	;# 
  2127  0812                     	;# 
  2128  0813                     	;# 
  2129  0814                     	;# 
  2130  081A                     	;# 
  2131  081B                     	;# 
  2132  081C                     	;# 
  2133  081D                     	;# 
  2134  081E                     	;# 
  2135  081F                     	;# 
  2136  088C                     	;# 
  2137  088D                     	;# 
  2138  088E                     	;# 
  2139  088F                     	;# 
  2140  0890                     	;# 
  2141  0891                     	;# 
  2142  0892                     	;# 
  2143  0893                     	;# 
  2144  0895                     	;# 
  2145  0896                     	;# 
  2146  0897                     	;# 
  2147  0898                     	;# 
  2148  0899                     	;# 
  2149  089A                     	;# 
  2150  089B                     	;# 
  2151  090C                     	;# 
  2152  090E                     	;# 
  2153  090F                     	;# 
  2154  091F                     	;# 
  2155  091F                     	;# 
  2156  098F                     	;# 
  2157  098F                     	;# 
  2158  0990                     	;# 
  2159  0991                     	;# 
  2160  0992                     	;# 
  2161  0993                     	;# 
  2162  0994                     	;# 
  2163  0995                     	;# 
  2164  0996                     	;# 
  2165  0997                     	;# 
  2166  0E0F                     	;# 
  2167  0E10                     	;# 
  2168  0E11                     	;# 
  2169  0E12                     	;# 
  2170  0E13                     	;# 
  2171  0E14                     	;# 
  2172  0E15                     	;# 
  2173  0E16                     	;# 
  2174  0E17                     	;# 
  2175  0E18                     	;# 
  2176  0E19                     	;# 
  2177  0E1A                     	;# 
  2178  0E1B                     	;# 
  2179  0E1C                     	;# 
  2180  0E1D                     	;# 
  2181  0E1E                     	;# 
  2182  0E1F                     	;# 
  2183  0E20                     	;# 
  2184  0E21                     	;# 
  2185  0E22                     	;# 
  2186  0E23                     	;# 
  2187  0E24                     	;# 
  2188  0E25                     	;# 
  2189  0E26                     	;# 
  2190  0E27                     	;# 
  2191  0E28                     	;# 
  2192  0E29                     	;# 
  2193  0E2A                     	;# 
  2194  0E2B                     	;# 
  2195  0E2C                     	;# 
  2196  0E2D                     	;# 
  2197  0E2E                     	;# 
  2198  0E2F                     	;# 
  2199  0E30                     	;# 
  2200  0E31                     	;# 
  2201  0E32                     	;# 
  2202  0E33                     	;# 
  2203  0E34                     	;# 
  2204  0E35                     	;# 
  2205  0E36                     	;# 
  2206  0E37                     	;# 
  2207  0E8F                     	;# 
  2208  0E90                     	;# 
  2209  0E91                     	;# 
  2210  0E92                     	;# 
  2211  0E93                     	;# 
  2212  0E94                     	;# 
  2213  0E95                     	;# 
  2214  0E96                     	;# 
  2215  0E97                     	;# 
  2216  0E9C                     	;# 
  2217  0E9D                     	;# 
  2218  0E9E                     	;# 
  2219  0EA1                     	;# 
  2220  0EA2                     	;# 
  2221  0EA3                     	;# 
  2222  0EA4                     	;# 
  2223  0EA5                     	;# 
  2224  0EA9                     	;# 
  2225  0EAA                     	;# 
  2226  0EAB                     	;# 
  2227  0EAC                     	;# 
  2228  0EB1                     	;# 
  2229  0EB2                     	;# 
  2230  0EB3                     	;# 
  2231  0EB8                     	;# 
  2232  0EB9                     	;# 
  2233  0EBA                     	;# 
  2234  0EBB                     	;# 
  2235  0EBC                     	;# 
  2236  0EBD                     	;# 
  2237  0EBE                     	;# 
  2238  0EC3                     	;# 
  2239  0EC5                     	;# 
  2240  0EC6                     	;# 
  2241  0EC7                     	;# 
  2242  0EC8                     	;# 
  2243  0EC9                     	;# 
  2244  0ECA                     	;# 
  2245  0ECB                     	;# 
  2246  0ECC                     	;# 
  2247  0F10                     	;# 
  2248  0F11                     	;# 
  2249  0F12                     	;# 
  2250  0F13                     	;# 
  2251  0F14                     	;# 
  2252  0F15                     	;# 
  2253  0F16                     	;# 
  2254  0F17                     	;# 
  2255  0F18                     	;# 
  2256  0F19                     	;# 
  2257  0F1A                     	;# 
  2258  0F1B                     	;# 
  2259  0F1C                     	;# 
  2260  0F1D                     	;# 
  2261  0F1E                     	;# 
  2262  0F1F                     	;# 
  2263  0F20                     	;# 
  2264  0F21                     	;# 
  2265  0F22                     	;# 
  2266  0F23                     	;# 
  2267  0F24                     	;# 
  2268  0F25                     	;# 
  2269  0F26                     	;# 
  2270  0F27                     	;# 
  2271  0F28                     	;# 
  2272  0F29                     	;# 
  2273  0F2A                     	;# 
  2274  0F2B                     	;# 
  2275  0F2C                     	;# 
  2276  0F2D                     	;# 
  2277  0F2E                     	;# 
  2278  0F2F                     	;# 
  2279  0F30                     	;# 
  2280  0F31                     	;# 
  2281  0F32                     	;# 
  2282  0F38                     	;# 
  2283  0F39                     	;# 
  2284  0F3A                     	;# 
  2285  0F3B                     	;# 
  2286  0F3C                     	;# 
  2287  0F3D                     	;# 
  2288  0F3E                     	;# 
  2289  0F3F                     	;# 
  2290  0F40                     	;# 
  2291  0F41                     	;# 
  2292  0F43                     	;# 
  2293  0F44                     	;# 
  2294  0F45                     	;# 
  2295  0F46                     	;# 
  2296  0F47                     	;# 
  2297  0F48                     	;# 
  2298  0F49                     	;# 
  2299  0F4A                     	;# 
  2300  0F4B                     	;# 
  2301  0F4C                     	;# 
  2302  0F4E                     	;# 
  2303  0F4F                     	;# 
  2304  0F50                     	;# 
  2305  0F51                     	;# 
  2306  0F52                     	;# 
  2307  0F53                     	;# 
  2308  0F54                     	;# 
  2309  0F55                     	;# 
  2310  0F56                     	;# 
  2311  0F57                     	;# 
  2312  0F59                     	;# 
  2313  0F5A                     	;# 
  2314  0F5B                     	;# 
  2315  0F5C                     	;# 
  2316  0F5D                     	;# 
  2317  0F61                     	;# 
  2318  0F62                     	;# 
  2319  0F64                     	;# 
  2320  0F65                     	;# 
  2321  0F66                     	;# 
  2322  0F67                     	;# 
  2323  0F68                     	;# 
  2324  0F69                     	;# 
  2325  0F6A                     	;# 
  2326  0F6B                     	;# 
  2327  0F6C                     	;# 
  2328  0F6D                     	;# 
  2329  0FE4                     	;# 
  2330  0FE5                     	;# 
  2331  0FE6                     	;# 
  2332  0FE7                     	;# 
  2333  0FE8                     	;# 
  2334  0FE9                     	;# 
  2335  0FEA                     	;# 
  2336  0FEB                     	;# 
  2337  0FED                     	;# 
  2338  0FEE                     	;# 
  2339  0FEF                     	;# 
  2340  0000                     	;# 
  2341  0001                     	;# 
  2342  0002                     	;# 
  2343  0003                     	;# 
  2344  0004                     	;# 
  2345  0005                     	;# 
  2346  0006                     	;# 
  2347  0007                     	;# 
  2348  0008                     	;# 
  2349  0009                     	;# 
  2350  000A                     	;# 
  2351  000B                     	;# 
  2352  000C                     	;# 
  2353  000D                     	;# 
  2354  000E                     	;# 
  2355  000F                     	;# 
  2356  0010                     	;# 
  2357  0011                     	;# 
  2358  0012                     	;# 
  2359  0013                     	;# 
  2360  0014                     	;# 
  2361  0015                     	;# 
  2362  0016                     	;# 
  2363  0017                     	;# 
  2364  0018                     	;# 
  2365  0019                     	;# 
  2366  001A                     	;# 
  2367  001C                     	;# 
  2368  001C                     	;# 
  2369  001D                     	;# 
  2370  001D                     	;# 
  2371  001E                     	;# 
  2372  001F                     	;# 
  2373  008C                     	;# 
  2374  008C                     	;# 
  2375  008D                     	;# 
  2376  008E                     	;# 
  2377  008E                     	;# 
  2378  008F                     	;# 
  2379  0090                     	;# 
  2380  0090                     	;# 
  2381  0091                     	;# 
  2382  0093                     	;# 
  2383  0094                     	;# 
  2384  0095                     	;# 
  2385  0096                     	;# 
  2386  0097                     	;# 
  2387  0098                     	;# 
  2388  0099                     	;# 
  2389  009A                     	;# 
  2390  009B                     	;# 
  2391  009C                     	;# 
  2392  009D                     	;# 
  2393  009E                     	;# 
  2394  010C                     	;# 
  2395  010D                     	;# 
  2396  010E                     	;# 
  2397  010E                     	;# 
  2398  010F                     	;# 
  2399  0110                     	;# 
  2400  0110                     	;# 
  2401  0111                     	;# 
  2402  0112                     	;# 
  2403  0112                     	;# 
  2404  0113                     	;# 
  2405  0114                     	;# 
  2406  0114                     	;# 
  2407  0115                     	;# 
  2408  0116                     	;# 
  2409  0116                     	;# 
  2410  0117                     	;# 
  2411  0119                     	;# 
  2412  0119                     	;# 
  2413  0119                     	;# 
  2414  011A                     	;# 
  2415  011A                     	;# 
  2416  011A                     	;# 
  2417  011B                     	;# 
  2418  011B                     	;# 
  2419  011B                     	;# 
  2420  011B                     	;# 
  2421  011B                     	;# 
  2422  011C                     	;# 
  2423  011C                     	;# 
  2424  011C                     	;# 
  2425  011D                     	;# 
  2426  011D                     	;# 
  2427  011D                     	;# 
  2428  011E                     	;# 
  2429  011E                     	;# 
  2430  011E                     	;# 
  2431  011F                     	;# 
  2432  011F                     	;# 
  2433  011F                     	;# 
  2434  011F                     	;# 
  2435  011F                     	;# 
  2436  018C                     	;# 
  2437  018D                     	;# 
  2438  018E                     	;# 
  2439  018F                     	;# 
  2440  0190                     	;# 
  2441  0191                     	;# 
  2442  0192                     	;# 
  2443  0196                     	;# 
  2444  0197                     	;# 
  2445  0198                     	;# 
  2446  0199                     	;# 
  2447  019A                     	;# 
  2448  019B                     	;# 
  2449  019C                     	;# 
  2450  020C                     	;# 
  2451  020C                     	;# 
  2452  020D                     	;# 
  2453  020E                     	;# 
  2454  020F                     	;# 
  2455  020F                     	;# 
  2456  0210                     	;# 
  2457  0210                     	;# 
  2458  0211                     	;# 
  2459  0211                     	;# 
  2460  0212                     	;# 
  2461  0212                     	;# 
  2462  0213                     	;# 
  2463  0214                     	;# 
  2464  0215                     	;# 
  2465  0215                     	;# 
  2466  0216                     	;# 
  2467  0216                     	;# 
  2468  0217                     	;# 
  2469  0217                     	;# 
  2470  0218                     	;# 
  2471  0218                     	;# 
  2472  0219                     	;# 
  2473  021A                     	;# 
  2474  021B                     	;# 
  2475  021B                     	;# 
  2476  021C                     	;# 
  2477  021C                     	;# 
  2478  021D                     	;# 
  2479  021D                     	;# 
  2480  021E                     	;# 
  2481  021F                     	;# 
  2482  028C                     	;# 
  2483  028C                     	;# 
  2484  028D                     	;# 
  2485  028D                     	;# 
  2486  028E                     	;# 
  2487  028F                     	;# 
  2488  0290                     	;# 
  2489  0290                     	;# 
  2490  0291                     	;# 
  2491  0292                     	;# 
  2492  0292                     	;# 
  2493  0293                     	;# 
  2494  0293                     	;# 
  2495  0294                     	;# 
  2496  0295                     	;# 
  2497  0296                     	;# 
  2498  0296                     	;# 
  2499  0297                     	;# 
  2500  0298                     	;# 
  2501  0298                     	;# 
  2502  0299                     	;# 
  2503  0299                     	;# 
  2504  029A                     	;# 
  2505  029B                     	;# 
  2506  029C                     	;# 
  2507  029C                     	;# 
  2508  029D                     	;# 
  2509  030C                     	;# 
  2510  030C                     	;# 
  2511  030D                     	;# 
  2512  030E                     	;# 
  2513  030F                     	;# 
  2514  0310                     	;# 
  2515  0310                     	;# 
  2516  0311                     	;# 
  2517  0312                     	;# 
  2518  0313                     	;# 
  2519  0314                     	;# 
  2520  0314                     	;# 
  2521  0315                     	;# 
  2522  0316                     	;# 
  2523  0317                     	;# 
  2524  0318                     	;# 
  2525  0318                     	;# 
  2526  0319                     	;# 
  2527  031A                     	;# 
  2528  031B                     	;# 
  2529  031C                     	;# 
  2530  031C                     	;# 
  2531  031D                     	;# 
  2532  031E                     	;# 
  2533  031F                     	;# 
  2534  038C                     	;# 
  2535  038C                     	;# 
  2536  038D                     	;# 
  2537  038E                     	;# 
  2538  0390                     	;# 
  2539  0390                     	;# 
  2540  0391                     	;# 
  2541  0392                     	;# 
  2542  040C                     	;# 
  2543  040D                     	;# 
  2544  040E                     	;# 
  2545  040F                     	;# 
  2546  0410                     	;# 
  2547  0411                     	;# 
  2548  0416                     	;# 
  2549  0416                     	;# 
  2550  0417                     	;# 
  2551  0418                     	;# 
  2552  0418                     	;# 
  2553  0419                     	;# 
  2554  041A                     	;# 
  2555  041A                     	;# 
  2556  041B                     	;# 
  2557  041C                     	;# 
  2558  041C                     	;# 
  2559  041D                     	;# 
  2560  041E                     	;# 
  2561  041F                     	;# 
  2562  048C                     	;# 
  2563  048C                     	;# 
  2564  048D                     	;# 
  2565  048E                     	;# 
  2566  048F                     	;# 
  2567  048F                     	;# 
  2568  0490                     	;# 
  2569  0491                     	;# 
  2570  0492                     	;# 
  2571  0492                     	;# 
  2572  0493                     	;# 
  2573  0494                     	;# 
  2574  0495                     	;# 
  2575  0495                     	;# 
  2576  0496                     	;# 
  2577  0497                     	;# 
  2578  0498                     	;# 
  2579  0499                     	;# 
  2580  049A                     	;# 
  2581  049B                     	;# 
  2582  049C                     	;# 
  2583  049D                     	;# 
  2584  050C                     	;# 
  2585  050C                     	;# 
  2586  050D                     	;# 
  2587  050E                     	;# 
  2588  050F                     	;# 
  2589  050F                     	;# 
  2590  0510                     	;# 
  2591  0511                     	;# 
  2592  0512                     	;# 
  2593  0512                     	;# 
  2594  0513                     	;# 
  2595  0514                     	;# 
  2596  0515                     	;# 
  2597  0515                     	;# 
  2598  0516                     	;# 
  2599  0517                     	;# 
  2600  0518                     	;# 
  2601  0519                     	;# 
  2602  051A                     	;# 
  2603  051B                     	;# 
  2604  051C                     	;# 
  2605  051D                     	;# 
  2606  058C                     	;# 
  2607  058C                     	;# 
  2608  058D                     	;# 
  2609  058E                     	;# 
  2610  058F                     	;# 
  2611  058F                     	;# 
  2612  0590                     	;# 
  2613  0591                     	;# 
  2614  0592                     	;# 
  2615  0593                     	;# 
  2616  060C                     	;# 
  2617  060D                     	;# 
  2618  060E                     	;# 
  2619  060F                     	;# 
  2620  0610                     	;# 
  2621  0611                     	;# 
  2622  0612                     	;# 
  2623  0613                     	;# 
  2624  0614                     	;# 
  2625  0616                     	;# 
  2626  0617                     	;# 
  2627  0618                     	;# 
  2628  0619                     	;# 
  2629  061A                     	;# 
  2630  061B                     	;# 
  2631  061C                     	;# 
  2632  061D                     	;# 
  2633  061E                     	;# 
  2634  068C                     	;# 
  2635  068D                     	;# 
  2636  068E                     	;# 
  2637  068F                     	;# 
  2638  0690                     	;# 
  2639  0691                     	;# 
  2640  0692                     	;# 
  2641  0693                     	;# 
  2642  0694                     	;# 
  2643  070C                     	;# 
  2644  070D                     	;# 
  2645  070E                     	;# 
  2646  070F                     	;# 
  2647  0710                     	;# 
  2648  0711                     	;# 
  2649  0712                     	;# 
  2650  0713                     	;# 
  2651  0714                     	;# 
  2652  0716                     	;# 
  2653  0717                     	;# 
  2654  0718                     	;# 
  2655  0719                     	;# 
  2656  071A                     	;# 
  2657  071B                     	;# 
  2658  071C                     	;# 
  2659  071D                     	;# 
  2660  071E                     	;# 
  2661  0796                     	;# 
  2662  0797                     	;# 
  2663  0798                     	;# 
  2664  0799                     	;# 
  2665  079A                     	;# 
  2666  079B                     	;# 
  2667  080C                     	;# 
  2668  080D                     	;# 
  2669  080E                     	;# 
  2670  080F                     	;# 
  2671  0810                     	;# 
  2672  0811                     	;# 
  2673  0812                     	;# 
  2674  0813                     	;# 
  2675  0814                     	;# 
  2676  081A                     	;# 
  2677  081B                     	;# 
  2678  081C                     	;# 
  2679  081D                     	;# 
  2680  081E                     	;# 
  2681  081F                     	;# 
  2682  088C                     	;# 
  2683  088D                     	;# 
  2684  088E                     	;# 
  2685  088F                     	;# 
  2686  0890                     	;# 
  2687  0891                     	;# 
  2688  0892                     	;# 
  2689  0893                     	;# 
  2690  0895                     	;# 
  2691  0896                     	;# 
  2692  0897                     	;# 
  2693  0898                     	;# 
  2694  0899                     	;# 
  2695  089A                     	;# 
  2696  089B                     	;# 
  2697  090C                     	;# 
  2698  090E                     	;# 
  2699  090F                     	;# 
  2700  091F                     	;# 
  2701  091F                     	;# 
  2702  098F                     	;# 
  2703  098F                     	;# 
  2704  0990                     	;# 
  2705  0991                     	;# 
  2706  0992                     	;# 
  2707  0993                     	;# 
  2708  0994                     	;# 
  2709  0995                     	;# 
  2710  0996                     	;# 
  2711  0997                     	;# 
  2712  0E0F                     	;# 
  2713  0E10                     	;# 
  2714  0E11                     	;# 
  2715  0E12                     	;# 
  2716  0E13                     	;# 
  2717  0E14                     	;# 
  2718  0E15                     	;# 
  2719  0E16                     	;# 
  2720  0E17                     	;# 
  2721  0E18                     	;# 
  2722  0E19                     	;# 
  2723  0E1A                     	;# 
  2724  0E1B                     	;# 
  2725  0E1C                     	;# 
  2726  0E1D                     	;# 
  2727  0E1E                     	;# 
  2728  0E1F                     	;# 
  2729  0E20                     	;# 
  2730  0E21                     	;# 
  2731  0E22                     	;# 
  2732  0E23                     	;# 
  2733  0E24                     	;# 
  2734  0E25                     	;# 
  2735  0E26                     	;# 
  2736  0E27                     	;# 
  2737  0E28                     	;# 
  2738  0E29                     	;# 
  2739  0E2A                     	;# 
  2740  0E2B                     	;# 
  2741  0E2C                     	;# 
  2742  0E2D                     	;# 
  2743  0E2E                     	;# 
  2744  0E2F                     	;# 
  2745  0E30                     	;# 
  2746  0E31                     	;# 
  2747  0E32                     	;# 
  2748  0E33                     	;# 
  2749  0E34                     	;# 
  2750  0E35                     	;# 
  2751  0E36                     	;# 
  2752  0E37                     	;# 
  2753  0E8F                     	;# 
  2754  0E90                     	;# 
  2755  0E91                     	;# 
  2756  0E92                     	;# 
  2757  0E93                     	;# 
  2758  0E94                     	;# 
  2759  0E95                     	;# 
  2760  0E96                     	;# 
  2761  0E97                     	;# 
  2762  0E9C                     	;# 
  2763  0E9D                     	;# 
  2764  0E9E                     	;# 
  2765  0EA1                     	;# 
  2766  0EA2                     	;# 
  2767  0EA3                     	;# 
  2768  0EA4                     	;# 
  2769  0EA5                     	;# 
  2770  0EA9                     	;# 
  2771  0EAA                     	;# 
  2772  0EAB                     	;# 
  2773  0EAC                     	;# 
  2774  0EB1                     	;# 
  2775  0EB2                     	;# 
  2776  0EB3                     	;# 
  2777  0EB8                     	;# 
  2778  0EB9                     	;# 
  2779  0EBA                     	;# 
  2780  0EBB                     	;# 
  2781  0EBC                     	;# 
  2782  0EBD                     	;# 
  2783  0EBE                     	;# 
  2784  0EC3                     	;# 
  2785  0EC5                     	;# 
  2786  0EC6                     	;# 
  2787  0EC7                     	;# 
  2788  0EC8                     	;# 
  2789  0EC9                     	;# 
  2790  0ECA                     	;# 
  2791  0ECB                     	;# 
  2792  0ECC                     	;# 
  2793  0F10                     	;# 
  2794  0F11                     	;# 
  2795  0F12                     	;# 
  2796  0F13                     	;# 
  2797  0F14                     	;# 
  2798  0F15                     	;# 
  2799  0F16                     	;# 
  2800  0F17                     	;# 
  2801  0F18                     	;# 
  2802  0F19                     	;# 
  2803  0F1A                     	;# 
  2804  0F1B                     	;# 
  2805  0F1C                     	;# 
  2806  0F1D                     	;# 
  2807  0F1E                     	;# 
  2808  0F1F                     	;# 
  2809  0F20                     	;# 
  2810  0F21                     	;# 
  2811  0F22                     	;# 
  2812  0F23                     	;# 
  2813  0F24                     	;# 
  2814  0F25                     	;# 
  2815  0F26                     	;# 
  2816  0F27                     	;# 
  2817  0F28                     	;# 
  2818  0F29                     	;# 
  2819  0F2A                     	;# 
  2820  0F2B                     	;# 
  2821  0F2C                     	;# 
  2822  0F2D                     	;# 
  2823  0F2E                     	;# 
  2824  0F2F                     	;# 
  2825  0F30                     	;# 
  2826  0F31                     	;# 
  2827  0F32                     	;# 
  2828  0F38                     	;# 
  2829  0F39                     	;# 
  2830  0F3A                     	;# 
  2831  0F3B                     	;# 
  2832  0F3C                     	;# 
  2833  0F3D                     	;# 
  2834  0F3E                     	;# 
  2835  0F3F                     	;# 
  2836  0F40                     	;# 
  2837  0F41                     	;# 
  2838  0F43                     	;# 
  2839  0F44                     	;# 
  2840  0F45                     	;# 
  2841  0F46                     	;# 
  2842  0F47                     	;# 
  2843  0F48                     	;# 
  2844  0F49                     	;# 
  2845  0F4A                     	;# 
  2846  0F4B                     	;# 
  2847  0F4C                     	;# 
  2848  0F4E                     	;# 
  2849  0F4F                     	;# 
  2850  0F50                     	;# 
  2851  0F51                     	;# 
  2852  0F52                     	;# 
  2853  0F53                     	;# 
  2854  0F54                     	;# 
  2855  0F55                     	;# 
  2856  0F56                     	;# 
  2857  0F57                     	;# 
  2858  0F59                     	;# 
  2859  0F5A                     	;# 
  2860  0F5B                     	;# 
  2861  0F5C                     	;# 
  2862  0F5D                     	;# 
  2863  0F61                     	;# 
  2864  0F62                     	;# 
  2865  0F64                     	;# 
  2866  0F65                     	;# 
  2867  0F66                     	;# 
  2868  0F67                     	;# 
  2869  0F68                     	;# 
  2870  0F69                     	;# 
  2871  0F6A                     	;# 
  2872  0F6B                     	;# 
  2873  0F6C                     	;# 
  2874  0F6D                     	;# 
  2875  0FE4                     	;# 
  2876  0FE5                     	;# 
  2877  0FE6                     	;# 
  2878  0FE7                     	;# 
  2879  0FE8                     	;# 
  2880  0FE9                     	;# 
  2881  0FEA                     	;# 
  2882  0FEB                     	;# 
  2883  0FED                     	;# 
  2884  0FEE                     	;# 
  2885  0FEF                     	;# 
  2886  0000                     	;# 
  2887  0001                     	;# 
  2888  0002                     	;# 
  2889  0003                     	;# 
  2890  0004                     	;# 
  2891  0005                     	;# 
  2892  0006                     	;# 
  2893  0007                     	;# 
  2894  0008                     	;# 
  2895  0009                     	;# 
  2896  000A                     	;# 
  2897  000B                     	;# 
  2898  000C                     	;# 
  2899  000D                     	;# 
  2900  000E                     	;# 
  2901  000F                     	;# 
  2902  0010                     	;# 
  2903  0011                     	;# 
  2904  0012                     	;# 
  2905  0013                     	;# 
  2906  0014                     	;# 
  2907  0015                     	;# 
  2908  0016                     	;# 
  2909  0017                     	;# 
  2910  0018                     	;# 
  2911  0019                     	;# 
  2912  001A                     	;# 
  2913  001C                     	;# 
  2914  001C                     	;# 
  2915  001D                     	;# 
  2916  001D                     	;# 
  2917  001E                     	;# 
  2918  001F                     	;# 
  2919  008C                     	;# 
  2920  008C                     	;# 
  2921  008D                     	;# 
  2922  008E                     	;# 
  2923  008E                     	;# 
  2924  008F                     	;# 
  2925  0090                     	;# 
  2926  0090                     	;# 
  2927  0091                     	;# 
  2928  0093                     	;# 
  2929  0094                     	;# 
  2930  0095                     	;# 
  2931  0096                     	;# 
  2932  0097                     	;# 
  2933  0098                     	;# 
  2934  0099                     	;# 
  2935  009A                     	;# 
  2936  009B                     	;# 
  2937  009C                     	;# 
  2938  009D                     	;# 
  2939  009E                     	;# 
  2940  010C                     	;# 
  2941  010D                     	;# 
  2942  010E                     	;# 
  2943  010E                     	;# 
  2944  010F                     	;# 
  2945  0110                     	;# 
  2946  0110                     	;# 
  2947  0111                     	;# 
  2948  0112                     	;# 
  2949  0112                     	;# 
  2950  0113                     	;# 
  2951  0114                     	;# 
  2952  0114                     	;# 
  2953  0115                     	;# 
  2954  0116                     	;# 
  2955  0116                     	;# 
  2956  0117                     	;# 
  2957  0119                     	;# 
  2958  0119                     	;# 
  2959  0119                     	;# 
  2960  011A                     	;# 
  2961  011A                     	;# 
  2962  011A                     	;# 
  2963  011B                     	;# 
  2964  011B                     	;# 
  2965  011B                     	;# 
  2966  011B                     	;# 
  2967  011B                     	;# 
  2968  011C                     	;# 
  2969  011C                     	;# 
  2970  011C                     	;# 
  2971  011D                     	;# 
  2972  011D                     	;# 
  2973  011D                     	;# 
  2974  011E                     	;# 
  2975  011E                     	;# 
  2976  011E                     	;# 
  2977  011F                     	;# 
  2978  011F                     	;# 
  2979  011F                     	;# 
  2980  011F                     	;# 
  2981  011F                     	;# 
  2982  018C                     	;# 
  2983  018D                     	;# 
  2984  018E                     	;# 
  2985  018F                     	;# 
  2986  0190                     	;# 
  2987  0191                     	;# 
  2988  0192                     	;# 
  2989  0196                     	;# 
  2990  0197                     	;# 
  2991  0198                     	;# 
  2992  0199                     	;# 
  2993  019A                     	;# 
  2994  019B                     	;# 
  2995  019C                     	;# 
  2996  020C                     	;# 
  2997  020C                     	;# 
  2998  020D                     	;# 
  2999  020E                     	;# 
  3000  020F                     	;# 
  3001  020F                     	;# 
  3002  0210                     	;# 
  3003  0210                     	;# 
  3004  0211                     	;# 
  3005  0211                     	;# 
  3006  0212                     	;# 
  3007  0212                     	;# 
  3008  0213                     	;# 
  3009  0214                     	;# 
  3010  0215                     	;# 
  3011  0215                     	;# 
  3012  0216                     	;# 
  3013  0216                     	;# 
  3014  0217                     	;# 
  3015  0217                     	;# 
  3016  0218                     	;# 
  3017  0218                     	;# 
  3018  0219                     	;# 
  3019  021A                     	;# 
  3020  021B                     	;# 
  3021  021B                     	;# 
  3022  021C                     	;# 
  3023  021C                     	;# 
  3024  021D                     	;# 
  3025  021D                     	;# 
  3026  021E                     	;# 
  3027  021F                     	;# 
  3028  028C                     	;# 
  3029  028C                     	;# 
  3030  028D                     	;# 
  3031  028D                     	;# 
  3032  028E                     	;# 
  3033  028F                     	;# 
  3034  0290                     	;# 
  3035  0290                     	;# 
  3036  0291                     	;# 
  3037  0292                     	;# 
  3038  0292                     	;# 
  3039  0293                     	;# 
  3040  0293                     	;# 
  3041  0294                     	;# 
  3042  0295                     	;# 
  3043  0296                     	;# 
  3044  0296                     	;# 
  3045  0297                     	;# 
  3046  0298                     	;# 
  3047  0298                     	;# 
  3048  0299                     	;# 
  3049  0299                     	;# 
  3050  029A                     	;# 
  3051  029B                     	;# 
  3052  029C                     	;# 
  3053  029C                     	;# 
  3054  029D                     	;# 
  3055  030C                     	;# 
  3056  030C                     	;# 
  3057  030D                     	;# 
  3058  030E                     	;# 
  3059  030F                     	;# 
  3060  0310                     	;# 
  3061  0310                     	;# 
  3062  0311                     	;# 
  3063  0312                     	;# 
  3064  0313                     	;# 
  3065  0314                     	;# 
  3066  0314                     	;# 
  3067  0315                     	;# 
  3068  0316                     	;# 
  3069  0317                     	;# 
  3070  0318                     	;# 
  3071  0318                     	;# 
  3072  0319                     	;# 
  3073  031A                     	;# 
  3074  031B                     	;# 
  3075  031C                     	;# 
  3076  031C                     	;# 
  3077  031D                     	;# 
  3078  031E                     	;# 
  3079  031F                     	;# 
  3080  038C                     	;# 
  3081  038C                     	;# 
  3082  038D                     	;# 
  3083  038E                     	;# 
  3084  0390                     	;# 
  3085  0390                     	;# 
  3086  0391                     	;# 
  3087  0392                     	;# 
  3088  040C                     	;# 
  3089  040D                     	;# 
  3090  040E                     	;# 
  3091  040F                     	;# 
  3092  0410                     	;# 
  3093  0411                     	;# 
  3094  0416                     	;# 
  3095  0416                     	;# 
  3096  0417                     	;# 
  3097  0418                     	;# 
  3098  0418                     	;# 
  3099  0419                     	;# 
  3100  041A                     	;# 
  3101  041A                     	;# 
  3102  041B                     	;# 
  3103  041C                     	;# 
  3104  041C                     	;# 
  3105  041D                     	;# 
  3106  041E                     	;# 
  3107  041F                     	;# 
  3108  048C                     	;# 
  3109  048C                     	;# 
  3110  048D                     	;# 
  3111  048E                     	;# 
  3112  048F                     	;# 
  3113  048F                     	;# 
  3114  0490                     	;# 
  3115  0491                     	;# 
  3116  0492                     	;# 
  3117  0492                     	;# 
  3118  0493                     	;# 
  3119  0494                     	;# 
  3120  0495                     	;# 
  3121  0495                     	;# 
  3122  0496                     	;# 
  3123  0497                     	;# 
  3124  0498                     	;# 
  3125  0499                     	;# 
  3126  049A                     	;# 
  3127  049B                     	;# 
  3128  049C                     	;# 
  3129  049D                     	;# 
  3130  050C                     	;# 
  3131  050C                     	;# 
  3132  050D                     	;# 
  3133  050E                     	;# 
  3134  050F                     	;# 
  3135  050F                     	;# 
  3136  0510                     	;# 
  3137  0511                     	;# 
  3138  0512                     	;# 
  3139  0512                     	;# 
  3140  0513                     	;# 
  3141  0514                     	;# 
  3142  0515                     	;# 
  3143  0515                     	;# 
  3144  0516                     	;# 
  3145  0517                     	;# 
  3146  0518                     	;# 
  3147  0519                     	;# 
  3148  051A                     	;# 
  3149  051B                     	;# 
  3150  051C                     	;# 
  3151  051D                     	;# 
  3152  058C                     	;# 
  3153  058C                     	;# 
  3154  058D                     	;# 
  3155  058E                     	;# 
  3156  058F                     	;# 
  3157  058F                     	;# 
  3158  0590                     	;# 
  3159  0591                     	;# 
  3160  0592                     	;# 
  3161  0593                     	;# 
  3162  060C                     	;# 
  3163  060D                     	;# 
  3164  060E                     	;# 
  3165  060F                     	;# 
  3166  0610                     	;# 
  3167  0611                     	;# 
  3168  0612                     	;# 
  3169  0613                     	;# 
  3170  0614                     	;# 
  3171  0616                     	;# 
  3172  0617                     	;# 
  3173  0618                     	;# 
  3174  0619                     	;# 
  3175  061A                     	;# 
  3176  061B                     	;# 
  3177  061C                     	;# 
  3178  061D                     	;# 
  3179  061E                     	;# 
  3180  068C                     	;# 
  3181  068D                     	;# 
  3182  068E                     	;# 
  3183  068F                     	;# 
  3184  0690                     	;# 
  3185  0691                     	;# 
  3186  0692                     	;# 
  3187  0693                     	;# 
  3188  0694                     	;# 
  3189  070C                     	;# 
  3190  070D                     	;# 
  3191  070E                     	;# 
  3192  070F                     	;# 
  3193  0710                     	;# 
  3194  0711                     	;# 
  3195  0712                     	;# 
  3196  0713                     	;# 
  3197  0714                     	;# 
  3198  0716                     	;# 
  3199  0717                     	;# 
  3200  0718                     	;# 
  3201  0719                     	;# 
  3202  071A                     	;# 
  3203  071B                     	;# 
  3204  071C                     	;# 
  3205  071D                     	;# 
  3206  071E                     	;# 
  3207  0796                     	;# 
  3208  0797                     	;# 
  3209  0798                     	;# 
  3210  0799                     	;# 
  3211  079A                     	;# 
  3212  079B                     	;# 
  3213  080C                     	;# 
  3214  080D                     	;# 
  3215  080E                     	;# 
  3216  080F                     	;# 
  3217  0810                     	;# 
  3218  0811                     	;# 
  3219  0812                     	;# 
  3220  0813                     	;# 
  3221  0814                     	;# 
  3222  081A                     	;# 
  3223  081B                     	;# 
  3224  081C                     	;# 
  3225  081D                     	;# 
  3226  081E                     	;# 
  3227  081F                     	;# 
  3228  088C                     	;# 
  3229  088D                     	;# 
  3230  088E                     	;# 
  3231  088F                     	;# 
  3232  0890                     	;# 
  3233  0891                     	;# 
  3234  0892                     	;# 
  3235  0893                     	;# 
  3236  0895                     	;# 
  3237  0896                     	;# 
  3238  0897                     	;# 
  3239  0898                     	;# 
  3240  0899                     	;# 
  3241  089A                     	;# 
  3242  089B                     	;# 
  3243  090C                     	;# 
  3244  090E                     	;# 
  3245  090F                     	;# 
  3246  091F                     	;# 
  3247  091F                     	;# 
  3248  098F                     	;# 
  3249  098F                     	;# 
  3250  0990                     	;# 
  3251  0991                     	;# 
  3252  0992                     	;# 
  3253  0993                     	;# 
  3254  0994                     	;# 
  3255  0995                     	;# 
  3256  0996                     	;# 
  3257  0997                     	;# 
  3258  0E0F                     	;# 
  3259  0E10                     	;# 
  3260  0E11                     	;# 
  3261  0E12                     	;# 
  3262  0E13                     	;# 
  3263  0E14                     	;# 
  3264  0E15                     	;# 
  3265  0E16                     	;# 
  3266  0E17                     	;# 
  3267  0E18                     	;# 
  3268  0E19                     	;# 
  3269  0E1A                     	;# 
  3270  0E1B                     	;# 
  3271  0E1C                     	;# 
  3272  0E1D                     	;# 
  3273  0E1E                     	;# 
  3274  0E1F                     	;# 
  3275  0E20                     	;# 
  3276  0E21                     	;# 
  3277  0E22                     	;# 
  3278  0E23                     	;# 
  3279  0E24                     	;# 
  3280  0E25                     	;# 
  3281  0E26                     	;# 
  3282  0E27                     	;# 
  3283  0E28                     	;# 
  3284  0E29                     	;# 
  3285  0E2A                     	;# 
  3286  0E2B                     	;# 
  3287  0E2C                     	;# 
  3288  0E2D                     	;# 
  3289  0E2E                     	;# 
  3290  0E2F                     	;# 
  3291  0E30                     	;# 
  3292  0E31                     	;# 
  3293  0E32                     	;# 
  3294  0E33                     	;# 
  3295  0E34                     	;# 
  3296  0E35                     	;# 
  3297  0E36                     	;# 
  3298  0E37                     	;# 
  3299  0E8F                     	;# 
  3300  0E90                     	;# 
  3301  0E91                     	;# 
  3302  0E92                     	;# 
  3303  0E93                     	;# 
  3304  0E94                     	;# 
  3305  0E95                     	;# 
  3306  0E96                     	;# 
  3307  0E97                     	;# 
  3308  0E9C                     	;# 
  3309  0E9D                     	;# 
  3310  0E9E                     	;# 
  3311  0EA1                     	;# 
  3312  0EA2                     	;# 
  3313  0EA3                     	;# 
  3314  0EA4                     	;# 
  3315  0EA5                     	;# 
  3316  0EA9                     	;# 
  3317  0EAA                     	;# 
  3318  0EAB                     	;# 
  3319  0EAC                     	;# 
  3320  0EB1                     	;# 
  3321  0EB2                     	;# 
  3322  0EB3                     	;# 
  3323  0EB8                     	;# 
  3324  0EB9                     	;# 
  3325  0EBA                     	;# 
  3326  0EBB                     	;# 
  3327  0EBC                     	;# 
  3328  0EBD                     	;# 
  3329  0EBE                     	;# 
  3330  0EC3                     	;# 
  3331  0EC5                     	;# 
  3332  0EC6                     	;# 
  3333  0EC7                     	;# 
  3334  0EC8                     	;# 
  3335  0EC9                     	;# 
  3336  0ECA                     	;# 
  3337  0ECB                     	;# 
  3338  0ECC                     	;# 
  3339  0F10                     	;# 
  3340  0F11                     	;# 
  3341  0F12                     	;# 
  3342  0F13                     	;# 
  3343  0F14                     	;# 
  3344  0F15                     	;# 
  3345  0F16                     	;# 
  3346  0F17                     	;# 
  3347  0F18                     	;# 
  3348  0F19                     	;# 
  3349  0F1A                     	;# 
  3350  0F1B                     	;# 
  3351  0F1C                     	;# 
  3352  0F1D                     	;# 
  3353  0F1E                     	;# 
  3354  0F1F                     	;# 
  3355  0F20                     	;# 
  3356  0F21                     	;# 
  3357  0F22                     	;# 
  3358  0F23                     	;# 
  3359  0F24                     	;# 
  3360  0F25                     	;# 
  3361  0F26                     	;# 
  3362  0F27                     	;# 
  3363  0F28                     	;# 
  3364  0F29                     	;# 
  3365  0F2A                     	;# 
  3366  0F2B                     	;# 
  3367  0F2C                     	;# 
  3368  0F2D                     	;# 
  3369  0F2E                     	;# 
  3370  0F2F                     	;# 
  3371  0F30                     	;# 
  3372  0F31                     	;# 
  3373  0F32                     	;# 
  3374  0F38                     	;# 
  3375  0F39                     	;# 
  3376  0F3A                     	;# 
  3377  0F3B                     	;# 
  3378  0F3C                     	;# 
  3379  0F3D                     	;# 
  3380  0F3E                     	;# 
  3381  0F3F                     	;# 
  3382  0F40                     	;# 
  3383  0F41                     	;# 
  3384  0F43                     	;# 
  3385  0F44                     	;# 
  3386  0F45                     	;# 
  3387  0F46                     	;# 
  3388  0F47                     	;# 
  3389  0F48                     	;# 
  3390  0F49                     	;# 
  3391  0F4A                     	;# 
  3392  0F4B                     	;# 
  3393  0F4C                     	;# 
  3394  0F4E                     	;# 
  3395  0F4F                     	;# 
  3396  0F50                     	;# 
  3397  0F51                     	;# 
  3398  0F52                     	;# 
  3399  0F53                     	;# 
  3400  0F54                     	;# 
  3401  0F55                     	;# 
  3402  0F56                     	;# 
  3403  0F57                     	;# 
  3404  0F59                     	;# 
  3405  0F5A                     	;# 
  3406  0F5B                     	;# 
  3407  0F5C                     	;# 
  3408  0F5D                     	;# 
  3409  0F61                     	;# 
  3410  0F62                     	;# 
  3411  0F64                     	;# 
  3412  0F65                     	;# 
  3413  0F66                     	;# 
  3414  0F67                     	;# 
  3415  0F68                     	;# 
  3416  0F69                     	;# 
  3417  0F6A                     	;# 
  3418  0F6B                     	;# 
  3419  0F6C                     	;# 
  3420  0F6D                     	;# 
  3421  0FE4                     	;# 
  3422  0FE5                     	;# 
  3423  0FE6                     	;# 
  3424  0FE7                     	;# 
  3425  0FE8                     	;# 
  3426  0FE9                     	;# 
  3427  0FEA                     	;# 
  3428  0FEB                     	;# 
  3429  0FED                     	;# 
  3430  0FEE                     	;# 
  3431  0FEF                     	;# 
  3432  0000                     	;# 
  3433  0001                     	;# 
  3434  0002                     	;# 
  3435  0003                     	;# 
  3436  0004                     	;# 
  3437  0005                     	;# 
  3438  0006                     	;# 
  3439  0007                     	;# 
  3440  0008                     	;# 
  3441  0009                     	;# 
  3442  000A                     	;# 
  3443  000B                     	;# 
  3444  000C                     	;# 
  3445  000D                     	;# 
  3446  000E                     	;# 
  3447  000F                     	;# 
  3448  0010                     	;# 
  3449  0011                     	;# 
  3450  0012                     	;# 
  3451  0013                     	;# 
  3452  0014                     	;# 
  3453  0015                     	;# 
  3454  0016                     	;# 
  3455  0017                     	;# 
  3456  0018                     	;# 
  3457  0019                     	;# 
  3458  001A                     	;# 
  3459  001C                     	;# 
  3460  001C                     	;# 
  3461  001D                     	;# 
  3462  001D                     	;# 
  3463  001E                     	;# 
  3464  001F                     	;# 
  3465  008C                     	;# 
  3466  008C                     	;# 
  3467  008D                     	;# 
  3468  008E                     	;# 
  3469  008E                     	;# 
  3470  008F                     	;# 
  3471  0090                     	;# 
  3472  0090                     	;# 
  3473  0091                     	;# 
  3474  0093                     	;# 
  3475  0094                     	;# 
  3476  0095                     	;# 
  3477  0096                     	;# 
  3478  0097                     	;# 
  3479  0098                     	;# 
  3480  0099                     	;# 
  3481  009A                     	;# 
  3482  009B                     	;# 
  3483  009C                     	;# 
  3484  009D                     	;# 
  3485  009E                     	;# 
  3486  010C                     	;# 
  3487  010D                     	;# 
  3488  010E                     	;# 
  3489  010E                     	;# 
  3490  010F                     	;# 
  3491  0110                     	;# 
  3492  0110                     	;# 
  3493  0111                     	;# 
  3494  0112                     	;# 
  3495  0112                     	;# 
  3496  0113                     	;# 
  3497  0114                     	;# 
  3498  0114                     	;# 
  3499  0115                     	;# 
  3500  0116                     	;# 
  3501  0116                     	;# 
  3502  0117                     	;# 
  3503  0119                     	;# 
  3504  0119                     	;# 
  3505  0119                     	;# 
  3506  011A                     	;# 
  3507  011A                     	;# 
  3508  011A                     	;# 
  3509  011B                     	;# 
  3510  011B                     	;# 
  3511  011B                     	;# 
  3512  011B                     	;# 
  3513  011B                     	;# 
  3514  011C                     	;# 
  3515  011C                     	;# 
  3516  011C                     	;# 
  3517  011D                     	;# 
  3518  011D                     	;# 
  3519  011D                     	;# 
  3520  011E                     	;# 
  3521  011E                     	;# 
  3522  011E                     	;# 
  3523  011F                     	;# 
  3524  011F                     	;# 
  3525  011F                     	;# 
  3526  011F                     	;# 
  3527  011F                     	;# 
  3528  018C                     	;# 
  3529  018D                     	;# 
  3530  018E                     	;# 
  3531  018F                     	;# 
  3532  0190                     	;# 
  3533  0191                     	;# 
  3534  0192                     	;# 
  3535  0196                     	;# 
  3536  0197                     	;# 
  3537  0198                     	;# 
  3538  0199                     	;# 
  3539  019A                     	;# 
  3540  019B                     	;# 
  3541  019C                     	;# 
  3542  020C                     	;# 
  3543  020C                     	;# 
  3544  020D                     	;# 
  3545  020E                     	;# 
  3546  020F                     	;# 
  3547  020F                     	;# 
  3548  0210                     	;# 
  3549  0210                     	;# 
  3550  0211                     	;# 
  3551  0211                     	;# 
  3552  0212                     	;# 
  3553  0212                     	;# 
  3554  0213                     	;# 
  3555  0214                     	;# 
  3556  0215                     	;# 
  3557  0215                     	;# 
  3558  0216                     	;# 
  3559  0216                     	;# 
  3560  0217                     	;# 
  3561  0217                     	;# 
  3562  0218                     	;# 
  3563  0218                     	;# 
  3564  0219                     	;# 
  3565  021A                     	;# 
  3566  021B                     	;# 
  3567  021B                     	;# 
  3568  021C                     	;# 
  3569  021C                     	;# 
  3570  021D                     	;# 
  3571  021D                     	;# 
  3572  021E                     	;# 
  3573  021F                     	;# 
  3574  028C                     	;# 
  3575  028C                     	;# 
  3576  028D                     	;# 
  3577  028D                     	;# 
  3578  028E                     	;# 
  3579  028F                     	;# 
  3580  0290                     	;# 
  3581  0290                     	;# 
  3582  0291                     	;# 
  3583  0292                     	;# 
  3584  0292                     	;# 
  3585  0293                     	;# 
  3586  0293                     	;# 
  3587  0294                     	;# 
  3588  0295                     	;# 
  3589  0296                     	;# 
  3590  0296                     	;# 
  3591  0297                     	;# 
  3592  0298                     	;# 
  3593  0298                     	;# 
  3594  0299                     	;# 
  3595  0299                     	;# 
  3596  029A                     	;# 
  3597  029B                     	;# 
  3598  029C                     	;# 
  3599  029C                     	;# 
  3600  029D                     	;# 
  3601  030C                     	;# 
  3602  030C                     	;# 
  3603  030D                     	;# 
  3604  030E                     	;# 
  3605  030F                     	;# 
  3606  0310                     	;# 
  3607  0310                     	;# 
  3608  0311                     	;# 
  3609  0312                     	;# 
  3610  0313                     	;# 
  3611  0314                     	;# 
  3612  0314                     	;# 
  3613  0315                     	;# 
  3614  0316                     	;# 
  3615  0317                     	;# 
  3616  0318                     	;# 
  3617  0318                     	;# 
  3618  0319                     	;# 
  3619  031A                     	;# 
  3620  031B                     	;# 
  3621  031C                     	;# 
  3622  031C                     	;# 
  3623  031D                     	;# 
  3624  031E                     	;# 
  3625  031F                     	;# 
  3626  038C                     	;# 
  3627  038C                     	;# 
  3628  038D                     	;# 
  3629  038E                     	;# 
  3630  0390                     	;# 
  3631  0390                     	;# 
  3632  0391                     	;# 
  3633  0392                     	;# 
  3634  040C                     	;# 
  3635  040D                     	;# 
  3636  040E                     	;# 
  3637  040F                     	;# 
  3638  0410                     	;# 
  3639  0411                     	;# 
  3640  0416                     	;# 
  3641  0416                     	;# 
  3642  0417                     	;# 
  3643  0418                     	;# 
  3644  0418                     	;# 
  3645  0419                     	;# 
  3646  041A                     	;# 
  3647  041A                     	;# 
  3648  041B                     	;# 
  3649  041C                     	;# 
  3650  041C                     	;# 
  3651  041D                     	;# 
  3652  041E                     	;# 
  3653  041F                     	;# 
  3654  048C                     	;# 
  3655  048C                     	;# 
  3656  048D                     	;# 
  3657  048E                     	;# 
  3658  048F                     	;# 
  3659  048F                     	;# 
  3660  0490                     	;# 
  3661  0491                     	;# 
  3662  0492                     	;# 
  3663  0492                     	;# 
  3664  0493                     	;# 
  3665  0494                     	;# 
  3666  0495                     	;# 
  3667  0495                     	;# 
  3668  0496                     	;# 
  3669  0497                     	;# 
  3670  0498                     	;# 
  3671  0499                     	;# 
  3672  049A                     	;# 
  3673  049B                     	;# 
  3674  049C                     	;# 
  3675  049D                     	;# 
  3676  050C                     	;# 
  3677  050C                     	;# 
  3678  050D                     	;# 
  3679  050E                     	;# 
  3680  050F                     	;# 
  3681  050F                     	;# 
  3682  0510                     	;# 
  3683  0511                     	;# 
  3684  0512                     	;# 
  3685  0512                     	;# 
  3686  0513                     	;# 
  3687  0514                     	;# 
  3688  0515                     	;# 
  3689  0515                     	;# 
  3690  0516                     	;# 
  3691  0517                     	;# 
  3692  0518                     	;# 
  3693  0519                     	;# 
  3694  051A                     	;# 
  3695  051B                     	;# 
  3696  051C                     	;# 
  3697  051D                     	;# 
  3698  058C                     	;# 
  3699  058C                     	;# 
  3700  058D                     	;# 
  3701  058E                     	;# 
  3702  058F                     	;# 
  3703  058F                     	;# 
  3704  0590                     	;# 
  3705  0591                     	;# 
  3706  0592                     	;# 
  3707  0593                     	;# 
  3708  060C                     	;# 
  3709  060D                     	;# 
  3710  060E                     	;# 
  3711  060F                     	;# 
  3712  0610                     	;# 
  3713  0611                     	;# 
  3714  0612                     	;# 
  3715  0613                     	;# 
  3716  0614                     	;# 
  3717  0616                     	;# 
  3718  0617                     	;# 
  3719  0618                     	;# 
  3720  0619                     	;# 
  3721  061A                     	;# 
  3722  061B                     	;# 
  3723  061C                     	;# 
  3724  061D                     	;# 
  3725  061E                     	;# 
  3726  068C                     	;# 
  3727  068D                     	;# 
  3728  068E                     	;# 
  3729  068F                     	;# 
  3730  0690                     	;# 
  3731  0691                     	;# 
  3732  0692                     	;# 
  3733  0693                     	;# 
  3734  0694                     	;# 
  3735  070C                     	;# 
  3736  070D                     	;# 
  3737  070E                     	;# 
  3738  070F                     	;# 
  3739  0710                     	;# 
  3740  0711                     	;# 
  3741  0712                     	;# 
  3742  0713                     	;# 
  3743  0714                     	;# 
  3744  0716                     	;# 
  3745  0717                     	;# 
  3746  0718                     	;# 
  3747  0719                     	;# 
  3748  071A                     	;# 
  3749  071B                     	;# 
  3750  071C                     	;# 
  3751  071D                     	;# 
  3752  071E                     	;# 
  3753  0796                     	;# 
  3754  0797                     	;# 
  3755  0798                     	;# 
  3756  0799                     	;# 
  3757  079A                     	;# 
  3758  079B                     	;# 
  3759  080C                     	;# 
  3760  080D                     	;# 
  3761  080E                     	;# 
  3762  080F                     	;# 
  3763  0810                     	;# 
  3764  0811                     	;# 
  3765  0812                     	;# 
  3766  0813                     	;# 
  3767  0814                     	;# 
  3768  081A                     	;# 
  3769  081B                     	;# 
  3770  081C                     	;# 
  3771  081D                     	;# 
  3772  081E                     	;# 
  3773  081F                     	;# 
  3774  088C                     	;# 
  3775  088D                     	;# 
  3776  088E                     	;# 
  3777  088F                     	;# 
  3778  0890                     	;# 
  3779  0891                     	;# 
  3780  0892                     	;# 
  3781  0893                     	;# 
  3782  0895                     	;# 
  3783  0896                     	;# 
  3784  0897                     	;# 
  3785  0898                     	;# 
  3786  0899                     	;# 
  3787  089A                     	;# 
  3788  089B                     	;# 
  3789  090C                     	;# 
  3790  090E                     	;# 
  3791  090F                     	;# 
  3792  091F                     	;# 
  3793  091F                     	;# 
  3794  098F                     	;# 
  3795  098F                     	;# 
  3796  0990                     	;# 
  3797  0991                     	;# 
  3798  0992                     	;# 
  3799  0993                     	;# 
  3800  0994                     	;# 
  3801  0995                     	;# 
  3802  0996                     	;# 
  3803  0997                     	;# 
  3804  0E0F                     	;# 
  3805  0E10                     	;# 
  3806  0E11                     	;# 
  3807  0E12                     	;# 
  3808  0E13                     	;# 
  3809  0E14                     	;# 
  3810  0E15                     	;# 
  3811  0E16                     	;# 
  3812  0E17                     	;# 
  3813  0E18                     	;# 
  3814  0E19                     	;# 
  3815  0E1A                     	;# 
  3816  0E1B                     	;# 
  3817  0E1C                     	;# 
  3818  0E1D                     	;# 
  3819  0E1E                     	;# 
  3820  0E1F                     	;# 
  3821  0E20                     	;# 
  3822  0E21                     	;# 
  3823  0E22                     	;# 
  3824  0E23                     	;# 
  3825  0E24                     	;# 
  3826  0E25                     	;# 
  3827  0E26                     	;# 
  3828  0E27                     	;# 
  3829  0E28                     	;# 
  3830  0E29                     	;# 
  3831  0E2A                     	;# 
  3832  0E2B                     	;# 
  3833  0E2C                     	;# 
  3834  0E2D                     	;# 
  3835  0E2E                     	;# 
  3836  0E2F                     	;# 
  3837  0E30                     	;# 
  3838  0E31                     	;# 
  3839  0E32                     	;# 
  3840  0E33                     	;# 
  3841  0E34                     	;# 
  3842  0E35                     	;# 
  3843  0E36                     	;# 
  3844  0E37                     	;# 
  3845  0E8F                     	;# 
  3846  0E90                     	;# 
  3847  0E91                     	;# 
  3848  0E92                     	;# 
  3849  0E93                     	;# 
  3850  0E94                     	;# 
  3851  0E95                     	;# 
  3852  0E96                     	;# 
  3853  0E97                     	;# 
  3854  0E9C                     	;# 
  3855  0E9D                     	;# 
  3856  0E9E                     	;# 
  3857  0EA1                     	;# 
  3858  0EA2                     	;# 
  3859  0EA3                     	;# 
  3860  0EA4                     	;# 
  3861  0EA5                     	;# 
  3862  0EA9                     	;# 
  3863  0EAA                     	;# 
  3864  0EAB                     	;# 
  3865  0EAC                     	;# 
  3866  0EB1                     	;# 
  3867  0EB2                     	;# 
  3868  0EB3                     	;# 
  3869  0EB8                     	;# 
  3870  0EB9                     	;# 
  3871  0EBA                     	;# 
  3872  0EBB                     	;# 
  3873  0EBC                     	;# 
  3874  0EBD                     	;# 
  3875  0EBE                     	;# 
  3876  0EC3                     	;# 
  3877  0EC5                     	;# 
  3878  0EC6                     	;# 
  3879  0EC7                     	;# 
  3880  0EC8                     	;# 
  3881  0EC9                     	;# 
  3882  0ECA                     	;# 
  3883  0ECB                     	;# 
  3884  0ECC                     	;# 
  3885  0F10                     	;# 
  3886  0F11                     	;# 
  3887  0F12                     	;# 
  3888  0F13                     	;# 
  3889  0F14                     	;# 
  3890  0F15                     	;# 
  3891  0F16                     	;# 
  3892  0F17                     	;# 
  3893  0F18                     	;# 
  3894  0F19                     	;# 
  3895  0F1A                     	;# 
  3896  0F1B                     	;# 
  3897  0F1C                     	;# 
  3898  0F1D                     	;# 
  3899  0F1E                     	;# 
  3900  0F1F                     	;# 
  3901  0F20                     	;# 
  3902  0F21                     	;# 
  3903  0F22                     	;# 
  3904  0F23                     	;# 
  3905  0F24                     	;# 
  3906  0F25                     	;# 
  3907  0F26                     	;# 
  3908  0F27                     	;# 
  3909  0F28                     	;# 
  3910  0F29                     	;# 
  3911  0F2A                     	;# 
  3912  0F2B                     	;# 
  3913  0F2C                     	;# 
  3914  0F2D                     	;# 
  3915  0F2E                     	;# 
  3916  0F2F                     	;# 
  3917  0F30                     	;# 
  3918  0F31                     	;# 
  3919  0F32                     	;# 
  3920  0F38                     	;# 
  3921  0F39                     	;# 
  3922  0F3A                     	;# 
  3923  0F3B                     	;# 
  3924  0F3C                     	;# 
  3925  0F3D                     	;# 
  3926  0F3E                     	;# 
  3927  0F3F                     	;# 
  3928  0F40                     	;# 
  3929  0F41                     	;# 
  3930  0F43                     	;# 
  3931  0F44                     	;# 
  3932  0F45                     	;# 
  3933  0F46                     	;# 
  3934  0F47                     	;# 
  3935  0F48                     	;# 
  3936  0F49                     	;# 
  3937  0F4A                     	;# 
  3938  0F4B                     	;# 
  3939  0F4C                     	;# 
  3940  0F4E                     	;# 
  3941  0F4F                     	;# 
  3942  0F50                     	;# 
  3943  0F51                     	;# 
  3944  0F52                     	;# 
  3945  0F53                     	;# 
  3946  0F54                     	;# 
  3947  0F55                     	;# 
  3948  0F56                     	;# 
  3949  0F57                     	;# 
  3950  0F59                     	;# 
  3951  0F5A                     	;# 
  3952  0F5B                     	;# 
  3953  0F5C                     	;# 
  3954  0F5D                     	;# 
  3955  0F61                     	;# 
  3956  0F62                     	;# 
  3957  0F64                     	;# 
  3958  0F65                     	;# 
  3959  0F66                     	;# 
  3960  0F67                     	;# 
  3961  0F68                     	;# 
  3962  0F69                     	;# 
  3963  0F6A                     	;# 
  3964  0F6B                     	;# 
  3965  0F6C                     	;# 
  3966  0F6D                     	;# 
  3967  0FE4                     	;# 
  3968  0FE5                     	;# 
  3969  0FE6                     	;# 
  3970  0FE7                     	;# 
  3971  0FE8                     	;# 
  3972  0FE9                     	;# 
  3973  0FEA                     	;# 
  3974  0FEB                     	;# 
  3975  0FED                     	;# 
  3976  0FEE                     	;# 
  3977  0FEF                     	;# 
  3978  0000                     	;# 
  3979  0001                     	;# 
  3980  0002                     	;# 
  3981  0003                     	;# 
  3982  0004                     	;# 
  3983  0005                     	;# 
  3984  0006                     	;# 
  3985  0007                     	;# 
  3986  0008                     	;# 
  3987  0009                     	;# 
  3988  000A                     	;# 
  3989  000B                     	;# 
  3990  000C                     	;# 
  3991  000D                     	;# 
  3992  000E                     	;# 
  3993  000F                     	;# 
  3994  0010                     	;# 
  3995  0011                     	;# 
  3996  0012                     	;# 
  3997  0013                     	;# 
  3998  0014                     	;# 
  3999  0015                     	;# 
  4000  0016                     	;# 
  4001  0017                     	;# 
  4002  0018                     	;# 
  4003  0019                     	;# 
  4004  001A                     	;# 
  4005  001C                     	;# 
  4006  001C                     	;# 
  4007  001D                     	;# 
  4008  001D                     	;# 
  4009  001E                     	;# 
  4010  001F                     	;# 
  4011  008C                     	;# 
  4012  008C                     	;# 
  4013  008D                     	;# 
  4014  008E                     	;# 
  4015  008E                     	;# 
  4016  008F                     	;# 
  4017  0090                     	;# 
  4018  0090                     	;# 
  4019  0091                     	;# 
  4020  0093                     	;# 
  4021  0094                     	;# 
  4022  0095                     	;# 
  4023  0096                     	;# 
  4024  0097                     	;# 
  4025  0098                     	;# 
  4026  0099                     	;# 
  4027  009A                     	;# 
  4028  009B                     	;# 
  4029  009C                     	;# 
  4030  009D                     	;# 
  4031  009E                     	;# 
  4032  010C                     	;# 
  4033  010D                     	;# 
  4034  010E                     	;# 
  4035  010E                     	;# 
  4036  010F                     	;# 
  4037  0110                     	;# 
  4038  0110                     	;# 
  4039  0111                     	;# 
  4040  0112                     	;# 
  4041  0112                     	;# 
  4042  0113                     	;# 
  4043  0114                     	;# 
  4044  0114                     	;# 
  4045  0115                     	;# 
  4046  0116                     	;# 
  4047  0116                     	;# 
  4048  0117                     	;# 
  4049  0119                     	;# 
  4050  0119                     	;# 
  4051  0119                     	;# 
  4052  011A                     	;# 
  4053  011A                     	;# 
  4054  011A                     	;# 
  4055  011B                     	;# 
  4056  011B                     	;# 
  4057  011B                     	;# 
  4058  011B                     	;# 
  4059  011B                     	;# 
  4060  011C                     	;# 
  4061  011C                     	;# 
  4062  011C                     	;# 
  4063  011D                     	;# 
  4064  011D                     	;# 
  4065  011D                     	;# 
  4066  011E                     	;# 
  4067  011E                     	;# 
  4068  011E                     	;# 
  4069  011F                     	;# 
  4070  011F                     	;# 
  4071  011F                     	;# 
  4072  011F                     	;# 
  4073  011F                     	;# 
  4074  018C                     	;# 
  4075  018D                     	;# 
  4076  018E                     	;# 
  4077  018F                     	;# 
  4078  0190                     	;# 
  4079  0191                     	;# 
  4080  0192                     	;# 
  4081  0196                     	;# 
  4082  0197                     	;# 
  4083  0198                     	;# 
  4084  0199                     	;# 
  4085  019A                     	;# 
  4086  019B                     	;# 
  4087  019C                     	;# 
  4088  020C                     	;# 
  4089  020C                     	;# 
  4090  020D                     	;# 
  4091  020E                     	;# 
  4092  020F                     	;# 
  4093  020F                     	;# 
  4094  0210                     	;# 
  4095  0210                     	;# 
  4096  0211                     	;# 
  4097  0211                     	;# 
  4098  0212                     	;# 
  4099  0212                     	;# 
  4100  0213                     	;# 
  4101  0214                     	;# 
  4102  0215                     	;# 
  4103  0215                     	;# 
  4104  0216                     	;# 
  4105  0216                     	;# 
  4106  0217                     	;# 
  4107  0217                     	;# 
  4108  0218                     	;# 
  4109  0218                     	;# 
  4110  0219                     	;# 
  4111  021A                     	;# 
  4112  021B                     	;# 
  4113  021B                     	;# 
  4114  021C                     	;# 
  4115  021C                     	;# 
  4116  021D                     	;# 
  4117  021D                     	;# 
  4118  021E                     	;# 
  4119  021F                     	;# 
  4120  028C                     	;# 
  4121  028C                     	;# 
  4122  028D                     	;# 
  4123  028D                     	;# 
  4124  028E                     	;# 
  4125  028F                     	;# 
  4126  0290                     	;# 
  4127  0290                     	;# 
  4128  0291                     	;# 
  4129  0292                     	;# 
  4130  0292                     	;# 
  4131  0293                     	;# 
  4132  0293                     	;# 
  4133  0294                     	;# 
  4134  0295                     	;# 
  4135  0296                     	;# 
  4136  0296                     	;# 
  4137  0297                     	;# 
  4138  0298                     	;# 
  4139  0298                     	;# 
  4140  0299                     	;# 
  4141  0299                     	;# 
  4142  029A                     	;# 
  4143  029B                     	;# 
  4144  029C                     	;# 
  4145  029C                     	;# 
  4146  029D                     	;# 
  4147  030C                     	;# 
  4148  030C                     	;# 
  4149  030D                     	;# 
  4150  030E                     	;# 
  4151  030F                     	;# 
  4152  0310                     	;# 
  4153  0310                     	;# 
  4154  0311                     	;# 
  4155  0312                     	;# 
  4156  0313                     	;# 
  4157  0314                     	;# 
  4158  0314                     	;# 
  4159  0315                     	;# 
  4160  0316                     	;# 
  4161  0317                     	;# 
  4162  0318                     	;# 
  4163  0318                     	;# 
  4164  0319                     	;# 
  4165  031A                     	;# 
  4166  031B                     	;# 
  4167  031C                     	;# 
  4168  031C                     	;# 
  4169  031D                     	;# 
  4170  031E                     	;# 
  4171  031F                     	;# 
  4172  038C                     	;# 
  4173  038C                     	;# 
  4174  038D                     	;# 
  4175  038E                     	;# 
  4176  0390                     	;# 
  4177  0390                     	;# 
  4178  0391                     	;# 
  4179  0392                     	;# 
  4180  040C                     	;# 
  4181  040D                     	;# 
  4182  040E                     	;# 
  4183  040F                     	;# 
  4184  0410                     	;# 
  4185  0411                     	;# 
  4186  0416                     	;# 
  4187  0416                     	;# 
  4188  0417                     	;# 
  4189  0418                     	;# 
  4190  0418                     	;# 
  4191  0419                     	;# 
  4192  041A                     	;# 
  4193  041A                     	;# 
  4194  041B                     	;# 
  4195  041C                     	;# 
  4196  041C                     	;# 
  4197  041D                     	;# 
  4198  041E                     	;# 
  4199  041F                     	;# 
  4200  048C                     	;# 
  4201  048C                     	;# 
  4202  048D                     	;# 
  4203  048E                     	;# 
  4204  048F                     	;# 
  4205  048F                     	;# 
  4206  0490                     	;# 
  4207  0491                     	;# 
  4208  0492                     	;# 
  4209  0492                     	;# 
  4210  0493                     	;# 
  4211  0494                     	;# 
  4212  0495                     	;# 
  4213  0495                     	;# 
  4214  0496                     	;# 
  4215  0497                     	;# 
  4216  0498                     	;# 
  4217  0499                     	;# 
  4218  049A                     	;# 
  4219  049B                     	;# 
  4220  049C                     	;# 
  4221  049D                     	;# 
  4222  050C                     	;# 
  4223  050C                     	;# 
  4224  050D                     	;# 
  4225  050E                     	;# 
  4226  050F                     	;# 
  4227  050F                     	;# 
  4228  0510                     	;# 
  4229  0511                     	;# 
  4230  0512                     	;# 
  4231  0512                     	;# 
  4232  0513                     	;# 
  4233  0514                     	;# 
  4234  0515                     	;# 
  4235  0515                     	;# 
  4236  0516                     	;# 
  4237  0517                     	;# 
  4238  0518                     	;# 
  4239  0519                     	;# 
  4240  051A                     	;# 
  4241  051B                     	;# 
  4242  051C                     	;# 
  4243  051D                     	;# 
  4244  058C                     	;# 
  4245  058C                     	;# 
  4246  058D                     	;# 
  4247  058E                     	;# 
  4248  058F                     	;# 
  4249  058F                     	;# 
  4250  0590                     	;# 
  4251  0591                     	;# 
  4252  0592                     	;# 
  4253  0593                     	;# 
  4254  060C                     	;# 
  4255  060D                     	;# 
  4256  060E                     	;# 
  4257  060F                     	;# 
  4258  0610                     	;# 
  4259  0611                     	;# 
  4260  0612                     	;# 
  4261  0613                     	;# 
  4262  0614                     	;# 
  4263  0616                     	;# 
  4264  0617                     	;# 
  4265  0618                     	;# 
  4266  0619                     	;# 
  4267  061A                     	;# 
  4268  061B                     	;# 
  4269  061C                     	;# 
  4270  061D                     	;# 
  4271  061E                     	;# 
  4272  068C                     	;# 
  4273  068D                     	;# 
  4274  068E                     	;# 
  4275  068F                     	;# 
  4276  0690                     	;# 
  4277  0691                     	;# 
  4278  0692                     	;# 
  4279  0693                     	;# 
  4280  0694                     	;# 
  4281  070C                     	;# 
  4282  070D                     	;# 
  4283  070E                     	;# 
  4284  070F                     	;# 
  4285  0710                     	;# 
  4286  0711                     	;# 
  4287  0712                     	;# 
  4288  0713                     	;# 
  4289  0714                     	;# 
  4290  0716                     	;# 
  4291  0717                     	;# 
  4292  0718                     	;# 
  4293  0719                     	;# 
  4294  071A                     	;# 
  4295  071B                     	;# 
  4296  071C                     	;# 
  4297  071D                     	;# 
  4298  071E                     	;# 
  4299  0796                     	;# 
  4300  0797                     	;# 
  4301  0798                     	;# 
  4302  0799                     	;# 
  4303  079A                     	;# 
  4304  079B                     	;# 
  4305  080C                     	;# 
  4306  080D                     	;# 
  4307  080E                     	;# 
  4308  080F                     	;# 
  4309  0810                     	;# 
  4310  0811                     	;# 
  4311  0812                     	;# 
  4312  0813                     	;# 
  4313  0814                     	;# 
  4314  081A                     	;# 
  4315  081B                     	;# 
  4316  081C                     	;# 
  4317  081D                     	;# 
  4318  081E                     	;# 
  4319  081F                     	;# 
  4320  088C                     	;# 
  4321  088D                     	;# 
  4322  088E                     	;# 
  4323  088F                     	;# 
  4324  0890                     	;# 
  4325  0891                     	;# 
  4326  0892                     	;# 
  4327  0893                     	;# 
  4328  0895                     	;# 
  4329  0896                     	;# 
  4330  0897                     	;# 
  4331  0898                     	;# 
  4332  0899                     	;# 
  4333  089A                     	;# 
  4334  089B                     	;# 
  4335  090C                     	;# 
  4336  090E                     	;# 
  4337  090F                     	;# 
  4338  091F                     	;# 
  4339  091F                     	;# 
  4340  098F                     	;# 
  4341  098F                     	;# 
  4342  0990                     	;# 
  4343  0991                     	;# 
  4344  0992                     	;# 
  4345  0993                     	;# 
  4346  0994                     	;# 
  4347  0995                     	;# 
  4348  0996                     	;# 
  4349  0997                     	;# 
  4350  0E0F                     	;# 
  4351  0E10                     	;# 
  4352  0E11                     	;# 
  4353  0E12                     	;# 
  4354  0E13                     	;# 
  4355  0E14                     	;# 
  4356  0E15                     	;# 
  4357  0E16                     	;# 
  4358  0E17                     	;# 
  4359  0E18                     	;# 
  4360  0E19                     	;# 
  4361  0E1A                     	;# 
  4362  0E1B                     	;# 
  4363  0E1C                     	;# 
  4364  0E1D                     	;# 
  4365  0E1E                     	;# 
  4366  0E1F                     	;# 
  4367  0E20                     	;# 
  4368  0E21                     	;# 
  4369  0E22                     	;# 
  4370  0E23                     	;# 
  4371  0E24                     	;# 
  4372  0E25                     	;# 
  4373  0E26                     	;# 
  4374  0E27                     	;# 
  4375  0E28                     	;# 
  4376  0E29                     	;# 
  4377  0E2A                     	;# 
  4378  0E2B                     	;# 
  4379  0E2C                     	;# 
  4380  0E2D                     	;# 
  4381  0E2E                     	;# 
  4382  0E2F                     	;# 
  4383  0E30                     	;# 
  4384  0E31                     	;# 
  4385  0E32                     	;# 
  4386  0E33                     	;# 
  4387  0E34                     	;# 
  4388  0E35                     	;# 
  4389  0E36                     	;# 
  4390  0E37                     	;# 
  4391  0E8F                     	;# 
  4392  0E90                     	;# 
  4393  0E91                     	;# 
  4394  0E92                     	;# 
  4395  0E93                     	;# 
  4396  0E94                     	;# 
  4397  0E95                     	;# 
  4398  0E96                     	;# 
  4399  0E97                     	;# 
  4400  0E9C                     	;# 
  4401  0E9D                     	;# 
  4402  0E9E                     	;# 
  4403  0EA1                     	;# 
  4404  0EA2                     	;# 
  4405  0EA3                     	;# 
  4406  0EA4                     	;# 
  4407  0EA5                     	;# 
  4408  0EA9                     	;# 
  4409  0EAA                     	;# 
  4410  0EAB                     	;# 
  4411  0EAC                     	;# 
  4412  0EB1                     	;# 
  4413  0EB2                     	;# 
  4414  0EB3                     	;# 
  4415  0EB8                     	;# 
  4416  0EB9                     	;# 
  4417  0EBA                     	;# 
  4418  0EBB                     	;# 
  4419  0EBC                     	;# 
  4420  0EBD                     	;# 
  4421  0EBE                     	;# 
  4422  0EC3                     	;# 
  4423  0EC5                     	;# 
  4424  0EC6                     	;# 
  4425  0EC7                     	;# 
  4426  0EC8                     	;# 
  4427  0EC9                     	;# 
  4428  0ECA                     	;# 
  4429  0ECB                     	;# 
  4430  0ECC                     	;# 
  4431  0F10                     	;# 
  4432  0F11                     	;# 
  4433  0F12                     	;# 
  4434  0F13                     	;# 
  4435  0F14                     	;# 
  4436  0F15                     	;# 
  4437  0F16                     	;# 
  4438  0F17                     	;# 
  4439  0F18                     	;# 
  4440  0F19                     	;# 
  4441  0F1A                     	;# 
  4442  0F1B                     	;# 
  4443  0F1C                     	;# 
  4444  0F1D                     	;# 
  4445  0F1E                     	;# 
  4446  0F1F                     	;# 
  4447  0F20                     	;# 
  4448  0F21                     	;# 
  4449  0F22                     	;# 
  4450  0F23                     	;# 
  4451  0F24                     	;# 
  4452  0F25                     	;# 
  4453  0F26                     	;# 
  4454  0F27                     	;# 
  4455  0F28                     	;# 
  4456  0F29                     	;# 
  4457  0F2A                     	;# 
  4458  0F2B                     	;# 
  4459  0F2C                     	;# 
  4460  0F2D                     	;# 
  4461  0F2E                     	;# 
  4462  0F2F                     	;# 
  4463  0F30                     	;# 
  4464  0F31                     	;# 
  4465  0F32                     	;# 
  4466  0F38                     	;# 
  4467  0F39                     	;# 
  4468  0F3A                     	;# 
  4469  0F3B                     	;# 
  4470  0F3C                     	;# 
  4471  0F3D                     	;# 
  4472  0F3E                     	;# 
  4473  0F3F                     	;# 
  4474  0F40                     	;# 
  4475  0F41                     	;# 
  4476  0F43                     	;# 
  4477  0F44                     	;# 
  4478  0F45                     	;# 
  4479  0F46                     	;# 
  4480  0F47                     	;# 
  4481  0F48                     	;# 
  4482  0F49                     	;# 
  4483  0F4A                     	;# 
  4484  0F4B                     	;# 
  4485  0F4C                     	;# 
  4486  0F4E                     	;# 
  4487  0F4F                     	;# 
  4488  0F50                     	;# 
  4489  0F51                     	;# 
  4490  0F52                     	;# 
  4491  0F53                     	;# 
  4492  0F54                     	;# 
  4493  0F55                     	;# 
  4494  0F56                     	;# 
  4495  0F57                     	;# 
  4496  0F59                     	;# 
  4497  0F5A                     	;# 
  4498  0F5B                     	;# 
  4499  0F5C                     	;# 
  4500  0F5D                     	;# 
  4501  0F61                     	;# 
  4502  0F62                     	;# 
  4503  0F64                     	;# 
  4504  0F65                     	;# 
  4505  0F66                     	;# 
  4506  0F67                     	;# 
  4507  0F68                     	;# 
  4508  0F69                     	;# 
  4509  0F6A                     	;# 
  4510  0F6B                     	;# 
  4511  0F6C                     	;# 
  4512  0F6D                     	;# 
  4513  0FE4                     	;# 
  4514  0FE5                     	;# 
  4515  0FE6                     	;# 
  4516  0FE7                     	;# 
  4517  0FE8                     	;# 
  4518  0FE9                     	;# 
  4519  0FEA                     	;# 
  4520  0FEB                     	;# 
  4521  0FED                     	;# 
  4522  0FEE                     	;# 
  4523  0FEF                     	;# 
  4524  0000                     	;# 
  4525  0001                     	;# 
  4526  0002                     	;# 
  4527  0003                     	;# 
  4528  0004                     	;# 
  4529  0005                     	;# 
  4530  0006                     	;# 
  4531  0007                     	;# 
  4532  0008                     	;# 
  4533  0009                     	;# 
  4534  000A                     	;# 
  4535  000B                     	;# 
  4536  000C                     	;# 
  4537  000D                     	;# 
  4538  000E                     	;# 
  4539  000F                     	;# 
  4540  0010                     	;# 
  4541  0011                     	;# 
  4542  0012                     	;# 
  4543  0013                     	;# 
  4544  0014                     	;# 
  4545  0015                     	;# 
  4546  0016                     	;# 
  4547  0017                     	;# 
  4548  0018                     	;# 
  4549  0019                     	;# 
  4550  001A                     	;# 
  4551  001C                     	;# 
  4552  001C                     	;# 
  4553  001D                     	;# 
  4554  001D                     	;# 
  4555  001E                     	;# 
  4556  001F                     	;# 
  4557  008C                     	;# 
  4558  008C                     	;# 
  4559  008D                     	;# 
  4560  008E                     	;# 
  4561  008E                     	;# 
  4562  008F                     	;# 
  4563  0090                     	;# 
  4564  0090                     	;# 
  4565  0091                     	;# 
  4566  0093                     	;# 
  4567  0094                     	;# 
  4568  0095                     	;# 
  4569  0096                     	;# 
  4570  0097                     	;# 
  4571  0098                     	;# 
  4572  0099                     	;# 
  4573  009A                     	;# 
  4574  009B                     	;# 
  4575  009C                     	;# 
  4576  009D                     	;# 
  4577  009E                     	;# 
  4578  010C                     	;# 
  4579  010D                     	;# 
  4580  010E                     	;# 
  4581  010E                     	;# 
  4582  010F                     	;# 
  4583  0110                     	;# 
  4584  0110                     	;# 
  4585  0111                     	;# 
  4586  0112                     	;# 
  4587  0112                     	;# 
  4588  0113                     	;# 
  4589  0114                     	;# 
  4590  0114                     	;# 
  4591  0115                     	;# 
  4592  0116                     	;# 
  4593  0116                     	;# 
  4594  0117                     	;# 
  4595  0119                     	;# 
  4596  0119                     	;# 
  4597  0119                     	;# 
  4598  011A                     	;# 
  4599  011A                     	;# 
  4600  011A                     	;# 
  4601  011B                     	;# 
  4602  011B                     	;# 
  4603  011B                     	;# 
  4604  011B                     	;# 
  4605  011B                     	;# 
  4606  011C                     	;# 
  4607  011C                     	;# 
  4608  011C                     	;# 
  4609  011D                     	;# 
  4610  011D                     	;# 
  4611  011D                     	;# 
  4612  011E                     	;# 
  4613  011E                     	;# 
  4614  011E                     	;# 
  4615  011F                     	;# 
  4616  011F                     	;# 
  4617  011F                     	;# 
  4618  011F                     	;# 
  4619  011F                     	;# 
  4620  018C                     	;# 
  4621  018D                     	;# 
  4622  018E                     	;# 
  4623  018F                     	;# 
  4624  0190                     	;# 
  4625  0191                     	;# 
  4626  0192                     	;# 
  4627  0196                     	;# 
  4628  0197                     	;# 
  4629  0198                     	;# 
  4630  0199                     	;# 
  4631  019A                     	;# 
  4632  019B                     	;# 
  4633  019C                     	;# 
  4634  020C                     	;# 
  4635  020C                     	;# 
  4636  020D                     	;# 
  4637  020E                     	;# 
  4638  020F                     	;# 
  4639  020F                     	;# 
  4640  0210                     	;# 
  4641  0210                     	;# 
  4642  0211                     	;# 
  4643  0211                     	;# 
  4644  0212                     	;# 
  4645  0212                     	;# 
  4646  0213                     	;# 
  4647  0214                     	;# 
  4648  0215                     	;# 
  4649  0215                     	;# 
  4650  0216                     	;# 
  4651  0216                     	;# 
  4652  0217                     	;# 
  4653  0217                     	;# 
  4654  0218                     	;# 
  4655  0218                     	;# 
  4656  0219                     	;# 
  4657  021A                     	;# 
  4658  021B                     	;# 
  4659  021B                     	;# 
  4660  021C                     	;# 
  4661  021C                     	;# 
  4662  021D                     	;# 
  4663  021D                     	;# 
  4664  021E                     	;# 
  4665  021F                     	;# 
  4666  028C                     	;# 
  4667  028C                     	;# 
  4668  028D                     	;# 
  4669  028D                     	;# 
  4670  028E                     	;# 
  4671  028F                     	;# 
  4672  0290                     	;# 
  4673  0290                     	;# 
  4674  0291                     	;# 
  4675  0292                     	;# 
  4676  0292                     	;# 
  4677  0293                     	;# 
  4678  0293                     	;# 
  4679  0294                     	;# 
  4680  0295                     	;# 
  4681  0296                     	;# 
  4682  0296                     	;# 
  4683  0297                     	;# 
  4684  0298                     	;# 
  4685  0298                     	;# 
  4686  0299                     	;# 
  4687  0299                     	;# 
  4688  029A                     	;# 
  4689  029B                     	;# 
  4690  029C                     	;# 
  4691  029C                     	;# 
  4692  029D                     	;# 
  4693  030C                     	;# 
  4694  030C                     	;# 
  4695  030D                     	;# 
  4696  030E                     	;# 
  4697  030F                     	;# 
  4698  0310                     	;# 
  4699  0310                     	;# 
  4700  0311                     	;# 
  4701  0312                     	;# 
  4702  0313                     	;# 
  4703  0314                     	;# 
  4704  0314                     	;# 
  4705  0315                     	;# 
  4706  0316                     	;# 
  4707  0317                     	;# 
  4708  0318                     	;# 
  4709  0318                     	;# 
  4710  0319                     	;# 
  4711  031A                     	;# 
  4712  031B                     	;# 
  4713  031C                     	;# 
  4714  031C                     	;# 
  4715  031D                     	;# 
  4716  031E                     	;# 
  4717  031F                     	;# 
  4718  038C                     	;# 
  4719  038C                     	;# 
  4720  038D                     	;# 
  4721  038E                     	;# 
  4722  0390                     	;# 
  4723  0390                     	;# 
  4724  0391                     	;# 
  4725  0392                     	;# 
  4726  040C                     	;# 
  4727  040D                     	;# 
  4728  040E                     	;# 
  4729  040F                     	;# 
  4730  0410                     	;# 
  4731  0411                     	;# 
  4732  0416                     	;# 
  4733  0416                     	;# 
  4734  0417                     	;# 
  4735  0418                     	;# 
  4736  0418                     	;# 
  4737  0419                     	;# 
  4738  041A                     	;# 
  4739  041A                     	;# 
  4740  041B                     	;# 
  4741  041C                     	;# 
  4742  041C                     	;# 
  4743  041D                     	;# 
  4744  041E                     	;# 
  4745  041F                     	;# 
  4746  048C                     	;# 
  4747  048C                     	;# 
  4748  048D                     	;# 
  4749  048E                     	;# 
  4750  048F                     	;# 
  4751  048F                     	;# 
  4752  0490                     	;# 
  4753  0491                     	;# 
  4754  0492                     	;# 
  4755  0492                     	;# 
  4756  0493                     	;# 
  4757  0494                     	;# 
  4758  0495                     	;# 
  4759  0495                     	;# 
  4760  0496                     	;# 
  4761  0497                     	;# 
  4762  0498                     	;# 
  4763  0499                     	;# 
  4764  049A                     	;# 
  4765  049B                     	;# 
  4766  049C                     	;# 
  4767  049D                     	;# 
  4768  050C                     	;# 
  4769  050C                     	;# 
  4770  050D                     	;# 
  4771  050E                     	;# 
  4772  050F                     	;# 
  4773  050F                     	;# 
  4774  0510                     	;# 
  4775  0511                     	;# 
  4776  0512                     	;# 
  4777  0512                     	;# 
  4778  0513                     	;# 
  4779  0514                     	;# 
  4780  0515                     	;# 
  4781  0515                     	;# 
  4782  0516                     	;# 
  4783  0517                     	;# 
  4784  0518                     	;# 
  4785  0519                     	;# 
  4786  051A                     	;# 
  4787  051B                     	;# 
  4788  051C                     	;# 
  4789  051D                     	;# 
  4790  058C                     	;# 
  4791  058C                     	;# 
  4792  058D                     	;# 
  4793  058E                     	;# 
  4794  058F                     	;# 
  4795  058F                     	;# 
  4796  0590                     	;# 
  4797  0591                     	;# 
  4798  0592                     	;# 
  4799  0593                     	;# 
  4800  060C                     	;# 
  4801  060D                     	;# 
  4802  060E                     	;# 
  4803  060F                     	;# 
  4804  0610                     	;# 
  4805  0611                     	;# 
  4806  0612                     	;# 
  4807  0613                     	;# 
  4808  0614                     	;# 
  4809  0616                     	;# 
  4810  0617                     	;# 
  4811  0618                     	;# 
  4812  0619                     	;# 
  4813  061A                     	;# 
  4814  061B                     	;# 
  4815  061C                     	;# 
  4816  061D                     	;# 
  4817  061E                     	;# 
  4818  068C                     	;# 
  4819  068D                     	;# 
  4820  068E                     	;# 
  4821  068F                     	;# 
  4822  0690                     	;# 
  4823  0691                     	;# 
  4824  0692                     	;# 
  4825  0693                     	;# 
  4826  0694                     	;# 
  4827  070C                     	;# 
  4828  070D                     	;# 
  4829  070E                     	;# 
  4830  070F                     	;# 
  4831  0710                     	;# 
  4832  0711                     	;# 
  4833  0712                     	;# 
  4834  0713                     	;# 
  4835  0714                     	;# 
  4836  0716                     	;# 
  4837  0717                     	;# 
  4838  0718                     	;# 
  4839  0719                     	;# 
  4840  071A                     	;# 
  4841  071B                     	;# 
  4842  071C                     	;# 
  4843  071D                     	;# 
  4844  071E                     	;# 
  4845  0796                     	;# 
  4846  0797                     	;# 
  4847  0798                     	;# 
  4848  0799                     	;# 
  4849  079A                     	;# 
  4850  079B                     	;# 
  4851  080C                     	;# 
  4852  080D                     	;# 
  4853  080E                     	;# 
  4854  080F                     	;# 
  4855  0810                     	;# 
  4856  0811                     	;# 
  4857  0812                     	;# 
  4858  0813                     	;# 
  4859  0814                     	;# 
  4860  081A                     	;# 
  4861  081B                     	;# 
  4862  081C                     	;# 
  4863  081D                     	;# 
  4864  081E                     	;# 
  4865  081F                     	;# 
  4866  088C                     	;# 
  4867  088D                     	;# 
  4868  088E                     	;# 
  4869  088F                     	;# 
  4870  0890                     	;# 
  4871  0891                     	;# 
  4872  0892                     	;# 
  4873  0893                     	;# 
  4874  0895                     	;# 
  4875  0896                     	;# 
  4876  0897                     	;# 
  4877  0898                     	;# 
  4878  0899                     	;# 
  4879  089A                     	;# 
  4880  089B                     	;# 
  4881  090C                     	;# 
  4882  090E                     	;# 
  4883  090F                     	;# 
  4884  091F                     	;# 
  4885  091F                     	;# 
  4886  098F                     	;# 
  4887  098F                     	;# 
  4888  0990                     	;# 
  4889  0991                     	;# 
  4890  0992                     	;# 
  4891  0993                     	;# 
  4892  0994                     	;# 
  4893  0995                     	;# 
  4894  0996                     	;# 
  4895  0997                     	;# 
  4896  0E0F                     	;# 
  4897  0E10                     	;# 
  4898  0E11                     	;# 
  4899  0E12                     	;# 
  4900  0E13                     	;# 
  4901  0E14                     	;# 
  4902  0E15                     	;# 
  4903  0E16                     	;# 
  4904  0E17                     	;# 
  4905  0E18                     	;# 
  4906  0E19                     	;# 
  4907  0E1A                     	;# 
  4908  0E1B                     	;# 
  4909  0E1C                     	;# 
  4910  0E1D                     	;# 
  4911  0E1E                     	;# 
  4912  0E1F                     	;# 
  4913  0E20                     	;# 
  4914  0E21                     	;# 
  4915  0E22                     	;# 
  4916  0E23                     	;# 
  4917  0E24                     	;# 
  4918  0E25                     	;# 
  4919  0E26                     	;# 
  4920  0E27                     	;# 
  4921  0E28                     	;# 
  4922  0E29                     	;# 
  4923  0E2A                     	;# 
  4924  0E2B                     	;# 
  4925  0E2C                     	;# 
  4926  0E2D                     	;# 
  4927  0E2E                     	;# 
  4928  0E2F                     	;# 
  4929  0E30                     	;# 
  4930  0E31                     	;# 
  4931  0E32                     	;# 
  4932  0E33                     	;# 
  4933  0E34                     	;# 
  4934  0E35                     	;# 
  4935  0E36                     	;# 
  4936  0E37                     	;# 
  4937  0E8F                     	;# 
  4938  0E90                     	;# 
  4939  0E91                     	;# 
  4940  0E92                     	;# 
  4941  0E93                     	;# 
  4942  0E94                     	;# 
  4943  0E95                     	;# 
  4944  0E96                     	;# 
  4945  0E97                     	;# 
  4946  0E9C                     	;# 
  4947  0E9D                     	;# 
  4948  0E9E                     	;# 
  4949  0EA1                     	;# 
  4950  0EA2                     	;# 
  4951  0EA3                     	;# 
  4952  0EA4                     	;# 
  4953  0EA5                     	;# 
  4954  0EA9                     	;# 
  4955  0EAA                     	;# 
  4956  0EAB                     	;# 
  4957  0EAC                     	;# 
  4958  0EB1                     	;# 
  4959  0EB2                     	;# 
  4960  0EB3                     	;# 
  4961  0EB8                     	;# 
  4962  0EB9                     	;# 
  4963  0EBA                     	;# 
  4964  0EBB                     	;# 
  4965  0EBC                     	;# 
  4966  0EBD                     	;# 
  4967  0EBE                     	;# 
  4968  0EC3                     	;# 
  4969  0EC5                     	;# 
  4970  0EC6                     	;# 
  4971  0EC7                     	;# 
  4972  0EC8                     	;# 
  4973  0EC9                     	;# 
  4974  0ECA                     	;# 
  4975  0ECB                     	;# 
  4976  0ECC                     	;# 
  4977  0F10                     	;# 
  4978  0F11                     	;# 
  4979  0F12                     	;# 
  4980  0F13                     	;# 
  4981  0F14                     	;# 
  4982  0F15                     	;# 
  4983  0F16                     	;# 
  4984  0F17                     	;# 
  4985  0F18                     	;# 
  4986  0F19                     	;# 
  4987  0F1A                     	;# 
  4988  0F1B                     	;# 
  4989  0F1C                     	;# 
  4990  0F1D                     	;# 
  4991  0F1E                     	;# 
  4992  0F1F                     	;# 
  4993  0F20                     	;# 
  4994  0F21                     	;# 
  4995  0F22                     	;# 
  4996  0F23                     	;# 
  4997  0F24                     	;# 
  4998  0F25                     	;# 
  4999  0F26                     	;# 
  5000  0F27                     	;# 
  5001  0F28                     	;# 
  5002  0F29                     	;# 
  5003  0F2A                     	;# 
  5004  0F2B                     	;# 
  5005  0F2C                     	;# 
  5006  0F2D                     	;# 
  5007  0F2E                     	;# 
  5008  0F2F                     	;# 
  5009  0F30                     	;# 
  5010  0F31                     	;# 
  5011  0F32                     	;# 
  5012  0F38                     	;# 
  5013  0F39                     	;# 
  5014  0F3A                     	;# 
  5015  0F3B                     	;# 
  5016  0F3C                     	;# 
  5017  0F3D                     	;# 
  5018  0F3E                     	;# 
  5019  0F3F                     	;# 
  5020  0F40                     	;# 
  5021  0F41                     	;# 
  5022  0F43                     	;# 
  5023  0F44                     	;# 
  5024  0F45                     	;# 
  5025  0F46                     	;# 
  5026  0F47                     	;# 
  5027  0F48                     	;# 
  5028  0F49                     	;# 
  5029  0F4A                     	;# 
  5030  0F4B                     	;# 
  5031  0F4C                     	;# 
  5032  0F4E                     	;# 
  5033  0F4F                     	;# 
  5034  0F50                     	;# 
  5035  0F51                     	;# 
  5036  0F52                     	;# 
  5037  0F53                     	;# 
  5038  0F54                     	;# 
  5039  0F55                     	;# 
  5040  0F56                     	;# 
  5041  0F57                     	;# 
  5042  0F59                     	;# 
  5043  0F5A                     	;# 
  5044  0F5B                     	;# 
  5045  0F5C                     	;# 
  5046  0F5D                     	;# 
  5047  0F61                     	;# 
  5048  0F62                     	;# 
  5049  0F64                     	;# 
  5050  0F65                     	;# 
  5051  0F66                     	;# 
  5052  0F67                     	;# 
  5053  0F68                     	;# 
  5054  0F69                     	;# 
  5055  0F6A                     	;# 
  5056  0F6B                     	;# 
  5057  0F6C                     	;# 
  5058  0F6D                     	;# 
  5059  0FE4                     	;# 
  5060  0FE5                     	;# 
  5061  0FE6                     	;# 
  5062  0FE7                     	;# 
  5063  0FE8                     	;# 
  5064  0FE9                     	;# 
  5065  0FEA                     	;# 
  5066  0FEB                     	;# 
  5067  0FED                     	;# 
  5068  0FEE                     	;# 
  5069  0FEF                     	;# 
  5070  0000                     	;# 
  5071  0001                     	;# 
  5072  0002                     	;# 
  5073  0003                     	;# 
  5074  0004                     	;# 
  5075  0005                     	;# 
  5076  0006                     	;# 
  5077  0007                     	;# 
  5078  0008                     	;# 
  5079  0009                     	;# 
  5080  000A                     	;# 
  5081  000B                     	;# 
  5082  000C                     	;# 
  5083  000D                     	;# 
  5084  000E                     	;# 
  5085  000F                     	;# 
  5086  0010                     	;# 
  5087  0011                     	;# 
  5088  0012                     	;# 
  5089  0013                     	;# 
  5090  0014                     	;# 
  5091  0015                     	;# 
  5092  0016                     	;# 
  5093  0017                     	;# 
  5094  0018                     	;# 
  5095  0019                     	;# 
  5096  001A                     	;# 
  5097  001C                     	;# 
  5098  001C                     	;# 
  5099  001D                     	;# 
  5100  001D                     	;# 
  5101  001E                     	;# 
  5102  001F                     	;# 
  5103  008C                     	;# 
  5104  008C                     	;# 
  5105  008D                     	;# 
  5106  008E                     	;# 
  5107  008E                     	;# 
  5108  008F                     	;# 
  5109  0090                     	;# 
  5110  0090                     	;# 
  5111  0091                     	;# 
  5112  0093                     	;# 
  5113  0094                     	;# 
  5114  0095                     	;# 
  5115  0096                     	;# 
  5116  0097                     	;# 
  5117  0098                     	;# 
  5118  0099                     	;# 
  5119  009A                     	;# 
  5120  009B                     	;# 
  5121  009C                     	;# 
  5122  009D                     	;# 
  5123  009E                     	;# 
  5124  010C                     	;# 
  5125  010D                     	;# 
  5126  010E                     	;# 
  5127  010E                     	;# 
  5128  010F                     	;# 
  5129  0110                     	;# 
  5130  0110                     	;# 
  5131  0111                     	;# 
  5132  0112                     	;# 
  5133  0112                     	;# 
  5134  0113                     	;# 
  5135  0114                     	;# 
  5136  0114                     	;# 
  5137  0115                     	;# 
  5138  0116                     	;# 
  5139  0116                     	;# 
  5140  0117                     	;# 
  5141  0119                     	;# 
  5142  0119                     	;# 
  5143  0119                     	;# 
  5144  011A                     	;# 
  5145  011A                     	;# 
  5146  011A                     	;# 
  5147  011B                     	;# 
  5148  011B                     	;# 
  5149  011B                     	;# 
  5150  011B                     	;# 
  5151  011B                     	;# 
  5152  011C                     	;# 
  5153  011C                     	;# 
  5154  011C                     	;# 
  5155  011D                     	;# 
  5156  011D                     	;# 
  5157  011D                     	;# 
  5158  011E                     	;# 
  5159  011E                     	;# 
  5160  011E                     	;# 
  5161  011F                     	;# 
  5162  011F                     	;# 
  5163  011F                     	;# 
  5164  011F                     	;# 
  5165  011F                     	;# 
  5166  018C                     	;# 
  5167  018D                     	;# 
  5168  018E                     	;# 
  5169  018F                     	;# 
  5170  0190                     	;# 
  5171  0191                     	;# 
  5172  0192                     	;# 
  5173  0196                     	;# 
  5174  0197                     	;# 
  5175  0198                     	;# 
  5176  0199                     	;# 
  5177  019A                     	;# 
  5178  019B                     	;# 
  5179  019C                     	;# 
  5180  020C                     	;# 
  5181  020C                     	;# 
  5182  020D                     	;# 
  5183  020E                     	;# 
  5184  020F                     	;# 
  5185  020F                     	;# 
  5186  0210                     	;# 
  5187  0210                     	;# 
  5188  0211                     	;# 
  5189  0211                     	;# 
  5190  0212                     	;# 
  5191  0212                     	;# 
  5192  0213                     	;# 
  5193  0214                     	;# 
  5194  0215                     	;# 
  5195  0215                     	;# 
  5196  0216                     	;# 
  5197  0216                     	;# 
  5198  0217                     	;# 
  5199  0217                     	;# 
  5200  0218                     	;# 
  5201  0218                     	;# 
  5202  0219                     	;# 
  5203  021A                     	;# 
  5204  021B                     	;# 
  5205  021B                     	;# 
  5206  021C                     	;# 
  5207  021C                     	;# 
  5208  021D                     	;# 
  5209  021D                     	;# 
  5210  021E                     	;# 
  5211  021F                     	;# 
  5212  028C                     	;# 
  5213  028C                     	;# 
  5214  028D                     	;# 
  5215  028D                     	;# 
  5216  028E                     	;# 
  5217  028F                     	;# 
  5218  0290                     	;# 
  5219  0290                     	;# 
  5220  0291                     	;# 
  5221  0292                     	;# 
  5222  0292                     	;# 
  5223  0293                     	;# 
  5224  0293                     	;# 
  5225  0294                     	;# 
  5226  0295                     	;# 
  5227  0296                     	;# 
  5228  0296                     	;# 
  5229  0297                     	;# 
  5230  0298                     	;# 
  5231  0298                     	;# 
  5232  0299                     	;# 
  5233  0299                     	;# 
  5234  029A                     	;# 
  5235  029B                     	;# 
  5236  029C                     	;# 
  5237  029C                     	;# 
  5238  029D                     	;# 
  5239  030C                     	;# 
  5240  030C                     	;# 
  5241  030D                     	;# 
  5242  030E                     	;# 
  5243  030F                     	;# 
  5244  0310                     	;# 
  5245  0310                     	;# 
  5246  0311                     	;# 
  5247  0312                     	;# 
  5248  0313                     	;# 
  5249  0314                     	;# 
  5250  0314                     	;# 
  5251  0315                     	;# 
  5252  0316                     	;# 
  5253  0317                     	;# 
  5254  0318                     	;# 
  5255  0318                     	;# 
  5256  0319                     	;# 
  5257  031A                     	;# 
  5258  031B                     	;# 
  5259  031C                     	;# 
  5260  031C                     	;# 
  5261  031D                     	;# 
  5262  031E                     	;# 
  5263  031F                     	;# 
  5264  038C                     	;# 
  5265  038C                     	;# 
  5266  038D                     	;# 
  5267  038E                     	;# 
  5268  0390                     	;# 
  5269  0390                     	;# 
  5270  0391                     	;# 
  5271  0392                     	;# 
  5272  040C                     	;# 
  5273  040D                     	;# 
  5274  040E                     	;# 
  5275  040F                     	;# 
  5276  0410                     	;# 
  5277  0411                     	;# 
  5278  0416                     	;# 
  5279  0416                     	;# 
  5280  0417                     	;# 
  5281  0418                     	;# 
  5282  0418                     	;# 
  5283  0419                     	;# 
  5284  041A                     	;# 
  5285  041A                     	;# 
  5286  041B                     	;# 
  5287  041C                     	;# 
  5288  041C                     	;# 
  5289  041D                     	;# 
  5290  041E                     	;# 
  5291  041F                     	;# 
  5292  048C                     	;# 
  5293  048C                     	;# 
  5294  048D                     	;# 
  5295  048E                     	;# 
  5296  048F                     	;# 
  5297  048F                     	;# 
  5298  0490                     	;# 
  5299  0491                     	;# 
  5300  0492                     	;# 
  5301  0492                     	;# 
  5302  0493                     	;# 
  5303  0494                     	;# 
  5304  0495                     	;# 
  5305  0495                     	;# 
  5306  0496                     	;# 
  5307  0497                     	;# 
  5308  0498                     	;# 
  5309  0499                     	;# 
  5310  049A                     	;# 
  5311  049B                     	;# 
  5312  049C                     	;# 
  5313  049D                     	;# 
  5314  050C                     	;# 
  5315  050C                     	;# 
  5316  050D                     	;# 
  5317  050E                     	;# 
  5318  050F                     	;# 
  5319  050F                     	;# 
  5320  0510                     	;# 
  5321  0511                     	;# 
  5322  0512                     	;# 
  5323  0512                     	;# 
  5324  0513                     	;# 
  5325  0514                     	;# 
  5326  0515                     	;# 
  5327  0515                     	;# 
  5328  0516                     	;# 
  5329  0517                     	;# 
  5330  0518                     	;# 
  5331  0519                     	;# 
  5332  051A                     	;# 
  5333  051B                     	;# 
  5334  051C                     	;# 
  5335  051D                     	;# 
  5336  058C                     	;# 
  5337  058C                     	;# 
  5338  058D                     	;# 
  5339  058E                     	;# 
  5340  058F                     	;# 
  5341  058F                     	;# 
  5342  0590                     	;# 
  5343  0591                     	;# 
  5344  0592                     	;# 
  5345  0593                     	;# 
  5346  060C                     	;# 
  5347  060D                     	;# 
  5348  060E                     	;# 
  5349  060F                     	;# 
  5350  0610                     	;# 
  5351  0611                     	;# 
  5352  0612                     	;# 
  5353  0613                     	;# 
  5354  0614                     	;# 
  5355  0616                     	;# 
  5356  0617                     	;# 
  5357  0618                     	;# 
  5358  0619                     	;# 
  5359  061A                     	;# 
  5360  061B                     	;# 
  5361  061C                     	;# 
  5362  061D                     	;# 
  5363  061E                     	;# 
  5364  068C                     	;# 
  5365  068D                     	;# 
  5366  068E                     	;# 
  5367  068F                     	;# 
  5368  0690                     	;# 
  5369  0691                     	;# 
  5370  0692                     	;# 
  5371  0693                     	;# 
  5372  0694                     	;# 
  5373  070C                     	;# 
  5374  070D                     	;# 
  5375  070E                     	;# 
  5376  070F                     	;# 
  5377  0710                     	;# 
  5378  0711                     	;# 
  5379  0712                     	;# 
  5380  0713                     	;# 
  5381  0714                     	;# 
  5382  0716                     	;# 
  5383  0717                     	;# 
  5384  0718                     	;# 
  5385  0719                     	;# 
  5386  071A                     	;# 
  5387  071B                     	;# 
  5388  071C                     	;# 
  5389  071D                     	;# 
  5390  071E                     	;# 
  5391  0796                     	;# 
  5392  0797                     	;# 
  5393  0798                     	;# 
  5394  0799                     	;# 
  5395  079A                     	;# 
  5396  079B                     	;# 
  5397  080C                     	;# 
  5398  080D                     	;# 
  5399  080E                     	;# 
  5400  080F                     	;# 
  5401  0810                     	;# 
  5402  0811                     	;# 
  5403  0812                     	;# 
  5404  0813                     	;# 
  5405  0814                     	;# 
  5406  081A                     	;# 
  5407  081B                     	;# 
  5408  081C                     	;# 
  5409  081D                     	;# 
  5410  081E                     	;# 
  5411  081F                     	;# 
  5412  088C                     	;# 
  5413  088D                     	;# 
  5414  088E                     	;# 
  5415  088F                     	;# 
  5416  0890                     	;# 
  5417  0891                     	;# 
  5418  0892                     	;# 
  5419  0893                     	;# 
  5420  0895                     	;# 
  5421  0896                     	;# 
  5422  0897                     	;# 
  5423  0898                     	;# 
  5424  0899                     	;# 
  5425  089A                     	;# 
  5426  089B                     	;# 
  5427  090C                     	;# 
  5428  090E                     	;# 
  5429  090F                     	;# 
  5430  091F                     	;# 
  5431  091F                     	;# 
  5432  098F                     	;# 
  5433  098F                     	;# 
  5434  0990                     	;# 
  5435  0991                     	;# 
  5436  0992                     	;# 
  5437  0993                     	;# 
  5438  0994                     	;# 
  5439  0995                     	;# 
  5440  0996                     	;# 
  5441  0997                     	;# 
  5442  0E0F                     	;# 
  5443  0E10                     	;# 
  5444  0E11                     	;# 
  5445  0E12                     	;# 
  5446  0E13                     	;# 
  5447  0E14                     	;# 
  5448  0E15                     	;# 
  5449  0E16                     	;# 
  5450  0E17                     	;# 
  5451  0E18                     	;# 
  5452  0E19                     	;# 
  5453  0E1A                     	;# 
  5454  0E1B                     	;# 
  5455  0E1C                     	;# 
  5456  0E1D                     	;# 
  5457  0E1E                     	;# 
  5458  0E1F                     	;# 
  5459  0E20                     	;# 
  5460  0E21                     	;# 
  5461  0E22                     	;# 
  5462  0E23                     	;# 
  5463  0E24                     	;# 
  5464  0E25                     	;# 
  5465  0E26                     	;# 
  5466  0E27                     	;# 
  5467  0E28                     	;# 
  5468  0E29                     	;# 
  5469  0E2A                     	;# 
  5470  0E2B                     	;# 
  5471  0E2C                     	;# 
  5472  0E2D                     	;# 
  5473  0E2E                     	;# 
  5474  0E2F                     	;# 
  5475  0E30                     	;# 
  5476  0E31                     	;# 
  5477  0E32                     	;# 
  5478  0E33                     	;# 
  5479  0E34                     	;# 
  5480  0E35                     	;# 
  5481  0E36                     	;# 
  5482  0E37                     	;# 
  5483  0E8F                     	;# 
  5484  0E90                     	;# 
  5485  0E91                     	;# 
  5486  0E92                     	;# 
  5487  0E93                     	;# 
  5488  0E94                     	;# 
  5489  0E95                     	;# 
  5490  0E96                     	;# 
  5491  0E97                     	;# 
  5492  0E9C                     	;# 
  5493  0E9D                     	;# 
  5494  0E9E                     	;# 
  5495  0EA1                     	;# 
  5496  0EA2                     	;# 
  5497  0EA3                     	;# 
  5498  0EA4                     	;# 
  5499  0EA5                     	;# 
  5500  0EA9                     	;# 
  5501  0EAA                     	;# 
  5502  0EAB                     	;# 
  5503  0EAC                     	;# 
  5504  0EB1                     	;# 
  5505  0EB2                     	;# 
  5506  0EB3                     	;# 
  5507  0EB8                     	;# 
  5508  0EB9                     	;# 
  5509  0EBA                     	;# 
  5510  0EBB                     	;# 
  5511  0EBC                     	;# 
  5512  0EBD                     	;# 
  5513  0EBE                     	;# 
  5514  0EC3                     	;# 
  5515  0EC5                     	;# 
  5516  0EC6                     	;# 
  5517  0EC7                     	;# 
  5518  0EC8                     	;# 
  5519  0EC9                     	;# 
  5520  0ECA                     	;# 
  5521  0ECB                     	;# 
  5522  0ECC                     	;# 
  5523  0F10                     	;# 
  5524  0F11                     	;# 
  5525  0F12                     	;# 
  5526  0F13                     	;# 
  5527  0F14                     	;# 
  5528  0F15                     	;# 
  5529  0F16                     	;# 
  5530  0F17                     	;# 
  5531  0F18                     	;# 
  5532  0F19                     	;# 
  5533  0F1A                     	;# 
  5534  0F1B                     	;# 
  5535  0F1C                     	;# 
  5536  0F1D                     	;# 
  5537  0F1E                     	;# 
  5538  0F1F                     	;# 
  5539  0F20                     	;# 
  5540  0F21                     	;# 
  5541  0F22                     	;# 
  5542  0F23                     	;# 
  5543  0F24                     	;# 
  5544  0F25                     	;# 
  5545  0F26                     	;# 
  5546  0F27                     	;# 
  5547  0F28                     	;# 
  5548  0F29                     	;# 
  5549  0F2A                     	;# 
  5550  0F2B                     	;# 
  5551  0F2C                     	;# 
  5552  0F2D                     	;# 
  5553  0F2E                     	;# 
  5554  0F2F                     	;# 
  5555  0F30                     	;# 
  5556  0F31                     	;# 
  5557  0F32                     	;# 
  5558  0F38                     	;# 
  5559  0F39                     	;# 
  5560  0F3A                     	;# 
  5561  0F3B                     	;# 
  5562  0F3C                     	;# 
  5563  0F3D                     	;# 
  5564  0F3E                     	;# 
  5565  0F3F                     	;# 
  5566  0F40                     	;# 
  5567  0F41                     	;# 
  5568  0F43                     	;# 
  5569  0F44                     	;# 
  5570  0F45                     	;# 
  5571  0F46                     	;# 
  5572  0F47                     	;# 
  5573  0F48                     	;# 
  5574  0F49                     	;# 
  5575  0F4A                     	;# 
  5576  0F4B                     	;# 
  5577  0F4C                     	;# 
  5578  0F4E                     	;# 
  5579  0F4F                     	;# 
  5580  0F50                     	;# 
  5581  0F51                     	;# 
  5582  0F52                     	;# 
  5583  0F53                     	;# 
  5584  0F54                     	;# 
  5585  0F55                     	;# 
  5586  0F56                     	;# 
  5587  0F57                     	;# 
  5588  0F59                     	;# 
  5589  0F5A                     	;# 
  5590  0F5B                     	;# 
  5591  0F5C                     	;# 
  5592  0F5D                     	;# 
  5593  0F61                     	;# 
  5594  0F62                     	;# 
  5595  0F64                     	;# 
  5596  0F65                     	;# 
  5597  0F66                     	;# 
  5598  0F67                     	;# 
  5599  0F68                     	;# 
  5600  0F69                     	;# 
  5601  0F6A                     	;# 
  5602  0F6B                     	;# 
  5603  0F6C                     	;# 
  5604  0F6D                     	;# 
  5605  0FE4                     	;# 
  5606  0FE5                     	;# 
  5607  0FE6                     	;# 
  5608  0FE7                     	;# 
  5609  0FE8                     	;# 
  5610  0FE9                     	;# 
  5611  0FEA                     	;# 
  5612  0FEB                     	;# 
  5613  0FED                     	;# 
  5614  0FEE                     	;# 
  5615  0FEF                     	;# 
  5616  0000                     	;# 
  5617  0001                     	;# 
  5618  0002                     	;# 
  5619  0003                     	;# 
  5620  0004                     	;# 
  5621  0005                     	;# 
  5622  0006                     	;# 
  5623  0007                     	;# 
  5624  0008                     	;# 
  5625  0009                     	;# 
  5626  000A                     	;# 
  5627  000B                     	;# 
  5628  000C                     	;# 
  5629  000D                     	;# 
  5630  000E                     	;# 
  5631  000F                     	;# 
  5632  0010                     	;# 
  5633  0011                     	;# 
  5634  0012                     	;# 
  5635  0013                     	;# 
  5636  0014                     	;# 
  5637  0015                     	;# 
  5638  0016                     	;# 
  5639  0017                     	;# 
  5640  0018                     	;# 
  5641  0019                     	;# 
  5642  001A                     	;# 
  5643  001C                     	;# 
  5644  001C                     	;# 
  5645  001D                     	;# 
  5646  001D                     	;# 
  5647  001E                     	;# 
  5648  001F                     	;# 
  5649  008C                     	;# 
  5650  008C                     	;# 
  5651  008D                     	;# 
  5652  008E                     	;# 
  5653  008E                     	;# 
  5654  008F                     	;# 
  5655  0090                     	;# 
  5656  0090                     	;# 
  5657  0091                     	;# 
  5658  0093                     	;# 
  5659  0094                     	;# 
  5660  0095                     	;# 
  5661  0096                     	;# 
  5662  0097                     	;# 
  5663  0098                     	;# 
  5664  0099                     	;# 
  5665  009A                     	;# 
  5666  009B                     	;# 
  5667  009C                     	;# 
  5668  009D                     	;# 
  5669  009E                     	;# 
  5670  010C                     	;# 
  5671  010D                     	;# 
  5672  010E                     	;# 
  5673  010E                     	;# 
  5674  010F                     	;# 
  5675  0110                     	;# 
  5676  0110                     	;# 
  5677  0111                     	;# 
  5678  0112                     	;# 
  5679  0112                     	;# 
  5680  0113                     	;# 
  5681  0114                     	;# 
  5682  0114                     	;# 
  5683  0115                     	;# 
  5684  0116                     	;# 
  5685  0116                     	;# 
  5686  0117                     	;# 
  5687  0119                     	;# 
  5688  0119                     	;# 
  5689  0119                     	;# 
  5690  011A                     	;# 
  5691  011A                     	;# 
  5692  011A                     	;# 
  5693  011B                     	;# 
  5694  011B                     	;# 
  5695  011B                     	;# 
  5696  011B                     	;# 
  5697  011B                     	;# 
  5698  011C                     	;# 
  5699  011C                     	;# 
  5700  011C                     	;# 
  5701  011D                     	;# 
  5702  011D                     	;# 
  5703  011D                     	;# 
  5704  011E                     	;# 
  5705  011E                     	;# 
  5706  011E                     	;# 
  5707  011F                     	;# 
  5708  011F                     	;# 
  5709  011F                     	;# 
  5710  011F                     	;# 
  5711  011F                     	;# 
  5712  018C                     	;# 
  5713  018D                     	;# 
  5714  018E                     	;# 
  5715  018F                     	;# 
  5716  0190                     	;# 
  5717  0191                     	;# 
  5718  0192                     	;# 
  5719  0196                     	;# 
  5720  0197                     	;# 
  5721  0198                     	;# 
  5722  0199                     	;# 
  5723  019A                     	;# 
  5724  019B                     	;# 
  5725  019C                     	;# 
  5726  020C                     	;# 
  5727  020C                     	;# 
  5728  020D                     	;# 
  5729  020E                     	;# 
  5730  020F                     	;# 
  5731  020F                     	;# 
  5732  0210                     	;# 
  5733  0210                     	;# 
  5734  0211                     	;# 
  5735  0211                     	;# 
  5736  0212                     	;# 
  5737  0212                     	;# 
  5738  0213                     	;# 
  5739  0214                     	;# 
  5740  0215                     	;# 
  5741  0215                     	;# 
  5742  0216                     	;# 
  5743  0216                     	;# 
  5744  0217                     	;# 
  5745  0217                     	;# 
  5746  0218                     	;# 
  5747  0218                     	;# 
  5748  0219                     	;# 
  5749  021A                     	;# 
  5750  021B                     	;# 
  5751  021B                     	;# 
  5752  021C                     	;# 
  5753  021C                     	;# 
  5754  021D                     	;# 
  5755  021D                     	;# 
  5756  021E                     	;# 
  5757  021F                     	;# 
  5758  028C                     	;# 
  5759  028C                     	;# 
  5760  028D                     	;# 
  5761  028D                     	;# 
  5762  028E                     	;# 
  5763  028F                     	;# 
  5764  0290                     	;# 
  5765  0290                     	;# 
  5766  0291                     	;# 
  5767  0292                     	;# 
  5768  0292                     	;# 
  5769  0293                     	;# 
  5770  0293                     	;# 
  5771  0294                     	;# 
  5772  0295                     	;# 
  5773  0296                     	;# 
  5774  0296                     	;# 
  5775  0297                     	;# 
  5776  0298                     	;# 
  5777  0298                     	;# 
  5778  0299                     	;# 
  5779  0299                     	;# 
  5780  029A                     	;# 
  5781  029B                     	;# 
  5782  029C                     	;# 
  5783  029C                     	;# 
  5784  029D                     	;# 
  5785  030C                     	;# 
  5786  030C                     	;# 
  5787  030D                     	;# 
  5788  030E                     	;# 
  5789  030F                     	;# 
  5790  0310                     	;# 
  5791  0310                     	;# 
  5792  0311                     	;# 
  5793  0312                     	;# 
  5794  0313                     	;# 
  5795  0314                     	;# 
  5796  0314                     	;# 
  5797  0315                     	;# 
  5798  0316                     	;# 
  5799  0317                     	;# 
  5800  0318                     	;# 
  5801  0318                     	;# 
  5802  0319                     	;# 
  5803  031A                     	;# 
  5804  031B                     	;# 
  5805  031C                     	;# 
  5806  031C                     	;# 
  5807  031D                     	;# 
  5808  031E                     	;# 
  5809  031F                     	;# 
  5810  038C                     	;# 
  5811  038C                     	;# 
  5812  038D                     	;# 
  5813  038E                     	;# 
  5814  0390                     	;# 
  5815  0390                     	;# 
  5816  0391                     	;# 
  5817  0392                     	;# 
  5818  040C                     	;# 
  5819  040D                     	;# 
  5820  040E                     	;# 
  5821  040F                     	;# 
  5822  0410                     	;# 
  5823  0411                     	;# 
  5824  0416                     	;# 
  5825  0416                     	;# 
  5826  0417                     	;# 
  5827  0418                     	;# 
  5828  0418                     	;# 
  5829  0419                     	;# 
  5830  041A                     	;# 
  5831  041A                     	;# 
  5832  041B                     	;# 
  5833  041C                     	;# 
  5834  041C                     	;# 
  5835  041D                     	;# 
  5836  041E                     	;# 
  5837  041F                     	;# 
  5838  048C                     	;# 
  5839  048C                     	;# 
  5840  048D                     	;# 
  5841  048E                     	;# 
  5842  048F                     	;# 
  5843  048F                     	;# 
  5844  0490                     	;# 
  5845  0491                     	;# 
  5846  0492                     	;# 
  5847  0492                     	;# 
  5848  0493                     	;# 
  5849  0494                     	;# 
  5850  0495                     	;# 
  5851  0495                     	;# 
  5852  0496                     	;# 
  5853  0497                     	;# 
  5854  0498                     	;# 
  5855  0499                     	;# 
  5856  049A                     	;# 
  5857  049B                     	;# 
  5858  049C                     	;# 
  5859  049D                     	;# 
  5860  050C                     	;# 
  5861  050C                     	;# 
  5862  050D                     	;# 
  5863  050E                     	;# 
  5864  050F                     	;# 
  5865  050F                     	;# 
  5866  0510                     	;# 
  5867  0511                     	;# 
  5868  0512                     	;# 
  5869  0512                     	;# 
  5870  0513                     	;# 
  5871  0514                     	;# 
  5872  0515                     	;# 
  5873  0515                     	;# 
  5874  0516                     	;# 
  5875  0517                     	;# 
  5876  0518                     	;# 
  5877  0519                     	;# 
  5878  051A                     	;# 
  5879  051B                     	;# 
  5880  051C                     	;# 
  5881  051D                     	;# 
  5882  058C                     	;# 
  5883  058C                     	;# 
  5884  058D                     	;# 
  5885  058E                     	;# 
  5886  058F                     	;# 
  5887  058F                     	;# 
  5888  0590                     	;# 
  5889  0591                     	;# 
  5890  0592                     	;# 
  5891  0593                     	;# 
  5892  060C                     	;# 
  5893  060D                     	;# 
  5894  060E                     	;# 
  5895  060F                     	;# 
  5896  0610                     	;# 
  5897  0611                     	;# 
  5898  0612                     	;# 
  5899  0613                     	;# 
  5900  0614                     	;# 
  5901  0616                     	;# 
  5902  0617                     	;# 
  5903  0618                     	;# 
  5904  0619                     	;# 
  5905  061A                     	;# 
  5906  061B                     	;# 
  5907  061C                     	;# 
  5908  061D                     	;# 
  5909  061E                     	;# 
  5910  068C                     	;# 
  5911  068D                     	;# 
  5912  068E                     	;# 
  5913  068F                     	;# 
  5914  0690                     	;# 
  5915  0691                     	;# 
  5916  0692                     	;# 
  5917  0693                     	;# 
  5918  0694                     	;# 
  5919  070C                     	;# 
  5920  070D                     	;# 
  5921  070E                     	;# 
  5922  070F                     	;# 
  5923  0710                     	;# 
  5924  0711                     	;# 
  5925  0712                     	;# 
  5926  0713                     	;# 
  5927  0714                     	;# 
  5928  0716                     	;# 
  5929  0717                     	;# 
  5930  0718                     	;# 
  5931  0719                     	;# 
  5932  071A                     	;# 
  5933  071B                     	;# 
  5934  071C                     	;# 
  5935  071D                     	;# 
  5936  071E                     	;# 
  5937  0796                     	;# 
  5938  0797                     	;# 
  5939  0798                     	;# 
  5940  0799                     	;# 
  5941  079A                     	;# 
  5942  079B                     	;# 
  5943  080C                     	;# 
  5944  080D                     	;# 
  5945  080E                     	;# 
  5946  080F                     	;# 
  5947  0810                     	;# 
  5948  0811                     	;# 
  5949  0812                     	;# 
  5950  0813                     	;# 
  5951  0814                     	;# 
  5952  081A                     	;# 
  5953  081B                     	;# 
  5954  081C                     	;# 
  5955  081D                     	;# 
  5956  081E                     	;# 
  5957  081F                     	;# 
  5958  088C                     	;# 
  5959  088D                     	;# 
  5960  088E                     	;# 
  5961  088F                     	;# 
  5962  0890                     	;# 
  5963  0891                     	;# 
  5964  0892                     	;# 
  5965  0893                     	;# 
  5966  0895                     	;# 
  5967  0896                     	;# 
  5968  0897                     	;# 
  5969  0898                     	;# 
  5970  0899                     	;# 
  5971  089A                     	;# 
  5972  089B                     	;# 
  5973  090C                     	;# 
  5974  090E                     	;# 
  5975  090F                     	;# 
  5976  091F                     	;# 
  5977  091F                     	;# 
  5978  098F                     	;# 
  5979  098F                     	;# 
  5980  0990                     	;# 
  5981  0991                     	;# 
  5982  0992                     	;# 
  5983  0993                     	;# 
  5984  0994                     	;# 
  5985  0995                     	;# 
  5986  0996                     	;# 
  5987  0997                     	;# 
  5988  0E0F                     	;# 
  5989  0E10                     	;# 
  5990  0E11                     	;# 
  5991  0E12                     	;# 
  5992  0E13                     	;# 
  5993  0E14                     	;# 
  5994  0E15                     	;# 
  5995  0E16                     	;# 
  5996  0E17                     	;# 
  5997  0E18                     	;# 
  5998  0E19                     	;# 
  5999  0E1A                     	;# 
  6000  0E1B                     	;# 
  6001  0E1C                     	;# 
  6002  0E1D                     	;# 
  6003  0E1E                     	;# 
  6004  0E1F                     	;# 
  6005  0E20                     	;# 
  6006  0E21                     	;# 
  6007  0E22                     	;# 
  6008  0E23                     	;# 
  6009  0E24                     	;# 
  6010  0E25                     	;# 
  6011  0E26                     	;# 
  6012  0E27                     	;# 
  6013  0E28                     	;# 
  6014  0E29                     	;# 
  6015  0E2A                     	;# 
  6016  0E2B                     	;# 
  6017  0E2C                     	;# 
  6018  0E2D                     	;# 
  6019  0E2E                     	;# 
  6020  0E2F                     	;# 
  6021  0E30                     	;# 
  6022  0E31                     	;# 
  6023  0E32                     	;# 
  6024  0E33                     	;# 
  6025  0E34                     	;# 
  6026  0E35                     	;# 
  6027  0E36                     	;# 
  6028  0E37                     	;# 
  6029  0E8F                     	;# 
  6030  0E90                     	;# 
  6031  0E91                     	;# 
  6032  0E92                     	;# 
  6033  0E93                     	;# 
  6034  0E94                     	;# 
  6035  0E95                     	;# 
  6036  0E96                     	;# 
  6037  0E97                     	;# 
  6038  0E9C                     	;# 
  6039  0E9D                     	;# 
  6040  0E9E                     	;# 
  6041  0EA1                     	;# 
  6042  0EA2                     	;# 
  6043  0EA3                     	;# 
  6044  0EA4                     	;# 
  6045  0EA5                     	;# 
  6046  0EA9                     	;# 
  6047  0EAA                     	;# 
  6048  0EAB                     	;# 
  6049  0EAC                     	;# 
  6050  0EB1                     	;# 
  6051  0EB2                     	;# 
  6052  0EB3                     	;# 
  6053  0EB8                     	;# 
  6054  0EB9                     	;# 
  6055  0EBA                     	;# 
  6056  0EBB                     	;# 
  6057  0EBC                     	;# 
  6058  0EBD                     	;# 
  6059  0EBE                     	;# 
  6060  0EC3                     	;# 
  6061  0EC5                     	;# 
  6062  0EC6                     	;# 
  6063  0EC7                     	;# 
  6064  0EC8                     	;# 
  6065  0EC9                     	;# 
  6066  0ECA                     	;# 
  6067  0ECB                     	;# 
  6068  0ECC                     	;# 
  6069  0F10                     	;# 
  6070  0F11                     	;# 
  6071  0F12                     	;# 
  6072  0F13                     	;# 
  6073  0F14                     	;# 
  6074  0F15                     	;# 
  6075  0F16                     	;# 
  6076  0F17                     	;# 
  6077  0F18                     	;# 
  6078  0F19                     	;# 
  6079  0F1A                     	;# 
  6080  0F1B                     	;# 
  6081  0F1C                     	;# 
  6082  0F1D                     	;# 
  6083  0F1E                     	;# 
  6084  0F1F                     	;# 
  6085  0F20                     	;# 
  6086  0F21                     	;# 
  6087  0F22                     	;# 
  6088  0F23                     	;# 
  6089  0F24                     	;# 
  6090  0F25                     	;# 
  6091  0F26                     	;# 
  6092  0F27                     	;# 
  6093  0F28                     	;# 
  6094  0F29                     	;# 
  6095  0F2A                     	;# 
  6096  0F2B                     	;# 
  6097  0F2C                     	;# 
  6098  0F2D                     	;# 
  6099  0F2E                     	;# 
  6100  0F2F                     	;# 
  6101  0F30                     	;# 
  6102  0F31                     	;# 
  6103  0F32                     	;# 
  6104  0F38                     	;# 
  6105  0F39                     	;# 
  6106  0F3A                     	;# 
  6107  0F3B                     	;# 
  6108  0F3C                     	;# 
  6109  0F3D                     	;# 
  6110  0F3E                     	;# 
  6111  0F3F                     	;# 
  6112  0F40                     	;# 
  6113  0F41                     	;# 
  6114  0F43                     	;# 
  6115  0F44                     	;# 
  6116  0F45                     	;# 
  6117  0F46                     	;# 
  6118  0F47                     	;# 
  6119  0F48                     	;# 
  6120  0F49                     	;# 
  6121  0F4A                     	;# 
  6122  0F4B                     	;# 
  6123  0F4C                     	;# 
  6124  0F4E                     	;# 
  6125  0F4F                     	;# 
  6126  0F50                     	;# 
  6127  0F51                     	;# 
  6128  0F52                     	;# 
  6129  0F53                     	;# 
  6130  0F54                     	;# 
  6131  0F55                     	;# 
  6132  0F56                     	;# 
  6133  0F57                     	;# 
  6134  0F59                     	;# 
  6135  0F5A                     	;# 
  6136  0F5B                     	;# 
  6137  0F5C                     	;# 
  6138  0F5D                     	;# 
  6139  0F61                     	;# 
  6140  0F62                     	;# 
  6141  0F64                     	;# 
  6142  0F65                     	;# 
  6143  0F66                     	;# 
  6144  0F67                     	;# 
  6145  0F68                     	;# 
  6146  0F69                     	;# 
  6147  0F6A                     	;# 
  6148  0F6B                     	;# 
  6149  0F6C                     	;# 
  6150  0F6D                     	;# 
  6151  0FE4                     	;# 
  6152  0FE5                     	;# 
  6153  0FE6                     	;# 
  6154  0FE7                     	;# 
  6155  0FE8                     	;# 
  6156  0FE9                     	;# 
  6157  0FEA                     	;# 
  6158  0FEB                     	;# 
  6159  0FED                     	;# 
  6160  0FEE                     	;# 
  6161  0FEF                     	;# 
  6162  0000                     	;# 
  6163  0001                     	;# 
  6164  0002                     	;# 
  6165  0003                     	;# 
  6166  0004                     	;# 
  6167  0005                     	;# 
  6168  0006                     	;# 
  6169  0007                     	;# 
  6170  0008                     	;# 
  6171  0009                     	;# 
  6172  000A                     	;# 
  6173  000B                     	;# 
  6174  000C                     	;# 
  6175  000D                     	;# 
  6176  000E                     	;# 
  6177  000F                     	;# 
  6178  0010                     	;# 
  6179  0011                     	;# 
  6180  0012                     	;# 
  6181  0013                     	;# 
  6182  0014                     	;# 
  6183  0015                     	;# 
  6184  0016                     	;# 
  6185  0017                     	;# 
  6186  0018                     	;# 
  6187  0019                     	;# 
  6188  001A                     	;# 
  6189  001C                     	;# 
  6190  001C                     	;# 
  6191  001D                     	;# 
  6192  001D                     	;# 
  6193  001E                     	;# 
  6194  001F                     	;# 
  6195  008C                     	;# 
  6196  008C                     	;# 
  6197  008D                     	;# 
  6198  008E                     	;# 
  6199  008E                     	;# 
  6200  008F                     	;# 
  6201  0090                     	;# 
  6202  0090                     	;# 
  6203  0091                     	;# 
  6204  0093                     	;# 
  6205  0094                     	;# 
  6206  0095                     	;# 
  6207  0096                     	;# 
  6208  0097                     	;# 
  6209  0098                     	;# 
  6210  0099                     	;# 
  6211  009A                     	;# 
  6212  009B                     	;# 
  6213  009C                     	;# 
  6214  009D                     	;# 
  6215  009E                     	;# 
  6216  010C                     	;# 
  6217  010D                     	;# 
  6218  010E                     	;# 
  6219  010E                     	;# 
  6220  010F                     	;# 
  6221  0110                     	;# 
  6222  0110                     	;# 
  6223  0111                     	;# 
  6224  0112                     	;# 
  6225  0112                     	;# 
  6226  0113                     	;# 
  6227  0114                     	;# 
  6228  0114                     	;# 
  6229  0115                     	;# 
  6230  0116                     	;# 
  6231  0116                     	;# 
  6232  0117                     	;# 
  6233  0119                     	;# 
  6234  0119                     	;# 
  6235  0119                     	;# 
  6236  011A                     	;# 
  6237  011A                     	;# 
  6238  011A                     	;# 
  6239  011B                     	;# 
  6240  011B                     	;# 
  6241  011B                     	;# 
  6242  011B                     	;# 
  6243  011B                     	;# 
  6244  011C                     	;# 
  6245  011C                     	;# 
  6246  011C                     	;# 
  6247  011D                     	;# 
  6248  011D                     	;# 
  6249  011D                     	;# 
  6250  011E                     	;# 
  6251  011E                     	;# 
  6252  011E                     	;# 
  6253  011F                     	;# 
  6254  011F                     	;# 
  6255  011F                     	;# 
  6256  011F                     	;# 
  6257  011F                     	;# 
  6258  018C                     	;# 
  6259  018D                     	;# 
  6260  018E                     	;# 
  6261  018F                     	;# 
  6262  0190                     	;# 
  6263  0191                     	;# 
  6264  0192                     	;# 
  6265  0196                     	;# 
  6266  0197                     	;# 
  6267  0198                     	;# 
  6268  0199                     	;# 
  6269  019A                     	;# 
  6270  019B                     	;# 
  6271  019C                     	;# 
  6272  020C                     	;# 
  6273  020C                     	;# 
  6274  020D                     	;# 
  6275  020E                     	;# 
  6276  020F                     	;# 
  6277  020F                     	;# 
  6278  0210                     	;# 
  6279  0210                     	;# 
  6280  0211                     	;# 
  6281  0211                     	;# 
  6282  0212                     	;# 
  6283  0212                     	;# 
  6284  0213                     	;# 
  6285  0214                     	;# 
  6286  0215                     	;# 
  6287  0215                     	;# 
  6288  0216                     	;# 
  6289  0216                     	;# 
  6290  0217                     	;# 
  6291  0217                     	;# 
  6292  0218                     	;# 
  6293  0218                     	;# 
  6294  0219                     	;# 
  6295  021A                     	;# 
  6296  021B                     	;# 
  6297  021B                     	;# 
  6298  021C                     	;# 
  6299  021C                     	;# 
  6300  021D                     	;# 
  6301  021D                     	;# 
  6302  021E                     	;# 
  6303  021F                     	;# 
  6304  028C                     	;# 
  6305  028C                     	;# 
  6306  028D                     	;# 
  6307  028D                     	;# 
  6308  028E                     	;# 
  6309  028F                     	;# 
  6310  0290                     	;# 
  6311  0290                     	;# 
  6312  0291                     	;# 
  6313  0292                     	;# 
  6314  0292                     	;# 
  6315  0293                     	;# 
  6316  0293                     	;# 
  6317  0294                     	;# 
  6318  0295                     	;# 
  6319  0296                     	;# 
  6320  0296                     	;# 
  6321  0297                     	;# 
  6322  0298                     	;# 
  6323  0298                     	;# 
  6324  0299                     	;# 
  6325  0299                     	;# 
  6326  029A                     	;# 
  6327  029B                     	;# 
  6328  029C                     	;# 
  6329  029C                     	;# 
  6330  029D                     	;# 
  6331  030C                     	;# 
  6332  030C                     	;# 
  6333  030D                     	;# 
  6334  030E                     	;# 
  6335  030F                     	;# 
  6336  0310                     	;# 
  6337  0310                     	;# 
  6338  0311                     	;# 
  6339  0312                     	;# 
  6340  0313                     	;# 
  6341  0314                     	;# 
  6342  0314                     	;# 
  6343  0315                     	;# 
  6344  0316                     	;# 
  6345  0317                     	;# 
  6346  0318                     	;# 
  6347  0318                     	;# 
  6348  0319                     	;# 
  6349  031A                     	;# 
  6350  031B                     	;# 
  6351  031C                     	;# 
  6352  031C                     	;# 
  6353  031D                     	;# 
  6354  031E                     	;# 
  6355  031F                     	;# 
  6356  038C                     	;# 
  6357  038C                     	;# 
  6358  038D                     	;# 
  6359  038E                     	;# 
  6360  0390                     	;# 
  6361  0390                     	;# 
  6362  0391                     	;# 
  6363  0392                     	;# 
  6364  040C                     	;# 
  6365  040D                     	;# 
  6366  040E                     	;# 
  6367  040F                     	;# 
  6368  0410                     	;# 
  6369  0411                     	;# 
  6370  0416                     	;# 
  6371  0416                     	;# 
  6372  0417                     	;# 
  6373  0418                     	;# 
  6374  0418                     	;# 
  6375  0419                     	;# 
  6376  041A                     	;# 
  6377  041A                     	;# 
  6378  041B                     	;# 
  6379  041C                     	;# 
  6380  041C                     	;# 
  6381  041D                     	;# 
  6382  041E                     	;# 
  6383  041F                     	;# 
  6384  048C                     	;# 
  6385  048C                     	;# 
  6386  048D                     	;# 
  6387  048E                     	;# 
  6388  048F                     	;# 
  6389  048F                     	;# 
  6390  0490                     	;# 
  6391  0491                     	;# 
  6392  0492                     	;# 
  6393  0492                     	;# 
  6394  0493                     	;# 
  6395  0494                     	;# 
  6396  0495                     	;# 
  6397  0495                     	;# 
  6398  0496                     	;# 
  6399  0497                     	;# 
  6400  0498                     	;# 
  6401  0499                     	;# 
  6402  049A                     	;# 
  6403  049B                     	;# 
  6404  049C                     	;# 
  6405  049D                     	;# 
  6406  050C                     	;# 
  6407  050C                     	;# 
  6408  050D                     	;# 
  6409  050E                     	;# 
  6410  050F                     	;# 
  6411  050F                     	;# 
  6412  0510                     	;# 
  6413  0511                     	;# 
  6414  0512                     	;# 
  6415  0512                     	;# 
  6416  0513                     	;# 
  6417  0514                     	;# 
  6418  0515                     	;# 
  6419  0515                     	;# 
  6420  0516                     	;# 
  6421  0517                     	;# 
  6422  0518                     	;# 
  6423  0519                     	;# 
  6424  051A                     	;# 
  6425  051B                     	;# 
  6426  051C                     	;# 
  6427  051D                     	;# 
  6428  058C                     	;# 
  6429  058C                     	;# 
  6430  058D                     	;# 
  6431  058E                     	;# 
  6432  058F                     	;# 
  6433  058F                     	;# 
  6434  0590                     	;# 
  6435  0591                     	;# 
  6436  0592                     	;# 
  6437  0593                     	;# 
  6438  060C                     	;# 
  6439  060D                     	;# 
  6440  060E                     	;# 
  6441  060F                     	;# 
  6442  0610                     	;# 
  6443  0611                     	;# 
  6444  0612                     	;# 
  6445  0613                     	;# 
  6446  0614                     	;# 
  6447  0616                     	;# 
  6448  0617                     	;# 
  6449  0618                     	;# 
  6450  0619                     	;# 
  6451  061A                     	;# 
  6452  061B                     	;# 
  6453  061C                     	;# 
  6454  061D                     	;# 
  6455  061E                     	;# 
  6456  068C                     	;# 
  6457  068D                     	;# 
  6458  068E                     	;# 
  6459  068F                     	;# 
  6460  0690                     	;# 
  6461  0691                     	;# 
  6462  0692                     	;# 
  6463  0693                     	;# 
  6464  0694                     	;# 
  6465  070C                     	;# 
  6466  070D                     	;# 
  6467  070E                     	;# 
  6468  070F                     	;# 
  6469  0710                     	;# 
  6470  0711                     	;# 
  6471  0712                     	;# 
  6472  0713                     	;# 
  6473  0714                     	;# 
  6474  0716                     	;# 
  6475  0717                     	;# 
  6476  0718                     	;# 
  6477  0719                     	;# 
  6478  071A                     	;# 
  6479  071B                     	;# 
  6480  071C                     	;# 
  6481  071D                     	;# 
  6482  071E                     	;# 
  6483  0796                     	;# 
  6484  0797                     	;# 
  6485  0798                     	;# 
  6486  0799                     	;# 
  6487  079A                     	;# 
  6488  079B                     	;# 
  6489  080C                     	;# 
  6490  080D                     	;# 
  6491  080E                     	;# 
  6492  080F                     	;# 
  6493  0810                     	;# 
  6494  0811                     	;# 
  6495  0812                     	;# 
  6496  0813                     	;# 
  6497  0814                     	;# 
  6498  081A                     	;# 
  6499  081B                     	;# 
  6500  081C                     	;# 
  6501  081D                     	;# 
  6502  081E                     	;# 
  6503  081F                     	;# 
  6504  088C                     	;# 
  6505  088D                     	;# 
  6506  088E                     	;# 
  6507  088F                     	;# 
  6508  0890                     	;# 
  6509  0891                     	;# 
  6510  0892                     	;# 
  6511  0893                     	;# 
  6512  0895                     	;# 
  6513  0896                     	;# 
  6514  0897                     	;# 
  6515  0898                     	;# 
  6516  0899                     	;# 
  6517  089A                     	;# 
  6518  089B                     	;# 
  6519  090C                     	;# 
  6520  090E                     	;# 
  6521  090F                     	;# 
  6522  091F                     	;# 
  6523  091F                     	;# 
  6524  098F                     	;# 
  6525  098F                     	;# 
  6526  0990                     	;# 
  6527  0991                     	;# 
  6528  0992                     	;# 
  6529  0993                     	;# 
  6530  0994                     	;# 
  6531  0995                     	;# 
  6532  0996                     	;# 
  6533  0997                     	;# 
  6534  0E0F                     	;# 
  6535  0E10                     	;# 
  6536  0E11                     	;# 
  6537  0E12                     	;# 
  6538  0E13                     	;# 
  6539  0E14                     	;# 
  6540  0E15                     	;# 
  6541  0E16                     	;# 
  6542  0E17                     	;# 
  6543  0E18                     	;# 
  6544  0E19                     	;# 
  6545  0E1A                     	;# 
  6546  0E1B                     	;# 
  6547  0E1C                     	;# 
  6548  0E1D                     	;# 
  6549  0E1E                     	;# 
  6550  0E1F                     	;# 
  6551  0E20                     	;# 
  6552  0E21                     	;# 
  6553  0E22                     	;# 
  6554  0E23                     	;# 
  6555  0E24                     	;# 
  6556  0E25                     	;# 
  6557  0E26                     	;# 
  6558  0E27                     	;# 
  6559  0E28                     	;# 
  6560  0E29                     	;# 
  6561  0E2A                     	;# 
  6562  0E2B                     	;# 
  6563  0E2C                     	;# 
  6564  0E2D                     	;# 
  6565  0E2E                     	;# 
  6566  0E2F                     	;# 
  6567  0E30                     	;# 
  6568  0E31                     	;# 
  6569  0E32                     	;# 
  6570  0E33                     	;# 
  6571  0E34                     	;# 
  6572  0E35                     	;# 
  6573  0E36                     	;# 
  6574  0E37                     	;# 
  6575  0E8F                     	;# 
  6576  0E90                     	;# 
  6577  0E91                     	;# 
  6578  0E92                     	;# 
  6579  0E93                     	;# 
  6580  0E94                     	;# 
  6581  0E95                     	;# 
  6582  0E96                     	;# 
  6583  0E97                     	;# 
  6584  0E9C                     	;# 
  6585  0E9D                     	;# 
  6586  0E9E                     	;# 
  6587  0EA1                     	;# 
  6588  0EA2                     	;# 
  6589  0EA3                     	;# 
  6590  0EA4                     	;# 
  6591  0EA5                     	;# 
  6592  0EA9                     	;# 
  6593  0EAA                     	;# 
  6594  0EAB                     	;# 
  6595  0EAC                     	;# 
  6596  0EB1                     	;# 
  6597  0EB2                     	;# 
  6598  0EB3                     	;# 
  6599  0EB8                     	;# 
  6600  0EB9                     	;# 
  6601  0EBA                     	;# 
  6602  0EBB                     	;# 
  6603  0EBC                     	;# 
  6604  0EBD                     	;# 
  6605  0EBE                     	;# 
  6606  0EC3                     	;# 
  6607  0EC5                     	;# 
  6608  0EC6                     	;# 
  6609  0EC7                     	;# 
  6610  0EC8                     	;# 
  6611  0EC9                     	;# 
  6612  0ECA                     	;# 
  6613  0ECB                     	;# 
  6614  0ECC                     	;# 
  6615  0F10                     	;# 
  6616  0F11                     	;# 
  6617  0F12                     	;# 
  6618  0F13                     	;# 
  6619  0F14                     	;# 
  6620  0F15                     	;# 
  6621  0F16                     	;# 
  6622  0F17                     	;# 
  6623  0F18                     	;# 
  6624  0F19                     	;# 
  6625  0F1A                     	;# 
  6626  0F1B                     	;# 
  6627  0F1C                     	;# 
  6628  0F1D                     	;# 
  6629  0F1E                     	;# 
  6630  0F1F                     	;# 
  6631  0F20                     	;# 
  6632  0F21                     	;# 
  6633  0F22                     	;# 
  6634  0F23                     	;# 
  6635  0F24                     	;# 
  6636  0F25                     	;# 
  6637  0F26                     	;# 
  6638  0F27                     	;# 
  6639  0F28                     	;# 
  6640  0F29                     	;# 
  6641  0F2A                     	;# 
  6642  0F2B                     	;# 
  6643  0F2C                     	;# 
  6644  0F2D                     	;# 
  6645  0F2E                     	;# 
  6646  0F2F                     	;# 
  6647  0F30                     	;# 
  6648  0F31                     	;# 
  6649  0F32                     	;# 
  6650  0F38                     	;# 
  6651  0F39                     	;# 
  6652  0F3A                     	;# 
  6653  0F3B                     	;# 
  6654  0F3C                     	;# 
  6655  0F3D                     	;# 
  6656  0F3E                     	;# 
  6657  0F3F                     	;# 
  6658  0F40                     	;# 
  6659  0F41                     	;# 
  6660  0F43                     	;# 
  6661  0F44                     	;# 
  6662  0F45                     	;# 
  6663  0F46                     	;# 
  6664  0F47                     	;# 
  6665  0F48                     	;# 
  6666  0F49                     	;# 
  6667  0F4A                     	;# 
  6668  0F4B                     	;# 
  6669  0F4C                     	;# 
  6670  0F4E                     	;# 
  6671  0F4F                     	;# 
  6672  0F50                     	;# 
  6673  0F51                     	;# 
  6674  0F52                     	;# 
  6675  0F53                     	;# 
  6676  0F54                     	;# 
  6677  0F55                     	;# 
  6678  0F56                     	;# 
  6679  0F57                     	;# 
  6680  0F59                     	;# 
  6681  0F5A                     	;# 
  6682  0F5B                     	;# 
  6683  0F5C                     	;# 
  6684  0F5D                     	;# 
  6685  0F61                     	;# 
  6686  0F62                     	;# 
  6687  0F64                     	;# 
  6688  0F65                     	;# 
  6689  0F66                     	;# 
  6690  0F67                     	;# 
  6691  0F68                     	;# 
  6692  0F69                     	;# 
  6693  0F6A                     	;# 
  6694  0F6B                     	;# 
  6695  0F6C                     	;# 
  6696  0F6D                     	;# 
  6697  0FE4                     	;# 
  6698  0FE5                     	;# 
  6699  0FE6                     	;# 
  6700  0FE7                     	;# 
  6701  0FE8                     	;# 
  6702  0FE9                     	;# 
  6703  0FEA                     	;# 
  6704  0FEB                     	;# 
  6705  0FED                     	;# 
  6706  0FEE                     	;# 
  6707  0FEF                     	;# 
  6708  0000                     	;# 
  6709  0001                     	;# 
  6710  0002                     	;# 
  6711  0003                     	;# 
  6712  0004                     	;# 
  6713  0005                     	;# 
  6714  0006                     	;# 
  6715  0007                     	;# 
  6716  0008                     	;# 
  6717  0009                     	;# 
  6718  000A                     	;# 
  6719  000B                     	;# 
  6720  000C                     	;# 
  6721  000D                     	;# 
  6722  000E                     	;# 
  6723  000F                     	;# 
  6724  0010                     	;# 
  6725  0011                     	;# 
  6726  0012                     	;# 
  6727  0013                     	;# 
  6728  0014                     	;# 
  6729  0015                     	;# 
  6730  0016                     	;# 
  6731  0017                     	;# 
  6732  0018                     	;# 
  6733  0019                     	;# 
  6734  001A                     	;# 
  6735  001C                     	;# 
  6736  001C                     	;# 
  6737  001D                     	;# 
  6738  001D                     	;# 
  6739  001E                     	;# 
  6740  001F                     	;# 
  6741  008C                     	;# 
  6742  008C                     	;# 
  6743  008D                     	;# 
  6744  008E                     	;# 
  6745  008E                     	;# 
  6746  008F                     	;# 
  6747  0090                     	;# 
  6748  0090                     	;# 
  6749  0091                     	;# 
  6750  0093                     	;# 
  6751  0094                     	;# 
  6752  0095                     	;# 
  6753  0096                     	;# 
  6754  0097                     	;# 
  6755  0098                     	;# 
  6756  0099                     	;# 
  6757  009A                     	;# 
  6758  009B                     	;# 
  6759  009C                     	;# 
  6760  009D                     	;# 
  6761  009E                     	;# 
  6762  010C                     	;# 
  6763  010D                     	;# 
  6764  010E                     	;# 
  6765  010E                     	;# 
  6766  010F                     	;# 
  6767  0110                     	;# 
  6768  0110                     	;# 
  6769  0111                     	;# 
  6770  0112                     	;# 
  6771  0112                     	;# 
  6772  0113                     	;# 
  6773  0114                     	;# 
  6774  0114                     	;# 
  6775  0115                     	;# 
  6776  0116                     	;# 
  6777  0116                     	;# 
  6778  0117                     	;# 
  6779  0119                     	;# 
  6780  0119                     	;# 
  6781  0119                     	;# 
  6782  011A                     	;# 
  6783  011A                     	;# 
  6784  011A                     	;# 
  6785  011B                     	;# 
  6786  011B                     	;# 
  6787  011B                     	;# 
  6788  011B                     	;# 
  6789  011B                     	;# 
  6790  011C                     	;# 
  6791  011C                     	;# 
  6792  011C                     	;# 
  6793  011D                     	;# 
  6794  011D                     	;# 
  6795  011D                     	;# 
  6796  011E                     	;# 
  6797  011E                     	;# 
  6798  011E                     	;# 
  6799  011F                     	;# 
  6800  011F                     	;# 
  6801  011F                     	;# 
  6802  011F                     	;# 
  6803  011F                     	;# 
  6804  018C                     	;# 
  6805  018D                     	;# 
  6806  018E                     	;# 
  6807  018F                     	;# 
  6808  0190                     	;# 
  6809  0191                     	;# 
  6810  0192                     	;# 
  6811  0196                     	;# 
  6812  0197                     	;# 
  6813  0198                     	;# 
  6814  0199                     	;# 
  6815  019A                     	;# 
  6816  019B                     	;# 
  6817  019C                     	;# 
  6818  020C                     	;# 
  6819  020C                     	;# 
  6820  020D                     	;# 
  6821  020E                     	;# 
  6822  020F                     	;# 
  6823  020F                     	;# 
  6824  0210                     	;# 
  6825  0210                     	;# 
  6826  0211                     	;# 
  6827  0211                     	;# 
  6828  0212                     	;# 
  6829  0212                     	;# 
  6830  0213                     	;# 
  6831  0214                     	;# 
  6832  0215                     	;# 
  6833  0215                     	;# 
  6834  0216                     	;# 
  6835  0216                     	;# 
  6836  0217                     	;# 
  6837  0217                     	;# 
  6838  0218                     	;# 
  6839  0218                     	;# 
  6840  0219                     	;# 
  6841  021A                     	;# 
  6842  021B                     	;# 
  6843  021B                     	;# 
  6844  021C                     	;# 
  6845  021C                     	;# 
  6846  021D                     	;# 
  6847  021D                     	;# 
  6848  021E                     	;# 
  6849  021F                     	;# 
  6850  028C                     	;# 
  6851  028C                     	;# 
  6852  028D                     	;# 
  6853  028D                     	;# 
  6854  028E                     	;# 
  6855  028F                     	;# 
  6856  0290                     	;# 
  6857  0290                     	;# 
  6858  0291                     	;# 
  6859  0292                     	;# 
  6860  0292                     	;# 
  6861  0293                     	;# 
  6862  0293                     	;# 
  6863  0294                     	;# 
  6864  0295                     	;# 
  6865  0296                     	;# 
  6866  0296                     	;# 
  6867  0297                     	;# 
  6868  0298                     	;# 
  6869  0298                     	;# 
  6870  0299                     	;# 
  6871  0299                     	;# 
  6872  029A                     	;# 
  6873  029B                     	;# 
  6874  029C                     	;# 
  6875  029C                     	;# 
  6876  029D                     	;# 
  6877  030C                     	;# 
  6878  030C                     	;# 
  6879  030D                     	;# 
  6880  030E                     	;# 
  6881  030F                     	;# 
  6882  0310                     	;# 
  6883  0310                     	;# 
  6884  0311                     	;# 
  6885  0312                     	;# 
  6886  0313                     	;# 
  6887  0314                     	;# 
  6888  0314                     	;# 
  6889  0315                     	;# 
  6890  0316                     	;# 
  6891  0317                     	;# 
  6892  0318                     	;# 
  6893  0318                     	;# 
  6894  0319                     	;# 
  6895  031A                     	;# 
  6896  031B                     	;# 
  6897  031C                     	;# 
  6898  031C                     	;# 
  6899  031D                     	;# 
  6900  031E                     	;# 
  6901  031F                     	;# 
  6902  038C                     	;# 
  6903  038C                     	;# 
  6904  038D                     	;# 
  6905  038E                     	;# 
  6906  0390                     	;# 
  6907  0390                     	;# 
  6908  0391                     	;# 
  6909  0392                     	;# 
  6910  040C                     	;# 
  6911  040D                     	;# 
  6912  040E                     	;# 
  6913  040F                     	;# 
  6914  0410                     	;# 
  6915  0411                     	;# 
  6916  0416                     	;# 
  6917  0416                     	;# 
  6918  0417                     	;# 
  6919  0418                     	;# 
  6920  0418                     	;# 
  6921  0419                     	;# 
  6922  041A                     	;# 
  6923  041A                     	;# 
  6924  041B                     	;# 
  6925  041C                     	;# 
  6926  041C                     	;# 
  6927  041D                     	;# 
  6928  041E                     	;# 
  6929  041F                     	;# 
  6930  048C                     	;# 
  6931  048C                     	;# 
  6932  048D                     	;# 
  6933  048E                     	;# 
  6934  048F                     	;# 
  6935  048F                     	;# 
  6936  0490                     	;# 
  6937  0491                     	;# 
  6938  0492                     	;# 
  6939  0492                     	;# 
  6940  0493                     	;# 
  6941  0494                     	;# 
  6942  0495                     	;# 
  6943  0495                     	;# 
  6944  0496                     	;# 
  6945  0497                     	;# 
  6946  0498                     	;# 
  6947  0499                     	;# 
  6948  049A                     	;# 
  6949  049B                     	;# 
  6950  049C                     	;# 
  6951  049D                     	;# 
  6952  050C                     	;# 
  6953  050C                     	;# 
  6954  050D                     	;# 
  6955  050E                     	;# 
  6956  050F                     	;# 
  6957  050F                     	;# 
  6958  0510                     	;# 
  6959  0511                     	;# 
  6960  0512                     	;# 
  6961  0512                     	;# 
  6962  0513                     	;# 
  6963  0514                     	;# 
  6964  0515                     	;# 
  6965  0515                     	;# 
  6966  0516                     	;# 
  6967  0517                     	;# 
  6968  0518                     	;# 
  6969  0519                     	;# 
  6970  051A                     	;# 
  6971  051B                     	;# 
  6972  051C                     	;# 
  6973  051D                     	;# 
  6974  058C                     	;# 
  6975  058C                     	;# 
  6976  058D                     	;# 
  6977  058E                     	;# 
  6978  058F                     	;# 
  6979  058F                     	;# 
  6980  0590                     	;# 
  6981  0591                     	;# 
  6982  0592                     	;# 
  6983  0593                     	;# 
  6984  060C                     	;# 
  6985  060D                     	;# 
  6986  060E                     	;# 
  6987  060F                     	;# 
  6988  0610                     	;# 
  6989  0611                     	;# 
  6990  0612                     	;# 
  6991  0613                     	;# 
  6992  0614                     	;# 
  6993  0616                     	;# 
  6994  0617                     	;# 
  6995  0618                     	;# 
  6996  0619                     	;# 
  6997  061A                     	;# 
  6998  061B                     	;# 
  6999  061C                     	;# 
  7000  061D                     	;# 
  7001  061E                     	;# 
  7002  068C                     	;# 
  7003  068D                     	;# 
  7004  068E                     	;# 
  7005  068F                     	;# 
  7006  0690                     	;# 
  7007  0691                     	;# 
  7008  0692                     	;# 
  7009  0693                     	;# 
  7010  0694                     	;# 
  7011  070C                     	;# 
  7012  070D                     	;# 
  7013  070E                     	;# 
  7014  070F                     	;# 
  7015  0710                     	;# 
  7016  0711                     	;# 
  7017  0712                     	;# 
  7018  0713                     	;# 
  7019  0714                     	;# 
  7020  0716                     	;# 
  7021  0717                     	;# 
  7022  0718                     	;# 
  7023  0719                     	;# 
  7024  071A                     	;# 
  7025  071B                     	;# 
  7026  071C                     	;# 
  7027  071D                     	;# 
  7028  071E                     	;# 
  7029  0796                     	;# 
  7030  0797                     	;# 
  7031  0798                     	;# 
  7032  0799                     	;# 
  7033  079A                     	;# 
  7034  079B                     	;# 
  7035  080C                     	;# 
  7036  080D                     	;# 
  7037  080E                     	;# 
  7038  080F                     	;# 
  7039  0810                     	;# 
  7040  0811                     	;# 
  7041  0812                     	;# 
  7042  0813                     	;# 
  7043  0814                     	;# 
  7044  081A                     	;# 
  7045  081B                     	;# 
  7046  081C                     	;# 
  7047  081D                     	;# 
  7048  081E                     	;# 
  7049  081F                     	;# 
  7050  088C                     	;# 
  7051  088D                     	;# 
  7052  088E                     	;# 
  7053  088F                     	;# 
  7054  0890                     	;# 
  7055  0891                     	;# 
  7056  0892                     	;# 
  7057  0893                     	;# 
  7058  0895                     	;# 
  7059  0896                     	;# 
  7060  0897                     	;# 
  7061  0898                     	;# 
  7062  0899                     	;# 
  7063  089A                     	;# 
  7064  089B                     	;# 
  7065  090C                     	;# 
  7066  090E                     	;# 
  7067  090F                     	;# 
  7068  091F                     	;# 
  7069  091F                     	;# 
  7070  098F                     	;# 
  7071  098F                     	;# 
  7072  0990                     	;# 
  7073  0991                     	;# 
  7074  0992                     	;# 
  7075  0993                     	;# 
  7076  0994                     	;# 
  7077  0995                     	;# 
  7078  0996                     	;# 
  7079  0997                     	;# 
  7080  0E0F                     	;# 
  7081  0E10                     	;# 
  7082  0E11                     	;# 
  7083  0E12                     	;# 
  7084  0E13                     	;# 
  7085  0E14                     	;# 
  7086  0E15                     	;# 
  7087  0E16                     	;# 
  7088  0E17                     	;# 
  7089  0E18                     	;# 
  7090  0E19                     	;# 
  7091  0E1A                     	;# 
  7092  0E1B                     	;# 
  7093  0E1C                     	;# 
  7094  0E1D                     	;# 
  7095  0E1E                     	;# 
  7096  0E1F                     	;# 
  7097  0E20                     	;# 
  7098  0E21                     	;# 
  7099  0E22                     	;# 
  7100  0E23                     	;# 
  7101  0E24                     	;# 
  7102  0E25                     	;# 
  7103  0E26                     	;# 
  7104  0E27                     	;# 
  7105  0E28                     	;# 
  7106  0E29                     	;# 
  7107  0E2A                     	;# 
  7108  0E2B                     	;# 
  7109  0E2C                     	;# 
  7110  0E2D                     	;# 
  7111  0E2E                     	;# 
  7112  0E2F                     	;# 
  7113  0E30                     	;# 
  7114  0E31                     	;# 
  7115  0E32                     	;# 
  7116  0E33                     	;# 
  7117  0E34                     	;# 
  7118  0E35                     	;# 
  7119  0E36                     	;# 
  7120  0E37                     	;# 
  7121  0E8F                     	;# 
  7122  0E90                     	;# 
  7123  0E91                     	;# 
  7124  0E92                     	;# 
  7125  0E93                     	;# 
  7126  0E94                     	;# 
  7127  0E95                     	;# 
  7128  0E96                     	;# 
  7129  0E97                     	;# 
  7130  0E9C                     	;# 
  7131  0E9D                     	;# 
  7132  0E9E                     	;# 
  7133  0EA1                     	;# 
  7134  0EA2                     	;# 
  7135  0EA3                     	;# 
  7136  0EA4                     	;# 
  7137  0EA5                     	;# 
  7138  0EA9                     	;# 
  7139  0EAA                     	;# 
  7140  0EAB                     	;# 
  7141  0EAC                     	;# 
  7142  0EB1                     	;# 
  7143  0EB2                     	;# 
  7144  0EB3                     	;# 
  7145  0EB8                     	;# 
  7146  0EB9                     	;# 
  7147  0EBA                     	;# 
  7148  0EBB                     	;# 
  7149  0EBC                     	;# 
  7150  0EBD                     	;# 
  7151  0EBE                     	;# 
  7152  0EC3                     	;# 
  7153  0EC5                     	;# 
  7154  0EC6                     	;# 
  7155  0EC7                     	;# 
  7156  0EC8                     	;# 
  7157  0EC9                     	;# 
  7158  0ECA                     	;# 
  7159  0ECB                     	;# 
  7160  0ECC                     	;# 
  7161  0F10                     	;# 
  7162  0F11                     	;# 
  7163  0F12                     	;# 
  7164  0F13                     	;# 
  7165  0F14                     	;# 
  7166  0F15                     	;# 
  7167  0F16                     	;# 
  7168  0F17                     	;# 
  7169  0F18                     	;# 
  7170  0F19                     	;# 
  7171  0F1A                     	;# 
  7172  0F1B                     	;# 
  7173  0F1C                     	;# 
  7174  0F1D                     	;# 
  7175  0F1E                     	;# 
  7176  0F1F                     	;# 
  7177  0F20                     	;# 
  7178  0F21                     	;# 
  7179  0F22                     	;# 
  7180  0F23                     	;# 
  7181  0F24                     	;# 
  7182  0F25                     	;# 
  7183  0F26                     	;# 
  7184  0F27                     	;# 
  7185  0F28                     	;# 
  7186  0F29                     	;# 
  7187  0F2A                     	;# 
  7188  0F2B                     	;# 
  7189  0F2C                     	;# 
  7190  0F2D                     	;# 
  7191  0F2E                     	;# 
  7192  0F2F                     	;# 
  7193  0F30                     	;# 
  7194  0F31                     	;# 
  7195  0F32                     	;# 
  7196  0F38                     	;# 
  7197  0F39                     	;# 
  7198  0F3A                     	;# 
  7199  0F3B                     	;# 
  7200  0F3C                     	;# 
  7201  0F3D                     	;# 
  7202  0F3E                     	;# 
  7203  0F3F                     	;# 
  7204  0F40                     	;# 
  7205  0F41                     	;# 
  7206  0F43                     	;# 
  7207  0F44                     	;# 
  7208  0F45                     	;# 
  7209  0F46                     	;# 
  7210  0F47                     	;# 
  7211  0F48                     	;# 
  7212  0F49                     	;# 
  7213  0F4A                     	;# 
  7214  0F4B                     	;# 
  7215  0F4C                     	;# 
  7216  0F4E                     	;# 
  7217  0F4F                     	;# 
  7218  0F50                     	;# 
  7219  0F51                     	;# 
  7220  0F52                     	;# 
  7221  0F53                     	;# 
  7222  0F54                     	;# 
  7223  0F55                     	;# 
  7224  0F56                     	;# 
  7225  0F57                     	;# 
  7226  0F59                     	;# 
  7227  0F5A                     	;# 
  7228  0F5B                     	;# 
  7229  0F5C                     	;# 
  7230  0F5D                     	;# 
  7231  0F61                     	;# 
  7232  0F62                     	;# 
  7233  0F64                     	;# 
  7234  0F65                     	;# 
  7235  0F66                     	;# 
  7236  0F67                     	;# 
  7237  0F68                     	;# 
  7238  0F69                     	;# 
  7239  0F6A                     	;# 
  7240  0F6B                     	;# 
  7241  0F6C                     	;# 
  7242  0F6D                     	;# 
  7243  0FE4                     	;# 
  7244  0FE5                     	;# 
  7245  0FE6                     	;# 
  7246  0FE7                     	;# 
  7247  0FE8                     	;# 
  7248  0FE9                     	;# 
  7249  0FEA                     	;# 
  7250  0FEB                     	;# 
  7251  0FED                     	;# 
  7252  0FEE                     	;# 
  7253  0FEF                     	;# 
  7254  0000                     	;# 
  7255  0001                     	;# 
  7256  0002                     	;# 
  7257  0003                     	;# 
  7258  0004                     	;# 
  7259  0005                     	;# 
  7260  0006                     	;# 
  7261  0007                     	;# 
  7262  0008                     	;# 
  7263  0009                     	;# 
  7264  000A                     	;# 
  7265  000B                     	;# 
  7266  000C                     	;# 
  7267  000D                     	;# 
  7268  000E                     	;# 
  7269  000F                     	;# 
  7270  0010                     	;# 
  7271  0011                     	;# 
  7272  0012                     	;# 
  7273  0013                     	;# 
  7274  0014                     	;# 
  7275  0015                     	;# 
  7276  0016                     	;# 
  7277  0017                     	;# 
  7278  0018                     	;# 
  7279  0019                     	;# 
  7280  001A                     	;# 
  7281  001C                     	;# 
  7282  001C                     	;# 
  7283  001D                     	;# 
  7284  001D                     	;# 
  7285  001E                     	;# 
  7286  001F                     	;# 
  7287  008C                     	;# 
  7288  008C                     	;# 
  7289  008D                     	;# 
  7290  008E                     	;# 
  7291  008E                     	;# 
  7292  008F                     	;# 
  7293  0090                     	;# 
  7294  0090                     	;# 
  7295  0091                     	;# 
  7296  0093                     	;# 
  7297  0094                     	;# 
  7298  0095                     	;# 
  7299  0096                     	;# 
  7300  0097                     	;# 
  7301  0098                     	;# 
  7302  0099                     	;# 
  7303  009A                     	;# 
  7304  009B                     	;# 
  7305  009C                     	;# 
  7306  009D                     	;# 
  7307  009E                     	;# 
  7308  010C                     	;# 
  7309  010D                     	;# 
  7310  010E                     	;# 
  7311  010E                     	;# 
  7312  010F                     	;# 
  7313  0110                     	;# 
  7314  0110                     	;# 
  7315  0111                     	;# 
  7316  0112                     	;# 
  7317  0112                     	;# 
  7318  0113                     	;# 
  7319  0114                     	;# 
  7320  0114                     	;# 
  7321  0115                     	;# 
  7322  0116                     	;# 
  7323  0116                     	;# 
  7324  0117                     	;# 
  7325  0119                     	;# 
  7326  0119                     	;# 
  7327  0119                     	;# 
  7328  011A                     	;# 
  7329  011A                     	;# 
  7330  011A                     	;# 
  7331  011B                     	;# 
  7332  011B                     	;# 
  7333  011B                     	;# 
  7334  011B                     	;# 
  7335  011B                     	;# 
  7336  011C                     	;# 
  7337  011C                     	;# 
  7338  011C                     	;# 
  7339  011D                     	;# 
  7340  011D                     	;# 
  7341  011D                     	;# 
  7342  011E                     	;# 
  7343  011E                     	;# 
  7344  011E                     	;# 
  7345  011F                     	;# 
  7346  011F                     	;# 
  7347  011F                     	;# 
  7348  011F                     	;# 
  7349  011F                     	;# 
  7350  018C                     	;# 
  7351  018D                     	;# 
  7352  018E                     	;# 
  7353  018F                     	;# 
  7354  0190                     	;# 
  7355  0191                     	;# 
  7356  0192                     	;# 
  7357  0196                     	;# 
  7358  0197                     	;# 
  7359  0198                     	;# 
  7360  0199                     	;# 
  7361  019A                     	;# 
  7362  019B                     	;# 
  7363  019C                     	;# 
  7364  020C                     	;# 
  7365  020C                     	;# 
  7366  020D                     	;# 
  7367  020E                     	;# 
  7368  020F                     	;# 
  7369  020F                     	;# 
  7370  0210                     	;# 
  7371  0210                     	;# 
  7372  0211                     	;# 
  7373  0211                     	;# 
  7374  0212                     	;# 
  7375  0212                     	;# 
  7376  0213                     	;# 
  7377  0214                     	;# 
  7378  0215                     	;# 
  7379  0215                     	;# 
  7380  0216                     	;# 
  7381  0216                     	;# 
  7382  0217                     	;# 
  7383  0217                     	;# 
  7384  0218                     	;# 
  7385  0218                     	;# 
  7386  0219                     	;# 
  7387  021A                     	;# 
  7388  021B                     	;# 
  7389  021B                     	;# 
  7390  021C                     	;# 
  7391  021C                     	;# 
  7392  021D                     	;# 
  7393  021D                     	;# 
  7394  021E                     	;# 
  7395  021F                     	;# 
  7396  028C                     	;# 
  7397  028C                     	;# 
  7398  028D                     	;# 
  7399  028D                     	;# 
  7400  028E                     	;# 
  7401  028F                     	;# 
  7402  0290                     	;# 
  7403  0290                     	;# 
  7404  0291                     	;# 
  7405  0292                     	;# 
  7406  0292                     	;# 
  7407  0293                     	;# 
  7408  0293                     	;# 
  7409  0294                     	;# 
  7410  0295                     	;# 
  7411  0296                     	;# 
  7412  0296                     	;# 
  7413  0297                     	;# 
  7414  0298                     	;# 
  7415  0298                     	;# 
  7416  0299                     	;# 
  7417  0299                     	;# 
  7418  029A                     	;# 
  7419  029B                     	;# 
  7420  029C                     	;# 
  7421  029C                     	;# 
  7422  029D                     	;# 
  7423  030C                     	;# 
  7424  030C                     	;# 
  7425  030D                     	;# 
  7426  030E                     	;# 
  7427  030F                     	;# 
  7428  0310                     	;# 
  7429  0310                     	;# 
  7430  0311                     	;# 
  7431  0312                     	;# 
  7432  0313                     	;# 
  7433  0314                     	;# 
  7434  0314                     	;# 
  7435  0315                     	;# 
  7436  0316                     	;# 
  7437  0317                     	;# 
  7438  0318                     	;# 
  7439  0318                     	;# 
  7440  0319                     	;# 
  7441  031A                     	;# 
  7442  031B                     	;# 
  7443  031C                     	;# 
  7444  031C                     	;# 
  7445  031D                     	;# 
  7446  031E                     	;# 
  7447  031F                     	;# 
  7448  038C                     	;# 
  7449  038C                     	;# 
  7450  038D                     	;# 
  7451  038E                     	;# 
  7452  0390                     	;# 
  7453  0390                     	;# 
  7454  0391                     	;# 
  7455  0392                     	;# 
  7456  040C                     	;# 
  7457  040D                     	;# 
  7458  040E                     	;# 
  7459  040F                     	;# 
  7460  0410                     	;# 
  7461  0411                     	;# 
  7462  0416                     	;# 
  7463  0416                     	;# 
  7464  0417                     	;# 
  7465  0418                     	;# 
  7466  0418                     	;# 
  7467  0419                     	;# 
  7468  041A                     	;# 
  7469  041A                     	;# 
  7470  041B                     	;# 
  7471  041C                     	;# 
  7472  041C                     	;# 
  7473  041D                     	;# 
  7474  041E                     	;# 
  7475  041F                     	;# 
  7476  048C                     	;# 
  7477  048C                     	;# 
  7478  048D                     	;# 
  7479  048E                     	;# 
  7480  048F                     	;# 
  7481  048F                     	;# 
  7482  0490                     	;# 
  7483  0491                     	;# 
  7484  0492                     	;# 
  7485  0492                     	;# 
  7486  0493                     	;# 
  7487  0494                     	;# 
  7488  0495                     	;# 
  7489  0495                     	;# 
  7490  0496                     	;# 
  7491  0497                     	;# 
  7492  0498                     	;# 
  7493  0499                     	;# 
  7494  049A                     	;# 
  7495  049B                     	;# 
  7496  049C                     	;# 
  7497  049D                     	;# 
  7498  050C                     	;# 
  7499  050C                     	;# 
  7500  050D                     	;# 
  7501  050E                     	;# 
  7502  050F                     	;# 
  7503  050F                     	;# 
  7504  0510                     	;# 
  7505  0511                     	;# 
  7506  0512                     	;# 
  7507  0512                     	;# 
  7508  0513                     	;# 
  7509  0514                     	;# 
  7510  0515                     	;# 
  7511  0515                     	;# 
  7512  0516                     	;# 
  7513  0517                     	;# 
  7514  0518                     	;# 
  7515  0519                     	;# 
  7516  051A                     	;# 
  7517  051B                     	;# 
  7518  051C                     	;# 
  7519  051D                     	;# 
  7520  058C                     	;# 
  7521  058C                     	;# 
  7522  058D                     	;# 
  7523  058E                     	;# 
  7524  058F                     	;# 
  7525  058F                     	;# 
  7526  0590                     	;# 
  7527  0591                     	;# 
  7528  0592                     	;# 
  7529  0593                     	;# 
  7530  060C                     	;# 
  7531  060D                     	;# 
  7532  060E                     	;# 
  7533  060F                     	;# 
  7534  0610                     	;# 
  7535  0611                     	;# 
  7536  0612                     	;# 
  7537  0613                     	;# 
  7538  0614                     	;# 
  7539  0616                     	;# 
  7540  0617                     	;# 
  7541  0618                     	;# 
  7542  0619                     	;# 
  7543  061A                     	;# 
  7544  061B                     	;# 
  7545  061C                     	;# 
  7546  061D                     	;# 
  7547  061E                     	;# 
  7548  068C                     	;# 
  7549  068D                     	;# 
  7550  068E                     	;# 
  7551  068F                     	;# 
  7552  0690                     	;# 
  7553  0691                     	;# 
  7554  0692                     	;# 
  7555  0693                     	;# 
  7556  0694                     	;# 
  7557  070C                     	;# 
  7558  070D                     	;# 
  7559  070E                     	;# 
  7560  070F                     	;# 
  7561  0710                     	;# 
  7562  0711                     	;# 
  7563  0712                     	;# 
  7564  0713                     	;# 
  7565  0714                     	;# 
  7566  0716                     	;# 
  7567  0717                     	;# 
  7568  0718                     	;# 
  7569  0719                     	;# 
  7570  071A                     	;# 
  7571  071B                     	;# 
  7572  071C                     	;# 
  7573  071D                     	;# 
  7574  071E                     	;# 
  7575  0796                     	;# 
  7576  0797                     	;# 
  7577  0798                     	;# 
  7578  0799                     	;# 
  7579  079A                     	;# 
  7580  079B                     	;# 
  7581  080C                     	;# 
  7582  080D                     	;# 
  7583  080E                     	;# 
  7584  080F                     	;# 
  7585  0810                     	;# 
  7586  0811                     	;# 
  7587  0812                     	;# 
  7588  0813                     	;# 
  7589  0814                     	;# 
  7590  081A                     	;# 
  7591  081B                     	;# 
  7592  081C                     	;# 
  7593  081D                     	;# 
  7594  081E                     	;# 
  7595  081F                     	;# 
  7596  088C                     	;# 
  7597  088D                     	;# 
  7598  088E                     	;# 
  7599  088F                     	;# 
  7600  0890                     	;# 
  7601  0891                     	;# 
  7602  0892                     	;# 
  7603  0893                     	;# 
  7604  0895                     	;# 
  7605  0896                     	;# 
  7606  0897                     	;# 
  7607  0898                     	;# 
  7608  0899                     	;# 
  7609  089A                     	;# 
  7610  089B                     	;# 
  7611  090C                     	;# 
  7612  090E                     	;# 
  7613  090F                     	;# 
  7614  091F                     	;# 
  7615  091F                     	;# 
  7616  098F                     	;# 
  7617  098F                     	;# 
  7618  0990                     	;# 
  7619  0991                     	;# 
  7620  0992                     	;# 
  7621  0993                     	;# 
  7622  0994                     	;# 
  7623  0995                     	;# 
  7624  0996                     	;# 
  7625  0997                     	;# 
  7626  0E0F                     	;# 
  7627  0E10                     	;# 
  7628  0E11                     	;# 
  7629  0E12                     	;# 
  7630  0E13                     	;# 
  7631  0E14                     	;# 
  7632  0E15                     	;# 
  7633  0E16                     	;# 
  7634  0E17                     	;# 
  7635  0E18                     	;# 
  7636  0E19                     	;# 
  7637  0E1A                     	;# 
  7638  0E1B                     	;# 
  7639  0E1C                     	;# 
  7640  0E1D                     	;# 
  7641  0E1E                     	;# 
  7642  0E1F                     	;# 
  7643  0E20                     	;# 
  7644  0E21                     	;# 
  7645  0E22                     	;# 
  7646  0E23                     	;# 
  7647  0E24                     	;# 
  7648  0E25                     	;# 
  7649  0E26                     	;# 
  7650  0E27                     	;# 
  7651  0E28                     	;# 
  7652  0E29                     	;# 
  7653  0E2A                     	;# 
  7654  0E2B                     	;# 
  7655  0E2C                     	;# 
  7656  0E2D                     	;# 
  7657  0E2E                     	;# 
  7658  0E2F                     	;# 
  7659  0E30                     	;# 
  7660  0E31                     	;# 
  7661  0E32                     	;# 
  7662  0E33                     	;# 
  7663  0E34                     	;# 
  7664  0E35                     	;# 
  7665  0E36                     	;# 
  7666  0E37                     	;# 
  7667  0E8F                     	;# 
  7668  0E90                     	;# 
  7669  0E91                     	;# 
  7670  0E92                     	;# 
  7671  0E93                     	;# 
  7672  0E94                     	;# 
  7673  0E95                     	;# 
  7674  0E96                     	;# 
  7675  0E97                     	;# 
  7676  0E9C                     	;# 
  7677  0E9D                     	;# 
  7678  0E9E                     	;# 
  7679  0EA1                     	;# 
  7680  0EA2                     	;# 
  7681  0EA3                     	;# 
  7682  0EA4                     	;# 
  7683  0EA5                     	;# 
  7684  0EA9                     	;# 
  7685  0EAA                     	;# 
  7686  0EAB                     	;# 
  7687  0EAC                     	;# 
  7688  0EB1                     	;# 
  7689  0EB2                     	;# 
  7690  0EB3                     	;# 
  7691  0EB8                     	;# 
  7692  0EB9                     	;# 
  7693  0EBA                     	;# 
  7694  0EBB                     	;# 
  7695  0EBC                     	;# 
  7696  0EBD                     	;# 
  7697  0EBE                     	;# 
  7698  0EC3                     	;# 
  7699  0EC5                     	;# 
  7700  0EC6                     	;# 
  7701  0EC7                     	;# 
  7702  0EC8                     	;# 
  7703  0EC9                     	;# 
  7704  0ECA                     	;# 
  7705  0ECB                     	;# 
  7706  0ECC                     	;# 
  7707  0F10                     	;# 
  7708  0F11                     	;# 
  7709  0F12                     	;# 
  7710  0F13                     	;# 
  7711  0F14                     	;# 
  7712  0F15                     	;# 
  7713  0F16                     	;# 
  7714  0F17                     	;# 
  7715  0F18                     	;# 
  7716  0F19                     	;# 
  7717  0F1A                     	;# 
  7718  0F1B                     	;# 
  7719  0F1C                     	;# 
  7720  0F1D                     	;# 
  7721  0F1E                     	;# 
  7722  0F1F                     	;# 
  7723  0F20                     	;# 
  7724  0F21                     	;# 
  7725  0F22                     	;# 
  7726  0F23                     	;# 
  7727  0F24                     	;# 
  7728  0F25                     	;# 
  7729  0F26                     	;# 
  7730  0F27                     	;# 
  7731  0F28                     	;# 
  7732  0F29                     	;# 
  7733  0F2A                     	;# 
  7734  0F2B                     	;# 
  7735  0F2C                     	;# 
  7736  0F2D                     	;# 
  7737  0F2E                     	;# 
  7738  0F2F                     	;# 
  7739  0F30                     	;# 
  7740  0F31                     	;# 
  7741  0F32                     	;# 
  7742  0F38                     	;# 
  7743  0F39                     	;# 
  7744  0F3A                     	;# 
  7745  0F3B                     	;# 
  7746  0F3C                     	;# 
  7747  0F3D                     	;# 
  7748  0F3E                     	;# 
  7749  0F3F                     	;# 
  7750  0F40                     	;# 
  7751  0F41                     	;# 
  7752  0F43                     	;# 
  7753  0F44                     	;# 
  7754  0F45                     	;# 
  7755  0F46                     	;# 
  7756  0F47                     	;# 
  7757  0F48                     	;# 
  7758  0F49                     	;# 
  7759  0F4A                     	;# 
  7760  0F4B                     	;# 
  7761  0F4C                     	;# 
  7762  0F4E                     	;# 
  7763  0F4F                     	;# 
  7764  0F50                     	;# 
  7765  0F51                     	;# 
  7766  0F52                     	;# 
  7767  0F53                     	;# 
  7768  0F54                     	;# 
  7769  0F55                     	;# 
  7770  0F56                     	;# 
  7771  0F57                     	;# 
  7772  0F59                     	;# 
  7773  0F5A                     	;# 
  7774  0F5B                     	;# 
  7775  0F5C                     	;# 
  7776  0F5D                     	;# 
  7777  0F61                     	;# 
  7778  0F62                     	;# 
  7779  0F64                     	;# 
  7780  0F65                     	;# 
  7781  0F66                     	;# 
  7782  0F67                     	;# 
  7783  0F68                     	;# 
  7784  0F69                     	;# 
  7785  0F6A                     	;# 
  7786  0F6B                     	;# 
  7787  0F6C                     	;# 
  7788  0F6D                     	;# 
  7789  0FE4                     	;# 
  7790  0FE5                     	;# 
  7791  0FE6                     	;# 
  7792  0FE7                     	;# 
  7793  0FE8                     	;# 
  7794  0FE9                     	;# 
  7795  0FEA                     	;# 
  7796  0FEB                     	;# 
  7797  0FED                     	;# 
  7798  0FEE                     	;# 
  7799  0FEF                     	;# 
  7800  0000                     	;# 
  7801  0001                     	;# 
  7802  0002                     	;# 
  7803  0003                     	;# 
  7804  0004                     	;# 
  7805  0005                     	;# 
  7806  0006                     	;# 
  7807  0007                     	;# 
  7808  0008                     	;# 
  7809  0009                     	;# 
  7810  000A                     	;# 
  7811  000B                     	;# 
  7812  000C                     	;# 
  7813  000D                     	;# 
  7814  000E                     	;# 
  7815  000F                     	;# 
  7816  0010                     	;# 
  7817  0011                     	;# 
  7818  0012                     	;# 
  7819  0013                     	;# 
  7820  0014                     	;# 
  7821  0015                     	;# 
  7822  0016                     	;# 
  7823  0017                     	;# 
  7824  0018                     	;# 
  7825  0019                     	;# 
  7826  001A                     	;# 
  7827  001C                     	;# 
  7828  001C                     	;# 
  7829  001D                     	;# 
  7830  001D                     	;# 
  7831  001E                     	;# 
  7832  001F                     	;# 
  7833  008C                     	;# 
  7834  008C                     	;# 
  7835  008D                     	;# 
  7836  008E                     	;# 
  7837  008E                     	;# 
  7838  008F                     	;# 
  7839  0090                     	;# 
  7840  0090                     	;# 
  7841  0091                     	;# 
  7842  0093                     	;# 
  7843  0094                     	;# 
  7844  0095                     	;# 
  7845  0096                     	;# 
  7846  0097                     	;# 
  7847  0098                     	;# 
  7848  0099                     	;# 
  7849  009A                     	;# 
  7850  009B                     	;# 
  7851  009C                     	;# 
  7852  009D                     	;# 
  7853  009E                     	;# 
  7854  010C                     	;# 
  7855  010D                     	;# 
  7856  010E                     	;# 
  7857  010E                     	;# 
  7858  010F                     	;# 
  7859  0110                     	;# 
  7860  0110                     	;# 
  7861  0111                     	;# 
  7862  0112                     	;# 
  7863  0112                     	;# 
  7864  0113                     	;# 
  7865  0114                     	;# 
  7866  0114                     	;# 
  7867  0115                     	;# 
  7868  0116                     	;# 
  7869  0116                     	;# 
  7870  0117                     	;# 
  7871  0119                     	;# 
  7872  0119                     	;# 
  7873  0119                     	;# 
  7874  011A                     	;# 
  7875  011A                     	;# 
  7876  011A                     	;# 
  7877  011B                     	;# 
  7878  011B                     	;# 
  7879  011B                     	;# 
  7880  011B                     	;# 
  7881  011B                     	;# 
  7882  011C                     	;# 
  7883  011C                     	;# 
  7884  011C                     	;# 
  7885  011D                     	;# 
  7886  011D                     	;# 
  7887  011D                     	;# 
  7888  011E                     	;# 
  7889  011E                     	;# 
  7890  011E                     	;# 
  7891  011F                     	;# 
  7892  011F                     	;# 
  7893  011F                     	;# 
  7894  011F                     	;# 
  7895  011F                     	;# 
  7896  018C                     	;# 
  7897  018D                     	;# 
  7898  018E                     	;# 
  7899  018F                     	;# 
  7900  0190                     	;# 
  7901  0191                     	;# 
  7902  0192                     	;# 
  7903  0196                     	;# 
  7904  0197                     	;# 
  7905  0198                     	;# 
  7906  0199                     	;# 
  7907  019A                     	;# 
  7908  019B                     	;# 
  7909  019C                     	;# 
  7910  020C                     	;# 
  7911  020C                     	;# 
  7912  020D                     	;# 
  7913  020E                     	;# 
  7914  020F                     	;# 
  7915  020F                     	;# 
  7916  0210                     	;# 
  7917  0210                     	;# 
  7918  0211                     	;# 
  7919  0211                     	;# 
  7920  0212                     	;# 
  7921  0212                     	;# 
  7922  0213                     	;# 
  7923  0214                     	;# 
  7924  0215                     	;# 
  7925  0215                     	;# 
  7926  0216                     	;# 
  7927  0216                     	;# 
  7928  0217                     	;# 
  7929  0217                     	;# 
  7930  0218                     	;# 
  7931  0218                     	;# 
  7932  0219                     	;# 
  7933  021A                     	;# 
  7934  021B                     	;# 
  7935  021B                     	;# 
  7936  021C                     	;# 
  7937  021C                     	;# 
  7938  021D                     	;# 
  7939  021D                     	;# 
  7940  021E                     	;# 
  7941  021F                     	;# 
  7942  028C                     	;# 
  7943  028C                     	;# 
  7944  028D                     	;# 
  7945  028D                     	;# 
  7946  028E                     	;# 
  7947  028F                     	;# 
  7948  0290                     	;# 
  7949  0290                     	;# 
  7950  0291                     	;# 
  7951  0292                     	;# 
  7952  0292                     	;# 
  7953  0293                     	;# 
  7954  0293                     	;# 
  7955  0294                     	;# 
  7956  0295                     	;# 
  7957  0296                     	;# 
  7958  0296                     	;# 
  7959  0297                     	;# 
  7960  0298                     	;# 
  7961  0298                     	;# 
  7962  0299                     	;# 
  7963  0299                     	;# 
  7964  029A                     	;# 
  7965  029B                     	;# 
  7966  029C                     	;# 
  7967  029C                     	;# 
  7968  029D                     	;# 
  7969  030C                     	;# 
  7970  030C                     	;# 
  7971  030D                     	;# 
  7972  030E                     	;# 
  7973  030F                     	;# 
  7974  0310                     	;# 
  7975  0310                     	;# 
  7976  0311                     	;# 
  7977  0312                     	;# 
  7978  0313                     	;# 
  7979  0314                     	;# 
  7980  0314                     	;# 
  7981  0315                     	;# 
  7982  0316                     	;# 
  7983  0317                     	;# 
  7984  0318                     	;# 
  7985  0318                     	;# 
  7986  0319                     	;# 
  7987  031A                     	;# 
  7988  031B                     	;# 
  7989  031C                     	;# 
  7990  031C                     	;# 
  7991  031D                     	;# 
  7992  031E                     	;# 
  7993  031F                     	;# 
  7994  038C                     	;# 
  7995  038C                     	;# 
  7996  038D                     	;# 
  7997  038E                     	;# 
  7998  0390                     	;# 
  7999  0390                     	;# 
  8000  0391                     	;# 
  8001  0392                     	;# 
  8002  040C                     	;# 
  8003  040D                     	;# 
  8004  040E                     	;# 
  8005  040F                     	;# 
  8006  0410                     	;# 
  8007  0411                     	;# 
  8008  0416                     	;# 
  8009  0416                     	;# 
  8010  0417                     	;# 
  8011  0418                     	;# 
  8012  0418                     	;# 
  8013  0419                     	;# 
  8014  041A                     	;# 
  8015  041A                     	;# 
  8016  041B                     	;# 
  8017  041C                     	;# 
  8018  041C                     	;# 
  8019  041D                     	;# 
  8020  041E                     	;# 
  8021  041F                     	;# 
  8022  048C                     	;# 
  8023  048C                     	;# 
  8024  048D                     	;# 
  8025  048E                     	;# 
  8026  048F                     	;# 
  8027  048F                     	;# 
  8028  0490                     	;# 
  8029  0491                     	;# 
  8030  0492                     	;# 
  8031  0492                     	;# 
  8032  0493                     	;# 
  8033  0494                     	;# 
  8034  0495                     	;# 
  8035  0495                     	;# 
  8036  0496                     	;# 
  8037  0497                     	;# 
  8038  0498                     	;# 
  8039  0499                     	;# 
  8040  049A                     	;# 
  8041  049B                     	;# 
  8042  049C                     	;# 
  8043  049D                     	;# 
  8044  050C                     	;# 
  8045  050C                     	;# 
  8046  050D                     	;# 
  8047  050E                     	;# 
  8048  050F                     	;# 
  8049  050F                     	;# 
  8050  0510                     	;# 
  8051  0511                     	;# 
  8052  0512                     	;# 
  8053  0512                     	;# 
  8054  0513                     	;# 
  8055  0514                     	;# 
  8056  0515                     	;# 
  8057  0515                     	;# 
  8058  0516                     	;# 
  8059  0517                     	;# 
  8060  0518                     	;# 
  8061  0519                     	;# 
  8062  051A                     	;# 
  8063  051B                     	;# 
  8064  051C                     	;# 
  8065  051D                     	;# 
  8066  058C                     	;# 
  8067  058C                     	;# 
  8068  058D                     	;# 
  8069  058E                     	;# 
  8070  058F                     	;# 
  8071  058F                     	;# 
  8072  0590                     	;# 
  8073  0591                     	;# 
  8074  0592                     	;# 
  8075  0593                     	;# 
  8076  060C                     	;# 
  8077  060D                     	;# 
  8078  060E                     	;# 
  8079  060F                     	;# 
  8080  0610                     	;# 
  8081  0611                     	;# 
  8082  0612                     	;# 
  8083  0613                     	;# 
  8084  0614                     	;# 
  8085  0616                     	;# 
  8086  0617                     	;# 
  8087  0618                     	;# 
  8088  0619                     	;# 
  8089  061A                     	;# 
  8090  061B                     	;# 
  8091  061C                     	;# 
  8092  061D                     	;# 
  8093  061E                     	;# 
  8094  068C                     	;# 
  8095  068D                     	;# 
  8096  068E                     	;# 
  8097  068F                     	;# 
  8098  0690                     	;# 
  8099  0691                     	;# 
  8100  0692                     	;# 
  8101  0693                     	;# 
  8102  0694                     	;# 
  8103  070C                     	;# 
  8104  070D                     	;# 
  8105  070E                     	;# 
  8106  070F                     	;# 
  8107  0710                     	;# 
  8108  0711                     	;# 
  8109  0712                     	;# 
  8110  0713                     	;# 
  8111  0714                     	;# 
  8112  0716                     	;# 
  8113  0717                     	;# 
  8114  0718                     	;# 
  8115  0719                     	;# 
  8116  071A                     	;# 
  8117  071B                     	;# 
  8118  071C                     	;# 
  8119  071D                     	;# 
  8120  071E                     	;# 
  8121  0796                     	;# 
  8122  0797                     	;# 
  8123  0798                     	;# 
  8124  0799                     	;# 
  8125  079A                     	;# 
  8126  079B                     	;# 
  8127  080C                     	;# 
  8128  080D                     	;# 
  8129  080E                     	;# 
  8130  080F                     	;# 
  8131  0810                     	;# 
  8132  0811                     	;# 
  8133  0812                     	;# 
  8134  0813                     	;# 
  8135  0814                     	;# 
  8136  081A                     	;# 
  8137  081B                     	;# 
  8138  081C                     	;# 
  8139  081D                     	;# 
  8140  081E                     	;# 
  8141  081F                     	;# 
  8142  088C                     	;# 
  8143  088D                     	;# 
  8144  088E                     	;# 
  8145  088F                     	;# 
  8146  0890                     	;# 
  8147  0891                     	;# 
  8148  0892                     	;# 
  8149  0893                     	;# 
  8150  0895                     	;# 
  8151  0896                     	;# 
  8152  0897                     	;# 
  8153  0898                     	;# 
  8154  0899                     	;# 
  8155  089A                     	;# 
  8156  089B                     	;# 
  8157  090C                     	;# 
  8158  090E                     	;# 
  8159  090F                     	;# 
  8160  091F                     	;# 
  8161  091F                     	;# 
  8162  098F                     	;# 
  8163  098F                     	;# 
  8164  0990                     	;# 
  8165  0991                     	;# 
  8166  0992                     	;# 
  8167  0993                     	;# 
  8168  0994                     	;# 
  8169  0995                     	;# 
  8170  0996                     	;# 
  8171  0997                     	;# 
  8172  0E0F                     	;# 
  8173  0E10                     	;# 
  8174  0E11                     	;# 
  8175  0E12                     	;# 
  8176  0E13                     	;# 
  8177  0E14                     	;# 
  8178  0E15                     	;# 
  8179  0E16                     	;# 
  8180  0E17                     	;# 
  8181  0E18                     	;# 
  8182  0E19                     	;# 
  8183  0E1A                     	;# 
  8184  0E1B                     	;# 
  8185  0E1C                     	;# 
  8186  0E1D                     	;# 
  8187  0E1E                     	;# 
  8188  0E1F                     	;# 
  8189  0E20                     	;# 
  8190  0E21                     	;# 
  8191  0E22                     	;# 
  8192  0E23                     	;# 
  8193  0E24                     	;# 
  8194  0E25                     	;# 
  8195  0E26                     	;# 
  8196  0E27                     	;# 
  8197  0E28                     	;# 
  8198  0E29                     	;# 
  8199  0E2A                     	;# 
  8200  0E2B                     	;# 
  8201  0E2C                     	;# 
  8202  0E2D                     	;# 
  8203  0E2E                     	;# 
  8204  0E2F                     	;# 
  8205  0E30                     	;# 
  8206  0E31                     	;# 
  8207  0E32                     	;# 
  8208  0E33                     	;# 
  8209  0E34                     	;# 
  8210  0E35                     	;# 
  8211  0E36                     	;# 
  8212  0E37                     	;# 
  8213  0E8F                     	;# 
  8214  0E90                     	;# 
  8215  0E91                     	;# 
  8216  0E92                     	;# 
  8217  0E93                     	;# 
  8218  0E94                     	;# 
  8219  0E95                     	;# 
  8220  0E96                     	;# 
  8221  0E97                     	;# 
  8222  0E9C                     	;# 
  8223  0E9D                     	;# 
  8224  0E9E                     	;# 
  8225  0EA1                     	;# 
  8226  0EA2                     	;# 
  8227  0EA3                     	;# 
  8228  0EA4                     	;# 
  8229  0EA5                     	;# 
  8230  0EA9                     	;# 
  8231  0EAA                     	;# 
  8232  0EAB                     	;# 
  8233  0EAC                     	;# 
  8234  0EB1                     	;# 
  8235  0EB2                     	;# 
  8236  0EB3                     	;# 
  8237  0EB8                     	;# 
  8238  0EB9                     	;# 
  8239  0EBA                     	;# 
  8240  0EBB                     	;# 
  8241  0EBC                     	;# 
  8242  0EBD                     	;# 
  8243  0EBE                     	;# 
  8244  0EC3                     	;# 
  8245  0EC5                     	;# 
  8246  0EC6                     	;# 
  8247  0EC7                     	;# 
  8248  0EC8                     	;# 
  8249  0EC9                     	;# 
  8250  0ECA                     	;# 
  8251  0ECB                     	;# 
  8252  0ECC                     	;# 
  8253  0F10                     	;# 
  8254  0F11                     	;# 
  8255  0F12                     	;# 
  8256  0F13                     	;# 
  8257  0F14                     	;# 
  8258  0F15                     	;# 
  8259  0F16                     	;# 
  8260  0F17                     	;# 
  8261  0F18                     	;# 
  8262  0F19                     	;# 
  8263  0F1A                     	;# 
  8264  0F1B                     	;# 
  8265  0F1C                     	;# 
  8266  0F1D                     	;# 
  8267  0F1E                     	;# 
  8268  0F1F                     	;# 
  8269  0F20                     	;# 
  8270  0F21                     	;# 
  8271  0F22                     	;# 
  8272  0F23                     	;# 
  8273  0F24                     	;# 
  8274  0F25                     	;# 
  8275  0F26                     	;# 
  8276  0F27                     	;# 
  8277  0F28                     	;# 
  8278  0F29                     	;# 
  8279  0F2A                     	;# 
  8280  0F2B                     	;# 
  8281  0F2C                     	;# 
  8282  0F2D                     	;# 
  8283  0F2E                     	;# 
  8284  0F2F                     	;# 
  8285  0F30                     	;# 
  8286  0F31                     	;# 
  8287  0F32                     	;# 
  8288  0F38                     	;# 
  8289  0F39                     	;# 
  8290  0F3A                     	;# 
  8291  0F3B                     	;# 
  8292  0F3C                     	;# 
  8293  0F3D                     	;# 
  8294  0F3E                     	;# 
  8295  0F3F                     	;# 
  8296  0F40                     	;# 
  8297  0F41                     	;# 
  8298  0F43                     	;# 
  8299  0F44                     	;# 
  8300  0F45                     	;# 
  8301  0F46                     	;# 
  8302  0F47                     	;# 
  8303  0F48                     	;# 
  8304  0F49                     	;# 
  8305  0F4A                     	;# 
  8306  0F4B                     	;# 
  8307  0F4C                     	;# 
  8308  0F4E                     	;# 
  8309  0F4F                     	;# 
  8310  0F50                     	;# 
  8311  0F51                     	;# 
  8312  0F52                     	;# 
  8313  0F53                     	;# 
  8314  0F54                     	;# 
  8315  0F55                     	;# 
  8316  0F56                     	;# 
  8317  0F57                     	;# 
  8318  0F59                     	;# 
  8319  0F5A                     	;# 
  8320  0F5B                     	;# 
  8321  0F5C                     	;# 
  8322  0F5D                     	;# 
  8323  0F61                     	;# 
  8324  0F62                     	;# 
  8325  0F64                     	;# 
  8326  0F65                     	;# 
  8327  0F66                     	;# 
  8328  0F67                     	;# 
  8329  0F68                     	;# 
  8330  0F69                     	;# 
  8331  0F6A                     	;# 
  8332  0F6B                     	;# 
  8333  0F6C                     	;# 
  8334  0F6D                     	;# 
  8335  0FE4                     	;# 
  8336  0FE5                     	;# 
  8337  0FE6                     	;# 
  8338  0FE7                     	;# 
  8339  0FE8                     	;# 
  8340  0FE9                     	;# 
  8341  0FEA                     	;# 
  8342  0FEB                     	;# 
  8343  0FED                     	;# 
  8344  0FEE                     	;# 
  8345  0FEF                     	;# 
  8346                           
  8347                           	psect	idataBANK0
  8348  07FF                     __pidataBANK0:
  8349                           
  8350                           ;initializer for _updateLCD
  8351  07FF  3401               	retlw	1
  8352                           
  8353                           	psect	idataBANK1
  8354  12D7                     __pidataBANK1:
  8355                           
  8356                           ;initializer for _alarmPWMStart
  8357  12D7  34FF               	retlw	255
  8358  12D8  34FF               	retlw	255
  8359  12D9  34FF               	retlw	255
  8360                           
  8361                           ;initializer for _prevLumLevel
  8362  12DA  34FF               	retlw	255
  8363  12DB  34FF               	retlw	255
  8364                           
  8365                           ;initializer for _prevTemp
  8366  12DC  34FF               	retlw	255
  8367  12DD  34FF               	retlw	255
  8368                           
  8369                           ;initializer for _TALA
  8370  12DE  3405               	retlw	5
  8371                           
  8372                           ;initializer for _PMON
  8373  12DF  3403               	retlw	3
  8374                           
  8375                           	psect	stringtext1
  8376  1800                     __pstringtext1:
  8377  1800                     _commands:
  8378  1800  34E5               	retlw	low _cmd_rc
  8379  1801  3415               	retlw	high _cmd_rc
  8380  1802  34C0               	retlw	192
  8381  1803  3425               	retlw	low _cmd_sc
  8382  1804  3408               	retlw	high _cmd_sc
  8383  1805  34C1               	retlw	193
  8384  1806  3458               	retlw	low _cmd_rtl
  8385  1807  3415               	retlw	high _cmd_rtl
  8386  1808  34C2               	retlw	194
  8387  1809  3400               	retlw	low _cmd_rp
  8388  180A  3408               	retlw	high _cmd_rp
  8389  180B  34C3               	retlw	195
  8390  180C  340E               	retlw	low _cmd_mmp
  8391  180D  340B               	retlw	high _cmd_mmp
  8392  180E  34C4               	retlw	196
  8393  180F  34F0               	retlw	low _cmd_mta
  8394  1810  3413               	retlw	high _cmd_mta
  8395  1811  34C5               	retlw	197
  8396  1812  3487               	retlw	low _cmd_ra
  8397  1813  3417               	retlw	high _cmd_ra
  8398  1814  34C6               	retlw	198
  8399  1815  3464               	retlw	low _cmd_dac
  8400  1816  3408               	retlw	high _cmd_dac
  8401  1817  34C7               	retlw	199
  8402  1818  34E8               	retlw	low _cmd_dtl
  8403  1819  3416               	retlw	high _cmd_dtl
  8404  181A  34C8               	retlw	200
  8405  181B  3430               	retlw	low _cmd_aa
  8406  181C  3416               	retlw	high _cmd_aa
  8407  181D  34C9               	retlw	201
  8408  181E                     __end_of_commands:
  8409                           
  8410                           	psect	stringtext2
  8411  182D                     __pstringtext2:
  8412  182D                     _dpowers:
  8413  182D  3401               	retlw	1
  8414  182E  3400               	retlw	0
  8415  182F  340A               	retlw	10
  8416  1830  3400               	retlw	0
  8417  1831  3464               	retlw	100
  8418  1832  3400               	retlw	0
  8419  1833  34E8               	retlw	232
  8420  1834  3403               	retlw	3
  8421  1835  3410               	retlw	16
  8422  1836  3427               	retlw	39
  8423  1837                     __end_of_dpowers:
  8424                           
  8425                           	psect	nvBANK1
  8426  00D6                     __pnvBANK1:
  8427  00D6                     _INT_InterruptHandler:
  8428  00D6                     	ds	2
  8429  00D8                     _TMR5_InterruptHandler:
  8430  00D8                     	ds	2
  8431  00DA                     _timer5ReloadVal:
  8432  00DA                     	ds	2
  8433  00DC                     _TMR1_InterruptHandler:
  8434  00DC                     	ds	2
  8435  00DE                     _timer1ReloadVal:
  8436  00DE                     	ds	2
  8437  00E0                     _EUSART_RxDefaultInterruptHandler:
  8438  00E0                     	ds	2
  8439  00E2                     _EUSART_TxDefaultInterruptHandler:
  8440  00E2                     	ds	2
  8441  00E4                     _eusartTxBufferRemaining:
  8442  00E4                     	ds	1
  8443  0013                     _TRISCbits	set	19
  8444  000E                     _PORTCbits	set	14
  8445  0016                     _LATAbits	set	22
  8446  000B                     _INTCONbits	set	11
  8447  0014                     _TRISD	set	20
  8448  0013                     _TRISC	set	19
  8449  0012                     _TRISB	set	18
  8450  0011                     _TRISA	set	17
  8451  0015                     _TRISE	set	21
  8452  0018                     _LATC	set	24
  8453  0017                     _LATB	set	23
  8454  0016                     _LATA	set	22
  8455  0019                     _LATD	set	25
  8456  001A                     _LATE	set	26
  8457  0094                     _ADCON1bits	set	148
  8458  008E                     _ADPREVL	set	142
  8459  008F                     _ADPREVH	set	143
  8460  0097                     _ADSTATbits	set	151
  8461  0090                     _ADACCL	set	144
  8462  0091                     _ADACCH	set	145
  8463  0095                     _ADCON2bits	set	149
  8464  009C                     _ADPRE	set	156
  8465  0096                     _ADCON3bits	set	150
  8466  008C                     _ADRESL	set	140
  8467  008D                     _ADRESH	set	141
  8468  0093                     _ADCON0bits	set	147
  8469  009D                     _ADACQ	set	157
  8470  0093                     _ADCON0	set	147
  8471  0098                     _ADCLK	set	152
  8472  0099                     _ADACT	set	153
  8473  009A                     _ADREF	set	154
  8474  0097                     _ADSTAT	set	151
  8475  0096                     _ADCON3	set	150
  8476  0095                     _ADCON2	set	149
  8477  0094                     _ADCON1	set	148
  8478  009B                     _ADCAP	set	155
  8479  009E                     _ADPCH	set	158
  8480  0119                     _RC1REG	set	281
  8481  011D                     _RC1STAbits	set	285
  8482  011A                     _TX1REG	set	282
  8483  011E                     _TX1STAbits	set	286
  8484  011C                     _SP1BRGH	set	284
  8485  011B                     _SP1BRGL	set	283
  8486  011E                     _TX1STA	set	286
  8487  011D                     _RC1STA	set	285
  8488  011F                     _BAUD1CON	set	287
  8489  0116                     _ADERRL	set	278
  8490  0117                     _ADERRH	set	279
  8491  0114                     _ADFLTRL	set	276
  8492  0115                     _ADFLTRH	set	277
  8493  010C                     _ADCNT	set	268
  8494  010D                     _ADRPT	set	269
  8495  0113                     _ADSTPTH	set	275
  8496  0112                     _ADSTPTL	set	274
  8497  0111                     _ADUTHH	set	273
  8498  0110                     _ADUTHL	set	272
  8499  010F                     _ADLTHH	set	271
  8500  010E                     _ADLTHL	set	270
  8501  018E                     _SSP1MSK	set	398
  8502  018D                     _SSP1ADD	set	397
  8503  018F                     _SSP1STAT	set	399
  8504  0191                     _SSP1CON2	set	401
  8505  0190                     _SSP1CON1bits	set	400
  8506  018C                     _SSP1BUF	set	396
  8507  018F                     _SSP1STATbits	set	399
  8508  0191                     _SSP1CON2bits	set	401
  8509  0190                     _SSP1CON1	set	400
  8510  021F                     _CCPTMRS1bits	set	543
  8511  021B                     _T5GCONbits	set	539
  8512  021A                     _T5CONbits	set	538
  8513  021A                     _T5CON	set	538
  8514  0218                     _TMR5L	set	536
  8515  0219                     _TMR5H	set	537
  8516  021D                     _T5CLK	set	541
  8517  021C                     _T5GATE	set	540
  8518  021B                     _T5GCON	set	539
  8519  020F                     _T1GCONbits	set	527
  8520  020E                     _T1CONbits	set	526
  8521  020E                     _T1CON	set	526
  8522  020C                     _TMR1L	set	524
  8523  020D                     _TMR1H	set	525
  8524  0211                     _T1CLK	set	529
  8525  0210                     _T1GATE	set	528
  8526  020F                     _T1GCON	set	527
  8527  028D                     _PR2	set	653
  8528  028C                     _TMR2	set	652
  8529  028E                     _T2CONbits	set	654
  8530  0291                     _T2RSTbits	set	657
  8531  028F                     _T2HLTbits	set	655
  8532  028E                     _T2CON	set	654
  8533  028C                     _T2TMR	set	652
  8534  028D                     _T2PR	set	653
  8535  0291                     _T2RST	set	657
  8536  028F                     _T2HLT	set	655
  8537  0290                     _T2CLKCON	set	656
  8538  038C                     _PWM6DCL	set	908
  8539  038D                     _PWM6DCH	set	909
  8540  038E                     _PWM6CON	set	910
  8541  1C77                     _PWM6EN	set	7287
  8542  0710                     _PIR4bits	set	1808
  8543  071A                     _PIE4bits	set	1818
  8544  070C                     _PIR0bits	set	1804
  8545  0716                     _PIE0bits	set	1814
  8546  0719                     _PIE3bits	set	1817
  8547  070F                     _PIR3bits	set	1807
  8548  079B                     _PMD5	set	1947
  8549  079A                     _PMD4	set	1946
  8550  0799                     _PMD3	set	1945
  8551  0798                     _PMD2	set	1944
  8552  0797                     _PMD1	set	1943
  8553  0796                     _PMD0	set	1942
  8554  081F                     _NVMCON2	set	2079
  8555  081C                     _NVMDATL	set	2076
  8556  081D                     _NVMDATH	set	2077
  8557  081E                     _NVMCON1bits	set	2078
  8558  081B                     _NVMADRH	set	2075
  8559  081A                     _NVMADRL	set	2074
  8560  0892                     _OSCTUNE	set	2194
  8561  0893                     _OSCFRQ	set	2195
  8562  0891                     _OSCEN	set	2193
  8563  088F                     _OSCCON3	set	2191
  8564  088D                     _OSCCON1	set	2189
  8565  0EC6                     _SSP1DATPPS	set	3782
  8566  0EC5                     _SSP1CLKPPS	set	3781
  8567  0ECB                     _RXPPS	set	3787
  8568  0E90                     _INTPPS	set	3728
  8569  0F26                     _RC6PPS	set	3878
  8570  0F16                     _RA6PPS	set	3862
  8571  0F24                     _RC4PPS	set	3876
  8572  0F23                     _RC3PPS	set	3875
  8573  0F67                     _SLRCONE	set	3943
  8574  0F5C                     _SLRCOND	set	3932
  8575  0F51                     _SLRCONC	set	3921
  8576  0F46                     _SLRCONB	set	3910
  8577  0F3B                     _SLRCONA	set	3899
  8578  0F5B                     _ODCOND	set	3931
  8579  0F50                     _ODCONC	set	3920
  8580  0F45                     _ODCONB	set	3909
  8581  0F3A                     _ODCONA	set	3898
  8582  0F66                     _ODCONE	set	3942
  8583  0F4F                     _WPUC	set	3919
  8584  0F39                     _WPUA	set	3897
  8585  0F44                     _WPUB	set	3908
  8586  0F65                     _WPUE	set	3941
  8587  0F5A                     _WPUD	set	3930
  8588  0F38                     _ANSELA	set	3896
  8589  0F64                     _ANSELE	set	3940
  8590  0F43                     _ANSELB	set	3907
  8591  0F4E                     _ANSELC	set	3918
  8592  0F59                     _ANSELD	set	3929
  8593  7A7C                     _WPUC4	set	31356
  8594  7A7B                     _WPUC3	set	31355
  8595                           
  8596                           	psect	stringtext3
  8597  181E                     __pstringtext3:
  8598  181E                     STR_1:
  8599  181E  3425               	retlw	37	;'%'
  8600  181F  3430               	retlw	48	;'0'
  8601  1820  3432               	retlw	50	;'2'
  8602  1821  3464               	retlw	100	;'d'
  8603  1822  343A               	retlw	58	;':'
  8604  1823  3425               	retlw	37	;'%'
  8605  1824  3430               	retlw	48	;'0'
  8606  1825  3432               	retlw	50	;'2'
  8607  1826  3464               	retlw	100	;'d'
  8608  1827  343A               	retlw	58	;':'
  8609  1828  3425               	retlw	37	;'%'
  8610  1829  3430               	retlw	48	;'0'
  8611  182A  3432               	retlw	50	;'2'
  8612  182B  3464               	retlw	100	;'d'
  8613  182C  3400               	retlw	0
  8614                           
  8615                           	psect	stringtext4
  8616  1837                     __pstringtext4:
  8617  1837                     STR_3:
  8618  1837  3425               	retlw	37	;'%'
  8619  1838  3430               	retlw	48	;'0'
  8620  1839  3432               	retlw	50	;'2'
  8621  183A  3464               	retlw	100	;'d'
  8622  183B  3420               	retlw	32	;' '
  8623  183C  3443               	retlw	67	;'C'
  8624  183D  3400               	retlw	0
  8625                           
  8626                           	psect	stringtext5
  8627  183E                     __pstringtext5:
  8628  183E                     STR_5:
  8629  183E  344C               	retlw	76	;'L'
  8630  183F  3420               	retlw	32	;' '
  8631  1840  3425               	retlw	37	;'%'
  8632  1841  3464               	retlw	100	;'d'
  8633  1842  3400               	retlw	0
  8634                           
  8635                           	psect	stringtext6
  8636  1843                     __pstringtext6:
  8637  1843                     STR_7:
  8638  1843  3443               	retlw	67	;'C'
  8639  1844  3454               	retlw	84	;'T'
  8640  1845  344C               	retlw	76	;'L'
  8641  1846  3400               	retlw	0
  8642                           
  8643                           	psect	stringtext7
  8644  0000                     __pstringtext7:
  8645  1837                     
  8646                           	psect	cinit
  8647  0060                     start_initialization:	
  8648                           ; #config settings
  8649                           
  8650  0060                     __initialization:
  8651                           
  8652                           ; Initialize objects allocated to BANK0
  8653  0060  3187  27FF  3180   	fcall	__pidataBANK0	;fetch initializer
  8654  0063  00EF               	movwf	__pdataBANK0& (0+127)
  8655                           
  8656                           ; Initialize objects allocated to BANK1
  8657  0064  30D7               	movlw	low __pidataBANK1
  8658  0065  0084               	movwf	4
  8659  0066  3092               	movlw	(high __pidataBANK1)| (0+128)
  8660  0067  0085               	movwf	5
  8661  0068  30E5               	movlw	low __pdataBANK1
  8662  0069  0086               	movwf	6
  8663  006A  3000               	movlw	high __pdataBANK1
  8664  006B  0087               	movwf	7
  8665  006C  3009               	movlw	9
  8666  006D  3192  2269  3180   	fcall	init_ram
  8667                           
  8668                           ; Clear objects allocated to COMMON
  8669  0070  01FD               	clrf	__pbssCOMMON& (0+127)
  8670                           
  8671                           ; Clear objects allocated to BANK0
  8672  0071  305F               	movlw	low __pbssBANK0
  8673  0072  0084               	movwf	4
  8674  0073  3000               	movlw	high __pbssBANK0
  8675  0074  0085               	movwf	5
  8676  0075  3010               	movlw	16
  8677  0076  3192  2263  3180   	fcall	clear_ram0
  8678                           
  8679                           ; Clear objects allocated to BANK1
  8680  0079  30BE               	movlw	low __pbssBANK1
  8681  007A  0084               	movwf	4
  8682  007B  3000               	movlw	high __pbssBANK1
  8683  007C  0085               	movwf	5
  8684  007D  3018               	movlw	24
  8685  007E  3192  2263  3180   	fcall	clear_ram0
  8686                           
  8687                           ; Clear objects allocated to BANK2
  8688  0081  3020               	movlw	low __pbssBANK2
  8689  0082  0084               	movwf	4
  8690  0083  3001               	movlw	high __pbssBANK2
  8691  0084  0085               	movwf	5
  8692  0085  3014               	movlw	20
  8693  0086  3192  2263  3180   	fcall	clear_ram0
  8694                           
  8695                           ; Clear objects allocated to BANK3
  8696  0089  30A0               	movlw	low __pbssBANK3
  8697  008A  0084               	movwf	4
  8698  008B  3001               	movlw	high __pbssBANK3
  8699  008C  0085               	movwf	5
  8700  008D  3040               	movlw	64
  8701  008E  3192  2263  3180   	fcall	clear_ram0
  8702                           
  8703                           ; Clear objects allocated to BANK4
  8704  0091  3020               	movlw	low __pbssBANK4
  8705  0092  0084               	movwf	4
  8706  0093  3002               	movlw	high __pbssBANK4
  8707  0094  0085               	movwf	5
  8708  0095  3040               	movlw	64
  8709  0096  3192  2263  3180   	fcall	clear_ram0
  8710  0099                     end_of_initialization:	
  8711                           ;End of C runtime variable initialization code
  8712                           
  8713  0099                     __end_of__initialization:
  8714  0099  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8715  009A  0020               	movlb	0
  8716  009B  3180  289D         	ljmp	_main	;jump to C main() function
  8717                           
  8718                           	psect	bssCOMMON
  8719  007D                     __pbssCOMMON:
  8720  007D                     _ALAF:
  8721  007D                     	ds	1
  8722                           
  8723                           	psect	bssBANK0
  8724  005F                     __pbssBANK0:
  8725  005F                     _clkAlarm:
  8726  005F                     	ds	4
  8727  0063                     _t:
  8728  0063                     	ds	3
  8729  0066                     _modeFlag:
  8730  0066                     	ds	2
  8731  0068                     _editingClockAlarm:
  8732  0068                     	ds	2
  8733  006A                     _flagS1pushed:
  8734  006A                     	ds	1
  8735  006B                     _lumLevel:
  8736  006B                     	ds	1
  8737  006C                     _temp:
  8738  006C                     	ds	1
  8739  006D                     _eusartTxTail:
  8740  006D                     	ds	1
  8741  006E                     _eusartTxHead:
  8742  006E                     	ds	1
  8743                           
  8744                           	psect	dataBANK0
  8745  006F                     __pdataBANK0:
  8746  006F                     _updateLCD:
  8747  006F                     	ds	1
  8748                           
  8749                           	psect	bssBANK1
  8750  00BE                     __pbssBANK1:
  8751  00BE                     update_menuLCD@F12913:
  8752  00BE                     	ds	3
  8753  00C1                     _lumAlarm:
  8754  00C1                     	ds	3
  8755  00C4                     _tempAlarm:
  8756  00C4                     	ds	3
  8757  00C7                     _dimingLed:
  8758  00C7                     	ds	2
  8759  00C9                     _i2c1_driver_i2cISR:
  8760  00C9                     	ds	2
  8761  00CB                     _i2c1_driver_busCollisionISR:
  8762  00CB                     	ds	2
  8763  00CD                     _PWM_on:
  8764  00CD                     	ds	1
  8765  00CE                     _editingLumAlarm:
  8766  00CE                     	ds	1
  8767  00CF                     _editingTempAlarm:
  8768  00CF                     	ds	1
  8769  00D0                     _S1_Value:
  8770  00D0                     	ds	1
  8771  00D1                     _idx_RingBuffer:
  8772  00D1                     	ds	1
  8773  00D2                     _NREG:
  8774  00D2                     	ds	1
  8775  00D3                     _eusartRxCount:
  8776  00D3                     	ds	1
  8777  00D4                     _eusartRxTail:
  8778  00D4                     	ds	1
  8779  00D5                     _eusartRxHead:
  8780  00D5                     	ds	1
  8781                           
  8782                           	psect	dataBANK1
  8783  00E5                     __pdataBANK1:
  8784  00E5                     _alarmPWMStart:
  8785  00E5                     	ds	3
  8786  00E8                     _prevLumLevel:
  8787  00E8                     	ds	2
  8788  00EA                     _prevTemp:
  8789  00EA                     	ds	2
  8790  00EC                     _TALA:
  8791  00EC                     	ds	1
  8792  00ED                     _PMON:
  8793  00ED                     	ds	1
  8794                           
  8795                           	psect	bssBANK2
  8796  0120                     __pbssBANK2:
  8797  0120                     main@F13021:
  8798  0120                     	ds	20
  8799                           
  8800                           	psect	bssBANK3
  8801  01A0                     __pbssBANK3:
  8802  01A0                     _eusartTxBuffer:
  8803  01A0                     	ds	64
  8804                           
  8805                           	psect	bssBANK4
  8806  0220                     __pbssBANK4:
  8807  0220                     _eusartRxBuffer:
  8808  0220                     	ds	64
  8809                           
  8810                           	psect	inittext
  8811  1269                     init_ram:
  8812  1269  00FE               	movwf	btemp
  8813  126A                     initloop:
  8814  126A  0012               	moviw fsr0++
  8815  126B  001E               	movwi fsr1++
  8816  126C  0BFE               	decfsz	btemp,f
  8817  126D  2A6A               	goto	initloop
  8818  126E  3400               	retlw	0
  8819                           
  8820                           	psect	clrtext
  8821  1263                     clear_ram0:	
  8822                           ;	Called with FSR0 containing the base address, and
  8823                           ;	WREG with the size to clear
  8824                           
  8825  1263  0064               	clrwdt	;clear the watchdog before getting into this loop
  8826  1264                     clrloop0:
  8827  1264  0180               	clrf	0	;clear RAM location pointed to by FSR
  8828  1265  3101               	addfsr 0,1
  8829  1266  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8830  1267  2A64               	goto	clrloop0	;have we reached the end yet?
  8831  1268  3400               	retlw	0	;all done for this memory range, return
  8832                           
  8833                           	psect	cstackBANK1
  8834  00A0                     __pcstackBANK1:
  8835  00A0                     main@buff:
  8836                           
  8837                           ; 20 bytes @ 0x0
  8838  00A0                     	ds	20
  8839  00B4                     main@checkSumAux:
  8840                           
  8841                           ; 1 bytes @ 0x14
  8842  00B4                     	ds	1
  8843  00B5                     main@notInit:
  8844                           
  8845                           ; 1 bytes @ 0x15
  8846  00B5                     	ds	1
  8847  00B6                     main@corrupted:
  8848                           
  8849                           ; 1 bytes @ 0x16
  8850  00B6                     	ds	1
  8851  00B7                     main@i:
  8852                           
  8853                           ; 2 bytes @ 0x17
  8854  00B7                     	ds	2
  8855  00B9                     main@i_2655:
  8856                           
  8857                           ; 2 bytes @ 0x19
  8858  00B9                     	ds	2
  8859  00BB                     main@c:
  8860                           
  8861                           ; 1 bytes @ 0x1B
  8862  00BB                     	ds	1
  8863  00BC                     main@n:
  8864                           
  8865                           ; 2 bytes @ 0x1C
  8866  00BC                     	ds	2
  8867                           
  8868                           	psect	cstackCOMMON
  8869  0070                     __pcstackCOMMON:
  8870  0070                     ?_isdigit:
  8871  0070                     ?_i2c1_driver_open:	
  8872                           ; 1 bit 
  8873                           
  8874  0070                     ?_PMD_Initialize:	
  8875                           ; 1 bit 
  8876                           
  8877  0070                     ?_OSCILLATOR_Initialize:	
  8878                           ; 1 bytes @ 0x0
  8879                           
  8880  0070                     ?_PWM6_Initialize:	
  8881                           ; 1 bytes @ 0x0
  8882                           
  8883  0070                     ?_ADCC_Initialize:	
  8884                           ; 1 bytes @ 0x0
  8885                           
  8886  0070                     ?_TMR5_Initialize:	
  8887                           ; 1 bytes @ 0x0
  8888                           
  8889  0070                     ?_TMR2_Initialize:	
  8890                           ; 1 bytes @ 0x0
  8891                           
  8892  0070                     ?_TMR1_Initialize:	
  8893                           ; 1 bytes @ 0x0
  8894                           
  8895  0070                     ?_EXT_INT_Initialize:	
  8896                           ; 1 bytes @ 0x0
  8897                           
  8898  0070                     ?_EUSART_Initialize:	
  8899                           ; 1 bytes @ 0x0
  8900                           
  8901  0070                     ?_INT_ISR:	
  8902                           ; 1 bytes @ 0x0
  8903                           
  8904  0070                     ??_INT_ISR:	
  8905                           ; 1 bytes @ 0x0
  8906                           
  8907  0070                     ?_TMR5_ISR:	
  8908                           ; 1 bytes @ 0x0
  8909                           
  8910  0070                     ?_TMR1_ISR:	
  8911                           ; 1 bytes @ 0x0
  8912                           
  8913  0070                     ?_TMR1_DefaultInterruptHandler:	
  8914                           ; 1 bytes @ 0x0
  8915                           
  8916  0070                     ??_TMR1_DefaultInterruptHandler:	
  8917                           ; 1 bytes @ 0x0
  8918                           
  8919  0070                     ?_TMR5_DefaultInterruptHandler:	
  8920                           ; 1 bytes @ 0x0
  8921                           
  8922  0070                     ??_TMR5_DefaultInterruptHandler:	
  8923                           ; 1 bytes @ 0x0
  8924                           
  8925  0070                     ?_INT_CallBack:	
  8926                           ; 1 bytes @ 0x0
  8927                           
  8928  0070                     ??_INT_CallBack:	
  8929                           ; 1 bytes @ 0x0
  8930                           
  8931  0070                     ?_EUSART_Receive_ISR:	
  8932                           ; 1 bytes @ 0x0
  8933                           
  8934  0070                     ??_EUSART_Receive_ISR:	
  8935                           ; 1 bytes @ 0x0
  8936                           
  8937  0070                     ?_EUSART_Transmit_ISR:	
  8938                           ; 1 bytes @ 0x0
  8939                           
  8940  0070                     ??_EUSART_Transmit_ISR:	
  8941                           ; 1 bytes @ 0x0
  8942                           
  8943  0070                     ?_ReadI2C:	
  8944                           ; 1 bytes @ 0x0
  8945                           
  8946  0070                     ??_ReadI2C:	
  8947                           ; 1 bytes @ 0x0
  8948                           
  8949  0070                     ?_WriteI2C:	
  8950                           ; 1 bytes @ 0x0
  8951                           
  8952  0070                     ?_PIN_MANAGER_Initialize:	
  8953                           ; 1 bytes @ 0x0
  8954                           
  8955  0070                     ?_SYSTEM_Initialize:	
  8956                           ; 1 bytes @ 0x0
  8957                           
  8958  0070                     ?_INTERRUPT_InterruptManager:	
  8959                           ; 1 bytes @ 0x0
  8960                           
  8961  0070                     ?_TMR1_WriteTimer:	
  8962                           ; 1 bytes @ 0x0
  8963                           
  8964  0070                     ?_TMR5_StartTimer:	
  8965                           ; 1 bytes @ 0x0
  8966                           
  8967  0070                     ?_TMR5_StopTimer:	
  8968                           ; 1 bytes @ 0x0
  8969                           
  8970  0070                     ?_TMR5_WriteTimer:	
  8971                           ; 1 bytes @ 0x0
  8972                           
  8973  0070                     ?_TMR2_Start:	
  8974                           ; 1 bytes @ 0x0
  8975                           
  8976  0070                     ?_TMR2_StartTimer:	
  8977                           ; 1 bytes @ 0x0
  8978                           
  8979  0070                     ?_TMR2_Stop:	
  8980                           ; 1 bytes @ 0x0
  8981                           
  8982  0070                     ?_TMR2_StopTimer:	
  8983                           ; 1 bytes @ 0x0
  8984                           
  8985  0070                     ?_INT_DefaultInterruptHandler:	
  8986                           ; 1 bytes @ 0x0
  8987                           
  8988  0070                     ??_INT_DefaultInterruptHandler:	
  8989                           ; 1 bytes @ 0x0
  8990                           
  8991  0070                     ?_EUSART_is_rx_ready:	
  8992                           ; 1 bytes @ 0x0
  8993                           
  8994  0070                     ?_EUSART_Read:	
  8995                           ; 1 bytes @ 0x0
  8996                           
  8997  0070                     ?_EUSART_Write:	
  8998                           ; 1 bytes @ 0x0
  8999                           
  9000  0070                     ?_getch:	
  9001                           ; 1 bytes @ 0x0
  9002                           
  9003  0070                     ?_putch:	
  9004                           ; 1 bytes @ 0x0
  9005                           
  9006  0070                     ?_tsttc:	
  9007                           ; 1 bytes @ 0x0
  9008                           
  9009  0070                     ?_LCDsend:	
  9010                           ; 1 bytes @ 0x0
  9011                           
  9012  0070                     ?_LCDinit:	
  9013                           ; 1 bytes @ 0x0
  9014                           
  9015  0070                     ?_LCDcmd:	
  9016                           ; 1 bytes @ 0x0
  9017                           
  9018  0070                     ?_LCDchar:	
  9019                           ; 1 bytes @ 0x0
  9020                           
  9021  0070                     ?_PWM_Output_D4_Enable:	
  9022                           ; 1 bytes @ 0x0
  9023                           
  9024  0070                     ?_PWM_Output_D4_Disable:	
  9025                           ; 1 bytes @ 0x0
  9026                           
  9027  0070                     ?_Clock_ISR:	
  9028                           ; 1 bytes @ 0x0
  9029                           
  9030  0070                     ?_update_menuLCD:	
  9031                           ; 1 bytes @ 0x0
  9032                           
  9033  0070                     ?_monitoring_ISR:	
  9034                           ; 1 bytes @ 0x0
  9035                           
  9036  0070                     ?_S1button:	
  9037                           ; 1 bytes @ 0x0
  9038                           
  9039  0070                     ?_editClock:	
  9040                           ; 1 bytes @ 0x0
  9041                           
  9042  0070                     ?_editTemp:	
  9043                           ; 1 bytes @ 0x0
  9044                           
  9045  0070                     ?_editLum:	
  9046                           ; 1 bytes @ 0x0
  9047                           
  9048  0070                     ?_toggleAlarms:	
  9049                           ; 1 bytes @ 0x0
  9050                           
  9051  0070                     ?_S1_ISR:	
  9052                           ; 1 bytes @ 0x0
  9053                           
  9054  0070                     ??_S1_ISR:	
  9055                           ; 1 bytes @ 0x0
  9056                           
  9057  0070                     ?_sendOKMessage:	
  9058                           ; 1 bytes @ 0x0
  9059                           
  9060  0070                     ?_sendERRORMessage:	
  9061                           ; 1 bytes @ 0x0
  9062                           
  9063  0070                     ?_main:	
  9064                           ; 1 bytes @ 0x0
  9065                           
  9066  0070                     ?i1_WriteI2C:	
  9067                           ; 1 bytes @ 0x0
  9068                           
  9069  0070                     ??i1_WriteI2C:	
  9070                           ; 1 bytes @ 0x0
  9071                           
  9072  0070                     ?_ADCC_GetSingleConversion:	
  9073                           ; 1 bytes @ 0x0
  9074                           
  9075  0070                     ?i1___wmul:	
  9076                           ; 2 bytes @ 0x0
  9077                           
  9078  0070                     TMR1_WriteTimer@timerVal:	
  9079                           ; 2 bytes @ 0x0
  9080                           
  9081  0070                     TMR5_WriteTimer@timerVal:	
  9082                           ; 2 bytes @ 0x0
  9083                           
  9084  0070                     i1___wmul@multiplier:	
  9085                           ; 2 bytes @ 0x0
  9086                           
  9087                           
  9088                           ; 2 bytes @ 0x0
  9089  0070                     	ds	1
  9090  0071                     i1WriteI2C@data_out:
  9091                           
  9092                           ; 1 bytes @ 0x1
  9093  0071                     	ds	1
  9094  0072                     ??_TMR1_WriteTimer:
  9095  0072                     ??_TMR5_WriteTimer:	
  9096                           ; 1 bytes @ 0x2
  9097                           
  9098  0072                     ??_tsttc:	
  9099                           ; 1 bytes @ 0x2
  9100                           
  9101  0072                     i1___wmul@multiplicand:	
  9102                           ; 1 bytes @ 0x2
  9103                           
  9104                           
  9105                           ; 2 bytes @ 0x2
  9106  0072                     	ds	1
  9107  0073                     ??_ADCC_GetSingleConversion:
  9108  0073                     ADCC_GetSingleConversion@channel:	
  9109                           ; 1 bytes @ 0x3
  9110                           
  9111  0073                     tsttc@value:	
  9112                           ; 1 bytes @ 0x3
  9113                           
  9114                           
  9115                           ; 1 bytes @ 0x3
  9116  0073                     	ds	1
  9117  0074                     ??i1___wmul:
  9118  0074                     i1___wmul@product:	
  9119                           ; 1 bytes @ 0x4
  9120                           
  9121                           
  9122                           ; 2 bytes @ 0x4
  9123  0074                     	ds	2
  9124  0076                     ?i1_DATAEE_WriteByte:
  9125  0076                     i1DATAEE_WriteByte@bAdd:	
  9126                           ; 1 bytes @ 0x6
  9127                           
  9128                           
  9129                           ; 2 bytes @ 0x6
  9130  0076                     	ds	2
  9131  0078                     i1DATAEE_WriteByte@bData:
  9132                           
  9133                           ; 1 bytes @ 0x8
  9134  0078                     	ds	1
  9135  0079                     ??i1_DATAEE_WriteByte:
  9136  0079                     i1DATAEE_WriteByte@GIEBitValue:	
  9137                           ; 1 bytes @ 0x9
  9138                           
  9139                           
  9140                           ; 1 bytes @ 0x9
  9141  0079                     	ds	1
  9142  007A                     ??_Clock_ISR:
  9143  007A                     ??_monitoring_ISR:	
  9144                           ; 1 bytes @ 0xA
  9145                           
  9146                           
  9147                           ; 1 bytes @ 0xA
  9148  007A                     	ds	1
  9149  007B                     ??_TMR1_ISR:
  9150                           
  9151                           ; 1 bytes @ 0xB
  9152  007B                     	ds	2
  9153  007D                     ??_TMR5_ISR:
  9154  007D                     ??_INTERRUPT_InterruptManager:	
  9155                           ; 1 bytes @ 0xD
  9156                           
  9157                           
  9158                           	psect	cstackBANK0
  9159  0020                     __pcstackBANK0:	
  9160                           ; 1 bytes @ 0xD
  9161                           
  9162  0020                     ??_PMD_Initialize:
  9163  0020                     ??_OSCILLATOR_Initialize:	
  9164                           ; 1 bytes @ 0x0
  9165                           
  9166  0020                     ??_PWM6_Initialize:	
  9167                           ; 1 bytes @ 0x0
  9168                           
  9169  0020                     ??_ADCC_Initialize:	
  9170                           ; 1 bytes @ 0x0
  9171                           
  9172  0020                     ??_TMR2_Initialize:	
  9173                           ; 1 bytes @ 0x0
  9174                           
  9175  0020                     ?_TMR1_SetInterruptHandler:	
  9176                           ; 1 bytes @ 0x0
  9177                           
  9178  0020                     ?_TMR5_SetInterruptHandler:	
  9179                           ; 1 bytes @ 0x0
  9180                           
  9181  0020                     ?_EUSART_SetRxInterruptHandler:	
  9182                           ; 1 bytes @ 0x0
  9183                           
  9184  0020                     ?_EUSART_SetTxInterruptHandler:	
  9185                           ; 1 bytes @ 0x0
  9186                           
  9187  0020                     ?_memset:	
  9188                           ; 1 bytes @ 0x0
  9189                           
  9190  0020                     ??_isdigit:	
  9191                           ; 1 bytes @ 0x0
  9192                           
  9193  0020                     ??_WriteI2C:	
  9194                           ; 1 bytes @ 0x0
  9195                           
  9196  0020                     ??_PIN_MANAGER_Initialize:	
  9197                           ; 1 bytes @ 0x0
  9198                           
  9199  0020                     ??_i2c1_driver_open:	
  9200                           ; 1 bytes @ 0x0
  9201                           
  9202  0020                     ?_setTimer5ReloadVal:	
  9203                           ; 1 bytes @ 0x0
  9204                           
  9205  0020                     ??_TMR5_StartTimer:	
  9206                           ; 1 bytes @ 0x0
  9207                           
  9208  0020                     ??_TMR5_StopTimer:	
  9209                           ; 1 bytes @ 0x0
  9210                           
  9211  0020                     ?_PWM6_LoadDutyValue:	
  9212                           ; 1 bytes @ 0x0
  9213                           
  9214  0020                     ??_TMR2_Start:	
  9215                           ; 1 bytes @ 0x0
  9216                           
  9217  0020                     ??_TMR2_StartTimer:	
  9218                           ; 1 bytes @ 0x0
  9219                           
  9220  0020                     ??_TMR2_Stop:	
  9221                           ; 1 bytes @ 0x0
  9222                           
  9223  0020                     ??_TMR2_StopTimer:	
  9224                           ; 1 bytes @ 0x0
  9225                           
  9226  0020                     ?_DATAEE_WriteByte:	
  9227                           ; 1 bytes @ 0x0
  9228                           
  9229  0020                     ?_DATAEE_ReadByte:	
  9230                           ; 1 bytes @ 0x0
  9231                           
  9232  0020                     ?_INT_SetInterruptHandler:	
  9233                           ; 1 bytes @ 0x0
  9234                           
  9235  0020                     ??_EUSART_is_rx_ready:	
  9236                           ; 1 bytes @ 0x0
  9237                           
  9238  0020                     ??_EUSART_Read:	
  9239                           ; 1 bytes @ 0x0
  9240                           
  9241  0020                     ??_EUSART_Write:	
  9242                           ; 1 bytes @ 0x0
  9243                           
  9244  0020                     ?_differenceBetweenTimePeriod:	
  9245                           ; 1 bytes @ 0x0
  9246                           
  9247  0020                     ??_PWM_Output_D4_Enable:	
  9248                           ; 1 bytes @ 0x0
  9249                           
  9250  0020                     ??_PWM_Output_D4_Disable:	
  9251                           ; 1 bytes @ 0x0
  9252                           
  9253  0020                     ??_S1button:	
  9254                           ; 1 bytes @ 0x0
  9255                           
  9256  0020                     ?___wmul:	
  9257                           ; 1 bytes @ 0x0
  9258                           
  9259  0020                     ?___lwdiv:	
  9260                           ; 2 bytes @ 0x0
  9261                           
  9262  0020                     ?___lmul:	
  9263                           ; 2 bytes @ 0x0
  9264                           
  9265  0020                     _isdigit$3115:	
  9266                           ; 4 bytes @ 0x0
  9267                           
  9268  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  9269                           ; 1 bytes @ 0x0
  9270                           
  9271  0020                     setTimer5ReloadVal@val:	
  9272                           ; 2 bytes @ 0x0
  9273                           
  9274  0020                     TMR5_SetInterruptHandler@InterruptHandler:	
  9275                           ; 2 bytes @ 0x0
  9276                           
  9277  0020                     PWM6_LoadDutyValue@dutyValue:	
  9278                           ; 2 bytes @ 0x0
  9279                           
  9280  0020                     DATAEE_WriteByte@bAdd:	
  9281                           ; 2 bytes @ 0x0
  9282                           
  9283  0020                     DATAEE_ReadByte@bAdd:	
  9284                           ; 2 bytes @ 0x0
  9285                           
  9286  0020                     INT_SetInterruptHandler@InterruptHandler:	
  9287                           ; 2 bytes @ 0x0
  9288                           
  9289  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  9290                           ; 2 bytes @ 0x0
  9291                           
  9292  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  9293                           ; 2 bytes @ 0x0
  9294                           
  9295  0020                     ___wmul@multiplier:	
  9296                           ; 2 bytes @ 0x0
  9297                           
  9298  0020                     ___lwdiv@divisor:	
  9299                           ; 2 bytes @ 0x0
  9300                           
  9301  0020                     memset@c:	
  9302                           ; 2 bytes @ 0x0
  9303                           
  9304  0020                     differenceBetweenTimePeriod@start:	
  9305                           ; 2 bytes @ 0x0
  9306                           
  9307  0020                     ___lmul@multiplier:	
  9308                           ; 3 bytes @ 0x0
  9309                           
  9310                           
  9311                           ; 4 bytes @ 0x0
  9312  0020                     	ds	1
  9313  0021                     WriteI2C@data_out:
  9314  0021                     EUSART_Read@readValue:	
  9315                           ; 1 bytes @ 0x1
  9316                           
  9317  0021                     EUSART_Write@txData:	
  9318                           ; 1 bytes @ 0x1
  9319                           
  9320  0021                     isdigit@c:	
  9321                           ; 1 bytes @ 0x1
  9322                           
  9323                           
  9324                           ; 1 bytes @ 0x1
  9325  0021                     	ds	1
  9326  0022                     ??_TMR5_Initialize:
  9327  0022                     ??_TMR1_Initialize:	
  9328                           ; 1 bytes @ 0x2
  9329                           
  9330  0022                     ??_EXT_INT_Initialize:	
  9331                           ; 1 bytes @ 0x2
  9332                           
  9333  0022                     ??_EUSART_Initialize:	
  9334                           ; 1 bytes @ 0x2
  9335                           
  9336  0022                     ??_TMR1_SetInterruptHandler:	
  9337                           ; 1 bytes @ 0x2
  9338                           
  9339  0022                     ??_TMR5_SetInterruptHandler:	
  9340                           ; 1 bytes @ 0x2
  9341                           
  9342  0022                     ??_EUSART_SetRxInterruptHandler:	
  9343                           ; 1 bytes @ 0x2
  9344                           
  9345  0022                     ??_EUSART_SetTxInterruptHandler:	
  9346                           ; 1 bytes @ 0x2
  9347                           
  9348  0022                     ??_setTimer5ReloadVal:	
  9349                           ; 1 bytes @ 0x2
  9350                           
  9351  0022                     ??_PWM6_LoadDutyValue:	
  9352                           ; 1 bytes @ 0x2
  9353                           
  9354  0022                     ??_DATAEE_ReadByte:	
  9355                           ; 1 bytes @ 0x2
  9356                           
  9357  0022                     ??_INT_SetInterruptHandler:	
  9358                           ; 1 bytes @ 0x2
  9359                           
  9360  0022                     ??_getch:	
  9361                           ; 1 bytes @ 0x2
  9362                           
  9363  0022                     ??_putch:	
  9364                           ; 1 bytes @ 0x2
  9365                           
  9366  0022                     ??_LCDsend:	
  9367                           ; 1 bytes @ 0x2
  9368                           
  9369  0022                     ?_LCDsend2x4:	
  9370                           ; 1 bytes @ 0x2
  9371                           
  9372  0022                     DATAEE_WriteByte@bData:	
  9373                           ; 1 bytes @ 0x2
  9374                           
  9375  0022                     putch@txData:	
  9376                           ; 1 bytes @ 0x2
  9377                           
  9378  0022                     LCDsend2x4@mode:	
  9379                           ; 1 bytes @ 0x2
  9380                           
  9381  0022                     ___wmul@multiplicand:	
  9382                           ; 1 bytes @ 0x2
  9383                           
  9384  0022                     ___lwdiv@dividend:	
  9385                           ; 2 bytes @ 0x2
  9386                           
  9387  0022                     memset@n:	
  9388                           ; 2 bytes @ 0x2
  9389                           
  9390                           
  9391                           ; 2 bytes @ 0x2
  9392  0022                     	ds	1
  9393  0023                     ??_SYSTEM_Initialize:
  9394  0023                     ??_DATAEE_WriteByte:	
  9395                           ; 1 bytes @ 0x3
  9396                           
  9397  0023                     ??_LCDsend2x4:	
  9398                           ; 1 bytes @ 0x3
  9399                           
  9400  0023                     ?_sendMessage:	
  9401                           ; 1 bytes @ 0x3
  9402                           
  9403  0023                     DATAEE_WriteByte@GIEBitValue:	
  9404                           ; 1 bytes @ 0x3
  9405                           
  9406  0023                     LCDsend@c:	
  9407                           ; 1 bytes @ 0x3
  9408                           
  9409  0023                     sendMessage@num:	
  9410                           ; 1 bytes @ 0x3
  9411                           
  9412  0023                     differenceBetweenTimePeriod@stop:	
  9413                           ; 2 bytes @ 0x3
  9414                           
  9415                           
  9416                           ; 3 bytes @ 0x3
  9417  0023                     	ds	1
  9418  0024                     ??_memset:
  9419  0024                     ??___wmul:	
  9420                           ; 1 bytes @ 0x4
  9421                           
  9422  0024                     ??___lwdiv:	
  9423                           ; 1 bytes @ 0x4
  9424                           
  9425  0024                     ___wmul@product:	
  9426                           ; 1 bytes @ 0x4
  9427                           
  9428  0024                     ___lmul@multiplicand:	
  9429                           ; 2 bytes @ 0x4
  9430                           
  9431                           
  9432                           ; 4 bytes @ 0x4
  9433  0024                     	ds	1
  9434  0025                     LCDsend2x4@c:
  9435  0025                     sendMessage@buffer:	
  9436                           ; 1 bytes @ 0x5
  9437                           
  9438  0025                     memset@p:	
  9439                           ; 1 bytes @ 0x5
  9440                           
  9441  0025                     ___lwdiv@quotient:	
  9442                           ; 1 bytes @ 0x5
  9443                           
  9444                           
  9445                           ; 2 bytes @ 0x5
  9446  0025                     	ds	1
  9447  0026                     ??_sendMessage:
  9448  0026                     LCDsend2x4@hc:	
  9449                           ; 1 bytes @ 0x6
  9450                           
  9451  0026                     differenceBetweenTimePeriod@diff:	
  9452                           ; 1 bytes @ 0x6
  9453                           
  9454  0026                     memset@p1:	
  9455                           ; 1 bytes @ 0x6
  9456                           
  9457                           
  9458                           ; 1 bytes @ 0x6
  9459  0026                     	ds	1
  9460  0027                     ??_differenceBetweenTimePeriod:
  9461  0027                     LCDsend2x4@lc:	
  9462                           ; 1 bytes @ 0x7
  9463                           
  9464  0027                     ___lwdiv@counter:	
  9465                           ; 1 bytes @ 0x7
  9466                           
  9467  0027                     sendMessage@n:	
  9468                           ; 1 bytes @ 0x7
  9469                           
  9470                           
  9471                           ; 2 bytes @ 0x7
  9472  0027                     	ds	1
  9473  0028                     ??_LCDinit:
  9474  0028                     ??_LCDcmd:	
  9475                           ; 1 bytes @ 0x8
  9476                           
  9477  0028                     ??_LCDchar:	
  9478                           ; 1 bytes @ 0x8
  9479                           
  9480  0028                     ??___lmul:	
  9481                           ; 1 bytes @ 0x8
  9482                           
  9483  0028                     ?___lwmod:	
  9484                           ; 1 bytes @ 0x8
  9485                           
  9486  0028                     LCDcmd@c:	
  9487                           ; 2 bytes @ 0x8
  9488                           
  9489  0028                     LCDchar@c:	
  9490                           ; 1 bytes @ 0x8
  9491                           
  9492  0028                     ___lwmod@divisor:	
  9493                           ; 1 bytes @ 0x8
  9494                           
  9495  0028                     ___lmul@product:	
  9496                           ; 2 bytes @ 0x8
  9497                           
  9498                           
  9499                           ; 4 bytes @ 0x8
  9500  0028                     	ds	1
  9501  0029                     ?_LCDstr:
  9502  0029                     ??_sendOKMessage:	
  9503                           ; 1 bytes @ 0x9
  9504                           
  9505  0029                     ??_sendERRORMessage:	
  9506                           ; 1 bytes @ 0x9
  9507                           
  9508  0029                     LCDstr@p:	
  9509                           ; 1 bytes @ 0x9
  9510                           
  9511                           
  9512                           ; 2 bytes @ 0x9
  9513  0029                     	ds	1
  9514  002A                     sendOKMessage@cmd:
  9515  002A                     sendERRORMessage@cmd:	
  9516                           ; 1 bytes @ 0xA
  9517                           
  9518  002A                     ___lwmod@dividend:	
  9519                           ; 1 bytes @ 0xA
  9520                           
  9521                           
  9522                           ; 2 bytes @ 0xA
  9523  002A                     	ds	1
  9524  002B                     ??_LCDstr:
  9525  002B                     sendOKMessage@bufw:	
  9526                           ; 1 bytes @ 0xB
  9527                           
  9528  002B                     sendERRORMessage@bufw:	
  9529                           ; 4 bytes @ 0xB
  9530                           
  9531                           
  9532                           ; 4 bytes @ 0xB
  9533  002B                     	ds	1
  9534  002C                     ??___lwmod:
  9535                           
  9536                           ; 1 bytes @ 0xC
  9537  002C                     	ds	1
  9538  002D                     ___lwmod@counter:
  9539                           
  9540                           ; 1 bytes @ 0xD
  9541  002D                     	ds	1
  9542  002E                     ?_sprintf:
  9543  002E                     LCDstr@c:	
  9544                           ; 2 bytes @ 0xE
  9545                           
  9546  002E                     sprintf@f:	
  9547                           ; 1 bytes @ 0xE
  9548                           
  9549                           
  9550                           ; 2 bytes @ 0xE
  9551  002E                     	ds	1
  9552  002F                     ?_cmd_rc:
  9553  002F                     ?_cmd_sc:	
  9554                           ; 1 bytes @ 0xF
  9555                           
  9556  002F                     ?_cmd_rtl:	
  9557                           ; 1 bytes @ 0xF
  9558                           
  9559  002F                     ?_cmd_rp:	
  9560                           ; 1 bytes @ 0xF
  9561                           
  9562  002F                     ?_cmd_mmp:	
  9563                           ; 1 bytes @ 0xF
  9564                           
  9565  002F                     ?_cmd_mta:	
  9566                           ; 1 bytes @ 0xF
  9567                           
  9568  002F                     ?_cmd_ra:	
  9569                           ; 1 bytes @ 0xF
  9570                           
  9571  002F                     ?_cmd_dac:	
  9572                           ; 1 bytes @ 0xF
  9573                           
  9574  002F                     ?_cmd_dtl:	
  9575                           ; 1 bytes @ 0xF
  9576                           
  9577  002F                     ?_cmd_aa:	
  9578                           ; 1 bytes @ 0xF
  9579                           
  9580  002F                     cmd_rc@num:	
  9581                           ; 1 bytes @ 0xF
  9582                           
  9583  002F                     cmd_sc@num:	
  9584                           ; 2 bytes @ 0xF
  9585                           
  9586  002F                     cmd_rtl@num:	
  9587                           ; 2 bytes @ 0xF
  9588                           
  9589  002F                     cmd_rp@num:	
  9590                           ; 2 bytes @ 0xF
  9591                           
  9592  002F                     cmd_mmp@num:	
  9593                           ; 2 bytes @ 0xF
  9594                           
  9595  002F                     cmd_mta@num:	
  9596                           ; 2 bytes @ 0xF
  9597                           
  9598  002F                     cmd_ra@num:	
  9599                           ; 2 bytes @ 0xF
  9600                           
  9601  002F                     cmd_dac@num:	
  9602                           ; 2 bytes @ 0xF
  9603                           
  9604  002F                     cmd_dtl@num:	
  9605                           ; 2 bytes @ 0xF
  9606                           
  9607  002F                     cmd_aa@num:	
  9608                           ; 2 bytes @ 0xF
  9609                           
  9610                           
  9611                           ; 2 bytes @ 0xF
  9612  002F                     	ds	2
  9613  0031                     cmd_rc@buffer:
  9614  0031                     cmd_sc@buffer:	
  9615                           ; 1 bytes @ 0x11
  9616                           
  9617  0031                     cmd_rtl@buffer:	
  9618                           ; 1 bytes @ 0x11
  9619                           
  9620  0031                     cmd_rp@buffer:	
  9621                           ; 1 bytes @ 0x11
  9622                           
  9623  0031                     cmd_mmp@buffer:	
  9624                           ; 1 bytes @ 0x11
  9625                           
  9626  0031                     cmd_mta@buffer:	
  9627                           ; 1 bytes @ 0x11
  9628                           
  9629  0031                     cmd_ra@buffer:	
  9630                           ; 1 bytes @ 0x11
  9631                           
  9632  0031                     cmd_dac@buffer:	
  9633                           ; 1 bytes @ 0x11
  9634                           
  9635  0031                     cmd_dtl@buffer:	
  9636                           ; 1 bytes @ 0x11
  9637                           
  9638  0031                     cmd_aa@buffer:	
  9639                           ; 1 bytes @ 0x11
  9640                           
  9641                           
  9642                           ; 1 bytes @ 0x11
  9643  0031                     	ds	1
  9644  0032                     ??_cmd_rc:
  9645  0032                     ??_cmd_sc:	
  9646                           ; 1 bytes @ 0x12
  9647                           
  9648  0032                     ??_cmd_rtl:	
  9649                           ; 1 bytes @ 0x12
  9650                           
  9651  0032                     ??_cmd_rp:	
  9652                           ; 1 bytes @ 0x12
  9653                           
  9654  0032                     ??_cmd_mmp:	
  9655                           ; 1 bytes @ 0x12
  9656                           
  9657  0032                     ??_cmd_mta:	
  9658                           ; 1 bytes @ 0x12
  9659                           
  9660  0032                     ??_cmd_ra:	
  9661                           ; 1 bytes @ 0x12
  9662                           
  9663  0032                     ??_cmd_dac:	
  9664                           ; 1 bytes @ 0x12
  9665                           
  9666  0032                     ??_cmd_dtl:	
  9667                           ; 1 bytes @ 0x12
  9668                           
  9669  0032                     ??_cmd_aa:	
  9670                           ; 1 bytes @ 0x12
  9671                           
  9672  0032                     cmd_dtl@tempAux:	
  9673                           ; 1 bytes @ 0x12
  9674                           
  9675                           
  9676                           ; 1 bytes @ 0x12
  9677  0032                     	ds	1
  9678  0033                     cmd_sc@h:
  9679  0033                     cmd_dac@h:	
  9680                           ; 1 bytes @ 0x13
  9681                           
  9682  0033                     cmd_dtl@lumAux:	
  9683                           ; 1 bytes @ 0x13
  9684                           
  9685  0033                     cmd_rtl@buff:	
  9686                           ; 1 bytes @ 0x13
  9687                           
  9688  0033                     cmd_rp@buff:	
  9689                           ; 5 bytes @ 0x13
  9690                           
  9691  0033                     cmd_rc@buff:	
  9692                           ; 5 bytes @ 0x13
  9693                           
  9694  0033                     cmd_ra@buff:	
  9695                           ; 6 bytes @ 0x13
  9696                           
  9697                           
  9698                           ; 9 bytes @ 0x13
  9699  0033                     	ds	1
  9700  0034                     cmd_sc@m:
  9701  0034                     cmd_dac@m:	
  9702                           ; 1 bytes @ 0x14
  9703                           
  9704                           
  9705                           ; 1 bytes @ 0x14
  9706  0034                     	ds	1
  9707  0035                     cmd_sc@s:
  9708  0035                     cmd_dac@s:	
  9709                           ; 1 bytes @ 0x15
  9710                           
  9711                           
  9712                           ; 1 bytes @ 0x15
  9713  0035                     	ds	1
  9714  0036                     ??_sprintf:
  9715                           
  9716                           ; 1 bytes @ 0x16
  9717  0036                     	ds	4
  9718  003A                     sprintf@ap:
  9719                           
  9720                           ; 1 bytes @ 0x1A
  9721  003A                     	ds	1
  9722  003B                     sprintf@prec:
  9723                           
  9724                           ; 1 bytes @ 0x1B
  9725  003B                     	ds	1
  9726  003C                     cmd_mmp@timerValue:
  9727  003C                     sprintf@val:	
  9728                           ; 2 bytes @ 0x1C
  9729                           
  9730                           
  9731                           ; 2 bytes @ 0x1C
  9732  003C                     	ds	2
  9733  003E                     sprintf@flag:
  9734                           
  9735                           ; 1 bytes @ 0x1E
  9736  003E                     	ds	1
  9737  003F                     sprintf@width:
  9738                           
  9739                           ; 2 bytes @ 0x1F
  9740  003F                     	ds	2
  9741  0041                     sprintf@c:
  9742                           
  9743                           ; 1 bytes @ 0x21
  9744  0041                     	ds	1
  9745  0042                     sprintf@sp:
  9746                           
  9747                           ; 1 bytes @ 0x22
  9748  0042                     	ds	1
  9749  0043                     ??_update_menuLCD:
  9750                           
  9751                           ; 1 bytes @ 0x23
  9752  0043                     	ds	6
  9753  0049                     update_menuLCD@str:
  9754                           
  9755                           ; 8 bytes @ 0x29
  9756  0049                     	ds	8
  9757  0051                     update_menuLCD@tt:
  9758                           
  9759                           ; 4 bytes @ 0x31
  9760  0051                     	ds	4
  9761  0055                     update_menuLCD@l:
  9762                           
  9763                           ; 3 bytes @ 0x35
  9764  0055                     	ds	3
  9765  0058                     update_menuLCD@diff:
  9766                           
  9767                           ; 3 bytes @ 0x38
  9768  0058                     	ds	3
  9769  005B                     ??_editClock:
  9770  005B                     ??_editTemp:	
  9771                           ; 1 bytes @ 0x3B
  9772                           
  9773  005B                     ??_editLum:	
  9774                           ; 1 bytes @ 0x3B
  9775                           
  9776  005B                     ??_toggleAlarms:	
  9777                           ; 1 bytes @ 0x3B
  9778                           
  9779                           
  9780                           ; 1 bytes @ 0x3B
  9781  005B                     	ds	1
  9782  005C                     ??_main:
  9783                           
  9784                           ; 1 bytes @ 0x3C
  9785  005C                     	ds	3
  9786                           
  9787                           	psect	maintext
  9788  009D                     __pmaintext:	
  9789 ;;
  9790 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  9791 ;;
  9792 ;; *************** function _main *****************
  9793 ;; Defined at:
  9794 ;;		line 934 in file "main.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;		None
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;  i               2   23[BANK1 ] int 
  9799 ;;  buff           20    0[BANK1 ] unsigned char [20]
  9800 ;;  n               2   28[BANK1 ] int 
  9801 ;;  i               2   25[BANK1 ] int 
  9802 ;;  c               1   27[BANK1 ] unsigned char 
  9803 ;;  corrupted       1   22[BANK1 ] unsigned char 
  9804 ;;  notInit         1   21[BANK1 ] unsigned char 
  9805 ;;  checkSumAux     1   20[BANK1 ] unsigned char 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  1    wreg      void 
  9808 ;; Registers used:
  9809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9810 ;; Tracked objects:
  9811 ;;		On entry : B1F/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;      Totals:         0       3      30       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;Total ram usage:       33 bytes
  9820 ;; Hardware stack levels required when called:   11
  9821 ;; This function calls:
  9822 ;;		_DATAEE_ReadByte
  9823 ;;		_DATAEE_WriteByte
  9824 ;;		_EUSART_is_rx_ready
  9825 ;;		_INT_SetInterruptHandler
  9826 ;;		_LCDinit
  9827 ;;		_PWM6_LoadDutyValue
  9828 ;;		_PWM_Output_D4_Disable
  9829 ;;		_PWM_Output_D4_Enable
  9830 ;;		_S1button
  9831 ;;		_SYSTEM_Initialize
  9832 ;;		_TMR1_SetInterruptHandler
  9833 ;;		_TMR2_StartTimer
  9834 ;;		_TMR2_StopTimer
  9835 ;;		_TMR5_SetInterruptHandler
  9836 ;;		___wmul
  9837 ;;		_cmd_aa
  9838 ;;		_cmd_dac
  9839 ;;		_cmd_dtl
  9840 ;;		_cmd_mmp
  9841 ;;		_cmd_mta
  9842 ;;		_cmd_ra
  9843 ;;		_cmd_rc
  9844 ;;		_cmd_rp
  9845 ;;		_cmd_rtl
  9846 ;;		_cmd_sc
  9847 ;;		_editClock
  9848 ;;		_editLum
  9849 ;;		_editTemp
  9850 ;;		_getch
  9851 ;;		_i2c1_driver_open
  9852 ;;		_memset
  9853 ;;		_toggleAlarms
  9854 ;;		_update_menuLCD
  9855 ;; This function is called by:
  9856 ;;		Startup code after reset
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           
  9861                           ;psect for function _main
  9862  009D                     _main:
  9863  009D                     l5916:	
  9864                           ;incstack = 0
  9865                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9866                           
  9867                           
  9868                           ;main.c: 937: SYSTEM_Initialize();
  9869  009D  3194  24D9  3180   	fcall	_SYSTEM_Initialize
  9870                           
  9871                           ;main.c: 939: PWM6_LoadDutyValue(0);
  9872  00A0  3000               	movlw	0
  9873  00A1  0020               	movlb	0	; select bank0
  9874  00A2  00A0               	movwf	PWM6_LoadDutyValue@dutyValue
  9875  00A3  00A1               	movwf	PWM6_LoadDutyValue@dutyValue+1
  9876  00A4  3193  23BD  3180   	fcall	_PWM6_LoadDutyValue
  9877  00A7                     l5918:
  9878                           
  9879                           ;main.c: 940: TMR2_StopTimer();
  9880  00A7  3192  2255  3180   	fcall	_TMR2_StopTimer
  9881  00AA                     l5920:
  9882                           
  9883                           ;main.c: 941: PWM_Output_D4_Disable();
  9884  00AA  3192  224B  3180   	fcall	_PWM_Output_D4_Disable
  9885                           
  9886                           ;main.c: 943: TMR1_SetInterruptHandler(Clock_ISR);
  9887  00AD  30C4               	movlw	low _Clock_ISR
  9888  00AE  0020               	movlb	0	; select bank0
  9889  00AF  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  9890  00B0  300C               	movlw	high _Clock_ISR
  9891  00B1  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  9892  00B2  3192  22B3  3180   	fcall	_TMR1_SetInterruptHandler
  9893                           
  9894                           ;main.c: 945: TMR5_SetInterruptHandler(monitoring_ISR);
  9895  00B5  30D5               	movlw	low _monitoring_ISR
  9896  00B6  0020               	movlb	0	; select bank0
  9897  00B7  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler
  9898  00B8  300E               	movlw	high _monitoring_ISR
  9899  00B9  00A1               	movwf	TMR5_SetInterruptHandler@InterruptHandler+1
  9900  00BA  3192  22BC  3180   	fcall	_TMR5_SetInterruptHandler
  9901                           
  9902                           ;main.c: 947: INT_SetInterruptHandler(S1_ISR);
  9903  00BD  3086               	movlw	low _S1_ISR
  9904  00BE  0020               	movlb	0	; select bank0
  9905  00BF  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
  9906  00C0  3012               	movlw	high _S1_ISR
  9907  00C1  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  9908  00C2  3192  22A1  3180   	fcall	_INT_SetInterruptHandler
  9909  00C5                     l5922:
  9910                           
  9911                           ;main.c: 949: uint8_t checkSumAux = 0;
  9912  00C5  0021               	movlb	1	; select bank1
  9913  00C6  01B4               	clrf	main@checkSumAux^(0+128)
  9914  00C7                     l5924:
  9915                           
  9916                           ;main.c: 950: bool notInit = 1;
  9917  00C7  01B5               	clrf	main@notInit^(0+128)
  9918  00C8  0AB5               	incf	main@notInit^(0+128),f
  9919  00C9                     l5926:
  9920                           
  9921                           ;main.c: 951: bool corrupted = 0;
  9922  00C9  01B6               	clrf	main@corrupted^(0+128)
  9923  00CA                     l5928:
  9924                           
  9925                           ;main.c: 952: if(DATAEE_ReadByte(0x7000) == 'S'){
  9926  00CA  3000               	movlw	0
  9927  00CB  0020               	movlb	0	; select bank0
  9928  00CC  00A0               	movwf	DATAEE_ReadByte@bAdd
  9929  00CD  3070               	movlw	112
  9930  00CE  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  9931  00CF  3193  2322  3180   	fcall	_DATAEE_ReadByte
  9932  00D2  3A53               	xorlw	83
  9933  00D3  1D03               	skipz
  9934  00D4  28D6               	goto	u5931
  9935  00D5  28D7               	goto	u5930
  9936  00D6                     u5931:
  9937  00D6  291C               	goto	l5948
  9938  00D7                     u5930:
  9939  00D7                     l5930:
  9940                           
  9941                           ;main.c: 953: notInit = 0;
  9942  00D7  0021               	movlb	1	; select bank1
  9943  00D8  01B5               	clrf	main@notInit^(0+128)
  9944  00D9                     l5932:
  9945                           
  9946                           ;main.c: 954: for(int i = 1; i < 13; i++){
  9947  00D9  3001               	movlw	1
  9948  00DA  00B7               	movwf	main@i^(0+128)
  9949  00DB  3000               	movlw	0
  9950  00DC  00B8               	movwf	(main@i^(0+128)+1)
  9951  00DD                     l5938:
  9952                           
  9953                           ;main.c: 955: checkSumAux += DATAEE_ReadByte(0x7000 + (i*8));
  9954  00DD  0021               	movlb	1	; select bank1
  9955  00DE  0838               	movf	(main@i+1)^(0+128),w
  9956  00DF  0020               	movlb	0	; select bank0
  9957  00E0  00DD               	movwf	??_main+1
  9958  00E1  0021               	movlb	1	; select bank1
  9959  00E2  0837               	movf	main@i^(0+128),w
  9960  00E3  0020               	movlb	0	; select bank0
  9961  00E4  00DC               	movwf	??_main
  9962  00E5  35DC               	lslf	??_main,f
  9963  00E6  0DDD               	rlf	??_main+1,f
  9964  00E7  35DC               	lslf	??_main,f
  9965  00E8  0DDD               	rlf	??_main+1,f
  9966  00E9  35DC               	lslf	??_main,f
  9967  00EA  0DDD               	rlf	??_main+1,f
  9968  00EB  085C               	movf	??_main,w
  9969  00EC  3E00               	addlw	0
  9970  00ED  00A0               	movwf	DATAEE_ReadByte@bAdd
  9971  00EE  3070               	movlw	112
  9972  00EF  3D5D               	addwfc	??_main+1,w
  9973  00F0  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  9974  00F1  3193  2322  3180   	fcall	_DATAEE_ReadByte
  9975  00F4  0020               	movlb	0	; select bank0
  9976  00F5  00DE               	movwf	??_main+2
  9977  00F6  085E               	movf	??_main+2,w
  9978  00F7  0021               	movlb	1	; select bank1
  9979  00F8  07B4               	addwf	main@checkSumAux^(0+128),f
  9980  00F9                     l5940:
  9981  00F9  3001               	movlw	1
  9982  00FA  07B7               	addwf	main@i^(0+128),f
  9983  00FB  3000               	movlw	0
  9984  00FC  3DB8               	addwfc	(main@i+1)^(0+128),f
  9985  00FD                     l5942:
  9986  00FD  0838               	movf	(main@i+1)^(0+128),w
  9987  00FE  3A80               	xorlw	128
  9988  00FF  0020               	movlb	0	; select bank0
  9989  0100  00DC               	movwf	??_main
  9990  0101  3080               	movlw	128
  9991  0102  025C               	subwf	??_main,w
  9992  0103  1D03               	skipz
  9993  0104  2908               	goto	u5945
  9994  0105  300D               	movlw	13
  9995  0106  0021               	movlb	1	; select bank1
  9996  0107  0237               	subwf	main@i^(0+128),w
  9997  0108                     u5945:
  9998  0108  1C03               	skipc
  9999  0109  290B               	goto	u5941
 10000  010A  290C               	goto	u5940
 10001  010B                     u5941:
 10002  010B  28DD               	goto	l5938
 10003  010C                     u5940:
 10004  010C                     l5944:
 10005                           
 10006                           ;main.c: 956: };main.c: 957: if(checkSumAux != DATAEE_ReadByte(0x7000 + (13*8))){
 10007  010C  3068               	movlw	104
 10008  010D  0020               	movlb	0	; select bank0
 10009  010E  00A0               	movwf	DATAEE_ReadByte@bAdd
 10010  010F  3070               	movlw	112
 10011  0110  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10012  0111  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10013  0114  0021               	movlb	1	; select bank1
 10014  0115  0634               	xorwf	main@checkSumAux^(0+128),w
 10015  0116  1903               	skipnz
 10016  0117  2919               	goto	u5951
 10017  0118  291A               	goto	u5950
 10018  0119                     u5951:
 10019  0119  291C               	goto	l5948
 10020  011A                     u5950:
 10021  011A                     l5946:
 10022                           
 10023                           ;main.c: 958: corrupted = 1;
 10024  011A  01B6               	clrf	main@corrupted^(0+128)
 10025  011B  0AB6               	incf	main@corrupted^(0+128),f
 10026  011C                     l5948:
 10027                           
 10028                           ;main.c: 959: };main.c: 960: };main.c: 962: if(notInit || corrupted){
 10029  011C  0021               	movlb	1	; select bank1
 10030  011D  0835               	movf	main@notInit^(0+128),w
 10031  011E  1D03               	btfss	3,2
 10032  011F  2921               	goto	u5961
 10033  0120  2922               	goto	u5960
 10034  0121                     u5961:
 10035  0121  2927               	goto	l5952
 10036  0122                     u5960:
 10037  0122                     l5950:
 10038  0122  0836               	movf	main@corrupted^(0+128),w
 10039  0123  1903               	btfsc	3,2
 10040  0124  2926               	goto	u5971
 10041  0125  2927               	goto	u5970
 10042  0126                     u5971:
 10043  0126  29C0               	goto	l5954
 10044  0127                     u5970:
 10045  0127                     l5952:
 10046                           
 10047                           ;main.c: 963: DATAEE_WriteByte( 0x7000 + (0 * 8), 'S');
 10048  0127  3000               	movlw	0
 10049  0128  0020               	movlb	0	; select bank0
 10050  0129  00A0               	movwf	DATAEE_WriteByte@bAdd
 10051  012A  3070               	movlw	112
 10052  012B  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10053  012C  3053               	movlw	83
 10054  012D  00DC               	movwf	??_main
 10055  012E  085C               	movf	??_main,w
 10056  012F  00A2               	movwf	DATAEE_WriteByte@bData
 10057  0130  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10058                           
 10059                           ;main.c: 964: DATAEE_WriteByte( 0x7000 + (1 * 8), 25);
 10060  0133  3008               	movlw	8
 10061  0134  0020               	movlb	0	; select bank0
 10062  0135  00A0               	movwf	DATAEE_WriteByte@bAdd
 10063  0136  3070               	movlw	112
 10064  0137  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10065  0138  3019               	movlw	25
 10066  0139  00DC               	movwf	??_main
 10067  013A  085C               	movf	??_main,w
 10068  013B  00A2               	movwf	DATAEE_WriteByte@bData
 10069  013C  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10070                           
 10071                           ;main.c: 965: DATAEE_WriteByte( 0x7000 + (2 * 8), 3);
 10072  013F  3010               	movlw	16
 10073  0140  0020               	movlb	0	; select bank0
 10074  0141  00A0               	movwf	DATAEE_WriteByte@bAdd
 10075  0142  3070               	movlw	112
 10076  0143  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10077  0144  3003               	movlw	3
 10078  0145  00DC               	movwf	??_main
 10079  0146  085C               	movf	??_main,w
 10080  0147  00A2               	movwf	DATAEE_WriteByte@bData
 10081  0148  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10082                           
 10083                           ;main.c: 966: DATAEE_WriteByte( 0x7000 + (3 * 8), 5);
 10084  014B  3018               	movlw	24
 10085  014C  0020               	movlb	0	; select bank0
 10086  014D  00A0               	movwf	DATAEE_WriteByte@bAdd
 10087  014E  3070               	movlw	112
 10088  014F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10089  0150  3005               	movlw	5
 10090  0151  00DC               	movwf	??_main
 10091  0152  085C               	movf	??_main,w
 10092  0153  00A2               	movwf	DATAEE_WriteByte@bData
 10093  0154  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10094                           
 10095                           ;main.c: 967: DATAEE_WriteByte( 0x7000 + (4 * 8), 12);
 10096  0157  3020               	movlw	32
 10097  0158  0020               	movlb	0	; select bank0
 10098  0159  00A0               	movwf	DATAEE_WriteByte@bAdd
 10099  015A  3070               	movlw	112
 10100  015B  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10101  015C  300C               	movlw	12
 10102  015D  00DC               	movwf	??_main
 10103  015E  085C               	movf	??_main,w
 10104  015F  00A2               	movwf	DATAEE_WriteByte@bData
 10105  0160  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10106                           
 10107                           ;main.c: 968: DATAEE_WriteByte( 0x7000 + (5 * 8), 0);
 10108  0163  3028               	movlw	40
 10109  0164  0020               	movlb	0	; select bank0
 10110  0165  00A0               	movwf	DATAEE_WriteByte@bAdd
 10111  0166  3070               	movlw	112
 10112  0167  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10113  0168  01A2               	clrf	DATAEE_WriteByte@bData
 10114  0169  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10115                           
 10116                           ;main.c: 969: DATAEE_WriteByte( 0x7000 + (6 * 8), 0);
 10117  016C  3030               	movlw	48
 10118  016D  0020               	movlb	0	; select bank0
 10119  016E  00A0               	movwf	DATAEE_WriteByte@bAdd
 10120  016F  3070               	movlw	112
 10121  0170  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10122  0171  01A2               	clrf	DATAEE_WriteByte@bData
 10123  0172  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10124                           
 10125                           ;main.c: 970: DATAEE_WriteByte( 0x7000 + (7 * 8), 28);
 10126  0175  3038               	movlw	56
 10127  0176  0020               	movlb	0	; select bank0
 10128  0177  00A0               	movwf	DATAEE_WriteByte@bAdd
 10129  0178  3070               	movlw	112
 10130  0179  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10131  017A  301C               	movlw	28
 10132  017B  00DC               	movwf	??_main
 10133  017C  085C               	movf	??_main,w
 10134  017D  00A2               	movwf	DATAEE_WriteByte@bData
 10135  017E  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10136                           
 10137                           ;main.c: 971: DATAEE_WriteByte( 0x7000 + (8 * 8), 4);
 10138  0181  3040               	movlw	64
 10139  0182  0020               	movlb	0	; select bank0
 10140  0183  00A0               	movwf	DATAEE_WriteByte@bAdd
 10141  0184  3070               	movlw	112
 10142  0185  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10143  0186  3004               	movlw	4
 10144  0187  00DC               	movwf	??_main
 10145  0188  085C               	movf	??_main,w
 10146  0189  00A2               	movwf	DATAEE_WriteByte@bData
 10147  018A  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10148                           
 10149                           ;main.c: 972: DATAEE_WriteByte( 0x7000 + (9 * 8), 'a');
 10150  018D  3048               	movlw	72
 10151  018E  0020               	movlb	0	; select bank0
 10152  018F  00A0               	movwf	DATAEE_WriteByte@bAdd
 10153  0190  3070               	movlw	112
 10154  0191  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10155  0192  3061               	movlw	97
 10156  0193  00DC               	movwf	??_main
 10157  0194  085C               	movf	??_main,w
 10158  0195  00A2               	movwf	DATAEE_WriteByte@bData
 10159  0196  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10160                           
 10161                           ;main.c: 973: DATAEE_WriteByte( 0x7000 + (10 * 8), 0);
 10162  0199  3050               	movlw	80
 10163  019A  0020               	movlb	0	; select bank0
 10164  019B  00A0               	movwf	DATAEE_WriteByte@bAdd
 10165  019C  3070               	movlw	112
 10166  019D  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10167  019E  01A2               	clrf	DATAEE_WriteByte@bData
 10168  019F  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10169                           
 10170                           ;main.c: 974: DATAEE_WriteByte( 0x7000 + (11 * 8), 0);
 10171  01A2  3058               	movlw	88
 10172  01A3  0020               	movlb	0	; select bank0
 10173  01A4  00A0               	movwf	DATAEE_WriteByte@bAdd
 10174  01A5  3070               	movlw	112
 10175  01A6  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10176  01A7  01A2               	clrf	DATAEE_WriteByte@bData
 10177  01A8  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10178                           
 10179                           ;main.c: 975: DATAEE_WriteByte( 0x7000 + (12 * 8), 0);
 10180  01AB  3060               	movlw	96
 10181  01AC  0020               	movlb	0	; select bank0
 10182  01AD  00A0               	movwf	DATAEE_WriteByte@bAdd
 10183  01AE  3070               	movlw	112
 10184  01AF  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10185  01B0  01A2               	clrf	DATAEE_WriteByte@bData
 10186  01B1  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10187                           
 10188                           ;main.c: 976: DATAEE_WriteByte( 0x7000 + (13 * 8), 174);
 10189  01B4  3068               	movlw	104
 10190  01B5  0020               	movlb	0	; select bank0
 10191  01B6  00A0               	movwf	DATAEE_WriteByte@bAdd
 10192  01B7  3070               	movlw	112
 10193  01B8  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10194  01B9  30AE               	movlw	174
 10195  01BA  00DC               	movwf	??_main
 10196  01BB  085C               	movf	??_main,w
 10197  01BC  00A2               	movwf	DATAEE_WriteByte@bData
 10198  01BD  3195  259C  3180   	fcall	_DATAEE_WriteByte
 10199  01C0                     l5954:
 10200                           
 10201                           ;main.c: 977: };main.c: 979: NREG = DATAEE_ReadByte(0x7000 + (1*8));
 10202  01C0  3008               	movlw	8
 10203  01C1  0020               	movlb	0	; select bank0
 10204  01C2  00A0               	movwf	DATAEE_ReadByte@bAdd
 10205  01C3  3070               	movlw	112
 10206  01C4  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10207  01C5  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10208  01C8  0020               	movlb	0	; select bank0
 10209  01C9  00DC               	movwf	??_main
 10210  01CA  085C               	movf	??_main,w
 10211  01CB  0021               	movlb	1	; select bank1
 10212  01CC  00D2               	movwf	_NREG^(0+128)
 10213  01CD                     l5956:
 10214                           
 10215                           ;main.c: 980: PMON = DATAEE_ReadByte(0x7000 + (2*8));
 10216  01CD  3010               	movlw	16
 10217  01CE  0020               	movlb	0	; select bank0
 10218  01CF  00A0               	movwf	DATAEE_ReadByte@bAdd
 10219  01D0  3070               	movlw	112
 10220  01D1  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10221  01D2  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10222  01D5  0020               	movlb	0	; select bank0
 10223  01D6  00DC               	movwf	??_main
 10224  01D7  085C               	movf	??_main,w
 10225  01D8  0021               	movlb	1	; select bank1
 10226  01D9  00ED               	movwf	_PMON^(0+128)
 10227  01DA                     l5958:
 10228                           
 10229                           ;main.c: 981: TALA = DATAEE_ReadByte(0x7000 + (3*8));
 10230  01DA  3018               	movlw	24
 10231  01DB  0020               	movlb	0	; select bank0
 10232  01DC  00A0               	movwf	DATAEE_ReadByte@bAdd
 10233  01DD  3070               	movlw	112
 10234  01DE  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10235  01DF  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10236  01E2  0020               	movlb	0	; select bank0
 10237  01E3  00DC               	movwf	??_main
 10238  01E4  085C               	movf	??_main,w
 10239  01E5  0021               	movlb	1	; select bank1
 10240  01E6  00EC               	movwf	_TALA^(0+128)
 10241  01E7                     l5960:
 10242                           
 10243                           ;main.c: 982: clkAlarm.alarmVal.h = DATAEE_ReadByte(0x7000 + (4*8));
 10244  01E7  3020               	movlw	32
 10245  01E8  0020               	movlb	0	; select bank0
 10246  01E9  00A0               	movwf	DATAEE_ReadByte@bAdd
 10247  01EA  3070               	movlw	112
 10248  01EB  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10249  01EC  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10250  01EF  0020               	movlb	0	; select bank0
 10251  01F0  00DC               	movwf	??_main
 10252  01F1  085C               	movf	??_main,w
 10253  01F2  00DF               	movwf	_clkAlarm
 10254  01F3                     l5962:
 10255                           
 10256                           ;main.c: 983: clkAlarm.alarmVal.m = DATAEE_ReadByte(0x7000 + (5*8));
 10257  01F3  3028               	movlw	40
 10258  01F4  00A0               	movwf	DATAEE_ReadByte@bAdd
 10259  01F5  3070               	movlw	112
 10260  01F6  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10261  01F7  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10262  01FA  0020               	movlb	0	; select bank0
 10263  01FB  00DC               	movwf	??_main
 10264  01FC  085C               	movf	??_main,w
 10265  01FD  00E0               	movwf	_clkAlarm+1
 10266  01FE                     l5964:
 10267                           
 10268                           ;main.c: 984: clkAlarm.alarmVal.s = DATAEE_ReadByte(0x7000 + (6*8));
 10269  01FE  3030               	movlw	48
 10270  01FF  00A0               	movwf	DATAEE_ReadByte@bAdd
 10271  0200  3070               	movlw	112
 10272  0201  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10273  0202  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10274  0205  0020               	movlb	0	; select bank0
 10275  0206  00DC               	movwf	??_main
 10276  0207  085C               	movf	??_main,w
 10277  0208  00E1               	movwf	_clkAlarm+2
 10278  0209                     l5966:
 10279                           
 10280                           ;main.c: 985: tempAlarm.alarmTemp = DATAEE_ReadByte(0x7000 + (7*8));
 10281  0209  3038               	movlw	56
 10282  020A  00A0               	movwf	DATAEE_ReadByte@bAdd
 10283  020B  3070               	movlw	112
 10284  020C  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10285  020D  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10286  0210  0020               	movlb	0	; select bank0
 10287  0211  00DC               	movwf	??_main
 10288  0212  085C               	movf	??_main,w
 10289  0213  0021               	movlb	1	; select bank1
 10290  0214  00C4               	movwf	_tempAlarm^(0+128)
 10291  0215                     l5968:
 10292                           
 10293                           ;main.c: 986: lumAlarm.alarmLum = DATAEE_ReadByte(0x7000 + (8*8));
 10294  0215  3040               	movlw	64
 10295  0216  0020               	movlb	0	; select bank0
 10296  0217  00A0               	movwf	DATAEE_ReadByte@bAdd
 10297  0218  3070               	movlw	112
 10298  0219  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10299  021A  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10300  021D  0020               	movlb	0	; select bank0
 10301  021E  00DC               	movwf	??_main
 10302  021F  085C               	movf	??_main,w
 10303  0220  0021               	movlb	1	; select bank1
 10304  0221  00C1               	movwf	_lumAlarm^(0+128)
 10305  0222                     l5970:
 10306                           
 10307                           ;main.c: 987: ALAF = DATAEE_ReadByte(0x7000 + (9*8));
 10308  0222  3048               	movlw	72
 10309  0223  0020               	movlb	0	; select bank0
 10310  0224  00A0               	movwf	DATAEE_ReadByte@bAdd
 10311  0225  3070               	movlw	112
 10312  0226  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10313  0227  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10314  022A  0020               	movlb	0	; select bank0
 10315  022B  00DC               	movwf	??_main
 10316  022C  085C               	movf	??_main,w
 10317  022D  00FD               	movwf	_ALAF
 10318  022E                     l5972:
 10319                           
 10320                           ;main.c: 988: t.h = DATAEE_ReadByte(0x7000 + (10*8));
 10321  022E  3050               	movlw	80
 10322  022F  00A0               	movwf	DATAEE_ReadByte@bAdd
 10323  0230  3070               	movlw	112
 10324  0231  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10325  0232  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10326  0235  0020               	movlb	0	; select bank0
 10327  0236  00DC               	movwf	??_main
 10328  0237  085C               	movf	??_main,w
 10329  0238  00E3               	movwf	_t
 10330  0239                     l5974:
 10331                           
 10332                           ;main.c: 989: t.m = DATAEE_ReadByte(0x7000 + (11*8));
 10333  0239  3058               	movlw	88
 10334  023A  00A0               	movwf	DATAEE_ReadByte@bAdd
 10335  023B  3070               	movlw	112
 10336  023C  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10337  023D  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10338  0240  0020               	movlb	0	; select bank0
 10339  0241  00DC               	movwf	??_main
 10340  0242  085C               	movf	??_main,w
 10341  0243  00E4               	movwf	_t+1
 10342  0244                     l5976:
 10343                           
 10344                           ;main.c: 990: idx_RingBuffer = DATAEE_ReadByte(0x7000 + (12*8));
 10345  0244  3060               	movlw	96
 10346  0245  00A0               	movwf	DATAEE_ReadByte@bAdd
 10347  0246  3070               	movlw	112
 10348  0247  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 10349  0248  3193  2322  3180   	fcall	_DATAEE_ReadByte
 10350  024B  0020               	movlb	0	; select bank0
 10351  024C  00DC               	movwf	??_main
 10352  024D  085C               	movf	??_main,w
 10353  024E  0021               	movlb	1	; select bank1
 10354  024F  00D1               	movwf	_idx_RingBuffer^(0+128)
 10355  0250                     l5978:
 10356                           
 10357                           ;main.c: 994: tempAlarm.trigger = 0;
 10358  0250  01C5               	clrf	(_tempAlarm^(0+128)+1)
 10359  0251                     l5980:
 10360                           
 10361                           ;main.c: 995: tempAlarm.triggered = 0;
 10362  0251  01C6               	clrf	(_tempAlarm^(0+128)+2)
 10363  0252                     l5982:
 10364                           
 10365                           ;main.c: 997: lumAlarm.trigger = 0;
 10366  0252  01C2               	clrf	(_lumAlarm^(0+128)+1)
 10367  0253                     l5984:
 10368                           
 10369                           ;main.c: 998: lumAlarm.triggered = 0;
 10370  0253  01C3               	clrf	(_lumAlarm^(0+128)+2)
 10371  0254                     l5986:
 10372                           
 10373                           ;main.c: 1000: clkAlarm.trigger = 0;
 10374  0254  0020               	movlb	0	; select bank0
 10375  0255  01E2               	clrf	_clkAlarm+3
 10376  0256                     l5988:
 10377                           
 10378                           ;main.c: 1003: i2c1_driver_open();
 10379  0256  3192  22E0  3180   	fcall	_i2c1_driver_open
 10380  0259                     l5990:
 10381                           
 10382                           ;main.c: 1004: TRISCbits.TRISC3 = 1;
 10383  0259  0020               	movlb	0	; select bank0
 10384  025A  1593               	bsf	19,3	;volatile
 10385  025B                     l5992:
 10386                           
 10387                           ;main.c: 1005: TRISCbits.TRISC4 = 1;
 10388  025B  1613               	bsf	19,4	;volatile
 10389  025C                     l5994:
 10390                           
 10391                           ;main.c: 1006: WPUC3 = 1;
 10392  025C  003E               	movlb	30	; select bank30
 10393  025D  15CF               	bsf	79,3	;volatile
 10394  025E                     l5996:
 10395                           
 10396                           ;main.c: 1007: WPUC4 = 1;
 10397  025E  164F               	bsf	79,4	;volatile
 10398  025F                     l5998:
 10399                           
 10400                           ;main.c: 1008: LCDinit();
 10401  025F  318B  237A  3180   	fcall	_LCDinit
 10402  0262                     l6000:
 10403                           
 10404                           ;main.c: 1011: (INTCONbits.GIE = 1);
 10405  0262  178B               	bsf	11,7	;volatile
 10406  0263                     l6002:
 10407                           
 10408                           ;main.c: 1014: (INTCONbits.PEIE = 1);
 10409  0263  170B               	bsf	11,6	;volatile
 10410  0264                     l6004:
 10411                           
 10412                           ;main.c: 1018: uint8_t c;;main.c: 1019: char buff[20] = "";
 10413  0264  30A0               	movlw	low main@buff
 10414  0265  0086               	movwf	6
 10415  0266  3000               	movlw	high main@buff
 10416  0267  0087               	movwf	7
 10417  0268  3014               	movlw	20
 10418  0269  0020               	movlb	0	; select bank0
 10419  026A  00DC               	movwf	??_main
 10420  026B  3000               	movlw	0
 10421  026C                     u5980:
 10422  026C  001E               	movwi fsr1++
 10423  026D  0BDC               	decfsz	??_main,f
 10424  026E  2A6C               	goto	u5980
 10425  026F                     l6006:
 10426                           
 10427                           ;main.c: 1020: int n=0;
 10428  026F  0021               	movlb	1	; select bank1
 10429  0270  01BC               	clrf	main@n^(0+128)
 10430  0271  01BD               	clrf	(main@n+1)^(0+128)
 10431  0272                     l6008:
 10432  0272  2AC9               	goto	l6036
 10433  0273                     l6010:
 10434                           
 10435                           ;main.c: 1047: c = getch();
 10436  0273  3192  2259  3180   	fcall	_getch
 10437  0276  0020               	movlb	0	; select bank0
 10438  0277  00DC               	movwf	??_main
 10439  0278  085C               	movf	??_main,w
 10440  0279  0021               	movlb	1	; select bank1
 10441  027A  00BB               	movwf	main@c^(0+128)
 10442  027B                     l6012:
 10443                           
 10444                           ;main.c: 1048: if((c == (uint8_t)0xFD || buff[0] == (uint8_t)0xFD)){
 10445  027B  30FD               	movlw	253
 10446  027C  063B               	xorwf	main@c^(0+128),w
 10447  027D  1903               	btfsc	3,2
 10448  027E  2A80               	goto	u5991
 10449  027F  2A81               	goto	u5990
 10450  0280                     u5991:
 10451  0280  2A87               	goto	l6016
 10452  0281                     u5990:
 10453  0281                     l6014:
 10454  0281  30FD               	movlw	253
 10455  0282  0620               	xorwf	main@buff^(0+128),w
 10456  0283  1D03               	btfss	3,2
 10457  0284  2A86               	goto	u6001
 10458  0285  2A87               	goto	u6000
 10459  0286                     u6001:
 10460  0286  2AC2               	goto	l6032
 10461  0287                     u6000:
 10462  0287                     l6016:
 10463                           
 10464                           ;main.c: 1049: if(c == (uint8_t)0xFD){
 10465  0287  30FD               	movlw	253
 10466  0288  063B               	xorwf	main@c^(0+128),w
 10467  0289  1D03               	btfss	3,2
 10468  028A  2A8C               	goto	u6011
 10469  028B  2A8D               	goto	u6010
 10470  028C                     u6011:
 10471  028C  2A9C               	goto	l6022
 10472  028D                     u6010:
 10473  028D                     l6018:
 10474                           
 10475                           ;main.c: 1050: memset(buff, 0, sizeof buff);
 10476  028D  3000               	movlw	0
 10477  028E  0020               	movlb	0	; select bank0
 10478  028F  00A0               	movwf	memset@c
 10479  0290  00A1               	movwf	memset@c+1
 10480  0291  3014               	movlw	20
 10481  0292  00A2               	movwf	memset@n
 10482  0293  3000               	movlw	0
 10483  0294  00A3               	movwf	memset@n+1
 10484  0295  30A0               	movlw	(low (main@buff| 0))& (0+255)
 10485  0296  3194  24F8  3180   	fcall	_memset
 10486  0299                     l6020:
 10487                           
 10488                           ;main.c: 1051: n=0;
 10489  0299  0021               	movlb	1	; select bank1
 10490  029A  01BC               	clrf	main@n^(0+128)
 10491  029B  01BD               	clrf	(main@n+1)^(0+128)
 10492  029C                     l6022:
 10493                           
 10494                           ;main.c: 1052: };main.c: 1053: buff[n] = c;
 10495  029C  083B               	movf	main@c^(0+128),w
 10496  029D  0020               	movlb	0	; select bank0
 10497  029E  00DC               	movwf	??_main
 10498  029F  0021               	movlb	1	; select bank1
 10499  02A0  083C               	movf	main@n^(0+128),w
 10500  02A1  3EA0               	addlw	(low (main@buff| 0))& (0+255)
 10501  02A2  0086               	movwf	6
 10502  02A3  0187               	clrf	7
 10503  02A4  0020               	movlb	0	; select bank0
 10504  02A5  085C               	movf	??_main,w
 10505  02A6  0081               	movwf	1
 10506  02A7                     l6024:
 10507                           
 10508                           ;main.c: 1054: n++;
 10509  02A7  3001               	movlw	1
 10510  02A8  0021               	movlb	1	; select bank1
 10511  02A9  07BC               	addwf	main@n^(0+128),f
 10512  02AA  3000               	movlw	0
 10513  02AB  3DBD               	addwfc	(main@n+1)^(0+128),f
 10514  02AC                     l6026:
 10515                           
 10516                           ;main.c: 1055: if(n == 20){
 10517  02AC  3014               	movlw	20
 10518  02AD  063C               	xorwf	main@n^(0+128),w
 10519  02AE  043D               	iorwf	(main@n+1)^(0+128),w
 10520  02AF  1D03               	btfss	3,2
 10521  02B0  2AB2               	goto	u6021
 10522  02B1  2AB3               	goto	u6020
 10523  02B2                     u6021:
 10524  02B2  2AC2               	goto	l6032
 10525  02B3                     u6020:
 10526  02B3                     l6028:
 10527                           
 10528                           ;main.c: 1056: memset(buff, 0, sizeof buff);
 10529  02B3  3000               	movlw	0
 10530  02B4  0020               	movlb	0	; select bank0
 10531  02B5  00A0               	movwf	memset@c
 10532  02B6  00A1               	movwf	memset@c+1
 10533  02B7  3014               	movlw	20
 10534  02B8  00A2               	movwf	memset@n
 10535  02B9  3000               	movlw	0
 10536  02BA  00A3               	movwf	memset@n+1
 10537  02BB  30A0               	movlw	(low (main@buff| 0))& (0+255)
 10538  02BC  3194  24F8  3180   	fcall	_memset
 10539  02BF                     l6030:
 10540                           
 10541                           ;main.c: 1057: n=0;
 10542  02BF  0021               	movlb	1	; select bank1
 10543  02C0  01BC               	clrf	main@n^(0+128)
 10544  02C1  01BD               	clrf	(main@n+1)^(0+128)
 10545  02C2                     l6032:
 10546                           
 10547                           ;main.c: 1058: };main.c: 1059: };main.c: 1060: if(c == (uint8_t)0xFE){
 10548  02C2  30FE               	movlw	254
 10549  02C3  063B               	xorwf	main@c^(0+128),w
 10550  02C4  1D03               	btfss	3,2
 10551  02C5  2AC7               	goto	u6031
 10552  02C6  2AC8               	goto	u6030
 10553  02C7                     u6031:
 10554  02C7  2AC9               	goto	l6036
 10555  02C8                     u6030:
 10556  02C8  2AD1               	goto	l6038
 10557  02C9                     l1556:
 10558  02C9                     l6036:
 10559  02C9  3192  223C  3180   	fcall	_EUSART_is_rx_ready
 10560  02CC  3A00               	xorlw	0
 10561  02CD  1D03               	skipz
 10562  02CE  2AD0               	goto	u6041
 10563  02CF  2AD1               	goto	u6040
 10564  02D0                     u6041:
 10565  02D0  2A73               	goto	l6010
 10566  02D1                     u6040:
 10567  02D1                     l6038:
 10568                           
 10569                           ;main.c: 1062: };main.c: 1063: };main.c: 1064: if(buff[n-1] == (uint8_t)0xFE){
 10570  02D1  0021               	movlb	1	; select bank1
 10571  02D2  083C               	movf	main@n^(0+128),w
 10572  02D3  3EFF               	addlw	255
 10573  02D4  3EA0               	addlw	(low (main@buff| 0))& (0+255)
 10574  02D5  0086               	movwf	6
 10575  02D6  0187               	clrf	7
 10576  02D7  30FE               	movlw	254
 10577  02D8  0601               	xorwf	1,w
 10578  02D9  1D03               	btfss	3,2
 10579  02DA  2ADC               	goto	u6051
 10580  02DB  2ADD               	goto	u6050
 10581  02DC                     u6051:
 10582  02DC  2B42               	goto	l6058
 10583  02DD                     u6050:
 10584  02DD                     l6040:
 10585                           
 10586                           ;main.c: 1065: for (i = 0; i < (sizeof(commands) / sizeof(struct command_d)); i++){
 10587  02DD  01B9               	clrf	main@i_2655^(0+128)
 10588  02DE  01BA               	clrf	(main@i_2655+1)^(0+128)
 10589  02DF                     l6046:
 10590                           
 10591                           ;main.c: 1066: if (buff[1] == commands[i].cmd_name){
 10592  02DF  083A               	movf	(main@i_2655+1)^(0+128),w
 10593  02E0  0020               	movlb	0	; select bank0
 10594  02E1  00A1               	movwf	___wmul@multiplier+1
 10595  02E2  0021               	movlb	1	; select bank1
 10596  02E3  0839               	movf	main@i_2655^(0+128),w
 10597  02E4  0020               	movlb	0	; select bank0
 10598  02E5  00A0               	movwf	___wmul@multiplier
 10599  02E6  3003               	movlw	3
 10600  02E7  00A2               	movwf	___wmul@multiplicand
 10601  02E8  3000               	movlw	0
 10602  02E9  00A3               	movwf	___wmul@multiplicand+1
 10603  02EA  3195  2517  3180   	fcall	___wmul
 10604  02ED  0020               	movlb	0	; select bank0
 10605  02EE  0821               	movf	?___wmul+1,w
 10606  02EF  0085               	movwf	5
 10607  02F0  0820               	movf	?___wmul,w
 10608  02F1  0084               	movwf	4
 10609  02F2  3002               	movlw	low ((_commands+2)| (0+32768))
 10610  02F3  0784               	addwf	4,f
 10611  02F4  3098               	movlw	high ((_commands+2)| (0+32768))
 10612  02F5  3D85               	addwfc	5,f
 10613  02F6  0800               	movf	0,w	;code access
 10614  02F7  0021               	movlb	1	; select bank1
 10615  02F8  0621               	xorwf	(main@buff^(0+128)+1),w
 10616  02F9  1D03               	skipz
 10617  02FA  2AFC               	goto	u6061
 10618  02FB  2AFD               	goto	u6060
 10619  02FC                     u6061:
 10620  02FC  2B26               	goto	l6050
 10621  02FD                     u6060:
 10622  02FD                     l6048:
 10623                           
 10624                           ;main.c: 1067: commands[i].cmd_fnct(n, buff);
 10625  02FD  083D               	movf	(main@n+1)^(0+128),w
 10626  02FE  0020               	movlb	0	; select bank0
 10627  02FF  00B0               	movwf	cmd_aa@num+1
 10628  0300  0021               	movlb	1	; select bank1
 10629  0301  083C               	movf	main@n^(0+128),w
 10630  0302  0020               	movlb	0	; select bank0
 10631  0303  00AF               	movwf	cmd_aa@num
 10632  0304  30A0               	movlw	(low (main@buff| 0))& (0+255)
 10633  0305  00DC               	movwf	??_main
 10634  0306  085C               	movf	??_main,w
 10635  0307  00B1               	movwf	cmd_aa@buffer
 10636  0308  0021               	movlb	1	; select bank1
 10637  0309  083A               	movf	(main@i_2655+1)^(0+128),w
 10638  030A  0020               	movlb	0	; select bank0
 10639  030B  00A1               	movwf	___wmul@multiplier+1
 10640  030C  0021               	movlb	1	; select bank1
 10641  030D  0839               	movf	main@i_2655^(0+128),w
 10642  030E  0020               	movlb	0	; select bank0
 10643  030F  00A0               	movwf	___wmul@multiplier
 10644  0310  3003               	movlw	3
 10645  0311  00A2               	movwf	___wmul@multiplicand
 10646  0312  3000               	movlw	0
 10647  0313  00A3               	movwf	___wmul@multiplicand+1
 10648  0314  3195  2517  3180   	fcall	___wmul
 10649  0317  0020               	movlb	0	; select bank0
 10650  0318  0821               	movf	?___wmul+1,w
 10651  0319  0085               	movwf	5
 10652  031A  0820               	movf	?___wmul,w
 10653  031B  0084               	movwf	4
 10654  031C  3000               	movlw	low (_commands| (0+32768))
 10655  031D  0784               	addwf	4,f
 10656  031E  3098               	movlw	high (_commands| (0+32768))
 10657  031F  3D85               	addwfc	5,f
 10658  0320  3F01               	moviw [1]fsr0
 10659  0321  008A               	movwf	10
 10660  0322  3F00               	moviw [0]fsr0
 10661  0323  000A               	callw
 10662  0324  3180               	pagesel	$
 10663                           
 10664                           ;main.c: 1068: break;
 10665  0325  2B33               	goto	l6052
 10666  0326                     l6050:
 10667  0326  3001               	movlw	1
 10668  0327  07B9               	addwf	main@i_2655^(0+128),f
 10669  0328  3000               	movlw	0
 10670  0329  3DBA               	addwfc	(main@i_2655+1)^(0+128),f
 10671  032A  3000               	movlw	0
 10672  032B  023A               	subwf	(main@i_2655+1)^(0+128),w
 10673  032C  300A               	movlw	10
 10674  032D  1903               	skipnz
 10675  032E  0239               	subwf	main@i_2655^(0+128),w
 10676  032F  1C03               	skipc
 10677  0330  2B32               	goto	u6071
 10678  0331  2B33               	goto	u6070
 10679  0332                     u6071:
 10680  0332  2ADF               	goto	l6046
 10681  0333                     u6070:
 10682  0333                     l6052:
 10683                           
 10684                           ;main.c: 1069: };main.c: 1070: };main.c: 1071: memset(buff, 0, sizeof buff);
 10685  0333  3000               	movlw	0
 10686  0334  0020               	movlb	0	; select bank0
 10687  0335  00A0               	movwf	memset@c
 10688  0336  00A1               	movwf	memset@c+1
 10689  0337  3014               	movlw	20
 10690  0338  00A2               	movwf	memset@n
 10691  0339  3000               	movlw	0
 10692  033A  00A3               	movwf	memset@n+1
 10693  033B  30A0               	movlw	(low (main@buff| 0))& (0+255)
 10694  033C  3194  24F8  3180   	fcall	_memset
 10695  033F                     l6054:
 10696  033F                     l6056:
 10697                           
 10698                           ;main.c: 1073: n=0;
 10699  033F  0021               	movlb	1	; select bank1
 10700  0340  01BC               	clrf	main@n^(0+128)
 10701  0341  01BD               	clrf	(main@n+1)^(0+128)
 10702  0342                     l6058:
 10703                           
 10704                           ;main.c: 1074: };main.c: 1076: if(flagS1pushed){
 10705  0342  0020               	movlb	0	; select bank0
 10706  0343  086A               	movf	_flagS1pushed,w
 10707  0344  1903               	btfsc	3,2
 10708  0345  2B47               	goto	u6081
 10709  0346  2B48               	goto	u6080
 10710  0347                     u6081:
 10711  0347  2B4D               	goto	l6064
 10712  0348                     u6080:
 10713  0348                     l6060:
 10714                           
 10715                           ;main.c: 1077: S1button();
 10716  0348  318A  22AF  3180   	fcall	_S1button
 10717  034B                     l6062:
 10718                           
 10719                           ;main.c: 1078: flagS1pushed=0;
 10720  034B  0020               	movlb	0	; select bank0
 10721  034C  01EA               	clrf	_flagS1pushed
 10722  034D                     l6064:
 10723                           
 10724                           ;main.c: 1082: };main.c: 1084: if(PWM_on){
 10725  034D  0021               	movlb	1	; select bank1
 10726  034E  084D               	movf	_PWM_on^(0+128),w
 10727  034F  1903               	btfsc	3,2
 10728  0350  2B52               	goto	u6091
 10729  0351  2B53               	goto	u6090
 10730  0352                     u6091:
 10731  0352  2B85               	goto	l6080
 10732  0353                     u6090:
 10733  0353                     l6066:
 10734                           
 10735                           ;main.c: 1085: if(PWM6EN==0){
 10736  0353  0027               	movlb	7	; select bank7
 10737  0354  1B8E               	btfsc	14,7	;volatile
 10738  0355  2B57               	goto	u6101
 10739  0356  2B58               	goto	u6100
 10740  0357                     u6101:
 10741  0357  2B5E               	goto	l6070
 10742  0358                     u6100:
 10743  0358                     l6068:
 10744                           
 10745                           ;main.c: 1086: TMR2_StartTimer();
 10746  0358  3192  2251  3180   	fcall	_TMR2_StartTimer
 10747                           
 10748                           ;main.c: 1087: PWM_Output_D4_Enable();
 10749  035B  3192  223F  3180   	fcall	_PWM_Output_D4_Enable
 10750  035E                     l6070:
 10751                           
 10752                           ;main.c: 1088: };main.c: 1089: if(dimingLed <= 1023){
 10753  035E  0021               	movlb	1	; select bank1
 10754  035F  0848               	movf	(_dimingLed+1)^(0+128),w
 10755  0360  3A80               	xorlw	128
 10756  0361  0020               	movlb	0	; select bank0
 10757  0362  00DC               	movwf	??_main
 10758  0363  3084               	movlw	132
 10759  0364  025C               	subwf	??_main,w
 10760  0365  1D03               	skipz
 10761  0366  2B6A               	goto	u6115
 10762  0367  3000               	movlw	0
 10763  0368  0021               	movlb	1	; select bank1
 10764  0369  0247               	subwf	_dimingLed^(0+128),w
 10765  036A                     u6115:
 10766  036A  1803               	skipnc
 10767  036B  2B6D               	goto	u6111
 10768  036C  2B6E               	goto	u6110
 10769  036D                     u6111:
 10770  036D  2B74               	goto	l6074
 10771  036E                     u6110:
 10772  036E                     l6072:
 10773                           
 10774                           ;main.c: 1090: dimingLed += 1;
 10775  036E  3001               	movlw	1
 10776  036F  0021               	movlb	1	; select bank1
 10777  0370  07C7               	addwf	_dimingLed^(0+128),f
 10778  0371  3000               	movlw	0
 10779  0372  3DC8               	addwfc	(_dimingLed+1)^(0+128),f
 10780                           
 10781                           ;main.c: 1091: } else{
 10782  0373  2B77               	goto	l6076
 10783  0374                     l6074:
 10784                           
 10785                           ;main.c: 1092: dimingLed = 0;
 10786  0374  0021               	movlb	1	; select bank1
 10787  0375  01C7               	clrf	_dimingLed^(0+128)
 10788  0376  01C8               	clrf	(_dimingLed+1)^(0+128)
 10789  0377                     l6076:
 10790                           
 10791                           ;main.c: 1093: };main.c: 1094: PWM6_LoadDutyValue(dimingLed);
 10792  0377  0848               	movf	(_dimingLed+1)^(0+128),w
 10793  0378  0020               	movlb	0	; select bank0
 10794  0379  00A1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10795  037A  0021               	movlb	1	; select bank1
 10796  037B  0847               	movf	_dimingLed^(0+128),w
 10797  037C  0020               	movlb	0	; select bank0
 10798  037D  00A0               	movwf	PWM6_LoadDutyValue@dutyValue
 10799  037E  3193  23BD  3180   	fcall	_PWM6_LoadDutyValue
 10800  0381                     l6078:
 10801                           
 10802                           ;main.c: 1095: _delay((unsigned long)((1)*(1000000/4000.0)));
 10803  0381  3053               	movlw	83
 10804  0382                     u6197:
 10805  0382  0B89               	decfsz	9,f
 10806  0383  2B82               	goto	u6197
 10807  0384  0000               	nop
 10808  0385                     l6080:
 10809                           
 10810                           ;main.c: 1096: };main.c: 1098: if(modeFlag == 0){
 10811  0385  0020               	movlb	0	; select bank0
 10812  0386  0866               	movf	_modeFlag,w
 10813  0387  0467               	iorwf	_modeFlag+1,w
 10814  0388  1D03               	btfss	3,2
 10815  0389  2B8B               	goto	u6121
 10816  038A  2B8C               	goto	u6120
 10817  038B                     u6121:
 10818  038B  2B97               	goto	l6088
 10819  038C                     u6120:
 10820  038C                     l6082:
 10821                           
 10822                           ;main.c: 1099: if(updateLCD){
 10823  038C  086F               	movf	_updateLCD,w
 10824  038D  1903               	btfsc	3,2
 10825  038E  2B90               	goto	u6131
 10826  038F  2B91               	goto	u6130
 10827  0390                     u6131:
 10828  0390  2AC9               	goto	l6036
 10829  0391                     u6130:
 10830  0391                     l6084:
 10831                           
 10832                           ;main.c: 1100: update_menuLCD();
 10833  0391  3183  23D5  3180   	fcall	_update_menuLCD
 10834  0394                     l6086:
 10835                           
 10836                           ;main.c: 1101: updateLCD=0;
 10837  0394  0020               	movlb	0	; select bank0
 10838  0395  01EF               	clrf	_updateLCD
 10839  0396  2AC9               	goto	l6036
 10840  0397                     l6088:
 10841  0397  0366               	decf	_modeFlag,w
 10842  0398  0467               	iorwf	_modeFlag+1,w
 10843  0399  1D03               	btfss	3,2
 10844  039A  2B9C               	goto	u6141
 10845  039B  2B9D               	goto	u6140
 10846  039C                     u6141:
 10847  039C  2BA1               	goto	l6092
 10848  039D                     u6140:
 10849  039D                     l6090:
 10850                           
 10851                           ;main.c: 1109: editClock();
 10852  039D  3187  2788  3180   	fcall	_editClock
 10853                           
 10854                           ;main.c: 1110: } else if(modeFlag == 2){
 10855  03A0  2AC9               	goto	l6036
 10856  03A1                     l6092:
 10857  03A1  3002               	movlw	2
 10858  03A2  0666               	xorwf	_modeFlag,w
 10859  03A3  0467               	iorwf	_modeFlag+1,w
 10860  03A4  1D03               	btfss	3,2
 10861  03A5  2BA7               	goto	u6151
 10862  03A6  2BA8               	goto	u6150
 10863  03A7                     u6151:
 10864  03A7  2BAC               	goto	l6096
 10865  03A8                     u6150:
 10866  03A8                     l6094:
 10867                           
 10868                           ;main.c: 1111: editTemp();
 10869  03A8  3189  216F  3180   	fcall	_editTemp
 10870                           
 10871                           ;main.c: 1112: } else if(modeFlag == 3){
 10872  03AB  2AC9               	goto	l6036
 10873  03AC                     l6096:
 10874  03AC  3003               	movlw	3
 10875  03AD  0666               	xorwf	_modeFlag,w
 10876  03AE  0467               	iorwf	_modeFlag+1,w
 10877  03AF  1D03               	btfss	3,2
 10878  03B0  2BB2               	goto	u6161
 10879  03B1  2BB3               	goto	u6160
 10880  03B2                     u6161:
 10881  03B2  2BB7               	goto	l6100
 10882  03B3                     u6160:
 10883  03B3                     l6098:
 10884                           
 10885                           ;main.c: 1113: editLum();
 10886  03B3  3189  2127  3180   	fcall	_editLum
 10887                           
 10888                           ;main.c: 1114: } else if(modeFlag == 4){
 10889  03B6  2AC9               	goto	l6036
 10890  03B7                     l6100:
 10891  03B7  3004               	movlw	4
 10892  03B8  0666               	xorwf	_modeFlag,w
 10893  03B9  0467               	iorwf	_modeFlag+1,w
 10894  03BA  1D03               	btfss	3,2
 10895  03BB  2BBD               	goto	u6171
 10896  03BC  2BBE               	goto	u6170
 10897  03BD                     u6171:
 10898  03BD  2BC2               	goto	l6104
 10899  03BE                     u6170:
 10900  03BE                     l6102:
 10901                           
 10902                           ;main.c: 1115: toggleAlarms();
 10903  03BE  3188  20A3  3180   	fcall	_toggleAlarms
 10904                           
 10905                           ;main.c: 1116: } else if(modeFlag > 4){
 10906  03C1  2AC9               	goto	l6036
 10907  03C2                     l6104:
 10908  03C2  0867               	movf	_modeFlag+1,w
 10909  03C3  3A80               	xorlw	128
 10910  03C4  00DC               	movwf	??_main
 10911  03C5  3080               	movlw	128
 10912  03C6  025C               	subwf	??_main,w
 10913  03C7  1D03               	skipz
 10914  03C8  2BCB               	goto	u6185
 10915  03C9  3005               	movlw	5
 10916  03CA  0266               	subwf	_modeFlag,w
 10917  03CB                     u6185:
 10918  03CB  1C03               	skipc
 10919  03CC  2BCE               	goto	u6181
 10920  03CD  2BCF               	goto	u6180
 10921  03CE                     u6181:
 10922  03CE  2AC9               	goto	l1556
 10923  03CF                     u6180:
 10924  03CF                     l6106:
 10925                           
 10926                           ;main.c: 1117: modeFlag = 0;
 10927  03CF  0020               	movlb	0	; select bank0
 10928  03D0  01E6               	clrf	_modeFlag
 10929  03D1  01E7               	clrf	_modeFlag+1
 10930  03D2  2AC9               	goto	l6036
 10931  03D3  3180  285E         	ljmp	start
 10932  03D5                     __end_of_main:
 10933                           
 10934                           	psect	text1
 10935  08A3                     __ptext1:	
 10936 ;; *************** function _toggleAlarms *****************
 10937 ;; Defined at:
 10938 ;;		line 713 in file "main.c"
 10939 ;; Parameters:    Size  Location     Type
 10940 ;;		None
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;		None
 10943 ;; Return value:  Size  Location     Type
 10944 ;;                  1    wreg      void 
 10945 ;; Registers used:
 10946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/0
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10954 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;Total ram usage:        1 bytes
 10957 ;; Hardware stack levels used:    1
 10958 ;; Hardware stack levels required when called:   10
 10959 ;; This function calls:
 10960 ;;		_S1button
 10961 ;;		_update_menuLCD
 10962 ;; This function is called by:
 10963 ;;		_main
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           
 10967                           
 10968                           ;psect for function _toggleAlarms
 10969  08A3                     _toggleAlarms:
 10970  08A3                     l1471:	
 10971                           ;incstack = 0
 10972                           ; Regs used in _toggleAlarms: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10973                           ;main.c: 715: while(1){
 10974                           
 10975  08A3                     l5728:
 10976                           
 10977                           ;main.c: 716: if(flagS1pushed){
 10978  08A3  0020               	movlb	0	; select bank0
 10979  08A4  086A               	movf	_flagS1pushed,w
 10980  08A5  1903               	btfsc	3,2
 10981  08A6  28A8               	goto	u5531
 10982  08A7  28A9               	goto	u5530
 10983  08A8                     u5531:
 10984  08A8  28AE               	goto	l5734
 10985  08A9                     u5530:
 10986  08A9                     l5730:
 10987                           
 10988                           ;main.c: 717: S1button();
 10989  08A9  318A  22AF  3188   	fcall	_S1button
 10990  08AC                     l5732:
 10991                           
 10992                           ;main.c: 718: flagS1pushed=0;
 10993  08AC  0020               	movlb	0	; select bank0
 10994  08AD  01EA               	clrf	_flagS1pushed
 10995  08AE                     l5734:
 10996                           
 10997                           ;main.c: 722: };main.c: 723: if(PORTCbits.RC5 == 0){
 10998  08AE  1A8E               	btfsc	14,5	;volatile
 10999  08AF  28B1               	goto	u5541
 11000  08B0  28B2               	goto	u5540
 11001  08B1                     u5541:
 11002  08B1  28CD               	goto	l5744
 11003  08B2                     u5540:
 11004  08B2                     l5736:
 11005                           
 11006                           ;main.c: 724: if(ALAF == 'A'){
 11007  08B2  3041               	movlw	65
 11008  08B3  067D               	xorwf	_ALAF,w
 11009  08B4  1D03               	btfss	3,2
 11010  08B5  28B7               	goto	u5551
 11011  08B6  28B8               	goto	u5550
 11012  08B7                     u5551:
 11013  08B7  28BD               	goto	l5740
 11014  08B8                     u5550:
 11015  08B8                     l5738:
 11016                           
 11017                           ;main.c: 725: ALAF = 'a';
 11018  08B8  3061               	movlw	97
 11019  08B9  00DB               	movwf	??_toggleAlarms
 11020  08BA  085B               	movf	??_toggleAlarms,w
 11021  08BB  00FD               	movwf	_ALAF
 11022                           
 11023                           ;main.c: 726: } else {
 11024  08BC  28C1               	goto	l1475
 11025  08BD                     l5740:
 11026                           
 11027                           ;main.c: 727: ALAF = 'A';
 11028  08BD  3041               	movlw	65
 11029  08BE  00DB               	movwf	??_toggleAlarms
 11030  08BF  085B               	movf	??_toggleAlarms,w
 11031  08C0  00FD               	movwf	_ALAF
 11032  08C1                     l1475:
 11033                           
 11034                           ;main.c: 728: };main.c: 729: _delay((unsigned long)((400)*(1000000/4000.0)));
 11035  08C1  3082               	movlw	130
 11036  08C2  0020               	movlb	0	; select bank0
 11037  08C3  00DB               	movwf	??_toggleAlarms
 11038  08C4  30DD               	movlw	221
 11039  08C5                     u6207:
 11040  08C5  0B89               	decfsz	9,f
 11041  08C6  28C5               	goto	u6207
 11042  08C7  0BDB               	decfsz	??_toggleAlarms,f
 11043  08C8  28C5               	goto	u6207
 11044  08C9  3200               	nop2
 11045  08CA                     l5742:
 11046                           
 11047                           ;main.c: 730: update_menuLCD();
 11048  08CA  3183  23D5  3188   	fcall	_update_menuLCD
 11049  08CD                     l5744:
 11050                           
 11051                           ;main.c: 731: };main.c: 732: if(modeFlag != 4){
 11052  08CD  3004               	movlw	4
 11053  08CE  0020               	movlb	0	; select bank0
 11054  08CF  0666               	xorwf	_modeFlag,w
 11055  08D0  0467               	iorwf	_modeFlag+1,w
 11056  08D1  1903               	btfsc	3,2
 11057  08D2  28D4               	goto	u5561
 11058  08D3  28D5               	goto	u5560
 11059  08D4                     u5561:
 11060  08D4  28D8               	goto	l5748
 11061  08D5                     u5560:
 11062  08D5                     l5746:
 11063                           
 11064                           ;main.c: 733: modeFlag = 0;
 11065  08D5  01E6               	clrf	_modeFlag
 11066  08D6  01E7               	clrf	_modeFlag+1
 11067                           
 11068                           ;main.c: 734: break;
 11069  08D7  28E3               	goto	l1480
 11070  08D8                     l5748:
 11071                           
 11072                           ;main.c: 735: };main.c: 736: if(updateLCD){
 11073  08D8  086F               	movf	_updateLCD,w
 11074  08D9  1903               	btfsc	3,2
 11075  08DA  28DC               	goto	u5571
 11076  08DB  28DD               	goto	u5570
 11077  08DC                     u5571:
 11078  08DC  28A3               	goto	l1471
 11079  08DD                     u5570:
 11080  08DD                     l5750:
 11081                           
 11082                           ;main.c: 737: update_menuLCD();
 11083  08DD  3183  23D5  3188   	fcall	_update_menuLCD
 11084  08E0                     l5752:
 11085                           
 11086                           ;main.c: 738: updateLCD=0;
 11087  08E0  0020               	movlb	0	; select bank0
 11088  08E1  01EF               	clrf	_updateLCD
 11089  08E2  28A3               	goto	l1471
 11090  08E3                     l1480:
 11091  08E3  0008               	return
 11092  08E4                     __end_of_toggleAlarms:
 11093                           
 11094                           	psect	text2
 11095  14F8                     __ptext2:	
 11096 ;; *************** function _memset *****************
 11097 ;; Defined at:
 11098 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\memset.c"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;  p1              1    wreg     PTR void 
 11101 ;;		 -> main@buff(20), 
 11102 ;;  c               2    0[BANK0 ] int 
 11103 ;;  n               2    2[BANK0 ] unsigned int 
 11104 ;; Auto vars:     Size  Location     Type
 11105 ;;  p1              1    6[BANK0 ] PTR void 
 11106 ;;		 -> main@buff(20), 
 11107 ;;  p               1    5[BANK0 ] PTR unsigned char 
 11108 ;;		 -> main@buff(20), 
 11109 ;; Return value:  Size  Location     Type
 11110 ;;                  1    wreg      PTR void 
 11111 ;; Registers used:
 11112 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11113 ;; Tracked objects:
 11114 ;;		On entry : 0/0
 11115 ;;		On exit  : 0/0
 11116 ;;		Unchanged: 0/0
 11117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11118 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11119 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11120 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11121 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11122 ;;Total ram usage:        7 bytes
 11123 ;; Hardware stack levels used:    1
 11124 ;; Hardware stack levels required when called:    5
 11125 ;; This function calls:
 11126 ;;		Nothing
 11127 ;; This function is called by:
 11128 ;;		_main
 11129 ;; This function uses a non-reentrant model
 11130 ;;
 11131                           
 11132                           
 11133                           ;psect for function _memset
 11134  14F8                     _memset:
 11135                           
 11136                           ;incstack = 0
 11137                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11138                           ;memset@p1 stored from wreg
 11139  14F8  0020               	movlb	0	; select bank0
 11140  14F9  00A6               	movwf	memset@p1
 11141  14FA                     l5860:
 11142  14FA  0826               	movf	memset@p1,w
 11143  14FB  00A4               	movwf	??_memset
 11144  14FC  0824               	movf	??_memset,w
 11145  14FD  00A5               	movwf	memset@p
 11146  14FE  2D0A               	goto	l5866
 11147  14FF                     l5862:
 11148  14FF  0820               	movf	memset@c,w
 11149  1500  00A4               	movwf	??_memset
 11150  1501  0825               	movf	memset@p,w
 11151  1502  0086               	movwf	6
 11152  1503  0187               	clrf	7
 11153  1504  0824               	movf	??_memset,w
 11154  1505  0081               	movwf	1
 11155  1506                     l5864:
 11156  1506  3001               	movlw	1
 11157  1507  00A4               	movwf	??_memset
 11158  1508  0824               	movf	??_memset,w
 11159  1509  07A5               	addwf	memset@p,f
 11160  150A                     l5866:
 11161  150A  3001               	movlw	1
 11162  150B  02A2               	subwf	memset@n,f
 11163  150C  3000               	movlw	0
 11164  150D  3BA3               	subwfb	memset@n+1,f
 11165  150E  0A22               	incf	memset@n,w
 11166  150F  1D03               	skipz
 11167  1510  2D15               	goto	u5781
 11168  1511  0A23               	incf	memset@n+1,w
 11169  1512  1D03               	btfss	3,2
 11170  1513  2D15               	goto	u5781
 11171  1514  2D16               	goto	u5780
 11172  1515                     u5781:
 11173  1515  2CFF               	goto	l5862
 11174  1516                     u5780:
 11175  1516                     l2250:
 11176  1516  0008               	return
 11177  1517                     __end_of_memset:
 11178                           
 11179                           	psect	text3
 11180  12E0                     __ptext3:	
 11181 ;; *************** function _i2c1_driver_open *****************
 11182 ;; Defined at:
 11183 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 11184 ;; Parameters:    Size  Location     Type
 11185 ;;		None
 11186 ;; Auto vars:     Size  Location     Type
 11187 ;;		None
 11188 ;; Return value:  Size  Location     Type
 11189 ;;		None               void
 11190 ;; Registers used:
 11191 ;;		wreg, status,2
 11192 ;; Tracked objects:
 11193 ;;		On entry : 0/0
 11194 ;;		On exit  : 0/0
 11195 ;;		Unchanged: 0/0
 11196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11201 ;;Total ram usage:        0 bytes
 11202 ;; Hardware stack levels used:    1
 11203 ;; Hardware stack levels required when called:    5
 11204 ;; This function calls:
 11205 ;;		Nothing
 11206 ;; This function is called by:
 11207 ;;		_main
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           
 11211                           
 11212                           ;psect for function _i2c1_driver_open
 11213  12E0                     _i2c1_driver_open:
 11214  12E0                     l5408:	
 11215                           ;incstack = 0
 11216                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 11217                           
 11218                           
 11219                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 11220  12E0  0023               	movlb	3	; select bank3
 11221  12E1  1A90               	btfsc	16,5	;volatile
 11222  12E2  2AE4               	goto	u4951
 11223  12E3  2AE5               	goto	u4950
 11224  12E4                     u4951:
 11225  12E4  2AEB               	goto	l255
 11226  12E5                     u4950:
 11227  12E5                     l5410:
 11228                           
 11229                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
 11230  12E5  018F               	clrf	15	;volatile
 11231  12E6                     l5412:
 11232                           
 11233                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 11234  12E6  3028               	movlw	40
 11235  12E7  0090               	movwf	16	;volatile
 11236  12E8                     l5414:
 11237                           
 11238                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 11239  12E8  0191               	clrf	17	;volatile
 11240                           
 11241                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 11242  12E9  3003               	movlw	3
 11243  12EA  008D               	movwf	13	;volatile
 11244  12EB                     l255:
 11245  12EB  0008               	return
 11246  12EC                     __end_of_i2c1_driver_open:
 11247                           
 11248                           	psect	text4
 11249  1259                     __ptext4:	
 11250 ;; *************** function _getch *****************
 11251 ;; Defined at:
 11252 ;;		line 171 in file "mcc_generated_files/eusart.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;		None
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;		None
 11257 ;; Return value:  Size  Location     Type
 11258 ;;                  1    wreg      unsigned char 
 11259 ;; Registers used:
 11260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11261 ;; Tracked objects:
 11262 ;;		On entry : 0/0
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11270 ;;Total ram usage:        0 bytes
 11271 ;; Hardware stack levels used:    1
 11272 ;; Hardware stack levels required when called:    6
 11273 ;; This function calls:
 11274 ;;		_EUSART_Read
 11275 ;; This function is called by:
 11276 ;;		_main
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           
 11280                           
 11281                           ;psect for function _getch
 11282  1259                     _getch:
 11283  1259                     l5482:	
 11284                           ;incstack = 0
 11285                           ; Regs used in _getch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11286                           
 11287                           
 11288                           ;eusart.c: 173: return EUSART_Read();
 11289  1259  3196  260A  3192   	fcall	_EUSART_Read
 11290  125C                     l912:
 11291  125C  0008               	return
 11292  125D                     __end_of_getch:
 11293                           
 11294                           	psect	text5
 11295  160A                     __ptext5:	
 11296 ;; *************** function _EUSART_Read *****************
 11297 ;; Defined at:
 11298 ;;		line 128 in file "mcc_generated_files/eusart.c"
 11299 ;; Parameters:    Size  Location     Type
 11300 ;;		None
 11301 ;; Auto vars:     Size  Location     Type
 11302 ;;  readValue       1    1[BANK0 ] unsigned char 
 11303 ;; Return value:  Size  Location     Type
 11304 ;;                  1    wreg      unsigned char 
 11305 ;; Registers used:
 11306 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11307 ;; Tracked objects:
 11308 ;;		On entry : 0/0
 11309 ;;		On exit  : 0/0
 11310 ;;		Unchanged: 0/0
 11311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11314 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11315 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11316 ;;Total ram usage:        2 bytes
 11317 ;; Hardware stack levels used:    1
 11318 ;; Hardware stack levels required when called:    5
 11319 ;; This function calls:
 11320 ;;		Nothing
 11321 ;; This function is called by:
 11322 ;;		_getch
 11323 ;; This function uses a non-reentrant model
 11324 ;;
 11325                           
 11326                           
 11327                           ;psect for function _EUSART_Read
 11328  160A                     _EUSART_Read:
 11329  160A                     l5054:	
 11330                           ;incstack = 0
 11331                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 11332                           
 11333  160A                     l5056:	
 11334                           ;eusart.c: 132: while(0 == eusartRxCount)
 11335                           
 11336  160A  0021               	movlb	1	; select bank1
 11337  160B  0853               	movf	_eusartRxCount^(0+128),w	;volatile
 11338  160C  1903               	btfsc	3,2
 11339  160D  2E0F               	goto	u4261
 11340  160E  2E10               	goto	u4260
 11341  160F                     u4261:
 11342  160F  2E0A               	goto	l5056
 11343  1610                     u4260:
 11344  1610                     l5058:
 11345                           
 11346                           ;eusart.c: 134: };eusart.c: 136: readValue = eusartRxBuffer[eusartRxTail++];
 11347  1610  0854               	movf	_eusartRxTail^(0+128),w
 11348  1611  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 11349  1612  0086               	movwf	6
 11350  1613  3002               	movlw	2	; select bank4/5
 11351  1614  0087               	movwf	7
 11352  1615  0801               	movf	1,w
 11353  1616  0020               	movlb	0	; select bank0
 11354  1617  00A0               	movwf	??_EUSART_Read
 11355  1618  0820               	movf	??_EUSART_Read,w
 11356  1619  00A1               	movwf	EUSART_Read@readValue
 11357  161A                     l5060:
 11358  161A  3001               	movlw	1
 11359  161B  00A0               	movwf	??_EUSART_Read
 11360  161C  0820               	movf	??_EUSART_Read,w
 11361  161D  0021               	movlb	1	; select bank1
 11362  161E  07D4               	addwf	_eusartRxTail^(0+128),f	;volatile
 11363  161F                     l5062:
 11364                           
 11365                           ;eusart.c: 137: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 11366  161F  3040               	movlw	64
 11367  1620  0254               	subwf	_eusartRxTail^(0+128),w	;volatile
 11368  1621  1C03               	skipc
 11369  1622  2E24               	goto	u4271
 11370  1623  2E25               	goto	u4270
 11371  1624                     u4271:
 11372  1624  2E26               	goto	l5066
 11373  1625                     u4270:
 11374  1625                     l5064:
 11375                           
 11376                           ;eusart.c: 138: {;eusart.c: 139: eusartRxTail = 0;
 11377  1625  01D4               	clrf	_eusartRxTail^(0+128)	;volatile
 11378  1626                     l5066:
 11379                           
 11380                           ;eusart.c: 140: };eusart.c: 141: PIE3bits.RCIE = 0;
 11381  1626  002E               	movlb	14	; select bank14
 11382  1627  1299               	bcf	25,5	;volatile
 11383  1628                     l5068:
 11384                           
 11385                           ;eusart.c: 142: eusartRxCount--;
 11386  1628  3001               	movlw	1
 11387  1629  0021               	movlb	1	; select bank1
 11388  162A  02D3               	subwf	_eusartRxCount^(0+128),f	;volatile
 11389  162B                     l5070:
 11390                           
 11391                           ;eusart.c: 143: PIE3bits.RCIE = 1;
 11392  162B  002E               	movlb	14	; select bank14
 11393  162C  1699               	bsf	25,5	;volatile
 11394  162D                     l5072:
 11395                           
 11396                           ;eusart.c: 145: return readValue;
 11397  162D  0020               	movlb	0	; select bank0
 11398  162E  0821               	movf	EUSART_Read@readValue,w
 11399  162F                     l900:
 11400  162F  0008               	return
 11401  1630                     __end_of_EUSART_Read:
 11402                           
 11403                           	psect	text6
 11404  096F                     __ptext6:	
 11405 ;; *************** function _editTemp *****************
 11406 ;; Defined at:
 11407 ;;		line 649 in file "main.c"
 11408 ;; Parameters:    Size  Location     Type
 11409 ;;		None
 11410 ;; Auto vars:     Size  Location     Type
 11411 ;;		None
 11412 ;; Return value:  Size  Location     Type
 11413 ;;                  1    wreg      void 
 11414 ;; Registers used:
 11415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11416 ;; Tracked objects:
 11417 ;;		On entry : 0/0
 11418 ;;		On exit  : 0/0
 11419 ;;		Unchanged: 0/0
 11420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11423 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11424 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11425 ;;Total ram usage:        1 bytes
 11426 ;; Hardware stack levels used:    1
 11427 ;; Hardware stack levels required when called:   10
 11428 ;; This function calls:
 11429 ;;		_S1button
 11430 ;;		_update_menuLCD
 11431 ;; This function is called by:
 11432 ;;		_main
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           
 11437                           ;psect for function _editTemp
 11438  096F                     _editTemp:
 11439  096F                     l1445:	
 11440                           ;incstack = 0
 11441                           ; Regs used in _editTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11442                           ;main.c: 650: while(1){
 11443                           
 11444  096F                     l5664:
 11445                           
 11446                           ;main.c: 651: if(flagS1pushed){
 11447  096F  0020               	movlb	0	; select bank0
 11448  0970  086A               	movf	_flagS1pushed,w
 11449  0971  1903               	btfsc	3,2
 11450  0972  2974               	goto	u5411
 11451  0973  2975               	goto	u5410
 11452  0974                     u5411:
 11453  0974  297A               	goto	l5670
 11454  0975                     u5410:
 11455  0975                     l5666:
 11456                           
 11457                           ;main.c: 652: S1button();
 11458  0975  318A  22AF  3189   	fcall	_S1button
 11459  0978                     l5668:
 11460                           
 11461                           ;main.c: 653: flagS1pushed=0;
 11462  0978  0020               	movlb	0	; select bank0
 11463  0979  01EA               	clrf	_flagS1pushed
 11464  097A                     l5670:
 11465                           
 11466                           ;main.c: 657: };main.c: 658: if(PORTCbits.RC5 == 0){
 11467  097A  1A8E               	btfsc	14,5	;volatile
 11468  097B  297D               	goto	u5421
 11469  097C  297E               	goto	u5420
 11470  097D                     u5421:
 11471  097D  29A0               	goto	l5686
 11472  097E                     u5420:
 11473  097E                     l5672:
 11474                           
 11475                           ;main.c: 659: if(editingTempAlarm == 0){
 11476  097E  0021               	movlb	1	; select bank1
 11477  097F  084F               	movf	_editingTempAlarm^(0+128),w
 11478  0980  1D03               	btfss	3,2
 11479  0981  2983               	goto	u5431
 11480  0982  2984               	goto	u5430
 11481  0983                     u5431:
 11482  0983  2987               	goto	l5676
 11483  0984                     u5430:
 11484  0984                     l5674:
 11485                           
 11486                           ;main.c: 660: editingTempAlarm = 1;
 11487  0984  01CF               	clrf	_editingTempAlarm^(0+128)
 11488  0985  0ACF               	incf	_editingTempAlarm^(0+128),f
 11489                           
 11490                           ;main.c: 661: } else {
 11491  0986  2994               	goto	l5682
 11492  0987                     l5676:
 11493                           
 11494                           ;main.c: 662: tempAlarm.alarmTemp++;
 11495  0987  3001               	movlw	1
 11496  0988  0020               	movlb	0	; select bank0
 11497  0989  00DB               	movwf	??_editTemp
 11498  098A  085B               	movf	??_editTemp,w
 11499  098B  0021               	movlb	1	; select bank1
 11500  098C  07C4               	addwf	_tempAlarm^(0+128),f
 11501  098D                     l5678:
 11502                           
 11503                           ;main.c: 663: if(tempAlarm.alarmTemp > 50){
 11504  098D  3033               	movlw	51
 11505  098E  0244               	subwf	_tempAlarm^(0+128),w
 11506  098F  1C03               	skipc
 11507  0990  2992               	goto	u5441
 11508  0991  2993               	goto	u5440
 11509  0992                     u5441:
 11510  0992  2994               	goto	l5682
 11511  0993                     u5440:
 11512  0993                     l5680:
 11513                           
 11514                           ;main.c: 664: tempAlarm.alarmTemp = 0;
 11515  0993  01C4               	clrf	_tempAlarm^(0+128)
 11516  0994                     l5682:
 11517                           
 11518                           ;main.c: 665: };main.c: 666: };main.c: 667: _delay((unsigned long)((400)*(1000000/4000.0
      +                          )));
 11519  0994  3082               	movlw	130
 11520  0995  0020               	movlb	0	; select bank0
 11521  0996  00DB               	movwf	??_editTemp
 11522  0997  30DD               	movlw	221
 11523  0998                     u6217:
 11524  0998  0B89               	decfsz	9,f
 11525  0999  2998               	goto	u6217
 11526  099A  0BDB               	decfsz	??_editTemp,f
 11527  099B  2998               	goto	u6217
 11528  099C  3200               	nop2
 11529  099D                     l5684:
 11530                           
 11531                           ;main.c: 668: update_menuLCD();
 11532  099D  3183  23D5  3189   	fcall	_update_menuLCD
 11533  09A0                     l5686:
 11534                           
 11535                           ;main.c: 669: };main.c: 670: if(modeFlag != 2){
 11536  09A0  3002               	movlw	2
 11537  09A1  0020               	movlb	0	; select bank0
 11538  09A2  0666               	xorwf	_modeFlag,w
 11539  09A3  0467               	iorwf	_modeFlag+1,w
 11540  09A4  1903               	btfsc	3,2
 11541  09A5  29A7               	goto	u5451
 11542  09A6  29A8               	goto	u5450
 11543  09A7                     u5451:
 11544  09A7  29AB               	goto	l5690
 11545  09A8                     u5450:
 11546  09A8                     l5688:
 11547                           
 11548                           ;main.c: 671: editingTempAlarm = 0;
 11549  09A8  0021               	movlb	1	; select bank1
 11550  09A9  01CF               	clrf	_editingTempAlarm^(0+128)
 11551                           
 11552                           ;main.c: 672: break;
 11553  09AA  29B6               	goto	l1455
 11554  09AB                     l5690:
 11555                           
 11556                           ;main.c: 673: };main.c: 674: if(updateLCD){
 11557  09AB  086F               	movf	_updateLCD,w
 11558  09AC  1903               	btfsc	3,2
 11559  09AD  29AF               	goto	u5461
 11560  09AE  29B0               	goto	u5460
 11561  09AF                     u5461:
 11562  09AF  296F               	goto	l1445
 11563  09B0                     u5460:
 11564  09B0                     l5692:
 11565                           
 11566                           ;main.c: 675: update_menuLCD();
 11567  09B0  3183  23D5  3189   	fcall	_update_menuLCD
 11568  09B3                     l5694:
 11569                           
 11570                           ;main.c: 676: updateLCD=0;
 11571  09B3  0020               	movlb	0	; select bank0
 11572  09B4  01EF               	clrf	_updateLCD
 11573  09B5  296F               	goto	l1445
 11574  09B6                     l1455:
 11575  09B6  0008               	return
 11576  09B7                     __end_of_editTemp:
 11577                           
 11578                           	psect	text7
 11579  0927                     __ptext7:	
 11580 ;; *************** function _editLum *****************
 11581 ;; Defined at:
 11582 ;;		line 681 in file "main.c"
 11583 ;; Parameters:    Size  Location     Type
 11584 ;;		None
 11585 ;; Auto vars:     Size  Location     Type
 11586 ;;		None
 11587 ;; Return value:  Size  Location     Type
 11588 ;;                  1    wreg      void 
 11589 ;; Registers used:
 11590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11591 ;; Tracked objects:
 11592 ;;		On entry : 0/0
 11593 ;;		On exit  : 0/0
 11594 ;;		Unchanged: 0/0
 11595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11599 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;Total ram usage:        1 bytes
 11601 ;; Hardware stack levels used:    1
 11602 ;; Hardware stack levels required when called:   10
 11603 ;; This function calls:
 11604 ;;		_S1button
 11605 ;;		_update_menuLCD
 11606 ;; This function is called by:
 11607 ;;		_main
 11608 ;; This function uses a non-reentrant model
 11609 ;;
 11610                           
 11611                           
 11612                           ;psect for function _editLum
 11613  0927                     _editLum:
 11614  0927                     l1458:	
 11615                           ;incstack = 0
 11616                           ; Regs used in _editLum: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11617                           ;main.c: 682: while(1){
 11618                           
 11619  0927                     l5696:
 11620                           
 11621                           ;main.c: 683: if(flagS1pushed){
 11622  0927  0020               	movlb	0	; select bank0
 11623  0928  086A               	movf	_flagS1pushed,w
 11624  0929  1903               	btfsc	3,2
 11625  092A  292C               	goto	u5471
 11626  092B  292D               	goto	u5470
 11627  092C                     u5471:
 11628  092C  2932               	goto	l5702
 11629  092D                     u5470:
 11630  092D                     l5698:
 11631                           
 11632                           ;main.c: 684: S1button();
 11633  092D  318A  22AF  3189   	fcall	_S1button
 11634  0930                     l5700:
 11635                           
 11636                           ;main.c: 685: flagS1pushed=0;
 11637  0930  0020               	movlb	0	; select bank0
 11638  0931  01EA               	clrf	_flagS1pushed
 11639  0932                     l5702:
 11640                           
 11641                           ;main.c: 689: };main.c: 690: if(PORTCbits.RC5 == 0){
 11642  0932  1A8E               	btfsc	14,5	;volatile
 11643  0933  2935               	goto	u5481
 11644  0934  2936               	goto	u5480
 11645  0935                     u5481:
 11646  0935  2958               	goto	l5718
 11647  0936                     u5480:
 11648  0936                     l5704:
 11649                           
 11650                           ;main.c: 691: if(editingLumAlarm == 0){
 11651  0936  0021               	movlb	1	; select bank1
 11652  0937  084E               	movf	_editingLumAlarm^(0+128),w
 11653  0938  1D03               	btfss	3,2
 11654  0939  293B               	goto	u5491
 11655  093A  293C               	goto	u5490
 11656  093B                     u5491:
 11657  093B  293F               	goto	l5708
 11658  093C                     u5490:
 11659  093C                     l5706:
 11660                           
 11661                           ;main.c: 692: editingLumAlarm = 1;
 11662  093C  01CE               	clrf	_editingLumAlarm^(0+128)
 11663  093D  0ACE               	incf	_editingLumAlarm^(0+128),f
 11664                           
 11665                           ;main.c: 693: } else {
 11666  093E  294C               	goto	l5714
 11667  093F                     l5708:
 11668                           
 11669                           ;main.c: 694: lumAlarm.alarmLum++;
 11670  093F  3001               	movlw	1
 11671  0940  0020               	movlb	0	; select bank0
 11672  0941  00DB               	movwf	??_editLum
 11673  0942  085B               	movf	??_editLum,w
 11674  0943  0021               	movlb	1	; select bank1
 11675  0944  07C1               	addwf	_lumAlarm^(0+128),f
 11676  0945                     l5710:
 11677                           
 11678                           ;main.c: 695: if(lumAlarm.alarmLum > 7){
 11679  0945  3008               	movlw	8
 11680  0946  0241               	subwf	_lumAlarm^(0+128),w
 11681  0947  1C03               	skipc
 11682  0948  294A               	goto	u5501
 11683  0949  294B               	goto	u5500
 11684  094A                     u5501:
 11685  094A  294C               	goto	l5714
 11686  094B                     u5500:
 11687  094B                     l5712:
 11688                           
 11689                           ;main.c: 696: lumAlarm.alarmLum = 0;
 11690  094B  01C1               	clrf	_lumAlarm^(0+128)
 11691  094C                     l5714:
 11692                           
 11693                           ;main.c: 697: };main.c: 698: };main.c: 699: _delay((unsigned long)((400)*(1000000/4000.0
      +                          )));
 11694  094C  3082               	movlw	130
 11695  094D  0020               	movlb	0	; select bank0
 11696  094E  00DB               	movwf	??_editLum
 11697  094F  30DD               	movlw	221
 11698  0950                     u6227:
 11699  0950  0B89               	decfsz	9,f
 11700  0951  2950               	goto	u6227
 11701  0952  0BDB               	decfsz	??_editLum,f
 11702  0953  2950               	goto	u6227
 11703  0954  3200               	nop2
 11704  0955                     l5716:
 11705                           
 11706                           ;main.c: 700: update_menuLCD();
 11707  0955  3183  23D5  3189   	fcall	_update_menuLCD
 11708  0958                     l5718:
 11709                           
 11710                           ;main.c: 701: };main.c: 702: if(modeFlag != 3){
 11711  0958  3003               	movlw	3
 11712  0959  0020               	movlb	0	; select bank0
 11713  095A  0666               	xorwf	_modeFlag,w
 11714  095B  0467               	iorwf	_modeFlag+1,w
 11715  095C  1903               	btfsc	3,2
 11716  095D  295F               	goto	u5511
 11717  095E  2960               	goto	u5510
 11718  095F                     u5511:
 11719  095F  2963               	goto	l5722
 11720  0960                     u5510:
 11721  0960                     l5720:
 11722                           
 11723                           ;main.c: 703: editingLumAlarm = 0;
 11724  0960  0021               	movlb	1	; select bank1
 11725  0961  01CE               	clrf	_editingLumAlarm^(0+128)
 11726                           
 11727                           ;main.c: 704: break;
 11728  0962  296E               	goto	l1468
 11729  0963                     l5722:
 11730                           
 11731                           ;main.c: 705: };main.c: 706: if(updateLCD){
 11732  0963  086F               	movf	_updateLCD,w
 11733  0964  1903               	btfsc	3,2
 11734  0965  2967               	goto	u5521
 11735  0966  2968               	goto	u5520
 11736  0967                     u5521:
 11737  0967  2927               	goto	l1458
 11738  0968                     u5520:
 11739  0968                     l5724:
 11740                           
 11741                           ;main.c: 707: update_menuLCD();
 11742  0968  3183  23D5  3189   	fcall	_update_menuLCD
 11743  096B                     l5726:
 11744                           
 11745                           ;main.c: 708: updateLCD=0;
 11746  096B  0020               	movlb	0	; select bank0
 11747  096C  01EF               	clrf	_updateLCD
 11748  096D  2927               	goto	l1458
 11749  096E                     l1468:
 11750  096E  0008               	return
 11751  096F                     __end_of_editLum:
 11752                           
 11753                           	psect	text8
 11754  0788                     __ptext8:	
 11755 ;; *************** function _editClock *****************
 11756 ;; Defined at:
 11757 ;;		line 602 in file "main.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;		None
 11760 ;; Auto vars:     Size  Location     Type
 11761 ;;		None
 11762 ;; Return value:  Size  Location     Type
 11763 ;;                  1    wreg      void 
 11764 ;; Registers used:
 11765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11766 ;; Tracked objects:
 11767 ;;		On entry : 0/0
 11768 ;;		On exit  : 0/0
 11769 ;;		Unchanged: 0/0
 11770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11773 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;Total ram usage:        1 bytes
 11776 ;; Hardware stack levels used:    1
 11777 ;; Hardware stack levels required when called:   10
 11778 ;; This function calls:
 11779 ;;		_S1button
 11780 ;;		_update_menuLCD
 11781 ;; This function is called by:
 11782 ;;		_main
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786                           
 11787                           ;psect for function _editClock
 11788  0788                     _editClock:
 11789  0788                     l1422:	
 11790                           ;incstack = 0
 11791                           ; Regs used in _editClock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11792                           ;main.c: 604: while(1){
 11793                           
 11794  0788                     l5614:
 11795                           
 11796                           ;main.c: 605: if(flagS1pushed){
 11797  0788  0020               	movlb	0	; select bank0
 11798  0789  086A               	movf	_flagS1pushed,w
 11799  078A  1903               	btfsc	3,2
 11800  078B  2F8D               	goto	u5301
 11801  078C  2F8E               	goto	u5300
 11802  078D                     u5301:
 11803  078D  2F93               	goto	l5620
 11804  078E                     u5300:
 11805  078E                     l5616:
 11806                           
 11807                           ;main.c: 606: S1button();
 11808  078E  318A  22AF  3187   	fcall	_S1button
 11809  0791                     l5618:
 11810                           
 11811                           ;main.c: 607: flagS1pushed=0;
 11812  0791  0020               	movlb	0	; select bank0
 11813  0792  01EA               	clrf	_flagS1pushed
 11814  0793                     l5620:
 11815                           
 11816                           ;main.c: 611: };main.c: 612: if(PORTCbits.RC5 == 0){
 11817  0793  1A8E               	btfsc	14,5	;volatile
 11818  0794  2F96               	goto	u5311
 11819  0795  2F97               	goto	u5310
 11820  0796                     u5311:
 11821  0796  2FE9               	goto	l5654
 11822  0797                     u5310:
 11823  0797                     l5622:
 11824                           
 11825                           ;main.c: 613: if(editingClockAlarm == 0){
 11826  0797  0868               	movf	_editingClockAlarm,w
 11827  0798  0469               	iorwf	_editingClockAlarm+1,w
 11828  0799  1D03               	btfss	3,2
 11829  079A  2F9C               	goto	u5321
 11830  079B  2F9D               	goto	u5320
 11831  079C                     u5321:
 11832  079C  2FA2               	goto	l5626
 11833  079D                     u5320:
 11834  079D                     l5624:
 11835                           
 11836                           ;main.c: 614: editingClockAlarm = 1;
 11837  079D  3001               	movlw	1
 11838  079E  00E8               	movwf	_editingClockAlarm
 11839  079F  3000               	movlw	0
 11840  07A0  00E9               	movwf	_editingClockAlarm+1
 11841                           
 11842                           ;main.c: 616: } else if(editingClockAlarm == 1){
 11843  07A1  2FDD               	goto	l5650
 11844  07A2                     l5626:
 11845  07A2  0368               	decf	_editingClockAlarm,w
 11846  07A3  0469               	iorwf	_editingClockAlarm+1,w
 11847  07A4  1D03               	btfss	3,2
 11848  07A5  2FA7               	goto	u5331
 11849  07A6  2FA8               	goto	u5330
 11850  07A7                     u5331:
 11851  07A7  2FB5               	goto	l5634
 11852  07A8                     u5330:
 11853  07A8                     l5628:
 11854                           
 11855                           ;main.c: 617: if(clkAlarm.alarmVal.h >= 23){
 11856  07A8  3017               	movlw	23
 11857  07A9  025F               	subwf	_clkAlarm,w
 11858  07AA  1C03               	skipc
 11859  07AB  2FAD               	goto	u5341
 11860  07AC  2FAE               	goto	u5340
 11861  07AD                     u5341:
 11862  07AD  2FB0               	goto	l5632
 11863  07AE                     u5340:
 11864  07AE                     l5630:
 11865                           
 11866                           ;main.c: 618: clkAlarm.alarmVal.h = 0;
 11867  07AE  01DF               	clrf	_clkAlarm
 11868                           
 11869                           ;main.c: 619: } else{
 11870  07AF  2FDD               	goto	l5650
 11871  07B0                     l5632:
 11872                           
 11873                           ;main.c: 620: clkAlarm.alarmVal.h++;
 11874  07B0  3001               	movlw	1
 11875  07B1  00DB               	movwf	??_editClock
 11876  07B2  085B               	movf	??_editClock,w
 11877  07B3  07DF               	addwf	_clkAlarm,f
 11878  07B4  2FDD               	goto	l5650
 11879  07B5                     l5634:
 11880  07B5  3002               	movlw	2
 11881  07B6  0668               	xorwf	_editingClockAlarm,w
 11882  07B7  0469               	iorwf	_editingClockAlarm+1,w
 11883  07B8  1D03               	btfss	3,2
 11884  07B9  2FBB               	goto	u5351
 11885  07BA  2FBC               	goto	u5350
 11886  07BB                     u5351:
 11887  07BB  2FC9               	goto	l5642
 11888  07BC                     u5350:
 11889  07BC                     l5636:
 11890                           
 11891                           ;main.c: 623: if(clkAlarm.alarmVal.m == 59){
 11892  07BC  303B               	movlw	59
 11893  07BD  0660               	xorwf	_clkAlarm+1,w
 11894  07BE  1D03               	btfss	3,2
 11895  07BF  2FC1               	goto	u5361
 11896  07C0  2FC2               	goto	u5360
 11897  07C1                     u5361:
 11898  07C1  2FC4               	goto	l5640
 11899  07C2                     u5360:
 11900  07C2                     l5638:
 11901                           
 11902                           ;main.c: 624: clkAlarm.alarmVal.m = 0;
 11903  07C2  01E0               	clrf	_clkAlarm+1
 11904                           
 11905                           ;main.c: 625: } else{
 11906  07C3  2FDD               	goto	l5650
 11907  07C4                     l5640:
 11908                           
 11909                           ;main.c: 626: clkAlarm.alarmVal.m++;
 11910  07C4  3001               	movlw	1
 11911  07C5  00DB               	movwf	??_editClock
 11912  07C6  085B               	movf	??_editClock,w
 11913  07C7  07E0               	addwf	_clkAlarm+1,f
 11914  07C8  2FDD               	goto	l5650
 11915  07C9                     l5642:
 11916  07C9  3003               	movlw	3
 11917  07CA  0668               	xorwf	_editingClockAlarm,w
 11918  07CB  0469               	iorwf	_editingClockAlarm+1,w
 11919  07CC  1D03               	btfss	3,2
 11920  07CD  2FCF               	goto	u5371
 11921  07CE  2FD0               	goto	u5370
 11922  07CF                     u5371:
 11923  07CF  2FDD               	goto	l1430
 11924  07D0                     u5370:
 11925  07D0                     l5644:
 11926                           
 11927                           ;main.c: 629: if(clkAlarm.alarmVal.s == 59){
 11928  07D0  303B               	movlw	59
 11929  07D1  0661               	xorwf	_clkAlarm+2,w
 11930  07D2  1D03               	btfss	3,2
 11931  07D3  2FD5               	goto	u5381
 11932  07D4  2FD6               	goto	u5380
 11933  07D5                     u5381:
 11934  07D5  2FD8               	goto	l5648
 11935  07D6                     u5380:
 11936  07D6                     l5646:
 11937                           
 11938                           ;main.c: 630: clkAlarm.alarmVal.s = 0;
 11939  07D6  01E1               	clrf	_clkAlarm+2
 11940                           
 11941                           ;main.c: 631: } else{
 11942  07D7  2FDD               	goto	l5650
 11943  07D8                     l5648:
 11944                           
 11945                           ;main.c: 632: clkAlarm.alarmVal.s++;
 11946  07D8  3001               	movlw	1
 11947  07D9  00DB               	movwf	??_editClock
 11948  07DA  085B               	movf	??_editClock,w
 11949  07DB  07E1               	addwf	_clkAlarm+2,f
 11950  07DC  2FDD               	goto	l5650
 11951  07DD                     l1430:
 11952  07DD                     l5650:
 11953                           
 11954                           ;main.c: 633: };main.c: 634: };main.c: 635: _delay((unsigned long)((400)*(1000000/4000.0
      +                          )));
 11955  07DD  3082               	movlw	130
 11956  07DE  0020               	movlb	0	; select bank0
 11957  07DF  00DB               	movwf	??_editClock
 11958  07E0  30DD               	movlw	221
 11959  07E1                     u6237:
 11960  07E1  0B89               	decfsz	9,f
 11961  07E2  2FE1               	goto	u6237
 11962  07E3  0BDB               	decfsz	??_editClock,f
 11963  07E4  2FE1               	goto	u6237
 11964  07E5  3200               	nop2
 11965  07E6                     l5652:
 11966                           
 11967                           ;main.c: 636: update_menuLCD();
 11968  07E6  3183  23D5  3187   	fcall	_update_menuLCD
 11969  07E9                     l5654:
 11970                           
 11971                           ;main.c: 637: };main.c: 638: if(modeFlag != 1){
 11972  07E9  0020               	movlb	0	; select bank0
 11973  07EA  0366               	decf	_modeFlag,w
 11974  07EB  0467               	iorwf	_modeFlag+1,w
 11975  07EC  1903               	btfsc	3,2
 11976  07ED  2FEF               	goto	u5391
 11977  07EE  2FF0               	goto	u5390
 11978  07EF                     u5391:
 11979  07EF  2FF3               	goto	l5658
 11980  07F0                     u5390:
 11981  07F0                     l5656:
 11982                           
 11983                           ;main.c: 639: editingClockAlarm = 0;
 11984  07F0  01E8               	clrf	_editingClockAlarm
 11985  07F1  01E9               	clrf	_editingClockAlarm+1
 11986                           
 11987                           ;main.c: 640: break;
 11988  07F2  2FFE               	goto	l1442
 11989  07F3                     l5658:
 11990                           
 11991                           ;main.c: 641: };main.c: 642: if(updateLCD){
 11992  07F3  086F               	movf	_updateLCD,w
 11993  07F4  1903               	btfsc	3,2
 11994  07F5  2FF7               	goto	u5401
 11995  07F6  2FF8               	goto	u5400
 11996  07F7                     u5401:
 11997  07F7  2F88               	goto	l1422
 11998  07F8                     u5400:
 11999  07F8                     l5660:
 12000                           
 12001                           ;main.c: 643: update_menuLCD();
 12002  07F8  3183  23D5  3187   	fcall	_update_menuLCD
 12003  07FB                     l5662:
 12004                           
 12005                           ;main.c: 644: updateLCD=0;
 12006  07FB  0020               	movlb	0	; select bank0
 12007  07FC  01EF               	clrf	_updateLCD
 12008  07FD  2F88               	goto	l1422
 12009  07FE                     l1442:
 12010  07FE  0008               	return
 12011  07FF                     __end_of_editClock:
 12012                           
 12013                           	psect	text9
 12014  03D5                     __ptext9:	
 12015 ;; *************** function _update_menuLCD *****************
 12016 ;; Defined at:
 12017 ;;		line 389 in file "main.c"
 12018 ;; Parameters:    Size  Location     Type
 12019 ;;		None
 12020 ;; Auto vars:     Size  Location     Type
 12021 ;;  diff            3   56[BANK0 ] struct Time
 12022 ;;  str             8   41[BANK0 ] unsigned char [8]
 12023 ;;  tt              4   49[BANK0 ] unsigned char [4]
 12024 ;;  l               3   53[BANK0 ] unsigned char [3]
 12025 ;; Return value:  Size  Location     Type
 12026 ;;                  1    wreg      void 
 12027 ;; Registers used:
 12028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12029 ;; Tracked objects:
 12030 ;;		On entry : 0/0
 12031 ;;		On exit  : 0/0
 12032 ;;		Unchanged: 0/0
 12033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12038 ;;Total ram usage:       24 bytes
 12039 ;; Hardware stack levels used:    1
 12040 ;; Hardware stack levels required when called:    9
 12041 ;; This function calls:
 12042 ;;		_LCDchar
 12043 ;;		_LCDcmd
 12044 ;;		_LCDstr
 12045 ;;		_PWM6_LoadDutyValue
 12046 ;;		_PWM_Output_D4_Disable
 12047 ;;		_TMR2_StopTimer
 12048 ;;		_differenceBetweenTimePeriod
 12049 ;;		_sprintf
 12050 ;; This function is called by:
 12051 ;;		_editClock
 12052 ;;		_editTemp
 12053 ;;		_editLum
 12054 ;;		_toggleAlarms
 12055 ;;		_main
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059                           
 12060                           ;psect for function _update_menuLCD
 12061  03D5                     _update_menuLCD:
 12062  03D5                     l5150:	
 12063                           ;incstack = 0
 12064                           ; Regs used in _update_menuLCD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12065                           
 12066                           
 12067                           ;main.c: 391: char str[8];;main.c: 392: if(editingClockAlarm){
 12068  03D5  0020               	movlb	0	; select bank0
 12069  03D6  0868               	movf	_editingClockAlarm,w
 12070  03D7  0469               	iorwf	_editingClockAlarm+1,w
 12071  03D8  1903               	btfsc	3,2
 12072  03D9  2BDB               	goto	u4441
 12073  03DA  2BDC               	goto	u4440
 12074  03DB                     u4441:
 12075  03DB  2BFA               	goto	l5154
 12076  03DC                     u4440:
 12077  03DC                     l5152:
 12078                           
 12079                           ;main.c: 393: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 12080  03DC  301E               	movlw	low (STR_1| (0+32768))
 12081  03DD  00AE               	movwf	sprintf@f
 12082  03DE  3098               	movlw	high (STR_1| (0+32768))
 12083  03DF  00AF               	movwf	sprintf@f+1
 12084  03E0  085F               	movf	_clkAlarm,w
 12085  03E1  00C3               	movwf	??_update_menuLCD
 12086  03E2  01C4               	clrf	??_update_menuLCD+1
 12087  03E3  0843               	movf	??_update_menuLCD,w
 12088  03E4  00B0               	movwf	?_sprintf+2
 12089  03E5  0844               	movf	??_update_menuLCD+1,w
 12090  03E6  00B1               	movwf	?_sprintf+3
 12091  03E7  0860               	movf	_clkAlarm+1,w
 12092  03E8  00C5               	movwf	??_update_menuLCD+2
 12093  03E9  01C6               	clrf	??_update_menuLCD+3
 12094  03EA  0845               	movf	??_update_menuLCD+2,w
 12095  03EB  00B2               	movwf	?_sprintf+4
 12096  03EC  0846               	movf	??_update_menuLCD+3,w
 12097  03ED  00B3               	movwf	?_sprintf+5
 12098  03EE  0861               	movf	_clkAlarm+2,w
 12099  03EF  00C7               	movwf	??_update_menuLCD+4
 12100  03F0  01C8               	clrf	??_update_menuLCD+5
 12101  03F1  0847               	movf	??_update_menuLCD+4,w
 12102  03F2  00B4               	movwf	?_sprintf+6
 12103  03F3  0848               	movf	??_update_menuLCD+5,w
 12104  03F4  00B5               	movwf	?_sprintf+7
 12105  03F5  3049               	movlw	(low (update_menuLCD@str| 0))& (0+255)
 12106  03F6  3185  25EA  3183   	fcall	_sprintf
 12107                           
 12108                           ;main.c: 394: } else {
 12109  03F9  2C17               	goto	l5156
 12110  03FA                     l5154:
 12111                           
 12112                           ;main.c: 395: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 12113  03FA  301E               	movlw	low (STR_1| (0+32768))
 12114  03FB  00AE               	movwf	sprintf@f
 12115  03FC  3098               	movlw	high (STR_1| (0+32768))
 12116  03FD  00AF               	movwf	sprintf@f+1
 12117  03FE  0863               	movf	_t,w
 12118  03FF  00C3               	movwf	??_update_menuLCD
 12119  0400  01C4               	clrf	??_update_menuLCD+1
 12120  0401  0843               	movf	??_update_menuLCD,w
 12121  0402  00B0               	movwf	?_sprintf+2
 12122  0403  0844               	movf	??_update_menuLCD+1,w
 12123  0404  00B1               	movwf	?_sprintf+3
 12124  0405  0864               	movf	_t+1,w
 12125  0406  00C5               	movwf	??_update_menuLCD+2
 12126  0407  01C6               	clrf	??_update_menuLCD+3
 12127  0408  0845               	movf	??_update_menuLCD+2,w
 12128  0409  00B2               	movwf	?_sprintf+4
 12129  040A  0846               	movf	??_update_menuLCD+3,w
 12130  040B  00B3               	movwf	?_sprintf+5
 12131  040C  0865               	movf	_t+2,w
 12132  040D  00C7               	movwf	??_update_menuLCD+4
 12133  040E  01C8               	clrf	??_update_menuLCD+5
 12134  040F  0847               	movf	??_update_menuLCD+4,w
 12135  0410  00B4               	movwf	?_sprintf+6
 12136  0411  0848               	movf	??_update_menuLCD+5,w
 12137  0412  00B5               	movwf	?_sprintf+7
 12138  0413  3049               	movlw	(low (update_menuLCD@str| 0))& (0+255)
 12139  0414  3185  25EA  3183   	fcall	_sprintf
 12140  0417                     l5156:
 12141                           
 12142                           ;main.c: 396: };main.c: 397: LCDcmd(0x80);
 12143  0417  3080               	movlw	128
 12144  0418  3192  227E  3183   	fcall	_LCDcmd
 12145  041B                     l5158:
 12146                           
 12147                           ;main.c: 398: LCDstr(str);
 12148  041B  3049               	movlw	low update_menuLCD@str
 12149  041C  0020               	movlb	0	; select bank0
 12150  041D  00A9               	movwf	LCDstr@p
 12151  041E  3000               	movlw	high update_menuLCD@str
 12152  041F  00AA               	movwf	LCDstr@p+1
 12153  0420  3194  2425  3183   	fcall	_LCDstr
 12154  0423                     l5160:
 12155                           
 12156                           ;main.c: 401: if(clkAlarm.trigger == 1){
 12157  0423  0020               	movlb	0	; select bank0
 12158  0424  0362               	decf	_clkAlarm+3,w
 12159  0425  1D03               	btfss	3,2
 12160  0426  2C28               	goto	u4451
 12161  0427  2C29               	goto	u4450
 12162  0428                     u4451:
 12163  0428  2C32               	goto	l5164
 12164  0429                     u4450:
 12165  0429                     l5162:
 12166                           
 12167                           ;main.c: 402: LCDcmd(0x8B);
 12168  0429  308B               	movlw	139
 12169  042A  3192  227E  3183   	fcall	_LCDcmd
 12170                           
 12171                           ;main.c: 403: LCDchar('C');
 12172  042D  3043               	movlw	67
 12173  042E  3192  22CE  3183   	fcall	_LCDchar
 12174                           
 12175                           ;main.c: 404: } else if(modeFlag == 0){
 12176  0431  2C40               	goto	l5168
 12177  0432                     l5164:
 12178  0432  0866               	movf	_modeFlag,w
 12179  0433  0467               	iorwf	_modeFlag+1,w
 12180  0434  1D03               	btfss	3,2
 12181  0435  2C37               	goto	u4461
 12182  0436  2C38               	goto	u4460
 12183  0437                     u4461:
 12184  0437  2C40               	goto	l5168
 12185  0438                     u4460:
 12186  0438                     l5166:
 12187                           
 12188                           ;main.c: 405: LCDcmd(0x8B);
 12189  0438  308B               	movlw	139
 12190  0439  3192  227E  3183   	fcall	_LCDcmd
 12191                           
 12192                           ;main.c: 406: LCDchar(' ');
 12193  043C  3020               	movlw	32
 12194  043D  3192  22CE  3183   	fcall	_LCDchar
 12195  0440                     l5168:
 12196                           
 12197                           ;main.c: 407: };main.c: 410: if(tempAlarm.trigger == 1){
 12198  0440  0021               	movlb	1	; select bank1
 12199  0441  0345               	decf	(_tempAlarm^(0+128)+1),w
 12200  0442  1D03               	btfss	3,2
 12201  0443  2C45               	goto	u4471
 12202  0444  2C46               	goto	u4470
 12203  0445                     u4471:
 12204  0445  2C4F               	goto	l5172
 12205  0446                     u4470:
 12206  0446                     l5170:
 12207                           
 12208                           ;main.c: 411: LCDcmd(0x8C);
 12209  0446  308C               	movlw	140
 12210  0447  3192  227E  3183   	fcall	_LCDcmd
 12211                           
 12212                           ;main.c: 412: LCDchar('T');
 12213  044A  3054               	movlw	84
 12214  044B  3192  22CE  3183   	fcall	_LCDchar
 12215                           
 12216                           ;main.c: 413: } else if(modeFlag == 0){
 12217  044E  2C5E               	goto	l5176
 12218  044F                     l5172:
 12219  044F  0020               	movlb	0	; select bank0
 12220  0450  0866               	movf	_modeFlag,w
 12221  0451  0467               	iorwf	_modeFlag+1,w
 12222  0452  1D03               	btfss	3,2
 12223  0453  2C55               	goto	u4481
 12224  0454  2C56               	goto	u4480
 12225  0455                     u4481:
 12226  0455  2C5E               	goto	l5176
 12227  0456                     u4480:
 12228  0456                     l5174:
 12229                           
 12230                           ;main.c: 414: LCDcmd(0x8C);
 12231  0456  308C               	movlw	140
 12232  0457  3192  227E  3183   	fcall	_LCDcmd
 12233                           
 12234                           ;main.c: 415: LCDchar(' ');
 12235  045A  3020               	movlw	32
 12236  045B  3192  22CE  3183   	fcall	_LCDchar
 12237  045E                     l5176:
 12238                           
 12239                           ;main.c: 416: };main.c: 419: if(lumAlarm.trigger == 1){
 12240  045E  0021               	movlb	1	; select bank1
 12241  045F  0342               	decf	(_lumAlarm^(0+128)+1),w
 12242  0460  1D03               	btfss	3,2
 12243  0461  2C63               	goto	u4491
 12244  0462  2C64               	goto	u4490
 12245  0463                     u4491:
 12246  0463  2C6D               	goto	l5180
 12247  0464                     u4490:
 12248  0464                     l5178:
 12249                           
 12250                           ;main.c: 420: LCDcmd(0x8D);
 12251  0464  308D               	movlw	141
 12252  0465  3192  227E  3183   	fcall	_LCDcmd
 12253                           
 12254                           ;main.c: 421: LCDchar('L');
 12255  0468  304C               	movlw	76
 12256  0469  3192  22CE  3183   	fcall	_LCDchar
 12257                           
 12258                           ;main.c: 422: } else if(modeFlag == 0){
 12259  046C  2C7C               	goto	l1349
 12260  046D                     l5180:
 12261  046D  0020               	movlb	0	; select bank0
 12262  046E  0866               	movf	_modeFlag,w
 12263  046F  0467               	iorwf	_modeFlag+1,w
 12264  0470  1D03               	btfss	3,2
 12265  0471  2C73               	goto	u4501
 12266  0472  2C74               	goto	u4500
 12267  0473                     u4501:
 12268  0473  2C7C               	goto	l1349
 12269  0474                     u4500:
 12270  0474                     l5182:
 12271                           
 12272                           ;main.c: 423: LCDcmd(0x8D);
 12273  0474  308D               	movlw	141
 12274  0475  3192  227E  3183   	fcall	_LCDcmd
 12275                           
 12276                           ;main.c: 424: LCDchar(' ');
 12277  0478  3020               	movlw	32
 12278  0479  3192  22CE  3183   	fcall	_LCDchar
 12279  047C                     l1349:
 12280                           
 12281                           ;main.c: 425: };main.c: 427: LCDcmd(0x8F);
 12282  047C  308F               	movlw	143
 12283  047D  3192  227E  3183   	fcall	_LCDcmd
 12284                           
 12285                           ;main.c: 428: LCDchar(ALAF);
 12286  0480  087D               	movf	_ALAF,w
 12287  0481  3192  22CE  3183   	fcall	_LCDchar
 12288  0484                     l5184:
 12289                           
 12290                           ;main.c: 431: if(ALAF == 'A'){
 12291  0484  3041               	movlw	65
 12292  0485  067D               	xorwf	_ALAF,w
 12293  0486  1D03               	btfss	3,2
 12294  0487  2C89               	goto	u4511
 12295  0488  2C8A               	goto	u4510
 12296  0489                     u4511:
 12297  0489  2CFD               	goto	l5218
 12298  048A                     u4510:
 12299  048A                     l5186:
 12300                           
 12301                           ;main.c: 432: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger){
 12302  048A  0020               	movlb	0	; select bank0
 12303  048B  0862               	movf	_clkAlarm+3,w
 12304  048C  1D03               	btfss	3,2
 12305  048D  2C8F               	goto	u4521
 12306  048E  2C90               	goto	u4520
 12307  048F                     u4521:
 12308  048F  2C9B               	goto	l5192
 12309  0490                     u4520:
 12310  0490                     l5188:
 12311  0490  0021               	movlb	1	; select bank1
 12312  0491  0845               	movf	(_tempAlarm^(0+128)+1),w
 12313  0492  1D03               	btfss	3,2
 12314  0493  2C95               	goto	u4531
 12315  0494  2C96               	goto	u4530
 12316  0495                     u4531:
 12317  0495  2C9B               	goto	l5192
 12318  0496                     u4530:
 12319  0496                     l5190:
 12320  0496  0842               	movf	(_lumAlarm^(0+128)+1),w
 12321  0497  1903               	btfsc	3,2
 12322  0498  2C9A               	goto	u4541
 12323  0499  2C9B               	goto	u4540
 12324  049A                     u4541:
 12325  049A  2CF7               	goto	l1352
 12326  049B                     u4540:
 12327  049B                     l5192:
 12328                           
 12329                           ;main.c: 433: if(alarmPWMStart.h == 0xff){
 12330  049B  0021               	movlb	1	; select bank1
 12331  049C  0A65               	incf	_alarmPWMStart^(0+128),w
 12332  049D  1D03               	btfss	3,2
 12333  049E  2CA0               	goto	u4551
 12334  049F  2CA1               	goto	u4550
 12335  04A0                     u4551:
 12336  04A0  2CB3               	goto	l1355
 12337  04A1                     u4550:
 12338  04A1                     l5194:
 12339                           
 12340                           ;main.c: 434: alarmPWMStart.h = t.h;
 12341  04A1  0020               	movlb	0	; select bank0
 12342  04A2  0863               	movf	_t,w
 12343  04A3  00C3               	movwf	??_update_menuLCD
 12344  04A4  0843               	movf	??_update_menuLCD,w
 12345  04A5  0021               	movlb	1	; select bank1
 12346  04A6  00E5               	movwf	_alarmPWMStart^(0+128)
 12347                           
 12348                           ;main.c: 435: alarmPWMStart.m = t.m;
 12349  04A7  0020               	movlb	0	; select bank0
 12350  04A8  0864               	movf	_t+1,w
 12351  04A9  00C3               	movwf	??_update_menuLCD
 12352  04AA  0843               	movf	??_update_menuLCD,w
 12353  04AB  0021               	movlb	1	; select bank1
 12354  04AC  00E6               	movwf	(_alarmPWMStart^(0+128)+1)
 12355                           
 12356                           ;main.c: 436: alarmPWMStart.s = t.s;
 12357  04AD  0020               	movlb	0	; select bank0
 12358  04AE  0865               	movf	_t+2,w
 12359  04AF  00C3               	movwf	??_update_menuLCD
 12360  04B0  0843               	movf	??_update_menuLCD,w
 12361  04B1  0021               	movlb	1	; select bank1
 12362  04B2  00E7               	movwf	(_alarmPWMStart^(0+128)+2)
 12363  04B3                     l1355:
 12364                           
 12365                           ;main.c: 437: };main.c: 438: struct Time diff = {0,0,0};
 12366  04B3  083E               	movf	update_menuLCD@F12913^(0+128),w
 12367  04B4  0020               	movlb	0	; select bank0
 12368  04B5  00D8               	movwf	update_menuLCD@diff
 12369  04B6  0021               	movlb	1	; select bank1
 12370  04B7  083F               	movf	(update_menuLCD@F12913+1)^(0+128),w
 12371  04B8  0020               	movlb	0	; select bank0
 12372  04B9  00D9               	movwf	update_menuLCD@diff+1
 12373  04BA  0021               	movlb	1	; select bank1
 12374  04BB  0840               	movf	(update_menuLCD@F12913+2)^(0+128),w
 12375  04BC  0020               	movlb	0	; select bank0
 12376  04BD  00DA               	movwf	update_menuLCD@diff+2
 12377  04BE                     l5196:
 12378                           
 12379                           ;main.c: 439: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 12380  04BE  0863               	movf	_t,w
 12381  04BF  00A0               	movwf	differenceBetweenTimePeriod@start
 12382  04C0  0864               	movf	_t+1,w
 12383  04C1  00A1               	movwf	differenceBetweenTimePeriod@start+1
 12384  04C2  0865               	movf	_t+2,w
 12385  04C3  00A2               	movwf	differenceBetweenTimePeriod@start+2
 12386  04C4  0021               	movlb	1	; select bank1
 12387  04C5  0865               	movf	_alarmPWMStart^(0+128),w
 12388  04C6  0020               	movlb	0	; select bank0
 12389  04C7  00A3               	movwf	differenceBetweenTimePeriod@stop
 12390  04C8  0021               	movlb	1	; select bank1
 12391  04C9  0866               	movf	(_alarmPWMStart+1)^(0+128),w
 12392  04CA  0020               	movlb	0	; select bank0
 12393  04CB  00A4               	movwf	differenceBetweenTimePeriod@stop+1
 12394  04CC  0021               	movlb	1	; select bank1
 12395  04CD  0867               	movf	(_alarmPWMStart+2)^(0+128),w
 12396  04CE  0020               	movlb	0	; select bank0
 12397  04CF  00A5               	movwf	differenceBetweenTimePeriod@stop+2
 12398  04D0  3058               	movlw	(low (update_menuLCD@diff| 0))& (0+255)
 12399  04D1  00C3               	movwf	??_update_menuLCD
 12400  04D2  0843               	movf	??_update_menuLCD,w
 12401  04D3  00A6               	movwf	differenceBetweenTimePeriod@diff
 12402  04D4  3197  271D  3183   	fcall	_differenceBetweenTimePeriod
 12403  04D7                     l5198:
 12404                           
 12405                           ;main.c: 441: if(diff.s <= TALA){
 12406  04D7  0020               	movlb	0	; select bank0
 12407  04D8  085A               	movf	update_menuLCD@diff+2,w
 12408  04D9  0021               	movlb	1	; select bank1
 12409  04DA  026C               	subwf	_TALA^(0+128),w
 12410  04DB  1C03               	skipc
 12411  04DC  2CDE               	goto	u4561
 12412  04DD  2CDF               	goto	u4560
 12413  04DE                     u4561:
 12414  04DE  2CE2               	goto	l1358
 12415  04DF                     u4560:
 12416  04DF                     l5200:
 12417                           
 12418                           ;main.c: 442: PWM_on = 1;
 12419  04DF  01CD               	clrf	_PWM_on^(0+128)
 12420  04E0  0ACD               	incf	_PWM_on^(0+128),f
 12421                           
 12422                           ;main.c: 453: } else if(PWM6EN==1){
 12423  04E1  2CFD               	goto	l5218
 12424  04E2                     l1358:
 12425  04E2  0027               	movlb	7	; select bank7
 12426  04E3  1F8E               	btfss	14,7	;volatile
 12427  04E4  2CE6               	goto	u4571
 12428  04E5  2CE7               	goto	u4570
 12429  04E6                     u4571:
 12430  04E6  2CFD               	goto	l1361
 12431  04E7                     u4570:
 12432  04E7                     l5202:
 12433                           
 12434                           ;main.c: 454: PWM_on = 0;
 12435  04E7  0021               	movlb	1	; select bank1
 12436  04E8  01CD               	clrf	_PWM_on^(0+128)
 12437  04E9                     l5204:
 12438                           
 12439                           ;main.c: 455: PWM6_LoadDutyValue(0);
 12440  04E9  3000               	movlw	0
 12441  04EA  0020               	movlb	0	; select bank0
 12442  04EB  00A0               	movwf	PWM6_LoadDutyValue@dutyValue
 12443  04EC  00A1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12444  04ED  3193  23BD  3183   	fcall	_PWM6_LoadDutyValue
 12445  04F0                     l5206:
 12446                           
 12447                           ;main.c: 456: TMR2_StopTimer();
 12448  04F0  3192  2255  3183   	fcall	_TMR2_StopTimer
 12449  04F3                     l5208:
 12450                           
 12451                           ;main.c: 457: PWM_Output_D4_Disable();
 12452  04F3  3192  224B  3183   	fcall	_PWM_Output_D4_Disable
 12453  04F6  2CFD               	goto	l5218
 12454  04F7                     l1352:
 12455  04F7  0027               	movlb	7	; select bank7
 12456  04F8  1F8E               	btfss	14,7	;volatile
 12457  04F9  2CFB               	goto	u4581
 12458  04FA  2CFC               	goto	u4580
 12459  04FB                     u4581:
 12460  04FB  2CFD               	goto	l5218
 12461  04FC                     u4580:
 12462  04FC  2CE7               	goto	l5202
 12463  04FD                     l1361:
 12464  04FD                     l5218:
 12465                           
 12466                           ;main.c: 464: };main.c: 465: };main.c: 467: LCDcmd(0xc0);
 12467  04FD  30C0               	movlw	192
 12468  04FE  3192  227E  3183   	fcall	_LCDcmd
 12469  0501                     l5220:
 12470                           
 12471                           ;main.c: 468: char tt[4];;main.c: 469: if(editingTempAlarm){
 12472  0501  0021               	movlb	1	; select bank1
 12473  0502  084F               	movf	_editingTempAlarm^(0+128),w
 12474  0503  1903               	btfsc	3,2
 12475  0504  2D06               	goto	u4591
 12476  0505  2D07               	goto	u4590
 12477  0506                     u4591:
 12478  0506  2D1A               	goto	l5224
 12479  0507                     u4590:
 12480  0507                     l5222:
 12481                           
 12482                           ;main.c: 470: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 12483  0507  3037               	movlw	low (STR_3| (0+32768))
 12484  0508  0020               	movlb	0	; select bank0
 12485  0509  00AE               	movwf	sprintf@f
 12486  050A  3098               	movlw	high (STR_3| (0+32768))
 12487  050B  00AF               	movwf	sprintf@f+1
 12488  050C  0021               	movlb	1	; select bank1
 12489  050D  0844               	movf	_tempAlarm^(0+128),w
 12490  050E  0020               	movlb	0	; select bank0
 12491  050F  00C3               	movwf	??_update_menuLCD
 12492  0510  01C4               	clrf	??_update_menuLCD+1
 12493  0511  0843               	movf	??_update_menuLCD,w
 12494  0512  00B0               	movwf	?_sprintf+2
 12495  0513  0844               	movf	??_update_menuLCD+1,w
 12496  0514  00B1               	movwf	?_sprintf+3
 12497  0515  3051               	movlw	(low (update_menuLCD@tt| 0))& (0+255)
 12498  0516  3185  25EA  3183   	fcall	_sprintf
 12499                           
 12500                           ;main.c: 471: } else{
 12501  0519  2D2A               	goto	l5226
 12502  051A                     l5224:
 12503                           
 12504                           ;main.c: 472: sprintf(tt, "%02d C", temp);
 12505  051A  3037               	movlw	low (STR_3| (0+32768))
 12506  051B  0020               	movlb	0	; select bank0
 12507  051C  00AE               	movwf	sprintf@f
 12508  051D  3098               	movlw	high (STR_3| (0+32768))
 12509  051E  00AF               	movwf	sprintf@f+1
 12510  051F  086C               	movf	_temp,w
 12511  0520  00C3               	movwf	??_update_menuLCD
 12512  0521  01C4               	clrf	??_update_menuLCD+1
 12513  0522  0843               	movf	??_update_menuLCD,w
 12514  0523  00B0               	movwf	?_sprintf+2
 12515  0524  0844               	movf	??_update_menuLCD+1,w
 12516  0525  00B1               	movwf	?_sprintf+3
 12517  0526  3051               	movlw	(low (update_menuLCD@tt| 0))& (0+255)
 12518  0527  3185  25EA  3183   	fcall	_sprintf
 12519  052A                     l5226:
 12520                           
 12521                           ;main.c: 473: };main.c: 474: LCDstr(tt);
 12522  052A  3051               	movlw	low update_menuLCD@tt
 12523  052B  0020               	movlb	0	; select bank0
 12524  052C  00A9               	movwf	LCDstr@p
 12525  052D  3000               	movlw	high update_menuLCD@tt
 12526  052E  00AA               	movwf	LCDstr@p+1
 12527  052F  3194  2425  3183   	fcall	_LCDstr
 12528  0532                     l5228:
 12529                           
 12530                           ;main.c: 476: LCDcmd(0xcd);
 12531  0532  30CD               	movlw	205
 12532  0533  3192  227E  3183   	fcall	_LCDcmd
 12533  0536                     l5230:
 12534                           
 12535                           ;main.c: 477: char l[3];;main.c: 479: if(editingLumAlarm){
 12536  0536  0021               	movlb	1	; select bank1
 12537  0537  084E               	movf	_editingLumAlarm^(0+128),w
 12538  0538  1903               	btfsc	3,2
 12539  0539  2D3B               	goto	u4601
 12540  053A  2D3C               	goto	u4600
 12541  053B                     u4601:
 12542  053B  2D4F               	goto	l5234
 12543  053C                     u4600:
 12544  053C                     l5232:
 12545                           
 12546                           ;main.c: 480: sprintf(l, "L %d", lumAlarm.alarmLum);
 12547  053C  303E               	movlw	low (STR_5| (0+32768))
 12548  053D  0020               	movlb	0	; select bank0
 12549  053E  00AE               	movwf	sprintf@f
 12550  053F  3098               	movlw	high (STR_5| (0+32768))
 12551  0540  00AF               	movwf	sprintf@f+1
 12552  0541  0021               	movlb	1	; select bank1
 12553  0542  0841               	movf	_lumAlarm^(0+128),w
 12554  0543  0020               	movlb	0	; select bank0
 12555  0544  00C3               	movwf	??_update_menuLCD
 12556  0545  01C4               	clrf	??_update_menuLCD+1
 12557  0546  0843               	movf	??_update_menuLCD,w
 12558  0547  00B0               	movwf	?_sprintf+2
 12559  0548  0844               	movf	??_update_menuLCD+1,w
 12560  0549  00B1               	movwf	?_sprintf+3
 12561  054A  3055               	movlw	(low (update_menuLCD@l| 0))& (0+255)
 12562  054B  3185  25EA  3183   	fcall	_sprintf
 12563                           
 12564                           ;main.c: 481: } else{
 12565  054E  2D5F               	goto	l5236
 12566  054F                     l5234:
 12567                           
 12568                           ;main.c: 482: sprintf(l, "L %d", lumLevel);
 12569  054F  303E               	movlw	low (STR_5| (0+32768))
 12570  0550  0020               	movlb	0	; select bank0
 12571  0551  00AE               	movwf	sprintf@f
 12572  0552  3098               	movlw	high (STR_5| (0+32768))
 12573  0553  00AF               	movwf	sprintf@f+1
 12574  0554  086B               	movf	_lumLevel,w
 12575  0555  00C3               	movwf	??_update_menuLCD
 12576  0556  01C4               	clrf	??_update_menuLCD+1
 12577  0557  0843               	movf	??_update_menuLCD,w
 12578  0558  00B0               	movwf	?_sprintf+2
 12579  0559  0844               	movf	??_update_menuLCD+1,w
 12580  055A  00B1               	movwf	?_sprintf+3
 12581  055B  3055               	movlw	(low (update_menuLCD@l| 0))& (0+255)
 12582  055C  3185  25EA  3183   	fcall	_sprintf
 12583  055F                     l5236:
 12584                           
 12585                           ;main.c: 483: };main.c: 484: LCDstr(l);
 12586  055F  3055               	movlw	low update_menuLCD@l
 12587  0560  0020               	movlb	0	; select bank0
 12588  0561  00A9               	movwf	LCDstr@p
 12589  0562  3000               	movlw	high update_menuLCD@l
 12590  0563  00AA               	movwf	LCDstr@p+1
 12591  0564  3194  2425  3183   	fcall	_LCDstr
 12592  0567                     l5238:
 12593                           
 12594                           ;main.c: 486: if(modeFlag != 0){
 12595  0567  0020               	movlb	0	; select bank0
 12596  0568  0866               	movf	_modeFlag,w
 12597  0569  0467               	iorwf	_modeFlag+1,w
 12598  056A  1903               	btfsc	3,2
 12599  056B  2D6D               	goto	u4611
 12600  056C  2D6E               	goto	u4610
 12601  056D                     u4611:
 12602  056D  2D7A               	goto	l5244
 12603  056E                     u4610:
 12604  056E                     l5240:
 12605                           
 12606                           ;main.c: 487: LCDcmd(0x8B);
 12607  056E  308B               	movlw	139
 12608  056F  3192  227E  3183   	fcall	_LCDcmd
 12609  0572                     l5242:
 12610                           
 12611                           ;main.c: 488: LCDstr("CTL");
 12612  0572  3043               	movlw	low (STR_7| (0+32768))
 12613  0573  0020               	movlb	0	; select bank0
 12614  0574  00A9               	movwf	LCDstr@p
 12615  0575  3098               	movlw	high (STR_7| (0+32768))
 12616  0576  00AA               	movwf	LCDstr@p+1
 12617  0577  3194  2425  3183   	fcall	_LCDstr
 12618  057A                     l5244:
 12619                           
 12620                           ;main.c: 489: };main.c: 491: if(modeFlag == 1){
 12621  057A  0020               	movlb	0	; select bank0
 12622  057B  0366               	decf	_modeFlag,w
 12623  057C  0467               	iorwf	_modeFlag+1,w
 12624  057D  1D03               	btfss	3,2
 12625  057E  2D80               	goto	u4621
 12626  057F  2D81               	goto	u4620
 12627  0580                     u4621:
 12628  0580  2DB0               	goto	l5262
 12629  0581                     u4620:
 12630  0581                     l5246:
 12631                           
 12632                           ;main.c: 492: if(editingClockAlarm == 0){
 12633  0581  0868               	movf	_editingClockAlarm,w
 12634  0582  0469               	iorwf	_editingClockAlarm+1,w
 12635  0583  1D03               	btfss	3,2
 12636  0584  2D86               	goto	u4631
 12637  0585  2D87               	goto	u4630
 12638  0586                     u4631:
 12639  0586  2D8C               	goto	l5250
 12640  0587                     u4630:
 12641  0587                     l5248:
 12642                           
 12643                           ;main.c: 493: LCDcmd(0x8B);
 12644  0587  308B               	movlw	139
 12645  0588  3192  227E  3183   	fcall	_LCDcmd
 12646                           
 12647                           ;main.c: 494: } else{
 12648  058B  2DE9               	goto	l1386
 12649  058C                     l5250:
 12650                           
 12651                           ;main.c: 495: if(editingClockAlarm == 1){
 12652  058C  0368               	decf	_editingClockAlarm,w
 12653  058D  0469               	iorwf	_editingClockAlarm+1,w
 12654  058E  1D03               	btfss	3,2
 12655  058F  2D91               	goto	u4641
 12656  0590  2D92               	goto	u4640
 12657  0591                     u4641:
 12658  0591  2D97               	goto	l5254
 12659  0592                     u4640:
 12660  0592                     l5252:
 12661                           
 12662                           ;main.c: 496: LCDcmd(0x81);
 12663  0592  3081               	movlw	129
 12664  0593  3192  227E  3183   	fcall	_LCDcmd
 12665                           
 12666                           ;main.c: 497: } else if(editingClockAlarm == 2){
 12667  0596  2DE9               	goto	l1386
 12668  0597                     l5254:
 12669  0597  3002               	movlw	2
 12670  0598  0668               	xorwf	_editingClockAlarm,w
 12671  0599  0469               	iorwf	_editingClockAlarm+1,w
 12672  059A  1D03               	btfss	3,2
 12673  059B  2D9D               	goto	u4651
 12674  059C  2D9E               	goto	u4650
 12675  059D                     u4651:
 12676  059D  2DA3               	goto	l5258
 12677  059E                     u4650:
 12678  059E                     l5256:
 12679                           
 12680                           ;main.c: 498: LCDcmd(0x84);
 12681  059E  3084               	movlw	132
 12682  059F  3192  227E  3183   	fcall	_LCDcmd
 12683                           
 12684                           ;main.c: 499: } else if(editingClockAlarm == 3){
 12685  05A2  2DE9               	goto	l1386
 12686  05A3                     l5258:
 12687  05A3  3003               	movlw	3
 12688  05A4  0668               	xorwf	_editingClockAlarm,w
 12689  05A5  0469               	iorwf	_editingClockAlarm+1,w
 12690  05A6  1D03               	btfss	3,2
 12691  05A7  2DA9               	goto	u4661
 12692  05A8  2DAA               	goto	u4660
 12693  05A9                     u4661:
 12694  05A9  2DAF               	goto	l1370
 12695  05AA                     u4660:
 12696  05AA                     l5260:
 12697                           
 12698                           ;main.c: 500: LCDcmd(0x87);
 12699  05AA  3087               	movlw	135
 12700  05AB  3192  227E  3183   	fcall	_LCDcmd
 12701  05AE  2DE9               	goto	l1386
 12702  05AF                     l1370:
 12703                           
 12704                           ;main.c: 501: };main.c: 502: };main.c: 503: } else if(modeFlag == 2){
 12705  05AF  2DE9               	goto	l1386
 12706  05B0                     l5262:
 12707  05B0  3002               	movlw	2
 12708  05B1  0666               	xorwf	_modeFlag,w
 12709  05B2  0467               	iorwf	_modeFlag+1,w
 12710  05B3  1D03               	btfss	3,2
 12711  05B4  2DB6               	goto	u4671
 12712  05B5  2DB7               	goto	u4670
 12713  05B6                     u4671:
 12714  05B6  2DC7               	goto	l5270
 12715  05B7                     u4670:
 12716  05B7                     l5264:
 12717                           
 12718                           ;main.c: 505: if(editingTempAlarm == 0){
 12719  05B7  0021               	movlb	1	; select bank1
 12720  05B8  084F               	movf	_editingTempAlarm^(0+128),w
 12721  05B9  1D03               	btfss	3,2
 12722  05BA  2DBC               	goto	u4681
 12723  05BB  2DBD               	goto	u4680
 12724  05BC                     u4681:
 12725  05BC  2DC2               	goto	l5268
 12726  05BD                     u4680:
 12727  05BD                     l5266:
 12728                           
 12729                           ;main.c: 506: LCDcmd(0x8c);
 12730  05BD  308C               	movlw	140
 12731  05BE  3192  227E  3183   	fcall	_LCDcmd
 12732                           
 12733                           ;main.c: 507: }else {
 12734  05C1  2DE9               	goto	l1386
 12735  05C2                     l5268:
 12736                           
 12737                           ;main.c: 508: LCDcmd(0xc1);
 12738  05C2  30C1               	movlw	193
 12739  05C3  3192  227E  3183   	fcall	_LCDcmd
 12740  05C6  2DE9               	goto	l1386
 12741  05C7                     l5270:
 12742  05C7  3003               	movlw	3
 12743  05C8  0666               	xorwf	_modeFlag,w
 12744  05C9  0467               	iorwf	_modeFlag+1,w
 12745  05CA  1D03               	btfss	3,2
 12746  05CB  2DCD               	goto	u4691
 12747  05CC  2DCE               	goto	u4690
 12748  05CD                     u4691:
 12749  05CD  2DDE               	goto	l5278
 12750  05CE                     u4690:
 12751  05CE                     l5272:
 12752                           
 12753                           ;main.c: 513: if(editingLumAlarm == 0){
 12754  05CE  0021               	movlb	1	; select bank1
 12755  05CF  084E               	movf	_editingLumAlarm^(0+128),w
 12756  05D0  1D03               	btfss	3,2
 12757  05D1  2DD3               	goto	u4701
 12758  05D2  2DD4               	goto	u4700
 12759  05D3                     u4701:
 12760  05D3  2DD9               	goto	l5276
 12761  05D4                     u4700:
 12762  05D4                     l5274:
 12763                           
 12764                           ;main.c: 514: LCDcmd(0x8d);
 12765  05D4  308D               	movlw	141
 12766  05D5  3192  227E  3183   	fcall	_LCDcmd
 12767                           
 12768                           ;main.c: 515: }else {
 12769  05D8  2DE9               	goto	l1386
 12770  05D9                     l5276:
 12771                           
 12772                           ;main.c: 516: LCDcmd(0xcf);
 12773  05D9  30CF               	movlw	207
 12774  05DA  3192  227E  3183   	fcall	_LCDcmd
 12775  05DD  2DE9               	goto	l1386
 12776  05DE                     l5278:
 12777  05DE  3004               	movlw	4
 12778  05DF  0666               	xorwf	_modeFlag,w
 12779  05E0  0467               	iorwf	_modeFlag+1,w
 12780  05E1  1D03               	btfss	3,2
 12781  05E2  2DE4               	goto	u4711
 12782  05E3  2DE5               	goto	u4710
 12783  05E4                     u4711:
 12784  05E4  2DE9               	goto	l1386
 12785  05E5                     u4710:
 12786  05E5                     l5280:
 12787                           
 12788                           ;main.c: 520: LCDcmd(0x8f);
 12789  05E5  308F               	movlw	143
 12790  05E6  3192  227E  3183   	fcall	_LCDcmd
 12791  05E9                     l1386:
 12792  05E9  0008               	return
 12793  05EA                     __end_of_update_menuLCD:
 12794                           
 12795                           	psect	text10
 12796  05EA                     __ptext10:	
 12797 ;; *************** function _sprintf *****************
 12798 ;; Defined at:
 12799 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 12800 ;; Parameters:    Size  Location     Type
 12801 ;;  sp              1    wreg     PTR unsigned char 
 12802 ;;		 -> update_menuLCD@l(3), update_menuLCD@tt(4), update_menuLCD@str(8), 
 12803 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 12804 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 12805 ;;		 -> STR_2(15), STR_1(15), 
 12806 ;; Auto vars:     Size  Location     Type
 12807 ;;  sp              1   34[BANK0 ] PTR unsigned char 
 12808 ;;		 -> update_menuLCD@l(3), update_menuLCD@tt(4), update_menuLCD@str(8), 
 12809 ;;  tmpval          4    0        struct .
 12810 ;;  width           2   31[BANK0 ] int 
 12811 ;;  val             2   28[BANK0 ] unsigned int 
 12812 ;;  cp              2    0        PTR const unsigned char 
 12813 ;;  len             2    0        unsigned int 
 12814 ;;  c               1   33[BANK0 ] unsigned char 
 12815 ;;  flag            1   30[BANK0 ] unsigned char 
 12816 ;;  prec            1   27[BANK0 ] char 
 12817 ;;  ap              1   26[BANK0 ] PTR void [1]
 12818 ;;		 -> ?_sprintf(2), 
 12819 ;; Return value:  Size  Location     Type
 12820 ;;                  2   14[BANK0 ] int 
 12821 ;; Registers used:
 12822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12823 ;; Tracked objects:
 12824 ;;		On entry : 0/0
 12825 ;;		On exit  : 0/0
 12826 ;;		Unchanged: 0/0
 12827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12828 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12829 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12830 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12831 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12832 ;;Total ram usage:       21 bytes
 12833 ;; Hardware stack levels used:    1
 12834 ;; Hardware stack levels required when called:    6
 12835 ;; This function calls:
 12836 ;;		___lwdiv
 12837 ;;		___lwmod
 12838 ;;		___wmul
 12839 ;;		_isdigit
 12840 ;; This function is called by:
 12841 ;;		_update_menuLCD
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845                           
 12846                           ;psect for function _sprintf
 12847  05EA                     _sprintf:
 12848                           
 12849                           ;incstack = 0
 12850                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12851                           ;sprintf@sp stored from wreg
 12852  05EA  0020               	movlb	0	; select bank0
 12853  05EB  00C2               	movwf	sprintf@sp
 12854  05EC                     l4708:
 12855                           
 12856                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 12857  05EC  3030               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 12858  05ED  00B6               	movwf	??_sprintf
 12859  05EE  0836               	movf	??_sprintf,w
 12860  05EF  00BA               	movwf	sprintf@ap
 12861                           
 12862                           ;doprnt.c: 553: while((c = *f++)) {
 12863  05F0  2F6F               	goto	l4812
 12864  05F1                     l4710:
 12865                           
 12866                           ;doprnt.c: 555: if(c != '%')
 12867  05F1  3025               	movlw	37
 12868  05F2  0641               	xorwf	sprintf@c,w
 12869  05F3  1903               	btfsc	3,2
 12870  05F4  2DF6               	goto	u3991
 12871  05F5  2DF7               	goto	u3990
 12872  05F6                     u3991:
 12873  05F6  2E03               	goto	l4716
 12874  05F7                     u3990:
 12875  05F7                     l4712:
 12876                           
 12877                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 12878  05F7  0841               	movf	sprintf@c,w
 12879  05F8  00B6               	movwf	??_sprintf
 12880  05F9  0842               	movf	sprintf@sp,w
 12881  05FA  0086               	movwf	6
 12882  05FB  0187               	clrf	7
 12883  05FC  0836               	movf	??_sprintf,w
 12884  05FD  0081               	movwf	1
 12885  05FE                     l4714:
 12886  05FE  3001               	movlw	1
 12887  05FF  00B6               	movwf	??_sprintf
 12888  0600  0836               	movf	??_sprintf,w
 12889  0601  07C2               	addwf	sprintf@sp,f
 12890                           
 12891                           ;doprnt.c: 559: continue;
 12892  0602  2F6F               	goto	l4812
 12893  0603                     l4716:
 12894                           
 12895                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 12896  0603  01BF               	clrf	sprintf@width
 12897  0604  01C0               	clrf	sprintf@width+1
 12898                           
 12899                           ;doprnt.c: 565: flag = 0;
 12900  0605  01BE               	clrf	sprintf@flag
 12901  0606  2E0C               	goto	l4722
 12902  0607                     l1752:	
 12903                           ;doprnt.c: 596: case '0':
 12904                           
 12905                           
 12906                           ;doprnt.c: 597: flag |= 0x04;
 12907  0607  153E               	bsf	sprintf@flag,2
 12908  0608                     l4718:
 12909                           
 12910                           ;doprnt.c: 598: f++;
 12911  0608  3001               	movlw	1
 12912  0609  07AE               	addwf	sprintf@f,f
 12913  060A  3000               	movlw	0
 12914  060B  3DAF               	addwfc	sprintf@f+1,f
 12915  060C                     l4722:	
 12916                           ;doprnt.c: 599: continue;
 12917                           
 12918  060C  082E               	movf	sprintf@f,w
 12919  060D  0084               	movwf	4
 12920  060E  082F               	movf	sprintf@f+1,w
 12921  060F  0085               	movwf	5
 12922  0610  0800               	movf	0,w	;code access
 12923                           
 12924                           ; Switch size 1, requested type "simple"
 12925                           ; Number of cases is 1, Range of values is 48 to 48
 12926                           ; switch strategies available:
 12927                           ; Name         Instructions Cycles
 12928                           ; simple_byte            4     3 (average)
 12929                           ; direct_byte           11     9 (fixed)
 12930                           ; jumptable            263     9 (fixed)
 12931                           ;	Chosen strategy is simple_byte
 12932  0611  3A30               	xorlw	48	; case 48
 12933  0612  1903               	skipnz
 12934  0613  2E07               	goto	l1752
 12935  0614  2E15               	goto	l4724
 12936  0615                     l4724:
 12937                           
 12938                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 12939  0615  082E               	movf	sprintf@f,w
 12940  0616  0084               	movwf	4
 12941  0617  082F               	movf	sprintf@f+1,w
 12942  0618  0085               	movwf	5
 12943  0619  0800               	movf	0,w	;code access
 12944  061A  3193  2365  3185   	fcall	_isdigit
 12945  061D  1C03               	btfss	3,0
 12946  061E  2E20               	goto	u4001
 12947  061F  2E21               	goto	u4000
 12948  0620                     u4001:
 12949  0620  2E54               	goto	l4738
 12950  0621                     u4000:
 12951  0621                     l4726:
 12952                           
 12953                           ;doprnt.c: 615: width = 0;
 12954  0621  0020               	movlb	0	; select bank0
 12955  0622  01BF               	clrf	sprintf@width
 12956  0623  01C0               	clrf	sprintf@width+1
 12957  0624                     l4728:
 12958                           
 12959                           ;doprnt.c: 617: width *= 10;
 12960  0624  300A               	movlw	10
 12961  0625  0020               	movlb	0	; select bank0
 12962  0626  00A0               	movwf	___wmul@multiplier
 12963  0627  3000               	movlw	0
 12964  0628  00A1               	movwf	___wmul@multiplier+1
 12965  0629  0840               	movf	sprintf@width+1,w
 12966  062A  00A3               	movwf	___wmul@multiplicand+1
 12967  062B  083F               	movf	sprintf@width,w
 12968  062C  00A2               	movwf	___wmul@multiplicand
 12969  062D  3195  2517  3185   	fcall	___wmul
 12970  0630  0020               	movlb	0	; select bank0
 12971  0631  0821               	movf	?___wmul+1,w
 12972  0632  00C0               	movwf	sprintf@width+1
 12973  0633  0820               	movf	?___wmul,w
 12974  0634  00BF               	movwf	sprintf@width
 12975  0635                     l4730:
 12976                           
 12977                           ;doprnt.c: 618: width += *f++ - '0';
 12978  0635  082E               	movf	sprintf@f,w
 12979  0636  0084               	movwf	4
 12980  0637  082F               	movf	sprintf@f+1,w
 12981  0638  0085               	movwf	5
 12982  0639  0800               	movf	0,w	;code access
 12983  063A  3ED0               	addlw	208
 12984  063B  00B6               	movwf	??_sprintf
 12985  063C  30FF               	movlw	255
 12986  063D  1803               	skipnc
 12987  063E  3000               	movlw	0
 12988  063F  00B7               	movwf	??_sprintf+1
 12989  0640  0836               	movf	??_sprintf,w
 12990  0641  07BF               	addwf	sprintf@width,f
 12991  0642  0837               	movf	??_sprintf+1,w
 12992  0643  3DC0               	addwfc	sprintf@width+1,f
 12993  0644                     l4732:
 12994  0644  3001               	movlw	1
 12995  0645  07AE               	addwf	sprintf@f,f
 12996  0646  3000               	movlw	0
 12997  0647  3DAF               	addwfc	sprintf@f+1,f
 12998  0648                     l4734:
 12999                           
 13000                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 13001  0648  082E               	movf	sprintf@f,w
 13002  0649  0084               	movwf	4
 13003  064A  082F               	movf	sprintf@f+1,w
 13004  064B  0085               	movwf	5
 13005  064C  0800               	movf	0,w	;code access
 13006  064D  3193  2365  3185   	fcall	_isdigit
 13007  0650  1803               	btfsc	3,0
 13008  0651  2E53               	goto	u4011
 13009  0652  2E54               	goto	u4010
 13010  0653                     u4011:
 13011  0653  2E24               	goto	l4728
 13012  0654                     u4010:
 13013  0654                     l4738:
 13014  0654  0020               	movlb	0	; select bank0
 13015  0655  082F               	movf	sprintf@f+1,w
 13016  0656  00B7               	movwf	??_sprintf+1
 13017  0657  082E               	movf	sprintf@f,w
 13018  0658  00B6               	movwf	??_sprintf
 13019  0659  0AAE               	incf	sprintf@f,f
 13020  065A  1903               	skipnz
 13021  065B  0AAF               	incf	sprintf@f+1,f
 13022  065C  0836               	movf	??_sprintf,w
 13023  065D  0084               	movwf	4
 13024  065E  0837               	movf	??_sprintf+1,w
 13025  065F  0085               	movwf	5
 13026  0660  0800               	movf	0,w	;code access
 13027  0661  00C1               	movwf	sprintf@c
 13028                           
 13029                           ; Switch size 1, requested type "simple"
 13030                           ; Number of cases is 3, Range of values is 0 to 105
 13031                           ; switch strategies available:
 13032                           ; Name         Instructions Cycles
 13033                           ; simple_byte           10     6 (average)
 13034                           ; direct_byte          218     6 (fixed)
 13035                           ; jumptable            260     6 (fixed)
 13036                           ;	Chosen strategy is simple_byte
 13037  0662  3A00               	xorlw	0	; case 0
 13038  0663  1903               	skipnz
 13039  0664  2F83               	goto	l4814
 13040  0665  3A64               	xorlw	100	; case 100
 13041  0666  1903               	skipnz
 13042  0667  2E6C               	goto	l4740
 13043  0668  3A0D               	xorlw	13	; case 105
 13044  0669  1903               	skipnz
 13045  066A  2E6C               	goto	l4740
 13046  066B  2F6F               	goto	l4812
 13047  066C                     l4740:
 13048                           
 13049                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 13050  066C  083A               	movf	sprintf@ap,w
 13051  066D  0086               	movwf	6
 13052  066E  0187               	clrf	7
 13053  066F  3F40               	moviw [0]fsr1
 13054  0670  00BC               	movwf	sprintf@val
 13055  0671  3F41               	moviw [1]fsr1
 13056  0672  00BD               	movwf	sprintf@val+1
 13057  0673                     l4742:
 13058  0673  3002               	movlw	2
 13059  0674  00B6               	movwf	??_sprintf
 13060  0675  0836               	movf	??_sprintf,w
 13061  0676  07BA               	addwf	sprintf@ap,f
 13062  0677                     l4744:
 13063                           
 13064                           ;doprnt.c: 1287: if((int)val < 0) {
 13065  0677  1FBD               	btfss	sprintf@val+1,7
 13066  0678  2E7A               	goto	u4021
 13067  0679  2E7B               	goto	u4020
 13068  067A                     u4021:
 13069  067A  2E84               	goto	l4750
 13070  067B                     u4020:
 13071  067B                     l4746:
 13072                           
 13073                           ;doprnt.c: 1288: flag |= 0x03;
 13074  067B  3003               	movlw	3
 13075  067C  00B6               	movwf	??_sprintf
 13076  067D  0836               	movf	??_sprintf,w
 13077  067E  04BE               	iorwf	sprintf@flag,f
 13078  067F                     l4748:
 13079                           
 13080                           ;doprnt.c: 1289: val = -val;
 13081  067F  09BC               	comf	sprintf@val,f
 13082  0680  09BD               	comf	sprintf@val+1,f
 13083  0681  0ABC               	incf	sprintf@val,f
 13084  0682  1903               	skipnz
 13085  0683  0ABD               	incf	sprintf@val+1,f
 13086  0684                     l4750:
 13087                           
 13088                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 13089  0684  01C1               	clrf	sprintf@c
 13090  0685  0AC1               	incf	sprintf@c,f
 13091  0686                     l4756:
 13092                           
 13093                           ;doprnt.c: 1332: if(val < dpowers[c])
 13094  0686  0841               	movf	sprintf@c,w
 13095  0687  00B6               	movwf	??_sprintf
 13096  0688  01B7               	clrf	??_sprintf+1
 13097  0689  35B6               	lslf	??_sprintf,f
 13098  068A  0DB7               	rlf	??_sprintf+1,f
 13099  068B  302D               	movlw	low (_dpowers| (0+32768))
 13100  068C  0736               	addwf	??_sprintf,w
 13101  068D  0084               	movwf	4
 13102  068E  3098               	movlw	high (_dpowers| (0+32768))
 13103  068F  3D37               	addwfc	??_sprintf+1,w
 13104  0690  0085               	movwf	5
 13105  0691  3F00               	moviw [0]fsr0
 13106  0692  00B8               	movwf	??_sprintf+2
 13107  0693  3F01               	moviw [1]fsr0
 13108  0694  00B9               	movwf	??_sprintf+3
 13109  0695  0839               	movf	??_sprintf+3,w
 13110  0696  023D               	subwf	sprintf@val+1,w
 13111  0697  1D03               	skipz
 13112  0698  2E9B               	goto	u4035
 13113  0699  0838               	movf	??_sprintf+2,w
 13114  069A  023C               	subwf	sprintf@val,w
 13115  069B                     u4035:
 13116  069B  1803               	skipnc
 13117  069C  2E9E               	goto	u4031
 13118  069D  2E9F               	goto	u4030
 13119  069E                     u4031:
 13120  069E  2EA0               	goto	l4760
 13121  069F                     u4030:
 13122  069F  2EAA               	goto	l4762
 13123  06A0                     l4760:
 13124  06A0  3001               	movlw	1
 13125  06A1  00B6               	movwf	??_sprintf
 13126  06A2  0836               	movf	??_sprintf,w
 13127  06A3  07C1               	addwf	sprintf@c,f
 13128  06A4  3005               	movlw	5
 13129  06A5  0641               	xorwf	sprintf@c,w
 13130  06A6  1D03               	btfss	3,2
 13131  06A7  2EA9               	goto	u4041
 13132  06A8  2EAA               	goto	u4040
 13133  06A9                     u4041:
 13134  06A9  2E86               	goto	l4756
 13135  06AA                     u4040:
 13136  06AA                     l4762:
 13137                           
 13138                           ;doprnt.c: 1371: if(width && flag & 0x03)
 13139  06AA  083F               	movf	sprintf@width,w
 13140  06AB  0440               	iorwf	sprintf@width+1,w
 13141  06AC  1903               	btfsc	3,2
 13142  06AD  2EAF               	goto	u4051
 13143  06AE  2EB0               	goto	u4050
 13144  06AF                     u4051:
 13145  06AF  2EBA               	goto	l1770
 13146  06B0                     u4050:
 13147  06B0                     l4764:
 13148  06B0  083E               	movf	sprintf@flag,w
 13149  06B1  3903               	andlw	3
 13150  06B2  1903               	btfsc	3,2
 13151  06B3  2EB5               	goto	u4061
 13152  06B4  2EB6               	goto	u4060
 13153  06B5                     u4061:
 13154  06B5  2EBA               	goto	l1770
 13155  06B6                     u4060:
 13156  06B6                     l4766:
 13157                           
 13158                           ;doprnt.c: 1372: width--;
 13159  06B6  30FF               	movlw	255
 13160  06B7  07BF               	addwf	sprintf@width,f
 13161  06B8  30FF               	movlw	255
 13162  06B9  3DC0               	addwfc	sprintf@width+1,f
 13163  06BA                     l1770:
 13164                           
 13165                           ;doprnt.c: 1407: if(width > c)
 13166  06BA  0840               	movf	sprintf@width+1,w
 13167  06BB  3A80               	xorlw	128
 13168  06BC  3C80               	sublw	128
 13169  06BD  1D03               	skipz
 13170  06BE  2EC1               	goto	u4075
 13171  06BF  083F               	movf	sprintf@width,w
 13172  06C0  0241               	subwf	sprintf@c,w
 13173  06C1                     u4075:
 13174  06C1  1803               	skipnc
 13175  06C2  2EC4               	goto	u4071
 13176  06C3  2EC5               	goto	u4070
 13177  06C4                     u4071:
 13178  06C4  2ECE               	goto	l4770
 13179  06C5                     u4070:
 13180  06C5                     l4768:
 13181                           
 13182                           ;doprnt.c: 1408: width -= c;
 13183  06C5  0020               	movlb	0	; select bank0
 13184  06C6  0841               	movf	sprintf@c,w
 13185  06C7  00B6               	movwf	??_sprintf
 13186  06C8  01B7               	clrf	??_sprintf+1
 13187  06C9  0836               	movf	??_sprintf,w
 13188  06CA  02BF               	subwf	sprintf@width,f
 13189  06CB  0837               	movf	??_sprintf+1,w
 13190  06CC  3BC0               	subwfb	sprintf@width+1,f
 13191  06CD  2ED1               	goto	l4772
 13192  06CE                     l4770:
 13193                           
 13194                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 13195  06CE  0020               	movlb	0	; select bank0
 13196  06CF  01BF               	clrf	sprintf@width
 13197  06D0  01C0               	clrf	sprintf@width+1
 13198  06D1                     l4772:
 13199                           
 13200                           ;doprnt.c: 1413: if(flag & 0x04) {
 13201  06D1  1D3E               	btfss	sprintf@flag,2
 13202  06D2  2ED4               	goto	u4081
 13203  06D3  2ED5               	goto	u4080
 13204  06D4                     u4081:
 13205  06D4  2F02               	goto	l4788
 13206  06D5                     u4080:
 13207  06D5                     l4774:
 13208                           
 13209                           ;doprnt.c: 1418: if(flag & 0x03)
 13210  06D5  083E               	movf	sprintf@flag,w
 13211  06D6  3903               	andlw	3
 13212  06D7  1903               	btfsc	3,2
 13213  06D8  2EDA               	goto	u4091
 13214  06D9  2EDB               	goto	u4090
 13215  06DA                     u4091:
 13216  06DA  2EE6               	goto	l4780
 13217  06DB                     u4090:
 13218  06DB                     l4776:
 13219                           
 13220                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 13221  06DB  302D               	movlw	45
 13222  06DC  00B6               	movwf	??_sprintf
 13223  06DD  0842               	movf	sprintf@sp,w
 13224  06DE  0086               	movwf	6
 13225  06DF  0187               	clrf	7
 13226  06E0  0836               	movf	??_sprintf,w
 13227  06E1  0081               	movwf	1
 13228  06E2                     l4778:
 13229  06E2  3001               	movlw	1
 13230  06E3  00B6               	movwf	??_sprintf
 13231  06E4  0836               	movf	??_sprintf,w
 13232  06E5  07C2               	addwf	sprintf@sp,f
 13233  06E6                     l4780:
 13234                           
 13235                           ;doprnt.c: 1441: if(width)
 13236  06E6  083F               	movf	sprintf@width,w
 13237  06E7  0440               	iorwf	sprintf@width+1,w
 13238  06E8  1903               	btfsc	3,2
 13239  06E9  2EEB               	goto	u4101
 13240  06EA  2EEC               	goto	u4100
 13241  06EB                     u4101:
 13242  06EB  2F2E               	goto	l4802
 13243  06EC                     u4100:
 13244  06EC                     l4782:
 13245                           
 13246                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 13247  06EC  3030               	movlw	48
 13248  06ED  00B6               	movwf	??_sprintf
 13249  06EE  0842               	movf	sprintf@sp,w
 13250  06EF  0086               	movwf	6
 13251  06F0  0187               	clrf	7
 13252  06F1  0836               	movf	??_sprintf,w
 13253  06F2  0081               	movwf	1
 13254  06F3                     l4784:
 13255  06F3  3001               	movlw	1
 13256  06F4  00B6               	movwf	??_sprintf
 13257  06F5  0836               	movf	??_sprintf,w
 13258  06F6  07C2               	addwf	sprintf@sp,f
 13259  06F7                     l4786:
 13260                           
 13261                           ;doprnt.c: 1444: while(--width);
 13262  06F7  30FF               	movlw	255
 13263  06F8  07BF               	addwf	sprintf@width,f
 13264  06F9  30FF               	movlw	255
 13265  06FA  3DC0               	addwfc	sprintf@width+1,f
 13266  06FB  083F               	movf	sprintf@width,w
 13267  06FC  0440               	iorwf	sprintf@width+1,w
 13268  06FD  1D03               	btfss	3,2
 13269  06FE  2F00               	goto	u4111
 13270  06FF  2F01               	goto	u4110
 13271  0700                     u4111:
 13272  0700  2EEC               	goto	l4782
 13273  0701                     u4110:
 13274  0701  2F2E               	goto	l4802
 13275  0702                     l4788:
 13276                           
 13277                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 13278  0702  083F               	movf	sprintf@width,w
 13279  0703  0440               	iorwf	sprintf@width+1,w
 13280  0704  1903               	btfsc	3,2
 13281  0705  2F07               	goto	u4121
 13282  0706  2F08               	goto	u4120
 13283  0707                     u4121:
 13284  0707  2F1D               	goto	l4796
 13285  0708                     u4120:
 13286  0708                     l4790:
 13287                           
 13288                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 13289  0708  3020               	movlw	32
 13290  0709  00B6               	movwf	??_sprintf
 13291  070A  0842               	movf	sprintf@sp,w
 13292  070B  0086               	movwf	6
 13293  070C  0187               	clrf	7
 13294  070D  0836               	movf	??_sprintf,w
 13295  070E  0081               	movwf	1
 13296  070F                     l4792:
 13297  070F  3001               	movlw	1
 13298  0710  00B6               	movwf	??_sprintf
 13299  0711  0836               	movf	??_sprintf,w
 13300  0712  07C2               	addwf	sprintf@sp,f
 13301  0713                     l4794:
 13302                           
 13303                           ;doprnt.c: 1457: while(--width);
 13304  0713  30FF               	movlw	255
 13305  0714  07BF               	addwf	sprintf@width,f
 13306  0715  30FF               	movlw	255
 13307  0716  3DC0               	addwfc	sprintf@width+1,f
 13308  0717  083F               	movf	sprintf@width,w
 13309  0718  0440               	iorwf	sprintf@width+1,w
 13310  0719  1D03               	btfss	3,2
 13311  071A  2F1C               	goto	u4131
 13312  071B  2F1D               	goto	u4130
 13313  071C                     u4131:
 13314  071C  2F08               	goto	l4790
 13315  071D                     u4130:
 13316  071D                     l4796:
 13317                           
 13318                           ;doprnt.c: 1464: if(flag & 0x03)
 13319  071D  083E               	movf	sprintf@flag,w
 13320  071E  3903               	andlw	3
 13321  071F  1903               	btfsc	3,2
 13322  0720  2F22               	goto	u4141
 13323  0721  2F23               	goto	u4140
 13324  0722                     u4141:
 13325  0722  2F2E               	goto	l4802
 13326  0723                     u4140:
 13327  0723                     l4798:
 13328                           
 13329                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 13330  0723  302D               	movlw	45
 13331  0724  00B6               	movwf	??_sprintf
 13332  0725  0842               	movf	sprintf@sp,w
 13333  0726  0086               	movwf	6
 13334  0727  0187               	clrf	7
 13335  0728  0836               	movf	??_sprintf,w
 13336  0729  0081               	movwf	1
 13337  072A                     l4800:
 13338  072A  3001               	movlw	1
 13339  072B  00B6               	movwf	??_sprintf
 13340  072C  0836               	movf	??_sprintf,w
 13341  072D  07C2               	addwf	sprintf@sp,f
 13342  072E                     l4802:
 13343                           
 13344                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 13345  072E  0841               	movf	sprintf@c,w
 13346  072F  00B6               	movwf	??_sprintf
 13347  0730  0836               	movf	??_sprintf,w
 13348  0731  00BB               	movwf	sprintf@prec
 13349                           
 13350                           ;doprnt.c: 1500: while(prec--) {
 13351  0732  2F66               	goto	l4810
 13352  0733                     l4804:
 13353                           
 13354                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 13355  0733  300A               	movlw	10
 13356  0734  00A8               	movwf	___lwmod@divisor
 13357  0735  3000               	movlw	0
 13358  0736  00A9               	movwf	___lwmod@divisor+1
 13359  0737  083B               	movf	sprintf@prec,w
 13360  0738  00B6               	movwf	??_sprintf
 13361  0739  01B7               	clrf	??_sprintf+1
 13362  073A  35B6               	lslf	??_sprintf,f
 13363  073B  0DB7               	rlf	??_sprintf+1,f
 13364  073C  302D               	movlw	low (_dpowers| (0+32768))
 13365  073D  0736               	addwf	??_sprintf,w
 13366  073E  0084               	movwf	4
 13367  073F  3098               	movlw	high (_dpowers| (0+32768))
 13368  0740  3D37               	addwfc	??_sprintf+1,w
 13369  0741  0085               	movwf	5
 13370  0742  3F00               	moviw [0]fsr0
 13371  0743  00A0               	movwf	___lwdiv@divisor
 13372  0744  3F01               	moviw [1]fsr0
 13373  0745  00A1               	movwf	___lwdiv@divisor+1
 13374  0746  083D               	movf	sprintf@val+1,w
 13375  0747  00A3               	movwf	___lwdiv@dividend+1
 13376  0748  083C               	movf	sprintf@val,w
 13377  0749  00A2               	movwf	___lwdiv@dividend
 13378  074A  3197  27C3  3185   	fcall	___lwdiv
 13379  074D  0020               	movlb	0	; select bank0
 13380  074E  0821               	movf	?___lwdiv+1,w
 13381  074F  00AB               	movwf	___lwmod@dividend+1
 13382  0750  0820               	movf	?___lwdiv,w
 13383  0751  00AA               	movwf	___lwmod@dividend
 13384  0752  3197  2752  3185   	fcall	___lwmod
 13385  0755  0020               	movlb	0	; select bank0
 13386  0756  0828               	movf	?___lwmod,w
 13387  0757  3E30               	addlw	48
 13388  0758  00B8               	movwf	??_sprintf+2
 13389  0759  0838               	movf	??_sprintf+2,w
 13390  075A  00C1               	movwf	sprintf@c
 13391  075B                     l4806:
 13392                           
 13393                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 13394  075B  0841               	movf	sprintf@c,w
 13395  075C  00B6               	movwf	??_sprintf
 13396  075D  0842               	movf	sprintf@sp,w
 13397  075E  0086               	movwf	6
 13398  075F  0187               	clrf	7
 13399  0760  0836               	movf	??_sprintf,w
 13400  0761  0081               	movwf	1
 13401  0762                     l4808:
 13402  0762  3001               	movlw	1
 13403  0763  00B6               	movwf	??_sprintf
 13404  0764  0836               	movf	??_sprintf,w
 13405  0765  07C2               	addwf	sprintf@sp,f
 13406  0766                     l4810:
 13407  0766  30FF               	movlw	255
 13408  0767  00B6               	movwf	??_sprintf
 13409  0768  0836               	movf	??_sprintf,w
 13410  0769  07BB               	addwf	sprintf@prec,f
 13411  076A  0A3B               	incf	sprintf@prec,w
 13412  076B  1D03               	btfss	3,2
 13413  076C  2F6E               	goto	u4151
 13414  076D  2F6F               	goto	u4150
 13415  076E                     u4151:
 13416  076E  2F33               	goto	l4804
 13417  076F                     u4150:
 13418  076F                     l4812:
 13419  076F  082F               	movf	sprintf@f+1,w
 13420  0770  00B7               	movwf	??_sprintf+1
 13421  0771  082E               	movf	sprintf@f,w
 13422  0772  00B6               	movwf	??_sprintf
 13423  0773  0AAE               	incf	sprintf@f,f
 13424  0774  1903               	skipnz
 13425  0775  0AAF               	incf	sprintf@f+1,f
 13426  0776  0836               	movf	??_sprintf,w
 13427  0777  0084               	movwf	4
 13428  0778  0837               	movf	??_sprintf+1,w
 13429  0779  0085               	movwf	5
 13430  077A  0800               	movf	0,w	;code access
 13431  077B  00B8               	movwf	??_sprintf+2
 13432  077C  0838               	movf	??_sprintf+2,w
 13433  077D  00C1               	movwf	sprintf@c
 13434  077E  0841               	movf	sprintf@c,w
 13435  077F  1D03               	btfss	3,2
 13436  0780  2F82               	goto	u4161
 13437  0781  2F83               	goto	u4160
 13438  0782                     u4161:
 13439  0782  2DF1               	goto	l4710
 13440  0783                     u4160:
 13441  0783                     l4814:
 13442                           
 13443                           ;doprnt.c: 1564: *sp = 0;
 13444  0783  0842               	movf	sprintf@sp,w
 13445  0784  0086               	movwf	6
 13446  0785  0187               	clrf	7
 13447  0786  0181               	clrf	1
 13448  0787                     l1787:
 13449  0787  0008               	return
 13450  0788                     __end_of_sprintf:
 13451                           
 13452                           	psect	text11
 13453  1365                     __ptext11:	
 13454 ;; *************** function _isdigit *****************
 13455 ;; Defined at:
 13456 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 13457 ;; Parameters:    Size  Location     Type
 13458 ;;  c               1    wreg     unsigned char 
 13459 ;; Auto vars:     Size  Location     Type
 13460 ;;  c               1    1[BANK0 ] unsigned char 
 13461 ;; Return value:  Size  Location     Type
 13462 ;;		None               void
 13463 ;; Registers used:
 13464 ;;		wreg, status,2, status,0
 13465 ;; Tracked objects:
 13466 ;;		On entry : 0/0
 13467 ;;		On exit  : 0/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13471 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13474 ;;Total ram usage:        2 bytes
 13475 ;; Hardware stack levels used:    1
 13476 ;; Hardware stack levels required when called:    5
 13477 ;; This function calls:
 13478 ;;		Nothing
 13479 ;; This function is called by:
 13480 ;;		_sprintf
 13481 ;; This function uses a non-reentrant model
 13482 ;;
 13483                           
 13484                           
 13485                           ;psect for function _isdigit
 13486  1365                     _isdigit:
 13487                           
 13488                           ;incstack = 0
 13489                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13490                           ;isdigit@c stored from wreg
 13491  1365  0020               	movlb	0	; select bank0
 13492  1366  00A1               	movwf	isdigit@c
 13493  1367                     l4500:
 13494  1367  01A0               	clrf	_isdigit$3115
 13495  1368                     l4502:
 13496  1368  303A               	movlw	58
 13497  1369  0221               	subwf	isdigit@c,w
 13498  136A  1803               	skipnc
 13499  136B  2B6D               	goto	u3411
 13500  136C  2B6E               	goto	u3410
 13501  136D                     u3411:
 13502  136D  2B76               	goto	l4508
 13503  136E                     u3410:
 13504  136E                     l4504:
 13505  136E  3030               	movlw	48
 13506  136F  0221               	subwf	isdigit@c,w
 13507  1370  1C03               	skipc
 13508  1371  2B73               	goto	u3421
 13509  1372  2B74               	goto	u3420
 13510  1373                     u3421:
 13511  1373  2B76               	goto	l4508
 13512  1374                     u3420:
 13513  1374                     l4506:
 13514  1374  01A0               	clrf	_isdigit$3115
 13515  1375  0AA0               	incf	_isdigit$3115,f
 13516  1376                     l4508:
 13517  1376  0C20               	rrf	_isdigit$3115,w
 13518  1377                     l2244:
 13519  1377  0008               	return
 13520  1378                     __end_of_isdigit:
 13521                           
 13522                           	psect	text12
 13523  1517                     __ptext12:	
 13524 ;; *************** function ___wmul *****************
 13525 ;; Defined at:
 13526 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 13527 ;; Parameters:    Size  Location     Type
 13528 ;;  multiplier      2    0[BANK0 ] unsigned int 
 13529 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 13530 ;; Auto vars:     Size  Location     Type
 13531 ;;  product         2    4[BANK0 ] unsigned int 
 13532 ;; Return value:  Size  Location     Type
 13533 ;;                  2    0[BANK0 ] unsigned int 
 13534 ;; Registers used:
 13535 ;;		wreg, status,2, status,0
 13536 ;; Tracked objects:
 13537 ;;		On entry : 0/0
 13538 ;;		On exit  : 0/0
 13539 ;;		Unchanged: 0/0
 13540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13541 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13542 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13544 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13545 ;;Total ram usage:        6 bytes
 13546 ;; Hardware stack levels used:    1
 13547 ;; Hardware stack levels required when called:    5
 13548 ;; This function calls:
 13549 ;;		Nothing
 13550 ;; This function is called by:
 13551 ;;		_main
 13552 ;;		_sprintf
 13553 ;;		_map
 13554 ;; This function uses a non-reentrant model
 13555 ;;
 13556                           
 13557                           
 13558                           ;psect for function ___wmul
 13559  1517                     ___wmul:
 13560  1517                     l4512:	
 13561                           ;incstack = 0
 13562                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13563                           
 13564  1517  0020               	movlb	0	; select bank0
 13565  1518  01A4               	clrf	___wmul@product
 13566  1519  01A5               	clrf	___wmul@product+1
 13567  151A                     l4514:
 13568  151A  1C20               	btfss	___wmul@multiplier,0
 13569  151B  2D1D               	goto	u3431
 13570  151C  2D1E               	goto	u3430
 13571  151D                     u3431:
 13572  151D  2D22               	goto	l1791
 13573  151E                     u3430:
 13574  151E                     l4516:
 13575  151E  0822               	movf	___wmul@multiplicand,w
 13576  151F  07A4               	addwf	___wmul@product,f
 13577  1520  0823               	movf	___wmul@multiplicand+1,w
 13578  1521  3DA5               	addwfc	___wmul@product+1,f
 13579  1522                     l1791:
 13580  1522  3001               	movlw	1
 13581  1523                     u3445:
 13582  1523  35A2               	lslf	___wmul@multiplicand,f
 13583  1524  0DA3               	rlf	___wmul@multiplicand+1,f
 13584  1525  0B89               	decfsz	9,f
 13585  1526  2D23               	goto	u3445
 13586  1527                     l4518:
 13587  1527  3001               	movlw	1
 13588  1528                     u3455:
 13589  1528  36A1               	lsrf	___wmul@multiplier+1,f
 13590  1529  0CA0               	rrf	___wmul@multiplier,f
 13591  152A  0B89               	decfsz	9,f
 13592  152B  2D28               	goto	u3455
 13593  152C                     l4520:
 13594  152C  0820               	movf	___wmul@multiplier,w
 13595  152D  0421               	iorwf	___wmul@multiplier+1,w
 13596  152E  1D03               	btfss	3,2
 13597  152F  2D31               	goto	u3461
 13598  1530  2D32               	goto	u3460
 13599  1531                     u3461:
 13600  1531  2D1A               	goto	l4514
 13601  1532                     u3460:
 13602  1532                     l4522:
 13603  1532  0825               	movf	___wmul@product+1,w
 13604  1533  00A1               	movwf	?___wmul+1
 13605  1534  0824               	movf	___wmul@product,w
 13606  1535  00A0               	movwf	?___wmul
 13607  1536                     l1793:
 13608  1536  0008               	return
 13609  1537                     __end_of___wmul:
 13610                           
 13611                           	psect	text13
 13612  1752                     __ptext13:	
 13613 ;; *************** function ___lwmod *****************
 13614 ;; Defined at:
 13615 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 13616 ;; Parameters:    Size  Location     Type
 13617 ;;  divisor         2    8[BANK0 ] unsigned int 
 13618 ;;  dividend        2   10[BANK0 ] unsigned int 
 13619 ;; Auto vars:     Size  Location     Type
 13620 ;;  counter         1   13[BANK0 ] unsigned char 
 13621 ;; Return value:  Size  Location     Type
 13622 ;;                  2    8[BANK0 ] unsigned int 
 13623 ;; Registers used:
 13624 ;;		wreg, status,2, status,0
 13625 ;; Tracked objects:
 13626 ;;		On entry : 0/0
 13627 ;;		On exit  : 0/0
 13628 ;;		Unchanged: 0/0
 13629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13630 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13631 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13632 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13633 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13634 ;;Total ram usage:        6 bytes
 13635 ;; Hardware stack levels used:    1
 13636 ;; Hardware stack levels required when called:    5
 13637 ;; This function calls:
 13638 ;;		Nothing
 13639 ;; This function is called by:
 13640 ;;		_sprintf
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644                           
 13645                           ;psect for function ___lwmod
 13646  1752                     ___lwmod:
 13647  1752                     l4552:	
 13648                           ;incstack = 0
 13649                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13650                           
 13651  1752  0020               	movlb	0	; select bank0
 13652  1753  0828               	movf	___lwmod@divisor,w
 13653  1754  0429               	iorwf	___lwmod@divisor+1,w
 13654  1755  1903               	btfsc	3,2
 13655  1756  2F58               	goto	u3541
 13656  1757  2F59               	goto	u3540
 13657  1758                     u3541:
 13658  1758  2F82               	goto	l4570
 13659  1759                     u3540:
 13660  1759                     l4554:
 13661  1759  01AD               	clrf	___lwmod@counter
 13662  175A  0AAD               	incf	___lwmod@counter,f
 13663  175B  2F65               	goto	l4560
 13664  175C                     l4556:
 13665  175C  3001               	movlw	1
 13666  175D                     u3555:
 13667  175D  35A8               	lslf	___lwmod@divisor,f
 13668  175E  0DA9               	rlf	___lwmod@divisor+1,f
 13669  175F  0B89               	decfsz	9,f
 13670  1760  2F5D               	goto	u3555
 13671  1761                     l4558:
 13672  1761  3001               	movlw	1
 13673  1762  00AC               	movwf	??___lwmod
 13674  1763  082C               	movf	??___lwmod,w
 13675  1764  07AD               	addwf	___lwmod@counter,f
 13676  1765                     l4560:
 13677  1765  1FA9               	btfss	___lwmod@divisor+1,7
 13678  1766  2F68               	goto	u3561
 13679  1767  2F69               	goto	u3560
 13680  1768                     u3561:
 13681  1768  2F5C               	goto	l4556
 13682  1769                     u3560:
 13683  1769                     l4562:
 13684  1769  0829               	movf	___lwmod@divisor+1,w
 13685  176A  022B               	subwf	___lwmod@dividend+1,w
 13686  176B  1D03               	skipz
 13687  176C  2F6F               	goto	u3575
 13688  176D  0828               	movf	___lwmod@divisor,w
 13689  176E  022A               	subwf	___lwmod@dividend,w
 13690  176F                     u3575:
 13691  176F  1C03               	skipc
 13692  1770  2F72               	goto	u3571
 13693  1771  2F73               	goto	u3570
 13694  1772                     u3571:
 13695  1772  2F77               	goto	l4566
 13696  1773                     u3570:
 13697  1773                     l4564:
 13698  1773  0828               	movf	___lwmod@divisor,w
 13699  1774  02AA               	subwf	___lwmod@dividend,f
 13700  1775  0829               	movf	___lwmod@divisor+1,w
 13701  1776  3BAB               	subwfb	___lwmod@dividend+1,f
 13702  1777                     l4566:
 13703  1777  3001               	movlw	1
 13704  1778                     u3585:
 13705  1778  36A9               	lsrf	___lwmod@divisor+1,f
 13706  1779  0CA8               	rrf	___lwmod@divisor,f
 13707  177A  0B89               	decfsz	9,f
 13708  177B  2F78               	goto	u3585
 13709  177C                     l4568:
 13710  177C  3001               	movlw	1
 13711  177D  02AD               	subwf	___lwmod@counter,f
 13712  177E  1D03               	btfss	3,2
 13713  177F  2F81               	goto	u3591
 13714  1780  2F82               	goto	u3590
 13715  1781                     u3591:
 13716  1781  2F69               	goto	l4562
 13717  1782                     u3590:
 13718  1782                     l4570:
 13719  1782  082B               	movf	___lwmod@dividend+1,w
 13720  1783  00A9               	movwf	?___lwmod+1
 13721  1784  082A               	movf	___lwmod@dividend,w
 13722  1785  00A8               	movwf	?___lwmod
 13723  1786                     l2073:
 13724  1786  0008               	return
 13725  1787                     __end_of___lwmod:
 13726                           
 13727                           	psect	text14
 13728  17C3                     __ptext14:	
 13729 ;; *************** function ___lwdiv *****************
 13730 ;; Defined at:
 13731 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 13732 ;; Parameters:    Size  Location     Type
 13733 ;;  divisor         2    0[BANK0 ] unsigned int 
 13734 ;;  dividend        2    2[BANK0 ] unsigned int 
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;  quotient        2    5[BANK0 ] unsigned int 
 13737 ;;  counter         1    7[BANK0 ] unsigned char 
 13738 ;; Return value:  Size  Location     Type
 13739 ;;                  2    0[BANK0 ] unsigned int 
 13740 ;; Registers used:
 13741 ;;		wreg, status,2, status,0
 13742 ;; Tracked objects:
 13743 ;;		On entry : 0/0
 13744 ;;		On exit  : 0/0
 13745 ;;		Unchanged: 0/0
 13746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13747 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13748 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13750 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13751 ;;Total ram usage:        8 bytes
 13752 ;; Hardware stack levels used:    1
 13753 ;; Hardware stack levels required when called:    5
 13754 ;; This function calls:
 13755 ;;		Nothing
 13756 ;; This function is called by:
 13757 ;;		_sprintf
 13758 ;; This function uses a non-reentrant model
 13759 ;;
 13760                           
 13761                           
 13762                           ;psect for function ___lwdiv
 13763  17C3                     ___lwdiv:
 13764  17C3                     l4526:	
 13765                           ;incstack = 0
 13766                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13767                           
 13768  17C3  0020               	movlb	0	; select bank0
 13769  17C4  01A5               	clrf	___lwdiv@quotient
 13770  17C5  01A6               	clrf	___lwdiv@quotient+1
 13771  17C6                     l4528:
 13772  17C6  0820               	movf	___lwdiv@divisor,w
 13773  17C7  0421               	iorwf	___lwdiv@divisor+1,w
 13774  17C8  1903               	btfsc	3,2
 13775  17C9  2FCB               	goto	u3471
 13776  17CA  2FCC               	goto	u3470
 13777  17CB                     u3471:
 13778  17CB  2FFB               	goto	l4548
 13779  17CC                     u3470:
 13780  17CC                     l4530:
 13781  17CC  01A7               	clrf	___lwdiv@counter
 13782  17CD  0AA7               	incf	___lwdiv@counter,f
 13783  17CE  2FD8               	goto	l4536
 13784  17CF                     l4532:
 13785  17CF  3001               	movlw	1
 13786  17D0                     u3485:
 13787  17D0  35A0               	lslf	___lwdiv@divisor,f
 13788  17D1  0DA1               	rlf	___lwdiv@divisor+1,f
 13789  17D2  0B89               	decfsz	9,f
 13790  17D3  2FD0               	goto	u3485
 13791  17D4                     l4534:
 13792  17D4  3001               	movlw	1
 13793  17D5  00A4               	movwf	??___lwdiv
 13794  17D6  0824               	movf	??___lwdiv,w
 13795  17D7  07A7               	addwf	___lwdiv@counter,f
 13796  17D8                     l4536:
 13797  17D8  1FA1               	btfss	___lwdiv@divisor+1,7
 13798  17D9  2FDB               	goto	u3491
 13799  17DA  2FDC               	goto	u3490
 13800  17DB                     u3491:
 13801  17DB  2FCF               	goto	l4532
 13802  17DC                     u3490:
 13803  17DC                     l4538:
 13804  17DC  3001               	movlw	1
 13805  17DD                     u3505:
 13806  17DD  35A5               	lslf	___lwdiv@quotient,f
 13807  17DE  0DA6               	rlf	___lwdiv@quotient+1,f
 13808  17DF  0B89               	decfsz	9,f
 13809  17E0  2FDD               	goto	u3505
 13810  17E1  0821               	movf	___lwdiv@divisor+1,w
 13811  17E2  0223               	subwf	___lwdiv@dividend+1,w
 13812  17E3  1D03               	skipz
 13813  17E4  2FE7               	goto	u3515
 13814  17E5  0820               	movf	___lwdiv@divisor,w
 13815  17E6  0222               	subwf	___lwdiv@dividend,w
 13816  17E7                     u3515:
 13817  17E7  1C03               	skipc
 13818  17E8  2FEA               	goto	u3511
 13819  17E9  2FEB               	goto	u3510
 13820  17EA                     u3511:
 13821  17EA  2FF0               	goto	l4544
 13822  17EB                     u3510:
 13823  17EB                     l4540:
 13824  17EB  0820               	movf	___lwdiv@divisor,w
 13825  17EC  02A2               	subwf	___lwdiv@dividend,f
 13826  17ED  0821               	movf	___lwdiv@divisor+1,w
 13827  17EE  3BA3               	subwfb	___lwdiv@dividend+1,f
 13828  17EF                     l4542:
 13829  17EF  1425               	bsf	___lwdiv@quotient,0
 13830  17F0                     l4544:
 13831  17F0  3001               	movlw	1
 13832  17F1                     u3525:
 13833  17F1  36A1               	lsrf	___lwdiv@divisor+1,f
 13834  17F2  0CA0               	rrf	___lwdiv@divisor,f
 13835  17F3  0B89               	decfsz	9,f
 13836  17F4  2FF1               	goto	u3525
 13837  17F5                     l4546:
 13838  17F5  3001               	movlw	1
 13839  17F6  02A7               	subwf	___lwdiv@counter,f
 13840  17F7  1D03               	btfss	3,2
 13841  17F8  2FFA               	goto	u3531
 13842  17F9  2FFB               	goto	u3530
 13843  17FA                     u3531:
 13844  17FA  2FDC               	goto	l4538
 13845  17FB                     u3530:
 13846  17FB                     l4548:
 13847  17FB  0826               	movf	___lwdiv@quotient+1,w
 13848  17FC  00A1               	movwf	?___lwdiv+1
 13849  17FD  0825               	movf	___lwdiv@quotient,w
 13850  17FE  00A0               	movwf	?___lwdiv
 13851  17FF                     l2063:
 13852  17FF  0008               	return
 13853  1800                     __end_of___lwdiv:
 13854                           
 13855                           	psect	text15
 13856  171D                     __ptext15:	
 13857 ;; *************** function _differenceBetweenTimePeriod *****************
 13858 ;; Defined at:
 13859 ;;		line 318 in file "main.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;  start           3    0[BANK0 ] struct Time
 13862 ;;  stop            3    3[BANK0 ] struct Time
 13863 ;;  diff            1    6[BANK0 ] PTR struct Time
 13864 ;;		 -> update_menuLCD@diff(3), 
 13865 ;; Auto vars:     Size  Location     Type
 13866 ;;		None
 13867 ;; Return value:  Size  Location     Type
 13868 ;;                  1    wreg      void 
 13869 ;; Registers used:
 13870 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13876 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13879 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13880 ;;Total ram usage:        8 bytes
 13881 ;; Hardware stack levels used:    1
 13882 ;; Hardware stack levels required when called:    5
 13883 ;; This function calls:
 13884 ;;		Nothing
 13885 ;; This function is called by:
 13886 ;;		_update_menuLCD
 13887 ;; This function uses a non-reentrant model
 13888 ;;
 13889                           
 13890                           
 13891                           ;psect for function _differenceBetweenTimePeriod
 13892  171D                     _differenceBetweenTimePeriod:
 13893  171D                     l4692:	
 13894                           ;incstack = 0
 13895                           ; Regs used in _differenceBetweenTimePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13896                           
 13897                           
 13898                           ;main.c: 321: while (stop.s > start.s) {
 13899  171D  2F24               	goto	l4696
 13900  171E                     l4694:
 13901                           
 13902                           ;main.c: 322: --start.m;
 13903  171E  3001               	movlw	1
 13904  171F  02A1               	subwf	differenceBetweenTimePeriod@start+1,f
 13905                           
 13906                           ;main.c: 323: start.s += 60;
 13907  1720  303C               	movlw	60
 13908  1721  00A7               	movwf	??_differenceBetweenTimePeriod
 13909  1722  0827               	movf	??_differenceBetweenTimePeriod,w
 13910  1723  07A2               	addwf	differenceBetweenTimePeriod@start+2,f
 13911  1724                     l4696:
 13912  1724  0020               	movlb	0	; select bank0
 13913  1725  0825               	movf	differenceBetweenTimePeriod@stop+2,w
 13914  1726  0222               	subwf	differenceBetweenTimePeriod@start+2,w
 13915  1727  1C03               	skipc
 13916  1728  2F2A               	goto	u3971
 13917  1729  2F2B               	goto	u3970
 13918  172A                     u3971:
 13919  172A  2F1E               	goto	l4694
 13920  172B                     u3970:
 13921  172B                     l4698:
 13922                           
 13923                           ;main.c: 324: };main.c: 325: diff->s = start.s - stop.s;
 13924  172B  0825               	movf	differenceBetweenTimePeriod@stop+2,w
 13925  172C  0222               	subwf	differenceBetweenTimePeriod@start+2,w
 13926  172D  00A7               	movwf	??_differenceBetweenTimePeriod
 13927  172E  0826               	movf	differenceBetweenTimePeriod@diff,w
 13928  172F  3E02               	addlw	2
 13929  1730  0086               	movwf	6
 13930  1731  0187               	clrf	7
 13931  1732  0827               	movf	??_differenceBetweenTimePeriod,w
 13932  1733  0081               	movwf	1
 13933                           
 13934                           ;main.c: 326: while (stop.m > start.m) {
 13935  1734  2F3B               	goto	l4702
 13936  1735                     l4700:
 13937                           
 13938                           ;main.c: 327: --start.h;
 13939  1735  3001               	movlw	1
 13940  1736  02A0               	subwf	differenceBetweenTimePeriod@start,f
 13941                           
 13942                           ;main.c: 328: start.m += 60;
 13943  1737  303C               	movlw	60
 13944  1738  00A7               	movwf	??_differenceBetweenTimePeriod
 13945  1739  0827               	movf	??_differenceBetweenTimePeriod,w
 13946  173A  07A1               	addwf	differenceBetweenTimePeriod@start+1,f
 13947  173B                     l4702:
 13948  173B  0824               	movf	differenceBetweenTimePeriod@stop+1,w
 13949  173C  0221               	subwf	differenceBetweenTimePeriod@start+1,w
 13950  173D  1C03               	skipc
 13951  173E  2F40               	goto	u3981
 13952  173F  2F41               	goto	u3980
 13953  1740                     u3981:
 13954  1740  2F35               	goto	l4700
 13955  1741                     u3980:
 13956  1741                     l4704:
 13957                           
 13958                           ;main.c: 329: };main.c: 330: diff->m = start.m - stop.m;
 13959  1741  0824               	movf	differenceBetweenTimePeriod@stop+1,w
 13960  1742  0221               	subwf	differenceBetweenTimePeriod@start+1,w
 13961  1743  00A7               	movwf	??_differenceBetweenTimePeriod
 13962  1744  0A26               	incf	differenceBetweenTimePeriod@diff,w
 13963  1745  0086               	movwf	6
 13964  1746  0187               	clrf	7
 13965  1747  0827               	movf	??_differenceBetweenTimePeriod,w
 13966  1748  0081               	movwf	1
 13967                           
 13968                           ;main.c: 331: diff->h = start.h - stop.h;
 13969  1749  0823               	movf	differenceBetweenTimePeriod@stop,w
 13970  174A  0220               	subwf	differenceBetweenTimePeriod@start,w
 13971  174B  00A7               	movwf	??_differenceBetweenTimePeriod
 13972  174C  0826               	movf	differenceBetweenTimePeriod@diff,w
 13973  174D  0086               	movwf	6
 13974  174E  0187               	clrf	7
 13975  174F  0827               	movf	??_differenceBetweenTimePeriod,w
 13976  1750  0081               	movwf	1
 13977  1751                     l1319:
 13978  1751  0008               	return
 13979  1752                     __end_of_differenceBetweenTimePeriod:
 13980                           
 13981                           	psect	text16
 13982  1255                     __ptext16:	
 13983 ;; *************** function _TMR2_StopTimer *****************
 13984 ;; Defined at:
 13985 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 13986 ;; Parameters:    Size  Location     Type
 13987 ;;		None
 13988 ;; Auto vars:     Size  Location     Type
 13989 ;;		None
 13990 ;; Return value:  Size  Location     Type
 13991 ;;                  1    wreg      void 
 13992 ;; Registers used:
 13993 ;;		status,2, status,0, pclath, cstack
 13994 ;; Tracked objects:
 13995 ;;		On entry : 0/0
 13996 ;;		On exit  : 0/0
 13997 ;;		Unchanged: 0/0
 13998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14003 ;;Total ram usage:        0 bytes
 14004 ;; Hardware stack levels used:    1
 14005 ;; Hardware stack levels required when called:    6
 14006 ;; This function calls:
 14007 ;;		_TMR2_Stop
 14008 ;; This function is called by:
 14009 ;;		_update_menuLCD
 14010 ;;		_main
 14011 ;; This function uses a non-reentrant model
 14012 ;;
 14013                           
 14014                           
 14015                           ;psect for function _TMR2_StopTimer
 14016  1255                     _TMR2_StopTimer:
 14017  1255                     l4624:	
 14018                           ;incstack = 0
 14019                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 14020                           
 14021                           
 14022                           ;tmr2.c: 119: TMR2_Stop();
 14023  1255  3192  224E  3192   	fcall	_TMR2_Stop
 14024  1258                     l738:
 14025  1258  0008               	return
 14026  1259                     __end_of_TMR2_StopTimer:
 14027                           
 14028                           	psect	text17
 14029  124E                     __ptext17:	
 14030 ;; *************** function _TMR2_Stop *****************
 14031 ;; Defined at:
 14032 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 14033 ;; Parameters:    Size  Location     Type
 14034 ;;		None
 14035 ;; Auto vars:     Size  Location     Type
 14036 ;;		None
 14037 ;; Return value:  Size  Location     Type
 14038 ;;                  1    wreg      void 
 14039 ;; Registers used:
 14040 ;;		None
 14041 ;; Tracked objects:
 14042 ;;		On entry : 0/0
 14043 ;;		On exit  : 0/0
 14044 ;;		Unchanged: 0/0
 14045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14050 ;;Total ram usage:        0 bytes
 14051 ;; Hardware stack levels used:    1
 14052 ;; Hardware stack levels required when called:    5
 14053 ;; This function calls:
 14054 ;;		Nothing
 14055 ;; This function is called by:
 14056 ;;		_TMR2_StopTimer
 14057 ;; This function uses a non-reentrant model
 14058 ;;
 14059                           
 14060                           
 14061                           ;psect for function _TMR2_Stop
 14062  124E                     _TMR2_Stop:
 14063  124E                     l4494:	
 14064                           ;incstack = 0
 14065                           ; Regs used in _TMR2_Stop: []
 14066                           
 14067                           
 14068                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 14069  124E  0025               	movlb	5	; select bank5
 14070  124F  138E               	bcf	14,7	;volatile
 14071  1250                     l735:
 14072  1250  0008               	return
 14073  1251                     __end_of_TMR2_Stop:
 14074                           
 14075                           	psect	text18
 14076  124B                     __ptext18:	
 14077 ;; *************** function _PWM_Output_D4_Disable *****************
 14078 ;; Defined at:
 14079 ;;		line 338 in file "main.c"
 14080 ;; Parameters:    Size  Location     Type
 14081 ;;		None
 14082 ;; Auto vars:     Size  Location     Type
 14083 ;;		None
 14084 ;; Return value:  Size  Location     Type
 14085 ;;                  1    wreg      void 
 14086 ;; Registers used:
 14087 ;;		None
 14088 ;; Tracked objects:
 14089 ;;		On entry : 0/0
 14090 ;;		On exit  : 0/0
 14091 ;;		Unchanged: 0/0
 14092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14097 ;;Total ram usage:        0 bytes
 14098 ;; Hardware stack levels used:    1
 14099 ;; Hardware stack levels required when called:    5
 14100 ;; This function calls:
 14101 ;;		Nothing
 14102 ;; This function is called by:
 14103 ;;		_update_menuLCD
 14104 ;;		_main
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           
 14109                           ;psect for function _PWM_Output_D4_Disable
 14110  124B                     _PWM_Output_D4_Disable:
 14111  124B                     l4706:	
 14112                           ;incstack = 0
 14113                           ; Regs used in _PWM_Output_D4_Disable: []
 14114                           
 14115                           
 14116                           ;main.c: 339: PWM6EN = 0;
 14117  124B  0027               	movlb	7	; select bank7
 14118  124C  138E               	bcf	14,7	;volatile
 14119  124D                     l1325:
 14120  124D  0008               	return
 14121  124E                     __end_of_PWM_Output_D4_Disable:
 14122                           
 14123                           	psect	text19
 14124  13BD                     __ptext19:	
 14125 ;; *************** function _PWM6_LoadDutyValue *****************
 14126 ;; Defined at:
 14127 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;  dutyValue       2    0[BANK0 ] unsigned int 
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;		None
 14132 ;; Return value:  Size  Location     Type
 14133 ;;                  1    wreg      void 
 14134 ;; Registers used:
 14135 ;;		wreg, status,2, status,0
 14136 ;; Tracked objects:
 14137 ;;		On entry : 0/0
 14138 ;;		On exit  : 0/0
 14139 ;;		Unchanged: 0/0
 14140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14141 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14143 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14144 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14145 ;;Total ram usage:        4 bytes
 14146 ;; Hardware stack levels used:    1
 14147 ;; Hardware stack levels required when called:    5
 14148 ;; This function calls:
 14149 ;;		Nothing
 14150 ;; This function is called by:
 14151 ;;		_update_menuLCD
 14152 ;;		_main
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           
 14157                           ;psect for function _PWM6_LoadDutyValue
 14158  13BD                     _PWM6_LoadDutyValue:
 14159  13BD                     l4622:	
 14160                           ;incstack = 0
 14161                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14162                           
 14163                           
 14164                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 14165  13BD  0020               	movlb	0	; select bank0
 14166  13BE  0821               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 14167  13BF  00A3               	movwf	??_PWM6_LoadDutyValue+1
 14168  13C0  0820               	movf	PWM6_LoadDutyValue@dutyValue,w
 14169  13C1  00A2               	movwf	??_PWM6_LoadDutyValue
 14170  13C2  36A3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14171  13C3  0CA2               	rrf	??_PWM6_LoadDutyValue,f
 14172  13C4  36A3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14173  13C5  0CA2               	rrf	??_PWM6_LoadDutyValue,f
 14174  13C6  0822               	movf	??_PWM6_LoadDutyValue,w
 14175  13C7  0027               	movlb	7	; select bank7
 14176  13C8  008D               	movwf	13	;volatile
 14177                           
 14178                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 14179  13C9  0020               	movlb	0	; select bank0
 14180  13CA  0820               	movf	PWM6_LoadDutyValue@dutyValue,w
 14181  13CB  3903               	andlw	3
 14182  13CC  00A2               	movwf	??_PWM6_LoadDutyValue
 14183  13CD  3005               	movlw	5
 14184  13CE                     u3705:
 14185  13CE  35A2               	lslf	??_PWM6_LoadDutyValue,f
 14186  13CF  3EFF               	addlw	-1
 14187  13D0  1D03               	skipz
 14188  13D1  2BCE               	goto	u3705
 14189  13D2  3522               	lslf	??_PWM6_LoadDutyValue,w
 14190  13D3  0027               	movlb	7	; select bank7
 14191  13D4  008C               	movwf	12	;volatile
 14192  13D5                     l693:
 14193  13D5  0008               	return
 14194  13D6                     __end_of_PWM6_LoadDutyValue:
 14195                           
 14196                           	psect	text20
 14197  1425                     __ptext20:	
 14198 ;; *************** function _LCDstr *****************
 14199 ;; Defined at:
 14200 ;;		line 304 in file "main.c"
 14201 ;; Parameters:    Size  Location     Type
 14202 ;;  p               2    9[BANK0 ] PTR unsigned char 
 14203 ;;		 -> STR_7(4), update_menuLCD@l(3), update_menuLCD@tt(4), update_menuLCD@str(8), 
 14204 ;; Auto vars:     Size  Location     Type
 14205 ;;  c               1   14[BANK0 ] unsigned char 
 14206 ;; Return value:  Size  Location     Type
 14207 ;;                  1    wreg      void 
 14208 ;; Registers used:
 14209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14210 ;; Tracked objects:
 14211 ;;		On entry : 0/0
 14212 ;;		On exit  : 0/0
 14213 ;;		Unchanged: 0/0
 14214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14217 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14218 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14219 ;;Total ram usage:        6 bytes
 14220 ;; Hardware stack levels used:    1
 14221 ;; Hardware stack levels required when called:    8
 14222 ;; This function calls:
 14223 ;;		_LCDchar
 14224 ;; This function is called by:
 14225 ;;		_update_menuLCD
 14226 ;; This function uses a non-reentrant model
 14227 ;;
 14228                           
 14229                           
 14230                           ;psect for function _LCDstr
 14231  1425                     _LCDstr:
 14232  1425                     l4686:	
 14233                           ;incstack = 0
 14234                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14235                           
 14236                           
 14237                           ;main.c: 306: unsigned char c;;main.c: 308: while((c = *p++)) LCDchar(c);
 14238  1425  2C2A               	goto	l4690
 14239  1426                     l4688:
 14240  1426  082E               	movf	LCDstr@c,w
 14241  1427  3192  22CE  3194   	fcall	_LCDchar
 14242  142A                     l4690:
 14243  142A  0020               	movlb	0	; select bank0
 14244  142B  082A               	movf	LCDstr@p+1,w
 14245  142C  00AC               	movwf	??_LCDstr+1
 14246  142D  0829               	movf	LCDstr@p,w
 14247  142E  00AB               	movwf	??_LCDstr
 14248  142F  0AA9               	incf	LCDstr@p,f
 14249  1430  1903               	skipnz
 14250  1431  0AAA               	incf	LCDstr@p+1,f
 14251  1432  082B               	movf	??_LCDstr,w
 14252  1433  0084               	movwf	4
 14253  1434  082C               	movf	??_LCDstr+1,w
 14254  1435  0085               	movwf	5
 14255  1436  0800               	movf	0,w	;code access
 14256  1437  00AD               	movwf	??_LCDstr+2
 14257  1438  082D               	movf	??_LCDstr+2,w
 14258  1439  00AE               	movwf	LCDstr@c
 14259  143A  082E               	movf	LCDstr@c,w
 14260  143B  1D03               	btfss	3,2
 14261  143C  2C3E               	goto	u3961
 14262  143D  2C3F               	goto	u3960
 14263  143E                     u3961:
 14264  143E  2C26               	goto	l4688
 14265  143F                     u3960:
 14266  143F                     l1306:
 14267  143F  0008               	return
 14268  1440                     __end_of_LCDstr:
 14269                           
 14270                           	psect	text21
 14271  12CE                     __ptext21:	
 14272 ;; *************** function _LCDchar *****************
 14273 ;; Defined at:
 14274 ;;		line 299 in file "main.c"
 14275 ;; Parameters:    Size  Location     Type
 14276 ;;  c               1    wreg     unsigned char 
 14277 ;; Auto vars:     Size  Location     Type
 14278 ;;  c               1    8[BANK0 ] unsigned char 
 14279 ;; Return value:  Size  Location     Type
 14280 ;;                  1    wreg      void 
 14281 ;; Registers used:
 14282 ;;		wreg, status,2, status,0, pclath, cstack
 14283 ;; Tracked objects:
 14284 ;;		On entry : 0/0
 14285 ;;		On exit  : 0/0
 14286 ;;		Unchanged: 0/0
 14287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14291 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14292 ;;Total ram usage:        1 bytes
 14293 ;; Hardware stack levels used:    1
 14294 ;; Hardware stack levels required when called:    7
 14295 ;; This function calls:
 14296 ;;		_LCDsend2x4
 14297 ;; This function is called by:
 14298 ;;		_LCDstr
 14299 ;;		_update_menuLCD
 14300 ;; This function uses a non-reentrant model
 14301 ;;
 14302                           
 14303                           
 14304                           ;psect for function _LCDchar
 14305  12CE                     _LCDchar:
 14306                           
 14307                           ;incstack = 0
 14308                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 14309                           ;LCDchar@c stored from wreg
 14310  12CE  0020               	movlb	0	; select bank0
 14311  12CF  00A8               	movwf	LCDchar@c
 14312  12D0                     l4498:
 14313                           
 14314                           ;main.c: 301: LCDsend2x4(c, 0x01);
 14315  12D0  01A2               	clrf	LCDsend2x4@mode
 14316  12D1  0AA2               	incf	LCDsend2x4@mode,f
 14317  12D2  0828               	movf	LCDchar@c,w
 14318  12D3  318B  23F0  3192   	fcall	_LCDsend2x4
 14319  12D6                     l1300:
 14320  12D6  0008               	return
 14321  12D7                     __end_of_LCDchar:
 14322                           
 14323                           	psect	text22
 14324  127E                     __ptext22:	
 14325 ;; *************** function _LCDcmd *****************
 14326 ;; Defined at:
 14327 ;;		line 294 in file "main.c"
 14328 ;; Parameters:    Size  Location     Type
 14329 ;;  c               1    wreg     unsigned char 
 14330 ;; Auto vars:     Size  Location     Type
 14331 ;;  c               1    8[BANK0 ] unsigned char 
 14332 ;; Return value:  Size  Location     Type
 14333 ;;                  1    wreg      void 
 14334 ;; Registers used:
 14335 ;;		wreg, status,2, status,0, pclath, cstack
 14336 ;; Tracked objects:
 14337 ;;		On entry : 0/0
 14338 ;;		On exit  : 0/0
 14339 ;;		Unchanged: 0/0
 14340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14342 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14344 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14345 ;;Total ram usage:        1 bytes
 14346 ;; Hardware stack levels used:    1
 14347 ;; Hardware stack levels required when called:    7
 14348 ;; This function calls:
 14349 ;;		_LCDsend2x4
 14350 ;; This function is called by:
 14351 ;;		_update_menuLCD
 14352 ;; This function uses a non-reentrant model
 14353 ;;
 14354                           
 14355                           
 14356                           ;psect for function _LCDcmd
 14357  127E                     _LCDcmd:
 14358                           
 14359                           ;incstack = 0
 14360                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 14361                           ;LCDcmd@c stored from wreg
 14362  127E  0020               	movlb	0	; select bank0
 14363  127F  00A8               	movwf	LCDcmd@c
 14364  1280                     l4684:
 14365                           
 14366                           ;main.c: 296: LCDsend2x4(c, 0);
 14367  1280  01A2               	clrf	LCDsend2x4@mode
 14368  1281  0828               	movf	LCDcmd@c,w
 14369  1282  318B  23F0  3192   	fcall	_LCDsend2x4
 14370  1285                     l1297:
 14371  1285  0008               	return
 14372  1286                     __end_of_LCDcmd:
 14373                           
 14374                           	psect	text23
 14375  0AAF                     __ptext23:	
 14376 ;; *************** function _S1button *****************
 14377 ;; Defined at:
 14378 ;;		line 579 in file "main.c"
 14379 ;; Parameters:    Size  Location     Type
 14380 ;;		None
 14381 ;; Auto vars:     Size  Location     Type
 14382 ;;		None
 14383 ;; Return value:  Size  Location     Type
 14384 ;;                  1    wreg      void 
 14385 ;; Registers used:
 14386 ;;		wreg, status,2, status,0
 14387 ;; Tracked objects:
 14388 ;;		On entry : 0/0
 14389 ;;		On exit  : 0/0
 14390 ;;		Unchanged: 0/0
 14391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14395 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14396 ;;Total ram usage:        1 bytes
 14397 ;; Hardware stack levels used:    1
 14398 ;; Hardware stack levels required when called:    5
 14399 ;; This function calls:
 14400 ;;		Nothing
 14401 ;; This function is called by:
 14402 ;;		_editClock
 14403 ;;		_editTemp
 14404 ;;		_editLum
 14405 ;;		_toggleAlarms
 14406 ;;		_main
 14407 ;; This function uses a non-reentrant model
 14408 ;;
 14409                           
 14410                           
 14411                           ;psect for function _S1button
 14412  0AAF                     _S1button:
 14413  0AAF                     l5338:	
 14414                           ;incstack = 0
 14415                           ; Regs used in _S1button: [wreg+status,2+status,0]
 14416                           
 14417                           
 14418                           ;main.c: 581: if(modeFlag == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.tri
      +                          gger)){
 14419  0AAF  0020               	movlb	0	; select bank0
 14420  0AB0  0866               	movf	_modeFlag,w
 14421  0AB1  0467               	iorwf	_modeFlag+1,w
 14422  0AB2  1D03               	btfss	3,2
 14423  0AB3  2AB5               	goto	u4831
 14424  0AB4  2AB6               	goto	u4830
 14425  0AB5                     u4831:
 14426  0AB5  2ACF               	goto	l5350
 14427  0AB6                     u4830:
 14428  0AB6                     l5340:
 14429  0AB6  0862               	movf	_clkAlarm+3,w
 14430  0AB7  1D03               	btfss	3,2
 14431  0AB8  2ABA               	goto	u4841
 14432  0AB9  2ABB               	goto	u4840
 14433  0ABA                     u4841:
 14434  0ABA  2AC6               	goto	l5346
 14435  0ABB                     u4840:
 14436  0ABB                     l5342:
 14437  0ABB  0021               	movlb	1	; select bank1
 14438  0ABC  0845               	movf	(_tempAlarm^(0+128)+1),w
 14439  0ABD  1D03               	btfss	3,2
 14440  0ABE  2AC0               	goto	u4851
 14441  0ABF  2AC1               	goto	u4850
 14442  0AC0                     u4851:
 14443  0AC0  2AC6               	goto	l5346
 14444  0AC1                     u4850:
 14445  0AC1                     l5344:
 14446  0AC1  0842               	movf	(_lumAlarm^(0+128)+1),w
 14447  0AC2  1903               	btfsc	3,2
 14448  0AC3  2AC5               	goto	u4861
 14449  0AC4  2AC6               	goto	u4860
 14450  0AC5                     u4861:
 14451  0AC5  2ACF               	goto	l5350
 14452  0AC6                     u4860:
 14453  0AC6                     l5346:
 14454                           
 14455                           ;main.c: 582: clkAlarm.trigger = 0;
 14456  0AC6  0020               	movlb	0	; select bank0
 14457  0AC7  01E2               	clrf	_clkAlarm+3
 14458                           
 14459                           ;main.c: 583: tempAlarm.trigger = 0;
 14460  0AC8  0021               	movlb	1	; select bank1
 14461  0AC9  01C5               	clrf	(_tempAlarm^(0+128)+1)
 14462                           
 14463                           ;main.c: 584: lumAlarm.trigger = 0;
 14464  0ACA  01C2               	clrf	(_lumAlarm^(0+128)+1)
 14465  0ACB                     l5348:
 14466                           
 14467                           ;main.c: 585: updateLCD = 1;
 14468  0ACB  0020               	movlb	0	; select bank0
 14469  0ACC  01EF               	clrf	_updateLCD
 14470  0ACD  0AEF               	incf	_updateLCD,f
 14471                           
 14472                           ;main.c: 586: } else{
 14473  0ACE  2B04               	goto	l1414
 14474  0ACF                     l5350:
 14475                           
 14476                           ;main.c: 587: if(modeFlag == 1){
 14477  0ACF  0020               	movlb	0	; select bank0
 14478  0AD0  0366               	decf	_modeFlag,w
 14479  0AD1  0467               	iorwf	_modeFlag+1,w
 14480  0AD2  1D03               	btfss	3,2
 14481  0AD3  2AD5               	goto	u4871
 14482  0AD4  2AD6               	goto	u4870
 14483  0AD5                     u4871:
 14484  0AD5  2AF9               	goto	l5358
 14485  0AD6                     u4870:
 14486  0AD6                     l5352:
 14487                           
 14488                           ;main.c: 588: if(editingClockAlarm >= 1){
 14489  0AD6  0869               	movf	_editingClockAlarm+1,w
 14490  0AD7  3A80               	xorlw	128
 14491  0AD8  00A0               	movwf	??_S1button
 14492  0AD9  3080               	movlw	128
 14493  0ADA  0220               	subwf	??_S1button,w
 14494  0ADB  1D03               	skipz
 14495  0ADC  2ADF               	goto	u4885
 14496  0ADD  3001               	movlw	1
 14497  0ADE  0268               	subwf	_editingClockAlarm,w
 14498  0ADF                     u4885:
 14499  0ADF  1C03               	skipc
 14500  0AE0  2AE2               	goto	u4881
 14501  0AE1  2AE3               	goto	u4880
 14502  0AE2                     u4881:
 14503  0AE2  2AE8               	goto	l1416
 14504  0AE3                     u4880:
 14505  0AE3                     l5354:
 14506                           
 14507                           ;main.c: 589: editingClockAlarm++;
 14508  0AE3  3001               	movlw	1
 14509  0AE4  0020               	movlb	0	; select bank0
 14510  0AE5  07E8               	addwf	_editingClockAlarm,f
 14511  0AE6  3000               	movlw	0
 14512  0AE7  3DE9               	addwfc	_editingClockAlarm+1,f
 14513  0AE8                     l1416:
 14514                           
 14515                           ;main.c: 590: };main.c: 591: if(editingClockAlarm > 3){
 14516  0AE8  0020               	movlb	0	; select bank0
 14517  0AE9  0869               	movf	_editingClockAlarm+1,w
 14518  0AEA  3A80               	xorlw	128
 14519  0AEB  00A0               	movwf	??_S1button
 14520  0AEC  3080               	movlw	128
 14521  0AED  0220               	subwf	??_S1button,w
 14522  0AEE  1D03               	skipz
 14523  0AEF  2AF2               	goto	u4895
 14524  0AF0  3004               	movlw	4
 14525  0AF1  0268               	subwf	_editingClockAlarm,w
 14526  0AF2                     u4895:
 14527  0AF2  1C03               	skipc
 14528  0AF3  2AF5               	goto	u4891
 14529  0AF4  2AF6               	goto	u4890
 14530  0AF5                     u4891:
 14531  0AF5  2AF9               	goto	l5358
 14532  0AF6                     u4890:
 14533  0AF6                     l5356:
 14534                           
 14535                           ;main.c: 592: editingClockAlarm = 0;
 14536  0AF6  0020               	movlb	0	; select bank0
 14537  0AF7  01E8               	clrf	_editingClockAlarm
 14538  0AF8  01E9               	clrf	_editingClockAlarm+1
 14539  0AF9                     l5358:
 14540                           
 14541                           ;main.c: 593: };main.c: 594: };main.c: 595: if(editingClockAlarm == 0){
 14542  0AF9  0020               	movlb	0	; select bank0
 14543  0AFA  0868               	movf	_editingClockAlarm,w
 14544  0AFB  0469               	iorwf	_editingClockAlarm+1,w
 14545  0AFC  1D03               	btfss	3,2
 14546  0AFD  2AFF               	goto	u4901
 14547  0AFE  2B00               	goto	u4900
 14548  0AFF                     u4901:
 14549  0AFF  2B04               	goto	l1414
 14550  0B00                     u4900:
 14551  0B00                     l5360:
 14552                           
 14553                           ;main.c: 596: modeFlag++;
 14554  0B00  3001               	movlw	1
 14555  0B01  07E6               	addwf	_modeFlag,f
 14556  0B02  3000               	movlw	0
 14557  0B03  3DE7               	addwfc	_modeFlag+1,f
 14558  0B04                     l1414:
 14559                           
 14560                           ;main.c: 597: };main.c: 598: };main.c: 599: _delay((unsigned long)((50)*(1000000/4000.0)
      +                          ));
 14561  0B04  3011               	movlw	17
 14562  0B05  0020               	movlb	0	; select bank0
 14563  0B06  00A0               	movwf	??_S1button
 14564  0B07  303A               	movlw	58
 14565  0B08                     u6247:
 14566  0B08  0B89               	decfsz	9,f
 14567  0B09  2B08               	goto	u6247
 14568  0B0A  0BA0               	decfsz	??_S1button,f
 14569  0B0B  2B08               	goto	u6247
 14570  0B0C  0000               	nop
 14571  0B0D                     l1419:
 14572  0B0D  0008               	return
 14573  0B0E                     __end_of_S1button:
 14574                           
 14575                           	psect	text24
 14576  1630                     __ptext24:	
 14577 ;; *************** function _cmd_aa *****************
 14578 ;; Defined at:
 14579 ;;		line 922 in file "main.c"
 14580 ;; Parameters:    Size  Location     Type
 14581 ;;  num             2   15[BANK0 ] int 
 14582 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 14583 ;;		 -> main@buff(20), 
 14584 ;; Auto vars:     Size  Location     Type
 14585 ;;		None
 14586 ;; Return value:  Size  Location     Type
 14587 ;;                  1    wreg      void 
 14588 ;; Registers used:
 14589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14590 ;; Tracked objects:
 14591 ;;		On entry : 0/0
 14592 ;;		On exit  : 0/0
 14593 ;;		Unchanged: 0/0
 14594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14595 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14598 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14599 ;;Total ram usage:        4 bytes
 14600 ;; Hardware stack levels used:    1
 14601 ;; Hardware stack levels required when called:    9
 14602 ;; This function calls:
 14603 ;;		_sendERRORMessage
 14604 ;;		_sendOKMessage
 14605 ;; This function is called by:
 14606 ;;		_main
 14607 ;; This function uses a non-reentrant model
 14608 ;;
 14609                           
 14610                           
 14611                           ;psect for function _cmd_aa
 14612  1630                     _cmd_aa:
 14613  1630                     l5846:	
 14614                           ;incstack = 0
 14615                           ; Regs used in _cmd_aa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14616                           
 14617                           
 14618                           ;main.c: 923: if(buffer[2] == 0){
 14619  1630  0020               	movlb	0	; select bank0
 14620  1631  0831               	movf	cmd_aa@buffer,w
 14621  1632  3E02               	addlw	2
 14622  1633  0086               	movwf	6
 14623  1634  0187               	clrf	7
 14624  1635  0801               	movf	1,w
 14625  1636  1D03               	btfss	3,2
 14626  1637  2E39               	goto	u5761
 14627  1638  2E3A               	goto	u5760
 14628  1639                     u5761:
 14629  1639  2E43               	goto	l5852
 14630  163A                     u5760:
 14631  163A                     l5848:
 14632                           
 14633                           ;main.c: 924: ALAF = 'a';
 14634  163A  3061               	movlw	97
 14635  163B  00B2               	movwf	??_cmd_aa
 14636  163C  0832               	movf	??_cmd_aa,w
 14637  163D  00FD               	movwf	_ALAF
 14638  163E                     l5850:
 14639                           
 14640                           ;main.c: 925: sendOKMessage((uint8_t)0XC9);
 14641  163E  30C9               	movlw	201
 14642  163F  3194  240A  3196   	fcall	_sendOKMessage
 14643                           
 14644                           ;main.c: 926: } else if(buffer[2] == 1){
 14645  1642  2E59               	goto	l1541
 14646  1643                     l5852:
 14647  1643  0831               	movf	cmd_aa@buffer,w
 14648  1644  3E02               	addlw	2
 14649  1645  0086               	movwf	6
 14650  1646  0187               	clrf	7
 14651  1647  0301               	decf	1,w
 14652  1648  1D03               	btfss	3,2
 14653  1649  2E4B               	goto	u5771
 14654  164A  2E4C               	goto	u5770
 14655  164B                     u5771:
 14656  164B  2E55               	goto	l5858
 14657  164C                     u5770:
 14658  164C                     l5854:
 14659                           
 14660                           ;main.c: 927: ALAF = 'A';
 14661  164C  3041               	movlw	65
 14662  164D  00B2               	movwf	??_cmd_aa
 14663  164E  0832               	movf	??_cmd_aa,w
 14664  164F  00FD               	movwf	_ALAF
 14665  1650                     l5856:
 14666                           
 14667                           ;main.c: 928: sendOKMessage((uint8_t)0XC9);
 14668  1650  30C9               	movlw	201
 14669  1651  3194  240A  3196   	fcall	_sendOKMessage
 14670                           
 14671                           ;main.c: 929: } else {
 14672  1654  2E59               	goto	l1541
 14673  1655                     l5858:
 14674                           
 14675                           ;main.c: 930: sendERRORMessage((uint8_t)0XC9);
 14676  1655  30C9               	movlw	201
 14677  1656  3194  245E  3196   	fcall	_sendERRORMessage
 14678  1659                     l1541:
 14679  1659  0008               	return
 14680  165A                     __end_of_cmd_aa:
 14681                           
 14682                           	psect	text25
 14683  16E8                     __ptext25:	
 14684 ;; *************** function _cmd_dtl *****************
 14685 ;; Defined at:
 14686 ;;		line 910 in file "main.c"
 14687 ;; Parameters:    Size  Location     Type
 14688 ;;  num             2   15[BANK0 ] int 
 14689 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 14690 ;;		 -> main@buff(20), 
 14691 ;; Auto vars:     Size  Location     Type
 14692 ;;  lumAux          1   19[BANK0 ] unsigned char 
 14693 ;;  tempAux         1   18[BANK0 ] unsigned char 
 14694 ;; Return value:  Size  Location     Type
 14695 ;;                  1    wreg      void 
 14696 ;; Registers used:
 14697 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14698 ;; Tracked objects:
 14699 ;;		On entry : 0/0
 14700 ;;		On exit  : 0/0
 14701 ;;		Unchanged: 0/0
 14702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14703 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14704 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14706 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14707 ;;Total ram usage:        5 bytes
 14708 ;; Hardware stack levels used:    1
 14709 ;; Hardware stack levels required when called:    9
 14710 ;; This function calls:
 14711 ;;		_sendERRORMessage
 14712 ;;		_sendOKMessage
 14713 ;; This function is called by:
 14714 ;;		_main
 14715 ;; This function uses a non-reentrant model
 14716 ;;
 14717                           
 14718                           
 14719                           ;psect for function _cmd_dtl
 14720  16E8                     _cmd_dtl:
 14721  16E8                     l5832:	
 14722                           ;incstack = 0
 14723                           ; Regs used in _cmd_dtl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14724                           
 14725                           
 14726                           ;main.c: 911: uint8_t tempAux = buffer[2];
 14727  16E8  0020               	movlb	0	; select bank0
 14728  16E9  0831               	movf	cmd_dtl@buffer,w
 14729  16EA  0086               	movwf	6
 14730  16EB  0187               	clrf	7
 14731  16EC  3F42               	moviw [2]fsr1
 14732  16ED  00B2               	movwf	cmd_dtl@tempAux
 14733                           
 14734                           ;main.c: 912: uint8_t lumAux = buffer[3];
 14735  16EE  0831               	movf	cmd_dtl@buffer,w
 14736  16EF  0086               	movwf	6
 14737  16F0  0187               	clrf	7
 14738  16F1  3F43               	moviw [3]fsr1
 14739  16F2  00B3               	movwf	cmd_dtl@lumAux
 14740  16F3                     l5834:
 14741                           
 14742                           ;main.c: 913: if((tempAux >= 0 && tempAux < 50) && (lumAux >= 0 && lumAux < 8) && num ==
      +                           5){
 14743  16F3  3032               	movlw	50
 14744  16F4  0232               	subwf	cmd_dtl@tempAux,w
 14745  16F5  1803               	skipnc
 14746  16F6  2EF8               	goto	u5731
 14747  16F7  2EF9               	goto	u5730
 14748  16F8                     u5731:
 14749  16F8  2F18               	goto	l5844
 14750  16F9                     u5730:
 14751  16F9                     l5836:
 14752  16F9  3008               	movlw	8
 14753  16FA  0233               	subwf	cmd_dtl@lumAux,w
 14754  16FB  1803               	skipnc
 14755  16FC  2EFE               	goto	u5741
 14756  16FD  2EFF               	goto	u5740
 14757  16FE                     u5741:
 14758  16FE  2F18               	goto	l5844
 14759  16FF                     u5740:
 14760  16FF                     l5838:
 14761  16FF  3005               	movlw	5
 14762  1700  062F               	xorwf	cmd_dtl@num,w
 14763  1701  0430               	iorwf	cmd_dtl@num+1,w
 14764  1702  1D03               	btfss	3,2
 14765  1703  2F05               	goto	u5751
 14766  1704  2F06               	goto	u5750
 14767  1705                     u5751:
 14768  1705  2F18               	goto	l5844
 14769  1706                     u5750:
 14770  1706                     l5840:
 14771                           
 14772                           ;main.c: 914: tempAlarm.alarmTemp = buffer[2];
 14773  1706  0831               	movf	cmd_dtl@buffer,w
 14774  1707  0086               	movwf	6
 14775  1708  0187               	clrf	7
 14776  1709  3F42               	moviw [2]fsr1
 14777  170A  0021               	movlb	1	; select bank1
 14778  170B  00C4               	movwf	_tempAlarm^(0+128)
 14779                           
 14780                           ;main.c: 915: lumAlarm.alarmLum = buffer[3];
 14781  170C  0020               	movlb	0	; select bank0
 14782  170D  0831               	movf	cmd_dtl@buffer,w
 14783  170E  0086               	movwf	6
 14784  170F  0187               	clrf	7
 14785  1710  3F43               	moviw [3]fsr1
 14786  1711  0021               	movlb	1	; select bank1
 14787  1712  00C1               	movwf	_lumAlarm^(0+128)
 14788  1713                     l5842:
 14789                           
 14790                           ;main.c: 916: sendOKMessage((uint8_t)0XC8);
 14791  1713  30C8               	movlw	200
 14792  1714  3194  240A  3196   	fcall	_sendOKMessage
 14793                           
 14794                           ;main.c: 917: } else {
 14795  1717  2F1C               	goto	l1534
 14796  1718                     l5844:
 14797                           
 14798                           ;main.c: 918: sendERRORMessage((uint8_t)0XC8);
 14799  1718  30C8               	movlw	200
 14800  1719  3194  245E  3196   	fcall	_sendERRORMessage
 14801  171C                     l1534:
 14802  171C  0008               	return
 14803  171D                     __end_of_cmd_dtl:
 14804                           
 14805                           	psect	text26
 14806  0864                     __ptext26:	
 14807 ;; *************** function _cmd_dac *****************
 14808 ;; Defined at:
 14809 ;;		line 896 in file "main.c"
 14810 ;; Parameters:    Size  Location     Type
 14811 ;;  num             2   15[BANK0 ] int 
 14812 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 14813 ;;		 -> main@buff(20), 
 14814 ;; Auto vars:     Size  Location     Type
 14815 ;;  s               1   21[BANK0 ] unsigned char 
 14816 ;;  m               1   20[BANK0 ] unsigned char 
 14817 ;;  h               1   19[BANK0 ] unsigned char 
 14818 ;; Return value:  Size  Location     Type
 14819 ;;                  1    wreg      void 
 14820 ;; Registers used:
 14821 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14822 ;; Tracked objects:
 14823 ;;		On entry : 0/0
 14824 ;;		On exit  : 0/0
 14825 ;;		Unchanged: 0/0
 14826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14827 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14828 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14829 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14830 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14831 ;;Total ram usage:        7 bytes
 14832 ;; Hardware stack levels used:    1
 14833 ;; Hardware stack levels required when called:    9
 14834 ;; This function calls:
 14835 ;;		_sendERRORMessage
 14836 ;;		_sendOKMessage
 14837 ;; This function is called by:
 14838 ;;		_main
 14839 ;; This function uses a non-reentrant model
 14840 ;;
 14841                           
 14842                           
 14843                           ;psect for function _cmd_dac
 14844  0864                     _cmd_dac:
 14845  0864                     l5816:	
 14846                           ;incstack = 0
 14847                           ; Regs used in _cmd_dac: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14848                           
 14849                           
 14850                           ;main.c: 897: uint8_t h = buffer[2];
 14851  0864  0020               	movlb	0	; select bank0
 14852  0865  0831               	movf	cmd_dac@buffer,w
 14853  0866  0086               	movwf	6
 14854  0867  0187               	clrf	7
 14855  0868  3F42               	moviw [2]fsr1
 14856  0869  00B3               	movwf	cmd_dac@h
 14857                           
 14858                           ;main.c: 898: uint8_t m = buffer[3];
 14859  086A  0831               	movf	cmd_dac@buffer,w
 14860  086B  0086               	movwf	6
 14861  086C  0187               	clrf	7
 14862  086D  3F43               	moviw [3]fsr1
 14863  086E  00B4               	movwf	cmd_dac@m
 14864                           
 14865                           ;main.c: 899: uint8_t s = buffer[4];
 14866  086F  0831               	movf	cmd_dac@buffer,w
 14867  0870  0086               	movwf	6
 14868  0871  0187               	clrf	7
 14869  0872  3F44               	moviw [4]fsr1
 14870  0873  00B5               	movwf	cmd_dac@s
 14871  0874                     l5818:
 14872                           
 14873                           ;main.c: 900: if((h >= 0 && h < 24) && (m >= 0 && m < 60) && (s >= 0 && s < 60) && num =
      +                          = 6){
 14874  0874  3018               	movlw	24
 14875  0875  0233               	subwf	cmd_dac@h,w
 14876  0876  1803               	skipnc
 14877  0877  2879               	goto	u5691
 14878  0878  287A               	goto	u5690
 14879  0879                     u5691:
 14880  0879  289E               	goto	l5830
 14881  087A                     u5690:
 14882  087A                     l5820:
 14883  087A  303C               	movlw	60
 14884  087B  0234               	subwf	cmd_dac@m,w
 14885  087C  1803               	skipnc
 14886  087D  287F               	goto	u5701
 14887  087E  2880               	goto	u5700
 14888  087F                     u5701:
 14889  087F  289E               	goto	l5830
 14890  0880                     u5700:
 14891  0880                     l5822:
 14892  0880  303C               	movlw	60
 14893  0881  0235               	subwf	cmd_dac@s,w
 14894  0882  1803               	skipnc
 14895  0883  2885               	goto	u5711
 14896  0884  2886               	goto	u5710
 14897  0885                     u5711:
 14898  0885  289E               	goto	l5830
 14899  0886                     u5710:
 14900  0886                     l5824:
 14901  0886  3006               	movlw	6
 14902  0887  062F               	xorwf	cmd_dac@num,w
 14903  0888  0430               	iorwf	cmd_dac@num+1,w
 14904  0889  1D03               	btfss	3,2
 14905  088A  288C               	goto	u5721
 14906  088B  288D               	goto	u5720
 14907  088C                     u5721:
 14908  088C  289E               	goto	l5830
 14909  088D                     u5720:
 14910  088D                     l5826:
 14911                           
 14912                           ;main.c: 901: clkAlarm.alarmVal.h = h;
 14913  088D  0833               	movf	cmd_dac@h,w
 14914  088E  00B2               	movwf	??_cmd_dac
 14915  088F  0832               	movf	??_cmd_dac,w
 14916  0890  00DF               	movwf	_clkAlarm
 14917                           
 14918                           ;main.c: 902: clkAlarm.alarmVal.m = m;
 14919  0891  0834               	movf	cmd_dac@m,w
 14920  0892  00B2               	movwf	??_cmd_dac
 14921  0893  0832               	movf	??_cmd_dac,w
 14922  0894  00E0               	movwf	_clkAlarm+1
 14923                           
 14924                           ;main.c: 903: clkAlarm.alarmVal.s = s;
 14925  0895  0835               	movf	cmd_dac@s,w
 14926  0896  00B2               	movwf	??_cmd_dac
 14927  0897  0832               	movf	??_cmd_dac,w
 14928  0898  00E1               	movwf	_clkAlarm+2
 14929  0899                     l5828:
 14930                           
 14931                           ;main.c: 904: sendOKMessage((uint8_t)0XC7);
 14932  0899  30C7               	movlw	199
 14933  089A  3194  240A  3188   	fcall	_sendOKMessage
 14934                           
 14935                           ;main.c: 905: } else {
 14936  089D  28A2               	goto	l1529
 14937  089E                     l5830:
 14938                           
 14939                           ;main.c: 906: sendERRORMessage((uint8_t)0XC7);
 14940  089E  30C7               	movlw	199
 14941  089F  3194  245E  3188   	fcall	_sendERRORMessage
 14942  08A2                     l1529:
 14943  08A2  0008               	return
 14944  08A3                     __end_of_cmd_dac:
 14945                           
 14946                           	psect	text27
 14947  1787                     __ptext27:	
 14948 ;; *************** function _cmd_ra *****************
 14949 ;; Defined at:
 14950 ;;		line 881 in file "main.c"
 14951 ;; Parameters:    Size  Location     Type
 14952 ;;  num             2   15[BANK0 ] int 
 14953 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 14954 ;;		 -> main@buff(20), 
 14955 ;; Auto vars:     Size  Location     Type
 14956 ;;  buff            9   19[BANK0 ] unsigned char [9]
 14957 ;; Return value:  Size  Location     Type
 14958 ;;                  1    wreg      void 
 14959 ;; Registers used:
 14960 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14961 ;; Tracked objects:
 14962 ;;		On entry : 0/0
 14963 ;;		On exit  : 0/0
 14964 ;;		Unchanged: 0/0
 14965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14966 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14967 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14968 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14969 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14970 ;;Total ram usage:       13 bytes
 14971 ;; Hardware stack levels used:    1
 14972 ;; Hardware stack levels required when called:    8
 14973 ;; This function calls:
 14974 ;;		_sendMessage
 14975 ;; This function is called by:
 14976 ;;		_main
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           
 14981                           ;psect for function _cmd_ra
 14982  1787                     _cmd_ra:
 14983  1787                     l5808:	
 14984                           ;incstack = 0
 14985                           ; Regs used in _cmd_ra: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14986                           
 14987                           
 14988                           ;main.c: 882: uint8_t buff[9];;main.c: 883: buff[0] = (uint8_t)0xFD;
 14989  1787  30FD               	movlw	253
 14990  1788  0020               	movlb	0	; select bank0
 14991  1789  00B2               	movwf	??_cmd_ra
 14992  178A  0832               	movf	??_cmd_ra,w
 14993  178B  00B3               	movwf	cmd_ra@buff
 14994                           
 14995                           ;main.c: 884: buff[1] = (uint8_t)0XC6;
 14996  178C  30C6               	movlw	198
 14997  178D  00B2               	movwf	??_cmd_ra
 14998  178E  0832               	movf	??_cmd_ra,w
 14999  178F  00B4               	movwf	cmd_ra@buff+1
 15000                           
 15001                           ;main.c: 885: buff[2] = clkAlarm.alarmVal.h;
 15002  1790  085F               	movf	_clkAlarm,w
 15003  1791  00B2               	movwf	??_cmd_ra
 15004  1792  0832               	movf	??_cmd_ra,w
 15005  1793  00B5               	movwf	cmd_ra@buff+2
 15006                           
 15007                           ;main.c: 886: buff[3] = clkAlarm.alarmVal.m;
 15008  1794  0860               	movf	_clkAlarm+1,w
 15009  1795  00B2               	movwf	??_cmd_ra
 15010  1796  0832               	movf	??_cmd_ra,w
 15011  1797  00B6               	movwf	cmd_ra@buff+3
 15012                           
 15013                           ;main.c: 887: buff[4] = clkAlarm.alarmVal.s;
 15014  1798  0861               	movf	_clkAlarm+2,w
 15015  1799  00B2               	movwf	??_cmd_ra
 15016  179A  0832               	movf	??_cmd_ra,w
 15017  179B  00B7               	movwf	cmd_ra@buff+4
 15018                           
 15019                           ;main.c: 888: buff[5] = tempAlarm.alarmTemp;
 15020  179C  0021               	movlb	1	; select bank1
 15021  179D  0844               	movf	_tempAlarm^(0+128),w
 15022  179E  0020               	movlb	0	; select bank0
 15023  179F  00B2               	movwf	??_cmd_ra
 15024  17A0  0832               	movf	??_cmd_ra,w
 15025  17A1  00B8               	movwf	cmd_ra@buff+5
 15026                           
 15027                           ;main.c: 889: buff[6] = lumAlarm.alarmLum;
 15028  17A2  0021               	movlb	1	; select bank1
 15029  17A3  0841               	movf	_lumAlarm^(0+128),w
 15030  17A4  0020               	movlb	0	; select bank0
 15031  17A5  00B2               	movwf	??_cmd_ra
 15032  17A6  0832               	movf	??_cmd_ra,w
 15033  17A7  00B9               	movwf	cmd_ra@buff+6
 15034  17A8                     l5810:
 15035                           
 15036                           ;main.c: 890: buff[7] = ALAF == 'A' ? 1 : 0;
 15037  17A8  3041               	movlw	65
 15038  17A9  067D               	xorwf	_ALAF,w
 15039  17AA  1903               	btfsc	3,2
 15040  17AB  2FAD               	goto	u5671
 15041  17AC  2FAF               	goto	u5670
 15042  17AD                     u5671:
 15043  17AD  3001               	movlw	1
 15044  17AE  2FB0               	goto	u5680
 15045  17AF                     u5670:
 15046  17AF  3000               	movlw	0
 15047  17B0                     u5680:
 15048  17B0  00B2               	movwf	??_cmd_ra
 15049  17B1  0832               	movf	??_cmd_ra,w
 15050  17B2  00BA               	movwf	cmd_ra@buff+7
 15051  17B3                     l5812:
 15052                           
 15053                           ;main.c: 891: buff[8] = (uint8_t)0xFE;
 15054  17B3  30FE               	movlw	254
 15055  17B4  00B2               	movwf	??_cmd_ra
 15056  17B5  0832               	movf	??_cmd_ra,w
 15057  17B6  00BB               	movwf	cmd_ra@buff+8
 15058  17B7                     l5814:
 15059                           
 15060                           ;main.c: 893: sendMessage(9,buff);
 15061  17B7  3009               	movlw	9
 15062  17B8  00A3               	movwf	sendMessage@num
 15063  17B9  3000               	movlw	0
 15064  17BA  00A4               	movwf	sendMessage@num+1
 15065  17BB  3033               	movlw	(low (cmd_ra@buff| 0))& (0+255)
 15066  17BC  00B2               	movwf	??_cmd_ra
 15067  17BD  0832               	movf	??_cmd_ra,w
 15068  17BE  00A5               	movwf	sendMessage@buffer
 15069  17BF  3195  2579  3197   	fcall	_sendMessage
 15070  17C2                     l1524:
 15071  17C2  0008               	return
 15072  17C3                     __end_of_cmd_ra:
 15073                           
 15074                           	psect	text28
 15075  13F0                     __ptext28:	
 15076 ;; *************** function _cmd_mta *****************
 15077 ;; Defined at:
 15078 ;;		line 871 in file "main.c"
 15079 ;; Parameters:    Size  Location     Type
 15080 ;;  num             2   15[BANK0 ] int 
 15081 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15082 ;;		 -> main@buff(20), 
 15083 ;; Auto vars:     Size  Location     Type
 15084 ;;		None
 15085 ;; Return value:  Size  Location     Type
 15086 ;;                  1    wreg      void 
 15087 ;; Registers used:
 15088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15089 ;; Tracked objects:
 15090 ;;		On entry : 0/0
 15091 ;;		On exit  : 0/0
 15092 ;;		Unchanged: 0/0
 15093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15094 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15097 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15098 ;;Total ram usage:        3 bytes
 15099 ;; Hardware stack levels used:    1
 15100 ;; Hardware stack levels required when called:    9
 15101 ;; This function calls:
 15102 ;;		_sendERRORMessage
 15103 ;;		_sendOKMessage
 15104 ;; This function is called by:
 15105 ;;		_main
 15106 ;; This function uses a non-reentrant model
 15107 ;;
 15108                           
 15109                           
 15110                           ;psect for function _cmd_mta
 15111  13F0                     _cmd_mta:
 15112  13F0                     l5800:	
 15113                           ;incstack = 0
 15114                           ; Regs used in _cmd_mta: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15115                           
 15116                           
 15117                           ;main.c: 873: if(buffer[2] >= 0x00 && buffer[2] < 0x3c){
 15118  13F0  0020               	movlb	0	; select bank0
 15119  13F1  0831               	movf	cmd_mta@buffer,w
 15120  13F2  3E02               	addlw	2
 15121  13F3  0086               	movwf	6
 15122  13F4  0187               	clrf	7
 15123  13F5  303C               	movlw	60
 15124  13F6  0201               	subwf	1,w
 15125  13F7  1803               	skipnc
 15126  13F8  2BFA               	goto	u5661
 15127  13F9  2BFB               	goto	u5660
 15128  13FA                     u5661:
 15129  13FA  2C05               	goto	l5806
 15130  13FB                     u5660:
 15131  13FB                     l5802:
 15132                           
 15133                           ;main.c: 874: clkAlarm.alarmVal.s = buffer[2];
 15134  13FB  0831               	movf	cmd_mta@buffer,w
 15135  13FC  0086               	movwf	6
 15136  13FD  0187               	clrf	7
 15137  13FE  3F42               	moviw [2]fsr1
 15138  13FF  00E1               	movwf	_clkAlarm+2
 15139  1400                     l5804:
 15140                           
 15141                           ;main.c: 875: sendOKMessage((uint8_t)0XC4);
 15142  1400  30C4               	movlw	196
 15143  1401  3194  240A  3193   	fcall	_sendOKMessage
 15144                           
 15145                           ;main.c: 876: } else {
 15146  1404  2C09               	goto	l1521
 15147  1405                     l5806:
 15148                           
 15149                           ;main.c: 877: sendERRORMessage((uint8_t)0XC4);
 15150  1405  30C4               	movlw	196
 15151  1406  3194  245E  3193   	fcall	_sendERRORMessage
 15152  1409                     l1521:
 15153  1409  0008               	return
 15154  140A                     __end_of_cmd_mta:
 15155                           
 15156                           	psect	text29
 15157  0B0E                     __ptext29:	
 15158 ;; *************** function _cmd_mmp *****************
 15159 ;; Defined at:
 15160 ;;		line 850 in file "main.c"
 15161 ;; Parameters:    Size  Location     Type
 15162 ;;  num             2   15[BANK0 ] int 
 15163 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15164 ;;		 -> main@buff(20), 
 15165 ;; Auto vars:     Size  Location     Type
 15166 ;;  timerValue      2   28[BANK0 ] unsigned int 
 15167 ;; Return value:  Size  Location     Type
 15168 ;;                  1    wreg      void 
 15169 ;; Registers used:
 15170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15171 ;; Tracked objects:
 15172 ;;		On entry : 0/0
 15173 ;;		On exit  : 0/0
 15174 ;;		Unchanged: 0/0
 15175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15176 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15177 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15178 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15179 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15180 ;;Total ram usage:       15 bytes
 15181 ;; Hardware stack levels used:    1
 15182 ;; Hardware stack levels required when called:    9
 15183 ;; This function calls:
 15184 ;;		_TMR5_StartTimer
 15185 ;;		_TMR5_StopTimer
 15186 ;;		___lmul
 15187 ;;		_sendERRORMessage
 15188 ;;		_sendOKMessage
 15189 ;;		_setTimer5ReloadVal
 15190 ;; This function is called by:
 15191 ;;		_main
 15192 ;; This function uses a non-reentrant model
 15193 ;;
 15194                           
 15195                           
 15196                           ;psect for function _cmd_mmp
 15197  0B0E                     _cmd_mmp:
 15198  0B0E                     l5782:	
 15199                           ;incstack = 0
 15200                           ; Regs used in _cmd_mmp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15201                           
 15202                           
 15203                           ;main.c: 852: if(buffer[2] == 0x0){
 15204  0B0E  0020               	movlb	0	; select bank0
 15205  0B0F  0831               	movf	cmd_mmp@buffer,w
 15206  0B10  3E02               	addlw	2
 15207  0B11  0086               	movwf	6
 15208  0B12  0187               	clrf	7
 15209  0B13  0801               	movf	1,w
 15210  0B14  1D03               	btfss	3,2
 15211  0B15  2B17               	goto	u5621
 15212  0B16  2B18               	goto	u5620
 15213  0B17                     u5621:
 15214  0B17  2B1C               	goto	l5786
 15215  0B18                     u5620:
 15216  0B18                     l5784:
 15217                           
 15218                           ;main.c: 853: TMR5_StopTimer();
 15219  0B18  3192  2248  318B   	fcall	_TMR5_StopTimer
 15220                           
 15221                           ;main.c: 854: } else if(buffer[2] >= 0x01 && buffer[2] <= 0x10){
 15222  0B1B  2B75               	goto	l1513
 15223  0B1C                     l5786:
 15224  0B1C  0831               	movf	cmd_mmp@buffer,w
 15225  0B1D  3E02               	addlw	2
 15226  0B1E  0086               	movwf	6
 15227  0B1F  0187               	clrf	7
 15228  0B20  0801               	movf	1,w
 15229  0B21  1903               	btfsc	3,2
 15230  0B22  2B24               	goto	u5631
 15231  0B23  2B25               	goto	u5630
 15232  0B24                     u5631:
 15233  0B24  2B71               	goto	l5798
 15234  0B25                     u5630:
 15235  0B25                     l5788:
 15236  0B25  0831               	movf	cmd_mmp@buffer,w
 15237  0B26  3E02               	addlw	2
 15238  0B27  0086               	movwf	6
 15239  0B28  0187               	clrf	7
 15240  0B29  3011               	movlw	17
 15241  0B2A  0201               	subwf	1,w
 15242  0B2B  1803               	skipnc
 15243  0B2C  2B2E               	goto	u5641
 15244  0B2D  2B2F               	goto	u5640
 15245  0B2E                     u5641:
 15246  0B2E  2B71               	goto	l5798
 15247  0B2F                     u5640:
 15248  0B2F                     l5790:
 15249                           
 15250                           ;main.c: 855: PMON = buffer[2];
 15251  0B2F  0831               	movf	cmd_mmp@buffer,w
 15252  0B30  0086               	movwf	6
 15253  0B31  0187               	clrf	7
 15254  0B32  3F42               	moviw [2]fsr1
 15255  0B33  0021               	movlb	1	; select bank1
 15256  0B34  00ED               	movwf	_PMON^(0+128)
 15257  0B35                     l5792:
 15258                           
 15259                           ;main.c: 861: uint16_t timerValue = (uint32_t)65536 - (uint32_t)((uint32_t)((uint32_t)PM
      +                          ON*(uint32_t)31000)/8);
 15260  0B35  086D               	movf	_PMON^(0+128),w
 15261  0B36  0020               	movlb	0	; select bank0
 15262  0B37  00B2               	movwf	??_cmd_mmp
 15263  0B38  01B3               	clrf	??_cmd_mmp+1
 15264  0B39  01B4               	clrf	??_cmd_mmp+2
 15265  0B3A  01B5               	clrf	??_cmd_mmp+3
 15266  0B3B  0835               	movf	??_cmd_mmp+3,w
 15267  0B3C  00A3               	movwf	___lmul@multiplier+3
 15268  0B3D  0834               	movf	??_cmd_mmp+2,w
 15269  0B3E  00A2               	movwf	___lmul@multiplier+2
 15270  0B3F  0833               	movf	??_cmd_mmp+1,w
 15271  0B40  00A1               	movwf	___lmul@multiplier+1
 15272  0B41  0832               	movf	??_cmd_mmp,w
 15273  0B42  00A0               	movwf	___lmul@multiplier
 15274  0B43  3000               	movlw	0
 15275  0B44  00A7               	movwf	___lmul@multiplicand+3
 15276  0B45  3000               	movlw	0
 15277  0B46  00A6               	movwf	___lmul@multiplicand+2
 15278  0B47  3079               	movlw	121
 15279  0B48  00A5               	movwf	___lmul@multiplicand+1
 15280  0B49  3018               	movlw	24
 15281  0B4A  00A4               	movwf	___lmul@multiplicand
 15282  0B4B  3196  26B4  318B   	fcall	___lmul
 15283  0B4E  0020               	movlb	0	; select bank0
 15284  0B4F  0820               	movf	?___lmul,w
 15285  0B50  00B6               	movwf	??_cmd_mmp+4
 15286  0B51  0821               	movf	?___lmul+1,w
 15287  0B52  00B7               	movwf	??_cmd_mmp+5
 15288  0B53  0822               	movf	?___lmul+2,w
 15289  0B54  00B8               	movwf	??_cmd_mmp+6
 15290  0B55  0823               	movf	?___lmul+3,w
 15291  0B56  00B9               	movwf	??_cmd_mmp+7
 15292  0B57  3003               	movlw	3
 15293  0B58                     u5655:
 15294  0B58  36B9               	lsrf	??_cmd_mmp+7,f
 15295  0B59  0CB8               	rrf	??_cmd_mmp+6,f
 15296  0B5A  0CB7               	rrf	??_cmd_mmp+5,f
 15297  0B5B  0CB6               	rrf	??_cmd_mmp+4,f
 15298  0B5C                     u5650:
 15299  0B5C  0B89               	decfsz	9,f
 15300  0B5D  2B58               	goto	u5655
 15301  0B5E  01BA               	clrf	??_cmd_mmp+8
 15302  0B5F  01BB               	clrf	??_cmd_mmp+9
 15303  0B60  0836               	movf	??_cmd_mmp+4,w
 15304  0B61  023A               	subwf	??_cmd_mmp+8,w
 15305  0B62  00BC               	movwf	cmd_mmp@timerValue
 15306  0B63  0837               	movf	??_cmd_mmp+5,w
 15307  0B64  3B3B               	subwfb	??_cmd_mmp+9,w
 15308  0B65  00BD               	movwf	cmd_mmp@timerValue+1
 15309  0B66                     l5794:
 15310                           
 15311                           ;main.c: 862: setTimer5ReloadVal(timerValue);
 15312  0B66  083D               	movf	cmd_mmp@timerValue+1,w
 15313  0B67  00A1               	movwf	setTimer5ReloadVal@val+1
 15314  0B68  083C               	movf	cmd_mmp@timerValue,w
 15315  0B69  00A0               	movwf	setTimer5ReloadVal@val
 15316  0B6A  3192  22C5  318B   	fcall	_setTimer5ReloadVal
 15317  0B6D                     l5796:
 15318                           
 15319                           ;main.c: 863: TMR5_StartTimer();
 15320  0B6D  3192  2245  318B   	fcall	_TMR5_StartTimer
 15321                           
 15322                           ;main.c: 864: } else {
 15323  0B70  2B75               	goto	l1513
 15324  0B71                     l5798:
 15325                           
 15326                           ;main.c: 865: sendERRORMessage((uint8_t)0XC4);
 15327  0B71  30C4               	movlw	196
 15328  0B72  3194  245E  318B   	fcall	_sendERRORMessage
 15329  0B75                     l1513:
 15330                           
 15331                           ;main.c: 866: };main.c: 867: sendOKMessage((uint8_t)0XC4);
 15332  0B75  30C4               	movlw	196
 15333  0B76  3194  240A  318B   	fcall	_sendOKMessage
 15334  0B79                     l1516:
 15335  0B79  0008               	return
 15336  0B7A                     __end_of_cmd_mmp:
 15337                           
 15338                           	psect	text30
 15339  0800                     __ptext30:	
 15340 ;; *************** function _cmd_rp *****************
 15341 ;; Defined at:
 15342 ;;		line 838 in file "main.c"
 15343 ;; Parameters:    Size  Location     Type
 15344 ;;  num             2   15[BANK0 ] int 
 15345 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15346 ;;		 -> main@buff(20), 
 15347 ;; Auto vars:     Size  Location     Type
 15348 ;;  buff            5   19[BANK0 ] unsigned char [5]
 15349 ;; Return value:  Size  Location     Type
 15350 ;;                  1    wreg      void 
 15351 ;; Registers used:
 15352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15353 ;; Tracked objects:
 15354 ;;		On entry : 0/0
 15355 ;;		On exit  : 0/0
 15356 ;;		Unchanged: 0/0
 15357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15358 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15359 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15361 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15362 ;;Total ram usage:        9 bytes
 15363 ;; Hardware stack levels used:    1
 15364 ;; Hardware stack levels required when called:    8
 15365 ;; This function calls:
 15366 ;;		_sendMessage
 15367 ;; This function is called by:
 15368 ;;		_main
 15369 ;; This function uses a non-reentrant model
 15370 ;;
 15371                           
 15372                           
 15373                           ;psect for function _cmd_rp
 15374  0800                     _cmd_rp:
 15375  0800                     l5778:	
 15376                           ;incstack = 0
 15377                           ; Regs used in _cmd_rp: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15378                           
 15379                           
 15380                           ;main.c: 839: uint8_t buff[5];;main.c: 840: buff[0] = (uint8_t)0xFD;
 15381  0800  30FD               	movlw	253
 15382  0801  0020               	movlb	0	; select bank0
 15383  0802  00B2               	movwf	??_cmd_rp
 15384  0803  0832               	movf	??_cmd_rp,w
 15385  0804  00B3               	movwf	cmd_rp@buff
 15386                           
 15387                           ;main.c: 841: buff[1] = (uint8_t)0XC3;
 15388  0805  30C3               	movlw	195
 15389  0806  00B2               	movwf	??_cmd_rp
 15390  0807  0832               	movf	??_cmd_rp,w
 15391  0808  00B4               	movwf	cmd_rp@buff+1
 15392                           
 15393                           ;main.c: 842: buff[2] = PMON;
 15394  0809  0021               	movlb	1	; select bank1
 15395  080A  086D               	movf	_PMON^(0+128),w
 15396  080B  0020               	movlb	0	; select bank0
 15397  080C  00B2               	movwf	??_cmd_rp
 15398  080D  0832               	movf	??_cmd_rp,w
 15399  080E  00B5               	movwf	cmd_rp@buff+2
 15400                           
 15401                           ;main.c: 843: buff[3] = TALA;
 15402  080F  0021               	movlb	1	; select bank1
 15403  0810  086C               	movf	_TALA^(0+128),w
 15404  0811  0020               	movlb	0	; select bank0
 15405  0812  00B2               	movwf	??_cmd_rp
 15406  0813  0832               	movf	??_cmd_rp,w
 15407  0814  00B6               	movwf	cmd_rp@buff+3
 15408                           
 15409                           ;main.c: 844: buff[4] = (uint8_t)0xFE;
 15410  0815  30FE               	movlw	254
 15411  0816  00B2               	movwf	??_cmd_rp
 15412  0817  0832               	movf	??_cmd_rp,w
 15413  0818  00B7               	movwf	cmd_rp@buff+4
 15414  0819                     l5780:
 15415                           
 15416                           ;main.c: 846: sendMessage(5,buff);
 15417  0819  3005               	movlw	5
 15418  081A  00A3               	movwf	sendMessage@num
 15419  081B  3000               	movlw	0
 15420  081C  00A4               	movwf	sendMessage@num+1
 15421  081D  3033               	movlw	(low (cmd_rp@buff| 0))& (0+255)
 15422  081E  00B2               	movwf	??_cmd_rp
 15423  081F  0832               	movf	??_cmd_rp,w
 15424  0820  00A5               	movwf	sendMessage@buffer
 15425  0821  3195  2579  3188   	fcall	_sendMessage
 15426  0824                     l1509:
 15427  0824  0008               	return
 15428  0825                     __end_of_cmd_rp:
 15429                           
 15430                           	psect	text31
 15431  1558                     __ptext31:	
 15432 ;; *************** function _cmd_rtl *****************
 15433 ;; Defined at:
 15434 ;;		line 827 in file "main.c"
 15435 ;; Parameters:    Size  Location     Type
 15436 ;;  num             2   15[BANK0 ] int 
 15437 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15438 ;;		 -> main@buff(20), 
 15439 ;; Auto vars:     Size  Location     Type
 15440 ;;  buff            5   19[BANK0 ] unsigned char [5]
 15441 ;; Return value:  Size  Location     Type
 15442 ;;                  1    wreg      void 
 15443 ;; Registers used:
 15444 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15445 ;; Tracked objects:
 15446 ;;		On entry : 0/0
 15447 ;;		On exit  : 0/0
 15448 ;;		Unchanged: 0/0
 15449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15450 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15451 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15452 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15453 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15454 ;;Total ram usage:        9 bytes
 15455 ;; Hardware stack levels used:    1
 15456 ;; Hardware stack levels required when called:    8
 15457 ;; This function calls:
 15458 ;;		_sendMessage
 15459 ;; This function is called by:
 15460 ;;		_main
 15461 ;; This function uses a non-reentrant model
 15462 ;;
 15463                           
 15464                           
 15465                           ;psect for function _cmd_rtl
 15466  1558                     _cmd_rtl:
 15467  1558                     l5774:	
 15468                           ;incstack = 0
 15469                           ; Regs used in _cmd_rtl: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15470                           
 15471                           
 15472                           ;main.c: 828: uint8_t buff[5];;main.c: 829: buff[0] = (uint8_t)0xFD;
 15473  1558  30FD               	movlw	253
 15474  1559  0020               	movlb	0	; select bank0
 15475  155A  00B2               	movwf	??_cmd_rtl
 15476  155B  0832               	movf	??_cmd_rtl,w
 15477  155C  00B3               	movwf	cmd_rtl@buff
 15478                           
 15479                           ;main.c: 830: buff[1] = (uint8_t)0XC2;
 15480  155D  30C2               	movlw	194
 15481  155E  00B2               	movwf	??_cmd_rtl
 15482  155F  0832               	movf	??_cmd_rtl,w
 15483  1560  00B4               	movwf	cmd_rtl@buff+1
 15484                           
 15485                           ;main.c: 831: buff[2] = temp;
 15486  1561  086C               	movf	_temp,w
 15487  1562  00B2               	movwf	??_cmd_rtl
 15488  1563  0832               	movf	??_cmd_rtl,w
 15489  1564  00B5               	movwf	cmd_rtl@buff+2
 15490                           
 15491                           ;main.c: 832: buff[3] = lumLevel;
 15492  1565  086B               	movf	_lumLevel,w
 15493  1566  00B2               	movwf	??_cmd_rtl
 15494  1567  0832               	movf	??_cmd_rtl,w
 15495  1568  00B6               	movwf	cmd_rtl@buff+3
 15496                           
 15497                           ;main.c: 833: buff[4] = (uint8_t)0xFE;
 15498  1569  30FE               	movlw	254
 15499  156A  00B2               	movwf	??_cmd_rtl
 15500  156B  0832               	movf	??_cmd_rtl,w
 15501  156C  00B7               	movwf	cmd_rtl@buff+4
 15502  156D                     l5776:
 15503                           
 15504                           ;main.c: 835: sendMessage(5,buff);
 15505  156D  3005               	movlw	5
 15506  156E  00A3               	movwf	sendMessage@num
 15507  156F  3000               	movlw	0
 15508  1570  00A4               	movwf	sendMessage@num+1
 15509  1571  3033               	movlw	(low (cmd_rtl@buff| 0))& (0+255)
 15510  1572  00B2               	movwf	??_cmd_rtl
 15511  1573  0832               	movf	??_cmd_rtl,w
 15512  1574  00A5               	movwf	sendMessage@buffer
 15513  1575  3195  2579  3195   	fcall	_sendMessage
 15514  1578                     l1506:
 15515  1578  0008               	return
 15516  1579                     __end_of_cmd_rtl:
 15517                           
 15518                           	psect	text32
 15519  15E5                     __ptext32:	
 15520 ;; *************** function _cmd_rc *****************
 15521 ;; Defined at:
 15522 ;;		line 800 in file "main.c"
 15523 ;; Parameters:    Size  Location     Type
 15524 ;;  num             2   15[BANK0 ] int 
 15525 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15526 ;;		 -> main@buff(20), 
 15527 ;; Auto vars:     Size  Location     Type
 15528 ;;  buff            6   19[BANK0 ] unsigned char [6]
 15529 ;; Return value:  Size  Location     Type
 15530 ;;                  1    wreg      void 
 15531 ;; Registers used:
 15532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15533 ;; Tracked objects:
 15534 ;;		On entry : 0/0
 15535 ;;		On exit  : 0/0
 15536 ;;		Unchanged: 0/0
 15537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15538 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15539 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15540 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15541 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15542 ;;Total ram usage:       10 bytes
 15543 ;; Hardware stack levels used:    1
 15544 ;; Hardware stack levels required when called:    8
 15545 ;; This function calls:
 15546 ;;		_sendMessage
 15547 ;; This function is called by:
 15548 ;;		_main
 15549 ;; This function uses a non-reentrant model
 15550 ;;
 15551                           
 15552                           
 15553                           ;psect for function _cmd_rc
 15554  15E5                     _cmd_rc:
 15555  15E5                     l5754:	
 15556                           ;incstack = 0
 15557                           ; Regs used in _cmd_rc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15558                           
 15559                           
 15560                           ;main.c: 801: uint8_t buff[6];;main.c: 802: buff[0] = (uint8_t)0xFD;
 15561  15E5  30FD               	movlw	253
 15562  15E6  0020               	movlb	0	; select bank0
 15563  15E7  00B2               	movwf	??_cmd_rc
 15564  15E8  0832               	movf	??_cmd_rc,w
 15565  15E9  00B3               	movwf	cmd_rc@buff
 15566                           
 15567                           ;main.c: 803: buff[1] = (uint8_t)0xC0;
 15568  15EA  30C0               	movlw	192
 15569  15EB  00B2               	movwf	??_cmd_rc
 15570  15EC  0832               	movf	??_cmd_rc,w
 15571  15ED  00B4               	movwf	cmd_rc@buff+1
 15572                           
 15573                           ;main.c: 804: buff[2] = t.h;
 15574  15EE  0863               	movf	_t,w
 15575  15EF  00B2               	movwf	??_cmd_rc
 15576  15F0  0832               	movf	??_cmd_rc,w
 15577  15F1  00B5               	movwf	cmd_rc@buff+2
 15578                           
 15579                           ;main.c: 805: buff[3] = t.m;
 15580  15F2  0864               	movf	_t+1,w
 15581  15F3  00B2               	movwf	??_cmd_rc
 15582  15F4  0832               	movf	??_cmd_rc,w
 15583  15F5  00B6               	movwf	cmd_rc@buff+3
 15584                           
 15585                           ;main.c: 806: buff[4] = t.s;
 15586  15F6  0865               	movf	_t+2,w
 15587  15F7  00B2               	movwf	??_cmd_rc
 15588  15F8  0832               	movf	??_cmd_rc,w
 15589  15F9  00B7               	movwf	cmd_rc@buff+4
 15590                           
 15591                           ;main.c: 807: buff[5] = (uint8_t)0xFE;
 15592  15FA  30FE               	movlw	254
 15593  15FB  00B2               	movwf	??_cmd_rc
 15594  15FC  0832               	movf	??_cmd_rc,w
 15595  15FD  00B8               	movwf	cmd_rc@buff+5
 15596  15FE                     l5756:
 15597                           
 15598                           ;main.c: 809: sendMessage(6,buff);
 15599  15FE  3006               	movlw	6
 15600  15FF  00A3               	movwf	sendMessage@num
 15601  1600  3000               	movlw	0
 15602  1601  00A4               	movwf	sendMessage@num+1
 15603  1602  3033               	movlw	(low (cmd_rc@buff| 0))& (0+255)
 15604  1603  00B2               	movwf	??_cmd_rc
 15605  1604  0832               	movf	??_cmd_rc,w
 15606  1605  00A5               	movwf	sendMessage@buffer
 15607  1606  3195  2579  3195   	fcall	_sendMessage
 15608  1609                     l1498:
 15609  1609  0008               	return
 15610  160A                     __end_of_cmd_rc:
 15611                           
 15612                           	psect	text33
 15613  0825                     __ptext33:	
 15614 ;; *************** function _cmd_sc *****************
 15615 ;; Defined at:
 15616 ;;		line 812 in file "main.c"
 15617 ;; Parameters:    Size  Location     Type
 15618 ;;  num             2   15[BANK0 ] int 
 15619 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
 15620 ;;		 -> main@buff(20), 
 15621 ;; Auto vars:     Size  Location     Type
 15622 ;;  s               1   21[BANK0 ] unsigned char 
 15623 ;;  m               1   20[BANK0 ] unsigned char 
 15624 ;;  h               1   19[BANK0 ] unsigned char 
 15625 ;; Return value:  Size  Location     Type
 15626 ;;                  1    wreg      void 
 15627 ;; Registers used:
 15628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15629 ;; Tracked objects:
 15630 ;;		On entry : 0/0
 15631 ;;		On exit  : 0/0
 15632 ;;		Unchanged: 0/0
 15633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15634 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15635 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15637 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15638 ;;Total ram usage:        7 bytes
 15639 ;; Hardware stack levels used:    1
 15640 ;; Hardware stack levels required when called:    9
 15641 ;; This function calls:
 15642 ;;		_sendERRORMessage
 15643 ;;		_sendOKMessage
 15644 ;; This function is called by:
 15645 ;;		_main
 15646 ;; This function uses a non-reentrant model
 15647 ;;
 15648                           
 15649                           
 15650                           ;psect for function _cmd_sc
 15651  0825                     _cmd_sc:
 15652  0825                     l5758:	
 15653                           ;incstack = 0
 15654                           ; Regs used in _cmd_sc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15655                           
 15656                           
 15657                           ;main.c: 813: uint8_t h = buffer[2];
 15658  0825  0020               	movlb	0	; select bank0
 15659  0826  0831               	movf	cmd_sc@buffer,w
 15660  0827  0086               	movwf	6
 15661  0828  0187               	clrf	7
 15662  0829  3F42               	moviw [2]fsr1
 15663  082A  00B3               	movwf	cmd_sc@h
 15664                           
 15665                           ;main.c: 814: uint8_t m = buffer[3];
 15666  082B  0831               	movf	cmd_sc@buffer,w
 15667  082C  0086               	movwf	6
 15668  082D  0187               	clrf	7
 15669  082E  3F43               	moviw [3]fsr1
 15670  082F  00B4               	movwf	cmd_sc@m
 15671                           
 15672                           ;main.c: 815: uint8_t s = buffer[4];
 15673  0830  0831               	movf	cmd_sc@buffer,w
 15674  0831  0086               	movwf	6
 15675  0832  0187               	clrf	7
 15676  0833  3F44               	moviw [4]fsr1
 15677  0834  00B5               	movwf	cmd_sc@s
 15678  0835                     l5760:
 15679                           
 15680                           ;main.c: 816: if((h >= 0 && h < 24) && (m >= 0 && m < 60) && (s >= 0 && s < 60) && num =
      +                          = 6){
 15681  0835  3018               	movlw	24
 15682  0836  0233               	subwf	cmd_sc@h,w
 15683  0837  1803               	skipnc
 15684  0838  283A               	goto	u5581
 15685  0839  283B               	goto	u5580
 15686  083A                     u5581:
 15687  083A  285F               	goto	l5772
 15688  083B                     u5580:
 15689  083B                     l5762:
 15690  083B  303C               	movlw	60
 15691  083C  0234               	subwf	cmd_sc@m,w
 15692  083D  1803               	skipnc
 15693  083E  2840               	goto	u5591
 15694  083F  2841               	goto	u5590
 15695  0840                     u5591:
 15696  0840  285F               	goto	l5772
 15697  0841                     u5590:
 15698  0841                     l5764:
 15699  0841  303C               	movlw	60
 15700  0842  0235               	subwf	cmd_sc@s,w
 15701  0843  1803               	skipnc
 15702  0844  2846               	goto	u5601
 15703  0845  2847               	goto	u5600
 15704  0846                     u5601:
 15705  0846  285F               	goto	l5772
 15706  0847                     u5600:
 15707  0847                     l5766:
 15708  0847  3006               	movlw	6
 15709  0848  062F               	xorwf	cmd_sc@num,w
 15710  0849  0430               	iorwf	cmd_sc@num+1,w
 15711  084A  1D03               	btfss	3,2
 15712  084B  284D               	goto	u5611
 15713  084C  284E               	goto	u5610
 15714  084D                     u5611:
 15715  084D  285F               	goto	l5772
 15716  084E                     u5610:
 15717  084E                     l5768:
 15718                           
 15719                           ;main.c: 817: t.h = h;
 15720  084E  0833               	movf	cmd_sc@h,w
 15721  084F  00B2               	movwf	??_cmd_sc
 15722  0850  0832               	movf	??_cmd_sc,w
 15723  0851  00E3               	movwf	_t
 15724                           
 15725                           ;main.c: 818: t.m = m;
 15726  0852  0834               	movf	cmd_sc@m,w
 15727  0853  00B2               	movwf	??_cmd_sc
 15728  0854  0832               	movf	??_cmd_sc,w
 15729  0855  00E4               	movwf	_t+1
 15730                           
 15731                           ;main.c: 819: t.s = s;
 15732  0856  0835               	movf	cmd_sc@s,w
 15733  0857  00B2               	movwf	??_cmd_sc
 15734  0858  0832               	movf	??_cmd_sc,w
 15735  0859  00E5               	movwf	_t+2
 15736  085A                     l5770:
 15737                           
 15738                           ;main.c: 820: sendOKMessage((uint8_t)0XC1);
 15739  085A  30C1               	movlw	193
 15740  085B  3194  240A  3188   	fcall	_sendOKMessage
 15741                           
 15742                           ;main.c: 821: } else {
 15743  085E  2863               	goto	l1503
 15744  085F                     l5772:
 15745                           
 15746                           ;main.c: 822: sendERRORMessage((uint8_t)0XC1);
 15747  085F  30C1               	movlw	193
 15748  0860  3194  245E  3188   	fcall	_sendERRORMessage
 15749  0863                     l1503:
 15750  0863  0008               	return
 15751  0864                     __end_of_cmd_sc:
 15752                           
 15753                           	psect	text34
 15754  12C5                     __ptext34:	
 15755 ;; *************** function _setTimer5ReloadVal *****************
 15756 ;; Defined at:
 15757 ;;		line 99 in file "mcc_generated_files/tmr5.c"
 15758 ;; Parameters:    Size  Location     Type
 15759 ;;  val             2    0[BANK0 ] unsigned int 
 15760 ;; Auto vars:     Size  Location     Type
 15761 ;;		None
 15762 ;; Return value:  Size  Location     Type
 15763 ;;                  1    wreg      void 
 15764 ;; Registers used:
 15765 ;;		wreg
 15766 ;; Tracked objects:
 15767 ;;		On entry : 0/0
 15768 ;;		On exit  : 0/0
 15769 ;;		Unchanged: 0/0
 15770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15771 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15774 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15775 ;;Total ram usage:        2 bytes
 15776 ;; Hardware stack levels used:    1
 15777 ;; Hardware stack levels required when called:    5
 15778 ;; This function calls:
 15779 ;;		Nothing
 15780 ;; This function is called by:
 15781 ;;		_cmd_mmp
 15782 ;; This function uses a non-reentrant model
 15783 ;;
 15784                           
 15785                           
 15786                           ;psect for function _setTimer5ReloadVal
 15787  12C5                     _setTimer5ReloadVal:
 15788  12C5                     l5028:	
 15789                           ;incstack = 0
 15790                           ; Regs used in _setTimer5ReloadVal: [wreg]
 15791                           
 15792                           
 15793                           ;tmr5.c: 100: timer5ReloadVal = val;
 15794  12C5  0020               	movlb	0	; select bank0
 15795  12C6  0821               	movf	setTimer5ReloadVal@val+1,w
 15796  12C7  0021               	movlb	1	; select bank1
 15797  12C8  00DB               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 15798  12C9  0020               	movlb	0	; select bank0
 15799  12CA  0820               	movf	setTimer5ReloadVal@val,w
 15800  12CB  0021               	movlb	1	; select bank1
 15801  12CC  00DA               	movwf	_timer5ReloadVal^(0+128)	;volatile
 15802  12CD                     l646:
 15803  12CD  0008               	return
 15804  12CE                     __end_of_setTimer5ReloadVal:
 15805                           
 15806                           	psect	text35
 15807  16B4                     __ptext35:	
 15808 ;; *************** function ___lmul *****************
 15809 ;; Defined at:
 15810 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul32.c"
 15811 ;; Parameters:    Size  Location     Type
 15812 ;;  multiplier      4    0[BANK0 ] unsigned long 
 15813 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 15814 ;; Auto vars:     Size  Location     Type
 15815 ;;  product         4    8[BANK0 ] unsigned long 
 15816 ;; Return value:  Size  Location     Type
 15817 ;;                  4    0[BANK0 ] unsigned long 
 15818 ;; Registers used:
 15819 ;;		wreg, status,2, status,0
 15820 ;; Tracked objects:
 15821 ;;		On entry : 0/0
 15822 ;;		On exit  : 0/0
 15823 ;;		Unchanged: 0/0
 15824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15825 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15826 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15828 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15829 ;;Total ram usage:       12 bytes
 15830 ;; Hardware stack levels used:    1
 15831 ;; Hardware stack levels required when called:    5
 15832 ;; This function calls:
 15833 ;;		Nothing
 15834 ;; This function is called by:
 15835 ;;		_cmd_mmp
 15836 ;; This function uses a non-reentrant model
 15837 ;;
 15838                           
 15839                           
 15840                           ;psect for function ___lmul
 15841  16B4                     ___lmul:
 15842  16B4                     l5374:	
 15843                           ;incstack = 0
 15844                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 15845                           
 15846  16B4  3000               	movlw	0
 15847  16B5  0020               	movlb	0	; select bank0
 15848  16B6  00AB               	movwf	___lmul@product+3
 15849  16B7  3000               	movlw	0
 15850  16B8  00AA               	movwf	___lmul@product+2
 15851  16B9  3000               	movlw	0
 15852  16BA  00A9               	movwf	___lmul@product+1
 15853  16BB  3000               	movlw	0
 15854  16BC  00A8               	movwf	___lmul@product
 15855  16BD                     l5376:
 15856  16BD  1C20               	btfss	___lmul@multiplier,0
 15857  16BE  2EC0               	goto	u4911
 15858  16BF  2EC1               	goto	u4910
 15859  16C0                     u4911:
 15860  16C0  2EC9               	goto	l5380
 15861  16C1                     u4910:
 15862  16C1                     l5378:
 15863  16C1  0824               	movf	___lmul@multiplicand,w
 15864  16C2  07A8               	addwf	___lmul@product,f
 15865  16C3  0825               	movf	___lmul@multiplicand+1,w
 15866  16C4  3DA9               	addwfc	___lmul@product+1,f
 15867  16C5  0826               	movf	___lmul@multiplicand+2,w
 15868  16C6  3DAA               	addwfc	___lmul@product+2,f
 15869  16C7  0827               	movf	___lmul@multiplicand+3,w
 15870  16C8  3DAB               	addwfc	___lmul@product+3,f
 15871  16C9                     l5380:
 15872  16C9  3001               	movlw	1
 15873  16CA                     u4925:
 15874  16CA  35A4               	lslf	___lmul@multiplicand,f
 15875  16CB  0DA5               	rlf	___lmul@multiplicand+1,f
 15876  16CC  0DA6               	rlf	___lmul@multiplicand+2,f
 15877  16CD  0DA7               	rlf	___lmul@multiplicand+3,f
 15878  16CE  0B89               	decfsz	9,f
 15879  16CF  2ECA               	goto	u4925
 15880  16D0                     l5382:
 15881  16D0  3001               	movlw	1
 15882  16D1                     u4935:
 15883  16D1  36A3               	lsrf	___lmul@multiplier+3,f
 15884  16D2  0CA2               	rrf	___lmul@multiplier+2,f
 15885  16D3  0CA1               	rrf	___lmul@multiplier+1,f
 15886  16D4  0CA0               	rrf	___lmul@multiplier,f
 15887  16D5  0B89               	decfsz	9,f
 15888  16D6  2ED1               	goto	u4935
 15889  16D7  0823               	movf	___lmul@multiplier+3,w
 15890  16D8  0422               	iorwf	___lmul@multiplier+2,w
 15891  16D9  0421               	iorwf	___lmul@multiplier+1,w
 15892  16DA  0420               	iorwf	___lmul@multiplier,w
 15893  16DB  1D03               	skipz
 15894  16DC  2EDE               	goto	u4941
 15895  16DD  2EDF               	goto	u4940
 15896  16DE                     u4941:
 15897  16DE  2EBD               	goto	l5376
 15898  16DF                     u4940:
 15899  16DF                     l5384:
 15900  16DF  082B               	movf	___lmul@product+3,w
 15901  16E0  00A3               	movwf	?___lmul+3
 15902  16E1  082A               	movf	___lmul@product+2,w
 15903  16E2  00A2               	movwf	?___lmul+2
 15904  16E3  0829               	movf	___lmul@product+1,w
 15905  16E4  00A1               	movwf	?___lmul+1
 15906  16E5  0828               	movf	___lmul@product,w
 15907  16E6  00A0               	movwf	?___lmul
 15908  16E7                     l1805:
 15909  16E7  0008               	return
 15910  16E8                     __end_of___lmul:
 15911                           
 15912                           	psect	text36
 15913  1248                     __ptext36:	
 15914 ;; *************** function _TMR5_StopTimer *****************
 15915 ;; Defined at:
 15916 ;;		line 109 in file "mcc_generated_files/tmr5.c"
 15917 ;; Parameters:    Size  Location     Type
 15918 ;;		None
 15919 ;; Auto vars:     Size  Location     Type
 15920 ;;		None
 15921 ;; Return value:  Size  Location     Type
 15922 ;;                  1    wreg      void 
 15923 ;; Registers used:
 15924 ;;		None
 15925 ;; Tracked objects:
 15926 ;;		On entry : 0/0
 15927 ;;		On exit  : 0/0
 15928 ;;		Unchanged: 0/0
 15929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15934 ;;Total ram usage:        0 bytes
 15935 ;; Hardware stack levels used:    1
 15936 ;; Hardware stack levels required when called:    5
 15937 ;; This function calls:
 15938 ;;		Nothing
 15939 ;; This function is called by:
 15940 ;;		_cmd_mmp
 15941 ;; This function uses a non-reentrant model
 15942 ;;
 15943                           
 15944                           
 15945                           ;psect for function _TMR5_StopTimer
 15946  1248                     _TMR5_StopTimer:
 15947  1248                     l5032:	
 15948                           ;incstack = 0
 15949                           ; Regs used in _TMR5_StopTimer: []
 15950                           
 15951                           
 15952                           ;tmr5.c: 112: T5CONbits.TMR5ON = 0;
 15953  1248  0024               	movlb	4	; select bank4
 15954  1249  101A               	bcf	26,0	;volatile
 15955  124A                     l652:
 15956  124A  0008               	return
 15957  124B                     __end_of_TMR5_StopTimer:
 15958                           
 15959                           	psect	text37
 15960  1245                     __ptext37:	
 15961 ;; *************** function _TMR5_StartTimer *****************
 15962 ;; Defined at:
 15963 ;;		line 103 in file "mcc_generated_files/tmr5.c"
 15964 ;; Parameters:    Size  Location     Type
 15965 ;;		None
 15966 ;; Auto vars:     Size  Location     Type
 15967 ;;		None
 15968 ;; Return value:  Size  Location     Type
 15969 ;;                  1    wreg      void 
 15970 ;; Registers used:
 15971 ;;		None
 15972 ;; Tracked objects:
 15973 ;;		On entry : 0/0
 15974 ;;		On exit  : 0/0
 15975 ;;		Unchanged: 0/0
 15976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15981 ;;Total ram usage:        0 bytes
 15982 ;; Hardware stack levels used:    1
 15983 ;; Hardware stack levels required when called:    5
 15984 ;; This function calls:
 15985 ;;		Nothing
 15986 ;; This function is called by:
 15987 ;;		_cmd_mmp
 15988 ;; This function uses a non-reentrant model
 15989 ;;
 15990                           
 15991                           
 15992                           ;psect for function _TMR5_StartTimer
 15993  1245                     _TMR5_StartTimer:
 15994  1245                     l5030:	
 15995                           ;incstack = 0
 15996                           ; Regs used in _TMR5_StartTimer: []
 15997                           
 15998                           
 15999                           ;tmr5.c: 106: T5CONbits.TMR5ON = 1;
 16000  1245  0024               	movlb	4	; select bank4
 16001  1246  141A               	bsf	26,0	;volatile
 16002  1247                     l649:
 16003  1247  0008               	return
 16004  1248                     __end_of_TMR5_StartTimer:
 16005                           
 16006                           	psect	text38
 16007  140A                     __ptext38:	
 16008 ;; *************** function _sendOKMessage *****************
 16009 ;; Defined at:
 16010 ;;		line 780 in file "main.c"
 16011 ;; Parameters:    Size  Location     Type
 16012 ;;  cmd             1    wreg     unsigned char 
 16013 ;; Auto vars:     Size  Location     Type
 16014 ;;  cmd             1   10[BANK0 ] unsigned char 
 16015 ;;  bufw            4   11[BANK0 ] unsigned char [4]
 16016 ;; Return value:  Size  Location     Type
 16017 ;;                  1    wreg      void 
 16018 ;; Registers used:
 16019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16020 ;; Tracked objects:
 16021 ;;		On entry : 0/0
 16022 ;;		On exit  : 0/0
 16023 ;;		Unchanged: 0/0
 16024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16026 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16027 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16028 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16029 ;;Total ram usage:        6 bytes
 16030 ;; Hardware stack levels used:    1
 16031 ;; Hardware stack levels required when called:    8
 16032 ;; This function calls:
 16033 ;;		_sendMessage
 16034 ;; This function is called by:
 16035 ;;		_cmd_sc
 16036 ;;		_cmd_mmp
 16037 ;;		_cmd_mta
 16038 ;;		_cmd_dac
 16039 ;;		_cmd_dtl
 16040 ;;		_cmd_aa
 16041 ;; This function uses a non-reentrant model
 16042 ;;
 16043                           
 16044                           
 16045                           ;psect for function _sendOKMessage
 16046  140A                     _sendOKMessage:
 16047                           
 16048                           ;incstack = 0
 16049                           ; Regs used in _sendOKMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16050                           ;sendOKMessage@cmd stored from wreg
 16051  140A  0020               	movlb	0	; select bank0
 16052  140B  00AA               	movwf	sendOKMessage@cmd
 16053  140C                     l5362:
 16054                           
 16055                           ;main.c: 781: uint8_t bufw[4];;main.c: 782: bufw[0] = (uint8_t)0xFD;
 16056  140C  30FD               	movlw	253
 16057  140D  00A9               	movwf	??_sendOKMessage
 16058  140E  0829               	movf	??_sendOKMessage,w
 16059  140F  00AB               	movwf	sendOKMessage@bufw
 16060                           
 16061                           ;main.c: 783: bufw[1] = (uint8_t)cmd;
 16062  1410  082A               	movf	sendOKMessage@cmd,w
 16063  1411  00A9               	movwf	??_sendOKMessage
 16064  1412  0829               	movf	??_sendOKMessage,w
 16065  1413  00AC               	movwf	sendOKMessage@bufw+1
 16066  1414                     l5364:
 16067                           
 16068                           ;main.c: 784: bufw[2] = (uint8_t)0;
 16069  1414  01AD               	clrf	sendOKMessage@bufw+2
 16070  1415                     l5366:
 16071                           
 16072                           ;main.c: 785: bufw[3] = (uint8_t)0xFE;
 16073  1415  30FE               	movlw	254
 16074  1416  00A9               	movwf	??_sendOKMessage
 16075  1417  0829               	movf	??_sendOKMessage,w
 16076  1418  00AE               	movwf	sendOKMessage@bufw+3
 16077  1419                     l5368:
 16078                           
 16079                           ;main.c: 787: sendMessage(4,bufw);
 16080  1419  3004               	movlw	4
 16081  141A  00A3               	movwf	sendMessage@num
 16082  141B  3000               	movlw	0
 16083  141C  00A4               	movwf	sendMessage@num+1
 16084  141D  302B               	movlw	(low (sendOKMessage@bufw| 0))& (0+255)
 16085  141E  00A9               	movwf	??_sendOKMessage
 16086  141F  0829               	movf	??_sendOKMessage,w
 16087  1420  00A5               	movwf	sendMessage@buffer
 16088  1421  3195  2579  3194   	fcall	_sendMessage
 16089  1424                     l1492:
 16090  1424  0008               	return
 16091  1425                     __end_of_sendOKMessage:
 16092                           
 16093                           	psect	text39
 16094  145E                     __ptext39:	
 16095 ;; *************** function _sendERRORMessage *****************
 16096 ;; Defined at:
 16097 ;;		line 790 in file "main.c"
 16098 ;; Parameters:    Size  Location     Type
 16099 ;;  cmd             1    wreg     unsigned char 
 16100 ;; Auto vars:     Size  Location     Type
 16101 ;;  cmd             1   10[BANK0 ] unsigned char 
 16102 ;;  bufw            4   11[BANK0 ] unsigned char [4]
 16103 ;; Return value:  Size  Location     Type
 16104 ;;                  1    wreg      void 
 16105 ;; Registers used:
 16106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16107 ;; Tracked objects:
 16108 ;;		On entry : 0/0
 16109 ;;		On exit  : 0/0
 16110 ;;		Unchanged: 0/0
 16111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16113 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16114 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16115 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16116 ;;Total ram usage:        6 bytes
 16117 ;; Hardware stack levels used:    1
 16118 ;; Hardware stack levels required when called:    8
 16119 ;; This function calls:
 16120 ;;		_sendMessage
 16121 ;; This function is called by:
 16122 ;;		_cmd_sc
 16123 ;;		_cmd_mmp
 16124 ;;		_cmd_mta
 16125 ;;		_cmd_dac
 16126 ;;		_cmd_dtl
 16127 ;;		_cmd_aa
 16128 ;; This function uses a non-reentrant model
 16129 ;;
 16130                           
 16131                           
 16132                           ;psect for function _sendERRORMessage
 16133  145E                     _sendERRORMessage:
 16134                           
 16135                           ;incstack = 0
 16136                           ; Regs used in _sendERRORMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16137                           ;sendERRORMessage@cmd stored from wreg
 16138  145E  0020               	movlb	0	; select bank0
 16139  145F  00AA               	movwf	sendERRORMessage@cmd
 16140  1460                     l5370:
 16141                           
 16142                           ;main.c: 791: uint8_t bufw[4];;main.c: 792: bufw[0] = (uint8_t)0xFD;
 16143  1460  30FD               	movlw	253
 16144  1461  00A9               	movwf	??_sendERRORMessage
 16145  1462  0829               	movf	??_sendERRORMessage,w
 16146  1463  00AB               	movwf	sendERRORMessage@bufw
 16147                           
 16148                           ;main.c: 793: bufw[1] = (uint8_t)cmd;
 16149  1464  082A               	movf	sendERRORMessage@cmd,w
 16150  1465  00A9               	movwf	??_sendERRORMessage
 16151  1466  0829               	movf	??_sendERRORMessage,w
 16152  1467  00AC               	movwf	sendERRORMessage@bufw+1
 16153                           
 16154                           ;main.c: 794: bufw[2] = (uint8_t)0xFF;
 16155  1468  30FF               	movlw	255
 16156  1469  00A9               	movwf	??_sendERRORMessage
 16157  146A  0829               	movf	??_sendERRORMessage,w
 16158  146B  00AD               	movwf	sendERRORMessage@bufw+2
 16159                           
 16160                           ;main.c: 795: bufw[3] = (uint8_t)0xFE;
 16161  146C  30FE               	movlw	254
 16162  146D  00A9               	movwf	??_sendERRORMessage
 16163  146E  0829               	movf	??_sendERRORMessage,w
 16164  146F  00AE               	movwf	sendERRORMessage@bufw+3
 16165  1470                     l5372:
 16166                           
 16167                           ;main.c: 797: sendMessage(4,bufw);
 16168  1470  3004               	movlw	4
 16169  1471  00A3               	movwf	sendMessage@num
 16170  1472  3000               	movlw	0
 16171  1473  00A4               	movwf	sendMessage@num+1
 16172  1474  302B               	movlw	(low (sendERRORMessage@bufw| 0))& (0+255)
 16173  1475  00A9               	movwf	??_sendERRORMessage
 16174  1476  0829               	movf	??_sendERRORMessage,w
 16175  1477  00A5               	movwf	sendMessage@buffer
 16176  1478  3195  2579  3194   	fcall	_sendMessage
 16177  147B                     l1495:
 16178  147B  0008               	return
 16179  147C                     __end_of_sendERRORMessage:
 16180                           
 16181                           	psect	text40
 16182  1579                     __ptext40:	
 16183 ;; *************** function _sendMessage *****************
 16184 ;; Defined at:
 16185 ;;		line 772 in file "main.c"
 16186 ;; Parameters:    Size  Location     Type
 16187 ;;  num             2    3[BANK0 ] int 
 16188 ;;  buffer          1    5[BANK0 ] PTR unsigned char 
 16189 ;;		 -> cmd_ra@buff(9), cmd_rp@buff(5), cmd_rtl@buff(5), cmd_rc@buff(6), 
 16190 ;;		 -> sendERRORMessage@bufw(4), sendOKMessage@bufw(4), 
 16191 ;; Auto vars:     Size  Location     Type
 16192 ;;  n               2    7[BANK0 ] int 
 16193 ;; Return value:  Size  Location     Type
 16194 ;;                  1    wreg      void 
 16195 ;; Registers used:
 16196 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16197 ;; Tracked objects:
 16198 ;;		On entry : 0/0
 16199 ;;		On exit  : 0/0
 16200 ;;		Unchanged: 0/0
 16201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16202 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16203 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16204 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16205 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16206 ;;Total ram usage:        6 bytes
 16207 ;; Hardware stack levels used:    1
 16208 ;; Hardware stack levels required when called:    7
 16209 ;; This function calls:
 16210 ;;		_putch
 16211 ;; This function is called by:
 16212 ;;		_sendOKMessage
 16213 ;;		_sendERRORMessage
 16214 ;;		_cmd_rc
 16215 ;;		_cmd_rtl
 16216 ;;		_cmd_rp
 16217 ;;		_cmd_ra
 16218 ;; This function uses a non-reentrant model
 16219 ;;
 16220                           
 16221                           
 16222                           ;psect for function _sendMessage
 16223  1579                     _sendMessage:
 16224  1579                     l4820:	
 16225                           ;incstack = 0
 16226                           ; Regs used in _sendMessage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16227                           
 16228                           
 16229                           ;main.c: 773: int n = 0;
 16230  1579  0020               	movlb	0	; select bank0
 16231  157A  01A7               	clrf	sendMessage@n
 16232  157B  01A8               	clrf	sendMessage@n+1
 16233                           
 16234                           ;main.c: 774: while(n<num){
 16235  157C  2D8D               	goto	l4826
 16236  157D                     l4822:
 16237                           
 16238                           ;main.c: 775: putch(buffer[n]);
 16239  157D  0020               	movlb	0	; select bank0
 16240  157E  0827               	movf	sendMessage@n,w
 16241  157F  0725               	addwf	sendMessage@buffer,w
 16242  1580  00A6               	movwf	??_sendMessage
 16243  1581  0826               	movf	??_sendMessage,w
 16244  1582  0086               	movwf	6
 16245  1583  0187               	clrf	7
 16246  1584  0801               	movf	1,w
 16247  1585  3192  226F  3195   	fcall	_putch
 16248  1588                     l4824:
 16249                           
 16250                           ;main.c: 776: n++;
 16251  1588  3001               	movlw	1
 16252  1589  0020               	movlb	0	; select bank0
 16253  158A  07A7               	addwf	sendMessage@n,f
 16254  158B  3000               	movlw	0
 16255  158C  3DA8               	addwfc	sendMessage@n+1,f
 16256  158D                     l4826:
 16257  158D  0828               	movf	sendMessage@n+1,w
 16258  158E  3A80               	xorlw	128
 16259  158F  00A6               	movwf	??_sendMessage
 16260  1590  0824               	movf	sendMessage@num+1,w
 16261  1591  3A80               	xorlw	128
 16262  1592  0226               	subwf	??_sendMessage,w
 16263  1593  1D03               	skipz
 16264  1594  2D97               	goto	u4175
 16265  1595  0823               	movf	sendMessage@num,w
 16266  1596  0227               	subwf	sendMessage@n,w
 16267  1597                     u4175:
 16268  1597  1C03               	skipc
 16269  1598  2D9A               	goto	u4171
 16270  1599  2D9B               	goto	u4170
 16271  159A                     u4171:
 16272  159A  2D7D               	goto	l4822
 16273  159B                     u4170:
 16274  159B                     l1489:
 16275  159B  0008               	return
 16276  159C                     __end_of_sendMessage:
 16277                           
 16278                           	psect	text41
 16279  126F                     __ptext41:	
 16280 ;; *************** function _putch *****************
 16281 ;; Defined at:
 16282 ;;		line 176 in file "mcc_generated_files/eusart.c"
 16283 ;; Parameters:    Size  Location     Type
 16284 ;;  txData          1    wreg     unsigned char 
 16285 ;; Auto vars:     Size  Location     Type
 16286 ;;  txData          1    2[BANK0 ] unsigned char 
 16287 ;; Return value:  Size  Location     Type
 16288 ;;                  1    wreg      void 
 16289 ;; Registers used:
 16290 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16291 ;; Tracked objects:
 16292 ;;		On entry : 0/0
 16293 ;;		On exit  : 0/0
 16294 ;;		Unchanged: 0/0
 16295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16299 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16300 ;;Total ram usage:        1 bytes
 16301 ;; Hardware stack levels used:    1
 16302 ;; Hardware stack levels required when called:    6
 16303 ;; This function calls:
 16304 ;;		_EUSART_Write
 16305 ;; This function is called by:
 16306 ;;		_sendMessage
 16307 ;; This function uses a non-reentrant model
 16308 ;;
 16309                           
 16310                           
 16311                           ;psect for function _putch
 16312  126F                     _putch:
 16313                           
 16314                           ;incstack = 0
 16315                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16316                           ;putch@txData stored from wreg
 16317  126F  0020               	movlb	0	; select bank0
 16318  1270  00A2               	movwf	putch@txData
 16319  1271                     l4496:
 16320                           
 16321                           ;eusart.c: 178: EUSART_Write(txData);
 16322  1271  0822               	movf	putch@txData,w
 16323  1272  3196  2686  3192   	fcall	_EUSART_Write
 16324  1275                     l915:
 16325  1275  0008               	return
 16326  1276                     __end_of_putch:
 16327                           
 16328                           	psect	text42
 16329  1686                     __ptext42:	
 16330 ;; *************** function _EUSART_Write *****************
 16331 ;; Defined at:
 16332 ;;		line 148 in file "mcc_generated_files/eusart.c"
 16333 ;; Parameters:    Size  Location     Type
 16334 ;;  txData          1    wreg     unsigned char 
 16335 ;; Auto vars:     Size  Location     Type
 16336 ;;  txData          1    1[BANK0 ] unsigned char 
 16337 ;; Return value:  Size  Location     Type
 16338 ;;                  1    wreg      void 
 16339 ;; Registers used:
 16340 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16341 ;; Tracked objects:
 16342 ;;		On entry : 0/0
 16343 ;;		On exit  : 0/0
 16344 ;;		Unchanged: 0/0
 16345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16348 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16350 ;;Total ram usage:        2 bytes
 16351 ;; Hardware stack levels used:    1
 16352 ;; Hardware stack levels required when called:    5
 16353 ;; This function calls:
 16354 ;;		Nothing
 16355 ;; This function is called by:
 16356 ;;		_putch
 16357 ;; This function uses a non-reentrant model
 16358 ;;
 16359                           
 16360                           
 16361                           ;psect for function _EUSART_Write
 16362  1686                     _EUSART_Write:
 16363                           
 16364                           ;incstack = 0
 16365                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 16366                           ;EUSART_Write@txData stored from wreg
 16367  1686  0020               	movlb	0	; select bank0
 16368  1687  00A1               	movwf	EUSART_Write@txData
 16369  1688                     l4430:
 16370  1688                     l4432:	
 16371                           ;eusart.c: 150: while(0 == eusartTxBufferRemaining)
 16372                           
 16373  1688  0021               	movlb	1	; select bank1
 16374  1689  0864               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 16375  168A  1903               	btfsc	3,2
 16376  168B  2E8D               	goto	u3231
 16377  168C  2E8E               	goto	u3230
 16378  168D                     u3231:
 16379  168D  2E88               	goto	l4432
 16380  168E                     u3230:
 16381  168E                     l905:
 16382                           
 16383                           ;eusart.c: 152: };eusart.c: 154: if(0 == PIE3bits.TXIE)
 16384  168E  002E               	movlb	14	; select bank14
 16385  168F  1A19               	btfsc	25,4	;volatile
 16386  1690  2E92               	goto	u3241
 16387  1691  2E93               	goto	u3240
 16388  1692                     u3241:
 16389  1692  2E98               	goto	l906
 16390  1693                     u3240:
 16391  1693                     l4434:
 16392                           
 16393                           ;eusart.c: 155: {;eusart.c: 156: TX1REG = txData;
 16394  1693  0020               	movlb	0	; select bank0
 16395  1694  0821               	movf	EUSART_Write@txData,w
 16396  1695  0022               	movlb	2	; select bank2
 16397  1696  009A               	movwf	26	;volatile
 16398                           
 16399                           ;eusart.c: 157: }
 16400  1697  2EB1               	goto	l4446
 16401  1698                     l906:
 16402                           
 16403                           ;eusart.c: 158: else;eusart.c: 159: {;eusart.c: 160: PIE3bits.TXIE = 0;
 16404  1698  1219               	bcf	25,4	;volatile
 16405  1699                     l4436:
 16406                           
 16407                           ;eusart.c: 161: eusartTxBuffer[eusartTxHead++] = txData;
 16408  1699  0020               	movlb	0	; select bank0
 16409  169A  0821               	movf	EUSART_Write@txData,w
 16410  169B  00A0               	movwf	??_EUSART_Write
 16411  169C  086E               	movf	_eusartTxHead,w
 16412  169D  3EA0               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 16413  169E  0086               	movwf	6
 16414  169F  3001               	movlw	1	; select bank3/4
 16415  16A0  0087               	movwf	7
 16416  16A1  0820               	movf	??_EUSART_Write,w
 16417  16A2  0081               	movwf	1
 16418  16A3                     l4438:
 16419  16A3  3001               	movlw	1
 16420  16A4  00A0               	movwf	??_EUSART_Write
 16421  16A5  0820               	movf	??_EUSART_Write,w
 16422  16A6  07EE               	addwf	_eusartTxHead,f	;volatile
 16423  16A7                     l4440:
 16424                           
 16425                           ;eusart.c: 162: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 16426  16A7  3040               	movlw	64
 16427  16A8  026E               	subwf	_eusartTxHead,w	;volatile
 16428  16A9  1C03               	skipc
 16429  16AA  2EAC               	goto	u3251
 16430  16AB  2EAD               	goto	u3250
 16431  16AC                     u3251:
 16432  16AC  2EAE               	goto	l4444
 16433  16AD                     u3250:
 16434  16AD                     l4442:
 16435                           
 16436                           ;eusart.c: 163: {;eusart.c: 164: eusartTxHead = 0;
 16437  16AD  01EE               	clrf	_eusartTxHead	;volatile
 16438  16AE                     l4444:
 16439                           
 16440                           ;eusart.c: 165: };eusart.c: 166: eusartTxBufferRemaining--;
 16441  16AE  3001               	movlw	1
 16442  16AF  0021               	movlb	1	; select bank1
 16443  16B0  02E4               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 16444  16B1                     l4446:
 16445                           
 16446                           ;eusart.c: 167: };eusart.c: 168: PIE3bits.TXIE = 1;
 16447  16B1  002E               	movlb	14	; select bank14
 16448  16B2  1619               	bsf	25,4	;volatile
 16449  16B3                     l909:
 16450  16B3  0008               	return
 16451  16B4                     __end_of_EUSART_Write:
 16452                           
 16453                           	psect	text43
 16454  1251                     __ptext43:	
 16455 ;; *************** function _TMR2_StartTimer *****************
 16456 ;; Defined at:
 16457 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 16458 ;; Parameters:    Size  Location     Type
 16459 ;;		None
 16460 ;; Auto vars:     Size  Location     Type
 16461 ;;		None
 16462 ;; Return value:  Size  Location     Type
 16463 ;;                  1    wreg      void 
 16464 ;; Registers used:
 16465 ;;		status,2, status,0, pclath, cstack
 16466 ;; Tracked objects:
 16467 ;;		On entry : 0/0
 16468 ;;		On exit  : 0/0
 16469 ;;		Unchanged: 0/0
 16470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16475 ;;Total ram usage:        0 bytes
 16476 ;; Hardware stack levels used:    1
 16477 ;; Hardware stack levels required when called:    6
 16478 ;; This function calls:
 16479 ;;		_TMR2_Start
 16480 ;; This function is called by:
 16481 ;;		_main
 16482 ;; This function uses a non-reentrant model
 16483 ;;
 16484                           
 16485                           
 16486                           ;psect for function _TMR2_StartTimer
 16487  1251                     _TMR2_StartTimer:
 16488  1251                     l5440:	
 16489                           ;incstack = 0
 16490                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 16491                           
 16492                           
 16493                           ;tmr2.c: 108: TMR2_Start();
 16494  1251  3192  2242  3192   	fcall	_TMR2_Start
 16495  1254                     l732:
 16496  1254  0008               	return
 16497  1255                     __end_of_TMR2_StartTimer:
 16498                           
 16499                           	psect	text44
 16500  1242                     __ptext44:	
 16501 ;; *************** function _TMR2_Start *****************
 16502 ;; Defined at:
 16503 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 16504 ;; Parameters:    Size  Location     Type
 16505 ;;		None
 16506 ;; Auto vars:     Size  Location     Type
 16507 ;;		None
 16508 ;; Return value:  Size  Location     Type
 16509 ;;                  1    wreg      void 
 16510 ;; Registers used:
 16511 ;;		None
 16512 ;; Tracked objects:
 16513 ;;		On entry : 0/0
 16514 ;;		On exit  : 0/0
 16515 ;;		Unchanged: 0/0
 16516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16521 ;;Total ram usage:        0 bytes
 16522 ;; Hardware stack levels used:    1
 16523 ;; Hardware stack levels required when called:    5
 16524 ;; This function calls:
 16525 ;;		Nothing
 16526 ;; This function is called by:
 16527 ;;		_TMR2_StartTimer
 16528 ;; This function uses a non-reentrant model
 16529 ;;
 16530                           
 16531                           
 16532                           ;psect for function _TMR2_Start
 16533  1242                     _TMR2_Start:
 16534  1242                     l5048:	
 16535                           ;incstack = 0
 16536                           ; Regs used in _TMR2_Start: []
 16537                           
 16538                           
 16539                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 16540  1242  0025               	movlb	5	; select bank5
 16541  1243  178E               	bsf	14,7	;volatile
 16542  1244                     l729:
 16543  1244  0008               	return
 16544  1245                     __end_of_TMR2_Start:
 16545                           
 16546                           	psect	text45
 16547  14D9                     __ptext45:	
 16548 ;; *************** function _SYSTEM_Initialize *****************
 16549 ;; Defined at:
 16550 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16551 ;; Parameters:    Size  Location     Type
 16552 ;;		None
 16553 ;; Auto vars:     Size  Location     Type
 16554 ;;		None
 16555 ;; Return value:  Size  Location     Type
 16556 ;;                  1    wreg      void 
 16557 ;; Registers used:
 16558 ;;		wreg, status,2, status,0, pclath, cstack
 16559 ;; Tracked objects:
 16560 ;;		On entry : 0/0
 16561 ;;		On exit  : 0/0
 16562 ;;		Unchanged: 0/0
 16563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16568 ;;Total ram usage:        0 bytes
 16569 ;; Hardware stack levels used:    1
 16570 ;; Hardware stack levels required when called:    7
 16571 ;; This function calls:
 16572 ;;		_ADCC_Initialize
 16573 ;;		_EUSART_Initialize
 16574 ;;		_EXT_INT_Initialize
 16575 ;;		_OSCILLATOR_Initialize
 16576 ;;		_PIN_MANAGER_Initialize
 16577 ;;		_PMD_Initialize
 16578 ;;		_PWM6_Initialize
 16579 ;;		_TMR1_Initialize
 16580 ;;		_TMR2_Initialize
 16581 ;;		_TMR5_Initialize
 16582 ;; This function is called by:
 16583 ;;		_main
 16584 ;; This function uses a non-reentrant model
 16585 ;;
 16586                           
 16587                           
 16588                           ;psect for function _SYSTEM_Initialize
 16589  14D9                     _SYSTEM_Initialize:
 16590  14D9                     l5388:	
 16591                           ;incstack = 0
 16592                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16593                           
 16594                           
 16595                           ;mcc.c: 52: PMD_Initialize();
 16596  14D9  3192  2276  3194   	fcall	_PMD_Initialize
 16597  14DC                     l5390:
 16598                           
 16599                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 16600  14DC  3188  20E4  3194   	fcall	_PIN_MANAGER_Initialize
 16601  14DF                     l5392:
 16602                           
 16603                           ;mcc.c: 54: OSCILLATOR_Initialize();
 16604  14DF  3192  22AA  3194   	fcall	_OSCILLATOR_Initialize
 16605  14E2                     l5394:
 16606                           
 16607                           ;mcc.c: 55: PWM6_Initialize();
 16608  14E2  3192  22F9  3194   	fcall	_PWM6_Initialize
 16609  14E5                     l5396:
 16610                           
 16611                           ;mcc.c: 56: ADCC_Initialize();
 16612  14E5  3193  23A6  3194   	fcall	_ADCC_Initialize
 16613  14E8                     l5398:
 16614                           
 16615                           ;mcc.c: 57: TMR5_Initialize();
 16616  14E8  3194  24BA  3194   	fcall	_TMR5_Initialize
 16617  14EB                     l5400:
 16618                           
 16619                           ;mcc.c: 58: TMR2_Initialize();
 16620  14EB  3193  2314  3194   	fcall	_TMR2_Initialize
 16621  14EE                     l5402:
 16622                           
 16623                           ;mcc.c: 59: TMR1_Initialize();
 16624  14EE  3194  249B  3194   	fcall	_TMR1_Initialize
 16625  14F1                     l5404:
 16626                           
 16627                           ;mcc.c: 60: EXT_INT_Initialize();
 16628  14F1  3193  2306  3194   	fcall	_EXT_INT_Initialize
 16629  14F4                     l5406:
 16630                           
 16631                           ;mcc.c: 61: EUSART_Initialize();
 16632  14F4  3196  265A  3194   	fcall	_EUSART_Initialize
 16633  14F7                     l184:
 16634  14F7  0008               	return
 16635  14F8                     __end_of_SYSTEM_Initialize:
 16636                           
 16637                           	psect	text46
 16638  14BA                     __ptext46:	
 16639 ;; *************** function _TMR5_Initialize *****************
 16640 ;; Defined at:
 16641 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 16642 ;; Parameters:    Size  Location     Type
 16643 ;;		None
 16644 ;; Auto vars:     Size  Location     Type
 16645 ;;		None
 16646 ;; Return value:  Size  Location     Type
 16647 ;;                  1    wreg      void 
 16648 ;; Registers used:
 16649 ;;		wreg, status,2, status,0, pclath, cstack
 16650 ;; Tracked objects:
 16651 ;;		On entry : 0/0
 16652 ;;		On exit  : 0/0
 16653 ;;		Unchanged: 0/0
 16654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16659 ;;Total ram usage:        0 bytes
 16660 ;; Hardware stack levels used:    1
 16661 ;; Hardware stack levels required when called:    6
 16662 ;; This function calls:
 16663 ;;		_TMR5_SetInterruptHandler
 16664 ;; This function is called by:
 16665 ;;		_SYSTEM_Initialize
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669                           
 16670                           ;psect for function _TMR5_Initialize
 16671  14BA                     _TMR5_Initialize:
 16672  14BA                     l4930:	
 16673                           ;incstack = 0
 16674                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16675                           
 16676                           
 16677                           ;tmr5.c: 69: T5GCON = 0x00;
 16678  14BA  0024               	movlb	4	; select bank4
 16679  14BB  019B               	clrf	27	;volatile
 16680                           
 16681                           ;tmr5.c: 72: T5GATE = 0x00;
 16682  14BC  019C               	clrf	28	;volatile
 16683  14BD                     l4932:
 16684                           
 16685                           ;tmr5.c: 75: T5CLK = 0x04;
 16686  14BD  3004               	movlw	4
 16687  14BE  009D               	movwf	29	;volatile
 16688  14BF                     l4934:
 16689                           
 16690                           ;tmr5.c: 78: TMR5H = 0xD2;
 16691  14BF  30D2               	movlw	210
 16692  14C0  0099               	movwf	25	;volatile
 16693  14C1                     l4936:
 16694                           
 16695                           ;tmr5.c: 81: TMR5L = 0x97;
 16696  14C1  3097               	movlw	151
 16697  14C2  0098               	movwf	24	;volatile
 16698  14C3                     l4938:
 16699                           
 16700                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 16701  14C3  0819               	movf	25,w	;volatile
 16702  14C4  0021               	movlb	1	; select bank1
 16703  14C5  00DB               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 16704  14C6  0024               	movlb	4	; select bank4
 16705  14C7  0818               	movf	24,w	;volatile
 16706  14C8  0021               	movlb	1	; select bank1
 16707  14C9  00DA               	movwf	_timer5ReloadVal^(0+128)	;volatile
 16708  14CA                     l4940:
 16709                           
 16710                           ;tmr5.c: 87: PIR4bits.TMR5IF = 0;
 16711  14CA  002E               	movlb	14	; select bank14
 16712  14CB  1210               	bcf	16,4	;volatile
 16713  14CC                     l4942:
 16714                           
 16715                           ;tmr5.c: 90: PIE4bits.TMR5IE = 1;
 16716  14CC  161A               	bsf	26,4	;volatile
 16717  14CD                     l4944:
 16718                           
 16719                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 16720  14CD  3003               	movlw	low _TMR5_DefaultInterruptHandler
 16721  14CE  0020               	movlb	0	; select bank0
 16722  14CF  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler
 16723  14D0  3000               	movlw	high _TMR5_DefaultInterruptHandler
 16724  14D1  00A1               	movwf	TMR5_SetInterruptHandler@InterruptHandler+1
 16725  14D2  3192  22BC  3194   	fcall	_TMR5_SetInterruptHandler
 16726  14D5                     l4946:
 16727                           
 16728                           ;tmr5.c: 96: T5CON = 0x15;
 16729  14D5  3015               	movlw	21
 16730  14D6  0024               	movlb	4	; select bank4
 16731  14D7  009A               	movwf	26	;volatile
 16732  14D8                     l643:
 16733  14D8  0008               	return
 16734  14D9                     __end_of_TMR5_Initialize:
 16735                           
 16736                           	psect	text47
 16737  12BC                     __ptext47:	
 16738 ;; *************** function _TMR5_SetInterruptHandler *****************
 16739 ;; Defined at:
 16740 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 16741 ;; Parameters:    Size  Location     Type
 16742 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16743 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
 16744 ;; Auto vars:     Size  Location     Type
 16745 ;;		None
 16746 ;; Return value:  Size  Location     Type
 16747 ;;                  1    wreg      void 
 16748 ;; Registers used:
 16749 ;;		wreg
 16750 ;; Tracked objects:
 16751 ;;		On entry : 0/0
 16752 ;;		On exit  : 0/0
 16753 ;;		Unchanged: 0/0
 16754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16755 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16758 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16759 ;;Total ram usage:        2 bytes
 16760 ;; Hardware stack levels used:    1
 16761 ;; Hardware stack levels required when called:    5
 16762 ;; This function calls:
 16763 ;;		Nothing
 16764 ;; This function is called by:
 16765 ;;		_TMR5_Initialize
 16766 ;;		_main
 16767 ;; This function uses a non-reentrant model
 16768 ;;
 16769                           
 16770                           
 16771                           ;psect for function _TMR5_SetInterruptHandler
 16772  12BC                     _TMR5_SetInterruptHandler:
 16773  12BC                     l4620:	
 16774                           ;incstack = 0
 16775                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
 16776                           
 16777                           
 16778                           ;tmr5.c: 183: TMR5_InterruptHandler = InterruptHandler;
 16779  12BC  0020               	movlb	0	; select bank0
 16780  12BD  0821               	movf	TMR5_SetInterruptHandler@InterruptHandler+1,w
 16781  12BE  0021               	movlb	1	; select bank1
 16782  12BF  00D9               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
 16783  12C0  0020               	movlb	0	; select bank0
 16784  12C1  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler,w
 16785  12C2  0021               	movlb	1	; select bank1
 16786  12C3  00D8               	movwf	_TMR5_InterruptHandler^(0+128)
 16787  12C4                     l676:
 16788  12C4  0008               	return
 16789  12C5                     __end_of_TMR5_SetInterruptHandler:
 16790                           
 16791                           	psect	text48
 16792  1314                     __ptext48:	
 16793 ;; *************** function _TMR2_Initialize *****************
 16794 ;; Defined at:
 16795 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 16796 ;; Parameters:    Size  Location     Type
 16797 ;;		None
 16798 ;; Auto vars:     Size  Location     Type
 16799 ;;		None
 16800 ;; Return value:  Size  Location     Type
 16801 ;;                  1    wreg      void 
 16802 ;; Registers used:
 16803 ;;		wreg, status,2
 16804 ;; Tracked objects:
 16805 ;;		On entry : 0/0
 16806 ;;		On exit  : 0/0
 16807 ;;		Unchanged: 0/0
 16808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16813 ;;Total ram usage:        0 bytes
 16814 ;; Hardware stack levels used:    1
 16815 ;; Hardware stack levels required when called:    5
 16816 ;; This function calls:
 16817 ;;		Nothing
 16818 ;; This function is called by:
 16819 ;;		_SYSTEM_Initialize
 16820 ;; This function uses a non-reentrant model
 16821 ;;
 16822                           
 16823                           
 16824                           ;psect for function _TMR2_Initialize
 16825  1314                     _TMR2_Initialize:
 16826  1314                     l4948:	
 16827                           ;incstack = 0
 16828                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 16829                           
 16830                           
 16831                           ;tmr2.c: 67: T2CLKCON = 0x01;
 16832  1314  3001               	movlw	1
 16833  1315  0025               	movlb	5	; select bank5
 16834  1316  0090               	movwf	16	;volatile
 16835  1317                     l4950:
 16836                           
 16837                           ;tmr2.c: 70: T2HLT = 0x00;
 16838  1317  018F               	clrf	15	;volatile
 16839  1318                     l4952:
 16840                           
 16841                           ;tmr2.c: 73: T2RST = 0x00;
 16842  1318  0191               	clrf	17	;volatile
 16843                           
 16844                           ;tmr2.c: 76: T2PR = 0xFF;
 16845  1319  30FF               	movlw	255
 16846  131A  008D               	movwf	13	;volatile
 16847  131B                     l4954:
 16848                           
 16849                           ;tmr2.c: 79: T2TMR = 0x00;
 16850  131B  018C               	clrf	12	;volatile
 16851  131C                     l4956:
 16852                           
 16853                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 16854  131C  002E               	movlb	14	; select bank14
 16855  131D  1090               	bcf	16,1	;volatile
 16856  131E                     l4958:
 16857                           
 16858                           ;tmr2.c: 85: T2CON = 0x80;
 16859  131E  3080               	movlw	128
 16860  131F  0025               	movlb	5	; select bank5
 16861  1320  008E               	movwf	14	;volatile
 16862  1321                     l720:
 16863  1321  0008               	return
 16864  1322                     __end_of_TMR2_Initialize:
 16865                           
 16866                           	psect	text49
 16867  149B                     __ptext49:	
 16868 ;; *************** function _TMR1_Initialize *****************
 16869 ;; Defined at:
 16870 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 16871 ;; Parameters:    Size  Location     Type
 16872 ;;		None
 16873 ;; Auto vars:     Size  Location     Type
 16874 ;;		None
 16875 ;; Return value:  Size  Location     Type
 16876 ;;                  1    wreg      void 
 16877 ;; Registers used:
 16878 ;;		wreg, status,2, status,0, pclath, cstack
 16879 ;; Tracked objects:
 16880 ;;		On entry : 0/0
 16881 ;;		On exit  : 0/0
 16882 ;;		Unchanged: 0/0
 16883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16888 ;;Total ram usage:        0 bytes
 16889 ;; Hardware stack levels used:    1
 16890 ;; Hardware stack levels required when called:    6
 16891 ;; This function calls:
 16892 ;;		_TMR1_SetInterruptHandler
 16893 ;; This function is called by:
 16894 ;;		_SYSTEM_Initialize
 16895 ;; This function uses a non-reentrant model
 16896 ;;
 16897                           
 16898                           
 16899                           ;psect for function _TMR1_Initialize
 16900  149B                     _TMR1_Initialize:
 16901  149B                     l4960:	
 16902                           ;incstack = 0
 16903                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16904                           
 16905                           
 16906                           ;tmr1.c: 69: T1GCON = 0x00;
 16907  149B  0024               	movlb	4	; select bank4
 16908  149C  018F               	clrf	15	;volatile
 16909                           
 16910                           ;tmr1.c: 72: T1GATE = 0x00;
 16911  149D  0190               	clrf	16	;volatile
 16912  149E                     l4962:
 16913                           
 16914                           ;tmr1.c: 75: T1CLK = 0x04;
 16915  149E  3004               	movlw	4
 16916  149F  0091               	movwf	17	;volatile
 16917  14A0                     l4964:
 16918                           
 16919                           ;tmr1.c: 78: TMR1H = 0x86;
 16920  14A0  3086               	movlw	134
 16921  14A1  008D               	movwf	13	;volatile
 16922  14A2                     l4966:
 16923                           
 16924                           ;tmr1.c: 81: TMR1L = 0xE8;
 16925  14A2  30E8               	movlw	232
 16926  14A3  008C               	movwf	12	;volatile
 16927  14A4                     l4968:
 16928                           
 16929                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 16930  14A4  080D               	movf	13,w	;volatile
 16931  14A5  0021               	movlb	1	; select bank1
 16932  14A6  00DF               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 16933  14A7  0024               	movlb	4	; select bank4
 16934  14A8  080C               	movf	12,w	;volatile
 16935  14A9  0021               	movlb	1	; select bank1
 16936  14AA  00DE               	movwf	_timer1ReloadVal^(0+128)	;volatile
 16937  14AB                     l4970:
 16938                           
 16939                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 16940  14AB  002E               	movlb	14	; select bank14
 16941  14AC  1010               	bcf	16,0	;volatile
 16942  14AD                     l4972:
 16943                           
 16944                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 16945  14AD  141A               	bsf	26,0	;volatile
 16946  14AE                     l4974:
 16947                           
 16948                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 16949  14AE  3002               	movlw	low _TMR1_DefaultInterruptHandler
 16950  14AF  0020               	movlb	0	; select bank0
 16951  14B0  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 16952  14B1  3000               	movlw	high _TMR1_DefaultInterruptHandler
 16953  14B2  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 16954  14B3  3192  22B3  3194   	fcall	_TMR1_SetInterruptHandler
 16955  14B6                     l4976:
 16956                           
 16957                           ;tmr1.c: 96: T1CON = 0x05;
 16958  14B6  3005               	movlw	5
 16959  14B7  0024               	movlb	4	; select bank4
 16960  14B8  008E               	movwf	14	;volatile
 16961  14B9                     l415:
 16962  14B9  0008               	return
 16963  14BA                     __end_of_TMR1_Initialize:
 16964                           
 16965                           	psect	text50
 16966  12B3                     __ptext50:	
 16967 ;; *************** function _TMR1_SetInterruptHandler *****************
 16968 ;; Defined at:
 16969 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 16970 ;; Parameters:    Size  Location     Type
 16971 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 16972 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
 16973 ;; Auto vars:     Size  Location     Type
 16974 ;;		None
 16975 ;; Return value:  Size  Location     Type
 16976 ;;                  1    wreg      void 
 16977 ;; Registers used:
 16978 ;;		wreg
 16979 ;; Tracked objects:
 16980 ;;		On entry : 0/0
 16981 ;;		On exit  : 0/0
 16982 ;;		Unchanged: 0/0
 16983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16984 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16987 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16988 ;;Total ram usage:        2 bytes
 16989 ;; Hardware stack levels used:    1
 16990 ;; Hardware stack levels required when called:    5
 16991 ;; This function calls:
 16992 ;;		Nothing
 16993 ;; This function is called by:
 16994 ;;		_TMR1_Initialize
 16995 ;;		_main
 16996 ;; This function uses a non-reentrant model
 16997 ;;
 16998                           
 16999                           
 17000                           ;psect for function _TMR1_SetInterruptHandler
 17001  12B3                     _TMR1_SetInterruptHandler:
 17002  12B3                     l4604:	
 17003                           ;incstack = 0
 17004                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 17005                           
 17006                           
 17007                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 17008  12B3  0020               	movlb	0	; select bank0
 17009  12B4  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 17010  12B5  0021               	movlb	1	; select bank1
 17011  12B6  00DD               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 17012  12B7  0020               	movlb	0	; select bank0
 17013  12B8  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 17014  12B9  0021               	movlb	1	; select bank1
 17015  12BA  00DC               	movwf	_TMR1_InterruptHandler^(0+128)
 17016  12BB                     l445:
 17017  12BB  0008               	return
 17018  12BC                     __end_of_TMR1_SetInterruptHandler:
 17019                           
 17020                           	psect	text51
 17021  12F9                     __ptext51:	
 17022 ;; *************** function _PWM6_Initialize *****************
 17023 ;; Defined at:
 17024 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 17025 ;; Parameters:    Size  Location     Type
 17026 ;;		None
 17027 ;; Auto vars:     Size  Location     Type
 17028 ;;		None
 17029 ;; Return value:  Size  Location     Type
 17030 ;;                  1    wreg      void 
 17031 ;; Registers used:
 17032 ;;		wreg, status,2, status,0
 17033 ;; Tracked objects:
 17034 ;;		On entry : 0/0
 17035 ;;		On exit  : 0/0
 17036 ;;		Unchanged: 0/0
 17037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17042 ;;Total ram usage:        0 bytes
 17043 ;; Hardware stack levels used:    1
 17044 ;; Hardware stack levels required when called:    5
 17045 ;; This function calls:
 17046 ;;		Nothing
 17047 ;; This function is called by:
 17048 ;;		_SYSTEM_Initialize
 17049 ;; This function uses a non-reentrant model
 17050 ;;
 17051                           
 17052                           
 17053                           ;psect for function _PWM6_Initialize
 17054  12F9                     _PWM6_Initialize:
 17055  12F9                     l4920:	
 17056                           ;incstack = 0
 17057                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 17058                           
 17059                           
 17060                           ;pwm6.c: 62: PWM6CON = 0x80;
 17061  12F9  3080               	movlw	128
 17062  12FA  0027               	movlb	7	; select bank7
 17063  12FB  008E               	movwf	14	;volatile
 17064                           
 17065                           ;pwm6.c: 65: PWM6DCH = 0xFF;
 17066  12FC  30FF               	movlw	255
 17067  12FD  008D               	movwf	13	;volatile
 17068                           
 17069                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 17070  12FE  30C0               	movlw	192
 17071  12FF  008C               	movwf	12	;volatile
 17072  1300                     l4922:
 17073                           
 17074                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 17075  1300  0024               	movlb	4	; select bank4
 17076  1301  081F               	movf	31,w	;volatile
 17077  1302  39F3               	andlw	-13
 17078  1303  3804               	iorlw	4
 17079  1304  009F               	movwf	31	;volatile
 17080  1305                     l690:
 17081  1305  0008               	return
 17082  1306                     __end_of_PWM6_Initialize:
 17083                           
 17084                           	psect	text52
 17085  1276                     __ptext52:	
 17086 ;; *************** function _PMD_Initialize *****************
 17087 ;; Defined at:
 17088 ;;		line 78 in file "mcc_generated_files/mcc.c"
 17089 ;; Parameters:    Size  Location     Type
 17090 ;;		None
 17091 ;; Auto vars:     Size  Location     Type
 17092 ;;		None
 17093 ;; Return value:  Size  Location     Type
 17094 ;;                  1    wreg      void 
 17095 ;; Registers used:
 17096 ;;		status,2
 17097 ;; Tracked objects:
 17098 ;;		On entry : 0/0
 17099 ;;		On exit  : 0/0
 17100 ;;		Unchanged: 0/0
 17101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17106 ;;Total ram usage:        0 bytes
 17107 ;; Hardware stack levels used:    1
 17108 ;; Hardware stack levels required when called:    5
 17109 ;; This function calls:
 17110 ;;		Nothing
 17111 ;; This function is called by:
 17112 ;;		_SYSTEM_Initialize
 17113 ;; This function uses a non-reentrant model
 17114 ;;
 17115                           
 17116                           
 17117                           ;psect for function _PMD_Initialize
 17118  1276                     _PMD_Initialize:
 17119  1276                     l4910:	
 17120                           ;incstack = 0
 17121                           ; Regs used in _PMD_Initialize: [status,2]
 17122                           
 17123                           
 17124                           ;mcc.c: 81: PMD0 = 0x00;
 17125  1276  002F               	movlb	15	; select bank15
 17126  1277  0196               	clrf	22	;volatile
 17127                           
 17128                           ;mcc.c: 83: PMD1 = 0x00;
 17129  1278  0197               	clrf	23	;volatile
 17130                           
 17131                           ;mcc.c: 85: PMD2 = 0x00;
 17132  1279  0198               	clrf	24	;volatile
 17133                           
 17134                           ;mcc.c: 87: PMD3 = 0x00;
 17135  127A  0199               	clrf	25	;volatile
 17136                           
 17137                           ;mcc.c: 89: PMD4 = 0x00;
 17138  127B  019A               	clrf	26	;volatile
 17139                           
 17140                           ;mcc.c: 91: PMD5 = 0x00;
 17141  127C  019B               	clrf	27	;volatile
 17142  127D                     l190:
 17143  127D  0008               	return
 17144  127E                     __end_of_PMD_Initialize:
 17145                           
 17146                           	psect	text53
 17147  08E4                     __ptext53:	
 17148 ;; *************** function _PIN_MANAGER_Initialize *****************
 17149 ;; Defined at:
 17150 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 17151 ;; Parameters:    Size  Location     Type
 17152 ;;		None
 17153 ;; Auto vars:     Size  Location     Type
 17154 ;;		None
 17155 ;; Return value:  Size  Location     Type
 17156 ;;                  1    wreg      void 
 17157 ;; Registers used:
 17158 ;;		wreg, status,2
 17159 ;; Tracked objects:
 17160 ;;		On entry : 0/0
 17161 ;;		On exit  : 0/0
 17162 ;;		Unchanged: 0/0
 17163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17168 ;;Total ram usage:        0 bytes
 17169 ;; Hardware stack levels used:    1
 17170 ;; Hardware stack levels required when called:    5
 17171 ;; This function calls:
 17172 ;;		Nothing
 17173 ;; This function is called by:
 17174 ;;		_SYSTEM_Initialize
 17175 ;; This function uses a non-reentrant model
 17176 ;;
 17177                           
 17178                           
 17179                           ;psect for function _PIN_MANAGER_Initialize
 17180  08E4                     _PIN_MANAGER_Initialize:
 17181  08E4                     l4862:	
 17182                           ;incstack = 0
 17183                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 17184                           
 17185                           
 17186                           ;pin_manager.c: 62: LATE = 0x00;
 17187  08E4  0020               	movlb	0	; select bank0
 17188  08E5  019A               	clrf	26	;volatile
 17189                           
 17190                           ;pin_manager.c: 63: LATD = 0x00;
 17191  08E6  0199               	clrf	25	;volatile
 17192                           
 17193                           ;pin_manager.c: 64: LATA = 0x00;
 17194  08E7  0196               	clrf	22	;volatile
 17195                           
 17196                           ;pin_manager.c: 65: LATB = 0x00;
 17197  08E8  0197               	clrf	23	;volatile
 17198                           
 17199                           ;pin_manager.c: 66: LATC = 0x00;
 17200  08E9  0198               	clrf	24	;volatile
 17201  08EA                     l4864:
 17202                           
 17203                           ;pin_manager.c: 71: TRISE = 0x07;
 17204  08EA  3007               	movlw	7
 17205  08EB  0095               	movwf	21	;volatile
 17206  08EC                     l4866:
 17207                           
 17208                           ;pin_manager.c: 72: TRISA = 0x0F;
 17209  08EC  300F               	movlw	15
 17210  08ED  0091               	movwf	17	;volatile
 17211  08EE                     l4868:
 17212                           
 17213                           ;pin_manager.c: 73: TRISB = 0xFF;
 17214  08EE  30FF               	movlw	255
 17215  08EF  0092               	movwf	18	;volatile
 17216  08F0                     l4870:
 17217                           
 17218                           ;pin_manager.c: 74: TRISC = 0xBF;
 17219  08F0  30BF               	movlw	191
 17220  08F1  0093               	movwf	19	;volatile
 17221  08F2                     l4872:
 17222                           
 17223                           ;pin_manager.c: 75: TRISD = 0xFF;
 17224  08F2  30FF               	movlw	255
 17225  08F3  0094               	movwf	20	;volatile
 17226  08F4                     l4874:
 17227                           
 17228                           ;pin_manager.c: 80: ANSELD = 0xFF;
 17229  08F4  30FF               	movlw	255
 17230  08F5  003E               	movlb	30	; select bank30
 17231  08F6  00D9               	movwf	89	;volatile
 17232  08F7                     l4876:
 17233                           
 17234                           ;pin_manager.c: 81: ANSELC = 0x47;
 17235  08F7  3047               	movlw	71
 17236  08F8  00CE               	movwf	78	;volatile
 17237  08F9                     l4878:
 17238                           
 17239                           ;pin_manager.c: 82: ANSELB = 0xEF;
 17240  08F9  30EF               	movlw	239
 17241  08FA  00C3               	movwf	67	;volatile
 17242  08FB                     l4880:
 17243                           
 17244                           ;pin_manager.c: 83: ANSELE = 0x07;
 17245  08FB  3007               	movlw	7
 17246  08FC  00E4               	movwf	100	;volatile
 17247  08FD                     l4882:
 17248                           
 17249                           ;pin_manager.c: 84: ANSELA = 0x4F;
 17250  08FD  304F               	movlw	79
 17251  08FE  00B8               	movwf	56	;volatile
 17252                           
 17253                           ;pin_manager.c: 89: WPUD = 0x00;
 17254  08FF  01DA               	clrf	90	;volatile
 17255                           
 17256                           ;pin_manager.c: 90: WPUE = 0x00;
 17257  0900  01E5               	clrf	101	;volatile
 17258                           
 17259                           ;pin_manager.c: 91: WPUB = 0x00;
 17260  0901  01C4               	clrf	68	;volatile
 17261                           
 17262                           ;pin_manager.c: 92: WPUA = 0x00;
 17263  0902  01B9               	clrf	57	;volatile
 17264                           
 17265                           ;pin_manager.c: 93: WPUC = 0x00;
 17266  0903  01CF               	clrf	79	;volatile
 17267                           
 17268                           ;pin_manager.c: 98: ODCONE = 0x00;
 17269  0904  01E6               	clrf	102	;volatile
 17270                           
 17271                           ;pin_manager.c: 99: ODCONA = 0x00;
 17272  0905  01BA               	clrf	58	;volatile
 17273                           
 17274                           ;pin_manager.c: 100: ODCONB = 0x00;
 17275  0906  01C5               	clrf	69	;volatile
 17276                           
 17277                           ;pin_manager.c: 101: ODCONC = 0x00;
 17278  0907  01D0               	clrf	80	;volatile
 17279                           
 17280                           ;pin_manager.c: 102: ODCOND = 0x00;
 17281  0908  01DB               	clrf	91	;volatile
 17282  0909                     l4884:
 17283                           
 17284                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 17285  0909  30FF               	movlw	255
 17286  090A  00BB               	movwf	59	;volatile
 17287  090B                     l4886:
 17288                           
 17289                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 17290  090B  30FF               	movlw	255
 17291  090C  00C6               	movwf	70	;volatile
 17292  090D                     l4888:
 17293                           
 17294                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 17295  090D  30FF               	movlw	255
 17296  090E  00D1               	movwf	81	;volatile
 17297  090F                     l4890:
 17298                           
 17299                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 17300  090F  30FF               	movlw	255
 17301  0910  00DC               	movwf	92	;volatile
 17302  0911                     l4892:
 17303                           
 17304                           ;pin_manager.c: 111: SLRCONE = 0x07;
 17305  0911  3007               	movlw	7
 17306  0912  00E7               	movwf	103	;volatile
 17307  0913                     l4894:
 17308                           
 17309                           ;pin_manager.c: 120: INTPPS = 0x0C;
 17310  0913  300C               	movlw	12
 17311  0914  003D               	movlb	29	; select bank29
 17312  0915  0090               	movwf	16	;volatile
 17313  0916                     l4896:
 17314                           
 17315                           ;pin_manager.c: 121: RXPPS = 0x17;
 17316  0916  3017               	movlw	23
 17317  0917  00CB               	movwf	75	;volatile
 17318  0918                     l4898:
 17319                           
 17320                           ;pin_manager.c: 122: SSP1CLKPPS = 0x13;
 17321  0918  3013               	movlw	19
 17322  0919  00C5               	movwf	69	;volatile
 17323  091A                     l4900:
 17324                           
 17325                           ;pin_manager.c: 123: RC3PPS = 0x14;
 17326  091A  3014               	movlw	20
 17327  091B  003E               	movlb	30	; select bank30
 17328  091C  00A3               	movwf	35	;volatile
 17329  091D                     l4902:
 17330                           
 17331                           ;pin_manager.c: 124: RC4PPS = 0x15;
 17332  091D  3015               	movlw	21
 17333  091E  00A4               	movwf	36	;volatile
 17334  091F                     l4904:
 17335                           
 17336                           ;pin_manager.c: 125: RA6PPS = 0x0E;
 17337  091F  300E               	movlw	14
 17338  0920  0096               	movwf	22	;volatile
 17339  0921                     l4906:
 17340                           
 17341                           ;pin_manager.c: 126: RC6PPS = 0x10;
 17342  0921  3010               	movlw	16
 17343  0922  00A6               	movwf	38	;volatile
 17344  0923                     l4908:
 17345                           
 17346                           ;pin_manager.c: 127: SSP1DATPPS = 0x14;
 17347  0923  3014               	movlw	20
 17348  0924  003D               	movlb	29	; select bank29
 17349  0925  00C6               	movwf	70	;volatile
 17350  0926                     l128:
 17351  0926  0008               	return
 17352  0927                     __end_of_PIN_MANAGER_Initialize:
 17353                           
 17354                           	psect	text54
 17355  12AA                     __ptext54:	
 17356 ;; *************** function _OSCILLATOR_Initialize *****************
 17357 ;; Defined at:
 17358 ;;		line 64 in file "mcc_generated_files/mcc.c"
 17359 ;; Parameters:    Size  Location     Type
 17360 ;;		None
 17361 ;; Auto vars:     Size  Location     Type
 17362 ;;		None
 17363 ;; Return value:  Size  Location     Type
 17364 ;;                  1    wreg      void 
 17365 ;; Registers used:
 17366 ;;		wreg, status,2
 17367 ;; Tracked objects:
 17368 ;;		On entry : 0/0
 17369 ;;		On exit  : 0/0
 17370 ;;		Unchanged: 0/0
 17371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17376 ;;Total ram usage:        0 bytes
 17377 ;; Hardware stack levels used:    1
 17378 ;; Hardware stack levels required when called:    5
 17379 ;; This function calls:
 17380 ;;		Nothing
 17381 ;; This function is called by:
 17382 ;;		_SYSTEM_Initialize
 17383 ;; This function uses a non-reentrant model
 17384 ;;
 17385                           
 17386                           
 17387                           ;psect for function _OSCILLATOR_Initialize
 17388  12AA                     _OSCILLATOR_Initialize:
 17389  12AA                     l4912:	
 17390                           ;incstack = 0
 17391                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17392                           
 17393                           
 17394                           ;mcc.c: 67: OSCCON1 = 0x62;
 17395  12AA  3062               	movlw	98
 17396  12AB  0031               	movlb	17	; select bank17
 17397  12AC  008D               	movwf	13	;volatile
 17398  12AD                     l4914:
 17399                           
 17400                           ;mcc.c: 69: OSCCON3 = 0x00;
 17401  12AD  018F               	clrf	15	;volatile
 17402  12AE                     l4916:
 17403                           
 17404                           ;mcc.c: 71: OSCEN = 0x00;
 17405  12AE  0191               	clrf	17	;volatile
 17406                           
 17407                           ;mcc.c: 73: OSCFRQ = 0x02;
 17408  12AF  3002               	movlw	2
 17409  12B0  0093               	movwf	19	;volatile
 17410  12B1                     l4918:
 17411                           
 17412                           ;mcc.c: 75: OSCTUNE = 0x00;
 17413  12B1  0192               	clrf	18	;volatile
 17414  12B2                     l187:
 17415  12B2  0008               	return
 17416  12B3                     __end_of_OSCILLATOR_Initialize:
 17417                           
 17418                           	psect	text55
 17419  1306                     __ptext55:	
 17420 ;; *************** function _EXT_INT_Initialize *****************
 17421 ;; Defined at:
 17422 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 17423 ;; Parameters:    Size  Location     Type
 17424 ;;		None
 17425 ;; Auto vars:     Size  Location     Type
 17426 ;;		None
 17427 ;; Return value:  Size  Location     Type
 17428 ;;                  1    wreg      void 
 17429 ;; Registers used:
 17430 ;;		wreg, status,2, status,0, pclath, cstack
 17431 ;; Tracked objects:
 17432 ;;		On entry : 0/0
 17433 ;;		On exit  : 0/0
 17434 ;;		Unchanged: 0/0
 17435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17440 ;;Total ram usage:        0 bytes
 17441 ;; Hardware stack levels used:    1
 17442 ;; Hardware stack levels required when called:    6
 17443 ;; This function calls:
 17444 ;;		_INT_SetInterruptHandler
 17445 ;; This function is called by:
 17446 ;;		_SYSTEM_Initialize
 17447 ;; This function uses a non-reentrant model
 17448 ;;
 17449                           
 17450                           
 17451                           ;psect for function _EXT_INT_Initialize
 17452  1306                     _EXT_INT_Initialize:
 17453  1306                     l4978:	
 17454                           ;incstack = 0
 17455                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17456                           
 17457                           
 17458                           ;ext_int.c: 64: (PIR0bits.INTF = 0);
 17459  1306  002E               	movlb	14	; select bank14
 17460  1307  100C               	bcf	12,0	;volatile
 17461                           
 17462                           ;ext_int.c: 66: (INTCONbits.INTEDG = 1);
 17463  1308  140B               	bsf	11,0	;volatile
 17464  1309                     l4980:
 17465                           
 17466                           ;ext_int.c: 68: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
 17467  1309  303B               	movlw	low _INT_DefaultInterruptHandler
 17468  130A  0020               	movlb	0	; select bank0
 17469  130B  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler
 17470  130C  3012               	movlw	high _INT_DefaultInterruptHandler
 17471  130D  00A1               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 17472  130E  3192  22A1  3193   	fcall	_INT_SetInterruptHandler
 17473  1311                     l4982:
 17474                           
 17475                           ;ext_int.c: 69: (PIE0bits.INTE = 1);
 17476  1311  002E               	movlb	14	; select bank14
 17477  1312  1416               	bsf	22,0	;volatile
 17478  1313                     l833:
 17479  1313  0008               	return
 17480  1314                     __end_of_EXT_INT_Initialize:
 17481                           
 17482                           	psect	text56
 17483  12A1                     __ptext56:	
 17484 ;; *************** function _INT_SetInterruptHandler *****************
 17485 ;; Defined at:
 17486 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 17487 ;; Parameters:    Size  Location     Type
 17488 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 17489 ;;		 -> S1_ISR(1), INT_DefaultInterruptHandler(1), 
 17490 ;; Auto vars:     Size  Location     Type
 17491 ;;		None
 17492 ;; Return value:  Size  Location     Type
 17493 ;;                  1    wreg      void 
 17494 ;; Registers used:
 17495 ;;		wreg
 17496 ;; Tracked objects:
 17497 ;;		On entry : 0/0
 17498 ;;		On exit  : 0/0
 17499 ;;		Unchanged: 0/0
 17500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17501 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17504 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17505 ;;Total ram usage:        2 bytes
 17506 ;; Hardware stack levels used:    1
 17507 ;; Hardware stack levels required when called:    5
 17508 ;; This function calls:
 17509 ;;		Nothing
 17510 ;; This function is called by:
 17511 ;;		_EXT_INT_Initialize
 17512 ;;		_main
 17513 ;; This function uses a non-reentrant model
 17514 ;;
 17515                           
 17516                           
 17517                           ;psect for function _INT_SetInterruptHandler
 17518  12A1                     _INT_SetInterruptHandler:
 17519  12A1                     l4626:	
 17520                           ;incstack = 0
 17521                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 17522                           
 17523                           
 17524                           ;ext_int.c: 51: INT_InterruptHandler = InterruptHandler;
 17525  12A1  0020               	movlb	0	; select bank0
 17526  12A2  0821               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 17527  12A3  0021               	movlb	1	; select bank1
 17528  12A4  00D7               	movwf	(_INT_InterruptHandler+1)^(0+128)
 17529  12A5  0020               	movlb	0	; select bank0
 17530  12A6  0820               	movf	INT_SetInterruptHandler@InterruptHandler,w
 17531  12A7  0021               	movlb	1	; select bank1
 17532  12A8  00D6               	movwf	_INT_InterruptHandler^(0+128)
 17533  12A9                     l827:
 17534  12A9  0008               	return
 17535  12AA                     __end_of_INT_SetInterruptHandler:
 17536                           
 17537                           	psect	text57
 17538  165A                     __ptext57:	
 17539 ;; *************** function _EUSART_Initialize *****************
 17540 ;; Defined at:
 17541 ;;		line 75 in file "mcc_generated_files/eusart.c"
 17542 ;; Parameters:    Size  Location     Type
 17543 ;;		None
 17544 ;; Auto vars:     Size  Location     Type
 17545 ;;		None
 17546 ;; Return value:  Size  Location     Type
 17547 ;;                  1    wreg      void 
 17548 ;; Registers used:
 17549 ;;		wreg, status,2, status,0, pclath, cstack
 17550 ;; Tracked objects:
 17551 ;;		On entry : 0/0
 17552 ;;		On exit  : 0/0
 17553 ;;		Unchanged: 0/0
 17554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17557 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17558 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17559 ;;Total ram usage:        1 bytes
 17560 ;; Hardware stack levels used:    1
 17561 ;; Hardware stack levels required when called:    6
 17562 ;; This function calls:
 17563 ;;		_EUSART_SetRxInterruptHandler
 17564 ;;		_EUSART_SetTxInterruptHandler
 17565 ;; This function is called by:
 17566 ;;		_SYSTEM_Initialize
 17567 ;; This function uses a non-reentrant model
 17568 ;;
 17569                           
 17570                           
 17571                           ;psect for function _EUSART_Initialize
 17572  165A                     _EUSART_Initialize:
 17573  165A                     l4984:	
 17574                           ;incstack = 0
 17575                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17576                           
 17577                           
 17578                           ;eusart.c: 78: PIE3bits.RCIE = 0;
 17579  165A  002E               	movlb	14	; select bank14
 17580  165B  1299               	bcf	25,5	;volatile
 17581  165C                     l4986:
 17582                           
 17583                           ;eusart.c: 79: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 17584  165C  3037               	movlw	low _EUSART_Receive_ISR
 17585  165D  0020               	movlb	0	; select bank0
 17586  165E  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 17587  165F  3015               	movlw	high _EUSART_Receive_ISR
 17588  1660  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 17589  1661  3192  228F  3196   	fcall	_EUSART_SetRxInterruptHandler
 17590  1664                     l4988:
 17591                           
 17592                           ;eusart.c: 80: PIE3bits.TXIE = 0;
 17593  1664  002E               	movlb	14	; select bank14
 17594  1665  1219               	bcf	25,4	;volatile
 17595                           
 17596                           ;eusart.c: 81: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
 17597  1666  30C0               	movlw	low _EUSART_Transmit_ISR
 17598  1667  0020               	movlb	0	; select bank0
 17599  1668  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 17600  1669  3015               	movlw	high _EUSART_Transmit_ISR
 17601  166A  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 17602  166B  3192  2298  3196   	fcall	_EUSART_SetTxInterruptHandler
 17603  166E                     l4990:
 17604                           
 17605                           ;eusart.c: 85: BAUD1CON = 0x08;
 17606  166E  3008               	movlw	8
 17607  166F  0022               	movlb	2	; select bank2
 17608  1670  009F               	movwf	31	;volatile
 17609  1671                     l4992:
 17610                           
 17611                           ;eusart.c: 88: RC1STA = 0x90;
 17612  1671  3090               	movlw	144
 17613  1672  009D               	movwf	29	;volatile
 17614  1673                     l4994:
 17615                           
 17616                           ;eusart.c: 91: TX1STA = 0x24;
 17617  1673  3024               	movlw	36
 17618  1674  009E               	movwf	30	;volatile
 17619  1675                     l4996:
 17620                           
 17621                           ;eusart.c: 94: SP1BRGL = 0x19;
 17622  1675  3019               	movlw	25
 17623  1676  009B               	movwf	27	;volatile
 17624  1677                     l4998:
 17625                           
 17626                           ;eusart.c: 97: SP1BRGH = 0x00;
 17627  1677  019C               	clrf	28	;volatile
 17628  1678                     l5000:
 17629                           
 17630                           ;eusart.c: 101: eusartTxHead = 0;
 17631  1678  0020               	movlb	0	; select bank0
 17632  1679  01EE               	clrf	_eusartTxHead	;volatile
 17633  167A                     l5002:
 17634                           
 17635                           ;eusart.c: 102: eusartTxTail = 0;
 17636  167A  01ED               	clrf	_eusartTxTail	;volatile
 17637  167B                     l5004:
 17638                           
 17639                           ;eusart.c: 103: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 17640  167B  3040               	movlw	64
 17641  167C  00A2               	movwf	??_EUSART_Initialize
 17642  167D  0822               	movf	??_EUSART_Initialize,w
 17643  167E  0021               	movlb	1	; select bank1
 17644  167F  00E4               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 17645  1680                     l5006:
 17646                           
 17647                           ;eusart.c: 105: eusartRxHead = 0;
 17648  1680  01D5               	clrf	_eusartRxHead^(0+128)	;volatile
 17649  1681                     l5008:
 17650                           
 17651                           ;eusart.c: 106: eusartRxTail = 0;
 17652  1681  01D4               	clrf	_eusartRxTail^(0+128)	;volatile
 17653  1682                     l5010:
 17654                           
 17655                           ;eusart.c: 107: eusartRxCount = 0;
 17656  1682  01D3               	clrf	_eusartRxCount^(0+128)	;volatile
 17657  1683                     l5012:
 17658                           
 17659                           ;eusart.c: 110: PIE3bits.RCIE = 1;
 17660  1683  002E               	movlb	14	; select bank14
 17661  1684  1699               	bsf	25,5	;volatile
 17662  1685                     l884:
 17663  1685  0008               	return
 17664  1686                     __end_of_EUSART_Initialize:
 17665                           
 17666                           	psect	text58
 17667  1298                     __ptext58:	
 17668 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 17669 ;; Defined at:
 17670 ;;		line 220 in file "mcc_generated_files/eusart.c"
 17671 ;; Parameters:    Size  Location     Type
 17672 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 17673 ;;		 -> EUSART_Transmit_ISR(1), 
 17674 ;; Auto vars:     Size  Location     Type
 17675 ;;		None
 17676 ;; Return value:  Size  Location     Type
 17677 ;;                  1    wreg      void 
 17678 ;; Registers used:
 17679 ;;		wreg
 17680 ;; Tracked objects:
 17681 ;;		On entry : 0/0
 17682 ;;		On exit  : 0/0
 17683 ;;		Unchanged: 0/0
 17684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17685 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17688 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17689 ;;Total ram usage:        2 bytes
 17690 ;; Hardware stack levels used:    1
 17691 ;; Hardware stack levels required when called:    5
 17692 ;; This function calls:
 17693 ;;		Nothing
 17694 ;; This function is called by:
 17695 ;;		_EUSART_Initialize
 17696 ;; This function uses a non-reentrant model
 17697 ;;
 17698                           
 17699                           
 17700                           ;psect for function _EUSART_SetTxInterruptHandler
 17701  1298                     _EUSART_SetTxInterruptHandler:
 17702  1298                     l4630:	
 17703                           ;incstack = 0
 17704                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 17705                           
 17706                           
 17707                           ;eusart.c: 221: EUSART_TxDefaultInterruptHandler = interruptHandler;
 17708  1298  0020               	movlb	0	; select bank0
 17709  1299  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 17710  129A  0021               	movlb	1	; select bank1
 17711  129B  00E3               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
 17712  129C  0020               	movlb	0	; select bank0
 17713  129D  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 17714  129E  0021               	movlb	1	; select bank1
 17715  129F  00E2               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
 17716  12A0                     l929:
 17717  12A0  0008               	return
 17718  12A1                     __end_of_EUSART_SetTxInterruptHandler:
 17719                           
 17720                           	psect	text59
 17721  128F                     __ptext59:	
 17722 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 17723 ;; Defined at:
 17724 ;;		line 224 in file "mcc_generated_files/eusart.c"
 17725 ;; Parameters:    Size  Location     Type
 17726 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 17727 ;;		 -> EUSART_Receive_ISR(1), 
 17728 ;; Auto vars:     Size  Location     Type
 17729 ;;		None
 17730 ;; Return value:  Size  Location     Type
 17731 ;;                  1    wreg      void 
 17732 ;; Registers used:
 17733 ;;		wreg
 17734 ;; Tracked objects:
 17735 ;;		On entry : 0/0
 17736 ;;		On exit  : 0/0
 17737 ;;		Unchanged: 0/0
 17738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17739 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17742 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17743 ;;Total ram usage:        2 bytes
 17744 ;; Hardware stack levels used:    1
 17745 ;; Hardware stack levels required when called:    5
 17746 ;; This function calls:
 17747 ;;		Nothing
 17748 ;; This function is called by:
 17749 ;;		_EUSART_Initialize
 17750 ;; This function uses a non-reentrant model
 17751 ;;
 17752                           
 17753                           
 17754                           ;psect for function _EUSART_SetRxInterruptHandler
 17755  128F                     _EUSART_SetRxInterruptHandler:
 17756  128F                     l4628:	
 17757                           ;incstack = 0
 17758                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 17759                           
 17760                           
 17761                           ;eusart.c: 225: EUSART_RxDefaultInterruptHandler = interruptHandler;
 17762  128F  0020               	movlb	0	; select bank0
 17763  1290  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 17764  1291  0021               	movlb	1	; select bank1
 17765  1292  00E1               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
 17766  1293  0020               	movlb	0	; select bank0
 17767  1294  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 17768  1295  0021               	movlb	1	; select bank1
 17769  1296  00E0               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
 17770  1297                     l932:
 17771  1297  0008               	return
 17772  1298                     __end_of_EUSART_SetRxInterruptHandler:
 17773                           
 17774                           	psect	text60
 17775  13A6                     __ptext60:	
 17776 ;; *************** function _ADCC_Initialize *****************
 17777 ;; Defined at:
 17778 ;;		line 63 in file "mcc_generated_files/adcc.c"
 17779 ;; Parameters:    Size  Location     Type
 17780 ;;		None
 17781 ;; Auto vars:     Size  Location     Type
 17782 ;;		None
 17783 ;; Return value:  Size  Location     Type
 17784 ;;                  1    wreg      void 
 17785 ;; Registers used:
 17786 ;;		wreg, status,2
 17787 ;; Tracked objects:
 17788 ;;		On entry : 0/0
 17789 ;;		On exit  : 0/0
 17790 ;;		Unchanged: 0/0
 17791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17796 ;;Total ram usage:        0 bytes
 17797 ;; Hardware stack levels used:    1
 17798 ;; Hardware stack levels required when called:    5
 17799 ;; This function calls:
 17800 ;;		Nothing
 17801 ;; This function is called by:
 17802 ;;		_SYSTEM_Initialize
 17803 ;; This function uses a non-reentrant model
 17804 ;;
 17805                           
 17806                           
 17807                           ;psect for function _ADCC_Initialize
 17808  13A6                     _ADCC_Initialize:
 17809  13A6                     l4924:	
 17810                           ;incstack = 0
 17811                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 17812                           
 17813                           
 17814                           ;adcc.c: 67: ADLTHL = 0x00;
 17815  13A6  0022               	movlb	2	; select bank2
 17816  13A7  018E               	clrf	14	;volatile
 17817                           
 17818                           ;adcc.c: 69: ADLTHH = 0x00;
 17819  13A8  018F               	clrf	15	;volatile
 17820                           
 17821                           ;adcc.c: 71: ADUTHL = 0x00;
 17822  13A9  0190               	clrf	16	;volatile
 17823                           
 17824                           ;adcc.c: 73: ADUTHH = 0x00;
 17825  13AA  0191               	clrf	17	;volatile
 17826                           
 17827                           ;adcc.c: 75: ADSTPTL = 0x00;
 17828  13AB  0192               	clrf	18	;volatile
 17829                           
 17830                           ;adcc.c: 77: ADSTPTH = 0x00;
 17831  13AC  0193               	clrf	19	;volatile
 17832                           
 17833                           ;adcc.c: 79: ADRPT = 0x00;
 17834  13AD  018D               	clrf	13	;volatile
 17835                           
 17836                           ;adcc.c: 81: ADPCH = 0x00;
 17837  13AE  0021               	movlb	1	; select bank1
 17838  13AF  019E               	clrf	30	;volatile
 17839                           
 17840                           ;adcc.c: 83: ADCAP = 0x00;
 17841  13B0  019B               	clrf	27	;volatile
 17842                           
 17843                           ;adcc.c: 85: ADCON1 = 0x00;
 17844  13B1  0194               	clrf	20	;volatile
 17845                           
 17846                           ;adcc.c: 87: ADCON2 = 0x00;
 17847  13B2  0195               	clrf	21	;volatile
 17848                           
 17849                           ;adcc.c: 89: ADCON3 = 0x00;
 17850  13B3  0196               	clrf	22	;volatile
 17851                           
 17852                           ;adcc.c: 91: ADSTAT = 0x00;
 17853  13B4  0197               	clrf	23	;volatile
 17854                           
 17855                           ;adcc.c: 93: ADREF = 0x00;
 17856  13B5  019A               	clrf	26	;volatile
 17857                           
 17858                           ;adcc.c: 95: ADACT = 0x00;
 17859  13B6  0199               	clrf	25	;volatile
 17860                           
 17861                           ;adcc.c: 97: ADCLK = 0x00;
 17862  13B7  0198               	clrf	24	;volatile
 17863  13B8                     l4926:
 17864                           
 17865                           ;adcc.c: 99: ADCON0 = 0x80;
 17866  13B8  3080               	movlw	128
 17867  13B9  0093               	movwf	19	;volatile
 17868  13BA                     l4928:
 17869                           
 17870                           ;adcc.c: 101: ADACQ = 0xFF;
 17871  13BA  30FF               	movlw	255
 17872  13BB  009D               	movwf	29	;volatile
 17873  13BC                     l531:
 17874  13BC  0008               	return
 17875  13BD                     __end_of_ADCC_Initialize:
 17876                           
 17877                           	psect	text61
 17878  123F                     __ptext61:	
 17879 ;; *************** function _PWM_Output_D4_Enable *****************
 17880 ;; Defined at:
 17881 ;;		line 334 in file "main.c"
 17882 ;; Parameters:    Size  Location     Type
 17883 ;;		None
 17884 ;; Auto vars:     Size  Location     Type
 17885 ;;		None
 17886 ;; Return value:  Size  Location     Type
 17887 ;;                  1    wreg      void 
 17888 ;; Registers used:
 17889 ;;		None
 17890 ;; Tracked objects:
 17891 ;;		On entry : 0/0
 17892 ;;		On exit  : 0/0
 17893 ;;		Unchanged: 0/0
 17894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17899 ;;Total ram usage:        0 bytes
 17900 ;; Hardware stack levels used:    1
 17901 ;; Hardware stack levels required when called:    5
 17902 ;; This function calls:
 17903 ;;		Nothing
 17904 ;; This function is called by:
 17905 ;;		_main
 17906 ;; This function uses a non-reentrant model
 17907 ;;
 17908                           
 17909                           
 17910                           ;psect for function _PWM_Output_D4_Enable
 17911  123F                     _PWM_Output_D4_Enable:
 17912  123F                     l5612:	
 17913                           ;incstack = 0
 17914                           ; Regs used in _PWM_Output_D4_Enable: []
 17915                           
 17916                           
 17917                           ;main.c: 335: PWM6EN = 1;
 17918  123F  0027               	movlb	7	; select bank7
 17919  1240  178E               	bsf	14,7	;volatile
 17920  1241                     l1322:
 17921  1241  0008               	return
 17922  1242                     __end_of_PWM_Output_D4_Enable:
 17923                           
 17924                           	psect	text62
 17925  0B7A                     __ptext62:	
 17926 ;; *************** function _LCDinit *****************
 17927 ;; Defined at:
 17928 ;;		line 271 in file "main.c"
 17929 ;; Parameters:    Size  Location     Type
 17930 ;;		None
 17931 ;; Auto vars:     Size  Location     Type
 17932 ;;		None
 17933 ;; Return value:  Size  Location     Type
 17934 ;;                  1    wreg      void 
 17935 ;; Registers used:
 17936 ;;		wreg, status,2, status,0, pclath, cstack
 17937 ;; Tracked objects:
 17938 ;;		On entry : 0/0
 17939 ;;		On exit  : 0/0
 17940 ;;		Unchanged: 0/0
 17941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17945 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17946 ;;Total ram usage:        1 bytes
 17947 ;; Hardware stack levels used:    1
 17948 ;; Hardware stack levels required when called:    7
 17949 ;; This function calls:
 17950 ;;		_LCDsend
 17951 ;;		_LCDsend2x4
 17952 ;; This function is called by:
 17953 ;;		_main
 17954 ;; This function uses a non-reentrant model
 17955 ;;
 17956                           
 17957                           
 17958                           ;psect for function _LCDinit
 17959  0B7A                     _LCDinit:
 17960  0B7A                     l5578:	
 17961                           ;incstack = 0
 17962                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 17963                           
 17964                           
 17965                           ;main.c: 273: _delay((unsigned long)((50)*(1000000/4000.0)));
 17966  0B7A  3011               	movlw	17
 17967  0B7B  0020               	movlb	0	; select bank0
 17968  0B7C  00A8               	movwf	??_LCDinit
 17969  0B7D  303A               	movlw	58
 17970  0B7E                     u6257:
 17971  0B7E  0B89               	decfsz	9,f
 17972  0B7F  2B7E               	goto	u6257
 17973  0B80  0BA8               	decfsz	??_LCDinit,f
 17974  0B81  2B7E               	goto	u6257
 17975  0B82  0000               	nop
 17976  0B83                     l5580:
 17977                           
 17978                           ;main.c: 274: LCDsend(0x30);
 17979  0B83  3030               	movlw	48
 17980  0B84  318A  2202  318B   	fcall	_LCDsend
 17981  0B87                     l5582:
 17982                           
 17983                           ;main.c: 275: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 17984  0B87  3034               	movlw	52
 17985  0B88  318A  2202  318B   	fcall	_LCDsend
 17986  0B8B  3029               	movlw	41
 17987  0B8C                     u6267:
 17988  0B8C  0B89               	decfsz	9,f
 17989  0B8D  2B8C               	goto	u6267
 17990  0B8E  3200               	nop2
 17991  0B8F                     l5584:
 17992  0B8F  3030               	movlw	48
 17993  0B90  318A  2202  318B   	fcall	_LCDsend
 17994  0B93                     l5586:
 17995                           
 17996                           ;main.c: 276: _delay((unsigned long)((5)*(1000000/4000.0)));
 17997  0B93  30FA               	movlw	250
 17998  0B94                     u6277:
 17999  0B94  3200               	nop2
 18000  0B95  0B89               	decfsz	9,f
 18001  0B96  2B94               	goto	u6277
 18002                           
 18003                           ;main.c: 277: LCDsend(0x30);
 18004  0B97  3030               	movlw	48
 18005  0B98  318A  2202  318B   	fcall	_LCDsend
 18006                           
 18007                           ;main.c: 278: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 18008  0B9B  3034               	movlw	52
 18009  0B9C  318A  2202  318B   	fcall	_LCDsend
 18010  0B9F                     l5588:
 18011  0B9F  3029               	movlw	41
 18012  0BA0                     u6287:
 18013  0BA0  0B89               	decfsz	9,f
 18014  0BA1  2BA0               	goto	u6287
 18015  0BA2  3200               	nop2
 18016  0BA3                     l5590:
 18017  0BA3  3030               	movlw	48
 18018  0BA4  318A  2202  318B   	fcall	_LCDsend
 18019                           
 18020                           ;main.c: 279: _delay((unsigned long)((100)*(1000000/4000000.0)));
 18021  0BA7  3008               	movlw	8
 18022  0BA8                     u6297:
 18023  0BA8  0B89               	decfsz	9,f
 18024  0BA9  2BA8               	goto	u6297
 18025  0BAA  0000               	nop
 18026  0BAB                     l5592:
 18027                           
 18028                           ;main.c: 280: LCDsend(0x30);
 18029  0BAB  3030               	movlw	48
 18030  0BAC  318A  2202  318B   	fcall	_LCDsend
 18031  0BAF                     l5594:
 18032                           
 18033                           ;main.c: 281: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 18034  0BAF  3034               	movlw	52
 18035  0BB0  318A  2202  318B   	fcall	_LCDsend
 18036  0BB3  3029               	movlw	41
 18037  0BB4                     u6307:
 18038  0BB4  0B89               	decfsz	9,f
 18039  0BB5  2BB4               	goto	u6307
 18040  0BB6  3200               	nop2
 18041  0BB7                     l5596:
 18042  0BB7  3030               	movlw	48
 18043  0BB8  318A  2202  318B   	fcall	_LCDsend
 18044  0BBB                     l5598:
 18045                           
 18046                           ;main.c: 282: _delay((unsigned long)((100)*(1000000/4000000.0)));
 18047  0BBB  3008               	movlw	8
 18048  0BBC                     u6317:
 18049  0BBC  0B89               	decfsz	9,f
 18050  0BBD  2BBC               	goto	u6317
 18051  0BBE  0000               	nop
 18052                           
 18053                           ;main.c: 283: LCDsend(0x20);
 18054  0BBF  3020               	movlw	32
 18055  0BC0  318A  2202  318B   	fcall	_LCDsend
 18056                           
 18057                           ;main.c: 284: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 18058  0BC3  3024               	movlw	36
 18059  0BC4  318A  2202  318B   	fcall	_LCDsend
 18060  0BC7                     l5600:
 18061  0BC7  3029               	movlw	41
 18062  0BC8                     u6327:
 18063  0BC8  0B89               	decfsz	9,f
 18064  0BC9  2BC8               	goto	u6327
 18065  0BCA  3200               	nop2
 18066  0BCB                     l5602:
 18067  0BCB  3020               	movlw	32
 18068  0BCC  318A  2202  318B   	fcall	_LCDsend
 18069                           
 18070                           ;main.c: 285: _delay((unsigned long)((5)*(1000000/4000.0)));
 18071  0BCF  30FA               	movlw	250
 18072  0BD0                     u6337:
 18073  0BD0  3200               	nop2
 18074  0BD1  0B89               	decfsz	9,f
 18075  0BD2  2BD0               	goto	u6337
 18076  0BD3                     l5604:
 18077                           
 18078                           ;main.c: 287: LCDsend2x4(0x28, 0);
 18079  0BD3  0020               	movlb	0	; select bank0
 18080  0BD4  01A2               	clrf	LCDsend2x4@mode
 18081  0BD5  3028               	movlw	40
 18082  0BD6  318B  23F0  318B   	fcall	_LCDsend2x4
 18083  0BD9                     l5606:
 18084                           
 18085                           ;main.c: 288: LCDsend2x4(0x06, 0);
 18086  0BD9  0020               	movlb	0	; select bank0
 18087  0BDA  01A2               	clrf	LCDsend2x4@mode
 18088  0BDB  3006               	movlw	6
 18089  0BDC  318B  23F0  318B   	fcall	_LCDsend2x4
 18090  0BDF                     l5608:
 18091                           
 18092                           ;main.c: 289: LCDsend2x4(0x0f, 0);
 18093  0BDF  0020               	movlb	0	; select bank0
 18094  0BE0  01A2               	clrf	LCDsend2x4@mode
 18095  0BE1  300F               	movlw	15
 18096  0BE2  318B  23F0  318B   	fcall	_LCDsend2x4
 18097  0BE5                     l5610:
 18098                           
 18099                           ;main.c: 290: LCDsend2x4(0x01, 0);
 18100  0BE5  0020               	movlb	0	; select bank0
 18101  0BE6  01A2               	clrf	LCDsend2x4@mode
 18102  0BE7  3001               	movlw	1
 18103  0BE8  318B  23F0  318B   	fcall	_LCDsend2x4
 18104                           
 18105                           ;main.c: 291: _delay((unsigned long)((2)*(1000000/4000.0)));
 18106  0BEB  30A6               	movlw	166
 18107  0BEC                     u6347:
 18108  0BEC  0B89               	decfsz	9,f
 18109  0BED  2BEC               	goto	u6347
 18110  0BEE  3200               	nop2
 18111  0BEF                     l1294:
 18112  0BEF  0008               	return
 18113  0BF0                     __end_of_LCDinit:
 18114                           
 18115                           	psect	text63
 18116  0BF0                     __ptext63:	
 18117 ;; *************** function _LCDsend2x4 *****************
 18118 ;; Defined at:
 18119 ;;		line 248 in file "main.c"
 18120 ;; Parameters:    Size  Location     Type
 18121 ;;  c               1    wreg     unsigned char 
 18122 ;;  mode            1    2[BANK0 ] unsigned char 
 18123 ;; Auto vars:     Size  Location     Type
 18124 ;;  c               1    5[BANK0 ] unsigned char 
 18125 ;;  lc              1    7[BANK0 ] unsigned char 
 18126 ;;  hc              1    6[BANK0 ] unsigned char 
 18127 ;; Return value:  Size  Location     Type
 18128 ;;                  1    wreg      void 
 18129 ;; Registers used:
 18130 ;;		wreg, status,2, status,0, pclath, cstack
 18131 ;; Tracked objects:
 18132 ;;		On entry : 0/0
 18133 ;;		On exit  : 0/0
 18134 ;;		Unchanged: 0/0
 18135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18136 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18137 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18138 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18139 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18140 ;;Total ram usage:        6 bytes
 18141 ;; Hardware stack levels used:    1
 18142 ;; Hardware stack levels required when called:    6
 18143 ;; This function calls:
 18144 ;;		_WriteI2C
 18145 ;; This function is called by:
 18146 ;;		_LCDinit
 18147 ;;		_LCDcmd
 18148 ;;		_LCDchar
 18149 ;; This function uses a non-reentrant model
 18150 ;;
 18151                           
 18152                           
 18153                           ;psect for function _LCDsend2x4
 18154  0BF0                     _LCDsend2x4:
 18155                           
 18156                           ;incstack = 0
 18157                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 18158                           ;LCDsend2x4@c stored from wreg
 18159  0BF0  0020               	movlb	0	; select bank0
 18160  0BF1  00A5               	movwf	LCDsend2x4@c
 18161  0BF2                     l4448:
 18162                           
 18163                           ;main.c: 250: unsigned char hc;;main.c: 251: unsigned char lc;;main.c: 253: hc = c & 0xf
      +                          0;
 18164  0BF2  0825               	movf	LCDsend2x4@c,w
 18165  0BF3  39F0               	andlw	240
 18166  0BF4  00A3               	movwf	??_LCDsend2x4
 18167  0BF5  0823               	movf	??_LCDsend2x4,w
 18168  0BF6  00A6               	movwf	LCDsend2x4@hc
 18169  0BF7                     l4450:
 18170                           
 18171                           ;main.c: 254: lc = (c << 4) & 0xf0;
 18172  0BF7  0825               	movf	LCDsend2x4@c,w
 18173  0BF8  00A3               	movwf	??_LCDsend2x4
 18174  0BF9  3003               	movlw	3
 18175  0BFA                     u3265:
 18176  0BFA  35A3               	lslf	??_LCDsend2x4,f
 18177  0BFB  3EFF               	addlw	-1
 18178  0BFC  1D03               	skipz
 18179  0BFD  2BFA               	goto	u3265
 18180  0BFE  3523               	lslf	??_LCDsend2x4,w
 18181  0BFF  39F0               	andlw	240
 18182  0C00  00A4               	movwf	??_LCDsend2x4+1
 18183  0C01  0824               	movf	??_LCDsend2x4+1,w
 18184  0C02  00A7               	movwf	LCDsend2x4@lc
 18185  0C03                     l4452:	
 18186                           ;main.c: 256: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 18187                           
 18188  0C03  0023               	movlb	3	; select bank3
 18189  0C04  0C0F               	rrf	15,w	;volatile
 18190  0C05  0C89               	rrf	9,f
 18191  0C06  3901               	andlw	1
 18192  0C07  0020               	movlb	0	; select bank0
 18193  0C08  00A3               	movwf	??_LCDsend2x4
 18194  0C09  0023               	movlb	3	; select bank3
 18195  0C0A  0811               	movf	17,w	;volatile
 18196  0C0B  391F               	andlw	31
 18197  0C0C  0020               	movlb	0	; select bank0
 18198  0C0D  0423               	iorwf	??_LCDsend2x4,w
 18199  0C0E  1D03               	btfss	3,2
 18200  0C0F  2C11               	goto	u3271
 18201  0C10  2C12               	goto	u3270
 18202  0C11                     u3271:
 18203  0C11  2C03               	goto	l4452
 18204  0C12                     u3270:
 18205  0C12                     l1260:
 18206                           
 18207                           ;main.c: 257: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 18208  0C12  0023               	movlb	3	; select bank3
 18209  0C13  1411               	bsf	17,0	;volatile
 18210  0C14                     l1261:
 18211  0C14  1811               	btfsc	17,0	;volatile
 18212  0C15  2C17               	goto	u3281
 18213  0C16  2C18               	goto	u3280
 18214  0C17                     u3281:
 18215  0C17  2C14               	goto	l1261
 18216  0C18                     u3280:
 18217  0C18                     l4454:
 18218  0C18  0023               	movlb	3	; select bank3
 18219  0C19  0C0F               	rrf	15,w	;volatile
 18220  0C1A  0C89               	rrf	9,f
 18221  0C1B  3901               	andlw	1
 18222  0C1C  0020               	movlb	0	; select bank0
 18223  0C1D  00A3               	movwf	??_LCDsend2x4
 18224  0C1E  0023               	movlb	3	; select bank3
 18225  0C1F  0811               	movf	17,w	;volatile
 18226  0C20  391F               	andlw	31
 18227  0C21  0020               	movlb	0	; select bank0
 18228  0C22  0423               	iorwf	??_LCDsend2x4,w
 18229  0C23  1D03               	btfss	3,2
 18230  0C24  2C26               	goto	u3291
 18231  0C25  2C27               	goto	u3290
 18232  0C26                     u3291:
 18233  0C26  2C18               	goto	l4454
 18234  0C27                     u3290:
 18235  0C27                     l4456:
 18236                           
 18237                           ;main.c: 258: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 18238  0C27  304E               	movlw	78
 18239  0C28  318A  2255  318B   	fcall	_WriteI2C
 18240  0C2B                     l4458:
 18241  0C2B  0023               	movlb	3	; select bank3
 18242  0C2C  0C0F               	rrf	15,w	;volatile
 18243  0C2D  0C89               	rrf	9,f
 18244  0C2E  3901               	andlw	1
 18245  0C2F  0020               	movlb	0	; select bank0
 18246  0C30  00A3               	movwf	??_LCDsend2x4
 18247  0C31  0023               	movlb	3	; select bank3
 18248  0C32  0811               	movf	17,w	;volatile
 18249  0C33  391F               	andlw	31
 18250  0C34  0020               	movlb	0	; select bank0
 18251  0C35  0423               	iorwf	??_LCDsend2x4,w
 18252  0C36  1D03               	btfss	3,2
 18253  0C37  2C39               	goto	u3301
 18254  0C38  2C3A               	goto	u3300
 18255  0C39                     u3301:
 18256  0C39  2C2B               	goto	l4458
 18257  0C3A                     u3300:
 18258  0C3A                     l4460:
 18259                           
 18260                           ;main.c: 259: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 18261  0C3A  0826               	movf	LCDsend2x4@hc,w
 18262  0C3B  0422               	iorwf	LCDsend2x4@mode,w
 18263  0C3C  3808               	iorlw	8
 18264  0C3D  318A  2255  318B   	fcall	_WriteI2C
 18265  0C40                     l4462:
 18266  0C40  0023               	movlb	3	; select bank3
 18267  0C41  0C0F               	rrf	15,w	;volatile
 18268  0C42  0C89               	rrf	9,f
 18269  0C43  3901               	andlw	1
 18270  0C44  0020               	movlb	0	; select bank0
 18271  0C45  00A3               	movwf	??_LCDsend2x4
 18272  0C46  0023               	movlb	3	; select bank3
 18273  0C47  0811               	movf	17,w	;volatile
 18274  0C48  391F               	andlw	31
 18275  0C49  0020               	movlb	0	; select bank0
 18276  0C4A  0423               	iorwf	??_LCDsend2x4,w
 18277  0C4B  1D03               	btfss	3,2
 18278  0C4C  2C4E               	goto	u3311
 18279  0C4D  2C4F               	goto	u3310
 18280  0C4E                     u3311:
 18281  0C4E  2C40               	goto	l4462
 18282  0C4F                     u3310:
 18283  0C4F                     l4464:
 18284                           
 18285                           ;main.c: 260: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 18286  0C4F  0826               	movf	LCDsend2x4@hc,w
 18287  0C50  0422               	iorwf	LCDsend2x4@mode,w
 18288  0C51  380C               	iorlw	12
 18289  0C52  318A  2255  318B   	fcall	_WriteI2C
 18290  0C55                     l4466:
 18291  0C55  0023               	movlb	3	; select bank3
 18292  0C56  0C0F               	rrf	15,w	;volatile
 18293  0C57  0C89               	rrf	9,f
 18294  0C58  3901               	andlw	1
 18295  0C59  0020               	movlb	0	; select bank0
 18296  0C5A  00A3               	movwf	??_LCDsend2x4
 18297  0C5B  0023               	movlb	3	; select bank3
 18298  0C5C  0811               	movf	17,w	;volatile
 18299  0C5D  391F               	andlw	31
 18300  0C5E  0020               	movlb	0	; select bank0
 18301  0C5F  0423               	iorwf	??_LCDsend2x4,w
 18302  0C60  1D03               	btfss	3,2
 18303  0C61  2C63               	goto	u3321
 18304  0C62  2C64               	goto	u3320
 18305  0C63                     u3321:
 18306  0C63  2C55               	goto	l4466
 18307  0C64                     u3320:
 18308  0C64                     l1275:
 18309  0C64                     l4468:	
 18310                           ;main.c: 261: _delay((unsigned long)((1)*(1000000/4000000.0)));
 18311                           
 18312                           
 18313                           ;main.c: 262: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 18314  0C64  0020               	movlb	0	; select bank0
 18315  0C65  0826               	movf	LCDsend2x4@hc,w
 18316  0C66  0422               	iorwf	LCDsend2x4@mode,w
 18317  0C67  3808               	iorlw	8
 18318  0C68  318A  2255  318B   	fcall	_WriteI2C
 18319  0C6B                     l4470:
 18320  0C6B  0023               	movlb	3	; select bank3
 18321  0C6C  0C0F               	rrf	15,w	;volatile
 18322  0C6D  0C89               	rrf	9,f
 18323  0C6E  3901               	andlw	1
 18324  0C6F  0020               	movlb	0	; select bank0
 18325  0C70  00A3               	movwf	??_LCDsend2x4
 18326  0C71  0023               	movlb	3	; select bank3
 18327  0C72  0811               	movf	17,w	;volatile
 18328  0C73  391F               	andlw	31
 18329  0C74  0020               	movlb	0	; select bank0
 18330  0C75  0423               	iorwf	??_LCDsend2x4,w
 18331  0C76  1D03               	btfss	3,2
 18332  0C77  2C79               	goto	u3331
 18333  0C78  2C7A               	goto	u3330
 18334  0C79                     u3331:
 18335  0C79  2C6B               	goto	l4470
 18336  0C7A                     u3330:
 18337  0C7A                     l4472:
 18338                           
 18339                           ;main.c: 263: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 18340  0C7A  0827               	movf	LCDsend2x4@lc,w
 18341  0C7B  0422               	iorwf	LCDsend2x4@mode,w
 18342  0C7C  3808               	iorlw	8
 18343  0C7D  318A  2255  318B   	fcall	_WriteI2C
 18344  0C80                     l4474:
 18345  0C80  0023               	movlb	3	; select bank3
 18346  0C81  0C0F               	rrf	15,w	;volatile
 18347  0C82  0C89               	rrf	9,f
 18348  0C83  3901               	andlw	1
 18349  0C84  0020               	movlb	0	; select bank0
 18350  0C85  00A3               	movwf	??_LCDsend2x4
 18351  0C86  0023               	movlb	3	; select bank3
 18352  0C87  0811               	movf	17,w	;volatile
 18353  0C88  391F               	andlw	31
 18354  0C89  0020               	movlb	0	; select bank0
 18355  0C8A  0423               	iorwf	??_LCDsend2x4,w
 18356  0C8B  1D03               	btfss	3,2
 18357  0C8C  2C8E               	goto	u3341
 18358  0C8D  2C8F               	goto	u3340
 18359  0C8E                     u3341:
 18360  0C8E  2C80               	goto	l4474
 18361  0C8F                     u3340:
 18362  0C8F                     l4476:
 18363                           
 18364                           ;main.c: 264: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 18365  0C8F  0827               	movf	LCDsend2x4@lc,w
 18366  0C90  0422               	iorwf	LCDsend2x4@mode,w
 18367  0C91  380C               	iorlw	12
 18368  0C92  318A  2255  318B   	fcall	_WriteI2C
 18369  0C95                     l4478:
 18370  0C95  0023               	movlb	3	; select bank3
 18371  0C96  0C0F               	rrf	15,w	;volatile
 18372  0C97  0C89               	rrf	9,f
 18373  0C98  3901               	andlw	1
 18374  0C99  0020               	movlb	0	; select bank0
 18375  0C9A  00A3               	movwf	??_LCDsend2x4
 18376  0C9B  0023               	movlb	3	; select bank3
 18377  0C9C  0811               	movf	17,w	;volatile
 18378  0C9D  391F               	andlw	31
 18379  0C9E  0020               	movlb	0	; select bank0
 18380  0C9F  0423               	iorwf	??_LCDsend2x4,w
 18381  0CA0  1D03               	btfss	3,2
 18382  0CA1  2CA3               	goto	u3351
 18383  0CA2  2CA4               	goto	u3350
 18384  0CA3                     u3351:
 18385  0CA3  2C95               	goto	l4478
 18386  0CA4                     u3350:
 18387  0CA4                     l1284:
 18388  0CA4                     l4480:	
 18389                           ;main.c: 265: _delay((unsigned long)((1)*(1000000/4000000.0)));
 18390                           
 18391                           
 18392                           ;main.c: 266: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 18393  0CA4  0020               	movlb	0	; select bank0
 18394  0CA5  0827               	movf	LCDsend2x4@lc,w
 18395  0CA6  0422               	iorwf	LCDsend2x4@mode,w
 18396  0CA7  3808               	iorlw	8
 18397  0CA8  318A  2255  318B   	fcall	_WriteI2C
 18398  0CAB                     l4482:
 18399  0CAB  0023               	movlb	3	; select bank3
 18400  0CAC  0C0F               	rrf	15,w	;volatile
 18401  0CAD  0C89               	rrf	9,f
 18402  0CAE  3901               	andlw	1
 18403  0CAF  0020               	movlb	0	; select bank0
 18404  0CB0  00A3               	movwf	??_LCDsend2x4
 18405  0CB1  0023               	movlb	3	; select bank3
 18406  0CB2  0811               	movf	17,w	;volatile
 18407  0CB3  391F               	andlw	31
 18408  0CB4  0020               	movlb	0	; select bank0
 18409  0CB5  0423               	iorwf	??_LCDsend2x4,w
 18410  0CB6  1D03               	btfss	3,2
 18411  0CB7  2CB9               	goto	u3361
 18412  0CB8  2CBA               	goto	u3360
 18413  0CB9                     u3361:
 18414  0CB9  2CAB               	goto	l4482
 18415  0CBA                     u3360:
 18416  0CBA                     l1287:
 18417                           
 18418                           ;main.c: 267: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 18419  0CBA  0023               	movlb	3	; select bank3
 18420  0CBB  1511               	bsf	17,2	;volatile
 18421  0CBC                     l1288:
 18422  0CBC  1911               	btfsc	17,2	;volatile
 18423  0CBD  2CBF               	goto	u3371
 18424  0CBE  2CC0               	goto	u3370
 18425  0CBF                     u3371:
 18426  0CBF  2CBC               	goto	l1288
 18427  0CC0                     u3370:
 18428  0CC0                     l4484:
 18429                           
 18430                           ;main.c: 268: _delay((unsigned long)((50)*(1000000/4000000.0)));
 18431  0CC0  3004               	movlw	4
 18432  0CC1                     u6357:
 18433  0CC1  0B89               	decfsz	9,f
 18434  0CC2  2CC1               	goto	u6357
 18435  0CC3                     l1291:
 18436  0CC3  0008               	return
 18437  0CC4                     __end_of_LCDsend2x4:
 18438                           
 18439                           	psect	text64
 18440  0A02                     __ptext64:	
 18441 ;; *************** function _LCDsend *****************
 18442 ;; Defined at:
 18443 ;;		line 209 in file "main.c"
 18444 ;; Parameters:    Size  Location     Type
 18445 ;;  c               1    wreg     unsigned char 
 18446 ;; Auto vars:     Size  Location     Type
 18447 ;;  c               1    3[BANK0 ] unsigned char 
 18448 ;; Return value:  Size  Location     Type
 18449 ;;                  1    wreg      void 
 18450 ;; Registers used:
 18451 ;;		wreg, status,2, status,0, pclath, cstack
 18452 ;; Tracked objects:
 18453 ;;		On entry : 0/0
 18454 ;;		On exit  : 0/0
 18455 ;;		Unchanged: 0/0
 18456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18458 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18459 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18460 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18461 ;;Total ram usage:        2 bytes
 18462 ;; Hardware stack levels used:    1
 18463 ;; Hardware stack levels required when called:    6
 18464 ;; This function calls:
 18465 ;;		_WriteI2C
 18466 ;; This function is called by:
 18467 ;;		_LCDinit
 18468 ;; This function uses a non-reentrant model
 18469 ;;
 18470                           
 18471                           
 18472                           ;psect for function _LCDsend
 18473  0A02                     _LCDsend:
 18474                           
 18475                           ;incstack = 0
 18476                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 18477                           ;LCDsend@c stored from wreg
 18478  0A02  0020               	movlb	0	; select bank0
 18479  0A03  00A3               	movwf	LCDsend@c
 18480  0A04                     l5076:
 18481  0A04                     l5078:	
 18482                           ;main.c: 211: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 18483                           
 18484  0A04  0023               	movlb	3	; select bank3
 18485  0A05  0C0F               	rrf	15,w	;volatile
 18486  0A06  0C89               	rrf	9,f
 18487  0A07  3901               	andlw	1
 18488  0A08  0020               	movlb	0	; select bank0
 18489  0A09  00A2               	movwf	??_LCDsend
 18490  0A0A  0023               	movlb	3	; select bank3
 18491  0A0B  0811               	movf	17,w	;volatile
 18492  0A0C  391F               	andlw	31
 18493  0A0D  0020               	movlb	0	; select bank0
 18494  0A0E  0422               	iorwf	??_LCDsend,w
 18495  0A0F  1D03               	btfss	3,2
 18496  0A10  2A12               	goto	u4281
 18497  0A11  2A13               	goto	u4280
 18498  0A12                     u4281:
 18499  0A12  2A04               	goto	l5078
 18500  0A13                     u4280:
 18501  0A13                     l1158:
 18502                           
 18503                           ;main.c: 212: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 18504  0A13  0023               	movlb	3	; select bank3
 18505  0A14  1411               	bsf	17,0	;volatile
 18506  0A15                     l1159:
 18507  0A15  1811               	btfsc	17,0	;volatile
 18508  0A16  2A18               	goto	u4291
 18509  0A17  2A19               	goto	u4290
 18510  0A18                     u4291:
 18511  0A18  2A15               	goto	l1159
 18512  0A19                     u4290:
 18513  0A19                     l5080:
 18514  0A19  0023               	movlb	3	; select bank3
 18515  0A1A  0C0F               	rrf	15,w	;volatile
 18516  0A1B  0C89               	rrf	9,f
 18517  0A1C  3901               	andlw	1
 18518  0A1D  0020               	movlb	0	; select bank0
 18519  0A1E  00A2               	movwf	??_LCDsend
 18520  0A1F  0023               	movlb	3	; select bank3
 18521  0A20  0811               	movf	17,w	;volatile
 18522  0A21  391F               	andlw	31
 18523  0A22  0020               	movlb	0	; select bank0
 18524  0A23  0422               	iorwf	??_LCDsend,w
 18525  0A24  1D03               	btfss	3,2
 18526  0A25  2A27               	goto	u4301
 18527  0A26  2A28               	goto	u4300
 18528  0A27                     u4301:
 18529  0A27  2A19               	goto	l5080
 18530  0A28                     u4300:
 18531  0A28                     l5082:
 18532                           
 18533                           ;main.c: 213: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 18534  0A28  304E               	movlw	78
 18535  0A29  318A  2255  318A   	fcall	_WriteI2C
 18536  0A2C                     l5084:
 18537  0A2C  0023               	movlb	3	; select bank3
 18538  0A2D  0C0F               	rrf	15,w	;volatile
 18539  0A2E  0C89               	rrf	9,f
 18540  0A2F  3901               	andlw	1
 18541  0A30  0020               	movlb	0	; select bank0
 18542  0A31  00A2               	movwf	??_LCDsend
 18543  0A32  0023               	movlb	3	; select bank3
 18544  0A33  0811               	movf	17,w	;volatile
 18545  0A34  391F               	andlw	31
 18546  0A35  0020               	movlb	0	; select bank0
 18547  0A36  0422               	iorwf	??_LCDsend,w
 18548  0A37  1D03               	btfss	3,2
 18549  0A38  2A3A               	goto	u4311
 18550  0A39  2A3B               	goto	u4310
 18551  0A3A                     u4311:
 18552  0A3A  2A2C               	goto	l5084
 18553  0A3B                     u4310:
 18554  0A3B                     l5086:
 18555                           
 18556                           ;main.c: 214: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 18557  0A3B  0823               	movf	LCDsend@c,w
 18558  0A3C  318A  2255  318A   	fcall	_WriteI2C
 18559  0A3F                     l5088:
 18560  0A3F  0023               	movlb	3	; select bank3
 18561  0A40  0C0F               	rrf	15,w	;volatile
 18562  0A41  0C89               	rrf	9,f
 18563  0A42  3901               	andlw	1
 18564  0A43  0020               	movlb	0	; select bank0
 18565  0A44  00A2               	movwf	??_LCDsend
 18566  0A45  0023               	movlb	3	; select bank3
 18567  0A46  0811               	movf	17,w	;volatile
 18568  0A47  391F               	andlw	31
 18569  0A48  0020               	movlb	0	; select bank0
 18570  0A49  0422               	iorwf	??_LCDsend,w
 18571  0A4A  1D03               	btfss	3,2
 18572  0A4B  2A4D               	goto	u4321
 18573  0A4C  2A4E               	goto	u4320
 18574  0A4D                     u4321:
 18575  0A4D  2A3F               	goto	l5088
 18576  0A4E                     u4320:
 18577  0A4E                     l1170:
 18578                           
 18579                           ;main.c: 215: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 18580  0A4E  0023               	movlb	3	; select bank3
 18581  0A4F  1511               	bsf	17,2	;volatile
 18582  0A50                     l1171:
 18583  0A50  1911               	btfsc	17,2	;volatile
 18584  0A51  2A53               	goto	u4331
 18585  0A52  2A54               	goto	u4330
 18586  0A53                     u4331:
 18587  0A53  2A50               	goto	l1171
 18588  0A54                     u4330:
 18589  0A54                     l1174:
 18590  0A54  0008               	return
 18591  0A55                     __end_of_LCDsend:
 18592                           
 18593                           	psect	text65
 18594  0A55                     __ptext65:	
 18595 ;; *************** function _WriteI2C *****************
 18596 ;; Defined at:
 18597 ;;		line 47 in file "I2C/i2c.c"
 18598 ;; Parameters:    Size  Location     Type
 18599 ;;  data_out        1    wreg     unsigned char 
 18600 ;; Auto vars:     Size  Location     Type
 18601 ;;  data_out        1    1[BANK0 ] unsigned char 
 18602 ;; Return value:  Size  Location     Type
 18603 ;;                  1    wreg      char 
 18604 ;; Registers used:
 18605 ;;		wreg, status,2, status,0
 18606 ;; Tracked objects:
 18607 ;;		On entry : 0/0
 18608 ;;		On exit  : 0/0
 18609 ;;		Unchanged: 0/0
 18610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18613 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18614 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18615 ;;Total ram usage:        2 bytes
 18616 ;; Hardware stack levels used:    1
 18617 ;; Hardware stack levels required when called:    5
 18618 ;; This function calls:
 18619 ;;		Nothing
 18620 ;; This function is called by:
 18621 ;;		_LCDsend
 18622 ;;		_LCDsend2x4
 18623 ;;		_LCDrecv
 18624 ;; This function uses a non-reentrant model
 18625 ;;
 18626                           
 18627                           
 18628                           ;psect for function _WriteI2C
 18629  0A55                     _WriteI2C:
 18630                           
 18631                           ;incstack = 0
 18632                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 18633                           ;WriteI2C@data_out stored from wreg
 18634  0A55  0020               	movlb	0	; select bank0
 18635  0A56  00A1               	movwf	WriteI2C@data_out
 18636  0A57                     l4400:
 18637                           
 18638                           ;i2c.c: 49: SSP1BUF = data_out;
 18639  0A57  0821               	movf	WriteI2C@data_out,w
 18640  0A58  0023               	movlb	3	; select bank3
 18641  0A59  008C               	movwf	12	;volatile
 18642  0A5A                     l4402:
 18643                           
 18644                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 18645  0A5A  1F90               	btfss	16,7	;volatile
 18646  0A5B  2A5D               	goto	u3141
 18647  0A5C  2A5E               	goto	u3140
 18648  0A5D                     u3141:
 18649  0A5D  2A5F               	goto	l4408
 18650  0A5E                     u3140:
 18651  0A5E  2AAE               	goto	l30
 18652  0A5F                     l4408:
 18653                           
 18654                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 18655  0A5F  300F               	movlw	15
 18656  0A60  0510               	andwf	16,w	;volatile
 18657  0A61  0020               	movlb	0	; select bank0
 18658  0A62  00A0               	movwf	??_WriteI2C
 18659  0A63  3008               	movlw	8
 18660  0A64  0620               	xorwf	??_WriteI2C,w
 18661  0A65  1903               	btfsc	3,2
 18662  0A66  2A68               	goto	u3151
 18663  0A67  2A69               	goto	u3150
 18664  0A68                     u3151:
 18665  0A68  2A82               	goto	l4420
 18666  0A69                     u3150:
 18667  0A69                     l4410:
 18668  0A69  300F               	movlw	15
 18669  0A6A  0023               	movlb	3	; select bank3
 18670  0A6B  0510               	andwf	16,w	;volatile
 18671  0A6C  0020               	movlb	0	; select bank0
 18672  0A6D  00A0               	movwf	??_WriteI2C
 18673  0A6E  300B               	movlw	11
 18674  0A6F  0620               	xorwf	??_WriteI2C,w
 18675  0A70  1903               	btfsc	3,2
 18676  0A71  2A73               	goto	u3161
 18677  0A72  2A74               	goto	u3160
 18678  0A73                     u3161:
 18679  0A73  2A82               	goto	l4420
 18680  0A74                     u3160:
 18681  0A74                     l4412:
 18682                           
 18683                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 18684  0A74  0023               	movlb	3	; select bank3
 18685  0A75  1610               	bsf	16,4	;volatile
 18686  0A76                     l33:	
 18687                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 18688                           
 18689  0A76  002E               	movlb	14	; select bank14
 18690  0A77  1C0F               	btfss	15,0	;volatile
 18691  0A78  2A7A               	goto	u3171
 18692  0A79  2A7B               	goto	u3170
 18693  0A7A                     u3171:
 18694  0A7A  2A76               	goto	l33
 18695  0A7B                     u3170:
 18696  0A7B                     l35:
 18697                           
 18698                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 18699  0A7B  0023               	movlb	3	; select bank3
 18700  0A7C  190F               	btfsc	15,2	;volatile
 18701  0A7D  2A7F               	goto	u3181
 18702  0A7E  2A80               	goto	u3180
 18703  0A7F                     u3181:
 18704  0A7F  2AAE               	goto	l30
 18705  0A80                     u3180:
 18706  0A80                     l4414:
 18707  0A80  080F               	movf	15,w	;volatile
 18708  0A81  2AAE               	goto	l30
 18709  0A82                     l4420:
 18710                           
 18711                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 18712  0A82  300F               	movlw	15
 18713  0A83  0023               	movlb	3	; select bank3
 18714  0A84  0510               	andwf	16,w	;volatile
 18715  0A85  0020               	movlb	0	; select bank0
 18716  0A86  00A0               	movwf	??_WriteI2C
 18717  0A87  3008               	movlw	8
 18718  0A88  0620               	xorwf	??_WriteI2C,w
 18719  0A89  1903               	btfsc	3,2
 18720  0A8A  2A8C               	goto	u3191
 18721  0A8B  2A8D               	goto	u3190
 18722  0A8C                     u3191:
 18723  0A8C  2A98               	goto	l42
 18724  0A8D                     u3190:
 18725  0A8D                     l4422:
 18726  0A8D  300F               	movlw	15
 18727  0A8E  0023               	movlb	3	; select bank3
 18728  0A8F  0510               	andwf	16,w	;volatile
 18729  0A90  0020               	movlb	0	; select bank0
 18730  0A91  00A0               	movwf	??_WriteI2C
 18731  0A92  300B               	movlw	11
 18732  0A93  0620               	xorwf	??_WriteI2C,w
 18733  0A94  1D03               	btfss	3,2
 18734  0A95  2A97               	goto	u3201
 18735  0A96  2A98               	goto	u3200
 18736  0A97                     u3201:
 18737  0A97  2AAE               	goto	l30
 18738  0A98                     u3200:
 18739  0A98                     l42:
 18740  0A98  0023               	movlb	3	; select bank3
 18741  0A99  180F               	btfsc	15,0	;volatile
 18742  0A9A  2A9C               	goto	u3211
 18743  0A9B  2A9D               	goto	u3210
 18744  0A9C                     u3211:
 18745  0A9C  2A98               	goto	l42
 18746  0A9D                     u3210:
 18747  0A9D                     l4424:
 18748  0A9D  0023               	movlb	3	; select bank3
 18749  0A9E  0C0F               	rrf	15,w	;volatile
 18750  0A9F  0C89               	rrf	9,f
 18751  0AA0  3901               	andlw	1
 18752  0AA1  0020               	movlb	0	; select bank0
 18753  0AA2  00A0               	movwf	??_WriteI2C
 18754  0AA3  0023               	movlb	3	; select bank3
 18755  0AA4  0811               	movf	17,w	;volatile
 18756  0AA5  391F               	andlw	31
 18757  0AA6  0020               	movlb	0	; select bank0
 18758  0AA7  0420               	iorwf	??_WriteI2C,w
 18759  0AA8  1D03               	btfss	3,2
 18760  0AA9  2AAB               	goto	u3221
 18761  0AAA  2AAC               	goto	u3220
 18762  0AAB                     u3221:
 18763  0AAB  2A9D               	goto	l4424
 18764  0AAC                     u3220:
 18765  0AAC                     l47:
 18766                           
 18767                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 18768  0AAC  0023               	movlb	3	; select bank3
 18769  0AAD  0811               	movf	17,w	;volatile
 18770  0AAE                     l30:
 18771  0AAE  0008               	return
 18772  0AAF                     __end_of_WriteI2C:
 18773                           
 18774                           	psect	text66
 18775  123C                     __ptext66:	
 18776 ;; *************** function _EUSART_is_rx_ready *****************
 18777 ;; Defined at:
 18778 ;;		line 118 in file "mcc_generated_files/eusart.c"
 18779 ;; Parameters:    Size  Location     Type
 18780 ;;		None
 18781 ;; Auto vars:     Size  Location     Type
 18782 ;;		None
 18783 ;; Return value:  Size  Location     Type
 18784 ;;                  1    wreg      unsigned char 
 18785 ;; Registers used:
 18786 ;;		wreg
 18787 ;; Tracked objects:
 18788 ;;		On entry : 0/0
 18789 ;;		On exit  : 0/0
 18790 ;;		Unchanged: 0/0
 18791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18796 ;;Total ram usage:        0 bytes
 18797 ;; Hardware stack levels used:    1
 18798 ;; Hardware stack levels required when called:    5
 18799 ;; This function calls:
 18800 ;;		Nothing
 18801 ;; This function is called by:
 18802 ;;		_main
 18803 ;; This function uses a non-reentrant model
 18804 ;;
 18805                           
 18806                           
 18807                           ;psect for function _EUSART_is_rx_ready
 18808  123C                     _EUSART_is_rx_ready:
 18809  123C                     l5478:	
 18810                           ;incstack = 0
 18811                           ; Regs used in _EUSART_is_rx_ready: [wreg]
 18812                           
 18813                           
 18814                           ;eusart.c: 120: return eusartRxCount;
 18815  123C  0021               	movlb	1	; select bank1
 18816  123D  0853               	movf	_eusartRxCount^(0+128),w	;volatile
 18817  123E                     l890:
 18818  123E  0008               	return
 18819  123F                     __end_of_EUSART_is_rx_ready:
 18820                           
 18821                           	psect	text67
 18822  159C                     __ptext67:	
 18823 ;; *************** function _DATAEE_WriteByte *****************
 18824 ;; Defined at:
 18825 ;;		line 180 in file "mcc_generated_files/memory.c"
 18826 ;; Parameters:    Size  Location     Type
 18827 ;;  bAdd            2    0[BANK0 ] unsigned int 
 18828 ;;  bData           1    2[BANK0 ] unsigned char 
 18829 ;; Auto vars:     Size  Location     Type
 18830 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
 18831 ;; Return value:  Size  Location     Type
 18832 ;;                  1    wreg      void 
 18833 ;; Registers used:
 18834 ;;		wreg, status,2, status,0
 18835 ;; Tracked objects:
 18836 ;;		On entry : 0/0
 18837 ;;		On exit  : 0/0
 18838 ;;		Unchanged: 0/0
 18839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18840 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18841 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18843 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18844 ;;Total ram usage:        4 bytes
 18845 ;; Hardware stack levels used:    1
 18846 ;; Hardware stack levels required when called:    5
 18847 ;; This function calls:
 18848 ;;		Nothing
 18849 ;; This function is called by:
 18850 ;;		_main
 18851 ;; This function uses a non-reentrant model
 18852 ;;
 18853                           
 18854                           
 18855                           ;psect for function _DATAEE_WriteByte
 18856  159C                     _DATAEE_WriteByte:
 18857  159C                     l5442:	
 18858                           ;incstack = 0
 18859                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 18860                           
 18861                           
 18862                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 18863  159C  3000               	movlw	0
 18864  159D  1B8B               	btfsc	11,7	;volatile
 18865  159E  3001               	movlw	1
 18866  159F  0020               	movlb	0	; select bank0
 18867  15A0  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
 18868                           
 18869                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 18870  15A1  0821               	movf	DATAEE_WriteByte@bAdd+1,w
 18871  15A2  0030               	movlb	16	; select bank16
 18872  15A3  009B               	movwf	27	;volatile
 18873  15A4                     l5444:
 18874                           
 18875                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 18876  15A4  0020               	movlb	0	; select bank0
 18877  15A5  0820               	movf	DATAEE_WriteByte@bAdd,w
 18878  15A6  0030               	movlb	16	; select bank16
 18879  15A7  009A               	movwf	26	;volatile
 18880  15A8                     l5446:
 18881                           
 18882                           ;memory.c: 186: NVMDATL = bData;
 18883  15A8  0020               	movlb	0	; select bank0
 18884  15A9  0822               	movf	DATAEE_WriteByte@bData,w
 18885  15AA  0030               	movlb	16	; select bank16
 18886  15AB  009C               	movwf	28	;volatile
 18887  15AC                     l5448:
 18888                           
 18889                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 18890  15AC  171E               	bsf	30,6	;volsfr
 18891  15AD                     l5450:
 18892                           
 18893                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 18894  15AD  151E               	bsf	30,2	;volsfr
 18895  15AE                     l5452:
 18896                           
 18897                           ;memory.c: 189: INTCONbits.GIE = 0;
 18898  15AE  138B               	bcf	11,7	;volatile
 18899  15AF                     l5454:
 18900                           
 18901                           ;memory.c: 190: NVMCON2 = 0x55;
 18902  15AF  3055               	movlw	85
 18903  15B0  009F               	movwf	31	;volsfr
 18904  15B1                     l5456:
 18905                           
 18906                           ;memory.c: 191: NVMCON2 = 0xAA;
 18907  15B1  30AA               	movlw	170
 18908  15B2  009F               	movwf	31	;volsfr
 18909  15B3                     l5458:
 18910                           
 18911                           ;memory.c: 192: NVMCON1bits.WR = 1;
 18912  15B3  149E               	bsf	30,1	;volsfr
 18913  15B4                     l801:	
 18914                           ;memory.c: 195: {
 18915                           
 18916  15B4  189E               	btfsc	30,1	;volsfr
 18917  15B5  2DB7               	goto	u4981
 18918  15B6  2DB8               	goto	u4980
 18919  15B7                     u4981:
 18920  15B7  2DB4               	goto	l801
 18921  15B8                     u4980:
 18922  15B8                     l803:
 18923                           
 18924                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 18925  15B8  111E               	bcf	30,2	;volsfr
 18926  15B9                     l5460:
 18927                           
 18928                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 18929  15B9  0020               	movlb	0	; select bank0
 18930  15BA  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
 18931  15BB  1C03               	skipc
 18932  15BC  138B               	bcf	11,7	;volatile
 18933  15BD  1803               	skipnc
 18934  15BE  178B               	bsf	11,7	;volatile
 18935  15BF                     l804:
 18936  15BF  0008               	return
 18937  15C0                     __end_of_DATAEE_WriteByte:
 18938                           
 18939                           	psect	text68
 18940  1322                     __ptext68:	
 18941 ;; *************** function _DATAEE_ReadByte *****************
 18942 ;; Defined at:
 18943 ;;		line 202 in file "mcc_generated_files/memory.c"
 18944 ;; Parameters:    Size  Location     Type
 18945 ;;  bAdd            2    0[BANK0 ] unsigned int 
 18946 ;; Auto vars:     Size  Location     Type
 18947 ;;		None
 18948 ;; Return value:  Size  Location     Type
 18949 ;;                  1    wreg      unsigned char 
 18950 ;; Registers used:
 18951 ;;		wreg, status,2
 18952 ;; Tracked objects:
 18953 ;;		On entry : 0/0
 18954 ;;		On exit  : 0/0
 18955 ;;		Unchanged: 0/0
 18956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18957 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18960 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18961 ;;Total ram usage:        2 bytes
 18962 ;; Hardware stack levels used:    1
 18963 ;; Hardware stack levels required when called:    5
 18964 ;; This function calls:
 18965 ;;		Nothing
 18966 ;; This function is called by:
 18967 ;;		_main
 18968 ;; This function uses a non-reentrant model
 18969 ;;
 18970                           
 18971                           
 18972                           ;psect for function _DATAEE_ReadByte
 18973  1322                     _DATAEE_ReadByte:
 18974  1322                     l5462:	
 18975                           ;incstack = 0
 18976                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 18977                           
 18978                           
 18979                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 18980  1322  0020               	movlb	0	; select bank0
 18981  1323  0821               	movf	DATAEE_ReadByte@bAdd+1,w
 18982  1324  0030               	movlb	16	; select bank16
 18983  1325  009B               	movwf	27	;volatile
 18984  1326                     l5464:
 18985                           
 18986                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 18987  1326  0020               	movlb	0	; select bank0
 18988  1327  0820               	movf	DATAEE_ReadByte@bAdd,w
 18989  1328  0030               	movlb	16	; select bank16
 18990  1329  009A               	movwf	26	;volatile
 18991  132A                     l5466:
 18992                           
 18993                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 18994  132A  171E               	bsf	30,6	;volsfr
 18995  132B                     l5468:
 18996                           
 18997                           ;memory.c: 207: NVMCON1bits.RD = 1;
 18998  132B  141E               	bsf	30,0	;volsfr
 18999  132C                     l5470:
 19000                           
 19001                           ;memory.c: 208: __nop();
 19002  132C  0000               	nop
 19003  132D                     l5472:
 19004                           
 19005                           ;memory.c: 209: __nop();
 19006  132D  0000               	nop
 19007  132E                     l5474:
 19008                           
 19009                           ;memory.c: 211: return (NVMDATL);
 19010  132E  0030               	movlb	16	; select bank16
 19011  132F  081C               	movf	28,w	;volatile
 19012  1330                     l807:
 19013  1330  0008               	return
 19014  1331                     __end_of_DATAEE_ReadByte:
 19015                           
 19016                           	psect	intentry
 19017  0004                     __pintentry:	
 19018 ;; *************** function _INTERRUPT_InterruptManager *****************
 19019 ;; Defined at:
 19020 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 19021 ;; Parameters:    Size  Location     Type
 19022 ;;		None
 19023 ;; Auto vars:     Size  Location     Type
 19024 ;;		None
 19025 ;; Return value:  Size  Location     Type
 19026 ;;                  1    wreg      void 
 19027 ;; Registers used:
 19028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19029 ;; Tracked objects:
 19030 ;;		On entry : 0/0
 19031 ;;		On exit  : 0/0
 19032 ;;		Unchanged: 0/0
 19033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19038 ;;Total ram usage:        0 bytes
 19039 ;; Hardware stack levels used:    1
 19040 ;; Hardware stack levels required when called:    4
 19041 ;; This function calls:
 19042 ;;		Absolute function
 19043 ;;		_EUSART_Receive_ISR
 19044 ;;		_EUSART_Transmit_ISR
 19045 ;;		_INT_ISR
 19046 ;;		_TMR1_ISR
 19047 ;;		_TMR5_ISR
 19048 ;; This function is called by:
 19049 ;;		Interrupt level 1
 19050 ;; This function uses a non-reentrant model
 19051 ;;
 19052                           
 19053  0004                     _INTERRUPT_InterruptManager:
 19054                           
 19055                           ;incstack = 0
 19056  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 19057                           
 19058                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 19059  0005  3180               	pagesel	$
 19060  0006                     i1l5872:
 19061                           
 19062                           ;interrupt_manager.c: 55: if(PIE0bits.INTE == 1 && PIR0bits.INTF == 1)
 19063  0006  002E               	movlb	14	; select bank14
 19064  0007  1C16               	btfss	22,0	;volatile
 19065  0008  280A               	goto	u579_21
 19066  0009  280B               	goto	u579_20
 19067  000A                     u579_21:
 19068  000A  2813               	goto	i1l368
 19069  000B                     u579_20:
 19070  000B                     i1l5874:
 19071  000B  1C0C               	btfss	12,0	;volatile
 19072  000C  280E               	goto	u580_21
 19073  000D  280F               	goto	u580_20
 19074  000E                     u580_21:
 19075  000E  2813               	goto	i1l368
 19076  000F                     u580_20:
 19077  000F                     i1l5876:
 19078                           
 19079                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: INT_ISR();
 19080  000F  3192  225D  3180   	fcall	_INT_ISR
 19081                           
 19082                           ;interrupt_manager.c: 58: }
 19083  0012  285C               	goto	i1l384
 19084  0013                     i1l368:
 19085                           
 19086                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
 19087  0013  1F0B               	btfss	11,6	;volatile
 19088  0014  2816               	goto	u581_21
 19089  0015  2817               	goto	u581_20
 19090  0016                     u581_21:
 19091  0016  285C               	goto	i1l384
 19092  0017                     u581_20:
 19093  0017                     i1l5878:
 19094                           
 19095                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE3bits.TXIE == 1 && PIR3bits.T
      +                          XIF == 1)
 19096  0017  1E19               	btfss	25,4	;volatile
 19097  0018  281A               	goto	u582_21
 19098  0019  281B               	goto	u582_20
 19099  001A                     u582_21:
 19100  001A  2826               	goto	i1l371
 19101  001B                     u582_20:
 19102  001B                     i1l5880:
 19103  001B  1E0F               	btfss	15,4	;volatile
 19104  001C  281E               	goto	u583_21
 19105  001D  281F               	goto	u583_20
 19106  001E                     u583_21:
 19107  001E  2826               	goto	i1l371
 19108  001F                     u583_20:
 19109  001F                     i1l5882:
 19110                           
 19111                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: EUSART_TxDefaultInterruptHandler();
 19112  001F  0021               	movlb	1	; select bank1
 19113  0020  0863               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 19114  0021  008A               	movwf	10
 19115  0022  0862               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 19116  0023  000A               	callw
 19117  0024  3180               	pagesel	$
 19118                           
 19119                           ;interrupt_manager.c: 64: }
 19120  0025  285C               	goto	i1l384
 19121  0026                     i1l371:
 19122                           
 19123                           ;interrupt_manager.c: 65: else if(PIE3bits.RCIE == 1 && PIR3bits.RCIF == 1)
 19124  0026  1E99               	btfss	25,5	;volatile
 19125  0027  2829               	goto	u584_21
 19126  0028  282A               	goto	u584_20
 19127  0029                     u584_21:
 19128  0029  2835               	goto	i1l373
 19129  002A                     u584_20:
 19130  002A                     i1l5884:
 19131  002A  1E8F               	btfss	15,5	;volatile
 19132  002B  282D               	goto	u585_21
 19133  002C  282E               	goto	u585_20
 19134  002D                     u585_21:
 19135  002D  2835               	goto	i1l373
 19136  002E                     u585_20:
 19137  002E                     i1l5886:
 19138                           
 19139                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: EUSART_RxDefaultInterruptHandler();
 19140  002E  0021               	movlb	1	; select bank1
 19141  002F  0861               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 19142  0030  008A               	movwf	10
 19143  0031  0860               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 19144  0032  000A               	callw
 19145  0033  3180               	pagesel	$
 19146                           
 19147                           ;interrupt_manager.c: 68: }
 19148  0034  285C               	goto	i1l384
 19149  0035                     i1l373:
 19150                           
 19151                           ;interrupt_manager.c: 69: else if(PIE4bits.TMR5IE == 1 && PIR4bits.TMR5IF == 1)
 19152  0035  1E1A               	btfss	26,4	;volatile
 19153  0036  2838               	goto	u586_21
 19154  0037  2839               	goto	u586_20
 19155  0038                     u586_21:
 19156  0038  2841               	goto	i1l375
 19157  0039                     u586_20:
 19158  0039                     i1l5888:
 19159  0039  1E10               	btfss	16,4	;volatile
 19160  003A  283C               	goto	u587_21
 19161  003B  283D               	goto	u587_20
 19162  003C                     u587_21:
 19163  003C  2841               	goto	i1l375
 19164  003D                     u587_20:
 19165  003D                     i1l5890:
 19166                           
 19167                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR5_ISR();
 19168  003D  3193  238F  3180   	fcall	_TMR5_ISR
 19169                           
 19170                           ;interrupt_manager.c: 72: }
 19171  0040  285C               	goto	i1l384
 19172  0041                     i1l375:
 19173                           
 19174                           ;interrupt_manager.c: 73: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 19175  0041  1C1A               	btfss	26,0	;volatile
 19176  0042  2844               	goto	u588_21
 19177  0043  2845               	goto	u588_20
 19178  0044                     u588_21:
 19179  0044  284D               	goto	i1l377
 19180  0045                     u588_20:
 19181  0045                     i1l5892:
 19182  0045  1C10               	btfss	16,0	;volatile
 19183  0046  2848               	goto	u589_21
 19184  0047  2849               	goto	u589_20
 19185  0048                     u589_21:
 19186  0048  284D               	goto	i1l377
 19187  0049                     u589_20:
 19188  0049                     i1l5894:
 19189                           
 19190                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: TMR1_ISR();
 19191  0049  3193  2378  3180   	fcall	_TMR1_ISR
 19192                           
 19193                           ;interrupt_manager.c: 76: }
 19194  004C  285C               	goto	i1l384
 19195  004D                     i1l377:
 19196                           
 19197                           ;interrupt_manager.c: 77: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 19198  004D  1C99               	btfss	25,1	;volatile
 19199  004E  2850               	goto	u590_21
 19200  004F  2851               	goto	u590_20
 19201  0050                     u590_21:
 19202  0050  2856               	goto	i1l379
 19203  0051                     u590_20:
 19204  0051                     i1l5896:
 19205                           
 19206                           ;interrupt_manager.c: 78: {;interrupt_manager.c: 79: i2c1_driver_busCollisionISR();
 19207  0051  1C8F               	btfss	15,1	;volatile
 19208  0052  2854               	goto	u591_21
 19209  0053  2855               	goto	u591_20
 19210  0054                     u591_21:
 19211  0054  2856               	goto	i1l379
 19212  0055                     u591_20:
 19213  0055  285C               	goto	i1l384
 19214  0056                     i1l379:
 19215                           
 19216                           ;interrupt_manager.c: 81: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 19217  0056  1C19               	btfss	25,0	;volatile
 19218  0057  2859               	goto	u592_21
 19219  0058  285A               	goto	u592_20
 19220  0059                     u592_21:
 19221  0059  285C               	goto	i1l378
 19222  005A                     u592_20:
 19223  005A                     i1l5900:
 19224                           
 19225                           ;interrupt_manager.c: 82: {;interrupt_manager.c: 83: i2c1_driver_i2cISR();
 19226  005A  080F               	movf	15,w	;volatile
 19227  005B  285C               	goto	i1l384
 19228  005C                     i1l378:
 19229  005C                     i1l384:
 19230  005C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 19231  005D  0009               	retfie
 19232  005E                     __end_of_INTERRUPT_InterruptManager:
 19233                           
 19234                           	psect	text70
 19235  138F                     __ptext70:	
 19236 ;; *************** function _TMR5_ISR *****************
 19237 ;; Defined at:
 19238 ;;		line 168 in file "mcc_generated_files/tmr5.c"
 19239 ;; Parameters:    Size  Location     Type
 19240 ;;		None
 19241 ;; Auto vars:     Size  Location     Type
 19242 ;;		None
 19243 ;; Return value:  Size  Location     Type
 19244 ;;                  1    wreg      void 
 19245 ;; Registers used:
 19246 ;;		wreg, status,2, status,0, pclath, cstack
 19247 ;; Tracked objects:
 19248 ;;		On entry : 0/0
 19249 ;;		On exit  : 0/0
 19250 ;;		Unchanged: 0/0
 19251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19256 ;;Total ram usage:        0 bytes
 19257 ;; Hardware stack levels used:    1
 19258 ;; Hardware stack levels required when called:    3
 19259 ;; This function calls:
 19260 ;;		Absolute function
 19261 ;;		_TMR5_DefaultInterruptHandler
 19262 ;;		_TMR5_WriteTimer
 19263 ;;		_monitoring_ISR
 19264 ;; This function is called by:
 19265 ;;		_INTERRUPT_InterruptManager
 19266 ;; This function uses a non-reentrant model
 19267 ;;
 19268                           
 19269                           
 19270                           ;psect for function _TMR5_ISR
 19271  138F                     _TMR5_ISR:
 19272  138F                     i1l5424:	
 19273                           ;incstack = 0
 19274                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 19275                           
 19276                           
 19277                           ;tmr5.c: 172: PIR4bits.TMR5IF = 0;
 19278  138F  002E               	movlb	14	; select bank14
 19279  1390  1210               	bcf	16,4	;volatile
 19280  1391                     i1l5426:
 19281                           
 19282                           ;tmr5.c: 173: TMR5_WriteTimer(timer5ReloadVal);
 19283  1391  0021               	movlb	1	; select bank1
 19284  1392  085B               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 19285  1393  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 19286  1394  085A               	movf	_timer5ReloadVal^(0+128),w	;volatile
 19287  1395  00F0               	movwf	TMR5_WriteTimer@timerVal
 19288  1396  3193  2342  3193   	fcall	_TMR5_WriteTimer
 19289  1399                     i1l5428:
 19290                           
 19291                           ;tmr5.c: 175: if(TMR5_InterruptHandler)
 19292  1399  0021               	movlb	1	; select bank1
 19293  139A  0858               	movf	_TMR5_InterruptHandler^(0+128),w
 19294  139B  0459               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 19295  139C  1903               	btfsc	3,2
 19296  139D  2B9F               	goto	u496_21
 19297  139E  2BA0               	goto	u496_20
 19298  139F                     u496_21:
 19299  139F  2BA5               	goto	i1l673
 19300  13A0                     u496_20:
 19301  13A0                     i1l5430:
 19302                           
 19303                           ;tmr5.c: 176: {;tmr5.c: 177: TMR5_InterruptHandler();
 19304  13A0  0859               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 19305  13A1  008A               	movwf	10
 19306  13A2  0858               	movf	_TMR5_InterruptHandler^(0+128),w
 19307  13A3  000A               	callw
 19308  13A4  3193               	pagesel	$
 19309  13A5                     i1l673:
 19310  13A5  0008               	return
 19311  13A6                     __end_of_TMR5_ISR:
 19312                           
 19313                           	psect	text71
 19314  0003                     __ptext71:	
 19315 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 19316 ;; Defined at:
 19317 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 19318 ;; Parameters:    Size  Location     Type
 19319 ;;		None
 19320 ;; Auto vars:     Size  Location     Type
 19321 ;;		None
 19322 ;; Return value:  Size  Location     Type
 19323 ;;                  1    wreg      void 
 19324 ;; Registers used:
 19325 ;;		None
 19326 ;; Tracked objects:
 19327 ;;		On entry : 0/0
 19328 ;;		On exit  : 0/0
 19329 ;;		Unchanged: 0/0
 19330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19335 ;;Total ram usage:        0 bytes
 19336 ;; Hardware stack levels used:    1
 19337 ;; This function calls:
 19338 ;;		Nothing
 19339 ;; This function is called by:
 19340 ;;		_TMR5_Initialize
 19341 ;;		_TMR5_ISR
 19342 ;; This function uses a non-reentrant model
 19343 ;;
 19344                           
 19345                           
 19346                           ;psect for function _TMR5_DefaultInterruptHandler
 19347  0003                     _TMR5_DefaultInterruptHandler:
 19348  0003                     i1l679:	
 19349                           ;incstack = 0
 19350                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 19351                           
 19352  0003  0008               	return
 19353  0004                     __end_of_TMR5_DefaultInterruptHandler:
 19354                           
 19355                           	psect	text72
 19356  0ED5                     __ptext72:	
 19357 ;; *************** function _monitoring_ISR *****************
 19358 ;; Defined at:
 19359 ;;		line 524 in file "main.c"
 19360 ;; Parameters:    Size  Location     Type
 19361 ;;		None
 19362 ;; Auto vars:     Size  Location     Type
 19363 ;;		None
 19364 ;; Return value:  Size  Location     Type
 19365 ;;                  1    wreg      void 
 19366 ;; Registers used:
 19367 ;;		wreg, status,2, status,0, pclath, cstack
 19368 ;; Tracked objects:
 19369 ;;		On entry : 0/0
 19370 ;;		On exit  : 0/0
 19371 ;;		Unchanged: 0/0
 19372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19375 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19376 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19377 ;;Total ram usage:        3 bytes
 19378 ;; Hardware stack levels used:    1
 19379 ;; Hardware stack levels required when called:    2
 19380 ;; This function calls:
 19381 ;;		_ADCC_GetSingleConversion
 19382 ;;		_tsttc
 19383 ;;		i1_DATAEE_WriteByte
 19384 ;;		i1___wmul
 19385 ;; This function is called by:
 19386 ;;		_main
 19387 ;;		_TMR5_ISR
 19388 ;; This function uses a non-reentrant model
 19389 ;;
 19390                           
 19391                           
 19392                           ;psect for function _monitoring_ISR
 19393  0ED5                     _monitoring_ISR:
 19394  0ED5                     i1l5282:	
 19395                           ;incstack = 0
 19396                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 19397                           
 19398                           
 19399                           ;main.c: 525: temp = (uint8_t)tsttc();
 19400  0ED5  318D  25C8  318E   	fcall	_tsttc
 19401  0ED8  00FA               	movwf	??_monitoring_ISR
 19402  0ED9  087A               	movf	??_monitoring_ISR,w
 19403  0EDA  0020               	movlb	0	; select bank0
 19404  0EDB  00EC               	movwf	_temp
 19405                           
 19406                           ;main.c: 527: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 19407  0EDC  3000               	movlw	0
 19408  0EDD  3193  2353  318E   	fcall	_ADCC_GetSingleConversion
 19409  0EE0  0870               	movf	?_ADCC_GetSingleConversion,w
 19410  0EE1  00FA               	movwf	??_monitoring_ISR
 19411  0EE2  0871               	movf	?_ADCC_GetSingleConversion+1,w
 19412  0EE3  00FB               	movwf	??_monitoring_ISR+1
 19413  0EE4  300D               	movlw	13
 19414  0EE5                     u472_25:
 19415  0EE5  36FB               	lsrf	??_monitoring_ISR+1,f
 19416  0EE6  0CFA               	rrf	??_monitoring_ISR,f
 19417  0EE7  0B89               	decfsz	9,f
 19418  0EE8  2EE5               	goto	u472_25
 19419  0EE9  087A               	movf	??_monitoring_ISR,w
 19420  0EEA  00FC               	movwf	??_monitoring_ISR+2
 19421  0EEB  087C               	movf	??_monitoring_ISR+2,w
 19422  0EEC  0020               	movlb	0	; select bank0
 19423  0EED  00EB               	movwf	_lumLevel
 19424  0EEE                     i1l5284:
 19425                           
 19426                           ;main.c: 529: if(prevTemp != temp || prevLumLevel != lumLevel){
 19427  0EEE  086C               	movf	_temp,w
 19428  0EEF  00FA               	movwf	??_monitoring_ISR
 19429  0EF0  01FB               	clrf	??_monitoring_ISR+1
 19430  0EF1  0021               	movlb	1	; select bank1
 19431  0EF2  086B               	movf	(_prevTemp+1)^(0+128),w
 19432  0EF3  067B               	xorwf	??_monitoring_ISR+1,w
 19433  0EF4  1D03               	skipz
 19434  0EF5  2EF8               	goto	u473_25
 19435  0EF6  086A               	movf	_prevTemp^(0+128),w
 19436  0EF7  067A               	xorwf	??_monitoring_ISR,w
 19437  0EF8                     u473_25:
 19438  0EF8  1D03               	skipz
 19439  0EF9  2EFB               	goto	u473_21
 19440  0EFA  2EFC               	goto	u473_20
 19441  0EFB                     u473_21:
 19442  0EFB  2F0B               	goto	i1l5288
 19443  0EFC                     u473_20:
 19444  0EFC                     i1l5286:
 19445  0EFC  0020               	movlb	0	; select bank0
 19446  0EFD  086B               	movf	_lumLevel,w
 19447  0EFE  00FA               	movwf	??_monitoring_ISR
 19448  0EFF  01FB               	clrf	??_monitoring_ISR+1
 19449  0F00  0021               	movlb	1	; select bank1
 19450  0F01  0869               	movf	(_prevLumLevel+1)^(0+128),w
 19451  0F02  067B               	xorwf	??_monitoring_ISR+1,w
 19452  0F03  1D03               	skipz
 19453  0F04  2F07               	goto	u474_25
 19454  0F05  0868               	movf	_prevLumLevel^(0+128),w
 19455  0F06  067A               	xorwf	??_monitoring_ISR,w
 19456  0F07                     u474_25:
 19457  0F07  1903               	skipnz
 19458  0F08  2F0A               	goto	u474_21
 19459  0F09  2F0B               	goto	u474_20
 19460  0F0A                     u474_21:
 19461  0F0A  2FB9               	goto	i1l5300
 19462  0F0B                     u474_20:
 19463  0F0B                     i1l5288:
 19464                           
 19465                           ;main.c: 531: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*0) , t.h);
 19466  0F0B  0851               	movf	_idx_RingBuffer^(0+128),w
 19467  0F0C  00FA               	movwf	??_monitoring_ISR
 19468  0F0D  01FB               	clrf	??_monitoring_ISR+1
 19469  0F0E  087A               	movf	??_monitoring_ISR,w
 19470  0F0F  00F0               	movwf	i1___wmul@multiplier
 19471  0F10  087B               	movf	??_monitoring_ISR+1,w
 19472  0F11  00F1               	movwf	i1___wmul@multiplier+1
 19473  0F12  3005               	movlw	5
 19474  0F13  00F2               	movwf	i1___wmul@multiplicand
 19475  0F14  3000               	movlw	0
 19476  0F15  00F3               	movwf	i1___wmul@multiplicand+1
 19477  0F16  3194  247C  318E   	fcall	i1___wmul
 19478  0F19  0870               	movf	?i1___wmul,w
 19479  0F1A  3E14               	addlw	20
 19480  0F1B  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 19481  0F1C  3070               	movlw	112
 19482  0F1D  3D71               	addwfc	?i1___wmul+1,w
 19483  0F1E  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 19484  0F1F  0020               	movlb	0	; select bank0
 19485  0F20  0863               	movf	_t,w
 19486  0F21  00FC               	movwf	??_monitoring_ISR+2
 19487  0F22  087C               	movf	??_monitoring_ISR+2,w
 19488  0F23  00F8               	movwf	i1DATAEE_WriteByte@bData
 19489  0F24  3194  2440  318E   	fcall	i1_DATAEE_WriteByte
 19490                           
 19491                           ;main.c: 532: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*1) , t.m);
 19492  0F27  0021               	movlb	1	; select bank1
 19493  0F28  0851               	movf	_idx_RingBuffer^(0+128),w
 19494  0F29  00FA               	movwf	??_monitoring_ISR
 19495  0F2A  01FB               	clrf	??_monitoring_ISR+1
 19496  0F2B  087A               	movf	??_monitoring_ISR,w
 19497  0F2C  00F0               	movwf	i1___wmul@multiplier
 19498  0F2D  087B               	movf	??_monitoring_ISR+1,w
 19499  0F2E  00F1               	movwf	i1___wmul@multiplier+1
 19500  0F2F  3005               	movlw	5
 19501  0F30  00F2               	movwf	i1___wmul@multiplicand
 19502  0F31  3000               	movlw	0
 19503  0F32  00F3               	movwf	i1___wmul@multiplicand+1
 19504  0F33  3194  247C  318E   	fcall	i1___wmul
 19505  0F36  0870               	movf	?i1___wmul,w
 19506  0F37  3E1C               	addlw	28
 19507  0F38  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 19508  0F39  3070               	movlw	112
 19509  0F3A  3D71               	addwfc	?i1___wmul+1,w
 19510  0F3B  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 19511  0F3C  0020               	movlb	0	; select bank0
 19512  0F3D  0864               	movf	_t+1,w
 19513  0F3E  00FC               	movwf	??_monitoring_ISR+2
 19514  0F3F  087C               	movf	??_monitoring_ISR+2,w
 19515  0F40  00F8               	movwf	i1DATAEE_WriteByte@bData
 19516  0F41  3194  2440  318E   	fcall	i1_DATAEE_WriteByte
 19517                           
 19518                           ;main.c: 533: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*2) , t.s);
 19519  0F44  0021               	movlb	1	; select bank1
 19520  0F45  0851               	movf	_idx_RingBuffer^(0+128),w
 19521  0F46  00FA               	movwf	??_monitoring_ISR
 19522  0F47  01FB               	clrf	??_monitoring_ISR+1
 19523  0F48  087A               	movf	??_monitoring_ISR,w
 19524  0F49  00F0               	movwf	i1___wmul@multiplier
 19525  0F4A  087B               	movf	??_monitoring_ISR+1,w
 19526  0F4B  00F1               	movwf	i1___wmul@multiplier+1
 19527  0F4C  3005               	movlw	5
 19528  0F4D  00F2               	movwf	i1___wmul@multiplicand
 19529  0F4E  3000               	movlw	0
 19530  0F4F  00F3               	movwf	i1___wmul@multiplicand+1
 19531  0F50  3194  247C  318E   	fcall	i1___wmul
 19532  0F53  0870               	movf	?i1___wmul,w
 19533  0F54  3E24               	addlw	36
 19534  0F55  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 19535  0F56  3070               	movlw	112
 19536  0F57  3D71               	addwfc	?i1___wmul+1,w
 19537  0F58  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 19538  0F59  0020               	movlb	0	; select bank0
 19539  0F5A  0865               	movf	_t+2,w
 19540  0F5B  00FC               	movwf	??_monitoring_ISR+2
 19541  0F5C  087C               	movf	??_monitoring_ISR+2,w
 19542  0F5D  00F8               	movwf	i1DATAEE_WriteByte@bData
 19543  0F5E  3194  2440  318E   	fcall	i1_DATAEE_WriteByte
 19544                           
 19545                           ;main.c: 534: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*3) , temp);
 19546  0F61  0021               	movlb	1	; select bank1
 19547  0F62  0851               	movf	_idx_RingBuffer^(0+128),w
 19548  0F63  00FA               	movwf	??_monitoring_ISR
 19549  0F64  01FB               	clrf	??_monitoring_ISR+1
 19550  0F65  087A               	movf	??_monitoring_ISR,w
 19551  0F66  00F0               	movwf	i1___wmul@multiplier
 19552  0F67  087B               	movf	??_monitoring_ISR+1,w
 19553  0F68  00F1               	movwf	i1___wmul@multiplier+1
 19554  0F69  3005               	movlw	5
 19555  0F6A  00F2               	movwf	i1___wmul@multiplicand
 19556  0F6B  3000               	movlw	0
 19557  0F6C  00F3               	movwf	i1___wmul@multiplicand+1
 19558  0F6D  3194  247C  318E   	fcall	i1___wmul
 19559  0F70  0870               	movf	?i1___wmul,w
 19560  0F71  3E2C               	addlw	44
 19561  0F72  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 19562  0F73  3070               	movlw	112
 19563  0F74  3D71               	addwfc	?i1___wmul+1,w
 19564  0F75  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 19565  0F76  0020               	movlb	0	; select bank0
 19566  0F77  086C               	movf	_temp,w
 19567  0F78  00FC               	movwf	??_monitoring_ISR+2
 19568  0F79  087C               	movf	??_monitoring_ISR+2,w
 19569  0F7A  00F8               	movwf	i1DATAEE_WriteByte@bData
 19570  0F7B  3194  2440  318E   	fcall	i1_DATAEE_WriteByte
 19571                           
 19572                           ;main.c: 535: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*4) , lumLevel);
 19573  0F7E  0021               	movlb	1	; select bank1
 19574  0F7F  0851               	movf	_idx_RingBuffer^(0+128),w
 19575  0F80  00FA               	movwf	??_monitoring_ISR
 19576  0F81  01FB               	clrf	??_monitoring_ISR+1
 19577  0F82  087A               	movf	??_monitoring_ISR,w
 19578  0F83  00F0               	movwf	i1___wmul@multiplier
 19579  0F84  087B               	movf	??_monitoring_ISR+1,w
 19580  0F85  00F1               	movwf	i1___wmul@multiplier+1
 19581  0F86  3005               	movlw	5
 19582  0F87  00F2               	movwf	i1___wmul@multiplicand
 19583  0F88  3000               	movlw	0
 19584  0F89  00F3               	movwf	i1___wmul@multiplicand+1
 19585  0F8A  3194  247C  318E   	fcall	i1___wmul
 19586  0F8D  0870               	movf	?i1___wmul,w
 19587  0F8E  3E34               	addlw	52
 19588  0F8F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 19589  0F90  3070               	movlw	112
 19590  0F91  3D71               	addwfc	?i1___wmul+1,w
 19591  0F92  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 19592  0F93  0020               	movlb	0	; select bank0
 19593  0F94  086B               	movf	_lumLevel,w
 19594  0F95  00FC               	movwf	??_monitoring_ISR+2
 19595  0F96  087C               	movf	??_monitoring_ISR+2,w
 19596  0F97  00F8               	movwf	i1DATAEE_WriteByte@bData
 19597  0F98  3194  2440  318E   	fcall	i1_DATAEE_WriteByte
 19598  0F9B                     i1l5290:
 19599                           
 19600                           ;main.c: 537: idx_RingBuffer++;
 19601  0F9B  3001               	movlw	1
 19602  0F9C  00FA               	movwf	??_monitoring_ISR
 19603  0F9D  087A               	movf	??_monitoring_ISR,w
 19604  0F9E  0021               	movlb	1	; select bank1
 19605  0F9F  07D1               	addwf	_idx_RingBuffer^(0+128),f
 19606  0FA0                     i1l5292:
 19607                           
 19608                           ;main.c: 538: if(idx_RingBuffer > NREG){
 19609  0FA0  0851               	movf	_idx_RingBuffer^(0+128),w
 19610  0FA1  0252               	subwf	_NREG^(0+128),w
 19611  0FA2  1803               	skipnc
 19612  0FA3  2FA5               	goto	u475_21
 19613  0FA4  2FA6               	goto	u475_20
 19614  0FA5                     u475_21:
 19615  0FA5  2FA7               	goto	i1l5296
 19616  0FA6                     u475_20:
 19617  0FA6                     i1l5294:
 19618                           
 19619                           ;main.c: 539: idx_RingBuffer = 0;
 19620  0FA6  01D1               	clrf	_idx_RingBuffer^(0+128)
 19621  0FA7                     i1l5296:
 19622                           
 19623                           ;main.c: 540: };main.c: 541: prevTemp = temp;
 19624  0FA7  0020               	movlb	0	; select bank0
 19625  0FA8  086C               	movf	_temp,w
 19626  0FA9  00FA               	movwf	??_monitoring_ISR
 19627  0FAA  01FB               	clrf	??_monitoring_ISR+1
 19628  0FAB  087A               	movf	??_monitoring_ISR,w
 19629  0FAC  0021               	movlb	1	; select bank1
 19630  0FAD  00EA               	movwf	_prevTemp^(0+128)
 19631  0FAE  087B               	movf	??_monitoring_ISR+1,w
 19632  0FAF  00EB               	movwf	(_prevTemp+1)^(0+128)
 19633  0FB0                     i1l5298:
 19634                           
 19635                           ;main.c: 542: prevLumLevel = lumLevel;
 19636  0FB0  0020               	movlb	0	; select bank0
 19637  0FB1  086B               	movf	_lumLevel,w
 19638  0FB2  00FA               	movwf	??_monitoring_ISR
 19639  0FB3  01FB               	clrf	??_monitoring_ISR+1
 19640  0FB4  087A               	movf	??_monitoring_ISR,w
 19641  0FB5  0021               	movlb	1	; select bank1
 19642  0FB6  00E8               	movwf	_prevLumLevel^(0+128)
 19643  0FB7  087B               	movf	??_monitoring_ISR+1,w
 19644  0FB8  00E9               	movwf	(_prevLumLevel+1)^(0+128)
 19645  0FB9                     i1l5300:
 19646                           
 19647                           ;main.c: 543: };main.c: 546: if(ALAF == 'A'){
 19648  0FB9  3041               	movlw	65
 19649  0FBA  067D               	xorwf	_ALAF,w
 19650  0FBB  1D03               	btfss	3,2
 19651  0FBC  2FBE               	goto	u476_21
 19652  0FBD  2FBF               	goto	u476_20
 19653  0FBE                     u476_21:
 19654  0FBE  2FFF               	goto	i1l1408
 19655  0FBF                     u476_20:
 19656  0FBF                     i1l5302:
 19657                           
 19658                           ;main.c: 548: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 19659  0FBF  0841               	movf	_lumAlarm^(0+128),w
 19660  0FC0  0020               	movlb	0	; select bank0
 19661  0FC1  026B               	subwf	_lumLevel,w
 19662  0FC2  1803               	skipnc
 19663  0FC3  2FC5               	goto	u477_21
 19664  0FC4  2FC6               	goto	u477_20
 19665  0FC5                     u477_21:
 19666  0FC5  2FDC               	goto	i1l5316
 19667  0FC6                     u477_20:
 19668  0FC6                     i1l5304:
 19669  0FC6  0021               	movlb	1	; select bank1
 19670  0FC7  084E               	movf	_editingLumAlarm^(0+128),w
 19671  0FC8  1D03               	btfss	3,2
 19672  0FC9  2FCB               	goto	u478_21
 19673  0FCA  2FCC               	goto	u478_20
 19674  0FCB                     u478_21:
 19675  0FCB  2FDC               	goto	i1l5316
 19676  0FCC                     u478_20:
 19677  0FCC                     i1l5306:
 19678                           
 19679                           ;main.c: 549: if(!lumAlarm.triggered){
 19680  0FCC  0843               	movf	(_lumAlarm^(0+128)+2),w
 19681  0FCD  1D03               	btfss	3,2
 19682  0FCE  2FD0               	goto	u479_21
 19683  0FCF  2FD1               	goto	u479_20
 19684  0FD0                     u479_21:
 19685  0FD0  2FD5               	goto	i1l5310
 19686  0FD1                     u479_20:
 19687  0FD1                     i1l5308:
 19688                           
 19689                           ;main.c: 550: alarmPWMStart.h = 0xff;
 19690  0FD1  30FF               	movlw	255
 19691  0FD2  00FA               	movwf	??_monitoring_ISR
 19692  0FD3  087A               	movf	??_monitoring_ISR,w
 19693  0FD4  00E5               	movwf	_alarmPWMStart^(0+128)
 19694  0FD5                     i1l5310:
 19695                           
 19696                           ;main.c: 551: };main.c: 552: lumAlarm.triggered = 1;
 19697  0FD5  01C3               	clrf	(_lumAlarm^(0+128)+2)
 19698  0FD6  0AC3               	incf	(_lumAlarm^(0+128)+2),f
 19699  0FD7                     i1l5312:
 19700                           
 19701                           ;main.c: 554: lumAlarm.trigger = 1;
 19702  0FD7  01C2               	clrf	(_lumAlarm^(0+128)+1)
 19703  0FD8  0AC2               	incf	(_lumAlarm^(0+128)+1),f
 19704  0FD9                     i1l5314:
 19705  0FD9  0020               	movlb	0	; select bank0
 19706  0FDA  1616               	bsf	22,4	;volatile
 19707  0FDB  2FE0               	goto	i1l5320
 19708  0FDC                     i1l5316:
 19709                           
 19710                           ;main.c: 557: lumAlarm.triggered = 0;
 19711  0FDC  0021               	movlb	1	; select bank1
 19712  0FDD  01C3               	clrf	(_lumAlarm^(0+128)+2)
 19713  0FDE                     i1l5318:
 19714  0FDE  0020               	movlb	0	; select bank0
 19715  0FDF  1216               	bcf	22,4	;volatile
 19716  0FE0                     i1l5320:
 19717                           
 19718                           ;main.c: 559: };main.c: 562: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 19719  0FE0  086C               	movf	_temp,w
 19720  0FE1  0021               	movlb	1	; select bank1
 19721  0FE2  0244               	subwf	_tempAlarm^(0+128),w
 19722  0FE3  1803               	skipnc
 19723  0FE4  2FE6               	goto	u480_21
 19724  0FE5  2FE7               	goto	u480_20
 19725  0FE6                     u480_21:
 19726  0FE6  2FFC               	goto	i1l5334
 19727  0FE7                     u480_20:
 19728  0FE7                     i1l5322:
 19729  0FE7  084F               	movf	_editingTempAlarm^(0+128),w
 19730  0FE8  1D03               	btfss	3,2
 19731  0FE9  2FEB               	goto	u481_21
 19732  0FEA  2FEC               	goto	u481_20
 19733  0FEB                     u481_21:
 19734  0FEB  2FFC               	goto	i1l5334
 19735  0FEC                     u481_20:
 19736  0FEC                     i1l5324:
 19737                           
 19738                           ;main.c: 563: if(!tempAlarm.triggered){
 19739  0FEC  0846               	movf	(_tempAlarm^(0+128)+2),w
 19740  0FED  1D03               	btfss	3,2
 19741  0FEE  2FF0               	goto	u482_21
 19742  0FEF  2FF1               	goto	u482_20
 19743  0FF0                     u482_21:
 19744  0FF0  2FF5               	goto	i1l5328
 19745  0FF1                     u482_20:
 19746  0FF1                     i1l5326:
 19747                           
 19748                           ;main.c: 564: alarmPWMStart.h = 0xff;
 19749  0FF1  30FF               	movlw	255
 19750  0FF2  00FA               	movwf	??_monitoring_ISR
 19751  0FF3  087A               	movf	??_monitoring_ISR,w
 19752  0FF4  00E5               	movwf	_alarmPWMStart^(0+128)
 19753  0FF5                     i1l5328:
 19754                           
 19755                           ;main.c: 565: };main.c: 567: tempAlarm.triggered = 1;
 19756  0FF5  01C6               	clrf	(_tempAlarm^(0+128)+2)
 19757  0FF6  0AC6               	incf	(_tempAlarm^(0+128)+2),f
 19758  0FF7                     i1l5330:
 19759                           
 19760                           ;main.c: 569: tempAlarm.trigger = 1;
 19761  0FF7  01C5               	clrf	(_tempAlarm^(0+128)+1)
 19762  0FF8  0AC5               	incf	(_tempAlarm^(0+128)+1),f
 19763  0FF9                     i1l5332:
 19764  0FF9  0020               	movlb	0	; select bank0
 19765  0FFA  1696               	bsf	22,5	;volatile
 19766  0FFB  2FFF               	goto	i1l1408
 19767  0FFC                     i1l5334:
 19768                           
 19769                           ;main.c: 573: tempAlarm.triggered = 0;
 19770  0FFC  01C6               	clrf	(_tempAlarm^(0+128)+2)
 19771  0FFD                     i1l5336:
 19772  0FFD  0020               	movlb	0	; select bank0
 19773  0FFE  1296               	bcf	22,5	;volatile
 19774  0FFF                     i1l1408:
 19775  0FFF  0008               	return
 19776  1000                     __end_of_monitoring_ISR:
 19777                           
 19778                           	psect	text73
 19779  147C                     __ptext73:	
 19780 ;; *************** function i1___wmul *****************
 19781 ;; Defined at:
 19782 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 19783 ;; Parameters:    Size  Location     Type
 19784 ;;  multiplier      2    0[COMMON] unsigned int 
 19785 ;;  multiplicand    2    2[COMMON] unsigned int 
 19786 ;; Auto vars:     Size  Location     Type
 19787 ;;  product         2    4[COMMON] unsigned int 
 19788 ;; Return value:  Size  Location     Type
 19789 ;;                  2    0[COMMON] unsigned int 
 19790 ;; Registers used:
 19791 ;;		wreg, status,2, status,0
 19792 ;; Tracked objects:
 19793 ;;		On entry : 0/0
 19794 ;;		On exit  : 0/0
 19795 ;;		Unchanged: 0/0
 19796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19800 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19801 ;;Total ram usage:        6 bytes
 19802 ;; Hardware stack levels used:    1
 19803 ;; This function calls:
 19804 ;;		Nothing
 19805 ;; This function is called by:
 19806 ;;		_monitoring_ISR
 19807 ;; This function uses a non-reentrant model
 19808 ;;
 19809                           
 19810                           
 19811                           ;psect for function i1___wmul
 19812  147C                     i1___wmul:
 19813  147C                     i1l4848:	
 19814                           ;incstack = 0
 19815                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 19816                           
 19817  147C  01F4               	clrf	i1___wmul@product
 19818  147D  01F5               	clrf	i1___wmul@product+1
 19819  147E                     i1l4850:
 19820  147E  1C70               	btfss	i1___wmul@multiplier,0
 19821  147F  2C81               	goto	u419_21
 19822  1480  2C82               	goto	u419_20
 19823  1481                     u419_21:
 19824  1481  2C86               	goto	i1l1791
 19825  1482                     u419_20:
 19826  1482                     i1l4852:
 19827  1482  0872               	movf	i1___wmul@multiplicand,w
 19828  1483  07F4               	addwf	i1___wmul@product,f
 19829  1484  0873               	movf	i1___wmul@multiplicand+1,w
 19830  1485  3DF5               	addwfc	i1___wmul@product+1,f
 19831  1486                     i1l1791:
 19832  1486  3001               	movlw	1
 19833  1487                     u420_25:
 19834  1487  35F2               	lslf	i1___wmul@multiplicand,f
 19835  1488  0DF3               	rlf	i1___wmul@multiplicand+1,f
 19836  1489  0B89               	decfsz	9,f
 19837  148A  2C87               	goto	u420_25
 19838  148B                     i1l4854:
 19839  148B  3001               	movlw	1
 19840  148C                     u421_25:
 19841  148C  36F1               	lsrf	i1___wmul@multiplier+1,f
 19842  148D  0CF0               	rrf	i1___wmul@multiplier,f
 19843  148E  0B89               	decfsz	9,f
 19844  148F  2C8C               	goto	u421_25
 19845  1490                     i1l4856:
 19846  1490  0870               	movf	i1___wmul@multiplier,w
 19847  1491  0471               	iorwf	i1___wmul@multiplier+1,w
 19848  1492  1D03               	btfss	3,2
 19849  1493  2C95               	goto	u422_21
 19850  1494  2C96               	goto	u422_20
 19851  1495                     u422_21:
 19852  1495  2C7E               	goto	i1l4850
 19853  1496                     u422_20:
 19854  1496                     i1l4858:
 19855  1496  0875               	movf	i1___wmul@product+1,w
 19856  1497  00F1               	movwf	?i1___wmul+1
 19857  1498  0874               	movf	i1___wmul@product,w
 19858  1499  00F0               	movwf	?i1___wmul
 19859  149A                     i1l1793:
 19860  149A  0008               	return
 19861  149B                     __end_ofi1___wmul:
 19862                           
 19863                           	psect	text74
 19864  0DC8                     __ptext74:	
 19865 ;; *************** function _tsttc *****************
 19866 ;; Defined at:
 19867 ;;		line 180 in file "main.c"
 19868 ;; Parameters:    Size  Location     Type
 19869 ;;		None
 19870 ;; Auto vars:     Size  Location     Type
 19871 ;;  value           1    3[COMMON] unsigned char 
 19872 ;; Return value:  Size  Location     Type
 19873 ;;                  1    wreg      unsigned char 
 19874 ;; Registers used:
 19875 ;;		wreg, status,2, status,0, pclath, cstack
 19876 ;; Tracked objects:
 19877 ;;		On entry : 0/0
 19878 ;;		On exit  : 0/0
 19879 ;;		Unchanged: 0/0
 19880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19885 ;;Total ram usage:        2 bytes
 19886 ;; Hardware stack levels used:    1
 19887 ;; Hardware stack levels required when called:    1
 19888 ;; This function calls:
 19889 ;;		_ReadI2C
 19890 ;;		i1_WriteI2C
 19891 ;; This function is called by:
 19892 ;;		_monitoring_ISR
 19893 ;; This function uses a non-reentrant model
 19894 ;;
 19895                           
 19896                           
 19897                           ;psect for function _tsttc
 19898  0DC8                     _tsttc:
 19899  0DC8                     i1l1079:	
 19900                           ;incstack = 0
 19901                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 19902                           ;main.c: 182: unsigned char value;;main.c: 183: do{
 19903                           
 19904  0DC8                     i1l4632:	
 19905                           ;main.c: 184: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19906                           
 19907  0DC8  0023               	movlb	3	; select bank3
 19908  0DC9  0C0F               	rrf	15,w	;volatile
 19909  0DCA  0C89               	rrf	9,f
 19910  0DCB  3901               	andlw	1
 19911  0DCC  00F2               	movwf	??_tsttc
 19912  0DCD  0811               	movf	17,w	;volatile
 19913  0DCE  391F               	andlw	31
 19914  0DCF  0472               	iorwf	??_tsttc,w
 19915  0DD0  1D03               	btfss	3,2
 19916  0DD1  2DD3               	goto	u371_21
 19917  0DD2  2DD4               	goto	u371_20
 19918  0DD3                     u371_21:
 19919  0DD3  2DC8               	goto	i1l4632
 19920  0DD4                     u371_20:
 19921  0DD4                     i1l1082:
 19922                           
 19923                           ;main.c: 185: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 19924  0DD4  1411               	bsf	17,0	;volatile
 19925  0DD5                     i1l1083:
 19926  0DD5  1811               	btfsc	17,0	;volatile
 19927  0DD6  2DD8               	goto	u372_21
 19928  0DD7  2DD9               	goto	u372_20
 19929  0DD8                     u372_21:
 19930  0DD8  2DD5               	goto	i1l1083
 19931  0DD9                     u372_20:
 19932  0DD9                     i1l4634:
 19933  0DD9  0C0F               	rrf	15,w	;volatile
 19934  0DDA  0C89               	rrf	9,f
 19935  0DDB  3901               	andlw	1
 19936  0DDC  00F2               	movwf	??_tsttc
 19937  0DDD  0811               	movf	17,w	;volatile
 19938  0DDE  391F               	andlw	31
 19939  0DDF  0472               	iorwf	??_tsttc,w
 19940  0DE0  1D03               	btfss	3,2
 19941  0DE1  2DE3               	goto	u373_21
 19942  0DE2  2DE4               	goto	u373_20
 19943  0DE3                     u373_21:
 19944  0DE3  2DD9               	goto	i1l4634
 19945  0DE4                     u373_20:
 19946  0DE4                     i1l4636:
 19947                           
 19948                           ;main.c: 187: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19949  0DE4  309A               	movlw	154
 19950  0DE5  3189  21B7  318D   	fcall	i1_WriteI2C
 19951  0DE8                     i1l4638:
 19952  0DE8  0023               	movlb	3	; select bank3
 19953  0DE9  0C0F               	rrf	15,w	;volatile
 19954  0DEA  0C89               	rrf	9,f
 19955  0DEB  3901               	andlw	1
 19956  0DEC  00F2               	movwf	??_tsttc
 19957  0DED  0811               	movf	17,w	;volatile
 19958  0DEE  391F               	andlw	31
 19959  0DEF  0472               	iorwf	??_tsttc,w
 19960  0DF0  1D03               	btfss	3,2
 19961  0DF1  2DF3               	goto	u374_21
 19962  0DF2  2DF4               	goto	u374_20
 19963  0DF3                     u374_21:
 19964  0DF3  2DE8               	goto	i1l4638
 19965  0DF4                     u374_20:
 19966  0DF4                     i1l4640:
 19967                           
 19968                           ;main.c: 188: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19969  0DF4  3001               	movlw	1
 19970  0DF5  3189  21B7  318D   	fcall	i1_WriteI2C
 19971  0DF8                     i1l4642:
 19972  0DF8  0023               	movlb	3	; select bank3
 19973  0DF9  0C0F               	rrf	15,w	;volatile
 19974  0DFA  0C89               	rrf	9,f
 19975  0DFB  3901               	andlw	1
 19976  0DFC  00F2               	movwf	??_tsttc
 19977  0DFD  0811               	movf	17,w	;volatile
 19978  0DFE  391F               	andlw	31
 19979  0DFF  0472               	iorwf	??_tsttc,w
 19980  0E00  1D03               	btfss	3,2
 19981  0E01  2E03               	goto	u375_21
 19982  0E02  2E04               	goto	u375_20
 19983  0E03                     u375_21:
 19984  0E03  2DF8               	goto	i1l4642
 19985  0E04                     u375_20:
 19986  0E04                     i1l1094:
 19987                           
 19988                           ;main.c: 189: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
 19989  0E04  1491               	bsf	17,1	;volatile
 19990  0E05                     i1l1095:
 19991  0E05  1891               	btfsc	17,1	;volatile
 19992  0E06  2E08               	goto	u376_21
 19993  0E07  2E09               	goto	u376_20
 19994  0E08                     u376_21:
 19995  0E08  2E05               	goto	i1l1095
 19996  0E09                     u376_20:
 19997  0E09                     i1l4644:
 19998  0E09  0C0F               	rrf	15,w	;volatile
 19999  0E0A  0C89               	rrf	9,f
 20000  0E0B  3901               	andlw	1
 20001  0E0C  00F2               	movwf	??_tsttc
 20002  0E0D  0811               	movf	17,w	;volatile
 20003  0E0E  391F               	andlw	31
 20004  0E0F  0472               	iorwf	??_tsttc,w
 20005  0E10  1D03               	btfss	3,2
 20006  0E11  2E13               	goto	u377_21
 20007  0E12  2E14               	goto	u377_20
 20008  0E13                     u377_21:
 20009  0E13  2E09               	goto	i1l4644
 20010  0E14                     u377_20:
 20011  0E14                     i1l4646:
 20012                           
 20013                           ;main.c: 190: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20014  0E14  309B               	movlw	155
 20015  0E15  3189  21B7  318D   	fcall	i1_WriteI2C
 20016  0E18                     i1l4648:
 20017  0E18  0023               	movlb	3	; select bank3
 20018  0E19  0C0F               	rrf	15,w	;volatile
 20019  0E1A  0C89               	rrf	9,f
 20020  0E1B  3901               	andlw	1
 20021  0E1C  00F2               	movwf	??_tsttc
 20022  0E1D  0811               	movf	17,w	;volatile
 20023  0E1E  391F               	andlw	31
 20024  0E1F  0472               	iorwf	??_tsttc,w
 20025  0E20  1D03               	btfss	3,2
 20026  0E21  2E23               	goto	u378_21
 20027  0E22  2E24               	goto	u378_20
 20028  0E23                     u378_21:
 20029  0E23  2E18               	goto	i1l4648
 20030  0E24                     u378_20:
 20031  0E24                     i1l4650:
 20032                           
 20033                           ;main.c: 191: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20034  0E24  3193  23D6  318D   	fcall	_ReadI2C
 20035  0E27  00F2               	movwf	??_tsttc
 20036  0E28  0872               	movf	??_tsttc,w
 20037  0E29  00F3               	movwf	tsttc@value
 20038  0E2A                     i1l4652:
 20039  0E2A  0023               	movlb	3	; select bank3
 20040  0E2B  0C0F               	rrf	15,w	;volatile
 20041  0E2C  0C89               	rrf	9,f
 20042  0E2D  3901               	andlw	1
 20043  0E2E  00F2               	movwf	??_tsttc
 20044  0E2F  0811               	movf	17,w	;volatile
 20045  0E30  391F               	andlw	31
 20046  0E31  0472               	iorwf	??_tsttc,w
 20047  0E32  1D03               	btfss	3,2
 20048  0E33  2E35               	goto	u379_21
 20049  0E34  2E36               	goto	u379_20
 20050  0E35                     u379_21:
 20051  0E35  2E2A               	goto	i1l4652
 20052  0E36                     u379_20:
 20053  0E36                     i1l1106:
 20054                           
 20055                           ;main.c: 192: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20056  0E36  1691               	bsf	17,5	;volatile
 20057  0E37  1611               	bsf	17,4	;volatile
 20058  0E38                     i1l1107:
 20059  0E38  1A11               	btfsc	17,4	;volatile
 20060  0E39  2E3B               	goto	u380_21
 20061  0E3A  2E3C               	goto	u380_20
 20062  0E3B                     u380_21:
 20063  0E3B  2E38               	goto	i1l1107
 20064  0E3C                     u380_20:
 20065  0E3C                     i1l4654:
 20066  0E3C  0C0F               	rrf	15,w	;volatile
 20067  0E3D  0C89               	rrf	9,f
 20068  0E3E  3901               	andlw	1
 20069  0E3F  00F2               	movwf	??_tsttc
 20070  0E40  0811               	movf	17,w	;volatile
 20071  0E41  391F               	andlw	31
 20072  0E42  0472               	iorwf	??_tsttc,w
 20073  0E43  1D03               	btfss	3,2
 20074  0E44  2E46               	goto	u381_21
 20075  0E45  2E47               	goto	u381_20
 20076  0E46                     u381_21:
 20077  0E46  2E3C               	goto	i1l4654
 20078  0E47                     u381_20:
 20079  0E47                     i1l1112:
 20080                           
 20081                           ;main.c: 193: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 20082  0E47  1511               	bsf	17,2	;volatile
 20083  0E48                     i1l1113:
 20084  0E48  1911               	btfsc	17,2	;volatile
 20085  0E49  2E4B               	goto	u382_21
 20086  0E4A  2E4C               	goto	u382_20
 20087  0E4B                     u382_21:
 20088  0E4B  2E48               	goto	i1l1113
 20089  0E4C                     u382_20:
 20090  0E4C                     i1l1115:
 20091                           
 20092                           ;main.c: 194: } while (!(value & 0x40));
 20093  0E4C  1F73               	btfss	tsttc@value,6
 20094  0E4D  2E4F               	goto	u383_21
 20095  0E4E  2E50               	goto	u383_20
 20096  0E4F                     u383_21:
 20097  0E4F  2DC8               	goto	i1l1079
 20098  0E50                     u383_20:
 20099  0E50                     i1l4656:
 20100  0E50  0C0F               	rrf	15,w	;volatile
 20101  0E51  0C89               	rrf	9,f
 20102  0E52  3901               	andlw	1
 20103  0E53  00F2               	movwf	??_tsttc
 20104  0E54  0811               	movf	17,w	;volatile
 20105  0E55  391F               	andlw	31
 20106  0E56  0472               	iorwf	??_tsttc,w
 20107  0E57  1D03               	btfss	3,2
 20108  0E58  2E5A               	goto	u384_21
 20109  0E59  2E5B               	goto	u384_20
 20110  0E5A                     u384_21:
 20111  0E5A  2E50               	goto	i1l4656
 20112  0E5B                     u384_20:
 20113  0E5B                     i1l1119:
 20114                           
 20115                           ;main.c: 197: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 20116  0E5B  1411               	bsf	17,0	;volatile
 20117  0E5C                     i1l1120:
 20118  0E5C  1811               	btfsc	17,0	;volatile
 20119  0E5D  2E5F               	goto	u385_21
 20120  0E5E  2E60               	goto	u385_20
 20121  0E5F                     u385_21:
 20122  0E5F  2E5C               	goto	i1l1120
 20123  0E60                     u385_20:
 20124  0E60                     i1l4658:
 20125  0E60  0C0F               	rrf	15,w	;volatile
 20126  0E61  0C89               	rrf	9,f
 20127  0E62  3901               	andlw	1
 20128  0E63  00F2               	movwf	??_tsttc
 20129  0E64  0811               	movf	17,w	;volatile
 20130  0E65  391F               	andlw	31
 20131  0E66  0472               	iorwf	??_tsttc,w
 20132  0E67  1D03               	btfss	3,2
 20133  0E68  2E6A               	goto	u386_21
 20134  0E69  2E6B               	goto	u386_20
 20135  0E6A                     u386_21:
 20136  0E6A  2E60               	goto	i1l4658
 20137  0E6B                     u386_20:
 20138  0E6B                     i1l4660:
 20139                           
 20140                           ;main.c: 198: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20141  0E6B  309A               	movlw	154
 20142  0E6C  3189  21B7  318D   	fcall	i1_WriteI2C
 20143  0E6F                     i1l4662:
 20144  0E6F  0023               	movlb	3	; select bank3
 20145  0E70  0C0F               	rrf	15,w	;volatile
 20146  0E71  0C89               	rrf	9,f
 20147  0E72  3901               	andlw	1
 20148  0E73  00F2               	movwf	??_tsttc
 20149  0E74  0811               	movf	17,w	;volatile
 20150  0E75  391F               	andlw	31
 20151  0E76  0472               	iorwf	??_tsttc,w
 20152  0E77  1D03               	btfss	3,2
 20153  0E78  2E7A               	goto	u387_21
 20154  0E79  2E7B               	goto	u387_20
 20155  0E7A                     u387_21:
 20156  0E7A  2E6F               	goto	i1l4662
 20157  0E7B                     u387_20:
 20158  0E7B                     i1l4664:
 20159                           
 20160                           ;main.c: 199: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20161  0E7B  3000               	movlw	0
 20162  0E7C  3189  21B7  318D   	fcall	i1_WriteI2C
 20163  0E7F                     i1l4666:
 20164  0E7F  0023               	movlb	3	; select bank3
 20165  0E80  0C0F               	rrf	15,w	;volatile
 20166  0E81  0C89               	rrf	9,f
 20167  0E82  3901               	andlw	1
 20168  0E83  00F2               	movwf	??_tsttc
 20169  0E84  0811               	movf	17,w	;volatile
 20170  0E85  391F               	andlw	31
 20171  0E86  0472               	iorwf	??_tsttc,w
 20172  0E87  1D03               	btfss	3,2
 20173  0E88  2E8A               	goto	u388_21
 20174  0E89  2E8B               	goto	u388_20
 20175  0E8A                     u388_21:
 20176  0E8A  2E7F               	goto	i1l4666
 20177  0E8B                     u388_20:
 20178  0E8B                     i1l1131:
 20179                           
 20180                           ;main.c: 200: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
 20181  0E8B  1491               	bsf	17,1	;volatile
 20182  0E8C                     i1l1132:
 20183  0E8C  1891               	btfsc	17,1	;volatile
 20184  0E8D  2E8F               	goto	u389_21
 20185  0E8E  2E90               	goto	u389_20
 20186  0E8F                     u389_21:
 20187  0E8F  2E8C               	goto	i1l1132
 20188  0E90                     u389_20:
 20189  0E90                     i1l4668:
 20190  0E90  0C0F               	rrf	15,w	;volatile
 20191  0E91  0C89               	rrf	9,f
 20192  0E92  3901               	andlw	1
 20193  0E93  00F2               	movwf	??_tsttc
 20194  0E94  0811               	movf	17,w	;volatile
 20195  0E95  391F               	andlw	31
 20196  0E96  0472               	iorwf	??_tsttc,w
 20197  0E97  1D03               	btfss	3,2
 20198  0E98  2E9A               	goto	u390_21
 20199  0E99  2E9B               	goto	u390_20
 20200  0E9A                     u390_21:
 20201  0E9A  2E90               	goto	i1l4668
 20202  0E9B                     u390_20:
 20203  0E9B                     i1l4670:
 20204                           
 20205                           ;main.c: 201: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20206  0E9B  309B               	movlw	155
 20207  0E9C  3189  21B7  318D   	fcall	i1_WriteI2C
 20208  0E9F                     i1l4672:
 20209  0E9F  0023               	movlb	3	; select bank3
 20210  0EA0  0C0F               	rrf	15,w	;volatile
 20211  0EA1  0C89               	rrf	9,f
 20212  0EA2  3901               	andlw	1
 20213  0EA3  00F2               	movwf	??_tsttc
 20214  0EA4  0811               	movf	17,w	;volatile
 20215  0EA5  391F               	andlw	31
 20216  0EA6  0472               	iorwf	??_tsttc,w
 20217  0EA7  1D03               	btfss	3,2
 20218  0EA8  2EAA               	goto	u391_21
 20219  0EA9  2EAB               	goto	u391_20
 20220  0EAA                     u391_21:
 20221  0EAA  2E9F               	goto	i1l4672
 20222  0EAB                     u391_20:
 20223  0EAB                     i1l4674:
 20224                           
 20225                           ;main.c: 202: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20226  0EAB  3193  23D6  318D   	fcall	_ReadI2C
 20227  0EAE  00F2               	movwf	??_tsttc
 20228  0EAF  0872               	movf	??_tsttc,w
 20229  0EB0  00F3               	movwf	tsttc@value
 20230  0EB1                     i1l4676:
 20231  0EB1  0023               	movlb	3	; select bank3
 20232  0EB2  0C0F               	rrf	15,w	;volatile
 20233  0EB3  0C89               	rrf	9,f
 20234  0EB4  3901               	andlw	1
 20235  0EB5  00F2               	movwf	??_tsttc
 20236  0EB6  0811               	movf	17,w	;volatile
 20237  0EB7  391F               	andlw	31
 20238  0EB8  0472               	iorwf	??_tsttc,w
 20239  0EB9  1D03               	btfss	3,2
 20240  0EBA  2EBC               	goto	u392_21
 20241  0EBB  2EBD               	goto	u392_20
 20242  0EBC                     u392_21:
 20243  0EBC  2EB1               	goto	i1l4676
 20244  0EBD                     u392_20:
 20245  0EBD                     i1l1143:
 20246                           
 20247                           ;main.c: 203: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20248  0EBD  1691               	bsf	17,5	;volatile
 20249  0EBE  1611               	bsf	17,4	;volatile
 20250  0EBF                     i1l1144:
 20251  0EBF  1A11               	btfsc	17,4	;volatile
 20252  0EC0  2EC2               	goto	u393_21
 20253  0EC1  2EC3               	goto	u393_20
 20254  0EC2                     u393_21:
 20255  0EC2  2EBF               	goto	i1l1144
 20256  0EC3                     u393_20:
 20257  0EC3                     i1l4678:
 20258  0EC3  0C0F               	rrf	15,w	;volatile
 20259  0EC4  0C89               	rrf	9,f
 20260  0EC5  3901               	andlw	1
 20261  0EC6  00F2               	movwf	??_tsttc
 20262  0EC7  0811               	movf	17,w	;volatile
 20263  0EC8  391F               	andlw	31
 20264  0EC9  0472               	iorwf	??_tsttc,w
 20265  0ECA  1D03               	btfss	3,2
 20266  0ECB  2ECD               	goto	u394_21
 20267  0ECC  2ECE               	goto	u394_20
 20268  0ECD                     u394_21:
 20269  0ECD  2EC3               	goto	i1l4678
 20270  0ECE                     u394_20:
 20271  0ECE                     i1l1149:
 20272                           
 20273                           ;main.c: 204: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 20274  0ECE  1511               	bsf	17,2	;volatile
 20275  0ECF                     i1l1150:
 20276  0ECF  1911               	btfsc	17,2	;volatile
 20277  0ED0  2ED2               	goto	u395_21
 20278  0ED1  2ED3               	goto	u395_20
 20279  0ED2                     u395_21:
 20280  0ED2  2ECF               	goto	i1l1150
 20281  0ED3                     u395_20:
 20282  0ED3                     i1l4680:
 20283                           
 20284                           ;main.c: 206: return value;
 20285  0ED3  0873               	movf	tsttc@value,w
 20286  0ED4                     i1l1153:
 20287  0ED4  0008               	return
 20288  0ED5                     __end_of_tsttc:
 20289                           
 20290                           	psect	text75
 20291  09B7                     __ptext75:	
 20292 ;; *************** function i1_WriteI2C *****************
 20293 ;; Defined at:
 20294 ;;		line 47 in file "I2C/i2c.c"
 20295 ;; Parameters:    Size  Location     Type
 20296 ;;  data_out        1    wreg     unsigned char 
 20297 ;; Auto vars:     Size  Location     Type
 20298 ;;  data_out        1    1[COMMON] unsigned char 
 20299 ;; Return value:  Size  Location     Type
 20300 ;;                  1    wreg      char 
 20301 ;; Registers used:
 20302 ;;		wreg, status,2, status,0
 20303 ;; Tracked objects:
 20304 ;;		On entry : 0/0
 20305 ;;		On exit  : 0/0
 20306 ;;		Unchanged: 0/0
 20307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20312 ;;Total ram usage:        2 bytes
 20313 ;; Hardware stack levels used:    1
 20314 ;; This function calls:
 20315 ;;		Nothing
 20316 ;; This function is called by:
 20317 ;;		_tsttc
 20318 ;; This function uses a non-reentrant model
 20319 ;;
 20320                           
 20321                           
 20322                           ;psect for function i1_WriteI2C
 20323  09B7                     i1_WriteI2C:
 20324                           
 20325                           ;incstack = 0
 20326                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 20327                           ;i1WriteI2C@data_out stored from wreg
 20328  09B7  00F1               	movwf	i1WriteI2C@data_out
 20329  09B8                     i1l4574:
 20330                           
 20331                           ;i2c.c: 49: SSP1BUF = data_out;
 20332  09B8  0871               	movf	i1WriteI2C@data_out,w
 20333  09B9  0023               	movlb	3	; select bank3
 20334  09BA  008C               	movwf	12	;volatile
 20335  09BB                     i1l4576:
 20336                           
 20337                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 20338  09BB  1F90               	btfss	16,7	;volatile
 20339  09BC  29BE               	goto	u360_21
 20340  09BD  29BF               	goto	u360_20
 20341  09BE                     u360_21:
 20342  09BE  29C0               	goto	i1l4582
 20343  09BF                     u360_20:
 20344  09BF  2A01               	goto	i1l30
 20345  09C0                     i1l4582:
 20346                           
 20347                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 20348  09C0  300F               	movlw	15
 20349  09C1  0510               	andwf	16,w	;volatile
 20350  09C2  00F0               	movwf	??i1_WriteI2C
 20351  09C3  3008               	movlw	8
 20352  09C4  0670               	xorwf	??i1_WriteI2C,w
 20353  09C5  1903               	btfsc	3,2
 20354  09C6  29C8               	goto	u361_21
 20355  09C7  29C9               	goto	u361_20
 20356  09C8                     u361_21:
 20357  09C8  29DF               	goto	i1l4594
 20358  09C9                     u361_20:
 20359  09C9                     i1l4584:
 20360  09C9  300F               	movlw	15
 20361  09CA  0510               	andwf	16,w	;volatile
 20362  09CB  00F0               	movwf	??i1_WriteI2C
 20363  09CC  300B               	movlw	11
 20364  09CD  0670               	xorwf	??i1_WriteI2C,w
 20365  09CE  1903               	btfsc	3,2
 20366  09CF  29D1               	goto	u362_21
 20367  09D0  29D2               	goto	u362_20
 20368  09D1                     u362_21:
 20369  09D1  29DF               	goto	i1l4594
 20370  09D2                     u362_20:
 20371  09D2                     i1l4586:
 20372                           
 20373                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 20374  09D2  1610               	bsf	16,4	;volatile
 20375  09D3                     i1l33:	
 20376                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 20377                           
 20378  09D3  002E               	movlb	14	; select bank14
 20379  09D4  1C0F               	btfss	15,0	;volatile
 20380  09D5  29D7               	goto	u363_21
 20381  09D6  29D8               	goto	u363_20
 20382  09D7                     u363_21:
 20383  09D7  29D3               	goto	i1l33
 20384  09D8                     u363_20:
 20385  09D8                     i1l35:
 20386                           
 20387                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 20388  09D8  0023               	movlb	3	; select bank3
 20389  09D9  190F               	btfsc	15,2	;volatile
 20390  09DA  29DC               	goto	u364_21
 20391  09DB  29DD               	goto	u364_20
 20392  09DC                     u364_21:
 20393  09DC  2A01               	goto	i1l30
 20394  09DD                     u364_20:
 20395  09DD                     i1l4588:
 20396  09DD  080F               	movf	15,w	;volatile
 20397  09DE  2A01               	goto	i1l30
 20398  09DF                     i1l4594:
 20399                           
 20400                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 20401  09DF  300F               	movlw	15
 20402  09E0  0510               	andwf	16,w	;volatile
 20403  09E1  00F0               	movwf	??i1_WriteI2C
 20404  09E2  3008               	movlw	8
 20405  09E3  0670               	xorwf	??i1_WriteI2C,w
 20406  09E4  1903               	btfsc	3,2
 20407  09E5  29E7               	goto	u365_21
 20408  09E6  29E8               	goto	u365_20
 20409  09E7                     u365_21:
 20410  09E7  29F1               	goto	i1l42
 20411  09E8                     u365_20:
 20412  09E8                     i1l4596:
 20413  09E8  300F               	movlw	15
 20414  09E9  0510               	andwf	16,w	;volatile
 20415  09EA  00F0               	movwf	??i1_WriteI2C
 20416  09EB  300B               	movlw	11
 20417  09EC  0670               	xorwf	??i1_WriteI2C,w
 20418  09ED  1D03               	btfss	3,2
 20419  09EE  29F0               	goto	u366_21
 20420  09EF  29F1               	goto	u366_20
 20421  09F0                     u366_21:
 20422  09F0  2A01               	goto	i1l30
 20423  09F1                     u366_20:
 20424  09F1                     i1l42:
 20425  09F1  180F               	btfsc	15,0	;volatile
 20426  09F2  29F4               	goto	u367_21
 20427  09F3  29F5               	goto	u367_20
 20428  09F4                     u367_21:
 20429  09F4  29F1               	goto	i1l42
 20430  09F5                     u367_20:
 20431  09F5                     i1l4598:
 20432  09F5  0C0F               	rrf	15,w	;volatile
 20433  09F6  0C89               	rrf	9,f
 20434  09F7  3901               	andlw	1
 20435  09F8  00F0               	movwf	??i1_WriteI2C
 20436  09F9  0811               	movf	17,w	;volatile
 20437  09FA  391F               	andlw	31
 20438  09FB  0470               	iorwf	??i1_WriteI2C,w
 20439  09FC  1D03               	btfss	3,2
 20440  09FD  29FF               	goto	u368_21
 20441  09FE  2A00               	goto	u368_20
 20442  09FF                     u368_21:
 20443  09FF  29F5               	goto	i1l4598
 20444  0A00                     u368_20:
 20445  0A00                     i1l47:
 20446                           
 20447                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 20448  0A00  0811               	movf	17,w	;volatile
 20449  0A01                     i1l30:
 20450  0A01  0008               	return
 20451  0A02                     __end_ofi1_WriteI2C:
 20452                           
 20453                           	psect	text76
 20454  13D6                     __ptext76:	
 20455 ;; *************** function _ReadI2C *****************
 20456 ;; Defined at:
 20457 ;;		line 32 in file "I2C/i2c.c"
 20458 ;; Parameters:    Size  Location     Type
 20459 ;;		None
 20460 ;; Auto vars:     Size  Location     Type
 20461 ;;		None
 20462 ;; Return value:  Size  Location     Type
 20463 ;;                  1    wreg      unsigned char 
 20464 ;; Registers used:
 20465 ;;		wreg, status,2, status,0
 20466 ;; Tracked objects:
 20467 ;;		On entry : 0/0
 20468 ;;		On exit  : 0/0
 20469 ;;		Unchanged: 0/0
 20470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20475 ;;Total ram usage:        1 bytes
 20476 ;; Hardware stack levels used:    1
 20477 ;; This function calls:
 20478 ;;		Nothing
 20479 ;; This function is called by:
 20480 ;;		_tsttc
 20481 ;;		_LCDrecv
 20482 ;; This function uses a non-reentrant model
 20483 ;;
 20484                           
 20485                           
 20486                           ;psect for function _ReadI2C
 20487  13D6                     _ReadI2C:
 20488  13D6                     i1l4486:	
 20489                           ;incstack = 0
 20490                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 20491                           
 20492                           
 20493                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 20494  13D6  300F               	movlw	15
 20495  13D7  0023               	movlb	3	; select bank3
 20496  13D8  0510               	andwf	16,w	;volatile
 20497  13D9  00F0               	movwf	??_ReadI2C
 20498  13DA  3008               	movlw	8
 20499  13DB  0670               	xorwf	??_ReadI2C,w
 20500  13DC  1903               	btfsc	3,2
 20501  13DD  2BDF               	goto	u338_21
 20502  13DE  2BE0               	goto	u338_20
 20503  13DF                     u338_21:
 20504  13DF  2BE9               	goto	i1l22
 20505  13E0                     u338_20:
 20506  13E0                     i1l4488:
 20507  13E0  300F               	movlw	15
 20508  13E1  0510               	andwf	16,w	;volatile
 20509  13E2  00F0               	movwf	??_ReadI2C
 20510  13E3  300B               	movlw	11
 20511  13E4  0670               	xorwf	??_ReadI2C,w
 20512  13E5  1D03               	btfss	3,2
 20513  13E6  2BE8               	goto	u339_21
 20514  13E7  2BE9               	goto	u339_20
 20515  13E8                     u339_21:
 20516  13E8  2BEA               	goto	i1l23
 20517  13E9                     u339_20:
 20518  13E9                     i1l22:
 20519                           
 20520                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 20521  13E9  1591               	bsf	17,3	;volatile
 20522  13EA                     i1l23:
 20523  13EA  1C0F               	btfss	15,0	;volatile
 20524  13EB  2BED               	goto	u340_21
 20525  13EC  2BEE               	goto	u340_20
 20526  13ED                     u340_21:
 20527  13ED  2BEA               	goto	i1l23
 20528  13EE                     u340_20:
 20529  13EE                     i1l4490:
 20530                           
 20531                           ;i2c.c: 37: return ( SSP1BUF );
 20532  13EE  080C               	movf	12,w	;volatile
 20533  13EF                     i1l26:
 20534  13EF  0008               	return
 20535  13F0                     __end_of_ReadI2C:
 20536                           
 20537                           	psect	text77
 20538  1353                     __ptext77:	
 20539 ;; *************** function _ADCC_GetSingleConversion *****************
 20540 ;; Defined at:
 20541 ;;		line 130 in file "mcc_generated_files/adcc.c"
 20542 ;; Parameters:    Size  Location     Type
 20543 ;;  channel         1    wreg     enum E12086
 20544 ;; Auto vars:     Size  Location     Type
 20545 ;;  channel         1    3[COMMON] enum E12086
 20546 ;; Return value:  Size  Location     Type
 20547 ;;                  2    0[COMMON] unsigned int 
 20548 ;; Registers used:
 20549 ;;		wreg
 20550 ;; Tracked objects:
 20551 ;;		On entry : 0/0
 20552 ;;		On exit  : 0/0
 20553 ;;		Unchanged: 0/0
 20554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20555 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20558 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20559 ;;Total ram usage:        4 bytes
 20560 ;; Hardware stack levels used:    1
 20561 ;; This function calls:
 20562 ;;		Nothing
 20563 ;; This function is called by:
 20564 ;;		_monitoring_ISR
 20565 ;; This function uses a non-reentrant model
 20566 ;;
 20567                           
 20568                           
 20569                           ;psect for function _ADCC_GetSingleConversion
 20570  1353                     _ADCC_GetSingleConversion:
 20571                           
 20572                           ;incstack = 0
 20573                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 20574                           ;ADCC_GetSingleConversion@channel stored from wreg
 20575  1353  00F3               	movwf	ADCC_GetSingleConversion@channel
 20576  1354                     i1l4606:
 20577                           
 20578                           ;adcc.c: 133: ADPCH = channel;
 20579  1354  0873               	movf	ADCC_GetSingleConversion@channel,w
 20580  1355  0021               	movlb	1	; select bank1
 20581  1356  009E               	movwf	30	;volatile
 20582  1357                     i1l4608:
 20583                           
 20584                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 20585  1357  1793               	bsf	19,7	;volatile
 20586  1358                     i1l4610:
 20587                           
 20588                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 20589  1358  1313               	bcf	19,6	;volatile
 20590  1359                     i1l4612:
 20591                           
 20592                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 20593  1359  1413               	bsf	19,0	;volatile
 20594  135A                     i1l4614:
 20595                           
 20596                           ;adcc.c: 145: __nop();
 20597  135A  0000               	nop
 20598  135B                     i1l543:	
 20599                           ;adcc.c: 149: {
 20600                           
 20601  135B  0021               	movlb	1	; select bank1
 20602  135C  1813               	btfsc	19,0	;volatile
 20603  135D  2B5F               	goto	u369_21
 20604  135E  2B60               	goto	u369_20
 20605  135F                     u369_21:
 20606  135F  2B5B               	goto	i1l543
 20607  1360                     u369_20:
 20608  1360                     i1l4616:
 20609                           
 20610                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 20611  1360  080D               	movf	13,w	;volatile
 20612  1361  00F1               	movwf	?_ADCC_GetSingleConversion+1
 20613  1362  080C               	movf	12,w	;volatile
 20614  1363  00F0               	movwf	?_ADCC_GetSingleConversion
 20615  1364                     i1l546:
 20616  1364  0008               	return
 20617  1365                     __end_of_ADCC_GetSingleConversion:
 20618                           
 20619                           	psect	text78
 20620  1342                     __ptext78:	
 20621 ;; *************** function _TMR5_WriteTimer *****************
 20622 ;; Defined at:
 20623 ;;		line 131 in file "mcc_generated_files/tmr5.c"
 20624 ;; Parameters:    Size  Location     Type
 20625 ;;  timerVal        2    0[COMMON] unsigned int 
 20626 ;; Auto vars:     Size  Location     Type
 20627 ;;		None
 20628 ;; Return value:  Size  Location     Type
 20629 ;;                  1    wreg      void 
 20630 ;; Registers used:
 20631 ;;		wreg, status,2
 20632 ;; Tracked objects:
 20633 ;;		On entry : 0/0
 20634 ;;		On exit  : 0/0
 20635 ;;		Unchanged: 0/0
 20636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20641 ;;Total ram usage:        2 bytes
 20642 ;; Hardware stack levels used:    1
 20643 ;; This function calls:
 20644 ;;		Nothing
 20645 ;; This function is called by:
 20646 ;;		_TMR5_ISR
 20647 ;;		_TMR5_Reload
 20648 ;; This function uses a non-reentrant model
 20649 ;;
 20650                           
 20651                           
 20652                           ;psect for function _TMR5_WriteTimer
 20653  1342                     _TMR5_WriteTimer:
 20654  1342                     i1l5034:	
 20655                           ;incstack = 0
 20656                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 20657                           
 20658                           
 20659                           ;tmr5.c: 133: if (T5CONbits.nT5SYNC == 1)
 20660  1342  0024               	movlb	4	; select bank4
 20661  1343  1D1A               	btfss	26,2	;volatile
 20662  1344  2B46               	goto	u424_21
 20663  1345  2B47               	goto	u424_20
 20664  1346                     u424_21:
 20665  1346  2B4E               	goto	i1l5044
 20666  1347                     u424_20:
 20667  1347                     i1l5036:
 20668                           
 20669                           ;tmr5.c: 134: {;tmr5.c: 136: T5CONbits.TMR5ON = 0;
 20670  1347  101A               	bcf	26,0	;volatile
 20671  1348                     i1l5038:
 20672                           
 20673                           ;tmr5.c: 139: TMR5H = (timerVal >> 8);
 20674  1348  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 20675  1349  0099               	movwf	25	;volatile
 20676  134A                     i1l5040:
 20677                           
 20678                           ;tmr5.c: 140: TMR5L = timerVal;
 20679  134A  0870               	movf	TMR5_WriteTimer@timerVal,w
 20680  134B  0098               	movwf	24	;volatile
 20681  134C                     i1l5042:
 20682                           
 20683                           ;tmr5.c: 143: T5CONbits.TMR5ON =1;
 20684  134C  141A               	bsf	26,0	;volatile
 20685                           
 20686                           ;tmr5.c: 144: }
 20687  134D  2B52               	goto	i1l660
 20688  134E                     i1l5044:
 20689                           
 20690                           ;tmr5.c: 145: else;tmr5.c: 146: {;tmr5.c: 148: TMR5H = (timerVal >> 8);
 20691  134E  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 20692  134F  0099               	movwf	25	;volatile
 20693  1350                     i1l5046:
 20694                           
 20695                           ;tmr5.c: 149: TMR5L = timerVal;
 20696  1350  0870               	movf	TMR5_WriteTimer@timerVal,w
 20697  1351  0098               	movwf	24	;volatile
 20698  1352                     i1l660:
 20699  1352  0008               	return
 20700  1353                     __end_of_TMR5_WriteTimer:
 20701                           
 20702                           	psect	text79
 20703  1378                     __ptext79:	
 20704 ;; *************** function _TMR1_ISR *****************
 20705 ;; Defined at:
 20706 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 20707 ;; Parameters:    Size  Location     Type
 20708 ;;		None
 20709 ;; Auto vars:     Size  Location     Type
 20710 ;;		None
 20711 ;; Return value:  Size  Location     Type
 20712 ;;                  1    wreg      void 
 20713 ;; Registers used:
 20714 ;;		wreg, status,2, status,0, pclath, cstack
 20715 ;; Tracked objects:
 20716 ;;		On entry : 0/0
 20717 ;;		On exit  : 0/0
 20718 ;;		Unchanged: 0/0
 20719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20724 ;;Total ram usage:        0 bytes
 20725 ;; Hardware stack levels used:    1
 20726 ;; Hardware stack levels required when called:    2
 20727 ;; This function calls:
 20728 ;;		Absolute function
 20729 ;;		_Clock_ISR
 20730 ;;		_TMR1_DefaultInterruptHandler
 20731 ;;		_TMR1_WriteTimer
 20732 ;; This function is called by:
 20733 ;;		_INTERRUPT_InterruptManager
 20734 ;; This function uses a non-reentrant model
 20735 ;;
 20736                           
 20737                           
 20738                           ;psect for function _TMR1_ISR
 20739  1378                     _TMR1_ISR:
 20740  1378                     i1l5432:	
 20741                           ;incstack = 0
 20742                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 20743                           
 20744                           
 20745                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 20746  1378  002E               	movlb	14	; select bank14
 20747  1379  1010               	bcf	16,0	;volatile
 20748  137A                     i1l5434:
 20749                           
 20750                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 20751  137A  0021               	movlb	1	; select bank1
 20752  137B  085F               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 20753  137C  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 20754  137D  085E               	movf	_timer1ReloadVal^(0+128),w	;volatile
 20755  137E  00F0               	movwf	TMR1_WriteTimer@timerVal
 20756  137F  3193  2331  3193   	fcall	_TMR1_WriteTimer
 20757  1382                     i1l5436:
 20758                           
 20759                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 20760  1382  0021               	movlb	1	; select bank1
 20761  1383  085C               	movf	_TMR1_InterruptHandler^(0+128),w
 20762  1384  045D               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 20763  1385  1903               	btfsc	3,2
 20764  1386  2B88               	goto	u497_21
 20765  1387  2B89               	goto	u497_20
 20766  1388                     u497_21:
 20767  1388  2B8E               	goto	i1l442
 20768  1389                     u497_20:
 20769  1389                     i1l5438:
 20770                           
 20771                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 20772  1389  085D               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 20773  138A  008A               	movwf	10
 20774  138B  085C               	movf	_TMR1_InterruptHandler^(0+128),w
 20775  138C  000A               	callw
 20776  138D  3193               	pagesel	$
 20777  138E                     i1l442:
 20778  138E  0008               	return
 20779  138F                     __end_of_TMR1_ISR:
 20780                           
 20781                           	psect	text80
 20782  1331                     __ptext80:	
 20783 ;; *************** function _TMR1_WriteTimer *****************
 20784 ;; Defined at:
 20785 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 20786 ;; Parameters:    Size  Location     Type
 20787 ;;  timerVal        2    0[COMMON] unsigned int 
 20788 ;; Auto vars:     Size  Location     Type
 20789 ;;		None
 20790 ;; Return value:  Size  Location     Type
 20791 ;;                  1    wreg      void 
 20792 ;; Registers used:
 20793 ;;		wreg, status,2
 20794 ;; Tracked objects:
 20795 ;;		On entry : 0/0
 20796 ;;		On exit  : 0/0
 20797 ;;		Unchanged: 0/0
 20798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20802 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20803 ;;Total ram usage:        2 bytes
 20804 ;; Hardware stack levels used:    1
 20805 ;; This function calls:
 20806 ;;		Nothing
 20807 ;; This function is called by:
 20808 ;;		_TMR1_ISR
 20809 ;;		_TMR1_Reload
 20810 ;; This function uses a non-reentrant model
 20811 ;;
 20812                           
 20813                           
 20814                           ;psect for function _TMR1_WriteTimer
 20815  1331                     _TMR1_WriteTimer:
 20816  1331                     i1l5014:	
 20817                           ;incstack = 0
 20818                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 20819                           
 20820                           
 20821                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 20822  1331  0024               	movlb	4	; select bank4
 20823  1332  1D0E               	btfss	14,2	;volatile
 20824  1333  2B35               	goto	u423_21
 20825  1334  2B36               	goto	u423_20
 20826  1335                     u423_21:
 20827  1335  2B3D               	goto	i1l5024
 20828  1336                     u423_20:
 20829  1336                     i1l5016:
 20830                           
 20831                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 20832  1336  100E               	bcf	14,0	;volatile
 20833  1337                     i1l5018:
 20834                           
 20835                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 20836  1337  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20837  1338  008D               	movwf	13	;volatile
 20838  1339                     i1l5020:
 20839                           
 20840                           ;tmr1.c: 136: TMR1L = timerVal;
 20841  1339  0870               	movf	TMR1_WriteTimer@timerVal,w
 20842  133A  008C               	movwf	12	;volatile
 20843  133B                     i1l5022:
 20844                           
 20845                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 20846  133B  140E               	bsf	14,0	;volatile
 20847                           
 20848                           ;tmr1.c: 140: }
 20849  133C  2B41               	goto	i1l429
 20850  133D                     i1l5024:
 20851                           
 20852                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 20853  133D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20854  133E  008D               	movwf	13	;volatile
 20855  133F                     i1l5026:
 20856                           
 20857                           ;tmr1.c: 145: TMR1L = timerVal;
 20858  133F  0870               	movf	TMR1_WriteTimer@timerVal,w
 20859  1340  008C               	movwf	12	;volatile
 20860  1341                     i1l429:
 20861  1341  0008               	return
 20862  1342                     __end_of_TMR1_WriteTimer:
 20863                           
 20864                           	psect	text81
 20865  0CC4                     __ptext81:	
 20866 ;; *************** function _Clock_ISR *****************
 20867 ;; Defined at:
 20868 ;;		line 347 in file "main.c"
 20869 ;; Parameters:    Size  Location     Type
 20870 ;;		None
 20871 ;; Auto vars:     Size  Location     Type
 20872 ;;		None
 20873 ;; Return value:  Size  Location     Type
 20874 ;;                  1    wreg      void 
 20875 ;; Registers used:
 20876 ;;		wreg, status,2, status,0, pclath, cstack
 20877 ;; Tracked objects:
 20878 ;;		On entry : 0/0
 20879 ;;		On exit  : 0/0
 20880 ;;		Unchanged: 0/0
 20881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20886 ;;Total ram usage:        1 bytes
 20887 ;; Hardware stack levels used:    1
 20888 ;; Hardware stack levels required when called:    1
 20889 ;; This function calls:
 20890 ;;		i1_DATAEE_WriteByte
 20891 ;; This function is called by:
 20892 ;;		_main
 20893 ;;		_TMR1_ISR
 20894 ;; This function uses a non-reentrant model
 20895 ;;
 20896                           
 20897                           
 20898                           ;psect for function _Clock_ISR
 20899  0CC4                     _Clock_ISR:
 20900  0CC4                     i1l5090:	
 20901                           ;incstack = 0
 20902                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0+pclath+cstack]
 20903                           
 20904                           
 20905                           ;main.c: 349: t.s++;
 20906  0CC4  3001               	movlw	1
 20907  0CC5  00FA               	movwf	??_Clock_ISR
 20908  0CC6  087A               	movf	??_Clock_ISR,w
 20909  0CC7  0020               	movlb	0	; select bank0
 20910  0CC8  07E5               	addwf	_t+2,f
 20911                           
 20912                           ;main.c: 351: if(t.s==60){
 20913  0CC9  303C               	movlw	60
 20914  0CCA  0665               	xorwf	_t+2,w
 20915  0CCB  1D03               	btfss	3,2
 20916  0CCC  2CCE               	goto	u434_21
 20917  0CCD  2CCF               	goto	u434_20
 20918  0CCE                     u434_21:
 20919  0CCE  2D7D               	goto	i1l5122
 20920  0CCF                     u434_20:
 20921  0CCF                     i1l5092:
 20922                           
 20923                           ;main.c: 352: t.m++;
 20924  0CCF  3001               	movlw	1
 20925  0CD0  00FA               	movwf	??_Clock_ISR
 20926  0CD1  087A               	movf	??_Clock_ISR,w
 20927  0CD2  07E4               	addwf	_t+1,f
 20928  0CD3                     i1l5094:
 20929                           
 20930                           ;main.c: 353: t.s=0;
 20931  0CD3  01E5               	clrf	_t+2
 20932  0CD4                     i1l5096:
 20933                           
 20934                           ;main.c: 356: DATAEE_WriteByte( 0x7000 + (1 * 8), NREG);
 20935  0CD4  3008               	movlw	8
 20936  0CD5  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20937  0CD6  3070               	movlw	112
 20938  0CD7  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20939  0CD8  0021               	movlb	1	; select bank1
 20940  0CD9  0852               	movf	_NREG^(0+128),w
 20941  0CDA  00FA               	movwf	??_Clock_ISR
 20942  0CDB  087A               	movf	??_Clock_ISR,w
 20943  0CDC  00F8               	movwf	i1DATAEE_WriteByte@bData
 20944  0CDD  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 20945  0CE0                     i1l5098:
 20946                           
 20947                           ;main.c: 357: DATAEE_WriteByte( 0x7000 + (2 * 8), PMON);
 20948  0CE0  3010               	movlw	16
 20949  0CE1  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20950  0CE2  3070               	movlw	112
 20951  0CE3  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20952  0CE4  0021               	movlb	1	; select bank1
 20953  0CE5  086D               	movf	_PMON^(0+128),w
 20954  0CE6  00FA               	movwf	??_Clock_ISR
 20955  0CE7  087A               	movf	??_Clock_ISR,w
 20956  0CE8  00F8               	movwf	i1DATAEE_WriteByte@bData
 20957  0CE9  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 20958  0CEC                     i1l5100:
 20959                           
 20960                           ;main.c: 358: DATAEE_WriteByte( 0x7000 + (3 * 8), TALA);
 20961  0CEC  3018               	movlw	24
 20962  0CED  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20963  0CEE  3070               	movlw	112
 20964  0CEF  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20965  0CF0  0021               	movlb	1	; select bank1
 20966  0CF1  086C               	movf	_TALA^(0+128),w
 20967  0CF2  00FA               	movwf	??_Clock_ISR
 20968  0CF3  087A               	movf	??_Clock_ISR,w
 20969  0CF4  00F8               	movwf	i1DATAEE_WriteByte@bData
 20970  0CF5  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 20971  0CF8                     i1l5102:
 20972                           
 20973                           ;main.c: 359: DATAEE_WriteByte( 0x7000 + (4 * 8), clkAlarm.alarmVal.h);
 20974  0CF8  3020               	movlw	32
 20975  0CF9  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20976  0CFA  3070               	movlw	112
 20977  0CFB  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20978  0CFC  0020               	movlb	0	; select bank0
 20979  0CFD  085F               	movf	_clkAlarm,w
 20980  0CFE  00FA               	movwf	??_Clock_ISR
 20981  0CFF  087A               	movf	??_Clock_ISR,w
 20982  0D00  00F8               	movwf	i1DATAEE_WriteByte@bData
 20983  0D01  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 20984  0D04                     i1l5104:
 20985                           
 20986                           ;main.c: 360: DATAEE_WriteByte( 0x7000 + (5 * 8), clkAlarm.alarmVal.m);
 20987  0D04  3028               	movlw	40
 20988  0D05  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 20989  0D06  3070               	movlw	112
 20990  0D07  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 20991  0D08  0020               	movlb	0	; select bank0
 20992  0D09  0860               	movf	_clkAlarm+1,w
 20993  0D0A  00FA               	movwf	??_Clock_ISR
 20994  0D0B  087A               	movf	??_Clock_ISR,w
 20995  0D0C  00F8               	movwf	i1DATAEE_WriteByte@bData
 20996  0D0D  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 20997  0D10                     i1l5106:
 20998                           
 20999                           ;main.c: 361: DATAEE_WriteByte( 0x7000 + (6 * 8), clkAlarm.alarmVal.s);
 21000  0D10  3030               	movlw	48
 21001  0D11  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 21002  0D12  3070               	movlw	112
 21003  0D13  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 21004  0D14  0020               	movlb	0	; select bank0
 21005  0D15  0861               	movf	_clkAlarm+2,w
 21006  0D16  00FA               	movwf	??_Clock_ISR
 21007  0D17  087A               	movf	??_Clock_ISR,w
 21008  0D18  00F8               	movwf	i1DATAEE_WriteByte@bData
 21009  0D19  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 21010  0D1C                     i1l5108:
 21011                           
 21012                           ;main.c: 362: DATAEE_WriteByte( 0x7000 + (7 * 8), tempAlarm.alarmTemp);
 21013  0D1C  3038               	movlw	56
 21014  0D1D  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 21015  0D1E  3070               	movlw	112
 21016  0D1F  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 21017  0D20  0021               	movlb	1	; select bank1
 21018  0D21  0844               	movf	_tempAlarm^(0+128),w
 21019  0D22  00FA               	movwf	??_Clock_ISR
 21020  0D23  087A               	movf	??_Clock_ISR,w
 21021  0D24  00F8               	movwf	i1DATAEE_WriteByte@bData
 21022  0D25  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 21023  0D28                     i1l5110:
 21024                           
 21025                           ;main.c: 363: DATAEE_WriteByte( 0x7000 + (8 * 8), lumAlarm.alarmLum);
 21026  0D28  3040               	movlw	64
 21027  0D29  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 21028  0D2A  3070               	movlw	112
 21029  0D2B  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 21030  0D2C  0021               	movlb	1	; select bank1
 21031  0D2D  0841               	movf	_lumAlarm^(0+128),w
 21032  0D2E  00FA               	movwf	??_Clock_ISR
 21033  0D2F  087A               	movf	??_Clock_ISR,w
 21034  0D30  00F8               	movwf	i1DATAEE_WriteByte@bData
 21035  0D31  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 21036  0D34                     i1l5112:
 21037                           
 21038                           ;main.c: 364: DATAEE_WriteByte( 0x7000 + (9 * 8), ALAF);
 21039  0D34  3048               	movlw	72
 21040  0D35  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 21041  0D36  3070               	movlw	112
 21042  0D37  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 21043  0D38  087D               	movf	_ALAF,w
 21044  0D39  00FA               	movwf	??_Clock_ISR
 21045  0D3A  087A               	movf	??_Clock_ISR,w
 21046  0D3B  00F8               	movwf	i1DATAEE_WriteByte@bData
 21047  0D3C  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 21048  0D3F                     i1l5114:
 21049                           
 21050                           ;main.c: 365: DATAEE_WriteByte( 0x7000 + (10 * 8), t.h);
 21051  0D3F  3050               	movlw	80
 21052  0D40  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 21053  0D41  3070               	movlw	112
 21054  0D42  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 21055  0D43  0020               	movlb	0	; select bank0
 21056  0D44  0863               	movf	_t,w
 21057  0D45  00FA               	movwf	??_Clock_ISR
 21058  0D46  087A               	movf	??_Clock_ISR,w
 21059  0D47  00F8               	movwf	i1DATAEE_WriteByte@bData
 21060  0D48  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 21061  0D4B                     i1l5116:
 21062                           
 21063                           ;main.c: 366: DATAEE_WriteByte( 0x7000 + (11 * 8), t.m);
 21064  0D4B  3058               	movlw	88
 21065  0D4C  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 21066  0D4D  3070               	movlw	112
 21067  0D4E  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 21068  0D4F  0020               	movlb	0	; select bank0
 21069  0D50  0864               	movf	_t+1,w
 21070  0D51  00FA               	movwf	??_Clock_ISR
 21071  0D52  087A               	movf	??_Clock_ISR,w
 21072  0D53  00F8               	movwf	i1DATAEE_WriteByte@bData
 21073  0D54  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 21074  0D57                     i1l5118:
 21075                           
 21076                           ;main.c: 367: DATAEE_WriteByte( 0x7000 + (12 * 8), idx_RingBuffer);
 21077  0D57  3060               	movlw	96
 21078  0D58  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 21079  0D59  3070               	movlw	112
 21080  0D5A  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 21081  0D5B  0021               	movlb	1	; select bank1
 21082  0D5C  0851               	movf	_idx_RingBuffer^(0+128),w
 21083  0D5D  00FA               	movwf	??_Clock_ISR
 21084  0D5E  087A               	movf	??_Clock_ISR,w
 21085  0D5F  00F8               	movwf	i1DATAEE_WriteByte@bData
 21086  0D60  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 21087  0D63                     i1l5120:
 21088                           
 21089                           ;main.c: 368: DATAEE_WriteByte( 0x7000 + (13 * 8), NREG + PMON + TALA + clkAlarm.alarmVa
      +                          l.h + clkAlarm.alarmVal.m + clkAlarm.alarmVal.s + tempAlarm.alarmTemp + lumAlarm.alarmLu
      +                          m + ALAF + t.h + t.m + idx_RingBuffer);
 21090  0D63  3068               	movlw	104
 21091  0D64  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 21092  0D65  3070               	movlw	112
 21093  0D66  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 21094  0D67  0020               	movlb	0	; select bank0
 21095  0D68  0860               	movf	_clkAlarm+1,w
 21096  0D69  0761               	addwf	_clkAlarm+2,w
 21097  0D6A  0764               	addwf	_t+1,w
 21098  0D6B  075F               	addwf	_clkAlarm,w
 21099  0D6C  0021               	movlb	1	; select bank1
 21100  0D6D  0744               	addwf	_tempAlarm^(0+128),w
 21101  0D6E  0741               	addwf	_lumAlarm^(0+128),w
 21102  0D6F  0020               	movlb	0	; select bank0
 21103  0D70  0763               	addwf	_t,w
 21104  0D71  0021               	movlb	1	; select bank1
 21105  0D72  0752               	addwf	_NREG^(0+128),w
 21106  0D73  076D               	addwf	_PMON^(0+128),w
 21107  0D74  076C               	addwf	_TALA^(0+128),w
 21108  0D75  077D               	addwf	_ALAF,w
 21109  0D76  0751               	addwf	_idx_RingBuffer^(0+128),w
 21110  0D77  00FA               	movwf	??_Clock_ISR
 21111  0D78  087A               	movf	??_Clock_ISR,w
 21112  0D79  00F8               	movwf	i1DATAEE_WriteByte@bData
 21113  0D7A  3194  2440  318C   	fcall	i1_DATAEE_WriteByte
 21114  0D7D                     i1l5122:
 21115                           
 21116                           ;main.c: 369: };main.c: 370: if(t.m==60){
 21117  0D7D  303C               	movlw	60
 21118  0D7E  0020               	movlb	0	; select bank0
 21119  0D7F  0664               	xorwf	_t+1,w
 21120  0D80  1D03               	btfss	3,2
 21121  0D81  2D83               	goto	u435_21
 21122  0D82  2D84               	goto	u435_20
 21123  0D83                     u435_21:
 21124  0D83  2D89               	goto	i1l5128
 21125  0D84                     u435_20:
 21126  0D84                     i1l5124:
 21127                           
 21128                           ;main.c: 371: t.h++;
 21129  0D84  3001               	movlw	1
 21130  0D85  00FA               	movwf	??_Clock_ISR
 21131  0D86  087A               	movf	??_Clock_ISR,w
 21132  0D87  07E3               	addwf	_t,f
 21133  0D88                     i1l5126:
 21134                           
 21135                           ;main.c: 372: t.m=0;
 21136  0D88  01E4               	clrf	_t+1
 21137  0D89                     i1l5128:
 21138                           
 21139                           ;main.c: 373: };main.c: 374: if(t.h==24){
 21140  0D89  3018               	movlw	24
 21141  0D8A  0663               	xorwf	_t,w
 21142  0D8B  1D03               	btfss	3,2
 21143  0D8C  2D8E               	goto	u436_21
 21144  0D8D  2D8F               	goto	u436_20
 21145  0D8E                     u436_21:
 21146  0D8E  2D90               	goto	i1l5132
 21147  0D8F                     u436_20:
 21148  0D8F                     i1l5130:
 21149                           
 21150                           ;main.c: 375: t.h=0;
 21151  0D8F  01E3               	clrf	_t
 21152  0D90                     i1l5132:
 21153                           
 21154                           ;main.c: 376: };main.c: 379: if((ALAF == 'A') && t.s >= clkAlarm.alarmVal.s && t.m >= cl
      +                          kAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 21155  0D90  3041               	movlw	65
 21156  0D91  067D               	xorwf	_ALAF,w
 21157  0D92  1D03               	btfss	3,2
 21158  0D93  2D95               	goto	u437_21
 21159  0D94  2D96               	goto	u437_20
 21160  0D95                     u437_21:
 21161  0D95  2DBA               	goto	i1l5146
 21162  0D96                     u437_20:
 21163  0D96                     i1l5134:
 21164  0D96  0861               	movf	_clkAlarm+2,w
 21165  0D97  0265               	subwf	_t+2,w
 21166  0D98  1C03               	skipc
 21167  0D99  2D9B               	goto	u438_21
 21168  0D9A  2D9C               	goto	u438_20
 21169  0D9B                     u438_21:
 21170  0D9B  2DBA               	goto	i1l5146
 21171  0D9C                     u438_20:
 21172  0D9C                     i1l5136:
 21173  0D9C  0860               	movf	_clkAlarm+1,w
 21174  0D9D  0264               	subwf	_t+1,w
 21175  0D9E  1C03               	skipc
 21176  0D9F  2DA1               	goto	u439_21
 21177  0DA0  2DA2               	goto	u439_20
 21178  0DA1                     u439_21:
 21179  0DA1  2DBA               	goto	i1l5146
 21180  0DA2                     u439_20:
 21181  0DA2                     i1l5138:
 21182  0DA2  085F               	movf	_clkAlarm,w
 21183  0DA3  0263               	subwf	_t,w
 21184  0DA4  1C03               	skipc
 21185  0DA5  2DA7               	goto	u440_21
 21186  0DA6  2DA8               	goto	u440_20
 21187  0DA7                     u440_21:
 21188  0DA7  2DBA               	goto	i1l5146
 21189  0DA8                     u440_20:
 21190  0DA8                     i1l5140:
 21191  0DA8  0868               	movf	_editingClockAlarm,w
 21192  0DA9  0469               	iorwf	_editingClockAlarm+1,w
 21193  0DAA  1D03               	btfss	3,2
 21194  0DAB  2DAD               	goto	u441_21
 21195  0DAC  2DAE               	goto	u441_20
 21196  0DAD                     u441_21:
 21197  0DAD  2DBA               	goto	i1l5146
 21198  0DAE                     u441_20:
 21199  0DAE                     i1l5142:
 21200                           
 21201                           ;main.c: 380: alarmPWMStart.h = 0xff;
 21202  0DAE  30FF               	movlw	255
 21203  0DAF  00FA               	movwf	??_Clock_ISR
 21204  0DB0  087A               	movf	??_Clock_ISR,w
 21205  0DB1  0021               	movlb	1	; select bank1
 21206  0DB2  00E5               	movwf	_alarmPWMStart^(0+128)
 21207  0DB3                     i1l5144:
 21208                           
 21209                           ;main.c: 381: clkAlarm.trigger = 1;
 21210  0DB3  0020               	movlb	0	; select bank0
 21211  0DB4  01E2               	clrf	_clkAlarm+3
 21212  0DB5  0AE2               	incf	_clkAlarm+3,f
 21213                           
 21214                           ;main.c: 382: clkAlarm.alarmVal.h = 25;
 21215  0DB6  3019               	movlw	25
 21216  0DB7  00FA               	movwf	??_Clock_ISR
 21217  0DB8  087A               	movf	??_Clock_ISR,w
 21218  0DB9  00DF               	movwf	_clkAlarm
 21219  0DBA                     i1l5146:
 21220  0DBA  1003               	clrc
 21221  0DBB  1F96               	btfss	22,7	;volatile
 21222  0DBC  1403               	setc
 21223  0DBD  1803               	btfsc	3,0
 21224  0DBE  2DC0               	goto	u442_21
 21225  0DBF  2DC3               	goto	u442_20
 21226  0DC0                     u442_21:
 21227  0DC0  0020               	movlb	0	; select bank0
 21228  0DC1  1796               	bsf	22,7	;volatile
 21229  0DC2  2DC5               	goto	u443_24
 21230  0DC3                     u442_20:
 21231  0DC3  0020               	movlb	0	; select bank0
 21232  0DC4  1396               	bcf	22,7	;volatile
 21233  0DC5                     u443_24:
 21234  0DC5                     i1l5148:
 21235                           
 21236                           ;main.c: 386: updateLCD = 1;
 21237  0DC5  01EF               	clrf	_updateLCD
 21238  0DC6  0AEF               	incf	_updateLCD,f
 21239  0DC7                     i1l1337:
 21240  0DC7  0008               	return
 21241  0DC8                     __end_of_Clock_ISR:
 21242                           
 21243                           	psect	text82
 21244  0002                     __ptext82:	
 21245 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 21246 ;; Defined at:
 21247 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 21248 ;; Parameters:    Size  Location     Type
 21249 ;;		None
 21250 ;; Auto vars:     Size  Location     Type
 21251 ;;		None
 21252 ;; Return value:  Size  Location     Type
 21253 ;;                  1    wreg      void 
 21254 ;; Registers used:
 21255 ;;		None
 21256 ;; Tracked objects:
 21257 ;;		On entry : 0/0
 21258 ;;		On exit  : 0/0
 21259 ;;		Unchanged: 0/0
 21260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21265 ;;Total ram usage:        0 bytes
 21266 ;; Hardware stack levels used:    1
 21267 ;; This function calls:
 21268 ;;		Nothing
 21269 ;; This function is called by:
 21270 ;;		_TMR1_Initialize
 21271 ;;		_TMR1_ISR
 21272 ;; This function uses a non-reentrant model
 21273 ;;
 21274                           
 21275                           
 21276                           ;psect for function _TMR1_DefaultInterruptHandler
 21277  0002                     _TMR1_DefaultInterruptHandler:
 21278  0002                     i1l448:	
 21279                           ;incstack = 0
 21280                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 21281                           
 21282  0002  0008               	return
 21283  0003                     __end_of_TMR1_DefaultInterruptHandler:
 21284                           
 21285                           	psect	text83
 21286  1440                     __ptext83:	
 21287 ;; *************** function i1_DATAEE_WriteByte *****************
 21288 ;; Defined at:
 21289 ;;		line 180 in file "mcc_generated_files/memory.c"
 21290 ;; Parameters:    Size  Location     Type
 21291 ;;  bAdd            2    6[COMMON] unsigned int 
 21292 ;;  bData           1    8[COMMON] unsigned char 
 21293 ;; Auto vars:     Size  Location     Type
 21294 ;;  GIEBitValue     1    9[COMMON] unsigned char 
 21295 ;; Return value:  Size  Location     Type
 21296 ;;                  1    wreg      void 
 21297 ;; Registers used:
 21298 ;;		wreg, status,2, status,0
 21299 ;; Tracked objects:
 21300 ;;		On entry : 0/0
 21301 ;;		On exit  : 0/0
 21302 ;;		Unchanged: 0/0
 21303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21304 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21307 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21308 ;;Total ram usage:        4 bytes
 21309 ;; Hardware stack levels used:    1
 21310 ;; This function calls:
 21311 ;;		Nothing
 21312 ;; This function is called by:
 21313 ;;		_Clock_ISR
 21314 ;;		_monitoring_ISR
 21315 ;; This function uses a non-reentrant model
 21316 ;;
 21317                           
 21318                           
 21319                           ;psect for function i1_DATAEE_WriteByte
 21320  1440                     i1_DATAEE_WriteByte:
 21321  1440                     i1l4828:	
 21322                           ;incstack = 0
 21323                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 21324                           
 21325                           
 21326                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 21327  1440  3000               	movlw	0
 21328  1441  1B8B               	btfsc	11,7	;volatile
 21329  1442  3001               	movlw	1
 21330  1443  00F9               	movwf	i1DATAEE_WriteByte@GIEBitValue
 21331                           
 21332                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 21333  1444  0877               	movf	i1DATAEE_WriteByte@bAdd+1,w
 21334  1445  0030               	movlb	16	; select bank16
 21335  1446  009B               	movwf	27	;volatile
 21336  1447                     i1l4830:
 21337                           
 21338                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 21339  1447  0876               	movf	i1DATAEE_WriteByte@bAdd,w
 21340  1448  009A               	movwf	26	;volatile
 21341  1449                     i1l4832:
 21342                           
 21343                           ;memory.c: 186: NVMDATL = bData;
 21344  1449  0878               	movf	i1DATAEE_WriteByte@bData,w
 21345  144A  009C               	movwf	28	;volatile
 21346  144B                     i1l4834:
 21347                           
 21348                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 21349  144B  171E               	bsf	30,6	;volsfr
 21350  144C                     i1l4836:
 21351                           
 21352                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 21353  144C  151E               	bsf	30,2	;volsfr
 21354  144D                     i1l4838:
 21355                           
 21356                           ;memory.c: 189: INTCONbits.GIE = 0;
 21357  144D  138B               	bcf	11,7	;volatile
 21358  144E                     i1l4840:
 21359                           
 21360                           ;memory.c: 190: NVMCON2 = 0x55;
 21361  144E  3055               	movlw	85
 21362  144F  009F               	movwf	31	;volsfr
 21363  1450                     i1l4842:
 21364                           
 21365                           ;memory.c: 191: NVMCON2 = 0xAA;
 21366  1450  30AA               	movlw	170
 21367  1451  009F               	movwf	31	;volsfr
 21368  1452                     i1l4844:
 21369                           
 21370                           ;memory.c: 192: NVMCON1bits.WR = 1;
 21371  1452  149E               	bsf	30,1	;volsfr
 21372  1453                     i1l801:	
 21373                           ;memory.c: 195: {
 21374                           
 21375  1453  189E               	btfsc	30,1	;volsfr
 21376  1454  2C56               	goto	u418_21
 21377  1455  2C57               	goto	u418_20
 21378  1456                     u418_21:
 21379  1456  2C53               	goto	i1l801
 21380  1457                     u418_20:
 21381  1457                     i1l803:
 21382                           
 21383                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 21384  1457  111E               	bcf	30,2	;volsfr
 21385  1458                     i1l4846:
 21386                           
 21387                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 21388  1458  0C79               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 21389  1459  1C03               	skipc
 21390  145A  138B               	bcf	11,7	;volatile
 21391  145B  1803               	skipnc
 21392  145C  178B               	bsf	11,7	;volatile
 21393  145D                     i1l804:
 21394  145D  0008               	return
 21395  145E                     __end_ofi1_DATAEE_WriteByte:
 21396                           
 21397                           	psect	text84
 21398  125D                     __ptext84:	
 21399 ;; *************** function _INT_ISR *****************
 21400 ;; Defined at:
 21401 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 21402 ;; Parameters:    Size  Location     Type
 21403 ;;		None
 21404 ;; Auto vars:     Size  Location     Type
 21405 ;;		None
 21406 ;; Return value:  Size  Location     Type
 21407 ;;                  1    wreg      void 
 21408 ;; Registers used:
 21409 ;;		wreg, status,2, status,0, pclath, cstack
 21410 ;; Tracked objects:
 21411 ;;		On entry : 0/0
 21412 ;;		On exit  : 0/0
 21413 ;;		Unchanged: 0/0
 21414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21419 ;;Total ram usage:        0 bytes
 21420 ;; Hardware stack levels used:    1
 21421 ;; Hardware stack levels required when called:    2
 21422 ;; This function calls:
 21423 ;;		_INT_CallBack
 21424 ;; This function is called by:
 21425 ;;		_INTERRUPT_InterruptManager
 21426 ;; This function uses a non-reentrant model
 21427 ;;
 21428                           
 21429                           
 21430                           ;psect for function _INT_ISR
 21431  125D                     _INT_ISR:
 21432  125D                     i1l5420:	
 21433                           ;incstack = 0
 21434                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 21435                           
 21436                           
 21437                           ;ext_int.c: 34: (PIR0bits.INTF = 0);
 21438  125D  002E               	movlb	14	; select bank14
 21439  125E  100C               	bcf	12,0	;volatile
 21440  125F                     i1l5422:
 21441                           
 21442                           ;ext_int.c: 37: INT_CallBack();
 21443  125F  3192  22EC  3192   	fcall	_INT_CallBack
 21444  1262                     i1l820:
 21445  1262  0008               	return
 21446  1263                     __end_of_INT_ISR:
 21447                           
 21448                           	psect	text85
 21449  12EC                     __ptext85:	
 21450 ;; *************** function _INT_CallBack *****************
 21451 ;; Defined at:
 21452 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 21453 ;; Parameters:    Size  Location     Type
 21454 ;;		None
 21455 ;; Auto vars:     Size  Location     Type
 21456 ;;		None
 21457 ;; Return value:  Size  Location     Type
 21458 ;;                  1    wreg      void 
 21459 ;; Registers used:
 21460 ;;		wreg, status,2, status,0, pclath, cstack
 21461 ;; Tracked objects:
 21462 ;;		On entry : 0/0
 21463 ;;		On exit  : 0/0
 21464 ;;		Unchanged: 0/0
 21465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21470 ;;Total ram usage:        0 bytes
 21471 ;; Hardware stack levels used:    1
 21472 ;; Hardware stack levels required when called:    1
 21473 ;; This function calls:
 21474 ;;		Absolute function
 21475 ;;		_INT_DefaultInterruptHandler
 21476 ;;		_S1_ISR
 21477 ;; This function is called by:
 21478 ;;		_INT_ISR
 21479 ;; This function uses a non-reentrant model
 21480 ;;
 21481                           
 21482                           
 21483                           ;psect for function _INT_CallBack
 21484  12EC                     _INT_CallBack:
 21485  12EC                     i1l5050:	
 21486                           ;incstack = 0
 21487                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 21488                           
 21489                           
 21490                           ;ext_int.c: 44: if(INT_InterruptHandler)
 21491  12EC  0021               	movlb	1	; select bank1
 21492  12ED  0856               	movf	_INT_InterruptHandler^(0+128),w
 21493  12EE  0457               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 21494  12EF  1903               	btfsc	3,2
 21495  12F0  2AF2               	goto	u425_21
 21496  12F1  2AF3               	goto	u425_20
 21497  12F2                     u425_21:
 21498  12F2  2AF8               	goto	i1l824
 21499  12F3                     u425_20:
 21500  12F3                     i1l5052:
 21501                           
 21502                           ;ext_int.c: 45: {;ext_int.c: 46: INT_InterruptHandler();
 21503  12F3  0857               	movf	(_INT_InterruptHandler+1)^(0+128),w
 21504  12F4  008A               	movwf	10
 21505  12F5  0856               	movf	_INT_InterruptHandler^(0+128),w
 21506  12F6  000A               	callw
 21507  12F7  3192               	pagesel	$
 21508  12F8                     i1l824:
 21509  12F8  0008               	return
 21510  12F9                     __end_of_INT_CallBack:
 21511                           
 21512                           	psect	text86
 21513  123B                     __ptext86:	
 21514 ;; *************** function _INT_DefaultInterruptHandler *****************
 21515 ;; Defined at:
 21516 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 21517 ;; Parameters:    Size  Location     Type
 21518 ;;		None
 21519 ;; Auto vars:     Size  Location     Type
 21520 ;;		None
 21521 ;; Return value:  Size  Location     Type
 21522 ;;                  1    wreg      void 
 21523 ;; Registers used:
 21524 ;;		None
 21525 ;; Tracked objects:
 21526 ;;		On entry : 0/0
 21527 ;;		On exit  : 0/0
 21528 ;;		Unchanged: 0/0
 21529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21534 ;;Total ram usage:        0 bytes
 21535 ;; Hardware stack levels used:    1
 21536 ;; This function calls:
 21537 ;;		Nothing
 21538 ;; This function is called by:
 21539 ;;		_EXT_INT_Initialize
 21540 ;;		_INT_CallBack
 21541 ;; This function uses a non-reentrant model
 21542 ;;
 21543                           
 21544                           
 21545                           ;psect for function _INT_DefaultInterruptHandler
 21546  123B                     _INT_DefaultInterruptHandler:
 21547  123B                     i1l830:	
 21548                           ;incstack = 0
 21549                           ; Regs used in _INT_DefaultInterruptHandler: []
 21550                           
 21551  123B  0008               	return
 21552  123C                     __end_of_INT_DefaultInterruptHandler:
 21553                           
 21554                           	psect	text87
 21555  1286                     __ptext87:	
 21556 ;; *************** function _S1_ISR *****************
 21557 ;; Defined at:
 21558 ;;		line 743 in file "main.c"
 21559 ;; Parameters:    Size  Location     Type
 21560 ;;		None
 21561 ;; Auto vars:     Size  Location     Type
 21562 ;;		None
 21563 ;; Return value:  Size  Location     Type
 21564 ;;                  1    wreg      void 
 21565 ;; Registers used:
 21566 ;;		None
 21567 ;; Tracked objects:
 21568 ;;		On entry : 0/0
 21569 ;;		On exit  : 0/0
 21570 ;;		Unchanged: 0/0
 21571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21576 ;;Total ram usage:        0 bytes
 21577 ;; Hardware stack levels used:    1
 21578 ;; This function calls:
 21579 ;;		Nothing
 21580 ;; This function is called by:
 21581 ;;		_main
 21582 ;;		_INT_CallBack
 21583 ;; This function uses a non-reentrant model
 21584 ;;
 21585                           
 21586                           
 21587                           ;psect for function _S1_ISR
 21588  1286                     _S1_ISR:
 21589  1286                     i1l4818:	
 21590                           ;incstack = 0
 21591                           ; Regs used in _S1_ISR: []
 21592                           
 21593                           
 21594                           ;main.c: 744: PIE0bits.INTE = 0;
 21595  1286  002E               	movlb	14	; select bank14
 21596  1287  1016               	bcf	22,0	;volatile
 21597                           
 21598                           ;main.c: 745: flagS1pushed = 1;
 21599  1288  0020               	movlb	0	; select bank0
 21600  1289  01EA               	clrf	_flagS1pushed
 21601  128A  0AEA               	incf	_flagS1pushed,f
 21602                           
 21603                           ;main.c: 764: (PIR0bits.INTF = 0);
 21604  128B  002E               	movlb	14	; select bank14
 21605  128C  100C               	bcf	12,0	;volatile
 21606                           
 21607                           ;main.c: 765: PIE0bits.INTE = 1;
 21608  128D  1416               	bsf	22,0	;volatile
 21609  128E                     i1l1483:
 21610  128E  0008               	return
 21611  128F                     __end_of_S1_ISR:
 21612                           
 21613                           	psect	text88
 21614  15C0                     __ptext88:	
 21615 ;; *************** function _EUSART_Transmit_ISR *****************
 21616 ;; Defined at:
 21617 ;;		line 181 in file "mcc_generated_files/eusart.c"
 21618 ;; Parameters:    Size  Location     Type
 21619 ;;		None
 21620 ;; Auto vars:     Size  Location     Type
 21621 ;;		None
 21622 ;; Return value:  Size  Location     Type
 21623 ;;                  1    wreg      void 
 21624 ;; Registers used:
 21625 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21626 ;; Tracked objects:
 21627 ;;		On entry : 0/0
 21628 ;;		On exit  : 0/0
 21629 ;;		Unchanged: 0/0
 21630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21635 ;;Total ram usage:        1 bytes
 21636 ;; Hardware stack levels used:    1
 21637 ;; This function calls:
 21638 ;;		Nothing
 21639 ;; This function is called by:
 21640 ;;		_EUSART_Initialize
 21641 ;;		_INTERRUPT_InterruptManager
 21642 ;; This function uses a non-reentrant model
 21643 ;;
 21644                           
 21645                           
 21646                           ;psect for function _EUSART_Transmit_ISR
 21647  15C0                     _EUSART_Transmit_ISR:
 21648  15C0                     i1l5486:	
 21649                           ;incstack = 0
 21650                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 21651                           
 21652                           
 21653                           ;eusart.c: 185: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 21654  15C0  3040               	movlw	64
 21655  15C1  0021               	movlb	1	; select bank1
 21656  15C2  0264               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 21657  15C3  1803               	skipnc
 21658  15C4  2DC6               	goto	u499_21
 21659  15C5  2DC7               	goto	u499_20
 21660  15C6                     u499_21:
 21661  15C6  2DE2               	goto	i1l918
 21662  15C7                     u499_20:
 21663  15C7                     i1l5488:
 21664                           
 21665                           ;eusart.c: 186: {;eusart.c: 187: TX1REG = eusartTxBuffer[eusartTxTail++];
 21666  15C7  0020               	movlb	0	; select bank0
 21667  15C8  086D               	movf	_eusartTxTail,w
 21668  15C9  3EA0               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 21669  15CA  0086               	movwf	6
 21670  15CB  3001               	movlw	1	; select bank3/4
 21671  15CC  0087               	movwf	7
 21672  15CD  0801               	movf	1,w
 21673  15CE  0022               	movlb	2	; select bank2
 21674  15CF  009A               	movwf	26	;volatile
 21675  15D0                     i1l5490:
 21676  15D0  3001               	movlw	1
 21677  15D1  00F0               	movwf	??_EUSART_Transmit_ISR
 21678  15D2  0870               	movf	??_EUSART_Transmit_ISR,w
 21679  15D3  0020               	movlb	0	; select bank0
 21680  15D4  07ED               	addwf	_eusartTxTail,f	;volatile
 21681  15D5                     i1l5492:
 21682                           
 21683                           ;eusart.c: 188: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 21684  15D5  3040               	movlw	64
 21685  15D6  026D               	subwf	_eusartTxTail,w	;volatile
 21686  15D7  1C03               	skipc
 21687  15D8  2DDA               	goto	u500_21
 21688  15D9  2DDB               	goto	u500_20
 21689  15DA                     u500_21:
 21690  15DA  2DDC               	goto	i1l5496
 21691  15DB                     u500_20:
 21692  15DB                     i1l5494:
 21693                           
 21694                           ;eusart.c: 189: {;eusart.c: 190: eusartTxTail = 0;
 21695  15DB  01ED               	clrf	_eusartTxTail	;volatile
 21696  15DC                     i1l5496:
 21697                           
 21698                           ;eusart.c: 191: };eusart.c: 192: eusartTxBufferRemaining++;
 21699  15DC  3001               	movlw	1
 21700  15DD  00F0               	movwf	??_EUSART_Transmit_ISR
 21701  15DE  0870               	movf	??_EUSART_Transmit_ISR,w
 21702  15DF  0021               	movlb	1	; select bank1
 21703  15E0  07E4               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 21704                           
 21705                           ;eusart.c: 193: }
 21706  15E1  2DE4               	goto	i1l921
 21707  15E2                     i1l918:
 21708                           
 21709                           ;eusart.c: 194: else;eusart.c: 195: {;eusart.c: 196: PIE3bits.TXIE = 0;
 21710  15E2  002E               	movlb	14	; select bank14
 21711  15E3  1219               	bcf	25,4	;volatile
 21712  15E4                     i1l921:
 21713  15E4  0008               	return
 21714  15E5                     __end_of_EUSART_Transmit_ISR:
 21715                           
 21716                           	psect	text89
 21717  1537                     __ptext89:	
 21718 ;; *************** function _EUSART_Receive_ISR *****************
 21719 ;; Defined at:
 21720 ;;		line 200 in file "mcc_generated_files/eusart.c"
 21721 ;; Parameters:    Size  Location     Type
 21722 ;;		None
 21723 ;; Auto vars:     Size  Location     Type
 21724 ;;		None
 21725 ;; Return value:  Size  Location     Type
 21726 ;;                  1    wreg      void 
 21727 ;; Registers used:
 21728 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21729 ;; Tracked objects:
 21730 ;;		On entry : 0/0
 21731 ;;		On exit  : 0/0
 21732 ;;		Unchanged: 0/0
 21733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21738 ;;Total ram usage:        1 bytes
 21739 ;; Hardware stack levels used:    1
 21740 ;; This function calls:
 21741 ;;		Nothing
 21742 ;; This function is called by:
 21743 ;;		_EUSART_Initialize
 21744 ;;		_INTERRUPT_InterruptManager
 21745 ;; This function uses a non-reentrant model
 21746 ;;
 21747                           
 21748                           
 21749                           ;psect for function _EUSART_Receive_ISR
 21750  1537                     _EUSART_Receive_ISR:
 21751  1537                     i1l5498:	
 21752                           ;incstack = 0
 21753                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 21754                           
 21755                           
 21756                           ;eusart.c: 203: if(1 == RC1STAbits.OERR)
 21757  1537  0022               	movlb	2	; select bank2
 21758  1538  1C9D               	btfss	29,1	;volatile
 21759  1539  2D3B               	goto	u501_21
 21760  153A  2D3C               	goto	u501_20
 21761  153B                     u501_21:
 21762  153B  2D3E               	goto	i1l5502
 21763  153C                     u501_20:
 21764  153C                     i1l5500:
 21765                           
 21766                           ;eusart.c: 204: {;eusart.c: 207: RC1STAbits.CREN = 0;
 21767  153C  121D               	bcf	29,4	;volatile
 21768                           
 21769                           ;eusart.c: 208: RC1STAbits.CREN = 1;
 21770  153D  161D               	bsf	29,4	;volatile
 21771  153E                     i1l5502:
 21772                           
 21773                           ;eusart.c: 209: };eusart.c: 212: eusartRxBuffer[eusartRxHead++] = RC1REG;
 21774  153E  0819               	movf	25,w	;volatile
 21775  153F  00F0               	movwf	??_EUSART_Receive_ISR
 21776  1540  0021               	movlb	1	; select bank1
 21777  1541  0855               	movf	_eusartRxHead^(0+128),w
 21778  1542  3E20               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 21779  1543  0086               	movwf	6
 21780  1544  3002               	movlw	2	; select bank4/5
 21781  1545  0087               	movwf	7
 21782  1546  0870               	movf	??_EUSART_Receive_ISR,w
 21783  1547  0081               	movwf	1
 21784  1548                     i1l5504:
 21785  1548  3001               	movlw	1
 21786  1549  00F0               	movwf	??_EUSART_Receive_ISR
 21787  154A  0870               	movf	??_EUSART_Receive_ISR,w
 21788  154B  07D5               	addwf	_eusartRxHead^(0+128),f	;volatile
 21789  154C                     i1l5506:
 21790                           
 21791                           ;eusart.c: 213: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 21792  154C  3040               	movlw	64
 21793  154D  0255               	subwf	_eusartRxHead^(0+128),w	;volatile
 21794  154E  1C03               	skipc
 21795  154F  2D51               	goto	u502_21
 21796  1550  2D52               	goto	u502_20
 21797  1551                     u502_21:
 21798  1551  2D53               	goto	i1l5510
 21799  1552                     u502_20:
 21800  1552                     i1l5508:
 21801                           
 21802                           ;eusart.c: 214: {;eusart.c: 215: eusartRxHead = 0;
 21803  1552  01D5               	clrf	_eusartRxHead^(0+128)	;volatile
 21804  1553                     i1l5510:
 21805                           
 21806                           ;eusart.c: 216: };eusart.c: 217: eusartRxCount++;
 21807  1553  3001               	movlw	1
 21808  1554  00F0               	movwf	??_EUSART_Receive_ISR
 21809  1555  0870               	movf	??_EUSART_Receive_ISR,w
 21810  1556  07D3               	addwf	_eusartRxCount^(0+128),f	;volatile
 21811  1557                     i1l926:
 21812  1557  0008               	return
 21813  1558                     __end_of_EUSART_Receive_ISR:
 21814  007E                     btemp	set	126	;btemp
 21815  007E                     int$flags	set	126
 21816  007E                     wtemp0	set	126
 21817                           
 21818                           	psect	config
 21819                           
 21820                           ;Config register CONFIG1 @ 0x8007
 21821                           ;	External Oscillator mode selection bits
 21822                           ;	FEXTOSC = OFF, Oscillator not enabled
 21823                           ;	Power-up default value for COSC bits
 21824                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 21825                           ;	Clock Out Enable bit
 21826                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 21827                           ;	Clock Switch Enable bit
 21828                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 21829                           ;	Fail-Safe Clock Monitor Enable bit
 21830                           ;	FCMEN = ON, FSCM timer enabled
 21831  8007                     	org	32775
 21832  8007  3FEC               	dw	16364
 21833                           
 21834                           ;Config register CONFIG2 @ 0x8008
 21835                           ;	Master Clear Enable bit
 21836                           ;	MCLRE = ON, MCLR pin is Master Clear function
 21837                           ;	Power-up Timer Enable bit
 21838                           ;	PWRTE = OFF, PWRT disabled
 21839                           ;	Low-Power BOR enable bit
 21840                           ;	LPBOREN = OFF, ULPBOR disabled
 21841                           ;	Brown-out reset enable bits
 21842                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 21843                           ;	Brown-out Reset Voltage Selection
 21844                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 21845                           ;	Zero-cross detect disable
 21846                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 21847                           ;	Peripheral Pin Select one-way control
 21848                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 21849                           ;	Stack Overflow/Underflow Reset Enable bit
 21850                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 21851                           ;	Background Debugger
 21852                           ;	DEBUG = OFF, Background Debugger disabled
 21853  8008                     	org	32776
 21854  8008  3FFF               	dw	16383
 21855                           
 21856                           ;Config register CONFIG3 @ 0x8009
 21857                           ;	WDT Period Select bits
 21858                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 21859                           ;	WDT operating mode
 21860                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 21861                           ;	WDT Window Select bits
 21862                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 21863                           ;	WDT input clock selector
 21864                           ;	WDTCCS = SC, Software Control
 21865  8009                     	org	32777
 21866  8009  3F9F               	dw	16287
 21867                           
 21868                           ;Config register CONFIG4 @ 0x800A
 21869                           ;	UserNVM self-write protection bits
 21870                           ;	WRT = OFF, Write protection off
 21871                           ;	Scanner Enable bit
 21872                           ;	SCANE = available, Scanner module is available for use
 21873                           ;	Low Voltage Programming Enable bit
 21874                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 21875  800A                     	org	32778
 21876  800A  3FFF               	dw	16383
 21877                           
 21878                           ;Config register CONFIG5 @ 0x800B
 21879                           ;	UserNVM Program memory code protection bit
 21880                           ;	CP = OFF, Program Memory code protection disabled
 21881                           ;	DataNVM code protection bit
 21882                           ;	CPD = OFF, Data EEPROM code protection disabled
 21883  800B                     	org	32779
 21884  800B  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    40
    Data        10
    BSS         189
    Persistent  47
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     63      80
    BANK1            80     30      78
    BANK2            80      0      20
    BANK3            80      0      64
    BANK4            80      0      64
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    cmd_rc@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_rtl@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_rp@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_ra@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    S2057$0$1	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    memset@p1	PTR void  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    memset@p	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> update_menuLCD@l(BANK0[3]), update_menuLCD@tt(BANK0[4]), update_menuLCD@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__memset	PTR void  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_aa@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_dtl@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_dac@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_mta@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_mmp@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    cmd_sc@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> main@buff(BANK1[20]), 

    sendMessage@buffer	PTR unsigned char  size(1) Largest target is 9
		 -> cmd_ra@buff(BANK0[9]), cmd_rp@buff(BANK0[5]), cmd_rtl@buff(BANK0[5]), cmd_rc@buff(BANK0[6]), 
		 -> sendERRORMessage@bufw(BANK0[4]), sendOKMessage@bufw(BANK0[4]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 3
		 -> update_menuLCD@diff(BANK0[3]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[4]), update_menuLCD@l(BANK0[3]), update_menuLCD@tt(BANK0[4]), update_menuLCD@str(BANK0[8]), 

    S2057command_d$cmd_fnct	PTR FTN(int ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> cmd_aa(), cmd_dtl(), cmd_dac(), cmd_ra(), 
		 -> cmd_mta(), cmd_mmp(), cmd_rp(), cmd_rtl(), 
		 -> cmd_sc(), cmd_rc(), 

    commands.cmd_fnct	PTR FTN(int ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> cmd_aa(), cmd_dtl(), cmd_dac(), cmd_ra(), 
		 -> cmd_mta(), cmd_mmp(), cmd_rp(), cmd_rtl(), 
		 -> cmd_sc(), cmd_rc(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_ISR(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_ISR(), INT_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->i1_DATAEE_WriteByte
    _tsttc->i1_WriteI2C
    _TMR1_ISR->_Clock_ISR
    _Clock_ISR->i1_DATAEE_WriteByte
    i1_DATAEE_WriteByte->i1___wmul

Critical Paths under _main in BANK0

    _main->_editClock
    _main->_editLum
    _main->_editTemp
    _main->_toggleAlarms
    _toggleAlarms->_update_menuLCD
    _getch->_EUSART_Read
    _editTemp->_update_menuLCD
    _editLum->_update_menuLCD
    _editClock->_update_menuLCD
    _update_menuLCD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDcmd->_LCDsend2x4
    _cmd_sc->_sendERRORMessage
    _cmd_sc->_sendOKMessage
    _cmd_mta->_sendERRORMessage
    _cmd_mta->_sendOKMessage
    _cmd_mmp->_sendERRORMessage
    _cmd_mmp->_sendOKMessage
    _cmd_dtl->_sendERRORMessage
    _cmd_dtl->_sendOKMessage
    _cmd_dac->_sendERRORMessage
    _cmd_dac->_sendOKMessage
    _cmd_aa->_sendERRORMessage
    _cmd_aa->_sendOKMessage
    _sendOKMessage->_sendMessage
    _sendERRORMessage->_sendMessage
    _sendMessage->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0   67824
                                             60 BANK0      3     3      0
                                              0 BANK1     30    30      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                 _EUSART_is_rx_ready
            _INT_SetInterruptHandler
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
               _PWM_Output_D4_Enable
                           _S1button
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR2_StartTimer
                     _TMR2_StopTimer
           _TMR5_SetInterruptHandler
                             ___wmul
                             _cmd_aa *
                            _cmd_dac *
                            _cmd_dtl *
                            _cmd_mmp *
                            _cmd_mta *
                             _cmd_ra *
                             _cmd_rc *
                             _cmd_rp *
                            _cmd_rtl *
                             _cmd_sc *
                          _editClock
                            _editLum
                           _editTemp
                              _getch
                   _i2c1_driver_open
                             _memset
                       _toggleAlarms
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0    7472
                                             59 BANK0      1     1      0
                           _S1button
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4     651
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getch                                                0     0      0      24
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0    7472
                                             59 BANK0      1     1      0
                           _S1button
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0    7472
                                             59 BANK0      1     1      0
                           _S1button
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0    7472
                                             59 BANK0      1     1      0
                           _S1button
                     _update_menuLCD
 ---------------------------------------------------------------------------------
 (1) _update_menuLCD                                      24    24      0    7472
                                             35 BANK0     24    24      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                     _TMR2_StopTimer
        _differenceBetweenTimePeriod
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    21      8    3455
                                             14 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1200
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _differenceBetweenTimePeriod                          8     1      7     595
                                              0 BANK0      8     1      7
 ---------------------------------------------------------------------------------
 (2) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (3) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_LoadDutyValue                                   4     2      2     348
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _LCDstr                                               6     4      2    1159
                                              9 BANK0      6     4      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (3) _LCDchar                                              1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _S1button                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _cmd_sc                                               7     4      3    2595
                                             15 BANK0      7     4      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_rtl                                              9     6      3    1188
                                             15 BANK0      9     6      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_rp                                               9     6      3    1188
                                             15 BANK0      9     6      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_rc                                              10     7      3    1212
                                             15 BANK0     10     7      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_ra                                              13    10      3    1284
                                             15 BANK0     13    10      3
                             ___wmul (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_mta                                              3     0      3    2416
                                             15 BANK0      3     0      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_mmp                                             15    12      3    2825
                                             15 BANK0     15    12      3
                    _TMR5_StartTimer
                     _TMR5_StopTimer
                             ___lmul
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
                 _setTimer5ReloadVal
 ---------------------------------------------------------------------------------
 (2) _setTimer5ReloadVal                                   2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cmd_dtl                                              5     2      3    2528
                                             15 BANK0      5     2      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_dac                                              7     4      3    2595
                                             15 BANK0      7     4      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (1) _cmd_aa                                               4     1      3    2522
                                             15 BANK0      4     1      3
                             ___wmul (ARG)
                   _sendERRORMessage
                      _sendOKMessage
 ---------------------------------------------------------------------------------
 (2) _sendOKMessage                                        6     6      0    1186
                                              9 BANK0      6     6      0
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _sendERRORMessage                                     6     6      0    1186
                                              9 BANK0      6     6      0
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage                                          6     3      3    1068
                                              3 BANK0      6     3      3
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      66
                                              2 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     718
                    _ADCC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     196
                                              2 BANK0      1     1      0
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 BANK0      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (4) _LCDsend2x4                                           6     5      1     788
                                              2 BANK0      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK0      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (5) _WriteI2C                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    4017
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2    1184
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0    2972
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                            _INT_ISR
                           _TMR1_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (8) _TMR5_ISR                                             0     0      0    1707
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (9) _monitoring_ISR                                       3     3      0    1467
                                             10 COMMON     3     3      0
           _ADCC_GetSingleConversion
                              _tsttc
                 i1_DATAEE_WriteByte
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) _tsttc                                               2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (11) i1_WriteI2C                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _ReadI2C                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ADCC_GetSingleConversion                            4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (9) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0    1265
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Clock_ISR                                            1     1      0    1025
                                             10 COMMON     1     1      0
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (10) i1_DATAEE_WriteByte                                  4     1      3    1025
                                              6 COMMON     4     1      3
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
                             _S1_ISR *
 ---------------------------------------------------------------------------------
 (10) _S1_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _EUSART_is_rx_ready
   _INT_SetInterruptHandler
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _PWM_Output_D4_Enable
   _S1button
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StartTimer
     _TMR2_Start
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR5_SetInterruptHandler
   ___wmul
   _cmd_aa *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_dac *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_dtl *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_mmp *
     _TMR5_StartTimer
     _TMR5_StopTimer
     ___lmul
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _setTimer5ReloadVal (ARG)
   _cmd_mta *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _cmd_ra *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_rc *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_rp *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_rtl *
     ___wmul (ARG)
     _sendMessage (ARG)
       _putch
         _EUSART_Write
   _cmd_sc *
     ___wmul (ARG)
     _sendERRORMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
     _sendOKMessage (ARG)
       _sendMessage
         _putch
           _EUSART_Write
   _editClock *
     _S1button
     _update_menuLCD
       _LCDchar
         _LCDsend2x4
           _WriteI2C
       _LCDcmd
         _LCDsend2x4
           _WriteI2C
       _LCDstr
         _LCDchar
           _LCDsend2x4
             _WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Disable
       _TMR2_StopTimer
         _TMR2_Stop
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _editLum *
     _S1button
     _update_menuLCD
       _LCDchar
         _LCDsend2x4
           _WriteI2C
       _LCDcmd
         _LCDsend2x4
           _WriteI2C
       _LCDstr
         _LCDchar
           _LCDsend2x4
             _WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Disable
       _TMR2_StopTimer
         _TMR2_Stop
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _editTemp *
     _S1button
     _update_menuLCD
       _LCDchar
         _LCDsend2x4
           _WriteI2C
       _LCDcmd
         _LCDsend2x4
           _WriteI2C
       _LCDstr
         _LCDchar
           _LCDsend2x4
             _WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Disable
       _TMR2_StopTimer
         _TMR2_Stop
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _getch *
     _EUSART_Read
   _i2c1_driver_open *
   _memset *
   _toggleAlarms *
     _S1button
     _update_menuLCD
       _LCDchar
         _LCDsend2x4
           _WriteI2C
       _LCDcmd
         _LCDsend2x4
           _WriteI2C
       _LCDstr
         _LCDchar
           _LCDsend2x4
             _WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Disable
       _TMR2_StopTimer
         _TMR2_Stop
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _update_menuLCD *
     _LCDchar
       _LCDsend2x4
         _WriteI2C
     _LCDcmd
       _LCDsend2x4
         _WriteI2C
     _LCDstr
       _LCDchar
         _LCDsend2x4
           _WriteI2C
     _PWM6_LoadDutyValue
     _PWM_Output_D4_Disable
     _TMR2_StopTimer
       _TMR2_Stop
     _differenceBetweenTimePeriod
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _S1_ISR *
   _TMR1_ISR *
     Absolute function(Fake) *
     _Clock_ISR *
       i1_DATAEE_WriteByte
         i1___wmul (ARG)
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       _tsttc
         _ReadI2C
         i1_WriteI2C
       i1_DATAEE_WriteByte
         i1___wmul (ARG)
       i1___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1E      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      14       9       25.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     140      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     140      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Nov 30 21:16:58 2020

               ?_EUSART_SetRxInterruptHandler 0020                                             _t 0063  
            __end_of_TMR5_SetInterruptHandler 12C5                                    i1_WriteI2C 09B7  
                                          l30 0AAE                                            l33 0A76  
                                          l42 0A98                                            l35 0A7B  
                                          l47 0AAC                           ___wmul@multiplicand 0022  
                            i1___wmul@product 0074                             ??_TMR5_WriteTimer 0072  
                 __size_of_PWM6_LoadDutyValue 0019                             sendMessage@buffer 0025  
                              _update_menuLCD 03D5                                           l128 0926  
                                         l190 127D                                           l415 14B9  
                                         l255 12EB                                           l184 14F7  
                                         l531 13BC                                           l187 12B2  
                                         l445 12BB                                           l720 1321  
                                         l801 15B4                                           l803 15B8  
                                         l643 14D8                                           l804 15BF  
                                         l732 1254                                           l652 124A  
                                         l900 162F                                           l646 12CD  
                                         l807 1330                                           l735 1250  
                                         l912 125C                                           l833 1313  
                                         l729 1244                                           l905 168E  
                                         l649 1247                                           l690 1305  
                                         l906 1698                                           l738 1258  
                                         l827 12A9                                           l915 1275  
                                         l932 1297                                           l676 12C4  
                                         l909 16B3                                           l693 13D5  
                                         l929 12A0                                           l890 123E  
                                         l884 1685                                           _PR2 028D  
                             _timer1ReloadVal 00DE                       __size_of_PMD_Initialize 0008  
                             _TMR2_Initialize 1314                                           wreg 0009  
                                ?_EUSART_Read 0070                                   ?_LCDsend2x4 0022  
                          _setTimer5ReloadVal 12C5                               __end_of_LCDchar 12D7  
                                        l1300 12D6                                          l1170 0A4E  
                                        l1322 1241                                          l1306 143F  
                                        l1171 0A50                                          l1260 0C12  
                                        l1261 0C14                                          l1325 124D  
                                        l1174 0A54                                          l1158 0A13  
                                        l1414 0B04                                          l1430 07DD  
                                        l1422 0788                                          l1159 0A15  
                                        l1503 0863                                          l1319 1751  
                                        l2063 17FF                                          l1416 0AE8  
                                        l1352 04F7                                          l1513 0B75  
                                        l1521 1409                                          l2073 1786  
                                        l1361 04FD                                          l1506 1578  
                                        l1370 05AF                                          l1442 07FE  
                                        l2250 1516                                          l1291 0CC3  
                                        l1275 0C64                                          l1419 0B0D  
                                        l1355 04B3                                          l1284 0CA4  
                                        l1516 0B79                                          l1524 17C2  
                                        l2244 1377                                          l1509 0824  
                                        l1541 1659                                          l1349 047C  
                                        l1445 096F                                          l1294 0BEF  
                                        l1534 171C                                          l1358 04E2  
                                        l1287 0CBA                                          l1455 09B6  
                                        l1471 08A3                                          l1288 0CBC  
                                        l5000 1678                                          l1480 08E3  
                                        l1529 08A2                                          l1297 1285  
                                        l5010 1682                                          l5002 167A  
                                        l1386 05E9                                          l1458 0927  
                                        l1475 08C1                                          l5012 1683  
                                        l5004 167B                                          l1492 1424  
                                        l1468 096E                                          l1556 02C9  
                                        l1805 16E7                                          l5006 1680  
                                        l5030 1245                                          l1495 147B  
                                        l4400 0A57                                          l5008 1681  
                                        l5032 1248                                          l1752 0607  
                                        l5200 04DF                                          l6000 0262  
                                        l1489 159B                                          l4410 0A69  
                                        l4402 0A5A                                          l1498 1609  
                                        l1770 06BA                                          l5202 04E7  
                                        l6010 0273                                          l6002 0263  
                                        l4412 0A74                                          l4420 0A82  
                                        l5028 12C5                                          l4500 1367  
                                        l5220 0501                                          l5204 04E9  
                                        l5060 161A                                          l6100 03B7  
                                        l6020 0299                                          l6012 027B  
                                        l6004 0264                                          l4422 0A8D  
                                        l4414 0A80                                          l4430 1688  
                                        l4502 1368                                          l5230 0536  
                                        l5222 0507                                          l5206 04F0  
                                        l5150 03D5                                          l5070 162B  
                                        l5062 161F                                          l5054 160A  
                                        l6102 03BE                                          l6030 02BF  
                                        l6022 029C                                          l6014 0281  
                                        l6006 026F                                          l1791 1522  
                                        l4424 0A9D                                          l4408 0A5F  
                                        l5080 0A19                                          l5400 14EB  
                                        l5048 1242                                          l4440 16A7  
                                        l4432 1688                                          l4520 152C  
                                        l4512 1517                                          l4504 136E  
                                        l5240 056E                                          l5232 053C  
                                        l5224 051A                                          l5208 04F3  
                                        l5160 0423                                          l5152 03DC  
                                        l5072 162D                                          l5064 1625  
                                        l5056 160A                                          l6104 03C2  
                                        l6040 02DD                                          l6024 02A7  
                                        l6032 02C2                                          l6016 0287  
                                        l6008 0272                                          l1793 1536  
                                        l5082 0A28                                          l4450 0BF7  
                                        l5402 14EE                                          l4442 16AD  
                                        l4434 1693                                          l4530 17CC  
                                        l4522 1532                                          l4514 151A  
                                        l4506 1374                                          l5250 058C  
                                        l5242 0572                                          l5234 054F  
                                        l5226 052A                                          l5218 04FD  
                                        l5170 0446                                          l5162 0429  
                                        l5154 03FA                                          l5066 1626  
                                        l5058 1610                                          l5410 12E5  
                                        l6106 03CF                                          l6050 0326  
                                        l6026 02AC                                          l6018 028D  
                                        l1787 0787                                          l5084 0A2C  
                                        l5076 0A04                                          l4460 0C3A  
                                        l4452 0C03                                          l4604 12B3  
                                        l4620 12BC                                          l5404 14F1  
                                        l4444 16AE                                          l4436 1699  
                                        l5340 0AB6                                          l4700 1735  
                                        l4540 17EB                                          l4532 17CF  
                                        l4516 151E                                          l4508 1376  
                                        l5260 05AA                                          l5252 0592  
                                        l5244 057A                                          l5236 055F  
                                        l5228 0532                                          l5180 046D  
                                        l5172 044F                                          l5164 0432  
                                        l5156 0417                                          l5068 1628  
                                        l5412 12E6                                          l6060 0348  
                                        l6052 0333                                          l6028 02B3  
                                        l6036 02C9                                          l5086 0A3B  
                                        l5078 0A04                                          l4470 0C6B  
                                        l4462 0C40                                          l4454 0C18  
                                        l4630 1298                                          l5406 14F4  
                                        l4438 16A3                                          l4446 16B1  
                                        l5342 0ABB                                          l5350 0ACF  
                                        l4622 13BD                                          l4702 173B  
                                        l4542 17EF                                          l4534 17D4  
                                        l4526 17C3                                          l4518 1527  
                                        l4710 05F1                                          l5270 05C7  
                                        l5254 0597                                          l5246 0581  
                                        l5262 05B0                                          l5238 0567  
                                        l5190 0496                                          l5182 0474  
                                        l5174 0456                                          l5166 0438  
                                        l5158 041B                                          l5414 12E8  
                                        l6070 035E                                          l6062 034B  
                                        l6054 033F                                          l6046 02DF  
                                        l6038 02D1                                          l5088 0A3F  
                                        l4480 0CA4                                          l4472 0C7A  
                                        l4464 0C4F                                          l4456 0C27  
                                        l4448 0BF2                                          l5600 0BC7  
                                        l5440 1251                                          l5360 0B00  
                                        l5352 0AD6                                          l5344 0AC1  
                                        l4624 1255                                          l4704 1741  
                                        l4544 17F0                                          l4536 17D8  
                                        l4528 17C6                                          l4560 1765  
                                        l4552 1752                                          l4800 072A  
                                        l4712 05F7                                          l5280 05E5  
                                        l5272 05CE                                          l5264 05B7  
                                        l5256 059E                                          l5248 0587  
                                        l5192 049B                                          l5184 0484  
                                        l5176 045E                                          l5168 0440  
                                        l5408 12E0                                          l6072 036E  
                                        l6080 0385                                          l6064 034D  
                                        l6056 033F                                          l6048 02FD  
                             __end_of_LCDinit 0BF0                                          l5450 15AD  
                                        l5442 159C                                          l4482 0CAB  
                                        l4474 0C80                                          l4466 0C55  
                                        l4458 0C2B                                          l5610 0BE5  
                                        l5602 0BCB                                          l4626 12A1  
                                        l5370 1460                                          l5362 140C  
                                        l5354 0AE3                                          l5346 0AC6  
                                        l5338 0AAF                                          l4706 124B  
                                        l4546 17F5                                          l4538 17DC  
                                        l4562 1769                                          l4554 1759  
                                        l4570 1782                                          l4810 0766  
                                        l4802 072E                                          l4730 0635  
                                        l4722 060C                                          l4714 05FE  
                                        l5274 05D4                                          l5266 05BD  
                                        l5258 05A3                                          l5194 04A1  
                                        l5186 048A                                          l5178 0464  
                                        l6090 039D                                          l6082 038C  
                                        l6074 0374                                          l6066 0353  
                                        l6058 0342                                          l5460 15B9  
                                        l5452 15AE                                          l5444 15A4  
                                        l4484 0CC0                                          l4476 0C8F  
                                        l4468 0C64                                          l5604 0BD3  
                                        l5612 123F                                          l4628 128F  
                                        l4900 091A                                          l4820 1579  
                                        l5372 1470                                          l5364 1414  
                                        l5380 16C9                                          l5356 0AF6  
                                        l5348 0ACB                                          l4548 17FB  
                                        l4564 1773                                          l4556 175C  
                                        l4804 0733                                          l4740 066C  
                                        l4732 0644                                          l4724 0615  
                                        l4716 0603                                          l4812 076F  
                                        l4708 05EC                                          l5276 05D9  
                                        l5268 05C2                                          l5196 04BE  
                                        l5188 0490                                          l5620 0793  
                                        l5700 0930                                          l6092 03A1  
                                        l6084 0391                                          l6076 0377  
                                        l6068 0358                                          l5470 132C  
                                        l5462 1322                                          l5454 15AF  
                                        l5446 15A8                                          l4478 0C95  
                                        l5606 0BD9                                          l4902 091D  
                                        l4910 1276                                          l5390 14DC  
                                        l4822 157D                                          l5366 1415  
                                        l5382 16D0                                          l5374 16B4  
                                        l5358 0AF9                                          l4494 124E  
                                        l4566 1777                                          l4558 1761  
                                        l4806 075B                                          l4750 0684  
                                        l4742 0673                                          l4814 0783  
                                        l4734 0648                                          l4726 0621  
                                        l4718 0608                                          l5278 05DE  
                                        l5198 04D7                                          l5630 07AE  
                                        l5622 0797                                          l5614 0788  
                                        l5710 0945                                          l5702 0932  
                                        l6094 03A8                                          l6086 0394  
                                        l6078 0381                                          l5472 132D  
                                        l5464 1326                                          l5456 15B1  
                                        l5448 15AC                                          l5608 0BDF  
                                        l4912 12AA                                          l4904 091F  
                                        l4920 12F9                                          l5392 14DF  
                                        l4496 1271                                          l4824 1588  
                                        l5368 1419                                          l5384 16DF  
                                        l5376 16BD                                          l5800 13F0  
                                        l4568 177C                                          l4808 0762  
                                        l4760 06A0                                          l4744 0677  
                                        l4728 0624                                          l5640 07C4  
                                        l5632 07B0                                          l5624 079D  
                                        l5616 078E                                          l5720 0960  
                                        l5712 094B                                          l5704 0936  
                                        l6096 03AC                                          l6088 0397  
                                        l5474 132E                                          l5466 132A  
                                        l5458 15B3                                          l4914 12AD  
                                        l4906 0921                                          l4922 1300  
                                        l4930 14BA                                          l5394 14E2  
                                        l4826 158D                                          l5378 16C1  
                                        l5802 13FB                                          l5810 17A8  
                                        l4498 12D0                                          l4690 142A  
                                        l4770 06CE                                          l4762 06AA  
                                        l4746 067B                                          l4738 0654  
                                        l5642 07C9                                          l5634 07B5  
                                        l5650 07DD                                          l5626 07A2  
                                        l5618 0791                                          l5722 0963  
                                        l5714 094C                                          l5706 093C  
                                        l5482 1259                                          l5730 08A9  
                                        l6098 03B3                                          l5468 132B  
                                        l5580 0B83                                          l4924 13A6  
                                        l4916 12AE                                          l4908 0923  
                                        l4940 14CA                                          l4932 14BD  
                                        l5396 14E5                                          l5388 14D9  
                                        l5804 1400                                          l5812 17B3  
                                        l5820 087A                                          l4684 1280  
                                        l4692 171D                                          l4780 06E6  
                                        l4772 06D1                                          l4764 06B0  
                                        l4756 0686                                          l4748 067F  
                                        l5660 07F8                                          l5652 07E6  
                                        l5644 07D0                                          l5636 07BC  
                                        l5628 07A8                                          l5724 0968  
                                        l5716 0955                                          l5708 093F  
                                        l5740 08BD                                          l5732 08AC  
                                        l5478 123C                                          l5590 0BA3  
                                        l5582 0B87                                          l4926 13B8  
                                        l4918 12B1                                          l4870 08F0  
                                        l4862 08E4                                          l4950 1317  
                                        l4942 14CC                                          l4934 14BF  
                                        l5398 14E8                                          l5806 1405  
                                        l5814 17B7                                          l5822 0880  
                                        l5830 089E                                          l4686 1425  
                                        l4694 171E                                          l4790 0708  
                                        l4782 06EC                                          l4774 06D5  
                                        l4766 06B6                                          l5662 07FB  
                                        l5646 07D6                                          l5638 07C2  
                                        l5654 07E9                                          l5726 096B  
                                        l5718 0958                                          l5670 097A  
                                        l5750 08DD                                          l5742 08CA  
                                        l5734 08AE                                          l5592 0BAB  
                                        l5584 0B8F                                          l4928 13BA  
                                        l4880 08FB                                          l4872 08F2  
                                        l4864 08EA                                          l4960 149B  
                                        l4952 1318                                          l4944 14CD  
                                        l4936 14C1                                          l5760 0835  
                                        l5808 1787                                          l5824 0886  
                                        l5816 0864                                          l5840 1706  
                                        l5832 16E8                                          l4688 1426  
                                        l4696 1724                                          l4792 070F  
                                        l4784 06F3                                          l4776 06DB  
                                        l4768 06C5                                          l5656 07F0  
                                        l5648 07D8                                          l5680 0993  
                                        l5672 097E                                          l5664 096F  
                                        l5752 08E0                                          l5736 08B2  
                                        l5744 08CD                                          l5728 08A3  
                                        l5920 00AA                                          l5594 0BAF  
                                        l5586 0B93                                          l5578 0B7A  
                                        l4890 090F                                          l4882 08FD  
                                        l4874 08F4                                          l4866 08EC  
                                        l4970 14AB                                          l4962 149E  
                                        l4954 131B                                          l4946 14D5  
                                        l4938 14C3                                          l5770 085A  
                                        l5762 083B                                          l5754 15E5  
                                        l5826 088D                                          l5818 0874  
                                        l5842 1713                                          l5834 16F3  
                                        l5850 163E                                          l4698 172B  
                                        l4794 0713                                          l4786 06F7  
                                        l4778 06E2                                          l5658 07F3  
                                        l5690 09AB                                          l5682 0994  
                                        l5674 0984                                          l5666 0975  
                                        l5746 08D5                                          l5738 08B8  
                                        l5930 00D7                                          l5922 00C5  
                                        l5596 0BB7                                          l5588 0B9F  
                                        l4980 1309                                          l4892 0911  
                                        l4884 0909                                          l4876 08F7  
                                        l4868 08EE                                          l4972 14AD  
                                        l4964 14A0                                          l4956 131C  
                                        l4948 1314                                          l5764 0841  
                                        l5772 085F                                          l5756 15FE  
                                        l5780 0819                                          l5828 0899  
                                        l5836 16F9                                          l5844 1718  
                                        l5852 1643                                          l4796 071D  
                                        l4788 0702                                          l5692 09B0  
                                        l5684 099D                                          l5676 0987  
                                        l5668 0978                                          l5860 14FA  
                                        l5748 08D8                                          l5940 00F9  
                                        l5932 00D9                                          l5924 00C7  
                                        l5916 009D                                          l5598 0BBB  
                                        l4990 166E                                          l4982 1311  
                                        l4894 0913                                          l4886 090B  
                                        l4878 08F9                                          l4974 14AE  
                                        l4966 14A2                                          l4958 131E  
                                        l5766 0847                                          l5758 0825  
                                        l5774 1558                                          l5790 0B2F  
                                        l5782 0B0E                                          l5838 16FF  
                                        l5854 164C                                          l5846 1630  
                                        l4798 0723                                          l5694 09B3  
                                        l5678 098D                                          l5686 09A0  
                                        l5862 14FF                                          l5950 0122  
                                        l5942 00FD                                          l5926 00C9  
                                        l5918 00A7                                          l4992 1671  
                                        l4984 165A                                          l4896 0916  
                                        l4888 090D                                          l4976 14B6  
                                        l4968 14A4                                          l5768 084E  
                                        l5776 156D                                          l5792 0B35  
                                        l5784 0B18                                          l5856 1650  
                                        l5848 163A                                          l5696 0927  
                                        l5688 09A8                                          l5864 1506  
                                        l5960 01E7                                          l5952 0127  
                                        l5944 010C                                          l5928 00CA  
                                        l4994 1673                                          l4986 165C  
                                        l4978 1306                                          l4898 0918  
                                        l5778 0800                                          l5794 0B66  
                                        l5786 0B1C                                          l5858 1655  
                                        l5698 092D                                          l5866 150A  
                                        l5970 0222                                          l5962 01F3  
                                        l5954 01C0                                          l5946 011A  
                                        l5938 00DD                                          l4996 1675  
                                        l4988 1664                                          l5796 0B6D  
                                        l5788 0B25                                          l5980 0251  
                                        l5972 022E                                          l5964 01FE  
                                        l5956 01CD                                          l5948 011C  
                                        l4998 1677                                          l5798 0B71  
                                        l5990 0259                                          l5982 0252  
                                        l5974 0239                                          l5966 0209  
                                        l5958 01DA                                          l5992 025B  
                                        l5984 0253                                          l5976 0244  
                                        l5968 0215                                          _ALAF 007D  
                                        l5994 025C                                          l5986 0254  
                                        l5978 0250                                          l5996 025E  
                                        l5988 0256                                          l5998 025F  
                             __end_of_LCDsend 0A55                                          STR_1 181E  
                                        STR_2 181E                                          STR_3 1837  
                                        STR_4 1837                                          STR_5 183E  
                                        STR_6 183E                                          STR_7 1843  
                                        _LATA 0016                                          _LATB 0017  
                             __end_of_INT_ISR 1263                                          _LATC 0018  
                                        u3200 0A98                                          u4000 0621  
                                        _LATD 0019                                          u3201 0A97  
                                        u4001 0620                                          _LATE 001A  
                                        u3210 0A9D                                          u4010 0654  
                                        u3211 0A9C                                          u4011 0653  
                                        u3220 0AAC                                          u3140 0A5E  
                                        u3300 0C3A                                          u4100 06EC  
                                        u4020 067B                                          u3221 0AAB  
                                        u3141 0A5D                                          u3301 0C39  
                                        u4101 06EB                                          u4021 067A  
                                        u3150 0A69                                          u3310 0C4F  
                                        u3230 168E                                          u4110 0701  
                                        u4030 069F                                          u3151 0A68  
                                        u3311 0C4E                                          u3231 168D  
                                        u4111 0700                                          u4031 069E  
                                        u3160 0A74                                          u3320 0C64  
                                        u3240 1693                                          u4120 0708  
                                        u4040 06AA                                          u3161 0A73  
                                        u3321 0C63                                          u3241 1692  
                                        u4121 0707                                          u4041 06A9  
                                        u3170 0A7B                                          u3330 0C7A  
                                        u3250 16AD                                          u3410 136E  
                                        u4130 071D                                          u4050 06B0  
                                        _T2PR 028D                                          u3171 0A7A  
                                        u3331 0C79                                          u3251 16AC  
                                        u3411 136D                                          u4131 071C  
                                        u4051 06AF                                          u4035 069B  
                                        u3180 0A80                                          u4300 0A28  
                                        u3340 0C8F                                          u3420 1374  
                                        u4140 0723                                          u4060 06B6  
                                        u3181 0A7F                                          u4301 0A27  
                                        u3341 0C8E                                          u3421 1373  
                                        u4141 0722                                          u4061 06B5  
                                        u3190 0A8D                                          u4310 0A3B  
                                        u3350 0CA4                                          u3270 0C12  
                                        u3510 17EB                                          u3430 151E  
                                        u4150 076F                                          u4070 06C5  
                                        u3191 0A8C                                          u4311 0A3A  
                                        u3351 0CA3                                          u3271 0C11  
                                        u3511 17EA                                          u3431 151D  
                                        u4151 076E                                          u4071 06C4  
                                        u4320 0A4E                                          u3360 0CBA  
                                        u3280 0C18                                          u4160 0783  
                                        u4080 06D5                                          u6000 0287  
                                        u4321 0A4D                                          u3361 0CB9  
                                        u3281 0C17                                          u3265 0BFA  
                                        u3505 17DD                                          u4161 0782  
                                        u4081 06D4                                          u6001 0286  
                                        u4330 0A54                                          u3370 0CC0  
                                        u3290 0C27                                          u4170 159B  
                                        u3530 17FB                                          u4090 06DB  
                                        u6010 028D                                          u4331 0A53  
                                        u3371 0CBF                                          u3291 0C26  
                                        u4171 159A                                          u3531 17FA  
                                        u3515 17E7                                          u4091 06DA  
                                        u4075 06C1                                          u6011 028C  
                                        u3540 1759                                          u3460 1532  
                                        u4500 0474                                          u5300 078E  
                                        u4260 1610                                          u6100 0358  
                                        u6020 02B3                                          u3525 17F1  
                                        u3541 1758                                          u3461 1531  
                                        u3445 1523                                          u4501 0473  
                                        u5301 078D                                          u4261 160F  
                                        u6101 0357                                          u6021 02B2  
                                        u3470 17CC                                          u4510 048A  
                                        u5310 0797                                          u4270 1625  
                                        u6110 036E                                          u6030 02C8  
                                        u4175 1597                                          u3471 17CB  
                                        u3455 1528                                          u4511 0489  
                                        u5311 0796                                          u4271 1624  
                                        u6111 036D                                          u6031 02C7  
                                        u4280 0A13                                          u3560 1769  
                                        u4600 053C                                          u4520 0490  
                                        u4440 03DC                                          u5400 07F8  
                                        u5320 079D                                          u6120 038C  
                                        u6040 02D1                                          u4281 0A12  
                                        u3705 13CE                                          u3561 1768  
                                        u4601 053B                                          u4521 048F  
                                        u4441 03DB                                          u5401 07F7  
                                        u5321 079C                                          u6121 038B  
                                        u6041 02D0                                          u4290 0A19  
                                        u3490 17DC                                          u3570 1773  
                                        u4610 056E                                          u4530 0496  
                                        u4450 0429                                          u5330 07A8  
                                        u5410 0975                                          u6130 0391  
                                        u6050 02DD                                          u4291 0A18  
                                        u3491 17DB                                          u3571 1772  
                                        u3555 175D                                          u4611 056D  
                                        u4531 0495                                          u4451 0428  
                                        u5331 07A7                                          u5411 0974  
                                        u6131 0390                                          u6115 036A  
                                        u6051 02DC                                          u4700 05D4  
                                        u4620 0581                                          u4540 049B  
                                        u4460 0438                                          u5340 07AE  
                                        u5500 094B                                          u5420 097E  
                                        u6140 039D                                          u6060 02FD  
                                        _PMD0 0796                                          u3485 17D0  
                                        u4701 05D3                                          u4621 0580  
                                        u4541 049A                                          u4461 0437  
                                        u5341 07AD                                          u5501 094A  
                                        u5421 097D                                          u6141 039C  
                                        u6061 02FC                                          _PMD1 0797  
                                        i1l22 13E9                                          i1l30 0A01  
                                        u3590 1782                                          u4710 05E5  
                                        u4630 0587                                          u4550 04A1  
                                        u4470 0446                                          u5350 07BC  
                                        u5510 0960                                          u5430 0984  
                                        u6150 03A8                                          u6070 0333  
                                        _PMD2 0798                                          i1l23 13EA  
                                        u3591 1781                                          u3575 176F  
                                        u4711 05E4                                          u4631 0586  
                                        u4551 04A0                                          u4471 0445  
                                        u5351 07BB                                          u5511 095F  
                                        u5431 0983                                          u6207 08C5  
                                        u6151 03A7                                          u6071 0332  
                                        _PMD3 0799                                          u5600 0847  
                                        u4640 0592                                          u4560 04DF  
                                        u4480 0456                                          u5360 07C2  
                                        u5520 0968                                          u5440 0993  
                                        u6160 03B3                                          u6080 0348  
                                        _PMD4 079A                                          i1l33 09D3  
                                        u5601 0846                                          u3585 1778  
                                        u4641 0591                                          u4561 04DE  
                                        u4481 0455                                          u5361 07C1  
                                        u5521 0967                                          u6217 0998  
                                        u5441 0992                                          u6161 03B2  
                                        u6081 0347                                          _PMD5 079B  
                                        i1l26 13EF                                          i1l42 09F1  
                                        u5610 084E                                          u4650 059E  
                                        u4570 04E7                                          u4490 0464  
                                        u5370 07D0                                          u5450 09A8  
                                        u5530 08A9                                          u6170 03BE  
                                        u6090 0353                                          i1l35 09D8  
                                        u6307 0BB4                                          u5611 084D  
                                        u4651 059D                                          u4571 04E6  
                                        u4491 0463                                          u5371 07CF  
                                        u6227 0950                                          u5451 09A7  
                                        u5531 08A8                                          u6171 03BD  
                                        u6091 0352                                          u5620 0B18  
                                        u5700 0880                                          u4900 0B00  
                                        u4660 05AA                                          u4580 04FC  
                                        u5380 07D6                                          u5460 09B0  
                                        u5540 08B2                                          u6180 03CF  
                                        u6317 0BBC                                          u5621 0B17  
                                        u5701 087F                                          u4901 0AFF  
                                        u4661 05A9                                          u4581 04FB  
                                        u6237 07E1                                          u5381 07D5  
                                        u5461 09AF                                          u5541 08B1  
                                        u6181 03CE                                          u4910 16C1  
                                        u5630 0B25                                          u5710 0886  
                                        u4830 0AB6                                          u4670 05B7  
                                        u4590 0507                                          u5390 07F0  
                                        u5470 092D                                          u5550 08B8  
                                        i1l47 0A00                                          u6327 0BC8  
                                        u4911 16C0                                          u5631 0B24  
                                        u5711 0885                                          u6247 0B08  
                                        u4831 0AB5                                          u4671 05B6  
                                        u4591 0506                                          u5391 07EF  
                                        u5471 092C                                          u5551 08B7  
                                        u5640 0B2F                                          u5720 088D  
                                        u4840 0ABB                                          u3960 143F  
                                        u4680 05BD                                          u5480 0936  
                                        u5560 08D5                                          u6337 0BD0  
                                        u6257 0B7E                                          u5641 0B2E  
                                        u5721 088C                                          u4841 0ABA  
                                        u3961 143E                                          u4681 05BC  
                                        u5481 0935                                          u5561 08D4  
                                        u6185 03CB                                          u5650 0B5C  
                                        u5730 16F9                                          u4850 0AC1  
                                        u3970 172B                                          u4690 05CE  
                                        u5490 093C                                          u5570 08DD  
                                        u6347 0BEC                                          u6267 0B8C  
                                        u5731 16F8                                          u4851 0AC0  
                                        u3971 172A                                          u4691 05CD  
                                        u5491 093B                                          u5571 08DC  
                                        u4940 16DF                                          u5580 083B  
                                        u5660 13FB                                          u5740 16FF  
                                        u4860 0AC6                                          u3980 1741  
                                        u6357 0CC1                                          u6277 0B94  
                                        u4941 16DE                                          u4925 16CA  
                                        u5581 083A                                          u5661 13FA  
                                        u5741 16FE                                          u4861 0AC5  
                                        u3981 1740                                          u6197 0382  
                                        _TALA 00EC                                          u5590 0841  
                                        u5670 17AF                                          u5750 1706  
                                        u4870 0AD6                                          u3990 05F7  
                                        u4950 12E5                                          u6287 0BA0  
                                        u4935 16D1                                          u5591 0840  
                                        u5655 0B58                                          u5671 17AD  
                                        u5751 1705                                          u4871 0AD5  
                                        u3991 05F6                                          u4951 12E4  
                                        u5680 17B0                                          u5760 163A  
                                        u4880 0AE3                                          u6297 0BA8  
                                        u5761 1639                                          u4881 0AE2  
                                        u5690 087A                                          u5770 164C  
                                        u4890 0AF6                                          u5930 00D7  
                                        u5691 0879                                          u5771 164B  
                                        u4891 0AF5                                          u5931 00D6  
                                        u4980 15B8                                          u5780 1516  
                                        u5940 010C                                          u4981 15B7  
                                        u4885 0ADF                                          u5781 1515  
                                        u5941 010B                                          u5950 011A  
                                        u4895 0AF2                                          u5951 0119  
                                        u5960 0122                                          u5961 0121  
                                        u5945 0108                                          _NREG 00D2  
                                        u5970 0127                                          u5971 0126  
                                        u5980 026C                                          u5990 0281  
                                        u5991 0280                                          _PMON 00ED  
                                        _TMR2 028C                                          _WPUA 0F39  
                                        _WPUB 0F44                                          _WPUC 0F4F  
                                        _WPUD 0F5A                                          _WPUE 0F65  
                                 main@notInit 00B5                                          _main 009D  
                                        _temp 006C                                          fsr0h 0005  
                                        fsr1h 0007                                          indf0 0000  
                                        fsr0l 0004                                          indf1 0001  
                                        fsr1l 0006                                          btemp 007E  
                         ?_setTimer5ReloadVal 0020           __end_of_INT_DefaultInterruptHandler 123C  
                 _INT_DefaultInterruptHandler 123B                                          start 005E  
                             _timer5ReloadVal 00DA                                cmd_dtl@tempAux 0032  
             __end_of_INT_SetInterruptHandler 12AA                    ??_TMR1_SetInterruptHandler 0022  
                             __end_of_ReadI2C 13F0                     __size_of_DATAEE_WriteByte 0024  
                      __end_of_update_menuLCD 05EA                                 ?_EUSART_Write 0070  
              __size_of_OSCILLATOR_Initialize 0009                 __end_of_OSCILLATOR_Initialize 12B3  
                                       _ADACQ 009D                                         _ADCAP 009B  
                                       _ADACT 0099                      __end_of_i2c1_driver_open 12EC  
                                       ?_main 0070                                         _ADCLK 0098  
                                       _ADCNT 010C                                         _ADPCH 009E  
                                       _ADREF 009A                                         _ADPRE 009C  
                                       _ADRPT 010D                          ??_setTimer5ReloadVal 0022  
                                       _T1CLK 0211                                         _T1CON 020E  
                                       _T2CON 028E                                         _T5CLK 021D  
                                       _T2HLT 028F                                         _T5CON 021A  
                             __end_of___lwdiv 1800                                         _T2TMR 028C  
                                       _T2RST 0291                               __end_of___lwmod 1787  
                                       i1l442 138E                                         i1l371 0026  
                                       i1l429 1341                                         i1l373 0035  
                                       i1l543 135B                                         i1l375 0041  
                                       i1l448 0002                                         i1l384 005C  
                                       i1l368 0013                                         i1l801 1453  
                                       i1l377 004D                                         i1l546 1364  
                                       i1l378 005C                                         i1l803 1457  
                                       i1l379 0056                                         i1l820 1262  
                                       i1l804 145D                                         i1l660 1352  
                                       i1l830 123B                                         i1l824 12F8  
                                       i1l921 15E4                                         i1l673 13A5  
                                       i1l926 1557                                         i1l918 15E2  
                                       i1l679 0003                                         _OSCEN 0891  
                                       _TMR1H 020D                                         _TMR1L 020C  
                                       _TMR5H 0219                                         _TMR5L 0218  
                                       _TRISA 0011                                         _TRISB 0012  
                                       _TRISC 0013                                         _TRISD 0014  
                                       _TRISE 0015                                         _WPUC3 7A7B  
                                       _WPUC4 7A7C                                         _RXPPS 0ECB  
                             __end_of_cmd_dac 08A3                               __end_of_editLum 096F  
                             __end_of_cmd_dtl 171D                               _PWM6_Initialize 12F9  
                             __end_of_cmd_mta 140A                               __end_of_cmd_mmp 0B7A  
                         ___lmul@multiplicand 0024                               __end_of_cmd_rtl 1579  
                            __end_of_TMR1_ISR 138F                              __end_of_TMR5_ISR 13A6  
                            __end_of_S1button 0B0E                               _DATAEE_ReadByte 1322  
                                       _getch 1259                               __end_of_dpowers 1837  
                          __size_of_TMR2_Stop 0003                                   ?_TMR2_Start 0070  
                             __end_of_isdigit 1378                                         _putch 126F  
                                       main@c 00BB                                         main@i 00B7  
                                       main@n 00BC                                         _tsttc 0DC8  
                     __end_of_TMR1_Initialize 14BA                                         pclath 000A  
                            __end_ofi1___wmul 149B                                         status 0003  
                         i1___wmul@multiplier 0070                                         wtemp0 007E  
                             __end_of_sprintf 0788                        ??_PWM_Output_D4_Enable 0020  
                             _TMR2_StartTimer 1251                               _TMR1_WriteTimer 1331  
                             _TMR5_Initialize 14BA                               __initialization 0060  
                                __end_of_main 03D5                                   ?i1_WriteI2C 0070  
                         __size_of_LCDsend2x4 00D4                                ??_EUSART_Write 0020  
                             ?_update_menuLCD 0070                       __end_of_TMR2_Initialize 1322  
                 ?_INTERRUPT_InterruptManager 0070                ??_EUSART_SetRxInterruptHandler 0022  
                                      ??_main 005C                               update_menuLCD@l 0055  
                                ?_sendMessage 0023                      _TMR5_SetInterruptHandler 12BC  
                   __size_of_sendERRORMessage 001E                            __size_of_Clock_ISR 0104  
            differenceBetweenTimePeriod@start 0020                                     ??_LCDchar 0028  
                                   ??_LCDinit 0028                                     ??_LCDsend 0022  
                                   ??_INT_ISR 0070                    __end_ofi1_DATAEE_WriteByte 145E  
                                      _ADACCH 0091                                        _ADACCL 0090  
                                      ?_getch 0070                                        _ADCON0 0093  
                                      _ADCON1 0094                                        _ADCON2 0095  
                                      _ADCON3 0096                                        _ADERRH 0117  
                                      _ADERRL 0116                                        _ADLTHH 010F  
                                      _ADLTHL 010E                                        _ADRESH 008D  
                                      _ADRESL 008C                                        _ADSTAT 0097  
                                      _ADUTHH 0111                                        _ADUTHL 0110  
                            __end_of_WriteI2C 0AAF                                        _ANSELA 0F38  
                                      ?_putch 0070                                        _ANSELB 0F43  
                                      _ANSELC 0F4E                                        _ANSELD 0F59  
                                      _ANSELE 0F64                    __end_of_EUSART_is_rx_ready 123F  
                                      _T1GATE 0210                                        _T1GCON 020F  
                                      ?_tsttc 0070                                        _T5GATE 021C  
                                      _T5GCON 021B                                        _RC1REG 0119  
                                      _RC1STA 011D                                        _RA6PPS 0F16  
                                      _RC3PPS 0F23                                        i1l1120 0E5C  
                                      i1l1112 0E47                                        i1l1113 0E48  
                                      i1l1106 0E36                       TMR1_WriteTimer@timerVal 0070  
                                      i1l1131 0E8B                                        i1l1115 0E4C  
                                      i1l1107 0E38                                        _RC4PPS 0F24  
                                      i1l1132 0E8C                                        i1l1150 0ECF  
                                      i1l1143 0EBD                                        i1l1119 0E5B  
                                      i1l1144 0EBF                                        i1l1153 0ED4  
                                      i1l1082 0DD4                                        i1l1083 0DD5  
                                      i1l1149 0ECE                                        i1l1094 0E04  
                                      i1l1095 0E05                                        i1l1079 0DC8  
                                      i1l1408 0FFF                                        i1l1337 0DC7  
                                      _ODCONA 0F3A                                        _ODCONB 0F45  
                                      _ODCONC 0F50                                        _RC6PPS 0F26  
                                      _ODCOND 0F5B                                        _ODCONE 0F66  
                                      i1l1483 128E                                        i1l5100 0CEC  
                                      i1l5020 1339                                        i1l5110 0D28  
                                      i1l5102 0CF8                                        i1l5022 133B  
                                      i1l5014 1331                                        i1l5120 0D63  
                                      i1l5112 0D34                                        i1l5104 0D04  
                                      i1l5016 1336                                        i1l5024 133D  
                                      i1l5040 134A                                        i1l5050 12EC  
                                      i1l5130 0D8F                                        i1l5114 0D3F  
                                      i1l5106 0D10                                        i1l5122 0D7D  
                                      i1l5026 133F                                        i1l5018 1337  
                                      i1l5042 134C                                        i1l5034 1342  
                                      i1l5052 12F3                                        i1l5140 0DA8  
                                      i1l5132 0D90                                        i1l5124 0D84  
                                      i1l5116 0D4B                                        i1l5108 0D1C  
                                      i1l5036 1347                                        i1l5044 134E  
                                      i1l5300 0FB9                                        i1l5142 0DAE  
                                      i1l5134 0D96                                        i1l5126 0D88  
                                      i1l5118 0D57                                        i1l5046 1350  
                                      i1l5038 1348                                        i1l5310 0FD5  
                                      i1l5302 0FBF                                        i1l1791 1486  
                                      i1l5144 0DB3                                        i1l5136 0D9C  
                                      i1l5128 0D89                                        i1l5320 0FE0  
                                      i1l5312 0FD7                                        i1l5304 0FC6  
                                      i1l1793 149A                                        i1l5138 0DA2  
                                      i1l5146 0DBA                                        i1l5090 0CC4  
                                      i1l4610 1358                                        i1l5330 0FF7  
                                      i1l5322 0FE7                                        i1l5314 0FD9  
                                      i1l5306 0FCC                                        i1l5500 153C  
                                      i1l5420 125D                                        i1l5148 0DC5  
                                      i1l5092 0CCF                                        i1l4612 1359  
                                      i1l5332 0FF9                                        i1l5324 0FEC  
                                      i1l5308 0FD1                                        i1l5316 0FDC  
                                      i1l5510 1553                                        i1l5502 153E  
                                      i1l5422 125F                                        i1l5094 0CD3  
                                      i1l4614 135A                                        i1l4606 1354  
                                      i1l5326 0FF1                                        i1l5334 0FFC  
                                      i1l5318 0FDE                                        i1l5430 13A0  
                                      i1l5504 1548                                        i1l5096 0CD4  
                                      i1l5432 1378                                        i1l4616 1360  
                                      i1l4608 1357                                        i1l4640 0DF4  
                                      i1l4632 0DC8                                        i1l5336 0FFD  
                                      i1l5328 0FF5                                        i1l5424 138F  
                                      i1l5506 154C                                        i1l5098 0CE0  
                                      i1l5434 137A                                        i1l4490 13EE  
                                      i1l4650 0E24                                        i1l4642 0DF8  
                                      i1l4634 0DD9                                        i1l5290 0F9B  
                                      i1l5282 0ED5                                        i1l5426 1391  
                                      i1l5508 1552                                        i1l5436 1382  
                                      i1l4660 0E6B                                        i1l4652 0E2A  
                                      i1l4644 0E09                                        i1l4636 0DE4  
                                      i1l5292 0FA0                                        i1l5284 0EEE  
                                      i1l5428 1399                                        i1l4830 1447  
                                      i1l5438 1389                                        i1l4486 13D6  
                                      i1l4582 09C0                                        i1l4574 09B8  
                                      i1l4670 0E9B                                        i1l4662 0E6F  
                                      i1l4654 0E3C                                        i1l4646 0E14  
                                      i1l4638 0DE8                                        i1l5294 0FA6  
                                      i1l5286 0EFC                                        i1l4840 144E  
                                      i1l4832 1449                                        i1l4488 13E0  
                                      i1l4584 09C9                                        i1l4576 09BB  
                                      i1l4680 0ED3                                        i1l4672 0E9F  
                                      i1l4664 0E7B                                        i1l4656 0E50  
                                      i1l4648 0E18                                        i1l5296 0FA7  
                                      i1l5288 0F0B                                        i1l5490 15D0  
                                      i1l4818 1286                                        i1l4842 1450  
                                      i1l4834 144B                                        i1l4586 09D2  
                                      i1l4594 09DF                                        i1l4674 0EAB  
                                      i1l4666 0E7F                                        i1l4658 0E60  
                                      i1l4850 147E                                        i1l5298 0FB0  
                                      i1l5492 15D5                                        i1l4844 1452  
                                      i1l4836 144C                                        i1l4828 1440  
                                      i1l4596 09E8                                        i1l4588 09DD  
                                      i1l4676 0EB1                                        i1l4668 0E90  
                                      i1l4852 1482                                        i1l5900 005A  
                                      i1l5494 15DB                                        i1l5486 15C0  
                                      i1l4846 1458                                        i1l4838 144D  
                                      i1l4598 09F5                                        i1l4678 0EC3  
                                      i1l4854 148B                                        i1l5496 15DC  
                                      i1l5488 15C7                                        i1l4856 1490  
                                      i1l4848 147C                                        i1l5498 1537  
                                      i1l4858 1496                                        _S1_ISR 1286  
                                      i1l5880 001B                                        i1l5872 0006  
                                      i1l5890 003D                                        i1l5882 001F  
                                      i1l5874 000B                                        i1l5892 0045  
                                      i1l5884 002A                                        i1l5876 000F  
                                      i1l5894 0049                                        i1l5886 002E  
                                      i1l5878 0017                                        i1l5896 0051  
                                      i1l5888 0039                                        _LCDcmd 127E  
                                      u500_20 15DB                                        u340_20 13EE  
                                      u500_21 15DA                                        u340_21 13ED  
                                      u420_25 1487                                        u501_20 153C  
                                      u501_21 153B                                        u421_25 148C  
                                      u502_20 1552                                        u422_20 1496  
                                      u502_21 1551                                        u422_21 1495  
                                      u423_20 1336                                        u423_21 1335  
                                      u440_20 0DA8                                        u424_20 1347  
                                      u360_20 09BF                                        u440_21 0DA7  
                                      u424_21 1346                                        u360_21 09BE  
                                      _INTPPS 0E90                                        u425_20 12F3  
                                      u441_20 0DAE                                        u361_20 09C9  
                                      u425_21 12F2                                        u441_21 0DAD  
                                      u361_21 09C8                                        u418_20 1457  
                                      u442_20 0DC3                                        u434_20 0CCF  
                                      u338_20 13E0                                        u362_20 09D2  
                                      u418_21 1456                                        u442_21 0DC0  
                                      u434_21 0CCE                                        u338_21 13DF  
                                      u362_21 09D1                                 main@corrupted 00B6  
                                      u435_20 0D84                                        u339_20 13E9  
                                      u363_20 09D8                                        u371_20 0DD4  
                                      u419_20 1482                                        u435_21 0D83  
                                      u339_21 13E8                                        u363_21 09D7  
                                      u371_21 0DD3                                        u419_21 1481  
                                      u443_24 0DC5                                        u436_20 0D8F  
                                      u364_20 09DD                                        u380_20 0E3C  
                                      u372_20 0DD9                                        u436_21 0D8E  
                                      u364_21 09DC                                        u380_21 0E3B  
                                      u372_21 0DD8                                        _LCDstr 1425  
                                      u437_20 0D96                                        u365_20 09E8  
                                      u381_20 0E47                                        u373_20 0DE4  
                                      u437_21 0D95                                        u365_21 09E7  
                                      u381_21 0E46                                        u373_21 0DE3  
                                      u438_20 0D9C                                        u366_20 09F1  
                                      u390_20 0E9B                                        u382_20 0E4C  
                                      u374_20 0DF4                                        u438_21 0D9B  
                                      u366_21 09F0                                        u390_21 0E9A  
                                      u382_21 0E4B                                        u374_21 0DF3  
                                      u439_20 0DA2                                        u367_20 09F5  
                                      u391_20 0EAB                                        u383_20 0E50  
                                      u375_20 0E04                                        u439_21 0DA1  
                                      u367_21 09F4                                        u391_21 0EAA  
                                      u383_21 0E4F                                        u375_21 0E03  
                                      u368_20 0A00                                        u392_20 0EBD  
                                      u384_20 0E5B                                        u376_20 0E09  
                                      u480_20 0FE7                                        u368_21 09FF  
                                      u392_21 0EBC                                        u384_21 0E5A  
                                      u376_21 0E08                                        u480_21 0FE6  
                                      u472_25 0EE5                                        u369_20 1360  
                                      u393_20 0EC3                                        u385_20 0E60  
                                      u377_20 0E14                                        u481_20 0FEC  
                                      u473_20 0EFC                                        u369_21 135F  
                                      u393_21 0EC2                                        u385_21 0E5F  
                                      u377_21 0E13                                        u481_21 0FEB  
                                      u473_21 0EFB                                        u473_25 0EF8  
                                      u394_20 0ECE                                        u386_20 0E6B  
                                      u378_20 0E24                                        u482_20 0FF1  
                                      u474_20 0F0B                                        u394_21 0ECD  
                                      u386_21 0E6A                                        u378_21 0E23  
                                      u482_21 0FF0                                        u474_21 0F0A  
                                      u474_25 0F07                                        u395_20 0ED3  
                                      u387_20 0E7B                                        u379_20 0E36  
                                      u475_20 0FA6                                        u395_21 0ED2  
                                      u387_21 0E7A                                        u379_21 0E35  
                                      u475_21 0FA5                                        u388_20 0E8B  
                                      u476_20 0FBF                                        u580_20 000F  
                                      u388_21 0E8A                                        u476_21 0FBE  
                                      u580_21 000E                                        _OSCFRQ 0893  
                                      u389_20 0E90                                        u477_20 0FC6  
                                      u581_20 0017                                        u389_21 0E8F  
                                      u477_21 0FC5                                        u581_21 0016  
                                      u478_20 0FCC                                        u590_20 0051  
                                      u582_20 001B                                        u478_21 0FCB  
                                      u590_21 0050                                        u582_21 001A  
                                      u479_20 0FD1                                        u591_20 0055  
                                      u583_20 001F                                        u479_21 0FD0  
                                      u591_21 0054                                        u583_21 001E  
                                      u496_20 13A0                                        u592_20 005A  
                                      u584_20 002A                                        u496_21 139F  
                                      u592_21 0059                                        u584_21 0029  
                                      u497_20 1389                                        u585_20 002E  
                                      u497_21 1388                                        u585_21 002D  
                                      u586_20 0039                                        u586_21 0038  
                                      u499_20 15C7                                        u587_20 003D  
                                      u579_20 000B                                        u499_21 15C6  
                                      u587_21 003C                                        u579_21 000A  
                                      u588_20 0045                                        u588_21 0044  
                                      u589_20 0049                                        u589_21 0048  
                                      _PWM6EN 1C77                                        _TX1REG 011A  
                                      _TX1STA 011E                                     ??_ReadI2C 0070  
                                      _PWM_on 00CD                                   LCDsend2x4@c 0025  
                            __end_of_editTemp 09B7          __end_of_TMR1_DefaultInterruptHandler 0003  
       __size_of_TMR1_DefaultInterruptHandler 0001                  _TMR1_DefaultInterruptHandler 0002  
                                _CCPTMRS1bits 021F                              __end_of_commands 181E  
                                      ___lmul 16B4                                        ___wmul 1517  
                           __end_of_TMR2_Stop 1251                                        _cmd_aa 1630  
                                      _cmd_ra 1787                                        _cmd_rc 15E5  
                                      _cmd_sc 0825                                        _cmd_rp 0800  
                                   ??___lwdiv 0024                                     ??___lwmod 002C  
                         __size_of_TMR2_Start 0003                           _EUSART_Transmit_ISR 15C0  
                                      _memset 14F8                       __end_of_PWM6_Initialize 1306  
                                   ??_cmd_dac 0032                                     ??_editLum 005B  
                                   ??_cmd_dtl 0032                                     ??_cmd_mta 0032  
                                   ??_cmd_mmp 0032                                     ??_cmd_rtl 0032  
                               ?_INT_CallBack 0070                       __end_of_DATAEE_ReadByte 1331  
                     __size_of_monitoring_ISR 012B                               _TMR5_StartTimer 1245  
                             _ADCC_Initialize 13A6                                _PMD_Initialize 1276  
                                   ??_isdigit 0020                             sendOKMessage@bufw 002B  
                          update_menuLCD@diff 0058                 i1DATAEE_WriteByte@GIEBitValue 0079  
           __size_of_ADCC_GetSingleConversion 0012              __size_of_INT_SetInterruptHandler 0009  
                   ?_ADCC_GetSingleConversion 0070                       __end_of_TMR2_StartTimer 1255  
     INT_SetInterruptHandler@InterruptHandler 0020      TMR5_SetInterruptHandler@InterruptHandler 0020  
    TMR1_SetInterruptHandler@InterruptHandler 0020                                     ??_sprintf 0036  
                     __end_of_TMR1_WriteTimer 1342                       ??_PWM_Output_D4_Disable 0020  
                        ?_EUSART_Transmit_ISR 0070                           __size_ofi1_WriteI2C 004B  
                            ?_TMR1_Initialize 0070                       __end_of_TMR5_Initialize 14D9  
                        __size_of_EUSART_Read 0026                             _SYSTEM_Initialize 14D9  
                     __end_of__initialization 0099                            ?_SYSTEM_Initialize 0070  
                           __end_of_Clock_ISR 0DC8                               _TMR5_WriteTimer 1342  
        __end_of_EUSART_SetTxInterruptHandler 12A1         __size_of_EUSART_SetTxInterruptHandler 0009  
                _EUSART_SetTxInterruptHandler 1298                                __pcstackCOMMON 0070  
                                __pidataBANK0 07FF                                  __pidataBANK1 12D7  
                         ??_SYSTEM_Initialize 0023                                     ?_TMR1_ISR 0070  
               ?_TMR1_DefaultInterruptHandler 0070                                     ?_TMR5_ISR 0070  
                               __end_of_getch 125D                                     ?_S1button 0070  
                            _DATAEE_WriteByte 159C                                 __end_of_putch 1276  
                          __size_of_editClock 0077               differenceBetweenTimePeriod@diff 0026  
                               __end_of_tsttc 0ED5                              ?_TMR2_Initialize 0070  
                              ??_INT_CallBack 0070               differenceBetweenTimePeriod@stop 0023  
                      __end_of_PMD_Initialize 127E                                     ?i1___wmul 0070  
                 __size_of_EXT_INT_Initialize 000E                                  ??_LCDsend2x4 0023  
                                     ??_getch 0022                     __end_of_SYSTEM_Initialize 14F8  
                       ??_EUSART_Transmit_ISR 0070                                  sprintf@width 003F  
                            update_menuLCD@tt 0051                                       ??_putch 0022  
                                     ??_tsttc 0072                                    __pbssBANK0 005F  
                                  __pbssBANK1 00BE                                    __pbssBANK2 0120  
                                  __pbssBANK3 01A0                                    __pbssBANK4 0220  
                      i1DATAEE_WriteByte@bAdd 0076                                       ?_S1_ISR 0070  
                                     ?_LCDcmd 0070                          __end_of_EUSART_Write 16B4  
                                     ?_LCDstr 0029                                  _flagS1pushed 006A  
                                     LCDcmd@c 0028                   __size_of_EUSART_Receive_ISR 0021  
                                     LCDstr@c 002E                                       LCDstr@p 0029  
                                  __pmaintext 009D                 ?_EUSART_SetTxInterruptHandler 0020  
            _EUSART_TxDefaultInterruptHandler 00E2                                       ?___lmul 0020  
                                     ?___wmul 0020                                    ??_TMR1_ISR 007B  
                     __end_of_TMR5_StartTimer 1248                                       ?_cmd_aa 002F  
                     __end_of_ADCC_Initialize 13BD                    __end_of_PWM6_LoadDutyValue 13D6  
                                  ??_TMR5_ISR 007D                                       ?_cmd_ra 002F  
                                     ?_cmd_rc 002F                                       ?_cmd_sc 002F  
                                     ?_cmd_rp 002F                                    ??_S1button 0020  
                                  __pintentry 0004                                       _ADFLTRH 0115  
                                     _ADFLTRL 0114                                       ?_memset 0020  
                          __end_of_LCDsend2x4 0CC4                                ___lmul@product 0028  
                                     _ADPREVH 008F                                       _ADPREVL 008E  
                                   ?_WriteI2C 0070                              ?_PWM6_Initialize 0070  
                                     _ADSTPTH 0113                                       _ADSTPTL 0112  
                             ?_PMD_Initialize 0070                                    ??i1___wmul 0074  
                            _sendERRORMessage 145E                              ?_DATAEE_ReadByte 0020  
                           ?_i2c1_driver_open 0070                                 _eusartRxCount 00D3  
                                     _LCDchar 12CE                                       _LCDinit 0B7A  
                                     _SP1BRGH 011C                                       _SP1BRGL 011B  
                                     _LCDsend 0A02                          __size_of_sendMessage 0023  
                          ??_i2c1_driver_open 0020                                       _INT_ISR 125D  
                                     _OSCCON1 088D                                       _OSCCON3 088F  
                                   ?_editTemp 0070                        __size_of_sendOKMessage 001B  
                                     _NVMADRH 081B                                       _NVMADRL 081A  
                                     _NVMDATH 081D                                       _OSCTUNE 0892  
                                     _NVMDATL 081C                                       _NVMCON2 081F  
                                     _PWM6DCH 038D                                       _PWM6DCL 038C  
                                     _PWM6CON 038E                                       _SSP1ADD 018D  
                                     _SLRCONA 0F3B                                       _SLRCONB 0F46  
                                     _SLRCONC 0F51                                       _SLRCOND 0F5C  
                                     _SLRCONE 0F67                                       _SSP1BUF 018C  
                                     _SSP1MSK 018E                                  ??_TMR2_Start 0020  
                     __size_of_TMR2_StopTimer 0004                              ?_TMR2_StartTimer 0070  
                            ?_TMR1_WriteTimer 0070                       __end_of_TMR5_WriteTimer 1353  
                                LCDsend2x4@hc 0026                                  LCDsend2x4@lc 0027  
                           cmd_mmp@timerValue 003C                             __end_of_editClock 07FF  
                            ?_TMR5_Initialize 0070                               __size_of_S1_ISR 0009  
                             __size_of_LCDcmd 0008                          DATAEE_WriteByte@bAdd 0020  
                          _i2c1_driver_i2cISR 00C9                               __size_of_LCDstr 001B  
                                     _ReadI2C 13D6                              ??_update_menuLCD 0043  
                  ??_TMR5_SetInterruptHandler 0022                                  ??i1_WriteI2C 0070  
                             __size_of___lmul 0034                               __size_of___wmul 0020  
                                     ___lwdiv 17C3                               __size_of_cmd_aa 002A  
                                     ___lwmod 1752                               __size_of_cmd_ra 003C  
                             __size_of_cmd_rc 0025                               __size_of_cmd_sc 003F  
                             __size_of_cmd_rp 0025                            __end_of_TMR2_Start 1245  
                                  ??_WriteI2C 0020                                       _cmd_dac 0864  
                             __size_of_memset 001F                                       _editLum 0927  
                                     _cmd_dtl 16E8                                       _cmd_mta 13F0  
                                     _cmd_mmp 0B0E                                       _cmd_rtl 1558  
                                     __ptext1 08A3                                       __ptext2 14F8  
                                     __ptext3 12E0                                       __ptext4 1259  
                                     __ptext5 160A                                       __ptext6 096F  
                                     __ptext7 0927                                       __ptext8 0788  
                                     __ptext9 03D5                                _monitoring_ISR 0ED5  
              ??_TMR1_DefaultInterruptHandler 0070                       __size_of_TMR5_StopTimer 0003  
                 __size_of_setTimer5ReloadVal 0009                                     _T1CONbits 020E  
                               cmd_dac@buffer 0031                                       _dpowers 182D  
                       _OSCILLATOR_Initialize 12AA                                     _T2CONbits 028E  
                                     _isdigit 1365                                    cmd_dac@num 002F  
           __size_of_TMR1_SetInterruptHandler 0009                                       cmd_sc@h 0033  
                                     cmd_sc@m 0034                                       cmd_sc@s 0035  
                    ??_PIN_MANAGER_Initialize 0020                     ?_TMR1_SetInterruptHandler 0020  
                                   _T2HLTbits 028F                       _INT_SetInterruptHandler 12A1  
                                   _T5CONbits 021A                                    ??_editTemp 005B  
                                  cmd_ra@buff 0033                                    cmd_rc@buff 0033  
                  __size_of_SYSTEM_Initialize 001F                                       _sprintf 05EA  
                                     clrloop0 1264                                    cmd_dtl@num 002F  
                        end_of_initialization 0099                                     _T2RSTbits 0291  
                                  cmd_rp@buff 0033                                    cmd_mta@num 002F  
                                  cmd_mmp@num 002F                            __end_ofi1_WriteI2C 0A02  
                                     init_ram 1269                                       memset@c 0020  
                                     memset@n 0022                                       memset@p 0025  
                                     initloop 126A                          __end_of_INT_CallBack 12F9  
                                  cmd_rtl@num 002F                            i1_DATAEE_WriteByte 1440  
                           _EUSART_Initialize 165A                 __size_of_PWM_Output_D4_Enable 0003  
                               _sendOKMessage 140A                            ?_EUSART_Initialize 0070  
                          _EUSART_is_rx_ready 123C                  ?_differenceBetweenTimePeriod 0020  
                         ?i1_DATAEE_WriteByte 0076                                    main@F13021 0120  
                            ?_TMR5_StartTimer 0070                              ?_ADCC_Initialize 0070  
            __end_of_ADCC_GetSingleConversion 1365                         i1___wmul@multiplicand 0072  
                      __end_of_monitoring_ISR 1000                           ??_EUSART_Initialize 0022  
              ??_EUSART_SetTxInterruptHandler 0022                           ?_EUSART_is_rx_ready 0070  
                                   _PORTCbits 000E                                     _TMR2_Stop 124E  
                       _TMR5_InterruptHandler 00D8                                     _TRISCbits 0013  
                       __size_of_EUSART_Write 002E                                 ?_toggleAlarms 0070  
                                  main@i_2655 00B9                          ??i1_DATAEE_WriteByte 0079  
                    __end_of_DATAEE_WriteByte 15C0                                 _alarmPWMStart 00E5  
                            ?_TMR5_WriteTimer 0070                       TMR5_WriteTimer@timerVal 0070  
              __size_of_PWM_Output_D4_Disable 0003                     __end_of_EUSART_Initialize 1686  
                        ??_EUSART_is_rx_ready 0020                 __end_of_PWM_Output_D4_Disable 124E  
                              __end_of_S1_ISR 128F                                __end_of_LCDcmd 1286  
                              __end_of_LCDstr 1440                                 cmd_dtl@buffer 0031  
                              LCDsend2x4@mode 0022                                 cmd_dtl@lumAux 0033  
                              ?_sendOKMessage 0070                                     _Clock_ISR 0CC4  
                              __end_of___lmul 16E8                                __end_of___wmul 1537  
                             ?_monitoring_ISR 0070                                __end_of_cmd_aa 165A  
                              __end_of_cmd_ra 17C3                                __end_of_cmd_rc 160A  
                              __end_of_cmd_sc 0864                                __end_of_cmd_rp 0825  
                                _EUSART_Write 1686                             __size_of_TMR1_ISR 0017  
                           __size_of_TMR5_ISR 0017                             __size_of_S1button 005F  
                                  ?_TMR2_Stop 0070                        ?_OSCILLATOR_Initialize 0070  
                              __end_of_memset 1517                     ??_INT_SetInterruptHandler 0022  
                             main@checkSumAux 00B4                           start_initialization 0060  
                           __size_ofi1___wmul 001F          __end_of_TMR5_DefaultInterruptHandler 0004  
       __size_of_TMR5_DefaultInterruptHandler 0001                  _TMR5_DefaultInterruptHandler 0003  
                              ??_toggleAlarms 005B               __size_of_PIN_MANAGER_Initialize 0043  
                              _TMR2_StopTimer 1255                                 ??_EUSART_Read 0020  
EUSART_SetRxInterruptHandler@interruptHandler 0020  EUSART_SetTxInterruptHandler@interruptHandler 0020  
                            WriteI2C@data_out 0021                                   putch@txData 0022  
                               cmd_mta@buffer 0031                                 cmd_mmp@buffer 0031  
                                    ??_S1_ISR 0070                                      ??_LCDcmd 0028  
                                    ??_LCDstr 002B                      __end_of_sendERRORMessage 147C  
                         DATAEE_ReadByte@bAdd 0020                  ?_INT_DefaultInterruptHandler 0070  
                    __size_of_TMR1_Initialize 001F                              ??_PMD_Initialize 0020  
                                  ?_Clock_ISR 0070                                      ??___lmul 0028  
                                    ??___wmul 0024                                      ??_cmd_aa 0032  
                                    ??_cmd_ra 0032                                      ??_cmd_rc 0032  
                                    ??_cmd_sc 0032                                      ??_cmd_rp 0032  
                                 __pdataBANK0 006F                                   __pdataBANK1 00E5  
                                    ??_memset 0024                              sendOKMessage@cmd 002A  
                  __end_of_EXT_INT_Initialize 1314                             _editingClockAlarm 0068  
                           update_menuLCD@str 0049                                _TMR5_StopTimer 1248  
                           __size_of_WriteI2C 005A                      _ADCC_GetSingleConversion 1353  
                     i1DATAEE_WriteByte@bData 0078                   __end_of_EUSART_Transmit_ISR 15E5  
                      __end_of_TMR2_StopTimer 1259                                      ?_LCDchar 0070  
                                 __pbssCOMMON 007D                                      ?_LCDinit 0070  
                                    ?_LCDsend 0070                                     ___latbits 0002  
                                    ?_INT_ISR 0070                                 __pcstackBANK0 0020  
                               __pcstackBANK1 00A0                            _PWM6_LoadDutyValue 13BD  
                    __size_of_TMR2_Initialize 000E                                  _isdigit$3115 0020  
                       __size_of_INT_CallBack 000D                 ?_TMR5_DefaultInterruptHandler 0070  
        __size_of_differenceBetweenTimePeriod 0035                                      LCDchar@c 0028  
                           __size_of_editTemp 0048                                 cmd_rtl@buffer 0031  
                  __end_of_EUSART_Receive_ISR 1558                                      LCDsend@c 0023  
                         ?_PWM6_LoadDutyValue 0020                    __size_of_EUSART_Initialize 002C  
                                 sprintf@flag 003E                     __size_of_i2c1_driver_open 000C  
                                 sprintf@prec 003B              _EUSART_RxDefaultInterruptHandler 00E0  
                             ??_sendOKMessage 0029                           __end_of_EUSART_Read 1630  
                                    ?_ReadI2C 0070                                     __pnvBANK1 00D6  
                                   _editClock 0788                              ___lwdiv@dividend 0022  
                      _PIN_MANAGER_Initialize 08E4                 ??_INT_DefaultInterruptHandler 0070  
                        EUSART_Read@readValue 0021              __end_of_TMR1_SetInterruptHandler 12BC  
             ADCC_GetSingleConversion@channel 0073                                     _dimingLed 00C7  
                                    ?___lwdiv 0020                                      ?___lwmod 0028  
                 _i2c1_driver_busCollisionISR 00CB                                  _eusartRxHead 00D5  
                      __end_of_TMR5_StopTimer 124B                                  _eusartTxHead 006E  
                                _eusartRxTail 00D4                                  _eusartTxTail 006D  
                        ??_PWM6_LoadDutyValue 0022                                      ?_cmd_dac 002F  
                                    ?_editLum 0070                                      ?_cmd_dtl 002F  
                                    ?_cmd_mta 002F                                      ?_cmd_mmp 002F  
                                cmd_aa@buffer 0031                  ??_INTERRUPT_InterruptManager 007D  
                                    ?_cmd_rtl 002F                                 ??_sendMessage 0026  
                                 ??_TMR2_Stop 0020                                  sendMessage@n 0027  
                     _eusartTxBufferRemaining 00E4                                  _INT_CallBack 12EC  
                                    _BAUD1CON 011F                                      ?_isdigit 0070  
                             ?_TMR2_StopTimer 0070                      __size_of_PWM6_Initialize 000D  
                            ___lwdiv@quotient 0025                                __size_of_getch 0004  
                                    ?_sprintf 002E                                      _T2CLKCON 0290  
                    __size_of_DATAEE_ReadByte 000F                                __size_of_putch 0007  
                                   cmd_aa@num 002F                                __size_of_tsttc 010D  
                              _eusartRxBuffer 0220                                _eusartTxBuffer 01A0  
                              ___wmul@product 0024                                     cmd_ra@num 002F  
                                    _LATAbits 0016                                     cmd_rc@num 002F  
                                   cmd_sc@num 002F                                     clear_ram0 1263  
                                   cmd_rp@num 002F                                      _PIE0bits 0716  
                                    _PIE3bits 0719                                      _PIE4bits 071A  
                    __size_of_TMR2_StartTimer 0004                                    ?_editClock 0070  
                                   _tempAlarm 00C4                                      _S1_Value 00D0  
                    __size_of_TMR1_WriteTimer 0011           __size_of_INTERRUPT_InterruptManager 005A  
                                    _PIR0bits 070C                                      _PIR3bits 070F  
                                    _PIR4bits 0710                      __size_of_TMR5_Initialize 001F  
                                 ??_Clock_ISR 007A                          __end_of_toggleAlarms 08E4  
                                    _SSP1CON1 0190                                      _SSP1CON2 0191  
                                    _TMR1_ISR 1378                                      _TMR5_ISR 138F  
                                    _S1button 0AAF                                      _SSP1STAT 018F  
                             ?_TMR5_StopTimer 0070                                     _updateLCD 006F  
                  __end_of_setTimer5ReloadVal 12CE                             ??_TMR1_Initialize 0022  
                                  _ADCON0bits 0093                                    _ADCON1bits 0094  
                              sendMessage@num 0023                                    _ADCON2bits 0095  
                                  _ADCON3bits 0096                             ___wmul@multiplier 0020  
                                    i1___wmul 147C                                  cmd_ra@buffer 0031  
                          i1WriteI2C@data_out 0071                  __end_of_PWM_Output_D4_Enable 1242  
                                cmd_rc@buffer 0031          __size_of_INT_DefaultInterruptHandler 0001  
                                cmd_sc@buffer 0031             __size_of_TMR5_SetInterruptHandler 0009  
                            __size_of_LCDchar 0009                     ?_TMR5_SetInterruptHandler 0020  
                       DATAEE_WriteByte@bData 0022                              __size_of_LCDinit 0076  
                            __size_of_LCDsend 0053                              __size_of_INT_ISR 0006  
                         __end_of_sendMessage 159C                                   _EUSART_Read 160A  
                           ___lmul@multiplier 0020                             ?_DATAEE_WriteByte 0020  
                           ??_TMR2_Initialize 0020                         setTimer5ReloadVal@val 0020  
                                cmd_rp@buffer 0031                ??_TMR5_DefaultInterruptHandler 0070  
                          ??_DATAEE_WriteByte 0023                              __size_of_ReadI2C 001A  
                                  _ADSTATbits 0097                              ??_monitoring_ISR 007A  
                     ??_OSCILLATOR_Initialize 0020                              __size_of___lwdiv 003D  
                            __size_of___lwmod 0035                                      _WriteI2C 0A55  
                    _TMR1_SetInterruptHandler 12B3                              __size_of_cmd_dac 003F  
                            __size_of_editLum 0048                              __size_of_cmd_dtl 0035  
                     __size_of_update_menuLCD 0215                              __size_of_cmd_mta 001A  
                            __size_of_cmd_mmp 006C                              __size_of_cmd_rtl 0021  
                       _TMR1_InterruptHandler 00DC                                    sprintf@val 003C  
                                    _clkAlarm 005F                      __size_of_TMR5_StartTimer 0003  
                    __size_of_ADCC_Initialize 0017                              __size_of_isdigit 0013  
                                    _editTemp 096F                               ___lwdiv@divisor 0020  
                             ___lwdiv@counter 0027                                      __ptext10 05EA  
                                    __ptext11 1365                                      __ptext20 1425  
                                    __ptext12 1517                                      __ptext21 12CE  
                                    __ptext13 1752                                    _T1GCONbits 020F  
                                    __ptext30 0800                                      __ptext22 127E  
                                    __ptext14 17C3                                      __ptext31 1558  
                                    __ptext23 0AAF                                      __ptext15 171D  
                                    __ptext40 1579                                      __ptext32 15E5  
                                    __ptext24 1630                                      __ptext16 1255  
                                    __ptext41 126F                                      __ptext33 0825  
                                    __ptext25 16E8                                      __ptext17 124E  
                                    __ptext50 12B3                                      __ptext42 1686  
                                    __ptext34 12C5                                      __ptext26 0864  
                                    __ptext18 124B                                      __ptext51 12F9  
                                    __ptext43 1251                                      __ptext35 16B4  
                                    __ptext27 1787                                      __ptext19 13BD  
                                    __ptext60 13A6                                      __ptext52 1276  
                                    __ptext44 1242                                      __ptext36 1248  
                                    __ptext28 13F0                                      __ptext61 123F  
                                    __ptext53 08E4                                      __ptext45 14D9  
                                    __ptext37 1245                                      __ptext29 0B0E  
                                    __ptext70 138F                                      __ptext62 0B7A  
                                    __ptext54 12AA                                      __ptext46 14BA  
                                    __ptext38 140A                                      __ptext71 0003  
                                    __ptext63 0BF0                                      __ptext55 1306  
                                    __ptext47 12BC                                      __ptext39 145E  
                                    __ptext80 1331                                      __ptext72 0ED5  
                                    __ptext64 0A02                                      __ptext56 12A1  
                                    __ptext48 1314                                      __ptext81 0CC4  
                                    __ptext73 147C                                      __ptext65 0A55  
                                    __ptext57 165A                                      __ptext49 149B  
                                    __ptext82 0002                                      __ptext74 0DC8  
                                    __ptext66 123C                                      __ptext58 1298  
                                    __ptext83 1440                                      __ptext75 09B7  
                                    __ptext67 159C                                      __ptext59 128F  
                                    __ptext84 125D                                      __ptext76 13D6  
                                    __ptext68 1322                                      __ptext85 12EC  
                                    __ptext77 1353                                      __ptext86 123B  
                                    __ptext78 1342                                      __ptext87 1286  
                                    __ptext79 1378                                      __ptext88 15C0  
                                    __ptext89 1537                                  _SSP1CON1bits 0190  
                                _SSP1CON2bits 0191                   __size_ofi1_DATAEE_WriteByte 001E  
                                    _commands 1800                              __size_of_sprintf 019E  
                 DATAEE_WriteByte@GIEBitValue 0023                              _i2c1_driver_open 12E0  
                                    _modeFlag 0066                             ??_PWM6_Initialize 0020  
                 __size_of_EUSART_is_rx_ready 0003                                 __size_of_main 0338  
                                  _T5GCONbits 021B                                      cmd_dac@h 0033  
                                    cmd_dac@m 0034                                      _lumAlarm 00C1  
                                    cmd_dac@s 0035                             ?_sendERRORMessage 0070  
                           ??_DATAEE_ReadByte 0022                                      _lumLevel 006B  
                       _PWM_Output_D4_Disable 124B                                   ??_editClock 005B  
                            _editingTempAlarm 00CF                      __size_of_TMR5_WriteTimer 0011  
                                  _RC1STAbits 011D                            ??_sendERRORMessage 0029  
                                    _prevTemp 00EA                                    tsttc@value 0073  
                  ??_ADCC_GetSingleConversion 0073                                      int$flags 007E  
                           ??_TMR2_StartTimer 0020            __end_of_INTERRUPT_InterruptManager 005E  
                  _INTERRUPT_InterruptManager 0004                                      main@buff 00A0  
                                _SSP1STATbits 018F                             ??_TMR1_WriteTimer 0072  
                           ??_TMR5_Initialize 0022                                   _sendMessage 1579  
                        update_menuLCD@F12913 00BE                                    _INTCONbits 000B  
                                 _NVMCON1bits 081E                                  _prevLumLevel 00E8  
                        _INT_InterruptHandler 00D6                                      isdigit@c 0021  
                                    memset@p1 0026                                    _LCDsend2x4 0BF0  
                          _EXT_INT_Initialize 1306                                   cmd_rtl@buff 0033  
                                    intlevel1 0000                                     sprintf@ap 003A  
                                   sprintf@sp 0042                              ___lwmod@dividend 002A  
                     ?_PIN_MANAGER_Initialize 0070                          sendERRORMessage@bufw 002B  
                       __size_of_toggleAlarms 0041                           ?_EXT_INT_Initialize 0070  
                             _editingLumAlarm 00CE          __end_of_EUSART_SetRxInterruptHandler 1298  
       __size_of_EUSART_SetRxInterruptHandler 0009                  _EUSART_SetRxInterruptHandler 128F  
                        _PWM_Output_D4_Enable 123F           __end_of_differenceBetweenTimePeriod 1752  
                 _differenceBetweenTimePeriod 171D                            _EUSART_Receive_ISR 1537  
                    ?_INT_SetInterruptHandler 0020                              ??_TMR2_StopTimer 0020  
                               __pstringtext1 1800                                 __pstringtext2 182D  
                               __pstringtext3 181E                                 __pstringtext4 1837  
                               __pstringtext5 183E                                 __pstringtext6 1843  
                               __pstringtext7 0000                          ??_EXT_INT_Initialize 0022  
               ??_differenceBetweenTimePeriod 0027                                      sprintf@c 0041  
                                    sprintf@f 002E                           ?_EUSART_Receive_ISR 0070  
                                  _SSP1DATPPS 0EC6                                    _SSP1CLKPPS 0EC5  
                             ___lwmod@divisor 0028                           sendERRORMessage@cmd 002A  
                             ___lwmod@counter 002D                                _idx_RingBuffer 00D1  
                 PWM6_LoadDutyValue@dutyValue 0020                                    _TX1STAbits 011E  
                                _toggleAlarms 08A3                                    _TMR2_Start 1242  
                          EUSART_Write@txData 0021                  __size_of_EUSART_Transmit_ISR 0025  
                           ??_TMR5_StartTimer 0020                __end_of_PIN_MANAGER_Initialize 0927  
                           ??_ADCC_Initialize 0020                        ?_PWM_Output_D4_Disable 0070  
                        ??_EUSART_Receive_ISR 0070                         ?_PWM_Output_D4_Enable 0070  
                             _TMR1_Initialize 149B                         __end_of_sendOKMessage 1425  
                            ??_TMR5_StopTimer 0020  
